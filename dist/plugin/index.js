import "./sourcemap-register.cjs";
import { createRequire as __WEBPACK_EXTERNAL_createRequire } from "module";
var __webpack_modules__ = {
  4914: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.issue = r.issueCommand = void 0;
    const a = i(s(857));
    const l = s(302);
    function issueCommand(e, r, s) {
      const o = new Command(e, r, s);
      process.stdout.write(o.toString() + a.EOL);
    }
    r.issueCommand = issueCommand;
    function issue(e, r = "") {
      issueCommand(e, {}, r);
    }
    r.issue = issue;
    const d = "::";
    class Command {
      constructor(e, r, s) {
        if (!e) {
          e = "missing.command";
        }
        this.command = e;
        this.properties = r;
        this.message = s;
      }
      toString() {
        let e = d + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
          e += " ";
          let r = true;
          for (const s in this.properties) {
            if (this.properties.hasOwnProperty(s)) {
              const o = this.properties[s];
              if (o) {
                if (r) {
                  r = false;
                } else {
                  e += ",";
                }
                e += `${s}=${escapeProperty(o)}`;
              }
            }
          }
        }
        e += `${d}${escapeData(this.message)}`;
        return e;
      }
    }
    function escapeData(e) {
      return (0, l.toCommandValue)(e).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A");
    }
    function escapeProperty(e) {
      return (0, l.toCommandValue)(e).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/:/g, "%3A").replace(/,/g, "%2C");
    }
  },
  7484: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.platform =
      r.toPlatformPath =
      r.toWin32Path =
      r.toPosixPath =
      r.markdownSummary =
      r.summary =
      r.getIDToken =
      r.getState =
      r.saveState =
      r.group =
      r.endGroup =
      r.startGroup =
      r.info =
      r.notice =
      r.warning =
      r.error =
      r.debug =
      r.isDebug =
      r.setFailed =
      r.setCommandEcho =
      r.setOutput =
      r.getBooleanInput =
      r.getMultilineInput =
      r.getInput =
      r.addPath =
      r.setSecret =
      r.exportVariable =
      r.ExitCode =
        void 0;
    const l = s(4914);
    const d = s(4753);
    const h = s(302);
    const p = i(s(857));
    const w = i(s(6928));
    const k = s(5306);
    var _;
    (function (e) {
      e[(e["Success"] = 0)] = "Success";
      e[(e["Failure"] = 1)] = "Failure";
    })(_ || (r.ExitCode = _ = {}));
    function exportVariable(e, r) {
      const s = (0, h.toCommandValue)(r);
      process.env[e] = s;
      const o = process.env["GITHUB_ENV"] || "";
      if (o) {
        return (0, d.issueFileCommand)("ENV", (0, d.prepareKeyValueMessage)(e, r));
      }
      (0, l.issueCommand)("set-env", { name: e }, s);
    }
    r.exportVariable = exportVariable;
    function setSecret(e) {
      (0, l.issueCommand)("add-mask", {}, e);
    }
    r.setSecret = setSecret;
    function addPath(e) {
      const r = process.env["GITHUB_PATH"] || "";
      if (r) {
        (0, d.issueFileCommand)("PATH", e);
      } else {
        (0, l.issueCommand)("add-path", {}, e);
      }
      process.env["PATH"] = `${e}${w.delimiter}${process.env["PATH"]}`;
    }
    r.addPath = addPath;
    function getInput(e, r) {
      const s = process.env[`INPUT_${e.replace(/ /g, "_").toUpperCase()}`] || "";
      if (r && r.required && !s) {
        throw new Error(`Input required and not supplied: ${e}`);
      }
      if (r && r.trimWhitespace === false) {
        return s;
      }
      return s.trim();
    }
    r.getInput = getInput;
    function getMultilineInput(e, r) {
      const s = getInput(e, r)
        .split("\n")
        .filter((e) => e !== "");
      if (r && r.trimWhitespace === false) {
        return s;
      }
      return s.map((e) => e.trim());
    }
    r.getMultilineInput = getMultilineInput;
    function getBooleanInput(e, r) {
      const s = ["true", "True", "TRUE"];
      const o = ["false", "False", "FALSE"];
      const n = getInput(e, r);
      if (s.includes(n)) return true;
      if (o.includes(n)) return false;
      throw new TypeError(
        `Input does not meet YAML 1.2 "Core Schema" specification: ${e}\n` + `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``
      );
    }
    r.getBooleanInput = getBooleanInput;
    function setOutput(e, r) {
      const s = process.env["GITHUB_OUTPUT"] || "";
      if (s) {
        return (0, d.issueFileCommand)("OUTPUT", (0, d.prepareKeyValueMessage)(e, r));
      }
      process.stdout.write(p.EOL);
      (0, l.issueCommand)("set-output", { name: e }, (0, h.toCommandValue)(r));
    }
    r.setOutput = setOutput;
    function setCommandEcho(e) {
      (0, l.issue)("echo", e ? "on" : "off");
    }
    r.setCommandEcho = setCommandEcho;
    function setFailed(e) {
      process.exitCode = _.Failure;
      error(e);
    }
    r.setFailed = setFailed;
    function isDebug() {
      return process.env["RUNNER_DEBUG"] === "1";
    }
    r.isDebug = isDebug;
    function debug(e) {
      (0, l.issueCommand)("debug", {}, e);
    }
    r.debug = debug;
    function error(e, r = {}) {
      (0, l.issueCommand)("error", (0, h.toCommandProperties)(r), e instanceof Error ? e.toString() : e);
    }
    r.error = error;
    function warning(e, r = {}) {
      (0, l.issueCommand)("warning", (0, h.toCommandProperties)(r), e instanceof Error ? e.toString() : e);
    }
    r.warning = warning;
    function notice(e, r = {}) {
      (0, l.issueCommand)("notice", (0, h.toCommandProperties)(r), e instanceof Error ? e.toString() : e);
    }
    r.notice = notice;
    function info(e) {
      process.stdout.write(e + p.EOL);
    }
    r.info = info;
    function startGroup(e) {
      (0, l.issue)("group", e);
    }
    r.startGroup = startGroup;
    function endGroup() {
      (0, l.issue)("endgroup");
    }
    r.endGroup = endGroup;
    function group(e, r) {
      return a(this, void 0, void 0, function* () {
        startGroup(e);
        let s;
        try {
          s = yield r();
        } finally {
          endGroup();
        }
        return s;
      });
    }
    r.group = group;
    function saveState(e, r) {
      const s = process.env["GITHUB_STATE"] || "";
      if (s) {
        return (0, d.issueFileCommand)("STATE", (0, d.prepareKeyValueMessage)(e, r));
      }
      (0, l.issueCommand)("save-state", { name: e }, (0, h.toCommandValue)(r));
    }
    r.saveState = saveState;
    function getState(e) {
      return process.env[`STATE_${e}`] || "";
    }
    r.getState = getState;
    function getIDToken(e) {
      return a(this, void 0, void 0, function* () {
        return yield k.OidcClient.getIDToken(e);
      });
    }
    r.getIDToken = getIDToken;
    var M = s(1847);
    Object.defineProperty(r, "summary", {
      enumerable: true,
      get: function () {
        return M.summary;
      },
    });
    var j = s(1847);
    Object.defineProperty(r, "markdownSummary", {
      enumerable: true,
      get: function () {
        return j.markdownSummary;
      },
    });
    var q = s(1976);
    Object.defineProperty(r, "toPosixPath", {
      enumerable: true,
      get: function () {
        return q.toPosixPath;
      },
    });
    Object.defineProperty(r, "toWin32Path", {
      enumerable: true,
      get: function () {
        return q.toWin32Path;
      },
    });
    Object.defineProperty(r, "toPlatformPath", {
      enumerable: true,
      get: function () {
        return q.toPlatformPath;
      },
    });
    r.platform = i(s(8968));
  },
  4753: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.prepareKeyValueMessage = r.issueFileCommand = void 0;
    const a = i(s(6982));
    const l = i(s(9896));
    const d = i(s(857));
    const h = s(302);
    function issueFileCommand(e, r) {
      const s = process.env[`GITHUB_${e}`];
      if (!s) {
        throw new Error(`Unable to find environment variable for file command ${e}`);
      }
      if (!l.existsSync(s)) {
        throw new Error(`Missing file at path: ${s}`);
      }
      l.appendFileSync(s, `${(0, h.toCommandValue)(r)}${d.EOL}`, { encoding: "utf8" });
    }
    r.issueFileCommand = issueFileCommand;
    function prepareKeyValueMessage(e, r) {
      const s = `ghadelimiter_${a.randomUUID()}`;
      const o = (0, h.toCommandValue)(r);
      if (e.includes(s)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${s}"`);
      }
      if (o.includes(s)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${s}"`);
      }
      return `${e}<<${s}${d.EOL}${o}${d.EOL}${s}`;
    }
    r.prepareKeyValueMessage = prepareKeyValueMessage;
  },
  5306: function (e, r, s) {
    var o =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.OidcClient = void 0;
    const n = s(4844);
    const i = s(4552);
    const a = s(7484);
    class OidcClient {
      static createHttpClient(e = true, r = 10) {
        const s = { allowRetries: e, maxRetries: r };
        return new n.HttpClient("actions/oidc-client", [new i.BearerCredentialHandler(OidcClient.getRequestToken())], s);
      }
      static getRequestToken() {
        const e = process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];
        if (!e) {
          throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable");
        }
        return e;
      }
      static getIDTokenUrl() {
        const e = process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];
        if (!e) {
          throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable");
        }
        return e;
      }
      static getCall(e) {
        var r;
        return o(this, void 0, void 0, function* () {
          const s = OidcClient.createHttpClient();
          const o = yield s.getJson(e).catch((e) => {
            throw new Error(`Failed to get ID Token. \n \n        Error Code : ${e.statusCode}\n \n        Error Message: ${e.message}`);
          });
          const n = (r = o.result) === null || r === void 0 ? void 0 : r.value;
          if (!n) {
            throw new Error("Response json body do not have ID Token field");
          }
          return n;
        });
      }
      static getIDToken(e) {
        return o(this, void 0, void 0, function* () {
          try {
            let r = OidcClient.getIDTokenUrl();
            if (e) {
              const s = encodeURIComponent(e);
              r = `${r}&audience=${s}`;
            }
            (0, a.debug)(`ID token url is ${r}`);
            const s = yield OidcClient.getCall(r);
            (0, a.setSecret)(s);
            return s;
          } catch (e) {
            throw new Error(`Error message: ${e.message}`);
          }
        });
      }
    }
    r.OidcClient = OidcClient;
  },
  1976: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.toPlatformPath = r.toWin32Path = r.toPosixPath = void 0;
    const a = i(s(6928));
    function toPosixPath(e) {
      return e.replace(/[\\]/g, "/");
    }
    r.toPosixPath = toPosixPath;
    function toWin32Path(e) {
      return e.replace(/[/]/g, "\\");
    }
    r.toWin32Path = toWin32Path;
    function toPlatformPath(e) {
      return e.replace(/[/\\]/g, a.sep);
    }
    r.toPlatformPath = toPlatformPath;
  },
  8968: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    var l =
      (this && this.__importDefault) ||
      function (e) {
        return e && e.__esModule ? e : { default: e };
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.getDetails = r.isLinux = r.isMacOS = r.isWindows = r.arch = r.platform = void 0;
    const d = l(s(857));
    const h = i(s(5236));
    const getWindowsInfo = () =>
      a(void 0, void 0, void 0, function* () {
        const { stdout: e } = yield h.getExecOutput('powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Version"', undefined, {
          silent: true,
        });
        const { stdout: r } = yield h.getExecOutput('powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Caption"', undefined, {
          silent: true,
        });
        return { name: r.trim(), version: e.trim() };
      });
    const getMacOsInfo = () =>
      a(void 0, void 0, void 0, function* () {
        var e, r, s, o;
        const { stdout: n } = yield h.getExecOutput("sw_vers", undefined, { silent: true });
        const i = (r = (e = n.match(/ProductVersion:\s*(.+)/)) === null || e === void 0 ? void 0 : e[1]) !== null && r !== void 0 ? r : "";
        const a = (o = (s = n.match(/ProductName:\s*(.+)/)) === null || s === void 0 ? void 0 : s[1]) !== null && o !== void 0 ? o : "";
        return { name: a, version: i };
      });
    const getLinuxInfo = () =>
      a(void 0, void 0, void 0, function* () {
        const { stdout: e } = yield h.getExecOutput("lsb_release", ["-i", "-r", "-s"], { silent: true });
        const [r, s] = e.trim().split("\n");
        return { name: r, version: s };
      });
    r.platform = d.default.platform();
    r.arch = d.default.arch();
    r.isWindows = r.platform === "win32";
    r.isMacOS = r.platform === "darwin";
    r.isLinux = r.platform === "linux";
    function getDetails() {
      return a(this, void 0, void 0, function* () {
        return Object.assign(Object.assign({}, yield r.isWindows ? getWindowsInfo() : r.isMacOS ? getMacOsInfo() : getLinuxInfo()), {
          platform: r.platform,
          arch: r.arch,
          isWindows: r.isWindows,
          isMacOS: r.isMacOS,
          isLinux: r.isLinux,
        });
      });
    }
    r.getDetails = getDetails;
  },
  1847: function (e, r, s) {
    var o =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.summary = r.markdownSummary = r.SUMMARY_DOCS_URL = r.SUMMARY_ENV_VAR = void 0;
    const n = s(857);
    const i = s(9896);
    const { access: a, appendFile: l, writeFile: d } = i.promises;
    r.SUMMARY_ENV_VAR = "GITHUB_STEP_SUMMARY";
    r.SUMMARY_DOCS_URL = "https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";
    class Summary {
      constructor() {
        this._buffer = "";
      }
      filePath() {
        return o(this, void 0, void 0, function* () {
          if (this._filePath) {
            return this._filePath;
          }
          const e = process.env[r.SUMMARY_ENV_VAR];
          if (!e) {
            throw new Error(`Unable to find environment variable for $${r.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
          }
          try {
            yield a(e, i.constants.R_OK | i.constants.W_OK);
          } catch (r) {
            throw new Error(`Unable to access summary file: '${e}'. Check if the file has correct read/write permissions.`);
          }
          this._filePath = e;
          return this._filePath;
        });
      }
      wrap(e, r, s = {}) {
        const o = Object.entries(s)
          .map(([e, r]) => ` ${e}="${r}"`)
          .join("");
        if (!r) {
          return `<${e}${o}>`;
        }
        return `<${e}${o}>${r}</${e}>`;
      }
      write(e) {
        return o(this, void 0, void 0, function* () {
          const r = !!(e === null || e === void 0 ? void 0 : e.overwrite);
          const s = yield this.filePath();
          const o = r ? d : l;
          yield o(s, this._buffer, { encoding: "utf8" });
          return this.emptyBuffer();
        });
      }
      clear() {
        return o(this, void 0, void 0, function* () {
          return this.emptyBuffer().write({ overwrite: true });
        });
      }
      stringify() {
        return this._buffer;
      }
      isEmptyBuffer() {
        return this._buffer.length === 0;
      }
      emptyBuffer() {
        this._buffer = "";
        return this;
      }
      addRaw(e, r = false) {
        this._buffer += e;
        return r ? this.addEOL() : this;
      }
      addEOL() {
        return this.addRaw(n.EOL);
      }
      addCodeBlock(e, r) {
        const s = Object.assign({}, r && { lang: r });
        const o = this.wrap("pre", this.wrap("code", e), s);
        return this.addRaw(o).addEOL();
      }
      addList(e, r = false) {
        const s = r ? "ol" : "ul";
        const o = e.map((e) => this.wrap("li", e)).join("");
        const n = this.wrap(s, o);
        return this.addRaw(n).addEOL();
      }
      addTable(e) {
        const r = e
          .map((e) => {
            const r = e
              .map((e) => {
                if (typeof e === "string") {
                  return this.wrap("td", e);
                }
                const { header: r, data: s, colspan: o, rowspan: n } = e;
                const i = r ? "th" : "td";
                const a = Object.assign(Object.assign({}, o && { colspan: o }), n && { rowspan: n });
                return this.wrap(i, s, a);
              })
              .join("");
            return this.wrap("tr", r);
          })
          .join("");
        const s = this.wrap("table", r);
        return this.addRaw(s).addEOL();
      }
      addDetails(e, r) {
        const s = this.wrap("details", this.wrap("summary", e) + r);
        return this.addRaw(s).addEOL();
      }
      addImage(e, r, s) {
        const { width: o, height: n } = s || {};
        const i = Object.assign(Object.assign({}, o && { width: o }), n && { height: n });
        const a = this.wrap("img", null, Object.assign({ src: e, alt: r }, i));
        return this.addRaw(a).addEOL();
      }
      addHeading(e, r) {
        const s = `h${r}`;
        const o = ["h1", "h2", "h3", "h4", "h5", "h6"].includes(s) ? s : "h1";
        const n = this.wrap(o, e);
        return this.addRaw(n).addEOL();
      }
      addSeparator() {
        const e = this.wrap("hr", null);
        return this.addRaw(e).addEOL();
      }
      addBreak() {
        const e = this.wrap("br", null);
        return this.addRaw(e).addEOL();
      }
      addQuote(e, r) {
        const s = Object.assign({}, r && { cite: r });
        const o = this.wrap("blockquote", e, s);
        return this.addRaw(o).addEOL();
      }
      addLink(e, r) {
        const s = this.wrap("a", e, { href: r });
        return this.addRaw(s).addEOL();
      }
    }
    const h = new Summary();
    r.markdownSummary = h;
    r.summary = h;
  },
  302: (e, r) => {
    Object.defineProperty(r, "__esModule", { value: true });
    r.toCommandProperties = r.toCommandValue = void 0;
    function toCommandValue(e) {
      if (e === null || e === undefined) {
        return "";
      } else if (typeof e === "string" || e instanceof String) {
        return e;
      }
      return JSON.stringify(e);
    }
    r.toCommandValue = toCommandValue;
    function toCommandProperties(e) {
      if (!Object.keys(e).length) {
        return {};
      }
      return { title: e.title, file: e.file, line: e.startLine, endLine: e.endLine, col: e.startColumn, endColumn: e.endColumn };
    }
    r.toCommandProperties = toCommandProperties;
  },
  5236: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            Object.defineProperty(e, o, {
              enumerable: true,
              get: function () {
                return r[s];
              },
            });
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.getExecOutput = r.exec = void 0;
    const l = s(3193);
    const d = i(s(6665));
    function exec(e, r, s) {
      return a(this, void 0, void 0, function* () {
        const o = d.argStringToArray(e);
        if (o.length === 0) {
          throw new Error(`Parameter 'commandLine' cannot be null or empty.`);
        }
        const n = o[0];
        r = o.slice(1).concat(r || []);
        const i = new d.ToolRunner(n, r, s);
        return i.exec();
      });
    }
    r.exec = exec;
    function getExecOutput(e, r, s) {
      var o, n;
      return a(this, void 0, void 0, function* () {
        let i = "";
        let a = "";
        const d = new l.StringDecoder("utf8");
        const h = new l.StringDecoder("utf8");
        const p = (o = s === null || s === void 0 ? void 0 : s.listeners) === null || o === void 0 ? void 0 : o.stdout;
        const w = (n = s === null || s === void 0 ? void 0 : s.listeners) === null || n === void 0 ? void 0 : n.stderr;
        const stdErrListener = (e) => {
          a += h.write(e);
          if (w) {
            w(e);
          }
        };
        const stdOutListener = (e) => {
          i += d.write(e);
          if (p) {
            p(e);
          }
        };
        const k = Object.assign(Object.assign({}, s === null || s === void 0 ? void 0 : s.listeners), { stdout: stdOutListener, stderr: stdErrListener });
        const _ = yield exec(e, r, Object.assign(Object.assign({}, s), { listeners: k }));
        i += d.end();
        a += h.end();
        return { exitCode: _, stdout: i, stderr: a };
      });
    }
    r.getExecOutput = getExecOutput;
  },
  6665: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            Object.defineProperty(e, o, {
              enumerable: true,
              get: function () {
                return r[s];
              },
            });
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.argStringToArray = r.ToolRunner = void 0;
    const l = i(s(857));
    const d = i(s(4434));
    const h = i(s(5317));
    const p = i(s(6928));
    const w = i(s(4994));
    const k = i(s(5207));
    const _ = s(3557);
    const M = process.platform === "win32";
    class ToolRunner extends d.EventEmitter {
      constructor(e, r, s) {
        super();
        if (!e) {
          throw new Error("Parameter 'toolPath' cannot be null or empty.");
        }
        this.toolPath = e;
        this.args = r || [];
        this.options = s || {};
      }
      _debug(e) {
        if (this.options.listeners && this.options.listeners.debug) {
          this.options.listeners.debug(e);
        }
      }
      _getCommandString(e, r) {
        const s = this._getSpawnFileName();
        const o = this._getSpawnArgs(e);
        let n = r ? "" : "[command]";
        if (M) {
          if (this._isCmdFile()) {
            n += s;
            for (const e of o) {
              n += ` ${e}`;
            }
          } else if (e.windowsVerbatimArguments) {
            n += `"${s}"`;
            for (const e of o) {
              n += ` ${e}`;
            }
          } else {
            n += this._windowsQuoteCmdArg(s);
            for (const e of o) {
              n += ` ${this._windowsQuoteCmdArg(e)}`;
            }
          }
        } else {
          n += s;
          for (const e of o) {
            n += ` ${e}`;
          }
        }
        return n;
      }
      _processLineBuffer(e, r, s) {
        try {
          let o = r + e.toString();
          let n = o.indexOf(l.EOL);
          while (n > -1) {
            const e = o.substring(0, n);
            s(e);
            o = o.substring(n + l.EOL.length);
            n = o.indexOf(l.EOL);
          }
          return o;
        } catch (e) {
          this._debug(`error processing line. Failed with error ${e}`);
          return "";
        }
      }
      _getSpawnFileName() {
        if (M) {
          if (this._isCmdFile()) {
            return process.env["COMSPEC"] || "cmd.exe";
          }
        }
        return this.toolPath;
      }
      _getSpawnArgs(e) {
        if (M) {
          if (this._isCmdFile()) {
            let r = `/D /S /C "${this._windowsQuoteCmdArg(this.toolPath)}`;
            for (const s of this.args) {
              r += " ";
              r += e.windowsVerbatimArguments ? s : this._windowsQuoteCmdArg(s);
            }
            r += '"';
            return [r];
          }
        }
        return this.args;
      }
      _endsWith(e, r) {
        return e.endsWith(r);
      }
      _isCmdFile() {
        const e = this.toolPath.toUpperCase();
        return this._endsWith(e, ".CMD") || this._endsWith(e, ".BAT");
      }
      _windowsQuoteCmdArg(e) {
        if (!this._isCmdFile()) {
          return this._uvQuoteCmdArg(e);
        }
        if (!e) {
          return '""';
        }
        const r = [" ", "\t", "&", "(", ")", "[", "]", "{", "}", "^", "=", ";", "!", "'", "+", ",", "`", "~", "|", "<", ">", '"'];
        let s = false;
        for (const o of e) {
          if (r.some((e) => e === o)) {
            s = true;
            break;
          }
        }
        if (!s) {
          return e;
        }
        let o = '"';
        let n = true;
        for (let r = e.length; r > 0; r--) {
          o += e[r - 1];
          if (n && e[r - 1] === "\\") {
            o += "\\";
          } else if (e[r - 1] === '"') {
            n = true;
            o += '"';
          } else {
            n = false;
          }
        }
        o += '"';
        return o.split("").reverse().join("");
      }
      _uvQuoteCmdArg(e) {
        if (!e) {
          return '""';
        }
        if (!e.includes(" ") && !e.includes("\t") && !e.includes('"')) {
          return e;
        }
        if (!e.includes('"') && !e.includes("\\")) {
          return `"${e}"`;
        }
        let r = '"';
        let s = true;
        for (let o = e.length; o > 0; o--) {
          r += e[o - 1];
          if (s && e[o - 1] === "\\") {
            r += "\\";
          } else if (e[o - 1] === '"') {
            s = true;
            r += "\\";
          } else {
            s = false;
          }
        }
        r += '"';
        return r.split("").reverse().join("");
      }
      _cloneExecOptions(e) {
        e = e || {};
        const r = {
          cwd: e.cwd || process.cwd(),
          env: e.env || process.env,
          silent: e.silent || false,
          windowsVerbatimArguments: e.windowsVerbatimArguments || false,
          failOnStdErr: e.failOnStdErr || false,
          ignoreReturnCode: e.ignoreReturnCode || false,
          delay: e.delay || 1e4,
        };
        r.outStream = e.outStream || process.stdout;
        r.errStream = e.errStream || process.stderr;
        return r;
      }
      _getSpawnOptions(e, r) {
        e = e || {};
        const s = {};
        s.cwd = e.cwd;
        s.env = e.env;
        s["windowsVerbatimArguments"] = e.windowsVerbatimArguments || this._isCmdFile();
        if (e.windowsVerbatimArguments) {
          s.argv0 = `"${r}"`;
        }
        return s;
      }
      exec() {
        return a(this, void 0, void 0, function* () {
          if (!k.isRooted(this.toolPath) && (this.toolPath.includes("/") || (M && this.toolPath.includes("\\")))) {
            this.toolPath = p.resolve(process.cwd(), this.options.cwd || process.cwd(), this.toolPath);
          }
          this.toolPath = yield w.which(this.toolPath, true);
          return new Promise((e, r) =>
            a(this, void 0, void 0, function* () {
              this._debug(`exec tool: ${this.toolPath}`);
              this._debug("arguments:");
              for (const e of this.args) {
                this._debug(`   ${e}`);
              }
              const s = this._cloneExecOptions(this.options);
              if (!s.silent && s.outStream) {
                s.outStream.write(this._getCommandString(s) + l.EOL);
              }
              const o = new ExecState(s, this.toolPath);
              o.on("debug", (e) => {
                this._debug(e);
              });
              if (this.options.cwd && !(yield k.exists(this.options.cwd))) {
                return r(new Error(`The cwd: ${this.options.cwd} does not exist!`));
              }
              const n = this._getSpawnFileName();
              const i = h.spawn(n, this._getSpawnArgs(s), this._getSpawnOptions(this.options, n));
              let a = "";
              if (i.stdout) {
                i.stdout.on("data", (e) => {
                  if (this.options.listeners && this.options.listeners.stdout) {
                    this.options.listeners.stdout(e);
                  }
                  if (!s.silent && s.outStream) {
                    s.outStream.write(e);
                  }
                  a = this._processLineBuffer(e, a, (e) => {
                    if (this.options.listeners && this.options.listeners.stdline) {
                      this.options.listeners.stdline(e);
                    }
                  });
                });
              }
              let d = "";
              if (i.stderr) {
                i.stderr.on("data", (e) => {
                  o.processStderr = true;
                  if (this.options.listeners && this.options.listeners.stderr) {
                    this.options.listeners.stderr(e);
                  }
                  if (!s.silent && s.errStream && s.outStream) {
                    const r = s.failOnStdErr ? s.errStream : s.outStream;
                    r.write(e);
                  }
                  d = this._processLineBuffer(e, d, (e) => {
                    if (this.options.listeners && this.options.listeners.errline) {
                      this.options.listeners.errline(e);
                    }
                  });
                });
              }
              i.on("error", (e) => {
                o.processError = e.message;
                o.processExited = true;
                o.processClosed = true;
                o.CheckComplete();
              });
              i.on("exit", (e) => {
                o.processExitCode = e;
                o.processExited = true;
                this._debug(`Exit code ${e} received from tool '${this.toolPath}'`);
                o.CheckComplete();
              });
              i.on("close", (e) => {
                o.processExitCode = e;
                o.processExited = true;
                o.processClosed = true;
                this._debug(`STDIO streams have closed for tool '${this.toolPath}'`);
                o.CheckComplete();
              });
              o.on("done", (s, o) => {
                if (a.length > 0) {
                  this.emit("stdline", a);
                }
                if (d.length > 0) {
                  this.emit("errline", d);
                }
                i.removeAllListeners();
                if (s) {
                  r(s);
                } else {
                  e(o);
                }
              });
              if (this.options.input) {
                if (!i.stdin) {
                  throw new Error("child process missing stdin");
                }
                i.stdin.end(this.options.input);
              }
            })
          );
        });
      }
    }
    r.ToolRunner = ToolRunner;
    function argStringToArray(e) {
      const r = [];
      let s = false;
      let o = false;
      let n = "";
      function append(e) {
        if (o && e !== '"') {
          n += "\\";
        }
        n += e;
        o = false;
      }
      for (let i = 0; i < e.length; i++) {
        const a = e.charAt(i);
        if (a === '"') {
          if (!o) {
            s = !s;
          } else {
            append(a);
          }
          continue;
        }
        if (a === "\\" && o) {
          append(a);
          continue;
        }
        if (a === "\\" && s) {
          o = true;
          continue;
        }
        if (a === " " && !s) {
          if (n.length > 0) {
            r.push(n);
            n = "";
          }
          continue;
        }
        append(a);
      }
      if (n.length > 0) {
        r.push(n.trim());
      }
      return r;
    }
    r.argStringToArray = argStringToArray;
    class ExecState extends d.EventEmitter {
      constructor(e, r) {
        super();
        this.processClosed = false;
        this.processError = "";
        this.processExitCode = 0;
        this.processExited = false;
        this.processStderr = false;
        this.delay = 1e4;
        this.done = false;
        this.timeout = null;
        if (!r) {
          throw new Error("toolPath must not be empty");
        }
        this.options = e;
        this.toolPath = r;
        if (e.delay) {
          this.delay = e.delay;
        }
      }
      CheckComplete() {
        if (this.done) {
          return;
        }
        if (this.processClosed) {
          this._setResult();
        } else if (this.processExited) {
          this.timeout = _.setTimeout(ExecState.HandleTimeout, this.delay, this);
        }
      }
      _debug(e) {
        this.emit("debug", e);
      }
      _setResult() {
        let e;
        if (this.processExited) {
          if (this.processError) {
            e = new Error(
              `There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`
            );
          } else if (this.processExitCode !== 0 && !this.options.ignoreReturnCode) {
            e = new Error(`The process '${this.toolPath}' failed with exit code ${this.processExitCode}`);
          } else if (this.processStderr && this.options.failOnStdErr) {
            e = new Error(`The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`);
          }
        }
        if (this.timeout) {
          clearTimeout(this.timeout);
          this.timeout = null;
        }
        this.done = true;
        this.emit("done", e, this.processExitCode);
      }
      static HandleTimeout(e) {
        if (e.done) {
          return;
        }
        if (!e.processClosed && e.processExited) {
          const r = `The STDIO streams did not close within ${e.delay / 1e3} seconds of the exit event from process '${e.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`;
          e._debug(r);
        }
        e._setResult();
      }
    }
  },
  1648: (e, r, s) => {
    Object.defineProperty(r, "__esModule", { value: true });
    r.Context = void 0;
    const o = s(9896);
    const n = s(857);
    class Context {
      constructor() {
        var e, r, s;
        this.payload = {};
        if (process.env.GITHUB_EVENT_PATH) {
          if ((0, o.existsSync)(process.env.GITHUB_EVENT_PATH)) {
            this.payload = JSON.parse((0, o.readFileSync)(process.env.GITHUB_EVENT_PATH, { encoding: "utf8" }));
          } else {
            const e = process.env.GITHUB_EVENT_PATH;
            process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${n.EOL}`);
          }
        }
        this.eventName = process.env.GITHUB_EVENT_NAME;
        this.sha = process.env.GITHUB_SHA;
        this.ref = process.env.GITHUB_REF;
        this.workflow = process.env.GITHUB_WORKFLOW;
        this.action = process.env.GITHUB_ACTION;
        this.actor = process.env.GITHUB_ACTOR;
        this.job = process.env.GITHUB_JOB;
        this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10);
        this.runId = parseInt(process.env.GITHUB_RUN_ID, 10);
        this.apiUrl = (e = process.env.GITHUB_API_URL) !== null && e !== void 0 ? e : `https://api.github.com`;
        this.serverUrl = (r = process.env.GITHUB_SERVER_URL) !== null && r !== void 0 ? r : `https://github.com`;
        this.graphqlUrl = (s = process.env.GITHUB_GRAPHQL_URL) !== null && s !== void 0 ? s : `https://api.github.com/graphql`;
      }
      get issue() {
        const e = this.payload;
        return Object.assign(Object.assign({}, this.repo), { number: (e.issue || e.pull_request || e).number });
      }
      get repo() {
        if (process.env.GITHUB_REPOSITORY) {
          const [e, r] = process.env.GITHUB_REPOSITORY.split("/");
          return { owner: e, repo: r };
        }
        if (this.payload.repository) {
          return { owner: this.payload.repository.owner.login, repo: this.payload.repository.name };
        }
        throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'");
      }
    }
    r.Context = Context;
  },
  3228: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.getOctokit = r.context = void 0;
    const a = i(s(1648));
    const l = s(8006);
    r.context = new a.Context();
    function getOctokit(e, r, ...s) {
      const o = l.GitHub.plugin(...s);
      return new o((0, l.getOctokitOptions)(e, r));
    }
    r.getOctokit = getOctokit;
  },
  5156: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.getApiBaseUrl = r.getProxyFetch = r.getProxyAgentDispatcher = r.getProxyAgent = r.getAuthString = void 0;
    const l = i(s(4844));
    const d = s(6752);
    function getAuthString(e, r) {
      if (!e && !r.auth) {
        throw new Error("Parameter token or opts.auth is required");
      } else if (e && r.auth) {
        throw new Error("Parameters token and opts.auth may not both be specified");
      }
      return typeof r.auth === "string" ? r.auth : `token ${e}`;
    }
    r.getAuthString = getAuthString;
    function getProxyAgent(e) {
      const r = new l.HttpClient();
      return r.getAgent(e);
    }
    r.getProxyAgent = getProxyAgent;
    function getProxyAgentDispatcher(e) {
      const r = new l.HttpClient();
      return r.getAgentDispatcher(e);
    }
    r.getProxyAgentDispatcher = getProxyAgentDispatcher;
    function getProxyFetch(e) {
      const r = getProxyAgentDispatcher(e);
      const proxyFetch = (e, s) =>
        a(this, void 0, void 0, function* () {
          return (0, d.fetch)(e, Object.assign(Object.assign({}, s), { dispatcher: r }));
        });
      return proxyFetch;
    }
    r.getProxyFetch = getProxyFetch;
    function getApiBaseUrl() {
      return process.env["GITHUB_API_URL"] || "https://api.github.com";
    }
    r.getApiBaseUrl = getApiBaseUrl;
  },
  8006: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.getOctokitOptions = r.GitHub = r.defaults = r.context = void 0;
    const a = i(s(1648));
    const l = i(s(5156));
    const d = s(8452);
    const h = s(5726);
    const p = s(7731);
    r.context = new a.Context();
    const w = l.getApiBaseUrl();
    r.defaults = { baseUrl: w, request: { agent: l.getProxyAgent(w), fetch: l.getProxyFetch(w) } };
    r.GitHub = d.Octokit.plugin(h.restEndpointMethods, p.paginateRest).defaults(r.defaults);
    function getOctokitOptions(e, r) {
      const s = Object.assign({}, r || {});
      const o = l.getAuthString(e, s);
      if (o) {
        s.auth = o;
      }
      return s;
    }
    r.getOctokitOptions = getOctokitOptions;
  },
  8452: (e, r, s) => {
    var o = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var a = Object.prototype.hasOwnProperty;
    var __export = (e, r) => {
      for (var s in r) o(e, s, { get: r[s], enumerable: true });
    };
    var __copyProps = (e, r, s, l) => {
      if ((r && typeof r === "object") || typeof r === "function") {
        for (let d of i(r)) if (!a.call(e, d) && d !== s) o(e, d, { get: () => r[d], enumerable: !(l = n(r, d)) || l.enumerable });
      }
      return e;
    };
    var __toCommonJS = (e) => __copyProps(o({}, "__esModule", { value: true }), e);
    var l = {};
    __export(l, { Octokit: () => $ });
    e.exports = __toCommonJS(l);
    var d = s(9071);
    var h = s(6256);
    var p = s(9755);
    var w = s(9699);
    var k = s(3844);
    var _ = "5.2.0";
    var noop = () => {};
    var M = console.warn.bind(console);
    var j = console.error.bind(console);
    var q = `octokit-core.js/${_} ${(0, d.getUserAgent)()}`;
    var $ = class {
      static {
        this.VERSION = _;
      }
      static defaults(e) {
        const r = class extends this {
          constructor(...r) {
            const s = r[0] || {};
            if (typeof e === "function") {
              super(e(s));
              return;
            }
            super(Object.assign({}, e, s, s.userAgent && e.userAgent ? { userAgent: `${s.userAgent} ${e.userAgent}` } : null));
          }
        };
        return r;
      }
      static {
        this.plugins = [];
      }
      static plugin(...e) {
        const r = this.plugins;
        const s = class extends this {
          static {
            this.plugins = r.concat(e.filter((e) => !r.includes(e)));
          }
        };
        return s;
      }
      constructor(e = {}) {
        const r = new h.Collection();
        const s = {
          baseUrl: p.request.endpoint.DEFAULTS.baseUrl,
          headers: {},
          request: Object.assign({}, e.request, { hook: r.bind(null, "request") }),
          mediaType: { previews: [], format: "" },
        };
        s.headers["user-agent"] = e.userAgent ? `${e.userAgent} ${q}` : q;
        if (e.baseUrl) {
          s.baseUrl = e.baseUrl;
        }
        if (e.previews) {
          s.mediaType.previews = e.previews;
        }
        if (e.timeZone) {
          s.headers["time-zone"] = e.timeZone;
        }
        this.request = p.request.defaults(s);
        this.graphql = (0, w.withCustomRequest)(this.request).defaults(s);
        this.log = Object.assign({ debug: noop, info: noop, warn: M, error: j }, e.log);
        this.hook = r;
        if (!e.authStrategy) {
          if (!e.auth) {
            this.auth = async () => ({ type: "unauthenticated" });
          } else {
            const s = (0, k.createTokenAuth)(e.auth);
            r.wrap("request", s.hook);
            this.auth = s;
          }
        } else {
          const { authStrategy: s, ...o } = e;
          const n = s(Object.assign({ request: this.request, log: this.log, octokit: this, octokitOptions: o }, e.auth));
          r.wrap("request", n.hook);
          this.auth = n;
        }
        const o = this.constructor;
        for (let r = 0; r < o.plugins.length; ++r) {
          Object.assign(this, o.plugins[r](this, e));
        }
      }
    };
    0 && 0;
  },
  3844: (e) => {
    var r = Object.defineProperty;
    var s = Object.getOwnPropertyDescriptor;
    var o = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var __export = (e, s) => {
      for (var o in s) r(e, o, { get: s[o], enumerable: true });
    };
    var __copyProps = (e, i, a, l) => {
      if ((i && typeof i === "object") || typeof i === "function") {
        for (let d of o(i)) if (!n.call(e, d) && d !== a) r(e, d, { get: () => i[d], enumerable: !(l = s(i, d)) || l.enumerable });
      }
      return e;
    };
    var __toCommonJS = (e) => __copyProps(r({}, "__esModule", { value: true }), e);
    var i = {};
    __export(i, { createTokenAuth: () => h });
    e.exports = __toCommonJS(i);
    var a = /^v1\./;
    var l = /^ghs_/;
    var d = /^ghu_/;
    async function auth(e) {
      const r = e.split(/\./).length === 3;
      const s = a.test(e) || l.test(e);
      const o = d.test(e);
      const n = r ? "app" : s ? "installation" : o ? "user-to-server" : "oauth";
      return { type: "token", token: e, tokenType: n };
    }
    function withAuthorizationPrefix(e) {
      if (e.split(/\./).length === 3) {
        return `bearer ${e}`;
      }
      return `token ${e}`;
    }
    async function hook(e, r, s, o) {
      const n = r.endpoint.merge(s, o);
      n.headers.authorization = withAuthorizationPrefix(e);
      return r(n);
    }
    var h = function createTokenAuth2(e) {
      if (!e) {
        throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
      }
      if (typeof e !== "string") {
        throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");
      }
      e = e.replace(/^(token|bearer) +/i, "");
      return Object.assign(auth.bind(null, e), { hook: hook.bind(null, e) });
    };
    0 && 0;
  },
  9699: (e, r, s) => {
    var o = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var a = Object.prototype.hasOwnProperty;
    var __export = (e, r) => {
      for (var s in r) o(e, s, { get: r[s], enumerable: true });
    };
    var __copyProps = (e, r, s, l) => {
      if ((r && typeof r === "object") || typeof r === "function") {
        for (let d of i(r)) if (!a.call(e, d) && d !== s) o(e, d, { get: () => r[d], enumerable: !(l = n(r, d)) || l.enumerable });
      }
      return e;
    };
    var __toCommonJS = (e) => __copyProps(o({}, "__esModule", { value: true }), e);
    var l = {};
    __export(l, { GraphqlResponseError: () => _, graphql: () => $, withCustomRequest: () => withCustomRequest });
    e.exports = __toCommonJS(l);
    var d = s(9755);
    var h = s(9071);
    var p = "7.1.0";
    var w = s(9755);
    var k = s(9755);
    function _buildMessageForResponseErrors(e) {
      return `Request failed due to following response errors:\n` + e.errors.map((e) => ` - ${e.message}`).join("\n");
    }
    var _ = class extends Error {
      constructor(e, r, s) {
        super(_buildMessageForResponseErrors(s));
        this.request = e;
        this.headers = r;
        this.response = s;
        this.name = "GraphqlResponseError";
        this.errors = s.errors;
        this.data = s.data;
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, this.constructor);
        }
      }
    };
    var M = ["method", "baseUrl", "url", "headers", "request", "query", "mediaType"];
    var j = ["query", "method", "url"];
    var q = /\/api\/v3\/?$/;
    function graphql(e, r, s) {
      if (s) {
        if (typeof r === "string" && "query" in s) {
          return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
        }
        for (const e in s) {
          if (!j.includes(e)) continue;
          return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`));
        }
      }
      const o = typeof r === "string" ? Object.assign({ query: r }, s) : r;
      const n = Object.keys(o).reduce((e, r) => {
        if (M.includes(r)) {
          e[r] = o[r];
          return e;
        }
        if (!e.variables) {
          e.variables = {};
        }
        e.variables[r] = o[r];
        return e;
      }, {});
      const i = o.baseUrl || e.endpoint.DEFAULTS.baseUrl;
      if (q.test(i)) {
        n.url = i.replace(q, "/api/graphql");
      }
      return e(n).then((e) => {
        if (e.data.errors) {
          const r = {};
          for (const s of Object.keys(e.headers)) {
            r[s] = e.headers[s];
          }
          throw new _(n, r, e.data);
        }
        return e.data.data;
      });
    }
    function withDefaults(e, r) {
      const s = e.defaults(r);
      const newApi = (e, r) => graphql(s, e, r);
      return Object.assign(newApi, { defaults: withDefaults.bind(null, s), endpoint: s.endpoint });
    }
    var $ = withDefaults(d.request, { headers: { "user-agent": `octokit-graphql.js/${p} ${(0, h.getUserAgent)()}` }, method: "POST", url: "/graphql" });
    function withCustomRequest(e) {
      return withDefaults(e, { method: "POST", url: "/graphql" });
    }
    0 && 0;
  },
  8688: (e, r, s) => {
    var o = Object.create;
    var n = Object.defineProperty;
    var i = Object.getOwnPropertyDescriptor;
    var a = Object.getOwnPropertyNames;
    var l = Object.getPrototypeOf;
    var d = Object.prototype.hasOwnProperty;
    var __export = (e, r) => {
      for (var s in r) n(e, s, { get: r[s], enumerable: true });
    };
    var __copyProps = (e, r, s, o) => {
      if ((r && typeof r === "object") || typeof r === "function") {
        for (let l of a(r)) if (!d.call(e, l) && l !== s) n(e, l, { get: () => r[l], enumerable: !(o = i(r, l)) || o.enumerable });
      }
      return e;
    };
    var __toESM = (e, r, s) => ((s = e != null ? o(l(e)) : {}), __copyProps(r || !e || !e.__esModule ? n(s, "default", { value: e, enumerable: true }) : s, e));
    var __toCommonJS = (e) => __copyProps(n({}, "__esModule", { value: true }), e);
    var h = {};
    __export(h, { RequestError: () => M });
    e.exports = __toCommonJS(h);
    var p = s(4150);
    var w = __toESM(s(5560));
    var k = (0, w.default)((e) => console.warn(e));
    var _ = (0, w.default)((e) => console.warn(e));
    var M = class extends Error {
      constructor(e, r, s) {
        super(e);
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, this.constructor);
        }
        this.name = "HttpError";
        this.status = r;
        let o;
        if ("headers" in s && typeof s.headers !== "undefined") {
          o = s.headers;
        }
        if ("response" in s) {
          this.response = s.response;
          o = s.response.headers;
        }
        const n = Object.assign({}, s.request);
        if (s.request.headers.authorization) {
          n.headers = Object.assign({}, s.request.headers, { authorization: s.request.headers.authorization.replace(/ .*$/, " [REDACTED]") });
        }
        n.url = n.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
        this.request = n;
        Object.defineProperty(this, "code", {
          get() {
            k(new p.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
            return r;
          },
        });
        Object.defineProperty(this, "headers", {
          get() {
            _(new p.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));
            return o || {};
          },
        });
      }
    };
    0 && 0;
  },
  9755: (e, r, s) => {
    var o = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var a = Object.prototype.hasOwnProperty;
    var __export = (e, r) => {
      for (var s in r) o(e, s, { get: r[s], enumerable: true });
    };
    var __copyProps = (e, r, s, l) => {
      if ((r && typeof r === "object") || typeof r === "function") {
        for (let d of i(r)) if (!a.call(e, d) && d !== s) o(e, d, { get: () => r[d], enumerable: !(l = n(r, d)) || l.enumerable });
      }
      return e;
    };
    var __toCommonJS = (e) => __copyProps(o({}, "__esModule", { value: true }), e);
    var l = {};
    __export(l, { request: () => k });
    e.exports = __toCommonJS(l);
    var d = s(206);
    var h = s(9071);
    var p = "8.4.0";
    function isPlainObject(e) {
      if (typeof e !== "object" || e === null) return false;
      if (Object.prototype.toString.call(e) !== "[object Object]") return false;
      const r = Object.getPrototypeOf(e);
      if (r === null) return true;
      const s = Object.prototype.hasOwnProperty.call(r, "constructor") && r.constructor;
      return typeof s === "function" && s instanceof s && Function.prototype.call(s) === Function.prototype.call(e);
    }
    var w = s(8688);
    function getBufferResponse(e) {
      return e.arrayBuffer();
    }
    function fetchWrapper(e) {
      var r, s, o, n;
      const i = e.request && e.request.log ? e.request.log : console;
      const a = ((r = e.request) == null ? void 0 : r.parseSuccessResponseBody) !== false;
      if (isPlainObject(e.body) || Array.isArray(e.body)) {
        e.body = JSON.stringify(e.body);
      }
      let l = {};
      let d;
      let h;
      let { fetch: p } = globalThis;
      if ((s = e.request) == null ? void 0 : s.fetch) {
        p = e.request.fetch;
      }
      if (!p) {
        throw new Error(
          "fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing"
        );
      }
      return p(e.url, {
        method: e.method,
        body: e.body,
        redirect: (o = e.request) == null ? void 0 : o.redirect,
        headers: e.headers,
        signal: (n = e.request) == null ? void 0 : n.signal,
        ...(e.body && { duplex: "half" }),
      })
        .then(async (r) => {
          h = r.url;
          d = r.status;
          for (const e of r.headers) {
            l[e[0]] = e[1];
          }
          if ("deprecation" in l) {
            const r = l.link && l.link.match(/<([^>]+)>; rel="deprecation"/);
            const s = r && r.pop();
            i.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${l.sunset}${s ? `. See ${s}` : ""}`);
          }
          if (d === 204 || d === 205) {
            return;
          }
          if (e.method === "HEAD") {
            if (d < 400) {
              return;
            }
            throw new w.RequestError(r.statusText, d, { response: { url: h, status: d, headers: l, data: void 0 }, request: e });
          }
          if (d === 304) {
            throw new w.RequestError("Not modified", d, { response: { url: h, status: d, headers: l, data: await getResponseData(r) }, request: e });
          }
          if (d >= 400) {
            const s = await getResponseData(r);
            const o = new w.RequestError(toErrorMessage(s), d, { response: { url: h, status: d, headers: l, data: s }, request: e });
            throw o;
          }
          return a ? await getResponseData(r) : r.body;
        })
        .then((e) => ({ status: d, url: h, headers: l, data: e }))
        .catch((r) => {
          if (r instanceof w.RequestError) throw r;
          else if (r.name === "AbortError") throw r;
          let s = r.message;
          if (r.name === "TypeError" && "cause" in r) {
            if (r.cause instanceof Error) {
              s = r.cause.message;
            } else if (typeof r.cause === "string") {
              s = r.cause;
            }
          }
          throw new w.RequestError(s, 500, { request: e });
        });
    }
    async function getResponseData(e) {
      const r = e.headers.get("content-type");
      if (/application\/json/.test(r)) {
        return e
          .json()
          .catch(() => e.text())
          .catch(() => "");
      }
      if (!r || /^text\/|charset=utf-8$/.test(r)) {
        return e.text();
      }
      return getBufferResponse(e);
    }
    function toErrorMessage(e) {
      if (typeof e === "string") return e;
      let r;
      if ("documentation_url" in e) {
        r = ` - ${e.documentation_url}`;
      } else {
        r = "";
      }
      if ("message" in e) {
        if (Array.isArray(e.errors)) {
          return `${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${r}`;
        }
        return `${e.message}${r}`;
      }
      return `Unknown error: ${JSON.stringify(e)}`;
    }
    function withDefaults(e, r) {
      const s = e.defaults(r);
      const newApi = function (e, r) {
        const o = s.merge(e, r);
        if (!o.request || !o.request.hook) {
          return fetchWrapper(s.parse(o));
        }
        const request2 = (e, r) => fetchWrapper(s.parse(s.merge(e, r)));
        Object.assign(request2, { endpoint: s, defaults: withDefaults.bind(null, s) });
        return o.request.hook(request2, o);
      };
      return Object.assign(newApi, { endpoint: s, defaults: withDefaults.bind(null, s) });
    }
    var k = withDefaults(d.endpoint, { headers: { "user-agent": `octokit-request.js/${p} ${(0, h.getUserAgent)()}` } });
    0 && 0;
  },
  206: (e, r, s) => {
    var o = Object.defineProperty;
    var n = Object.getOwnPropertyDescriptor;
    var i = Object.getOwnPropertyNames;
    var a = Object.prototype.hasOwnProperty;
    var __export = (e, r) => {
      for (var s in r) o(e, s, { get: r[s], enumerable: true });
    };
    var __copyProps = (e, r, s, l) => {
      if ((r && typeof r === "object") || typeof r === "function") {
        for (let d of i(r)) if (!a.call(e, d) && d !== s) o(e, d, { get: () => r[d], enumerable: !(l = n(r, d)) || l.enumerable });
      }
      return e;
    };
    var __toCommonJS = (e) => __copyProps(o({}, "__esModule", { value: true }), e);
    var l = {};
    __export(l, { endpoint: () => _ });
    e.exports = __toCommonJS(l);
    var d = s(9071);
    var h = "9.0.5";
    var p = `octokit-endpoint.js/${h} ${(0, d.getUserAgent)()}`;
    var w = {
      method: "GET",
      baseUrl: "https://api.github.com",
      headers: { accept: "application/vnd.github.v3+json", "user-agent": p },
      mediaType: { format: "" },
    };
    function lowercaseKeys(e) {
      if (!e) {
        return {};
      }
      return Object.keys(e).reduce((r, s) => {
        r[s.toLowerCase()] = e[s];
        return r;
      }, {});
    }
    function isPlainObject(e) {
      if (typeof e !== "object" || e === null) return false;
      if (Object.prototype.toString.call(e) !== "[object Object]") return false;
      const r = Object.getPrototypeOf(e);
      if (r === null) return true;
      const s = Object.prototype.hasOwnProperty.call(r, "constructor") && r.constructor;
      return typeof s === "function" && s instanceof s && Function.prototype.call(s) === Function.prototype.call(e);
    }
    function mergeDeep(e, r) {
      const s = Object.assign({}, e);
      Object.keys(r).forEach((o) => {
        if (isPlainObject(r[o])) {
          if (!(o in e)) Object.assign(s, { [o]: r[o] });
          else s[o] = mergeDeep(e[o], r[o]);
        } else {
          Object.assign(s, { [o]: r[o] });
        }
      });
      return s;
    }
    function removeUndefinedProperties(e) {
      for (const r in e) {
        if (e[r] === void 0) {
          delete e[r];
        }
      }
      return e;
    }
    function merge(e, r, s) {
      if (typeof r === "string") {
        let [e, o] = r.split(" ");
        s = Object.assign(o ? { method: e, url: o } : { url: e }, s);
      } else {
        s = Object.assign({}, r);
      }
      s.headers = lowercaseKeys(s.headers);
      removeUndefinedProperties(s);
      removeUndefinedProperties(s.headers);
      const o = mergeDeep(e || {}, s);
      if (s.url === "/graphql") {
        if (e && e.mediaType.previews?.length) {
          o.mediaType.previews = e.mediaType.previews.filter((e) => !o.mediaType.previews.includes(e)).concat(o.mediaType.previews);
        }
        o.mediaType.previews = (o.mediaType.previews || []).map((e) => e.replace(/-preview/, ""));
      }
      return o;
    }
    function addQueryParameters(e, r) {
      const s = /\?/.test(e) ? "&" : "?";
      const o = Object.keys(r);
      if (o.length === 0) {
        return e;
      }
      return (
        e +
        s +
        o
          .map((e) => {
            if (e === "q") {
              return "q=" + r.q.split("+").map(encodeURIComponent).join("+");
            }
            return `${e}=${encodeURIComponent(r[e])}`;
          })
          .join("&")
      );
    }
    var k = /\{[^}]+\}/g;
    function removeNonChars(e) {
      return e.replace(/^\W+|\W+$/g, "").split(/,/);
    }
    function extractUrlVariableNames(e) {
      const r = e.match(k);
      if (!r) {
        return [];
      }
      return r.map(removeNonChars).reduce((e, r) => e.concat(r), []);
    }
    function omit(e, r) {
      const s = { __proto__: null };
      for (const o of Object.keys(e)) {
        if (r.indexOf(o) === -1) {
          s[o] = e[o];
        }
      }
      return s;
    }
    function encodeReserved(e) {
      return e
        .split(/(%[0-9A-Fa-f]{2})/g)
        .map(function (e) {
          if (!/%[0-9A-Fa-f]/.test(e)) {
            e = encodeURI(e).replace(/%5B/g, "[").replace(/%5D/g, "]");
          }
          return e;
        })
        .join("");
    }
    function encodeUnreserved(e) {
      return encodeURIComponent(e).replace(/[!'()*]/g, function (e) {
        return "%" + e.charCodeAt(0).toString(16).toUpperCase();
      });
    }
    function encodeValue(e, r, s) {
      r = e === "+" || e === "#" ? encodeReserved(r) : encodeUnreserved(r);
      if (s) {
        return encodeUnreserved(s) + "=" + r;
      } else {
        return r;
      }
    }
    function isDefined(e) {
      return e !== void 0 && e !== null;
    }
    function isKeyOperator(e) {
      return e === ";" || e === "&" || e === "?";
    }
    function getValues(e, r, s, o) {
      var n = e[s],
        i = [];
      if (isDefined(n) && n !== "") {
        if (typeof n === "string" || typeof n === "number" || typeof n === "boolean") {
          n = n.toString();
          if (o && o !== "*") {
            n = n.substring(0, parseInt(o, 10));
          }
          i.push(encodeValue(r, n, isKeyOperator(r) ? s : ""));
        } else {
          if (o === "*") {
            if (Array.isArray(n)) {
              n.filter(isDefined).forEach(function (e) {
                i.push(encodeValue(r, e, isKeyOperator(r) ? s : ""));
              });
            } else {
              Object.keys(n).forEach(function (e) {
                if (isDefined(n[e])) {
                  i.push(encodeValue(r, n[e], e));
                }
              });
            }
          } else {
            const e = [];
            if (Array.isArray(n)) {
              n.filter(isDefined).forEach(function (s) {
                e.push(encodeValue(r, s));
              });
            } else {
              Object.keys(n).forEach(function (s) {
                if (isDefined(n[s])) {
                  e.push(encodeUnreserved(s));
                  e.push(encodeValue(r, n[s].toString()));
                }
              });
            }
            if (isKeyOperator(r)) {
              i.push(encodeUnreserved(s) + "=" + e.join(","));
            } else if (e.length !== 0) {
              i.push(e.join(","));
            }
          }
        }
      } else {
        if (r === ";") {
          if (isDefined(n)) {
            i.push(encodeUnreserved(s));
          }
        } else if (n === "" && (r === "&" || r === "?")) {
          i.push(encodeUnreserved(s) + "=");
        } else if (n === "") {
          i.push("");
        }
      }
      return i;
    }
    function parseUrl(e) {
      return { expand: expand.bind(null, e) };
    }
    function expand(e, r) {
      var s = ["+", "#", ".", "/", ";", "?", "&"];
      e = e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (e, o, n) {
        if (o) {
          let e = "";
          const n = [];
          if (s.indexOf(o.charAt(0)) !== -1) {
            e = o.charAt(0);
            o = o.substr(1);
          }
          o.split(/,/g).forEach(function (s) {
            var o = /([^:\*]*)(?::(\d+)|(\*))?/.exec(s);
            n.push(getValues(r, e, o[1], o[2] || o[3]));
          });
          if (e && e !== "+") {
            var i = ",";
            if (e === "?") {
              i = "&";
            } else if (e !== "#") {
              i = e;
            }
            return (n.length !== 0 ? e : "") + n.join(i);
          } else {
            return n.join(",");
          }
        } else {
          return encodeReserved(n);
        }
      });
      if (e === "/") {
        return e;
      } else {
        return e.replace(/\/$/, "");
      }
    }
    function parse(e) {
      let r = e.method.toUpperCase();
      let s = (e.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
      let o = Object.assign({}, e.headers);
      let n;
      let i = omit(e, ["method", "baseUrl", "url", "headers", "request", "mediaType"]);
      const a = extractUrlVariableNames(s);
      s = parseUrl(s).expand(i);
      if (!/^http/.test(s)) {
        s = e.baseUrl + s;
      }
      const l = Object.keys(e)
        .filter((e) => a.includes(e))
        .concat("baseUrl");
      const d = omit(i, l);
      const h = /application\/octet-stream/i.test(o.accept);
      if (!h) {
        if (e.mediaType.format) {
          o.accept = o.accept
            .split(/,/)
            .map((r) => r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${e.mediaType.format}`))
            .join(",");
        }
        if (s.endsWith("/graphql")) {
          if (e.mediaType.previews?.length) {
            const r = o.accept.match(/[\w-]+(?=-preview)/g) || [];
            o.accept = r
              .concat(e.mediaType.previews)
              .map((r) => {
                const s = e.mediaType.format ? `.${e.mediaType.format}` : "+json";
                return `application/vnd.github.${r}-preview${s}`;
              })
              .join(",");
          }
        }
      }
      if (["GET", "HEAD"].includes(r)) {
        s = addQueryParameters(s, d);
      } else {
        if ("data" in d) {
          n = d.data;
        } else {
          if (Object.keys(d).length) {
            n = d;
          }
        }
      }
      if (!o["content-type"] && typeof n !== "undefined") {
        o["content-type"] = "application/json; charset=utf-8";
      }
      if (["PATCH", "PUT"].includes(r) && typeof n === "undefined") {
        n = "";
      }
      return Object.assign({ method: r, url: s, headers: o }, typeof n !== "undefined" ? { body: n } : null, e.request ? { request: e.request } : null);
    }
    function endpointWithDefaults(e, r, s) {
      return parse(merge(e, r, s));
    }
    function withDefaults(e, r) {
      const s = merge(e, r);
      const o = endpointWithDefaults.bind(null, s);
      return Object.assign(o, { DEFAULTS: s, defaults: withDefaults.bind(null, s), merge: merge.bind(null, s), parse: parse });
    }
    var _ = withDefaults(null, w);
    0 && 0;
  },
  6256: (e, r, s) => {
    var o = s(8987);
    var n = s(1095);
    var i = s(5930);
    var a = Function.bind;
    var l = a.bind(a);
    function bindApi(e, r, s) {
      var o = l(i, null).apply(null, s ? [r, s] : [r]);
      e.api = { remove: o };
      e.remove = o;
      ["before", "error", "after", "wrap"].forEach(function (o) {
        var i = s ? [r, o, s] : [r, o];
        e[o] = e.api[o] = l(n, null).apply(null, i);
      });
    }
    function HookSingular() {
      var e = "h";
      var r = { registry: {} };
      var s = o.bind(null, r, e);
      bindApi(s, r, e);
      return s;
    }
    function HookCollection() {
      var e = { registry: {} };
      var r = o.bind(null, e);
      bindApi(r, e);
      return r;
    }
    var d = false;
    function Hook() {
      if (!d) {
        console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');
        d = true;
      }
      return HookCollection();
    }
    Hook.Singular = HookSingular.bind();
    Hook.Collection = HookCollection.bind();
    e.exports = Hook;
    e.exports.Hook = Hook;
    e.exports.Singular = Hook.Singular;
    e.exports.Collection = Hook.Collection;
  },
  1095: (e) => {
    e.exports = addHook;
    function addHook(e, r, s, o) {
      var n = o;
      if (!e.registry[s]) {
        e.registry[s] = [];
      }
      if (r === "before") {
        o = function (e, r) {
          return Promise.resolve().then(n.bind(null, r)).then(e.bind(null, r));
        };
      }
      if (r === "after") {
        o = function (e, r) {
          var s;
          return Promise.resolve()
            .then(e.bind(null, r))
            .then(function (e) {
              s = e;
              return n(s, r);
            })
            .then(function () {
              return s;
            });
        };
      }
      if (r === "error") {
        o = function (e, r) {
          return Promise.resolve()
            .then(e.bind(null, r))
            .catch(function (e) {
              return n(e, r);
            });
        };
      }
      e.registry[s].push({ hook: o, orig: n });
    }
  },
  8987: (e) => {
    e.exports = register;
    function register(e, r, s, o) {
      if (typeof s !== "function") {
        throw new Error("method for before hook must be a function");
      }
      if (!o) {
        o = {};
      }
      if (Array.isArray(r)) {
        return r.reverse().reduce(function (r, s) {
          return register.bind(null, e, s, r, o);
        }, s)();
      }
      return Promise.resolve().then(function () {
        if (!e.registry[r]) {
          return s(o);
        }
        return e.registry[r].reduce(function (e, r) {
          return r.hook.bind(null, e, o);
        }, s)();
      });
    }
  },
  5930: (e) => {
    e.exports = removeHook;
    function removeHook(e, r, s) {
      if (!e.registry[r]) {
        return;
      }
      var o = e.registry[r]
        .map(function (e) {
          return e.orig;
        })
        .indexOf(s);
      if (o === -1) {
        return;
      }
      e.registry[r].splice(o, 1);
    }
  },
  9071: (e, r) => {
    Object.defineProperty(r, "__esModule", { value: true });
    function getUserAgent() {
      if (typeof navigator === "object" && "userAgent" in navigator) {
        return navigator.userAgent;
      }
      if (typeof process === "object" && process.version !== undefined) {
        return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
      }
      return "<environment undetectable>";
    }
    r.getUserAgent = getUserAgent;
  },
  7731: (e) => {
    var r = Object.defineProperty;
    var s = Object.getOwnPropertyDescriptor;
    var o = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var __export = (e, s) => {
      for (var o in s) r(e, o, { get: s[o], enumerable: true });
    };
    var __copyProps = (e, i, a, l) => {
      if ((i && typeof i === "object") || typeof i === "function") {
        for (let d of o(i)) if (!n.call(e, d) && d !== a) r(e, d, { get: () => i[d], enumerable: !(l = s(i, d)) || l.enumerable });
      }
      return e;
    };
    var __toCommonJS = (e) => __copyProps(r({}, "__esModule", { value: true }), e);
    var i = {};
    __export(i, {
      composePaginateRest: () => l,
      isPaginatingEndpoint: () => isPaginatingEndpoint,
      paginateRest: () => paginateRest,
      paginatingEndpoints: () => d,
    });
    e.exports = __toCommonJS(i);
    var a = "9.2.1";
    function normalizePaginatedListResponse(e) {
      if (!e.data) {
        return { ...e, data: [] };
      }
      const r = "total_count" in e.data && !("url" in e.data);
      if (!r) return e;
      const s = e.data.incomplete_results;
      const o = e.data.repository_selection;
      const n = e.data.total_count;
      delete e.data.incomplete_results;
      delete e.data.repository_selection;
      delete e.data.total_count;
      const i = Object.keys(e.data)[0];
      const a = e.data[i];
      e.data = a;
      if (typeof s !== "undefined") {
        e.data.incomplete_results = s;
      }
      if (typeof o !== "undefined") {
        e.data.repository_selection = o;
      }
      e.data.total_count = n;
      return e;
    }
    function iterator(e, r, s) {
      const o = typeof r === "function" ? r.endpoint(s) : e.request.endpoint(r, s);
      const n = typeof r === "function" ? r : e.request;
      const i = o.method;
      const a = o.headers;
      let l = o.url;
      return {
        [Symbol.asyncIterator]: () => ({
          async next() {
            if (!l) return { done: true };
            try {
              const e = await n({ method: i, url: l, headers: a });
              const r = normalizePaginatedListResponse(e);
              l = ((r.headers.link || "").match(/<([^>]+)>;\s*rel="next"/) || [])[1];
              return { value: r };
            } catch (e) {
              if (e.status !== 409) throw e;
              l = "";
              return { value: { status: 200, headers: {}, data: [] } };
            }
          },
        }),
      };
    }
    function paginate(e, r, s, o) {
      if (typeof s === "function") {
        o = s;
        s = void 0;
      }
      return gather(e, [], iterator(e, r, s)[Symbol.asyncIterator](), o);
    }
    function gather(e, r, s, o) {
      return s.next().then((n) => {
        if (n.done) {
          return r;
        }
        let i = false;
        function done() {
          i = true;
        }
        r = r.concat(o ? o(n.value, done) : n.value.data);
        if (i) {
          return r;
        }
        return gather(e, r, s, o);
      });
    }
    var l = Object.assign(paginate, { iterator: iterator });
    var d = [
      "GET /advisories",
      "GET /app/hook/deliveries",
      "GET /app/installation-requests",
      "GET /app/installations",
      "GET /assignments/{assignment_id}/accepted_assignments",
      "GET /classrooms",
      "GET /classrooms/{classroom_id}/assignments",
      "GET /enterprises/{enterprise}/dependabot/alerts",
      "GET /enterprises/{enterprise}/secret-scanning/alerts",
      "GET /events",
      "GET /gists",
      "GET /gists/public",
      "GET /gists/starred",
      "GET /gists/{gist_id}/comments",
      "GET /gists/{gist_id}/commits",
      "GET /gists/{gist_id}/forks",
      "GET /installation/repositories",
      "GET /issues",
      "GET /licenses",
      "GET /marketplace_listing/plans",
      "GET /marketplace_listing/plans/{plan_id}/accounts",
      "GET /marketplace_listing/stubbed/plans",
      "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
      "GET /networks/{owner}/{repo}/events",
      "GET /notifications",
      "GET /organizations",
      "GET /orgs/{org}/actions/cache/usage-by-repository",
      "GET /orgs/{org}/actions/permissions/repositories",
      "GET /orgs/{org}/actions/runners",
      "GET /orgs/{org}/actions/secrets",
      "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
      "GET /orgs/{org}/actions/variables",
      "GET /orgs/{org}/actions/variables/{name}/repositories",
      "GET /orgs/{org}/blocks",
      "GET /orgs/{org}/code-scanning/alerts",
      "GET /orgs/{org}/codespaces",
      "GET /orgs/{org}/codespaces/secrets",
      "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories",
      "GET /orgs/{org}/copilot/billing/seats",
      "GET /orgs/{org}/dependabot/alerts",
      "GET /orgs/{org}/dependabot/secrets",
      "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
      "GET /orgs/{org}/events",
      "GET /orgs/{org}/failed_invitations",
      "GET /orgs/{org}/hooks",
      "GET /orgs/{org}/hooks/{hook_id}/deliveries",
      "GET /orgs/{org}/installations",
      "GET /orgs/{org}/invitations",
      "GET /orgs/{org}/invitations/{invitation_id}/teams",
      "GET /orgs/{org}/issues",
      "GET /orgs/{org}/members",
      "GET /orgs/{org}/members/{username}/codespaces",
      "GET /orgs/{org}/migrations",
      "GET /orgs/{org}/migrations/{migration_id}/repositories",
      "GET /orgs/{org}/organization-roles/{role_id}/teams",
      "GET /orgs/{org}/organization-roles/{role_id}/users",
      "GET /orgs/{org}/outside_collaborators",
      "GET /orgs/{org}/packages",
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
      "GET /orgs/{org}/personal-access-token-requests",
      "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories",
      "GET /orgs/{org}/personal-access-tokens",
      "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories",
      "GET /orgs/{org}/projects",
      "GET /orgs/{org}/properties/values",
      "GET /orgs/{org}/public_members",
      "GET /orgs/{org}/repos",
      "GET /orgs/{org}/rulesets",
      "GET /orgs/{org}/rulesets/rule-suites",
      "GET /orgs/{org}/secret-scanning/alerts",
      "GET /orgs/{org}/security-advisories",
      "GET /orgs/{org}/teams",
      "GET /orgs/{org}/teams/{team_slug}/discussions",
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
      "GET /orgs/{org}/teams/{team_slug}/invitations",
      "GET /orgs/{org}/teams/{team_slug}/members",
      "GET /orgs/{org}/teams/{team_slug}/projects",
      "GET /orgs/{org}/teams/{team_slug}/repos",
      "GET /orgs/{org}/teams/{team_slug}/teams",
      "GET /projects/columns/{column_id}/cards",
      "GET /projects/{project_id}/collaborators",
      "GET /projects/{project_id}/columns",
      "GET /repos/{owner}/{repo}/actions/artifacts",
      "GET /repos/{owner}/{repo}/actions/caches",
      "GET /repos/{owner}/{repo}/actions/organization-secrets",
      "GET /repos/{owner}/{repo}/actions/organization-variables",
      "GET /repos/{owner}/{repo}/actions/runners",
      "GET /repos/{owner}/{repo}/actions/runs",
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
      "GET /repos/{owner}/{repo}/actions/secrets",
      "GET /repos/{owner}/{repo}/actions/variables",
      "GET /repos/{owner}/{repo}/actions/workflows",
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
      "GET /repos/{owner}/{repo}/activity",
      "GET /repos/{owner}/{repo}/assignees",
      "GET /repos/{owner}/{repo}/branches",
      "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
      "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
      "GET /repos/{owner}/{repo}/code-scanning/alerts",
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      "GET /repos/{owner}/{repo}/code-scanning/analyses",
      "GET /repos/{owner}/{repo}/codespaces",
      "GET /repos/{owner}/{repo}/codespaces/devcontainers",
      "GET /repos/{owner}/{repo}/codespaces/secrets",
      "GET /repos/{owner}/{repo}/collaborators",
      "GET /repos/{owner}/{repo}/comments",
      "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
      "GET /repos/{owner}/{repo}/commits",
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
      "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
      "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
      "GET /repos/{owner}/{repo}/commits/{ref}/status",
      "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
      "GET /repos/{owner}/{repo}/contributors",
      "GET /repos/{owner}/{repo}/dependabot/alerts",
      "GET /repos/{owner}/{repo}/dependabot/secrets",
      "GET /repos/{owner}/{repo}/deployments",
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
      "GET /repos/{owner}/{repo}/environments",
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps",
      "GET /repos/{owner}/{repo}/events",
      "GET /repos/{owner}/{repo}/forks",
      "GET /repos/{owner}/{repo}/hooks",
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
      "GET /repos/{owner}/{repo}/invitations",
      "GET /repos/{owner}/{repo}/issues",
      "GET /repos/{owner}/{repo}/issues/comments",
      "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
      "GET /repos/{owner}/{repo}/issues/events",
      "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
      "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
      "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
      "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
      "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
      "GET /repos/{owner}/{repo}/keys",
      "GET /repos/{owner}/{repo}/labels",
      "GET /repos/{owner}/{repo}/milestones",
      "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
      "GET /repos/{owner}/{repo}/notifications",
      "GET /repos/{owner}/{repo}/pages/builds",
      "GET /repos/{owner}/{repo}/projects",
      "GET /repos/{owner}/{repo}/pulls",
      "GET /repos/{owner}/{repo}/pulls/comments",
      "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
      "GET /repos/{owner}/{repo}/releases",
      "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
      "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
      "GET /repos/{owner}/{repo}/rules/branches/{branch}",
      "GET /repos/{owner}/{repo}/rulesets",
      "GET /repos/{owner}/{repo}/rulesets/rule-suites",
      "GET /repos/{owner}/{repo}/secret-scanning/alerts",
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
      "GET /repos/{owner}/{repo}/security-advisories",
      "GET /repos/{owner}/{repo}/stargazers",
      "GET /repos/{owner}/{repo}/subscribers",
      "GET /repos/{owner}/{repo}/tags",
      "GET /repos/{owner}/{repo}/teams",
      "GET /repos/{owner}/{repo}/topics",
      "GET /repositories",
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets",
      "GET /repositories/{repository_id}/environments/{environment_name}/variables",
      "GET /search/code",
      "GET /search/commits",
      "GET /search/issues",
      "GET /search/labels",
      "GET /search/repositories",
      "GET /search/topics",
      "GET /search/users",
      "GET /teams/{team_id}/discussions",
      "GET /teams/{team_id}/discussions/{discussion_number}/comments",
      "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
      "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
      "GET /teams/{team_id}/invitations",
      "GET /teams/{team_id}/members",
      "GET /teams/{team_id}/projects",
      "GET /teams/{team_id}/repos",
      "GET /teams/{team_id}/teams",
      "GET /user/blocks",
      "GET /user/codespaces",
      "GET /user/codespaces/secrets",
      "GET /user/emails",
      "GET /user/followers",
      "GET /user/following",
      "GET /user/gpg_keys",
      "GET /user/installations",
      "GET /user/installations/{installation_id}/repositories",
      "GET /user/issues",
      "GET /user/keys",
      "GET /user/marketplace_purchases",
      "GET /user/marketplace_purchases/stubbed",
      "GET /user/memberships/orgs",
      "GET /user/migrations",
      "GET /user/migrations/{migration_id}/repositories",
      "GET /user/orgs",
      "GET /user/packages",
      "GET /user/packages/{package_type}/{package_name}/versions",
      "GET /user/public_emails",
      "GET /user/repos",
      "GET /user/repository_invitations",
      "GET /user/social_accounts",
      "GET /user/ssh_signing_keys",
      "GET /user/starred",
      "GET /user/subscriptions",
      "GET /user/teams",
      "GET /users",
      "GET /users/{username}/events",
      "GET /users/{username}/events/orgs/{org}",
      "GET /users/{username}/events/public",
      "GET /users/{username}/followers",
      "GET /users/{username}/following",
      "GET /users/{username}/gists",
      "GET /users/{username}/gpg_keys",
      "GET /users/{username}/keys",
      "GET /users/{username}/orgs",
      "GET /users/{username}/packages",
      "GET /users/{username}/projects",
      "GET /users/{username}/received_events",
      "GET /users/{username}/received_events/public",
      "GET /users/{username}/repos",
      "GET /users/{username}/social_accounts",
      "GET /users/{username}/ssh_signing_keys",
      "GET /users/{username}/starred",
      "GET /users/{username}/subscriptions",
    ];
    function isPaginatingEndpoint(e) {
      if (typeof e === "string") {
        return d.includes(e);
      } else {
        return false;
      }
    }
    function paginateRest(e) {
      return { paginate: Object.assign(paginate.bind(null, e), { iterator: iterator.bind(null, e) }) };
    }
    paginateRest.VERSION = a;
    0 && 0;
  },
  5726: (e) => {
    var r = Object.defineProperty;
    var s = Object.getOwnPropertyDescriptor;
    var o = Object.getOwnPropertyNames;
    var n = Object.prototype.hasOwnProperty;
    var __export = (e, s) => {
      for (var o in s) r(e, o, { get: s[o], enumerable: true });
    };
    var __copyProps = (e, i, a, l) => {
      if ((i && typeof i === "object") || typeof i === "function") {
        for (let d of o(i)) if (!n.call(e, d) && d !== a) r(e, d, { get: () => i[d], enumerable: !(l = s(i, d)) || l.enumerable });
      }
      return e;
    };
    var __toCommonJS = (e) => __copyProps(r({}, "__esModule", { value: true }), e);
    var i = {};
    __export(i, { legacyRestEndpointMethods: () => legacyRestEndpointMethods, restEndpointMethods: () => restEndpointMethods });
    e.exports = __toCommonJS(i);
    var a = "10.4.1";
    var l = {
      actions: {
        addCustomLabelsToSelfHostedRunnerForOrg: ["POST /orgs/{org}/actions/runners/{runner_id}/labels"],
        addCustomLabelsToSelfHostedRunnerForRepo: ["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
        addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
        addSelectedRepoToOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
        approveWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],
        cancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],
        createEnvironmentVariable: ["POST /repositories/{repository_id}/environments/{environment_name}/variables"],
        createOrUpdateEnvironmentSecret: ["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],
        createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
        createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
        createOrgVariable: ["POST /orgs/{org}/actions/variables"],
        createRegistrationTokenForOrg: ["POST /orgs/{org}/actions/runners/registration-token"],
        createRegistrationTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/registration-token"],
        createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
        createRemoveTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/remove-token"],
        createRepoVariable: ["POST /repos/{owner}/{repo}/actions/variables"],
        createWorkflowDispatch: ["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],
        deleteActionsCacheById: ["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],
        deleteActionsCacheByKey: ["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],
        deleteArtifact: ["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
        deleteEnvironmentSecret: ["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],
        deleteEnvironmentVariable: ["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],
        deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
        deleteOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}"],
        deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
        deleteRepoVariable: ["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],
        deleteSelfHostedRunnerFromOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}"],
        deleteSelfHostedRunnerFromRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],
        deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
        deleteWorkflowRunLogs: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
        disableSelectedRepositoryGithubActionsOrganization: ["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],
        disableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],
        downloadArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],
        downloadJobLogsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],
        downloadWorkflowRunAttemptLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],
        downloadWorkflowRunLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
        enableSelectedRepositoryGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],
        enableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],
        forceCancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],
        generateRunnerJitconfigForOrg: ["POST /orgs/{org}/actions/runners/generate-jitconfig"],
        generateRunnerJitconfigForRepo: ["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],
        getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
        getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
        getActionsCacheUsageByRepoForOrg: ["GET /orgs/{org}/actions/cache/usage-by-repository"],
        getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
        getAllowedActionsOrganization: ["GET /orgs/{org}/actions/permissions/selected-actions"],
        getAllowedActionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],
        getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
        getCustomOidcSubClaimForRepo: ["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],
        getEnvironmentPublicKey: ["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],
        getEnvironmentSecret: ["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],
        getEnvironmentVariable: ["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],
        getGithubActionsDefaultWorkflowPermissionsOrganization: ["GET /orgs/{org}/actions/permissions/workflow"],
        getGithubActionsDefaultWorkflowPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/workflow"],
        getGithubActionsPermissionsOrganization: ["GET /orgs/{org}/actions/permissions"],
        getGithubActionsPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions"],
        getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
        getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
        getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
        getOrgVariable: ["GET /orgs/{org}/actions/variables/{name}"],
        getPendingDeploymentsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
        getRepoPermissions: ["GET /repos/{owner}/{repo}/actions/permissions", {}, { renamed: ["actions", "getGithubActionsPermissionsRepository"] }],
        getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
        getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
        getRepoVariable: ["GET /repos/{owner}/{repo}/actions/variables/{name}"],
        getReviewsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],
        getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
        getSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],
        getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
        getWorkflowAccessToRepository: ["GET /repos/{owner}/{repo}/actions/permissions/access"],
        getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
        getWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],
        getWorkflowRunUsage: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],
        getWorkflowUsage: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],
        listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
        listEnvironmentSecrets: ["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],
        listEnvironmentVariables: ["GET /repositories/{repository_id}/environments/{environment_name}/variables"],
        listJobsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],
        listJobsForWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],
        listLabelsForSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}/labels"],
        listLabelsForSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
        listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
        listOrgVariables: ["GET /orgs/{org}/actions/variables"],
        listRepoOrganizationSecrets: ["GET /repos/{owner}/{repo}/actions/organization-secrets"],
        listRepoOrganizationVariables: ["GET /repos/{owner}/{repo}/actions/organization-variables"],
        listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
        listRepoVariables: ["GET /repos/{owner}/{repo}/actions/variables"],
        listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
        listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
        listRunnerApplicationsForRepo: ["GET /repos/{owner}/{repo}/actions/runners/downloads"],
        listSelectedReposForOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],
        listSelectedReposForOrgVariable: ["GET /orgs/{org}/actions/variables/{name}/repositories"],
        listSelectedRepositoriesEnabledGithubActionsOrganization: ["GET /orgs/{org}/actions/permissions/repositories"],
        listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
        listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
        listWorkflowRunArtifacts: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],
        listWorkflowRuns: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],
        listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
        reRunJobForWorkflowRun: ["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],
        reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
        reRunWorkflowFailedJobs: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],
        removeAllCustomLabelsFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],
        removeAllCustomLabelsFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
        removeCustomLabelFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],
        removeCustomLabelFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],
        removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
        removeSelectedRepoFromOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
        reviewCustomGatesForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],
        reviewPendingDeploymentsForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
        setAllowedActionsOrganization: ["PUT /orgs/{org}/actions/permissions/selected-actions"],
        setAllowedActionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],
        setCustomLabelsForSelfHostedRunnerForOrg: ["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],
        setCustomLabelsForSelfHostedRunnerForRepo: ["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
        setCustomOidcSubClaimForRepo: ["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],
        setGithubActionsDefaultWorkflowPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions/workflow"],
        setGithubActionsDefaultWorkflowPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],
        setGithubActionsPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions"],
        setGithubActionsPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions"],
        setSelectedReposForOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],
        setSelectedReposForOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories"],
        setSelectedRepositoriesEnabledGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories"],
        setWorkflowAccessToRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/access"],
        updateEnvironmentVariable: ["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],
        updateOrgVariable: ["PATCH /orgs/{org}/actions/variables/{name}"],
        updateRepoVariable: ["PATCH /repos/{owner}/{repo}/actions/variables/{name}"],
      },
      activity: {
        checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
        deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
        deleteThreadSubscription: ["DELETE /notifications/threads/{thread_id}/subscription"],
        getFeeds: ["GET /feeds"],
        getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
        getThread: ["GET /notifications/threads/{thread_id}"],
        getThreadSubscriptionForAuthenticatedUser: ["GET /notifications/threads/{thread_id}/subscription"],
        listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
        listNotificationsForAuthenticatedUser: ["GET /notifications"],
        listOrgEventsForAuthenticatedUser: ["GET /users/{username}/events/orgs/{org}"],
        listPublicEvents: ["GET /events"],
        listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
        listPublicEventsForUser: ["GET /users/{username}/events/public"],
        listPublicOrgEvents: ["GET /orgs/{org}/events"],
        listReceivedEventsForUser: ["GET /users/{username}/received_events"],
        listReceivedPublicEventsForUser: ["GET /users/{username}/received_events/public"],
        listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
        listRepoNotificationsForAuthenticatedUser: ["GET /repos/{owner}/{repo}/notifications"],
        listReposStarredByAuthenticatedUser: ["GET /user/starred"],
        listReposStarredByUser: ["GET /users/{username}/starred"],
        listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
        listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
        listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
        listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
        markNotificationsAsRead: ["PUT /notifications"],
        markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
        markThreadAsDone: ["DELETE /notifications/threads/{thread_id}"],
        markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
        setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
        setThreadSubscription: ["PUT /notifications/threads/{thread_id}/subscription"],
        starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
        unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"],
      },
      apps: {
        addRepoToInstallation: [
          "PUT /user/installations/{installation_id}/repositories/{repository_id}",
          {},
          { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] },
        ],
        addRepoToInstallationForAuthenticatedUser: ["PUT /user/installations/{installation_id}/repositories/{repository_id}"],
        checkToken: ["POST /applications/{client_id}/token"],
        createFromManifest: ["POST /app-manifests/{code}/conversions"],
        createInstallationAccessToken: ["POST /app/installations/{installation_id}/access_tokens"],
        deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
        deleteInstallation: ["DELETE /app/installations/{installation_id}"],
        deleteToken: ["DELETE /applications/{client_id}/token"],
        getAuthenticated: ["GET /app"],
        getBySlug: ["GET /apps/{app_slug}"],
        getInstallation: ["GET /app/installations/{installation_id}"],
        getOrgInstallation: ["GET /orgs/{org}/installation"],
        getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
        getSubscriptionPlanForAccount: ["GET /marketplace_listing/accounts/{account_id}"],
        getSubscriptionPlanForAccountStubbed: ["GET /marketplace_listing/stubbed/accounts/{account_id}"],
        getUserInstallation: ["GET /users/{username}/installation"],
        getWebhookConfigForApp: ["GET /app/hook/config"],
        getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
        listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
        listAccountsForPlanStubbed: ["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],
        listInstallationReposForAuthenticatedUser: ["GET /user/installations/{installation_id}/repositories"],
        listInstallationRequestsForAuthenticatedApp: ["GET /app/installation-requests"],
        listInstallations: ["GET /app/installations"],
        listInstallationsForAuthenticatedUser: ["GET /user/installations"],
        listPlans: ["GET /marketplace_listing/plans"],
        listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
        listReposAccessibleToInstallation: ["GET /installation/repositories"],
        listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
        listSubscriptionsForAuthenticatedUserStubbed: ["GET /user/marketplace_purchases/stubbed"],
        listWebhookDeliveries: ["GET /app/hook/deliveries"],
        redeliverWebhookDelivery: ["POST /app/hook/deliveries/{delivery_id}/attempts"],
        removeRepoFromInstallation: [
          "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
          {},
          { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] },
        ],
        removeRepoFromInstallationForAuthenticatedUser: ["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],
        resetToken: ["PATCH /applications/{client_id}/token"],
        revokeInstallationAccessToken: ["DELETE /installation/token"],
        scopeToken: ["POST /applications/{client_id}/token/scoped"],
        suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
        unsuspendInstallation: ["DELETE /app/installations/{installation_id}/suspended"],
        updateWebhookConfigForApp: ["PATCH /app/hook/config"],
      },
      billing: {
        getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
        getGithubActionsBillingUser: ["GET /users/{username}/settings/billing/actions"],
        getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
        getGithubPackagesBillingUser: ["GET /users/{username}/settings/billing/packages"],
        getSharedStorageBillingOrg: ["GET /orgs/{org}/settings/billing/shared-storage"],
        getSharedStorageBillingUser: ["GET /users/{username}/settings/billing/shared-storage"],
      },
      checks: {
        create: ["POST /repos/{owner}/{repo}/check-runs"],
        createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
        get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
        getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
        listAnnotations: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],
        listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
        listForSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],
        listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
        rerequestRun: ["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],
        rerequestSuite: ["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],
        setSuitesPreferences: ["PATCH /repos/{owner}/{repo}/check-suites/preferences"],
        update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"],
      },
      codeScanning: {
        deleteAnalysis: ["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],
        getAlert: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}", {}, { renamedParameters: { alert_id: "alert_number" } }],
        getAnalysis: ["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],
        getCodeqlDatabase: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],
        getDefaultSetup: ["GET /repos/{owner}/{repo}/code-scanning/default-setup"],
        getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
        listAlertInstances: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],
        listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
        listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
        listAlertsInstances: [
          "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
          {},
          { renamed: ["codeScanning", "listAlertInstances"] },
        ],
        listCodeqlDatabases: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],
        listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
        updateAlert: ["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],
        updateDefaultSetup: ["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],
        uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"],
      },
      codesOfConduct: { getAllCodesOfConduct: ["GET /codes_of_conduct"], getConductCode: ["GET /codes_of_conduct/{key}"] },
      codespaces: {
        addRepositoryForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
        addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
        checkPermissionsForDevcontainer: ["GET /repos/{owner}/{repo}/codespaces/permissions_check"],
        codespaceMachinesForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/machines"],
        createForAuthenticatedUser: ["POST /user/codespaces"],
        createOrUpdateOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],
        createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
        createOrUpdateSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}"],
        createWithPrForAuthenticatedUser: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],
        createWithRepoForAuthenticatedUser: ["POST /repos/{owner}/{repo}/codespaces"],
        deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
        deleteFromOrganization: ["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],
        deleteOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],
        deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
        deleteSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}"],
        exportForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/exports"],
        getCodespacesForUserInOrg: ["GET /orgs/{org}/members/{username}/codespaces"],
        getExportDetailsForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/exports/{export_id}"],
        getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
        getOrgPublicKey: ["GET /orgs/{org}/codespaces/secrets/public-key"],
        getOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}"],
        getPublicKeyForAuthenticatedUser: ["GET /user/codespaces/secrets/public-key"],
        getRepoPublicKey: ["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],
        getRepoSecret: ["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
        getSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}"],
        listDevcontainersInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/devcontainers"],
        listForAuthenticatedUser: ["GET /user/codespaces"],
        listInOrganization: ["GET /orgs/{org}/codespaces", {}, { renamedParameters: { org_id: "org" } }],
        listInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces"],
        listOrgSecrets: ["GET /orgs/{org}/codespaces/secrets"],
        listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
        listRepositoriesForSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}/repositories"],
        listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
        listSelectedReposForOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
        preFlightWithRepoForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/new"],
        publishForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/publish"],
        removeRepositoryForSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
        removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
        repoMachinesForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/machines"],
        setRepositoriesForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories"],
        setSelectedReposForOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
        startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
        stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
        stopInOrganization: ["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],
        updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"],
      },
      copilot: {
        addCopilotSeatsForTeams: ["POST /orgs/{org}/copilot/billing/selected_teams"],
        addCopilotSeatsForUsers: ["POST /orgs/{org}/copilot/billing/selected_users"],
        cancelCopilotSeatAssignmentForTeams: ["DELETE /orgs/{org}/copilot/billing/selected_teams"],
        cancelCopilotSeatAssignmentForUsers: ["DELETE /orgs/{org}/copilot/billing/selected_users"],
        getCopilotOrganizationDetails: ["GET /orgs/{org}/copilot/billing"],
        getCopilotSeatDetailsForUser: ["GET /orgs/{org}/members/{username}/copilot"],
        listCopilotSeats: ["GET /orgs/{org}/copilot/billing/seats"],
      },
      dependabot: {
        addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
        createOrUpdateOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],
        createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
        deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
        deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
        getAlert: ["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
        getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
        getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
        getRepoPublicKey: ["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],
        getRepoSecret: ["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
        listAlertsForEnterprise: ["GET /enterprises/{enterprise}/dependabot/alerts"],
        listAlertsForOrg: ["GET /orgs/{org}/dependabot/alerts"],
        listAlertsForRepo: ["GET /repos/{owner}/{repo}/dependabot/alerts"],
        listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
        listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
        listSelectedReposForOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
        removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
        setSelectedReposForOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
        updateAlert: ["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
      },
      dependencyGraph: {
        createRepositorySnapshot: ["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],
        diffRange: ["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],
        exportSbom: ["GET /repos/{owner}/{repo}/dependency-graph/sbom"],
      },
      emojis: { get: ["GET /emojis"] },
      gists: {
        checkIsStarred: ["GET /gists/{gist_id}/star"],
        create: ["POST /gists"],
        createComment: ["POST /gists/{gist_id}/comments"],
        delete: ["DELETE /gists/{gist_id}"],
        deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
        fork: ["POST /gists/{gist_id}/forks"],
        get: ["GET /gists/{gist_id}"],
        getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
        getRevision: ["GET /gists/{gist_id}/{sha}"],
        list: ["GET /gists"],
        listComments: ["GET /gists/{gist_id}/comments"],
        listCommits: ["GET /gists/{gist_id}/commits"],
        listForUser: ["GET /users/{username}/gists"],
        listForks: ["GET /gists/{gist_id}/forks"],
        listPublic: ["GET /gists/public"],
        listStarred: ["GET /gists/starred"],
        star: ["PUT /gists/{gist_id}/star"],
        unstar: ["DELETE /gists/{gist_id}/star"],
        update: ["PATCH /gists/{gist_id}"],
        updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"],
      },
      git: {
        createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
        createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
        createRef: ["POST /repos/{owner}/{repo}/git/refs"],
        createTag: ["POST /repos/{owner}/{repo}/git/tags"],
        createTree: ["POST /repos/{owner}/{repo}/git/trees"],
        deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
        getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
        getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
        getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
        getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
        getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
        listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
        updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"],
      },
      gitignore: { getAllTemplates: ["GET /gitignore/templates"], getTemplate: ["GET /gitignore/templates/{name}"] },
      interactions: {
        getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
        getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
        getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
        getRestrictionsForYourPublicRepos: ["GET /user/interaction-limits", {}, { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }],
        removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
        removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
        removeRestrictionsForRepo: ["DELETE /repos/{owner}/{repo}/interaction-limits"],
        removeRestrictionsForYourPublicRepos: ["DELETE /user/interaction-limits", {}, { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] }],
        setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
        setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
        setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
        setRestrictionsForYourPublicRepos: ["PUT /user/interaction-limits", {}, { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }],
      },
      issues: {
        addAssignees: ["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
        addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
        checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
        checkUserCanBeAssignedToIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],
        create: ["POST /repos/{owner}/{repo}/issues"],
        createComment: ["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],
        createLabel: ["POST /repos/{owner}/{repo}/labels"],
        createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
        deleteComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],
        deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
        deleteMilestone: ["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],
        get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
        getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
        getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
        getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
        getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
        list: ["GET /issues"],
        listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
        listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
        listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
        listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
        listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
        listEventsForTimeline: ["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],
        listForAuthenticatedUser: ["GET /user/issues"],
        listForOrg: ["GET /orgs/{org}/issues"],
        listForRepo: ["GET /repos/{owner}/{repo}/issues"],
        listLabelsForMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],
        listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
        listLabelsOnIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],
        listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
        lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
        removeAllLabels: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],
        removeAssignees: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
        removeLabel: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],
        setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
        unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
        update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
        updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
        updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
        updateMilestone: ["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"],
      },
      licenses: { get: ["GET /licenses/{license}"], getAllCommonlyUsed: ["GET /licenses"], getForRepo: ["GET /repos/{owner}/{repo}/license"] },
      markdown: { render: ["POST /markdown"], renderRaw: ["POST /markdown/raw", { headers: { "content-type": "text/plain; charset=utf-8" } }] },
      meta: { get: ["GET /meta"], getAllVersions: ["GET /versions"], getOctocat: ["GET /octocat"], getZen: ["GET /zen"], root: ["GET /"] },
      migrations: {
        cancelImport: [
          "DELETE /repos/{owner}/{repo}/import",
          {},
          { deprecated: "octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import" },
        ],
        deleteArchiveForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/archive"],
        deleteArchiveForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/archive"],
        downloadArchiveForOrg: ["GET /orgs/{org}/migrations/{migration_id}/archive"],
        getArchiveForAuthenticatedUser: ["GET /user/migrations/{migration_id}/archive"],
        getCommitAuthors: [
          "GET /repos/{owner}/{repo}/import/authors",
          {},
          {
            deprecated:
              "octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors",
          },
        ],
        getImportStatus: [
          "GET /repos/{owner}/{repo}/import",
          {},
          {
            deprecated:
              "octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status",
          },
        ],
        getLargeFiles: [
          "GET /repos/{owner}/{repo}/import/large_files",
          {},
          { deprecated: "octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files" },
        ],
        getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
        getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
        listForAuthenticatedUser: ["GET /user/migrations"],
        listForOrg: ["GET /orgs/{org}/migrations"],
        listReposForAuthenticatedUser: ["GET /user/migrations/{migration_id}/repositories"],
        listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
        listReposForUser: ["GET /user/migrations/{migration_id}/repositories", {}, { renamed: ["migrations", "listReposForAuthenticatedUser"] }],
        mapCommitAuthor: [
          "PATCH /repos/{owner}/{repo}/import/authors/{author_id}",
          {},
          {
            deprecated:
              "octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author",
          },
        ],
        setLfsPreference: [
          "PATCH /repos/{owner}/{repo}/import/lfs",
          {},
          {
            deprecated:
              "octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference",
          },
        ],
        startForAuthenticatedUser: ["POST /user/migrations"],
        startForOrg: ["POST /orgs/{org}/migrations"],
        startImport: [
          "PUT /repos/{owner}/{repo}/import",
          {},
          { deprecated: "octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import" },
        ],
        unlockRepoForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],
        unlockRepoForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],
        updateImport: [
          "PATCH /repos/{owner}/{repo}/import",
          {},
          { deprecated: "octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import" },
        ],
      },
      oidc: {
        getOidcCustomSubTemplateForOrg: ["GET /orgs/{org}/actions/oidc/customization/sub"],
        updateOidcCustomSubTemplateForOrg: ["PUT /orgs/{org}/actions/oidc/customization/sub"],
      },
      orgs: {
        addSecurityManagerTeam: ["PUT /orgs/{org}/security-managers/teams/{team_slug}"],
        assignTeamToOrgRole: ["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
        assignUserToOrgRole: ["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],
        blockUser: ["PUT /orgs/{org}/blocks/{username}"],
        cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
        checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
        checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
        checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
        convertMemberToOutsideCollaborator: ["PUT /orgs/{org}/outside_collaborators/{username}"],
        createCustomOrganizationRole: ["POST /orgs/{org}/organization-roles"],
        createInvitation: ["POST /orgs/{org}/invitations"],
        createOrUpdateCustomProperties: ["PATCH /orgs/{org}/properties/schema"],
        createOrUpdateCustomPropertiesValuesForRepos: ["PATCH /orgs/{org}/properties/values"],
        createOrUpdateCustomProperty: ["PUT /orgs/{org}/properties/schema/{custom_property_name}"],
        createWebhook: ["POST /orgs/{org}/hooks"],
        delete: ["DELETE /orgs/{org}"],
        deleteCustomOrganizationRole: ["DELETE /orgs/{org}/organization-roles/{role_id}"],
        deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
        enableOrDisableSecurityProductOnAllOrgRepos: ["POST /orgs/{org}/{security_product}/{enablement}"],
        get: ["GET /orgs/{org}"],
        getAllCustomProperties: ["GET /orgs/{org}/properties/schema"],
        getCustomProperty: ["GET /orgs/{org}/properties/schema/{custom_property_name}"],
        getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
        getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
        getOrgRole: ["GET /orgs/{org}/organization-roles/{role_id}"],
        getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
        getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
        getWebhookDelivery: ["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],
        list: ["GET /organizations"],
        listAppInstallations: ["GET /orgs/{org}/installations"],
        listBlockedUsers: ["GET /orgs/{org}/blocks"],
        listCustomPropertiesValuesForRepos: ["GET /orgs/{org}/properties/values"],
        listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
        listForAuthenticatedUser: ["GET /user/orgs"],
        listForUser: ["GET /users/{username}/orgs"],
        listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
        listMembers: ["GET /orgs/{org}/members"],
        listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
        listOrgRoleTeams: ["GET /orgs/{org}/organization-roles/{role_id}/teams"],
        listOrgRoleUsers: ["GET /orgs/{org}/organization-roles/{role_id}/users"],
        listOrgRoles: ["GET /orgs/{org}/organization-roles"],
        listOrganizationFineGrainedPermissions: ["GET /orgs/{org}/organization-fine-grained-permissions"],
        listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
        listPatGrantRepositories: ["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],
        listPatGrantRequestRepositories: ["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],
        listPatGrantRequests: ["GET /orgs/{org}/personal-access-token-requests"],
        listPatGrants: ["GET /orgs/{org}/personal-access-tokens"],
        listPendingInvitations: ["GET /orgs/{org}/invitations"],
        listPublicMembers: ["GET /orgs/{org}/public_members"],
        listSecurityManagerTeams: ["GET /orgs/{org}/security-managers"],
        listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
        listWebhooks: ["GET /orgs/{org}/hooks"],
        patchCustomOrganizationRole: ["PATCH /orgs/{org}/organization-roles/{role_id}"],
        pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
        redeliverWebhookDelivery: ["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
        removeCustomProperty: ["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],
        removeMember: ["DELETE /orgs/{org}/members/{username}"],
        removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
        removeOutsideCollaborator: ["DELETE /orgs/{org}/outside_collaborators/{username}"],
        removePublicMembershipForAuthenticatedUser: ["DELETE /orgs/{org}/public_members/{username}"],
        removeSecurityManagerTeam: ["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],
        reviewPatGrantRequest: ["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],
        reviewPatGrantRequestsInBulk: ["POST /orgs/{org}/personal-access-token-requests"],
        revokeAllOrgRolesTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],
        revokeAllOrgRolesUser: ["DELETE /orgs/{org}/organization-roles/users/{username}"],
        revokeOrgRoleTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
        revokeOrgRoleUser: ["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],
        setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
        setPublicMembershipForAuthenticatedUser: ["PUT /orgs/{org}/public_members/{username}"],
        unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
        update: ["PATCH /orgs/{org}"],
        updateMembershipForAuthenticatedUser: ["PATCH /user/memberships/orgs/{org}"],
        updatePatAccess: ["POST /orgs/{org}/personal-access-tokens/{pat_id}"],
        updatePatAccesses: ["POST /orgs/{org}/personal-access-tokens"],
        updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
        updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"],
      },
      packages: {
        deletePackageForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}"],
        deletePackageForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],
        deletePackageForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}"],
        deletePackageVersionForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
        deletePackageVersionForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
        deletePackageVersionForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
        getAllPackageVersionsForAPackageOwnedByAnOrg: [
          "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
          {},
          { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] },
        ],
        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
          "GET /user/packages/{package_type}/{package_name}/versions",
          {},
          { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"] },
        ],
        getAllPackageVersionsForPackageOwnedByAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions"],
        getAllPackageVersionsForPackageOwnedByOrg: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],
        getAllPackageVersionsForPackageOwnedByUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions"],
        getPackageForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}"],
        getPackageForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}"],
        getPackageForUser: ["GET /users/{username}/packages/{package_type}/{package_name}"],
        getPackageVersionForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
        getPackageVersionForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
        getPackageVersionForUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
        listDockerMigrationConflictingPackagesForAuthenticatedUser: ["GET /user/docker/conflicts"],
        listDockerMigrationConflictingPackagesForOrganization: ["GET /orgs/{org}/docker/conflicts"],
        listDockerMigrationConflictingPackagesForUser: ["GET /users/{username}/docker/conflicts"],
        listPackagesForAuthenticatedUser: ["GET /user/packages"],
        listPackagesForOrganization: ["GET /orgs/{org}/packages"],
        listPackagesForUser: ["GET /users/{username}/packages"],
        restorePackageForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/restore{?token}"],
        restorePackageForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],
        restorePackageForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],
        restorePackageVersionForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
        restorePackageVersionForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
        restorePackageVersionForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
      },
      projects: {
        addCollaborator: ["PUT /projects/{project_id}/collaborators/{username}"],
        createCard: ["POST /projects/columns/{column_id}/cards"],
        createColumn: ["POST /projects/{project_id}/columns"],
        createForAuthenticatedUser: ["POST /user/projects"],
        createForOrg: ["POST /orgs/{org}/projects"],
        createForRepo: ["POST /repos/{owner}/{repo}/projects"],
        delete: ["DELETE /projects/{project_id}"],
        deleteCard: ["DELETE /projects/columns/cards/{card_id}"],
        deleteColumn: ["DELETE /projects/columns/{column_id}"],
        get: ["GET /projects/{project_id}"],
        getCard: ["GET /projects/columns/cards/{card_id}"],
        getColumn: ["GET /projects/columns/{column_id}"],
        getPermissionForUser: ["GET /projects/{project_id}/collaborators/{username}/permission"],
        listCards: ["GET /projects/columns/{column_id}/cards"],
        listCollaborators: ["GET /projects/{project_id}/collaborators"],
        listColumns: ["GET /projects/{project_id}/columns"],
        listForOrg: ["GET /orgs/{org}/projects"],
        listForRepo: ["GET /repos/{owner}/{repo}/projects"],
        listForUser: ["GET /users/{username}/projects"],
        moveCard: ["POST /projects/columns/cards/{card_id}/moves"],
        moveColumn: ["POST /projects/columns/{column_id}/moves"],
        removeCollaborator: ["DELETE /projects/{project_id}/collaborators/{username}"],
        update: ["PATCH /projects/{project_id}"],
        updateCard: ["PATCH /projects/columns/cards/{card_id}"],
        updateColumn: ["PATCH /projects/columns/{column_id}"],
      },
      pulls: {
        checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
        create: ["POST /repos/{owner}/{repo}/pulls"],
        createReplyForReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],
        createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
        createReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
        deletePendingReview: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
        deleteReviewComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
        dismissReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],
        get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
        getReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
        getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
        list: ["GET /repos/{owner}/{repo}/pulls"],
        listCommentsForReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],
        listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
        listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
        listRequestedReviewers: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
        listReviewComments: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
        listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
        listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
        merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
        removeRequestedReviewers: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
        requestReviewers: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
        submitReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],
        update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
        updateBranch: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],
        updateReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
        updateReviewComment: ["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
      },
      rateLimit: { get: ["GET /rate_limit"] },
      reactions: {
        createForCommitComment: ["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
        createForIssue: ["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
        createForIssueComment: ["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
        createForPullRequestReviewComment: ["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
        createForRelease: ["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],
        createForTeamDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
        createForTeamDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
        deleteForCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],
        deleteForIssue: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],
        deleteForIssueComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],
        deleteForPullRequestComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],
        deleteForRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],
        deleteForTeamDiscussion: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],
        deleteForTeamDiscussionComment: [
          "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
        ],
        listForCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
        listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
        listForIssueComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
        listForPullRequestReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
        listForRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],
        listForTeamDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
        listForTeamDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
      },
      repos: {
        acceptInvitation: ["PATCH /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }],
        acceptInvitationForAuthenticatedUser: ["PATCH /user/repository_invitations/{invitation_id}"],
        addAppAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
        addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
        addStatusCheckContexts: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
        addTeamAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
        addUserAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
        cancelPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],
        checkAutomatedSecurityFixes: ["GET /repos/{owner}/{repo}/automated-security-fixes"],
        checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
        checkVulnerabilityAlerts: ["GET /repos/{owner}/{repo}/vulnerability-alerts"],
        codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
        compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
        compareCommitsWithBasehead: ["GET /repos/{owner}/{repo}/compare/{basehead}"],
        createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
        createCommitComment: ["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
        createCommitSignatureProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
        createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
        createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
        createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
        createDeploymentBranchPolicy: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
        createDeploymentProtectionRule: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
        createDeploymentStatus: ["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
        createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
        createForAuthenticatedUser: ["POST /user/repos"],
        createFork: ["POST /repos/{owner}/{repo}/forks"],
        createInOrg: ["POST /orgs/{org}/repos"],
        createOrUpdateCustomPropertiesValues: ["PATCH /repos/{owner}/{repo}/properties/values"],
        createOrUpdateEnvironment: ["PUT /repos/{owner}/{repo}/environments/{environment_name}"],
        createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
        createOrgRuleset: ["POST /orgs/{org}/rulesets"],
        createPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments"],
        createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
        createRelease: ["POST /repos/{owner}/{repo}/releases"],
        createRepoRuleset: ["POST /repos/{owner}/{repo}/rulesets"],
        createTagProtection: ["POST /repos/{owner}/{repo}/tags/protection"],
        createUsingTemplate: ["POST /repos/{template_owner}/{template_repo}/generate"],
        createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
        declineInvitation: ["DELETE /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }],
        declineInvitationForAuthenticatedUser: ["DELETE /user/repository_invitations/{invitation_id}"],
        delete: ["DELETE /repos/{owner}/{repo}"],
        deleteAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
        deleteAdminBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
        deleteAnEnvironment: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],
        deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
        deleteBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],
        deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
        deleteCommitSignatureProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
        deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
        deleteDeployment: ["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],
        deleteDeploymentBranchPolicy: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
        deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
        deleteInvitation: ["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],
        deleteOrgRuleset: ["DELETE /orgs/{org}/rulesets/{ruleset_id}"],
        deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
        deletePullRequestReviewProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
        deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
        deleteReleaseAsset: ["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],
        deleteRepoRuleset: ["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
        deleteTagProtection: ["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],
        deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
        disableAutomatedSecurityFixes: ["DELETE /repos/{owner}/{repo}/automated-security-fixes"],
        disableDeploymentProtectionRule: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
        disablePrivateVulnerabilityReporting: ["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],
        disableVulnerabilityAlerts: ["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],
        downloadArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}", {}, { renamed: ["repos", "downloadZipballArchive"] }],
        downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
        downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
        enableAutomatedSecurityFixes: ["PUT /repos/{owner}/{repo}/automated-security-fixes"],
        enablePrivateVulnerabilityReporting: ["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],
        enableVulnerabilityAlerts: ["PUT /repos/{owner}/{repo}/vulnerability-alerts"],
        generateReleaseNotes: ["POST /repos/{owner}/{repo}/releases/generate-notes"],
        get: ["GET /repos/{owner}/{repo}"],
        getAccessRestrictions: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
        getAdminBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
        getAllDeploymentProtectionRules: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
        getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
        getAllStatusCheckContexts: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],
        getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
        getAppsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],
        getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
        getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
        getBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection"],
        getBranchRules: ["GET /repos/{owner}/{repo}/rules/branches/{branch}"],
        getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
        getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
        getCollaboratorPermissionLevel: ["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],
        getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
        getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
        getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
        getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
        getCommitSignatureProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
        getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
        getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
        getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
        getCustomDeploymentProtectionRule: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
        getCustomPropertiesValues: ["GET /repos/{owner}/{repo}/properties/values"],
        getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
        getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
        getDeploymentBranchPolicy: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
        getDeploymentStatus: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],
        getEnvironment: ["GET /repos/{owner}/{repo}/environments/{environment_name}"],
        getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
        getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
        getOrgRuleSuite: ["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],
        getOrgRuleSuites: ["GET /orgs/{org}/rulesets/rule-suites"],
        getOrgRuleset: ["GET /orgs/{org}/rulesets/{ruleset_id}"],
        getOrgRulesets: ["GET /orgs/{org}/rulesets"],
        getPages: ["GET /repos/{owner}/{repo}/pages"],
        getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
        getPagesDeployment: ["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],
        getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
        getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
        getPullRequestReviewProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
        getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
        getReadme: ["GET /repos/{owner}/{repo}/readme"],
        getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
        getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
        getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
        getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
        getRepoRuleSuite: ["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],
        getRepoRuleSuites: ["GET /repos/{owner}/{repo}/rulesets/rule-suites"],
        getRepoRuleset: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
        getRepoRulesets: ["GET /repos/{owner}/{repo}/rulesets"],
        getStatusChecksProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
        getTeamsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],
        getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
        getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
        getUsersWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],
        getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
        getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
        getWebhookConfigForRepo: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],
        getWebhookDelivery: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],
        listActivities: ["GET /repos/{owner}/{repo}/activity"],
        listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
        listBranches: ["GET /repos/{owner}/{repo}/branches"],
        listBranchesForHeadCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],
        listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
        listCommentsForCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
        listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
        listCommitStatusesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],
        listCommits: ["GET /repos/{owner}/{repo}/commits"],
        listContributors: ["GET /repos/{owner}/{repo}/contributors"],
        listCustomDeploymentRuleIntegrations: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],
        listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
        listDeploymentBranchPolicies: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
        listDeploymentStatuses: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
        listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
        listForAuthenticatedUser: ["GET /user/repos"],
        listForOrg: ["GET /orgs/{org}/repos"],
        listForUser: ["GET /users/{username}/repos"],
        listForks: ["GET /repos/{owner}/{repo}/forks"],
        listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
        listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
        listLanguages: ["GET /repos/{owner}/{repo}/languages"],
        listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
        listPublic: ["GET /repositories"],
        listPullRequestsAssociatedWithCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],
        listReleaseAssets: ["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],
        listReleases: ["GET /repos/{owner}/{repo}/releases"],
        listTagProtection: ["GET /repos/{owner}/{repo}/tags/protection"],
        listTags: ["GET /repos/{owner}/{repo}/tags"],
        listTeams: ["GET /repos/{owner}/{repo}/teams"],
        listWebhookDeliveries: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],
        listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
        merge: ["POST /repos/{owner}/{repo}/merges"],
        mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
        pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
        redeliverWebhookDelivery: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
        removeAppAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
        removeCollaborator: ["DELETE /repos/{owner}/{repo}/collaborators/{username}"],
        removeStatusCheckContexts: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
        removeStatusCheckProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
        removeTeamAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
        removeUserAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
        renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
        replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
        requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
        setAdminBranchProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
        setAppAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
        setStatusCheckContexts: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
        setTeamAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
        setUserAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
        testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
        transfer: ["POST /repos/{owner}/{repo}/transfer"],
        update: ["PATCH /repos/{owner}/{repo}"],
        updateBranchProtection: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],
        updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
        updateDeploymentBranchPolicy: ["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
        updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
        updateInvitation: ["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],
        updateOrgRuleset: ["PUT /orgs/{org}/rulesets/{ruleset_id}"],
        updatePullRequestReviewProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
        updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
        updateReleaseAsset: ["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],
        updateRepoRuleset: ["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
        updateStatusCheckPotection: [
          "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
          {},
          { renamed: ["repos", "updateStatusCheckProtection"] },
        ],
        updateStatusCheckProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
        updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
        updateWebhookConfigForRepo: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],
        uploadReleaseAsset: ["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}", { baseUrl: "https://uploads.github.com" }],
      },
      search: {
        code: ["GET /search/code"],
        commits: ["GET /search/commits"],
        issuesAndPullRequests: ["GET /search/issues"],
        labels: ["GET /search/labels"],
        repos: ["GET /search/repositories"],
        topics: ["GET /search/topics"],
        users: ["GET /search/users"],
      },
      secretScanning: {
        getAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
        listAlertsForEnterprise: ["GET /enterprises/{enterprise}/secret-scanning/alerts"],
        listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
        listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
        listLocationsForAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],
        updateAlert: ["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
      },
      securityAdvisories: {
        createFork: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],
        createPrivateVulnerabilityReport: ["POST /repos/{owner}/{repo}/security-advisories/reports"],
        createRepositoryAdvisory: ["POST /repos/{owner}/{repo}/security-advisories"],
        createRepositoryAdvisoryCveRequest: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],
        getGlobalAdvisory: ["GET /advisories/{ghsa_id}"],
        getRepositoryAdvisory: ["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
        listGlobalAdvisories: ["GET /advisories"],
        listOrgRepositoryAdvisories: ["GET /orgs/{org}/security-advisories"],
        listRepositoryAdvisories: ["GET /repos/{owner}/{repo}/security-advisories"],
        updateRepositoryAdvisory: ["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
      },
      teams: {
        addOrUpdateMembershipForUserInOrg: ["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],
        addOrUpdateProjectPermissionsInOrg: ["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
        addOrUpdateRepoPermissionsInOrg: ["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
        checkPermissionsForProjectInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
        checkPermissionsForRepoInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
        create: ["POST /orgs/{org}/teams"],
        createDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
        createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
        deleteDiscussionCommentInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
        deleteDiscussionInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
        deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
        getByName: ["GET /orgs/{org}/teams/{team_slug}"],
        getDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
        getDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
        getMembershipForUserInOrg: ["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],
        list: ["GET /orgs/{org}/teams"],
        listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
        listDiscussionCommentsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
        listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
        listForAuthenticatedUser: ["GET /user/teams"],
        listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
        listPendingInvitationsInOrg: ["GET /orgs/{org}/teams/{team_slug}/invitations"],
        listProjectsInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects"],
        listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
        removeMembershipForUserInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],
        removeProjectInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
        removeRepoInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
        updateDiscussionCommentInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
        updateDiscussionInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
        updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"],
      },
      users: {
        addEmailForAuthenticated: ["POST /user/emails", {}, { renamed: ["users", "addEmailForAuthenticatedUser"] }],
        addEmailForAuthenticatedUser: ["POST /user/emails"],
        addSocialAccountForAuthenticatedUser: ["POST /user/social_accounts"],
        block: ["PUT /user/blocks/{username}"],
        checkBlocked: ["GET /user/blocks/{username}"],
        checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
        checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
        createGpgKeyForAuthenticated: ["POST /user/gpg_keys", {}, { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }],
        createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
        createPublicSshKeyForAuthenticated: ["POST /user/keys", {}, { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }],
        createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
        createSshSigningKeyForAuthenticatedUser: ["POST /user/ssh_signing_keys"],
        deleteEmailForAuthenticated: ["DELETE /user/emails", {}, { renamed: ["users", "deleteEmailForAuthenticatedUser"] }],
        deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
        deleteGpgKeyForAuthenticated: ["DELETE /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }],
        deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
        deletePublicSshKeyForAuthenticated: ["DELETE /user/keys/{key_id}", {}, { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }],
        deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
        deleteSocialAccountForAuthenticatedUser: ["DELETE /user/social_accounts"],
        deleteSshSigningKeyForAuthenticatedUser: ["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],
        follow: ["PUT /user/following/{username}"],
        getAuthenticated: ["GET /user"],
        getByUsername: ["GET /users/{username}"],
        getContextForUser: ["GET /users/{username}/hovercard"],
        getGpgKeyForAuthenticated: ["GET /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }],
        getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
        getPublicSshKeyForAuthenticated: ["GET /user/keys/{key_id}", {}, { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }],
        getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
        getSshSigningKeyForAuthenticatedUser: ["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],
        list: ["GET /users"],
        listBlockedByAuthenticated: ["GET /user/blocks", {}, { renamed: ["users", "listBlockedByAuthenticatedUser"] }],
        listBlockedByAuthenticatedUser: ["GET /user/blocks"],
        listEmailsForAuthenticated: ["GET /user/emails", {}, { renamed: ["users", "listEmailsForAuthenticatedUser"] }],
        listEmailsForAuthenticatedUser: ["GET /user/emails"],
        listFollowedByAuthenticated: ["GET /user/following", {}, { renamed: ["users", "listFollowedByAuthenticatedUser"] }],
        listFollowedByAuthenticatedUser: ["GET /user/following"],
        listFollowersForAuthenticatedUser: ["GET /user/followers"],
        listFollowersForUser: ["GET /users/{username}/followers"],
        listFollowingForUser: ["GET /users/{username}/following"],
        listGpgKeysForAuthenticated: ["GET /user/gpg_keys", {}, { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }],
        listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
        listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
        listPublicEmailsForAuthenticated: ["GET /user/public_emails", {}, { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }],
        listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
        listPublicKeysForUser: ["GET /users/{username}/keys"],
        listPublicSshKeysForAuthenticated: ["GET /user/keys", {}, { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }],
        listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
        listSocialAccountsForAuthenticatedUser: ["GET /user/social_accounts"],
        listSocialAccountsForUser: ["GET /users/{username}/social_accounts"],
        listSshSigningKeysForAuthenticatedUser: ["GET /user/ssh_signing_keys"],
        listSshSigningKeysForUser: ["GET /users/{username}/ssh_signing_keys"],
        setPrimaryEmailVisibilityForAuthenticated: [
          "PATCH /user/email/visibility",
          {},
          { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] },
        ],
        setPrimaryEmailVisibilityForAuthenticatedUser: ["PATCH /user/email/visibility"],
        unblock: ["DELETE /user/blocks/{username}"],
        unfollow: ["DELETE /user/following/{username}"],
        updateAuthenticated: ["PATCH /user"],
      },
    };
    var d = l;
    var h = new Map();
    for (const [e, r] of Object.entries(d)) {
      for (const [s, o] of Object.entries(r)) {
        const [r, n, i] = o;
        const [a, l] = r.split(/ /);
        const d = Object.assign({ method: a, url: l }, n);
        if (!h.has(e)) {
          h.set(e, new Map());
        }
        h.get(e).set(s, { scope: e, methodName: s, endpointDefaults: d, decorations: i });
      }
    }
    var p = {
      has({ scope: e }, r) {
        return h.get(e).has(r);
      },
      getOwnPropertyDescriptor(e, r) {
        return { value: this.get(e, r), configurable: true, writable: true, enumerable: true };
      },
      defineProperty(e, r, s) {
        Object.defineProperty(e.cache, r, s);
        return true;
      },
      deleteProperty(e, r) {
        delete e.cache[r];
        return true;
      },
      ownKeys({ scope: e }) {
        return [...h.get(e).keys()];
      },
      set(e, r, s) {
        return (e.cache[r] = s);
      },
      get({ octokit: e, scope: r, cache: s }, o) {
        if (s[o]) {
          return s[o];
        }
        const n = h.get(r).get(o);
        if (!n) {
          return void 0;
        }
        const { endpointDefaults: i, decorations: a } = n;
        if (a) {
          s[o] = decorate(e, r, o, i, a);
        } else {
          s[o] = e.request.defaults(i);
        }
        return s[o];
      },
    };
    function endpointsToMethods(e) {
      const r = {};
      for (const s of h.keys()) {
        r[s] = new Proxy({ octokit: e, scope: s, cache: {} }, p);
      }
      return r;
    }
    function decorate(e, r, s, o, n) {
      const i = e.request.defaults(o);
      function withDecorations(...o) {
        let a = i.endpoint.merge(...o);
        if (n.mapToData) {
          a = Object.assign({}, a, { data: a[n.mapToData], [n.mapToData]: void 0 });
          return i(a);
        }
        if (n.renamed) {
          const [o, i] = n.renamed;
          e.log.warn(`octokit.${r}.${s}() has been renamed to octokit.${o}.${i}()`);
        }
        if (n.deprecated) {
          e.log.warn(n.deprecated);
        }
        if (n.renamedParameters) {
          const a = i.endpoint.merge(...o);
          for (const [o, i] of Object.entries(n.renamedParameters)) {
            if (o in a) {
              e.log.warn(`"${o}" parameter is deprecated for "octokit.${r}.${s}()". Use "${i}" instead`);
              if (!(i in a)) {
                a[i] = a[o];
              }
              delete a[o];
            }
          }
          return i(a);
        }
        return i(...o);
      }
      return Object.assign(withDecorations, i);
    }
    function restEndpointMethods(e) {
      const r = endpointsToMethods(e);
      return { rest: r };
    }
    restEndpointMethods.VERSION = a;
    function legacyRestEndpointMethods(e) {
      const r = endpointsToMethods(e);
      return { ...r, rest: r };
    }
    legacyRestEndpointMethods.VERSION = a;
    0 && 0;
  },
  4552: function (e, r) {
    var s =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.PersonalAccessTokenCredentialHandler = r.BearerCredentialHandler = r.BasicCredentialHandler = void 0;
    class BasicCredentialHandler {
      constructor(e, r) {
        this.username = e;
        this.password = r;
      }
      prepareRequest(e) {
        if (!e.headers) {
          throw Error("The request has no headers");
        }
        e.headers["Authorization"] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`;
      }
      canHandleAuthentication() {
        return false;
      }
      handleAuthentication() {
        return s(this, void 0, void 0, function* () {
          throw new Error("not implemented");
        });
      }
    }
    r.BasicCredentialHandler = BasicCredentialHandler;
    class BearerCredentialHandler {
      constructor(e) {
        this.token = e;
      }
      prepareRequest(e) {
        if (!e.headers) {
          throw Error("The request has no headers");
        }
        e.headers["Authorization"] = `Bearer ${this.token}`;
      }
      canHandleAuthentication() {
        return false;
      }
      handleAuthentication() {
        return s(this, void 0, void 0, function* () {
          throw new Error("not implemented");
        });
      }
    }
    r.BearerCredentialHandler = BearerCredentialHandler;
    class PersonalAccessTokenCredentialHandler {
      constructor(e) {
        this.token = e;
      }
      prepareRequest(e) {
        if (!e.headers) {
          throw Error("The request has no headers");
        }
        e.headers["Authorization"] = `Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`;
      }
      canHandleAuthentication() {
        return false;
      }
      handleAuthentication() {
        return s(this, void 0, void 0, function* () {
          throw new Error("not implemented");
        });
      }
    }
    r.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
  },
  4844: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            var n = Object.getOwnPropertyDescriptor(r, s);
            if (!n || ("get" in n ? !r.__esModule : n.writable || n.configurable)) {
              n = {
                enumerable: true,
                get: function () {
                  return r[s];
                },
              };
            }
            Object.defineProperty(e, o, n);
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.HttpClient = r.isHttps = r.HttpClientResponse = r.HttpClientError = r.getProxyUrl = r.MediaTypes = r.Headers = r.HttpCodes = void 0;
    const l = i(s(8611));
    const d = i(s(5692));
    const h = i(s(4988));
    const p = i(s(770));
    const w = s(6752);
    var k;
    (function (e) {
      e[(e["OK"] = 200)] = "OK";
      e[(e["MultipleChoices"] = 300)] = "MultipleChoices";
      e[(e["MovedPermanently"] = 301)] = "MovedPermanently";
      e[(e["ResourceMoved"] = 302)] = "ResourceMoved";
      e[(e["SeeOther"] = 303)] = "SeeOther";
      e[(e["NotModified"] = 304)] = "NotModified";
      e[(e["UseProxy"] = 305)] = "UseProxy";
      e[(e["SwitchProxy"] = 306)] = "SwitchProxy";
      e[(e["TemporaryRedirect"] = 307)] = "TemporaryRedirect";
      e[(e["PermanentRedirect"] = 308)] = "PermanentRedirect";
      e[(e["BadRequest"] = 400)] = "BadRequest";
      e[(e["Unauthorized"] = 401)] = "Unauthorized";
      e[(e["PaymentRequired"] = 402)] = "PaymentRequired";
      e[(e["Forbidden"] = 403)] = "Forbidden";
      e[(e["NotFound"] = 404)] = "NotFound";
      e[(e["MethodNotAllowed"] = 405)] = "MethodNotAllowed";
      e[(e["NotAcceptable"] = 406)] = "NotAcceptable";
      e[(e["ProxyAuthenticationRequired"] = 407)] = "ProxyAuthenticationRequired";
      e[(e["RequestTimeout"] = 408)] = "RequestTimeout";
      e[(e["Conflict"] = 409)] = "Conflict";
      e[(e["Gone"] = 410)] = "Gone";
      e[(e["TooManyRequests"] = 429)] = "TooManyRequests";
      e[(e["InternalServerError"] = 500)] = "InternalServerError";
      e[(e["NotImplemented"] = 501)] = "NotImplemented";
      e[(e["BadGateway"] = 502)] = "BadGateway";
      e[(e["ServiceUnavailable"] = 503)] = "ServiceUnavailable";
      e[(e["GatewayTimeout"] = 504)] = "GatewayTimeout";
    })(k || (r.HttpCodes = k = {}));
    var _;
    (function (e) {
      e["Accept"] = "accept";
      e["ContentType"] = "content-type";
    })(_ || (r.Headers = _ = {}));
    var M;
    (function (e) {
      e["ApplicationJson"] = "application/json";
    })(M || (r.MediaTypes = M = {}));
    function getProxyUrl(e) {
      const r = h.getProxyUrl(new URL(e));
      return r ? r.href : "";
    }
    r.getProxyUrl = getProxyUrl;
    const j = [k.MovedPermanently, k.ResourceMoved, k.SeeOther, k.TemporaryRedirect, k.PermanentRedirect];
    const q = [k.BadGateway, k.ServiceUnavailable, k.GatewayTimeout];
    const $ = ["OPTIONS", "GET", "DELETE", "HEAD"];
    const ee = 10;
    const te = 5;
    class HttpClientError extends Error {
      constructor(e, r) {
        super(e);
        this.name = "HttpClientError";
        this.statusCode = r;
        Object.setPrototypeOf(this, HttpClientError.prototype);
      }
    }
    r.HttpClientError = HttpClientError;
    class HttpClientResponse {
      constructor(e) {
        this.message = e;
      }
      readBody() {
        return a(this, void 0, void 0, function* () {
          return new Promise((e) =>
            a(this, void 0, void 0, function* () {
              let r = Buffer.alloc(0);
              this.message.on("data", (e) => {
                r = Buffer.concat([r, e]);
              });
              this.message.on("end", () => {
                e(r.toString());
              });
            })
          );
        });
      }
      readBodyBuffer() {
        return a(this, void 0, void 0, function* () {
          return new Promise((e) =>
            a(this, void 0, void 0, function* () {
              const r = [];
              this.message.on("data", (e) => {
                r.push(e);
              });
              this.message.on("end", () => {
                e(Buffer.concat(r));
              });
            })
          );
        });
      }
    }
    r.HttpClientResponse = HttpClientResponse;
    function isHttps(e) {
      const r = new URL(e);
      return r.protocol === "https:";
    }
    r.isHttps = isHttps;
    class HttpClient {
      constructor(e, r, s) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = e;
        this.handlers = r || [];
        this.requestOptions = s;
        if (s) {
          if (s.ignoreSslError != null) {
            this._ignoreSslError = s.ignoreSslError;
          }
          this._socketTimeout = s.socketTimeout;
          if (s.allowRedirects != null) {
            this._allowRedirects = s.allowRedirects;
          }
          if (s.allowRedirectDowngrade != null) {
            this._allowRedirectDowngrade = s.allowRedirectDowngrade;
          }
          if (s.maxRedirects != null) {
            this._maxRedirects = Math.max(s.maxRedirects, 0);
          }
          if (s.keepAlive != null) {
            this._keepAlive = s.keepAlive;
          }
          if (s.allowRetries != null) {
            this._allowRetries = s.allowRetries;
          }
          if (s.maxRetries != null) {
            this._maxRetries = s.maxRetries;
          }
        }
      }
      options(e, r) {
        return a(this, void 0, void 0, function* () {
          return this.request("OPTIONS", e, null, r || {});
        });
      }
      get(e, r) {
        return a(this, void 0, void 0, function* () {
          return this.request("GET", e, null, r || {});
        });
      }
      del(e, r) {
        return a(this, void 0, void 0, function* () {
          return this.request("DELETE", e, null, r || {});
        });
      }
      post(e, r, s) {
        return a(this, void 0, void 0, function* () {
          return this.request("POST", e, r, s || {});
        });
      }
      patch(e, r, s) {
        return a(this, void 0, void 0, function* () {
          return this.request("PATCH", e, r, s || {});
        });
      }
      put(e, r, s) {
        return a(this, void 0, void 0, function* () {
          return this.request("PUT", e, r, s || {});
        });
      }
      head(e, r) {
        return a(this, void 0, void 0, function* () {
          return this.request("HEAD", e, null, r || {});
        });
      }
      sendStream(e, r, s, o) {
        return a(this, void 0, void 0, function* () {
          return this.request(e, r, s, o);
        });
      }
      getJson(e, r = {}) {
        return a(this, void 0, void 0, function* () {
          r[_.Accept] = this._getExistingOrDefaultHeader(r, _.Accept, M.ApplicationJson);
          const s = yield this.get(e, r);
          return this._processResponse(s, this.requestOptions);
        });
      }
      postJson(e, r, s = {}) {
        return a(this, void 0, void 0, function* () {
          const o = JSON.stringify(r, null, 2);
          s[_.Accept] = this._getExistingOrDefaultHeader(s, _.Accept, M.ApplicationJson);
          s[_.ContentType] = this._getExistingOrDefaultHeader(s, _.ContentType, M.ApplicationJson);
          const n = yield this.post(e, o, s);
          return this._processResponse(n, this.requestOptions);
        });
      }
      putJson(e, r, s = {}) {
        return a(this, void 0, void 0, function* () {
          const o = JSON.stringify(r, null, 2);
          s[_.Accept] = this._getExistingOrDefaultHeader(s, _.Accept, M.ApplicationJson);
          s[_.ContentType] = this._getExistingOrDefaultHeader(s, _.ContentType, M.ApplicationJson);
          const n = yield this.put(e, o, s);
          return this._processResponse(n, this.requestOptions);
        });
      }
      patchJson(e, r, s = {}) {
        return a(this, void 0, void 0, function* () {
          const o = JSON.stringify(r, null, 2);
          s[_.Accept] = this._getExistingOrDefaultHeader(s, _.Accept, M.ApplicationJson);
          s[_.ContentType] = this._getExistingOrDefaultHeader(s, _.ContentType, M.ApplicationJson);
          const n = yield this.patch(e, o, s);
          return this._processResponse(n, this.requestOptions);
        });
      }
      request(e, r, s, o) {
        return a(this, void 0, void 0, function* () {
          if (this._disposed) {
            throw new Error("Client has already been disposed.");
          }
          const n = new URL(r);
          let i = this._prepareRequest(e, n, o);
          const a = this._allowRetries && $.includes(e) ? this._maxRetries + 1 : 1;
          let l = 0;
          let d;
          do {
            d = yield this.requestRaw(i, s);
            if (d && d.message && d.message.statusCode === k.Unauthorized) {
              let e;
              for (const r of this.handlers) {
                if (r.canHandleAuthentication(d)) {
                  e = r;
                  break;
                }
              }
              if (e) {
                return e.handleAuthentication(this, i, s);
              } else {
                return d;
              }
            }
            let r = this._maxRedirects;
            while (d.message.statusCode && j.includes(d.message.statusCode) && this._allowRedirects && r > 0) {
              const a = d.message.headers["location"];
              if (!a) {
                break;
              }
              const l = new URL(a);
              if (n.protocol === "https:" && n.protocol !== l.protocol && !this._allowRedirectDowngrade) {
                throw new Error(
                  "Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true."
                );
              }
              yield d.readBody();
              if (l.hostname !== n.hostname) {
                for (const e in o) {
                  if (e.toLowerCase() === "authorization") {
                    delete o[e];
                  }
                }
              }
              i = this._prepareRequest(e, l, o);
              d = yield this.requestRaw(i, s);
              r--;
            }
            if (!d.message.statusCode || !q.includes(d.message.statusCode)) {
              return d;
            }
            l += 1;
            if (l < a) {
              yield d.readBody();
              yield this._performExponentialBackoff(l);
            }
          } while (l < a);
          return d;
        });
      }
      dispose() {
        if (this._agent) {
          this._agent.destroy();
        }
        this._disposed = true;
      }
      requestRaw(e, r) {
        return a(this, void 0, void 0, function* () {
          return new Promise((s, o) => {
            function callbackForResult(e, r) {
              if (e) {
                o(e);
              } else if (!r) {
                o(new Error("Unknown error"));
              } else {
                s(r);
              }
            }
            this.requestRawWithCallback(e, r, callbackForResult);
          });
        });
      }
      requestRawWithCallback(e, r, s) {
        if (typeof r === "string") {
          if (!e.options.headers) {
            e.options.headers = {};
          }
          e.options.headers["Content-Length"] = Buffer.byteLength(r, "utf8");
        }
        let o = false;
        function handleResult(e, r) {
          if (!o) {
            o = true;
            s(e, r);
          }
        }
        const n = e.httpModule.request(e.options, (e) => {
          const r = new HttpClientResponse(e);
          handleResult(undefined, r);
        });
        let i;
        n.on("socket", (e) => {
          i = e;
        });
        n.setTimeout(this._socketTimeout || 3 * 6e4, () => {
          if (i) {
            i.end();
          }
          handleResult(new Error(`Request timeout: ${e.options.path}`));
        });
        n.on("error", function (e) {
          handleResult(e);
        });
        if (r && typeof r === "string") {
          n.write(r, "utf8");
        }
        if (r && typeof r !== "string") {
          r.on("close", function () {
            n.end();
          });
          r.pipe(n);
        } else {
          n.end();
        }
      }
      getAgent(e) {
        const r = new URL(e);
        return this._getAgent(r);
      }
      getAgentDispatcher(e) {
        const r = new URL(e);
        const s = h.getProxyUrl(r);
        const o = s && s.hostname;
        if (!o) {
          return;
        }
        return this._getProxyAgentDispatcher(r, s);
      }
      _prepareRequest(e, r, s) {
        const o = {};
        o.parsedUrl = r;
        const n = o.parsedUrl.protocol === "https:";
        o.httpModule = n ? d : l;
        const i = n ? 443 : 80;
        o.options = {};
        o.options.host = o.parsedUrl.hostname;
        o.options.port = o.parsedUrl.port ? parseInt(o.parsedUrl.port) : i;
        o.options.path = (o.parsedUrl.pathname || "") + (o.parsedUrl.search || "");
        o.options.method = e;
        o.options.headers = this._mergeHeaders(s);
        if (this.userAgent != null) {
          o.options.headers["user-agent"] = this.userAgent;
        }
        o.options.agent = this._getAgent(o.parsedUrl);
        if (this.handlers) {
          for (const e of this.handlers) {
            e.prepareRequest(o.options);
          }
        }
        return o;
      }
      _mergeHeaders(e) {
        if (this.requestOptions && this.requestOptions.headers) {
          return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(e || {}));
        }
        return lowercaseKeys(e || {});
      }
      _getExistingOrDefaultHeader(e, r, s) {
        let o;
        if (this.requestOptions && this.requestOptions.headers) {
          o = lowercaseKeys(this.requestOptions.headers)[r];
        }
        return e[r] || o || s;
      }
      _getAgent(e) {
        let r;
        const s = h.getProxyUrl(e);
        const o = s && s.hostname;
        if (this._keepAlive && o) {
          r = this._proxyAgent;
        }
        if (!o) {
          r = this._agent;
        }
        if (r) {
          return r;
        }
        const n = e.protocol === "https:";
        let i = 100;
        if (this.requestOptions) {
          i = this.requestOptions.maxSockets || l.globalAgent.maxSockets;
        }
        if (s && s.hostname) {
          const e = {
            maxSockets: i,
            keepAlive: this._keepAlive,
            proxy: Object.assign(Object.assign({}, (s.username || s.password) && { proxyAuth: `${s.username}:${s.password}` }), {
              host: s.hostname,
              port: s.port,
            }),
          };
          let o;
          const a = s.protocol === "https:";
          if (n) {
            o = a ? p.httpsOverHttps : p.httpsOverHttp;
          } else {
            o = a ? p.httpOverHttps : p.httpOverHttp;
          }
          r = o(e);
          this._proxyAgent = r;
        }
        if (!r) {
          const e = { keepAlive: this._keepAlive, maxSockets: i };
          r = n ? new d.Agent(e) : new l.Agent(e);
          this._agent = r;
        }
        if (n && this._ignoreSslError) {
          r.options = Object.assign(r.options || {}, { rejectUnauthorized: false });
        }
        return r;
      }
      _getProxyAgentDispatcher(e, r) {
        let s;
        if (this._keepAlive) {
          s = this._proxyAgentDispatcher;
        }
        if (s) {
          return s;
        }
        const o = e.protocol === "https:";
        s = new w.ProxyAgent(
          Object.assign(
            { uri: r.href, pipelining: !this._keepAlive ? 0 : 1 },
            (r.username || r.password) && { token: `Basic ${Buffer.from(`${r.username}:${r.password}`).toString("base64")}` }
          )
        );
        this._proxyAgentDispatcher = s;
        if (o && this._ignoreSslError) {
          s.options = Object.assign(s.options.requestTls || {}, { rejectUnauthorized: false });
        }
        return s;
      }
      _performExponentialBackoff(e) {
        return a(this, void 0, void 0, function* () {
          e = Math.min(ee, e);
          const r = te * Math.pow(2, e);
          return new Promise((e) => setTimeout(() => e(), r));
        });
      }
      _processResponse(e, r) {
        return a(this, void 0, void 0, function* () {
          return new Promise((s, o) =>
            a(this, void 0, void 0, function* () {
              const n = e.message.statusCode || 0;
              const i = { statusCode: n, result: null, headers: {} };
              if (n === k.NotFound) {
                s(i);
              }
              function dateTimeDeserializer(e, r) {
                if (typeof r === "string") {
                  const e = new Date(r);
                  if (!isNaN(e.valueOf())) {
                    return e;
                  }
                }
                return r;
              }
              let a;
              let l;
              try {
                l = yield e.readBody();
                if (l && l.length > 0) {
                  if (r && r.deserializeDates) {
                    a = JSON.parse(l, dateTimeDeserializer);
                  } else {
                    a = JSON.parse(l);
                  }
                  i.result = a;
                }
                i.headers = e.message.headers;
              } catch (e) {}
              if (n > 299) {
                let e;
                if (a && a.message) {
                  e = a.message;
                } else if (l && l.length > 0) {
                  e = l;
                } else {
                  e = `Failed request: (${n})`;
                }
                const r = new HttpClientError(e, n);
                r.result = i.result;
                o(r);
              } else {
                s(i);
              }
            })
          );
        });
      }
    }
    r.HttpClient = HttpClient;
    const lowercaseKeys = (e) => Object.keys(e).reduce((r, s) => ((r[s.toLowerCase()] = e[s]), r), {});
  },
  4988: (e, r) => {
    Object.defineProperty(r, "__esModule", { value: true });
    r.checkBypass = r.getProxyUrl = void 0;
    function getProxyUrl(e) {
      const r = e.protocol === "https:";
      if (checkBypass(e)) {
        return undefined;
      }
      const s = (() => {
        if (r) {
          return process.env["https_proxy"] || process.env["HTTPS_PROXY"];
        } else {
          return process.env["http_proxy"] || process.env["HTTP_PROXY"];
        }
      })();
      if (s) {
        try {
          return new DecodedURL(s);
        } catch (e) {
          if (!s.startsWith("http://") && !s.startsWith("https://")) return new DecodedURL(`http://${s}`);
        }
      } else {
        return undefined;
      }
    }
    r.getProxyUrl = getProxyUrl;
    function checkBypass(e) {
      if (!e.hostname) {
        return false;
      }
      const r = e.hostname;
      if (isLoopbackAddress(r)) {
        return true;
      }
      const s = process.env["no_proxy"] || process.env["NO_PROXY"] || "";
      if (!s) {
        return false;
      }
      let o;
      if (e.port) {
        o = Number(e.port);
      } else if (e.protocol === "http:") {
        o = 80;
      } else if (e.protocol === "https:") {
        o = 443;
      }
      const n = [e.hostname.toUpperCase()];
      if (typeof o === "number") {
        n.push(`${n[0]}:${o}`);
      }
      for (const e of s
        .split(",")
        .map((e) => e.trim().toUpperCase())
        .filter((e) => e)) {
        if (e === "*" || n.some((r) => r === e || r.endsWith(`.${e}`) || (e.startsWith(".") && r.endsWith(`${e}`)))) {
          return true;
        }
      }
      return false;
    }
    r.checkBypass = checkBypass;
    function isLoopbackAddress(e) {
      const r = e.toLowerCase();
      return r === "localhost" || r.startsWith("127.") || r.startsWith("[::1]") || r.startsWith("[0:0:0:0:0:0:0:1]");
    }
    class DecodedURL extends URL {
      constructor(e, r) {
        super(e, r);
        this._decodedUsername = decodeURIComponent(super.username);
        this._decodedPassword = decodeURIComponent(super.password);
      }
      get username() {
        return this._decodedUsername;
      }
      get password() {
        return this._decodedPassword;
      }
    }
  },
  5207: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            Object.defineProperty(e, o, {
              enumerable: true,
              get: function () {
                return r[s];
              },
            });
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    var l;
    Object.defineProperty(r, "__esModule", { value: true });
    r.getCmdPath =
      r.tryGetExecutablePath =
      r.isRooted =
      r.isDirectory =
      r.exists =
      r.READONLY =
      r.UV_FS_O_EXLOCK =
      r.IS_WINDOWS =
      r.unlink =
      r.symlink =
      r.stat =
      r.rmdir =
      r.rm =
      r.rename =
      r.readlink =
      r.readdir =
      r.open =
      r.mkdir =
      r.lstat =
      r.copyFile =
      r.chmod =
        void 0;
    const d = i(s(9896));
    const h = i(s(6928));
    ((l = d.promises),
      (r.chmod = l.chmod),
      (r.copyFile = l.copyFile),
      (r.lstat = l.lstat),
      (r.mkdir = l.mkdir),
      (r.open = l.open),
      (r.readdir = l.readdir),
      (r.readlink = l.readlink),
      (r.rename = l.rename),
      (r.rm = l.rm),
      (r.rmdir = l.rmdir),
      (r.stat = l.stat),
      (r.symlink = l.symlink),
      (r.unlink = l.unlink));
    r.IS_WINDOWS = process.platform === "win32";
    r.UV_FS_O_EXLOCK = 268435456;
    r.READONLY = d.constants.O_RDONLY;
    function exists(e) {
      return a(this, void 0, void 0, function* () {
        try {
          yield r.stat(e);
        } catch (e) {
          if (e.code === "ENOENT") {
            return false;
          }
          throw e;
        }
        return true;
      });
    }
    r.exists = exists;
    function isDirectory(e, s = false) {
      return a(this, void 0, void 0, function* () {
        const o = s ? yield r.stat(e) : yield r.lstat(e);
        return o.isDirectory();
      });
    }
    r.isDirectory = isDirectory;
    function isRooted(e) {
      e = normalizeSeparators(e);
      if (!e) {
        throw new Error('isRooted() parameter "p" cannot be empty');
      }
      if (r.IS_WINDOWS) {
        return e.startsWith("\\") || /^[A-Z]:/i.test(e);
      }
      return e.startsWith("/");
    }
    r.isRooted = isRooted;
    function tryGetExecutablePath(e, s) {
      return a(this, void 0, void 0, function* () {
        let o = undefined;
        try {
          o = yield r.stat(e);
        } catch (r) {
          if (r.code !== "ENOENT") {
            console.log(`Unexpected error attempting to determine if executable file exists '${e}': ${r}`);
          }
        }
        if (o && o.isFile()) {
          if (r.IS_WINDOWS) {
            const r = h.extname(e).toUpperCase();
            if (s.some((e) => e.toUpperCase() === r)) {
              return e;
            }
          } else {
            if (isUnixExecutable(o)) {
              return e;
            }
          }
        }
        const n = e;
        for (const i of s) {
          e = n + i;
          o = undefined;
          try {
            o = yield r.stat(e);
          } catch (r) {
            if (r.code !== "ENOENT") {
              console.log(`Unexpected error attempting to determine if executable file exists '${e}': ${r}`);
            }
          }
          if (o && o.isFile()) {
            if (r.IS_WINDOWS) {
              try {
                const s = h.dirname(e);
                const o = h.basename(e).toUpperCase();
                for (const n of yield r.readdir(s)) {
                  if (o === n.toUpperCase()) {
                    e = h.join(s, n);
                    break;
                  }
                }
              } catch (r) {
                console.log(`Unexpected error attempting to determine the actual case of the file '${e}': ${r}`);
              }
              return e;
            } else {
              if (isUnixExecutable(o)) {
                return e;
              }
            }
          }
        }
        return "";
      });
    }
    r.tryGetExecutablePath = tryGetExecutablePath;
    function normalizeSeparators(e) {
      e = e || "";
      if (r.IS_WINDOWS) {
        e = e.replace(/\//g, "\\");
        return e.replace(/\\\\+/g, "\\");
      }
      return e.replace(/\/\/+/g, "/");
    }
    function isUnixExecutable(e) {
      return (e.mode & 1) > 0 || ((e.mode & 8) > 0 && e.gid === process.getgid()) || ((e.mode & 64) > 0 && e.uid === process.getuid());
    }
    function getCmdPath() {
      var e;
      return (e = process.env["COMSPEC"]) !== null && e !== void 0 ? e : `cmd.exe`;
    }
    r.getCmdPath = getCmdPath;
  },
  4994: function (e, r, s) {
    var o =
      (this && this.__createBinding) ||
      (Object.create
        ? function (e, r, s, o) {
            if (o === undefined) o = s;
            Object.defineProperty(e, o, {
              enumerable: true,
              get: function () {
                return r[s];
              },
            });
          }
        : function (e, r, s, o) {
            if (o === undefined) o = s;
            e[o] = r[s];
          });
    var n =
      (this && this.__setModuleDefault) ||
      (Object.create
        ? function (e, r) {
            Object.defineProperty(e, "default", { enumerable: true, value: r });
          }
        : function (e, r) {
            e["default"] = r;
          });
    var i =
      (this && this.__importStar) ||
      function (e) {
        if (e && e.__esModule) return e;
        var r = {};
        if (e != null) for (var s in e) if (s !== "default" && Object.hasOwnProperty.call(e, s)) o(r, e, s);
        n(r, e);
        return r;
      };
    var a =
      (this && this.__awaiter) ||
      function (e, r, s, o) {
        function adopt(e) {
          return e instanceof s
            ? e
            : new s(function (r) {
                r(e);
              });
        }
        return new (s || (s = Promise))(function (s, n) {
          function fulfilled(e) {
            try {
              step(o.next(e));
            } catch (e) {
              n(e);
            }
          }
          function rejected(e) {
            try {
              step(o["throw"](e));
            } catch (e) {
              n(e);
            }
          }
          function step(e) {
            e.done ? s(e.value) : adopt(e.value).then(fulfilled, rejected);
          }
          step((o = o.apply(e, r || [])).next());
        });
      };
    Object.defineProperty(r, "__esModule", { value: true });
    r.findInPath = r.which = r.mkdirP = r.rmRF = r.mv = r.cp = void 0;
    const l = s(2613);
    const d = i(s(6928));
    const h = i(s(5207));
    function cp(e, r, s = {}) {
      return a(this, void 0, void 0, function* () {
        const { force: o, recursive: n, copySourceDirectory: i } = readCopyOptions(s);
        const a = (yield h.exists(r)) ? yield h.stat(r) : null;
        if (a && a.isFile() && !o) {
          return;
        }
        const l = a && a.isDirectory() && i ? d.join(r, d.basename(e)) : r;
        if (!(yield h.exists(e))) {
          throw new Error(`no such file or directory: ${e}`);
        }
        const p = yield h.stat(e);
        if (p.isDirectory()) {
          if (!n) {
            throw new Error(`Failed to copy. ${e} is a directory, but tried to copy without recursive flag.`);
          } else {
            yield cpDirRecursive(e, l, 0, o);
          }
        } else {
          if (d.relative(e, l) === "") {
            throw new Error(`'${l}' and '${e}' are the same file`);
          }
          yield copyFile(e, l, o);
        }
      });
    }
    r.cp = cp;
    function mv(e, r, s = {}) {
      return a(this, void 0, void 0, function* () {
        if (yield h.exists(r)) {
          let o = true;
          if (yield h.isDirectory(r)) {
            r = d.join(r, d.basename(e));
            o = yield h.exists(r);
          }
          if (o) {
            if (s.force == null || s.force) {
              yield rmRF(r);
            } else {
              throw new Error("Destination already exists");
            }
          }
        }
        yield mkdirP(d.dirname(r));
        yield h.rename(e, r);
      });
    }
    r.mv = mv;
    function rmRF(e) {
      return a(this, void 0, void 0, function* () {
        if (h.IS_WINDOWS) {
          if (/[*"<>|]/.test(e)) {
            throw new Error('File path must not contain `*`, `"`, `<`, `>` or `|` on Windows');
          }
        }
        try {
          yield h.rm(e, { force: true, maxRetries: 3, recursive: true, retryDelay: 300 });
        } catch (e) {
          throw new Error(`File was unable to be removed ${e}`);
        }
      });
    }
    r.rmRF = rmRF;
    function mkdirP(e) {
      return a(this, void 0, void 0, function* () {
        l.ok(e, "a path argument must be provided");
        yield h.mkdir(e, { recursive: true });
      });
    }
    r.mkdirP = mkdirP;
    function which(e, r) {
      return a(this, void 0, void 0, function* () {
        if (!e) {
          throw new Error("parameter 'tool' is required");
        }
        if (r) {
          const r = yield which(e, false);
          if (!r) {
            if (h.IS_WINDOWS) {
              throw new Error(
                `Unable to locate executable file: ${e}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`
              );
            } else {
              throw new Error(
                `Unable to locate executable file: ${e}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`
              );
            }
          }
          return r;
        }
        const s = yield findInPath(e);
        if (s && s.length > 0) {
          return s[0];
        }
        return "";
      });
    }
    r.which = which;
    function findInPath(e) {
      return a(this, void 0, void 0, function* () {
        if (!e) {
          throw new Error("parameter 'tool' is required");
        }
        const r = [];
        if (h.IS_WINDOWS && process.env["PATHEXT"]) {
          for (const e of process.env["PATHEXT"].split(d.delimiter)) {
            if (e) {
              r.push(e);
            }
          }
        }
        if (h.isRooted(e)) {
          const s = yield h.tryGetExecutablePath(e, r);
          if (s) {
            return [s];
          }
          return [];
        }
        if (e.includes(d.sep)) {
          return [];
        }
        const s = [];
        if (process.env.PATH) {
          for (const e of process.env.PATH.split(d.delimiter)) {
            if (e) {
              s.push(e);
            }
          }
        }
        const o = [];
        for (const n of s) {
          const s = yield h.tryGetExecutablePath(d.join(n, e), r);
          if (s) {
            o.push(s);
          }
        }
        return o;
      });
    }
    r.findInPath = findInPath;
    function readCopyOptions(e) {
      const r = e.force == null ? true : e.force;
      const s = Boolean(e.recursive);
      const o = e.copySourceDirectory == null ? true : Boolean(e.copySourceDirectory);
      return { force: r, recursive: s, copySourceDirectory: o };
    }
    function cpDirRecursive(e, r, s, o) {
      return a(this, void 0, void 0, function* () {
        if (s >= 255) return;
        s++;
        yield mkdirP(r);
        const n = yield h.readdir(e);
        for (const i of n) {
          const n = `${e}/${i}`;
          const a = `${r}/${i}`;
          const l = yield h.lstat(n);
          if (l.isDirectory()) {
            yield cpDirRecursive(n, a, s, o);
          } else {
            yield copyFile(n, a, o);
          }
        }
        yield h.chmod(r, (yield h.stat(e)).mode);
      });
    }
    function copyFile(e, r, s) {
      return a(this, void 0, void 0, function* () {
        if ((yield h.lstat(e)).isSymbolicLink()) {
          try {
            yield h.lstat(r);
            yield h.unlink(r);
          } catch (e) {
            if (e.code === "EPERM") {
              yield h.chmod(r, "0666");
              yield h.unlink(r);
            }
          }
          const s = yield h.readlink(e);
          yield h.symlink(s, r, h.IS_WINDOWS ? "junction" : null);
        } else if (!(yield h.exists(r)) || s) {
          yield h.copyFile(e, r);
        }
      });
    }
  },
  8793: (e, r) => {
    r.byteLength = byteLength;
    r.toByteArray = toByteArray;
    r.fromByteArray = fromByteArray;
    var s = [];
    var o = [];
    var n = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
    var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var a = 0, l = i.length; a < l; ++a) {
      s[a] = i[a];
      o[i.charCodeAt(a)] = a;
    }
    o["-".charCodeAt(0)] = 62;
    o["_".charCodeAt(0)] = 63;
    function getLens(e) {
      var r = e.length;
      if (r % 4 > 0) {
        throw new Error("Invalid string. Length must be a multiple of 4");
      }
      var s = e.indexOf("=");
      if (s === -1) s = r;
      var o = s === r ? 0 : 4 - (s % 4);
      return [s, o];
    }
    function byteLength(e) {
      var r = getLens(e);
      var s = r[0];
      var o = r[1];
      return ((s + o) * 3) / 4 - o;
    }
    function _byteLength(e, r, s) {
      return ((r + s) * 3) / 4 - s;
    }
    function toByteArray(e) {
      var r;
      var s = getLens(e);
      var i = s[0];
      var a = s[1];
      var l = new n(_byteLength(e, i, a));
      var d = 0;
      var h = a > 0 ? i - 4 : i;
      var p;
      for (p = 0; p < h; p += 4) {
        r = (o[e.charCodeAt(p)] << 18) | (o[e.charCodeAt(p + 1)] << 12) | (o[e.charCodeAt(p + 2)] << 6) | o[e.charCodeAt(p + 3)];
        l[d++] = (r >> 16) & 255;
        l[d++] = (r >> 8) & 255;
        l[d++] = r & 255;
      }
      if (a === 2) {
        r = (o[e.charCodeAt(p)] << 2) | (o[e.charCodeAt(p + 1)] >> 4);
        l[d++] = r & 255;
      }
      if (a === 1) {
        r = (o[e.charCodeAt(p)] << 10) | (o[e.charCodeAt(p + 1)] << 4) | (o[e.charCodeAt(p + 2)] >> 2);
        l[d++] = (r >> 8) & 255;
        l[d++] = r & 255;
      }
      return l;
    }
    function tripletToBase64(e) {
      return s[(e >> 18) & 63] + s[(e >> 12) & 63] + s[(e >> 6) & 63] + s[e & 63];
    }
    function encodeChunk(e, r, s) {
      var o;
      var n = [];
      for (var i = r; i < s; i += 3) {
        o = ((e[i] << 16) & 16711680) + ((e[i + 1] << 8) & 65280) + (e[i + 2] & 255);
        n.push(tripletToBase64(o));
      }
      return n.join("");
    }
    function fromByteArray(e) {
      var r;
      var o = e.length;
      var n = o % 3;
      var i = [];
      var a = 16383;
      for (var l = 0, d = o - n; l < d; l += a) {
        i.push(encodeChunk(e, l, l + a > d ? d : l + a));
      }
      if (n === 1) {
        r = e[o - 1];
        i.push(s[r >> 2] + s[(r << 4) & 63] + "==");
      } else if (n === 2) {
        r = (e[o - 2] << 8) + e[o - 1];
        i.push(s[r >> 10] + s[(r >> 4) & 63] + s[(r << 2) & 63] + "=");
      }
      return i.join("");
    }
  },
  3251: function (e) {
    (function (r, s) {
      true ? (e.exports = s()) : 0;
    })(this, function () {
      "use strict";
      var e =
        typeof globalThis !== "undefined"
          ? globalThis
          : typeof window !== "undefined"
            ? window
            : typeof global !== "undefined"
              ? global
              : typeof self !== "undefined"
                ? self
                : {};
      function getCjsExportFromNamespace(e) {
        return (e && e["default"]) || e;
      }
      var load = function (e, r, s = {}) {
        var o, n, i;
        for (o in r) {
          i = r[o];
          s[o] = (n = e[o]) != null ? n : i;
        }
        return s;
      };
      var overwrite = function (e, r, s = {}) {
        var o, n;
        for (o in e) {
          n = e[o];
          if (r[o] !== void 0) {
            s[o] = n;
          }
        }
        return s;
      };
      var r = { load: load, overwrite: overwrite };
      var s;
      s = class DLList {
        constructor(e, r) {
          this.incr = e;
          this.decr = r;
          this._first = null;
          this._last = null;
          this.length = 0;
        }
        push(e) {
          var r;
          this.length++;
          if (typeof this.incr === "function") {
            this.incr();
          }
          r = { value: e, prev: this._last, next: null };
          if (this._last != null) {
            this._last.next = r;
            this._last = r;
          } else {
            this._first = this._last = r;
          }
          return void 0;
        }
        shift() {
          var e;
          if (this._first == null) {
            return;
          } else {
            this.length--;
            if (typeof this.decr === "function") {
              this.decr();
            }
          }
          e = this._first.value;
          if ((this._first = this._first.next) != null) {
            this._first.prev = null;
          } else {
            this._last = null;
          }
          return e;
        }
        first() {
          if (this._first != null) {
            return this._first.value;
          }
        }
        getArray() {
          var e, r, s;
          e = this._first;
          s = [];
          while (e != null) {
            s.push(((r = e), (e = e.next), r.value));
          }
          return s;
        }
        forEachShift(e) {
          var r;
          r = this.shift();
          while (r != null) {
            (e(r), (r = this.shift()));
          }
          return void 0;
        }
        debug() {
          var e, r, s, o, n;
          e = this._first;
          n = [];
          while (e != null) {
            n.push(((r = e), (e = e.next), { value: r.value, prev: (s = r.prev) != null ? s.value : void 0, next: (o = r.next) != null ? o.value : void 0 }));
          }
          return n;
        }
      };
      var o = s;
      var n;
      n = class Events {
        constructor(e) {
          this.instance = e;
          this._events = {};
          if (this.instance.on != null || this.instance.once != null || this.instance.removeAllListeners != null) {
            throw new Error("An Emitter already exists for this object");
          }
          this.instance.on = (e, r) => this._addListener(e, "many", r);
          this.instance.once = (e, r) => this._addListener(e, "once", r);
          this.instance.removeAllListeners = (e = null) => {
            if (e != null) {
              return delete this._events[e];
            } else {
              return (this._events = {});
            }
          };
        }
        _addListener(e, r, s) {
          var o;
          if ((o = this._events)[e] == null) {
            o[e] = [];
          }
          this._events[e].push({ cb: s, status: r });
          return this.instance;
        }
        listenerCount(e) {
          if (this._events[e] != null) {
            return this._events[e].length;
          } else {
            return 0;
          }
        }
        async trigger(e, ...r) {
          var s, o;
          try {
            if (e !== "debug") {
              this.trigger("debug", `Event triggered: ${e}`, r);
            }
            if (this._events[e] == null) {
              return;
            }
            this._events[e] = this._events[e].filter(function (e) {
              return e.status !== "none";
            });
            o = this._events[e].map(async (e) => {
              var s, o;
              if (e.status === "none") {
                return;
              }
              if (e.status === "once") {
                e.status = "none";
              }
              try {
                o = typeof e.cb === "function" ? e.cb(...r) : void 0;
                if (typeof (o != null ? o.then : void 0) === "function") {
                  return await o;
                } else {
                  return o;
                }
              } catch (e) {
                s = e;
                {
                  this.trigger("error", s);
                }
                return null;
              }
            });
            return (await Promise.all(o)).find(function (e) {
              return e != null;
            });
          } catch (e) {
            s = e;
            {
              this.trigger("error", s);
            }
            return null;
          }
        }
      };
      var i = n;
      var a, l, d;
      a = o;
      l = i;
      d = class Queues {
        constructor(e) {
          var r;
          this.Events = new l(this);
          this._length = 0;
          this._lists = function () {
            var s, o, n;
            n = [];
            for (r = s = 1, o = e; 1 <= o ? s <= o : s >= o; r = 1 <= o ? ++s : --s) {
              n.push(
                new a(
                  () => this.incr(),
                  () => this.decr()
                )
              );
            }
            return n;
          }.call(this);
        }
        incr() {
          if (this._length++ === 0) {
            return this.Events.trigger("leftzero");
          }
        }
        decr() {
          if (--this._length === 0) {
            return this.Events.trigger("zero");
          }
        }
        push(e) {
          return this._lists[e.options.priority].push(e);
        }
        queued(e) {
          if (e != null) {
            return this._lists[e].length;
          } else {
            return this._length;
          }
        }
        shiftAll(e) {
          return this._lists.forEach(function (r) {
            return r.forEachShift(e);
          });
        }
        getFirst(e = this._lists) {
          var r, s, o;
          for (r = 0, s = e.length; r < s; r++) {
            o = e[r];
            if (o.length > 0) {
              return o;
            }
          }
          return [];
        }
        shiftLastFrom(e) {
          return this.getFirst(this._lists.slice(e).reverse()).shift();
        }
      };
      var h = d;
      var p;
      p = class BottleneckError extends Error {};
      var w = p;
      var k, _, M, j, q;
      j = 10;
      _ = 5;
      q = r;
      k = w;
      M = class Job {
        constructor(e, r, s, o, n, i, a, l) {
          this.task = e;
          this.args = r;
          this.rejectOnDrop = n;
          this.Events = i;
          this._states = a;
          this.Promise = l;
          this.options = q.load(s, o);
          this.options.priority = this._sanitizePriority(this.options.priority);
          if (this.options.id === o.id) {
            this.options.id = `${this.options.id}-${this._randomIndex()}`;
          }
          this.promise = new this.Promise((e, r) => {
            this._resolve = e;
            this._reject = r;
          });
          this.retryCount = 0;
        }
        _sanitizePriority(e) {
          var r;
          r = ~~e !== e ? _ : e;
          if (r < 0) {
            return 0;
          } else if (r > j - 1) {
            return j - 1;
          } else {
            return r;
          }
        }
        _randomIndex() {
          return Math.random().toString(36).slice(2);
        }
        doDrop({ error: e, message: r = "This job has been dropped by Bottleneck" } = {}) {
          if (this._states.remove(this.options.id)) {
            if (this.rejectOnDrop) {
              this._reject(e != null ? e : new k(r));
            }
            this.Events.trigger("dropped", { args: this.args, options: this.options, task: this.task, promise: this.promise });
            return true;
          } else {
            return false;
          }
        }
        _assertStatus(e) {
          var r;
          r = this._states.jobStatus(this.options.id);
          if (!(r === e || (e === "DONE" && r === null))) {
            throw new k(`Invalid job status ${r}, expected ${e}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`);
          }
        }
        doReceive() {
          this._states.start(this.options.id);
          return this.Events.trigger("received", { args: this.args, options: this.options });
        }
        doQueue(e, r) {
          this._assertStatus("RECEIVED");
          this._states.next(this.options.id);
          return this.Events.trigger("queued", { args: this.args, options: this.options, reachedHWM: e, blocked: r });
        }
        doRun() {
          if (this.retryCount === 0) {
            this._assertStatus("QUEUED");
            this._states.next(this.options.id);
          } else {
            this._assertStatus("EXECUTING");
          }
          return this.Events.trigger("scheduled", { args: this.args, options: this.options });
        }
        async doExecute(e, r, s, o) {
          var n, i, a;
          if (this.retryCount === 0) {
            this._assertStatus("RUNNING");
            this._states.next(this.options.id);
          } else {
            this._assertStatus("EXECUTING");
          }
          i = { args: this.args, options: this.options, retryCount: this.retryCount };
          this.Events.trigger("executing", i);
          try {
            a = await (e != null ? e.schedule(this.options, this.task, ...this.args) : this.task(...this.args));
            if (r()) {
              this.doDone(i);
              await o(this.options, i);
              this._assertStatus("DONE");
              return this._resolve(a);
            }
          } catch (e) {
            n = e;
            return this._onFailure(n, i, r, s, o);
          }
        }
        doExpire(e, r, s) {
          var o, n;
          if (this._states.jobStatus(this.options.id === "RUNNING")) {
            this._states.next(this.options.id);
          }
          this._assertStatus("EXECUTING");
          n = { args: this.args, options: this.options, retryCount: this.retryCount };
          o = new k(`This job timed out after ${this.options.expiration} ms.`);
          return this._onFailure(o, n, e, r, s);
        }
        async _onFailure(e, r, s, o, n) {
          var i, a;
          if (s()) {
            i = await this.Events.trigger("failed", e, r);
            if (i != null) {
              a = ~~i;
              this.Events.trigger("retry", `Retrying ${this.options.id} after ${a} ms`, r);
              this.retryCount++;
              return o(a);
            } else {
              this.doDone(r);
              await n(this.options, r);
              this._assertStatus("DONE");
              return this._reject(e);
            }
          }
        }
        doDone(e) {
          this._assertStatus("EXECUTING");
          this._states.next(this.options.id);
          return this.Events.trigger("done", e);
        }
      };
      var $ = M;
      var ee, te, re;
      re = r;
      ee = w;
      te = class LocalDatastore {
        constructor(e, r, s) {
          this.instance = e;
          this.storeOptions = r;
          this.clientId = this.instance._randomIndex();
          re.load(s, s, this);
          this._nextRequest = this._lastReservoirRefresh = this._lastReservoirIncrease = Date.now();
          this._running = 0;
          this._done = 0;
          this._unblockTime = 0;
          this.ready = this.Promise.resolve();
          this.clients = {};
          this._startHeartbeat();
        }
        _startHeartbeat() {
          var e;
          if (
            this.heartbeat == null &&
            ((this.storeOptions.reservoirRefreshInterval != null && this.storeOptions.reservoirRefreshAmount != null) ||
              (this.storeOptions.reservoirIncreaseInterval != null && this.storeOptions.reservoirIncreaseAmount != null))
          ) {
            return typeof (e = this.heartbeat =
              setInterval(() => {
                var e, r, s, o, n;
                o = Date.now();
                if (this.storeOptions.reservoirRefreshInterval != null && o >= this._lastReservoirRefresh + this.storeOptions.reservoirRefreshInterval) {
                  this._lastReservoirRefresh = o;
                  this.storeOptions.reservoir = this.storeOptions.reservoirRefreshAmount;
                  this.instance._drainAll(this.computeCapacity());
                }
                if (this.storeOptions.reservoirIncreaseInterval != null && o >= this._lastReservoirIncrease + this.storeOptions.reservoirIncreaseInterval) {
                  ({ reservoirIncreaseAmount: e, reservoirIncreaseMaximum: s, reservoir: n } = this.storeOptions);
                  this._lastReservoirIncrease = o;
                  r = s != null ? Math.min(e, s - n) : e;
                  if (r > 0) {
                    this.storeOptions.reservoir += r;
                    return this.instance._drainAll(this.computeCapacity());
                  }
                }
              }, this.heartbeatInterval)).unref === "function"
              ? e.unref()
              : void 0;
          } else {
            return clearInterval(this.heartbeat);
          }
        }
        async __publish__(e) {
          await this.yieldLoop();
          return this.instance.Events.trigger("message", e.toString());
        }
        async __disconnect__(e) {
          await this.yieldLoop();
          clearInterval(this.heartbeat);
          return this.Promise.resolve();
        }
        yieldLoop(e = 0) {
          return new this.Promise(function (r, s) {
            return setTimeout(r, e);
          });
        }
        computePenalty() {
          var e;
          return (e = this.storeOptions.penalty) != null ? e : 15 * this.storeOptions.minTime || 5e3;
        }
        async __updateSettings__(e) {
          await this.yieldLoop();
          re.overwrite(e, e, this.storeOptions);
          this._startHeartbeat();
          this.instance._drainAll(this.computeCapacity());
          return true;
        }
        async __running__() {
          await this.yieldLoop();
          return this._running;
        }
        async __queued__() {
          await this.yieldLoop();
          return this.instance.queued();
        }
        async __done__() {
          await this.yieldLoop();
          return this._done;
        }
        async __groupCheck__(e) {
          await this.yieldLoop();
          return this._nextRequest + this.timeout < e;
        }
        computeCapacity() {
          var e, r;
          ({ maxConcurrent: e, reservoir: r } = this.storeOptions);
          if (e != null && r != null) {
            return Math.min(e - this._running, r);
          } else if (e != null) {
            return e - this._running;
          } else if (r != null) {
            return r;
          } else {
            return null;
          }
        }
        conditionsCheck(e) {
          var r;
          r = this.computeCapacity();
          return r == null || e <= r;
        }
        async __incrementReservoir__(e) {
          var r;
          await this.yieldLoop();
          r = this.storeOptions.reservoir += e;
          this.instance._drainAll(this.computeCapacity());
          return r;
        }
        async __currentReservoir__() {
          await this.yieldLoop();
          return this.storeOptions.reservoir;
        }
        isBlocked(e) {
          return this._unblockTime >= e;
        }
        check(e, r) {
          return this.conditionsCheck(e) && this._nextRequest - r <= 0;
        }
        async __check__(e) {
          var r;
          await this.yieldLoop();
          r = Date.now();
          return this.check(e, r);
        }
        async __register__(e, r, s) {
          var o, n;
          await this.yieldLoop();
          o = Date.now();
          if (this.conditionsCheck(r)) {
            this._running += r;
            if (this.storeOptions.reservoir != null) {
              this.storeOptions.reservoir -= r;
            }
            n = Math.max(this._nextRequest - o, 0);
            this._nextRequest = o + n + this.storeOptions.minTime;
            return { success: true, wait: n, reservoir: this.storeOptions.reservoir };
          } else {
            return { success: false };
          }
        }
        strategyIsBlock() {
          return this.storeOptions.strategy === 3;
        }
        async __submit__(e, r) {
          var s, o, n;
          await this.yieldLoop();
          if (this.storeOptions.maxConcurrent != null && r > this.storeOptions.maxConcurrent) {
            throw new ee(`Impossible to add a job having a weight of ${r} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);
          }
          o = Date.now();
          n = this.storeOptions.highWater != null && e === this.storeOptions.highWater && !this.check(r, o);
          s = this.strategyIsBlock() && (n || this.isBlocked(o));
          if (s) {
            this._unblockTime = o + this.computePenalty();
            this._nextRequest = this._unblockTime + this.storeOptions.minTime;
            this.instance._dropAllQueued();
          }
          return { reachedHWM: n, blocked: s, strategy: this.storeOptions.strategy };
        }
        async __free__(e, r) {
          await this.yieldLoop();
          this._running -= r;
          this._done += r;
          this.instance._drainAll(this.computeCapacity());
          return { running: this._running };
        }
      };
      var se = te;
      var oe, ne;
      oe = w;
      ne = class States {
        constructor(e) {
          this.status = e;
          this._jobs = {};
          this.counts = this.status.map(function () {
            return 0;
          });
        }
        next(e) {
          var r, s;
          r = this._jobs[e];
          s = r + 1;
          if (r != null && s < this.status.length) {
            this.counts[r]--;
            this.counts[s]++;
            return this._jobs[e]++;
          } else if (r != null) {
            this.counts[r]--;
            return delete this._jobs[e];
          }
        }
        start(e) {
          var r;
          r = 0;
          this._jobs[e] = r;
          return this.counts[r]++;
        }
        remove(e) {
          var r;
          r = this._jobs[e];
          if (r != null) {
            this.counts[r]--;
            delete this._jobs[e];
          }
          return r != null;
        }
        jobStatus(e) {
          var r;
          return (r = this.status[this._jobs[e]]) != null ? r : null;
        }
        statusJobs(e) {
          var r, s, o, n, i;
          if (e != null) {
            s = this.status.indexOf(e);
            if (s < 0) {
              throw new oe(`status must be one of ${this.status.join(", ")}`);
            }
            o = this._jobs;
            n = [];
            for (r in o) {
              i = o[r];
              if (i === s) {
                n.push(r);
              }
            }
            return n;
          } else {
            return Object.keys(this._jobs);
          }
        }
        statusCounts() {
          return this.counts.reduce((e, r, s) => {
            e[this.status[s]] = r;
            return e;
          }, {});
        }
      };
      var ie = ne;
      var Ae, ae;
      Ae = o;
      ae = class Sync {
        constructor(e, r) {
          this.schedule = this.schedule.bind(this);
          this.name = e;
          this.Promise = r;
          this._running = 0;
          this._queue = new Ae();
        }
        isEmpty() {
          return this._queue.length === 0;
        }
        async _tryToRun() {
          var e, r, s, o, n, i, a;
          if (this._running < 1 && this._queue.length > 0) {
            this._running++;
            ({ task: a, args: e, resolve: n, reject: o } = this._queue.shift());
            r = await (async function () {
              try {
                i = await a(...e);
                return function () {
                  return n(i);
                };
              } catch (e) {
                s = e;
                return function () {
                  return o(s);
                };
              }
            })();
            this._running--;
            this._tryToRun();
            return r();
          }
        }
        schedule(e, ...r) {
          var s, o, n;
          n = o = null;
          s = new this.Promise(function (e, r) {
            n = e;
            return (o = r);
          });
          this._queue.push({ task: e, args: r, resolve: n, reject: o });
          this._tryToRun();
          return s;
        }
      };
      var ce = ae;
      var le = "2.19.5";
      var ue = { version: le };
      var ge = Object.freeze({ version: le, default: ue });
      var require$$2 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
      var require$$3 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
      var require$$4 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
      var de, fe, he, pe, Ee, Ie;
      Ie = r;
      de = i;
      pe = require$$2;
      he = require$$3;
      Ee = require$$4;
      fe = function () {
        class Group {
          constructor(e = {}) {
            this.deleteKey = this.deleteKey.bind(this);
            this.limiterOptions = e;
            Ie.load(this.limiterOptions, this.defaults, this);
            this.Events = new de(this);
            this.instances = {};
            this.Bottleneck = Pe;
            this._startAutoCleanup();
            this.sharedConnection = this.connection != null;
            if (this.connection == null) {
              if (this.limiterOptions.datastore === "redis") {
                this.connection = new pe(Object.assign({}, this.limiterOptions, { Events: this.Events }));
              } else if (this.limiterOptions.datastore === "ioredis") {
                this.connection = new he(Object.assign({}, this.limiterOptions, { Events: this.Events }));
              }
            }
          }
          key(e = "") {
            var r;
            return (r = this.instances[e]) != null
              ? r
              : (() => {
                  var r;
                  r = this.instances[e] = new this.Bottleneck(
                    Object.assign(this.limiterOptions, { id: `${this.id}-${e}`, timeout: this.timeout, connection: this.connection })
                  );
                  this.Events.trigger("created", r, e);
                  return r;
                })();
          }
          async deleteKey(e = "") {
            var r, s;
            s = this.instances[e];
            if (this.connection) {
              r = await this.connection.__runCommand__(["del", ...Ee.allKeys(`${this.id}-${e}`)]);
            }
            if (s != null) {
              delete this.instances[e];
              await s.disconnect();
            }
            return s != null || r > 0;
          }
          limiters() {
            var e, r, s, o;
            r = this.instances;
            s = [];
            for (e in r) {
              o = r[e];
              s.push({ key: e, limiter: o });
            }
            return s;
          }
          keys() {
            return Object.keys(this.instances);
          }
          async clusterKeys() {
            var e, r, s, o, n, i, a, l, d;
            if (this.connection == null) {
              return this.Promise.resolve(this.keys());
            }
            i = [];
            e = null;
            d = `b_${this.id}-`.length;
            r = "_settings".length;
            while (e !== 0) {
              [l, s] = await this.connection.__runCommand__(["scan", e != null ? e : 0, "match", `b_${this.id}-*_settings`, "count", 1e4]);
              e = ~~l;
              for (o = 0, a = s.length; o < a; o++) {
                n = s[o];
                i.push(n.slice(d, -r));
              }
            }
            return i;
          }
          _startAutoCleanup() {
            var e;
            clearInterval(this.interval);
            return typeof (e = this.interval =
              setInterval(async () => {
                var e, r, s, o, n, i;
                n = Date.now();
                s = this.instances;
                o = [];
                for (r in s) {
                  i = s[r];
                  try {
                    if (await i._store.__groupCheck__(n)) {
                      o.push(this.deleteKey(r));
                    } else {
                      o.push(void 0);
                    }
                  } catch (r) {
                    e = r;
                    o.push(i.Events.trigger("error", e));
                  }
                }
                return o;
              }, this.timeout / 2)).unref === "function"
              ? e.unref()
              : void 0;
          }
          updateSettings(e = {}) {
            Ie.overwrite(e, this.defaults, this);
            Ie.overwrite(e, e, this.limiterOptions);
            if (e.timeout != null) {
              return this._startAutoCleanup();
            }
          }
          disconnect(e = true) {
            var r;
            if (!this.sharedConnection) {
              return (r = this.connection) != null ? r.disconnect(e) : void 0;
            }
          }
        }
        Group.prototype.defaults = { timeout: 1e3 * 60 * 5, connection: null, Promise: Promise, id: "group-key" };
        return Group;
      }.call(e);
      var Ce = fe;
      var me, Be, Qe;
      Qe = r;
      Be = i;
      me = function () {
        class Batcher {
          constructor(e = {}) {
            this.options = e;
            Qe.load(this.options, this.defaults, this);
            this.Events = new Be(this);
            this._arr = [];
            this._resetPromise();
            this._lastFlush = Date.now();
          }
          _resetPromise() {
            return (this._promise = new this.Promise((e, r) => (this._resolve = e)));
          }
          _flush() {
            clearTimeout(this._timeout);
            this._lastFlush = Date.now();
            this._resolve();
            this.Events.trigger("batch", this._arr);
            this._arr = [];
            return this._resetPromise();
          }
          add(e) {
            var r;
            this._arr.push(e);
            r = this._promise;
            if (this._arr.length === this.maxSize) {
              this._flush();
            } else if (this.maxTime != null && this._arr.length === 1) {
              this._timeout = setTimeout(() => this._flush(), this.maxTime);
            }
            return r;
          }
        }
        Batcher.prototype.defaults = { maxTime: null, maxSize: null, Promise: Promise };
        return Batcher;
      }.call(e);
      var be = me;
      var require$$4$1 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
      var we = getCjsExportFromNamespace(ge);
      var ye,
        ke,
        Re,
        Te,
        De,
        Fe,
        ve,
        Se,
        Ne,
        Oe,
        Ue,
        Ge = [].splice;
      Fe = 10;
      ke = 5;
      Ue = r;
      ve = h;
      Te = $;
      De = se;
      Se = require$$4$1;
      Re = i;
      Ne = ie;
      Oe = ce;
      ye = function () {
        class Bottleneck {
          constructor(e = {}, ...r) {
            var s, o;
            this._addToQueue = this._addToQueue.bind(this);
            this._validateOptions(e, r);
            Ue.load(e, this.instanceDefaults, this);
            this._queues = new ve(Fe);
            this._scheduled = {};
            this._states = new Ne(["RECEIVED", "QUEUED", "RUNNING", "EXECUTING"].concat(this.trackDoneStatus ? ["DONE"] : []));
            this._limiter = null;
            this.Events = new Re(this);
            this._submitLock = new Oe("submit", this.Promise);
            this._registerLock = new Oe("register", this.Promise);
            o = Ue.load(e, this.storeDefaults, {});
            this._store = function () {
              if (this.datastore === "redis" || this.datastore === "ioredis" || this.connection != null) {
                s = Ue.load(e, this.redisStoreDefaults, {});
                return new Se(this, o, s);
              } else if (this.datastore === "local") {
                s = Ue.load(e, this.localStoreDefaults, {});
                return new De(this, o, s);
              } else {
                throw new Bottleneck.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`);
              }
            }.call(this);
            this._queues.on("leftzero", () => {
              var e;
              return (e = this._store.heartbeat) != null ? (typeof e.ref === "function" ? e.ref() : void 0) : void 0;
            });
            this._queues.on("zero", () => {
              var e;
              return (e = this._store.heartbeat) != null ? (typeof e.unref === "function" ? e.unref() : void 0) : void 0;
            });
          }
          _validateOptions(e, r) {
            if (!(e != null && typeof e === "object" && r.length === 0)) {
              throw new Bottleneck.prototype.BottleneckError(
                "Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1."
              );
            }
          }
          ready() {
            return this._store.ready;
          }
          clients() {
            return this._store.clients;
          }
          channel() {
            return `b_${this.id}`;
          }
          channel_client() {
            return `b_${this.id}_${this._store.clientId}`;
          }
          publish(e) {
            return this._store.__publish__(e);
          }
          disconnect(e = true) {
            return this._store.__disconnect__(e);
          }
          chain(e) {
            this._limiter = e;
            return this;
          }
          queued(e) {
            return this._queues.queued(e);
          }
          clusterQueued() {
            return this._store.__queued__();
          }
          empty() {
            return this.queued() === 0 && this._submitLock.isEmpty();
          }
          running() {
            return this._store.__running__();
          }
          done() {
            return this._store.__done__();
          }
          jobStatus(e) {
            return this._states.jobStatus(e);
          }
          jobs(e) {
            return this._states.statusJobs(e);
          }
          counts() {
            return this._states.statusCounts();
          }
          _randomIndex() {
            return Math.random().toString(36).slice(2);
          }
          check(e = 1) {
            return this._store.__check__(e);
          }
          _clearGlobalState(e) {
            if (this._scheduled[e] != null) {
              clearTimeout(this._scheduled[e].expiration);
              delete this._scheduled[e];
              return true;
            } else {
              return false;
            }
          }
          async _free(e, r, s, o) {
            var n, i;
            try {
              ({ running: i } = await this._store.__free__(e, s.weight));
              this.Events.trigger("debug", `Freed ${s.id}`, o);
              if (i === 0 && this.empty()) {
                return this.Events.trigger("idle");
              }
            } catch (e) {
              n = e;
              return this.Events.trigger("error", n);
            }
          }
          _run(e, r, s) {
            var o, n, i;
            r.doRun();
            o = this._clearGlobalState.bind(this, e);
            i = this._run.bind(this, e, r);
            n = this._free.bind(this, e, r);
            return (this._scheduled[e] = {
              timeout: setTimeout(() => r.doExecute(this._limiter, o, i, n), s),
              expiration:
                r.options.expiration != null
                  ? setTimeout(function () {
                      return r.doExpire(o, i, n);
                    }, s + r.options.expiration)
                  : void 0,
              job: r,
            });
          }
          _drainOne(e) {
            return this._registerLock.schedule(() => {
              var r, s, o, n, i;
              if (this.queued() === 0) {
                return this.Promise.resolve(null);
              }
              i = this._queues.getFirst();
              ({ options: n, args: r } = o = i.first());
              if (e != null && n.weight > e) {
                return this.Promise.resolve(null);
              }
              this.Events.trigger("debug", `Draining ${n.id}`, { args: r, options: n });
              s = this._randomIndex();
              return this._store.__register__(s, n.weight, n.expiration).then(({ success: e, wait: a, reservoir: l }) => {
                var d;
                this.Events.trigger("debug", `Drained ${n.id}`, { success: e, args: r, options: n });
                if (e) {
                  i.shift();
                  d = this.empty();
                  if (d) {
                    this.Events.trigger("empty");
                  }
                  if (l === 0) {
                    this.Events.trigger("depleted", d);
                  }
                  this._run(s, o, a);
                  return this.Promise.resolve(n.weight);
                } else {
                  return this.Promise.resolve(null);
                }
              });
            });
          }
          _drainAll(e, r = 0) {
            return this._drainOne(e)
              .then((s) => {
                var o;
                if (s != null) {
                  o = e != null ? e - s : e;
                  return this._drainAll(o, r + s);
                } else {
                  return this.Promise.resolve(r);
                }
              })
              .catch((e) => this.Events.trigger("error", e));
          }
          _dropAllQueued(e) {
            return this._queues.shiftAll(function (r) {
              return r.doDrop({ message: e });
            });
          }
          stop(e = {}) {
            var r, s;
            e = Ue.load(e, this.stopDefaults);
            s = (e) => {
              var r;
              r = () => {
                var r;
                r = this._states.counts;
                return r[0] + r[1] + r[2] + r[3] === e;
              };
              return new this.Promise((e, s) => {
                if (r()) {
                  return e();
                } else {
                  return this.on("done", () => {
                    if (r()) {
                      this.removeAllListeners("done");
                      return e();
                    }
                  });
                }
              });
            };
            r = e.dropWaitingJobs
              ? ((this._run = function (r, s) {
                  return s.doDrop({ message: e.dropErrorMessage });
                }),
                (this._drainOne = () => this.Promise.resolve(null)),
                this._registerLock.schedule(() =>
                  this._submitLock.schedule(() => {
                    var r, o, n;
                    o = this._scheduled;
                    for (r in o) {
                      n = o[r];
                      if (this.jobStatus(n.job.options.id) === "RUNNING") {
                        clearTimeout(n.timeout);
                        clearTimeout(n.expiration);
                        n.job.doDrop({ message: e.dropErrorMessage });
                      }
                    }
                    this._dropAllQueued(e.dropErrorMessage);
                    return s(0);
                  })
                ))
              : this.schedule({ priority: Fe - 1, weight: 0 }, () => s(1));
            this._receive = function (r) {
              return r._reject(new Bottleneck.prototype.BottleneckError(e.enqueueErrorMessage));
            };
            this.stop = () => this.Promise.reject(new Bottleneck.prototype.BottleneckError("stop() has already been called"));
            return r;
          }
          async _addToQueue(e) {
            var r, s, o, n, i, a, l;
            ({ args: r, options: n } = e);
            try {
              ({ reachedHWM: i, blocked: s, strategy: l } = await this._store.__submit__(this.queued(), n.weight));
            } catch (s) {
              o = s;
              this.Events.trigger("debug", `Could not queue ${n.id}`, { args: r, options: n, error: o });
              e.doDrop({ error: o });
              return false;
            }
            if (s) {
              e.doDrop();
              return true;
            } else if (i) {
              a =
                l === Bottleneck.prototype.strategy.LEAK
                  ? this._queues.shiftLastFrom(n.priority)
                  : l === Bottleneck.prototype.strategy.OVERFLOW_PRIORITY
                    ? this._queues.shiftLastFrom(n.priority + 1)
                    : l === Bottleneck.prototype.strategy.OVERFLOW
                      ? e
                      : void 0;
              if (a != null) {
                a.doDrop();
              }
              if (a == null || l === Bottleneck.prototype.strategy.OVERFLOW) {
                if (a == null) {
                  e.doDrop();
                }
                return i;
              }
            }
            e.doQueue(i, s);
            this._queues.push(e);
            await this._drainAll();
            return i;
          }
          _receive(e) {
            if (this._states.jobStatus(e.options.id) != null) {
              e._reject(new Bottleneck.prototype.BottleneckError(`A job with the same id already exists (id=${e.options.id})`));
              return false;
            } else {
              e.doReceive();
              return this._submitLock.schedule(this._addToQueue, e);
            }
          }
          submit(...e) {
            var r, s, o, n, i, a, l;
            if (typeof e[0] === "function") {
              ((i = e), ([s, ...e] = i), ([r] = Ge.call(e, -1)));
              n = Ue.load({}, this.jobDefaults);
            } else {
              ((a = e), ([n, s, ...e] = a), ([r] = Ge.call(e, -1)));
              n = Ue.load(n, this.jobDefaults);
            }
            l = (...e) =>
              new this.Promise(function (r, o) {
                return s(...e, function (...e) {
                  return (e[0] != null ? o : r)(e);
                });
              });
            o = new Te(l, e, n, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);
            o.promise
              .then(function (e) {
                return typeof r === "function" ? r(...e) : void 0;
              })
              .catch(function (e) {
                if (Array.isArray(e)) {
                  return typeof r === "function" ? r(...e) : void 0;
                } else {
                  return typeof r === "function" ? r(e) : void 0;
                }
              });
            return this._receive(o);
          }
          schedule(...e) {
            var r, s, o;
            if (typeof e[0] === "function") {
              [o, ...e] = e;
              s = {};
            } else {
              [s, o, ...e] = e;
            }
            r = new Te(o, e, s, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);
            this._receive(r);
            return r.promise;
          }
          wrap(e) {
            var r, s;
            r = this.schedule.bind(this);
            s = function (...s) {
              return r(e.bind(this), ...s);
            };
            s.withOptions = function (s, ...o) {
              return r(s, e, ...o);
            };
            return s;
          }
          async updateSettings(e = {}) {
            await this._store.__updateSettings__(Ue.overwrite(e, this.storeDefaults));
            Ue.overwrite(e, this.instanceDefaults, this);
            return this;
          }
          currentReservoir() {
            return this._store.__currentReservoir__();
          }
          incrementReservoir(e = 0) {
            return this._store.__incrementReservoir__(e);
          }
        }
        Bottleneck.default = Bottleneck;
        Bottleneck.Events = Re;
        Bottleneck.version = Bottleneck.prototype.version = we.version;
        Bottleneck.strategy = Bottleneck.prototype.strategy = { LEAK: 1, OVERFLOW: 2, OVERFLOW_PRIORITY: 4, BLOCK: 3 };
        Bottleneck.BottleneckError = Bottleneck.prototype.BottleneckError = w;
        Bottleneck.Group = Bottleneck.prototype.Group = Ce;
        Bottleneck.RedisConnection = Bottleneck.prototype.RedisConnection = require$$2;
        Bottleneck.IORedisConnection = Bottleneck.prototype.IORedisConnection = require$$3;
        Bottleneck.Batcher = Bottleneck.prototype.Batcher = be;
        Bottleneck.prototype.jobDefaults = { priority: ke, weight: 1, expiration: null, id: "<no-id>" };
        Bottleneck.prototype.storeDefaults = {
          maxConcurrent: null,
          minTime: 0,
          highWater: null,
          strategy: Bottleneck.prototype.strategy.LEAK,
          penalty: null,
          reservoir: null,
          reservoirRefreshInterval: null,
          reservoirRefreshAmount: null,
          reservoirIncreaseInterval: null,
          reservoirIncreaseAmount: null,
          reservoirIncreaseMaximum: null,
        };
        Bottleneck.prototype.localStoreDefaults = { Promise: Promise, timeout: null, heartbeatInterval: 250 };
        Bottleneck.prototype.redisStoreDefaults = {
          Promise: Promise,
          timeout: null,
          heartbeatInterval: 5e3,
          clientTimeout: 1e4,
          Redis: null,
          clientOptions: {},
          clusterNodes: null,
          clearDatastore: false,
          connection: null,
        };
        Bottleneck.prototype.instanceDefaults = {
          datastore: "local",
          connection: null,
          id: "<no-id>",
          rejectOnDrop: true,
          trackDoneStatus: false,
          Promise: Promise,
        };
        Bottleneck.prototype.stopDefaults = {
          enqueueErrorMessage: "This limiter has been stopped and cannot accept new jobs.",
          dropWaitingJobs: true,
          dropErrorMessage: "This limiter has been stopped.",
        };
        return Bottleneck;
      }.call(e);
      var Pe = ye;
      var Le = Pe;
      return Le;
    });
  },
  8333: (module, __unused_webpack_exports, __nccwpck_require__) => {
    var b = {},
      aa = __nccwpck_require__(9633),
      ba = __nccwpck_require__(8793);
    b.readBinary = function () {
      var e = ba.toByteArray(__nccwpck_require__(466));
      return aa(e);
    };
    b || (b = eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));
    var g = {},
      m;
    for (m in b) b.hasOwnProperty(m) && (g[m] = b[m]);
    var t = "object" === typeof window,
      u = "function" === typeof importScripts,
      v = "object" === typeof process && "function" === "function" && !t && !u,
      x = !t && !v && !u;
    if (v) {
      b.print ||
        (b.print = function (e) {
          process.stdout.write(e + "\n");
        });
      b.printErr ||
        (b.printErr = function (e) {
          process.stderr.write(e + "\n");
        });
      var ca = __nccwpck_require__(9896),
        da = __nccwpck_require__(6928);
      b.read = function (e, r) {
        e = da.normalize(e);
        var s = ca.readFileSync(e);
        s || e == da.resolve(e) || ((e = path.join(import.meta.dirname, "..", "src", e)), (s = ca.readFileSync(e)));
        s && !r && (s = s.toString());
        return s;
      };
      b.readBinary = function (e) {
        e = b.read(e, !0);
        e.buffer || (e = new Uint8Array(e));
        assert(e.buffer);
        return e;
      };
      b.load = function (e) {
        ea(read(e));
      };
      b.thisProgram || (b.thisProgram = 1 < process.argv.length ? process.argv[1].replace(/\\/g, "/") : "unknown-program");
      b.arguments = process.argv.slice(2);
      true && (module.exports = b);
      process.on("uncaughtException", function (e) {
        if (!(e instanceof y)) throw e;
      });
      b.inspect = function () {
        return "[Emscripten Module object]";
      };
    } else if (x)
      (b.print || (b.print = print),
        "undefined" != typeof printErr && (b.printErr = printErr),
        (b.read =
          "undefined" != typeof read
            ? read
            : function () {
                throw "no read() available (jsc?)";
              }),
        (b.readBinary = function (e) {
          if ("function" === typeof readbuffer) return new Uint8Array(readbuffer(e));
          e = read(e, "binary");
          assert("object" === typeof e);
          return e;
        }),
        "undefined" != typeof scriptArgs ? (b.arguments = scriptArgs) : "undefined" != typeof arguments && (b.arguments = arguments),
        eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"));
    else if (t || u)
      ((b.read = function (e) {
        var r = new XMLHttpRequest();
        r.open("GET", e, !1);
        r.send(null);
        return r.responseText;
      }),
        "undefined" != typeof arguments && (b.arguments = arguments),
        "undefined" !== typeof console
          ? (b.print ||
              (b.print = function (e) {
                console.log(e);
              }),
            b.printErr ||
              (b.printErr = function (e) {
                console.log(e);
              }))
          : b.print || (b.print = function () {}),
        u && (b.load = importScripts),
        "undefined" === typeof b.setWindowTitle &&
          (b.setWindowTitle = function (e) {
            document.title = e;
          }));
    else throw "Unknown runtime environment. Where are we?";
    function ea(e) {
      eval.call(null, e);
    }
    !b.load &&
      b.read &&
      (b.load = function (e) {
        ea(b.read(e));
      });
    b.print || (b.print = function () {});
    b.printErr || (b.printErr = b.print);
    b.arguments || (b.arguments = []);
    b.thisProgram || (b.thisProgram = "./this.program");
    b.print = b.print;
    b.A = b.printErr;
    b.preRun = [];
    b.postRun = [];
    for (m in g) g.hasOwnProperty(m) && (b[m] = g[m]);
    var A = {
      P: function (e) {
        fa = e;
      },
      N: function () {
        return fa;
      },
      G: function () {
        return z;
      },
      F: function (e) {
        z = e;
      },
      D: function (e) {
        switch (e) {
          case "i1":
          case "i8":
            return 1;
          case "i16":
            return 2;
          case "i32":
            return 4;
          case "i64":
            return 8;
          case "float":
            return 4;
          case "double":
            return 8;
          default:
            return "*" === e[e.length - 1] ? A.o : "i" === e[0] ? ((e = parseInt(e.substr(1))), assert(0 === e % 8), e / 8) : 0;
        }
      },
      M: function (e) {
        return Math.max(A.D(e), A.o);
      },
      R: 16,
      ea: function (e, r) {
        "double" === r || "i64" === r ? e & 7 && (assert(4 === (e & 7)), (e += 4)) : assert(0 === (e & 3));
        return e;
      },
      Y: function (e, r, s) {
        return s || ("i64" != e && "double" != e) ? (e ? Math.min(r || (e ? A.M(e) : 0), A.o) : Math.min(r, 8)) : 8;
      },
      r: function (e, r, s) {
        return s && s.length
          ? (s.splice || (s = Array.prototype.slice.call(s)), s.splice(0, 0, r), b["dynCall_" + e].apply(null, s))
          : b["dynCall_" + e].call(null, r);
      },
      k: [],
      H: function (e) {
        for (var r = 0; r < A.k.length; r++) if (!A.k[r]) return ((A.k[r] = e), 2 * (1 + r));
        throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
      },
      O: function (e) {
        A.k[(e - 2) / 2] = null;
      },
      e: function (e) {
        A.e.B || (A.e.B = {});
        A.e.B[e] || ((A.e.B[e] = 1), b.A(e));
      },
      u: {},
      $: function (e, r) {
        assert(r);
        A.u[r] || (A.u[r] = {});
        var s = A.u[r];
        s[e] ||
          (s[e] = function () {
            return A.r(r, e, arguments);
          });
        return s[e];
      },
      Z: function () {
        throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
      },
      n: function (e) {
        var r = z;
        z = (z + e) | 0;
        z = (z + 15) & -16;
        return r;
      },
      Q: function (e) {
        var r = B;
        B = (B + e) | 0;
        B = (B + 15) & -16;
        return r;
      },
      g: function (e) {
        var r = C;
        C = (C + e) | 0;
        C = (C + 15) & -16;
        if ((e = C >= D))
          (E(
            "Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " +
              D +
              ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 "
          ),
            (e = !0));
        return e ? ((C = r), 0) : r;
      },
      p: function (e, r) {
        return Math.ceil(e / (r ? r : 16)) * (r ? r : 16);
      },
      da: function (e, r, s) {
        return s ? +(e >>> 0) + 4294967296 * +(r >>> 0) : +(e >>> 0) + 4294967296 * +(r | 0);
      },
      C: 8,
      o: 4,
      S: 0,
    };
    A.addFunction = A.H;
    A.removeFunction = A.O;
    var F = !1,
      G,
      H,
      fa;
    function assert(e, r) {
      e || E("Assertion failed: " + r);
    }
    (function () {
      var e = {
          stackSave: function () {
            A.G();
          },
          stackRestore: function () {
            A.F();
          },
          arrayToC: function (e) {
            for (var r = A.n(e.length), s = r, o = 0; o < e.length; o++) I[s++ >> 0] = e[o];
            return r;
          },
          stringToC: function (e) {
            var r = 0;
            null !== e && void 0 !== e && 0 !== e && ((r = A.n((e.length << 2) + 1)), ga(e, r));
            return r;
          },
        },
        r = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/,
        s;
      for (s in e) e.hasOwnProperty(s) && e[s].toString().match(r).slice(1);
    })();
    function ha(e) {
      var r;
      r = "i32";
      "*" === r.charAt(r.length - 1) && (r = "i32");
      switch (r) {
        case "i1":
          return I[e >> 0];
        case "i8":
          return I[e >> 0];
        case "i16":
          return J[e >> 1];
        case "i32":
          return K[e >> 2];
        case "i64":
          return K[e >> 2];
        case "float":
          return L[e >> 2];
        case "double":
          return N[e >> 3];
        default:
          E("invalid type for setValue: " + r);
      }
      return null;
    }
    function O(e, r, s) {
      var o, n, i;
      "number" === typeof e ? ((n = !0), (i = e)) : ((n = !1), (i = e.length));
      var a = "string" === typeof r ? r : null;
      s = 4 == s ? o : [ia, A.n, A.Q, A.g][void 0 === s ? 2 : s](Math.max(i, a ? 1 : r.length));
      if (n) {
        o = s;
        assert(0 == (s & 3));
        for (e = s + (i & -4); o < e; o += 4) K[o >> 2] = 0;
        for (e = s + i; o < e; ) I[o++ >> 0] = 0;
        return s;
      }
      if ("i8" === a) return (e.subarray || e.slice ? P.set(e, s) : P.set(new Uint8Array(e), s), s);
      o = 0;
      for (var l, d; o < i; ) {
        var h = e[o];
        "function" === typeof h && (h = A.aa(h));
        n = a || r[o];
        if (0 === n) o++;
        else {
          "i64" == n && (n = "i32");
          var p = s + o,
            w = n,
            w = w || "i8";
          "*" === w.charAt(w.length - 1) && (w = "i32");
          switch (w) {
            case "i1":
              I[p >> 0] = h;
              break;
            case "i8":
              I[p >> 0] = h;
              break;
            case "i16":
              J[p >> 1] = h;
              break;
            case "i32":
              K[p >> 2] = h;
              break;
            case "i64":
              H = [
                h >>> 0,
                ((G = h), 1 <= +ja(G) ? (0 < G ? (ka(+la(G / 4294967296), 4294967295) | 0) >>> 0 : ~~+ma((G - +(~~G >>> 0)) / 4294967296) >>> 0) : 0),
              ];
              K[p >> 2] = H[0];
              K[(p + 4) >> 2] = H[1];
              break;
            case "float":
              L[p >> 2] = h;
              break;
            case "double":
              N[p >> 3] = h;
              break;
            default:
              E("invalid type for setValue: " + w);
          }
          d !== n && ((l = A.D(n)), (d = n));
          o += l;
        }
      }
      return s;
    }
    function Q(e) {
      var r;
      if (0 === r || !e) return "";
      for (var s = 0, o, n = 0; ; ) {
        o = P[(e + n) >> 0];
        s |= o;
        if (0 == o && !r) break;
        n++;
        if (r && n == r) break;
      }
      r || (r = n);
      o = "";
      if (128 > s) {
        for (; 0 < r; ) ((s = String.fromCharCode.apply(String, P.subarray(e, e + Math.min(r, 1024)))), (o = o ? o + s : s), (e += 1024), (r -= 1024));
        return o;
      }
      return b.UTF8ToString(e);
    }
    function oa(e) {
      function c(r, s, o) {
        s = s || Infinity;
        var n = "",
          h = [],
          p;
        if ("N" === e[i]) {
          i++;
          "K" === e[i] && i++;
          for (p = []; "E" !== e[i]; )
            if ("S" === e[i]) {
              i++;
              var w = e.indexOf("_", i);
              p.push(l[e.substring(i, w) || 0] || "?");
              i = w + 1;
            } else if ("C" === e[i]) (p.push(p[p.length - 1]), (i += 2));
            else {
              var w = parseInt(e.substr(i)),
                k = w.toString().length;
              if (!w || !k) {
                i--;
                break;
              }
              var _ = e.substr(i + k, w);
              p.push(_);
              l.push(_);
              i += k + w;
            }
          i++;
          p = p.join("::");
          s--;
          if (0 === s) return r ? [p] : p;
        } else if ((("K" === e[i] || (d && "L" === e[i])) && i++, (w = parseInt(e.substr(i)))))
          ((k = w.toString().length), (p = e.substr(i + k, w)), (i += k + w));
        d = !1;
        "I" === e[i] ? (i++, (w = c(!0)), (k = c(!0, 1, !0)), (n += k[0] + " " + p + "<" + w.join(", ") + ">")) : (n = p);
        e: for (; i < e.length && 0 < s--; )
          if (((p = e[i++]), p in a)) h.push(a[p]);
          else
            switch (p) {
              case "P":
                h.push(c(!0, 1, !0)[0] + "*");
                break;
              case "R":
                h.push(c(!0, 1, !0)[0] + "&");
                break;
              case "L":
                i++;
                w = e.indexOf("E", i) - i;
                h.push(e.substr(i, w));
                i += w + 2;
                break;
              case "A":
                w = parseInt(e.substr(i));
                i += w.toString().length;
                if ("_" !== e[i]) throw "?";
                i++;
                h.push(c(!0, 1, !0)[0] + " [" + w + "]");
                break;
              case "E":
                break e;
              default:
                n += "?" + p;
                break e;
            }
        o || 1 !== h.length || "void" !== h[0] || (h = []);
        return r ? (n && h.push(n + "?"), h) : n + ("(" + h.join(", ") + ")");
      }
      var r = !!b.___cxa_demangle;
      if (r)
        try {
          var s = ia(e.length);
          ga(e.substr(1), s);
          var o = ia(4),
            n = b.___cxa_demangle(s, 0, 0, o);
          if (0 === ha(o) && n) return Q(n);
        } catch (e) {
        } finally {
          (s && pa(s), o && pa(o), n && pa(n));
        }
      var i = 3,
        a = {
          v: "void",
          b: "bool",
          c: "char",
          s: "short",
          i: "int",
          l: "long",
          f: "float",
          d: "double",
          w: "wchar_t",
          a: "signed char",
          h: "unsigned char",
          t: "unsigned short",
          j: "unsigned int",
          m: "unsigned long",
          x: "long long",
          y: "unsigned long long",
          z: "...",
        },
        l = [],
        d = !0,
        s = e;
      try {
        if ("Object._main" == e || "_main" == e) return "main()";
        "number" === typeof e && (e = Q(e));
        if ("_" !== e[0] || "_" !== e[1] || "Z" !== e[2]) return e;
        switch (e[3]) {
          case "n":
            return "operator new()";
          case "d":
            return "operator delete()";
        }
        s = c();
      } catch (e) {
        s += "?";
      }
      0 <= s.indexOf("?") &&
        !r &&
        A.e("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
      return s;
    }
    function qa() {
      return ra().replace(/__Z[\w\d_]+/g, function (e) {
        var r = oa(e);
        return e === r ? e : e + " [" + r + "]";
      });
    }
    function ra() {
      var e = Error();
      if (!e.stack) {
        try {
          throw Error(0);
        } catch (r) {
          e = r;
        }
        if (!e.stack) return "(no stack trace available)";
      }
      return e.stack.toString();
    }
    function sa() {
      var e = C;
      0 < e % 4096 && (e += 4096 - (e % 4096));
      return e;
    }
    for (
      var I,
        P,
        J,
        ta,
        K,
        ua,
        L,
        N,
        va = 0,
        B = 0,
        wa = 0,
        z = 0,
        xa = 0,
        ya = 0,
        C = 0,
        za = b.TOTAL_STACK || 5242880,
        D = b.TOTAL_MEMORY || 318767104,
        R = 65536;
      R < D || R < 2 * za;

    )
      R = 16777216 > R ? 2 * R : R + 16777216;
    R !== D && (D = R);
    assert(
      "undefined" !== typeof Int32Array && "undefined" !== typeof Float64Array && !!new Int32Array(1).subarray && !!new Int32Array(1).set,
      "JS engine does not provide full typed array support"
    );
    var buffer;
    buffer = new ArrayBuffer(D);
    I = new Int8Array(buffer);
    J = new Int16Array(buffer);
    K = new Int32Array(buffer);
    P = new Uint8Array(buffer);
    ta = new Uint16Array(buffer);
    ua = new Uint32Array(buffer);
    L = new Float32Array(buffer);
    N = new Float64Array(buffer);
    K[0] = 255;
    assert(255 === P[0] && 0 === P[3], "Typed arrays 2 must be run on a little-endian system");
    b.HEAP = void 0;
    b.buffer = buffer;
    b.HEAP8 = I;
    b.HEAP16 = J;
    b.HEAP32 = K;
    b.HEAPU8 = P;
    b.HEAPU16 = ta;
    b.HEAPU32 = ua;
    b.HEAPF32 = L;
    b.HEAPF64 = N;
    function S(e) {
      for (; 0 < e.length; ) {
        var r = e.shift();
        if ("function" == typeof r) r();
        else {
          var s = r.X;
          "number" === typeof s ? (void 0 === r.q ? A.r("v", s) : A.r("vi", s, [r.q])) : s(void 0 === r.q ? null : r.q);
        }
      }
    }
    var Aa = [],
      Ba = [],
      Ca = [],
      Da = [],
      Ea = [],
      T = !1;
    function Fa() {
      var e = b.preRun.shift();
      Aa.unshift(e);
    }
    function Ga(e, r) {
      for (var s = 0, o = 0; o < e.length; ++o) {
        var n = e.charCodeAt(o);
        55296 <= n && 57343 >= n && (n = (65536 + ((n & 1023) << 10)) | (e.charCodeAt(++o) & 1023));
        127 >= n ? ++s : (s = 2047 >= n ? s + 2 : 65535 >= n ? s + 3 : 2097151 >= n ? s + 4 : 67108863 >= n ? s + 5 : s + 6);
      }
      s = Array(s + 1);
      var i = s.length,
        o = 0;
      if (0 < i) {
        for (var n = o, i = o + i - 1, a = 0; a < e.length; ++a) {
          var l = e.charCodeAt(a);
          55296 <= l && 57343 >= l && (l = (65536 + ((l & 1023) << 10)) | (e.charCodeAt(++a) & 1023));
          if (127 >= l) {
            if (o >= i) break;
            s[o++] = l;
          } else {
            if (2047 >= l) {
              if (o + 1 >= i) break;
              s[o++] = 192 | (l >> 6);
            } else {
              if (65535 >= l) {
                if (o + 2 >= i) break;
                s[o++] = 224 | (l >> 12);
              } else {
                if (2097151 >= l) {
                  if (o + 3 >= i) break;
                  s[o++] = 240 | (l >> 18);
                } else {
                  if (67108863 >= l) {
                    if (o + 4 >= i) break;
                    s[o++] = 248 | (l >> 24);
                  } else {
                    if (o + 5 >= i) break;
                    s[o++] = 252 | (l >> 30);
                    s[o++] = 128 | ((l >> 24) & 63);
                  }
                  s[o++] = 128 | ((l >> 18) & 63);
                }
                s[o++] = 128 | ((l >> 12) & 63);
              }
              s[o++] = 128 | ((l >> 6) & 63);
            }
            s[o++] = 128 | (l & 63);
          }
        }
        s[o] = 0;
        o = o - n;
      } else o = 0;
      r && (s.length = o);
      return s;
    }
    function ga(e, r) {
      for (var s = Ga(e, void 0), o = 0; o < s.length; ) ((I[(r + o) >> 0] = s[o]), (o += 1));
    }
    (Math.imul && -5 === Math.imul(4294967295, 5)) ||
      (Math.imul = function (e, r) {
        var s = e & 65535,
          o = r & 65535;
        return (s * o + (((e >>> 16) * o + s * (r >>> 16)) << 16)) | 0;
      });
    Math.ba = Math.imul;
    Math.clz32 ||
      (Math.clz32 = function (e) {
        e = e >>> 0;
        for (var r = 0; 32 > r; r++) if (e & (1 << (31 - r))) return r;
        return 32;
      });
    Math.V = Math.clz32;
    var ja = Math.abs,
      ma = Math.ceil,
      la = Math.floor,
      ka = Math.min,
      U = 0,
      Ha = null,
      V = null;
    b.preloadedImages = {};
    b.preloadedAudios = {};
    var W = null,
      va = 8,
      B = va + 407936;
    Ba.push();
    var W = "encode.js.mem",
      Ia = A.p(O(12, "i8", 2), 8);
    assert(0 == Ia % 8);
    b._i64Subtract = Ja;
    function Ka(e) {
      b.___errno_location && (K[b.___errno_location() >> 2] = e);
      return e;
    }
    b._memset = La;
    b._bitshift64Lshr = Ma;
    b._bitshift64Shl = Na;
    b._memcpy = Oa;
    b._i64Add = Pa;
    function X(e) {
      X.L ||
        ((C = sa()),
        (X.L = !0),
        assert(A.g),
        (X.K = A.g),
        (A.g = function () {
          E("cannot dynamically allocate, sbrk now has control");
        }));
      var r = C;
      return 0 == e || X.K(e) ? r : 4294967295;
    }
    b._memmove = Qa;
    function Ra(e) {
      b.exit(e);
    }
    wa = z = A.p(B);
    xa = wa + za;
    ya = C = A.p(xa);
    assert(ya < D, "TOTAL_MEMORY not big enough for stack");
    var Sa = O(
      [
        8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1,
        0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0,
        1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3,
        0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0,
        2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1,
        0,
      ],
      "i8",
      3
    );
    b.I = {
      Math: Math,
      Int8Array: Int8Array,
      Int16Array: Int16Array,
      Int32Array: Int32Array,
      Uint8Array: Uint8Array,
      Uint16Array: Uint16Array,
      Uint32Array: Uint32Array,
      Float32Array: Float32Array,
      Float64Array: Float64Array,
      NaN: NaN,
      Infinity: Infinity,
    };
    b.J = {
      abort: E,
      assert: assert,
      invoke_vii: function (e, r, s) {
        try {
          b.dynCall_vii(e, r, s);
        } catch (e) {
          if ("number" !== typeof e && "longjmp" !== e) throw e;
          Y.setThrew(1, 0);
        }
      },
      invoke_iii: function (e, r, s) {
        try {
          return b.dynCall_iii(e, r, s);
        } catch (e) {
          if ("number" !== typeof e && "longjmp" !== e) throw e;
          Y.setThrew(1, 0);
        }
      },
      __exit: Ra,
      _pthread_self: function () {
        return 0;
      },
      _abort: function () {
        b.abort();
      },
      ___setErrNo: Ka,
      _sysconf: function (e) {
        switch (e) {
          case 30:
            return 4096;
          case 85:
            return R / 4096;
          case 132:
          case 133:
          case 12:
          case 137:
          case 138:
          case 15:
          case 235:
          case 16:
          case 17:
          case 18:
          case 19:
          case 20:
          case 149:
          case 13:
          case 10:
          case 236:
          case 153:
          case 9:
          case 21:
          case 22:
          case 159:
          case 154:
          case 14:
          case 77:
          case 78:
          case 139:
          case 80:
          case 81:
          case 82:
          case 68:
          case 67:
          case 164:
          case 11:
          case 29:
          case 47:
          case 48:
          case 95:
          case 52:
          case 51:
          case 46:
            return 200809;
          case 79:
            return 0;
          case 27:
          case 246:
          case 127:
          case 128:
          case 23:
          case 24:
          case 160:
          case 161:
          case 181:
          case 182:
          case 242:
          case 183:
          case 184:
          case 243:
          case 244:
          case 245:
          case 165:
          case 178:
          case 179:
          case 49:
          case 50:
          case 168:
          case 169:
          case 175:
          case 170:
          case 171:
          case 172:
          case 97:
          case 76:
          case 32:
          case 173:
          case 35:
            return -1;
          case 176:
          case 177:
          case 7:
          case 155:
          case 8:
          case 157:
          case 125:
          case 126:
          case 92:
          case 93:
          case 129:
          case 130:
          case 131:
          case 94:
          case 91:
            return 1;
          case 74:
          case 60:
          case 69:
          case 70:
          case 4:
            return 1024;
          case 31:
          case 42:
          case 72:
            return 32;
          case 87:
          case 26:
          case 33:
            return 2147483647;
          case 34:
          case 1:
            return 47839;
          case 38:
          case 36:
            return 99;
          case 43:
          case 37:
            return 2048;
          case 0:
            return 2097152;
          case 3:
            return 65536;
          case 28:
            return 32768;
          case 44:
            return 32767;
          case 75:
            return 16384;
          case 39:
            return 1e3;
          case 89:
            return 700;
          case 71:
            return 256;
          case 40:
            return 255;
          case 2:
            return 100;
          case 180:
            return 64;
          case 25:
            return 20;
          case 5:
            return 16;
          case 6:
            return 6;
          case 73:
            return 4;
          case 84:
            return "object" === typeof navigator ? navigator.hardwareConcurrency || 1 : 1;
        }
        Ka(22);
        return -1;
      },
      _sbrk: X,
      _time: function (e) {
        var r = (Date.now() / 1e3) | 0;
        e && (K[e >> 2] = r);
        return r;
      },
      _emscripten_memcpy_big: function (e, r, s) {
        P.set(P.subarray(r, r + s), e);
        return e;
      },
      _llvm_trap: function () {
        E("trap!");
      },
      _exit: function (e) {
        Ra(e);
      },
      ___assert_fail: function (e, r, s, o) {
        F = !0;
        throw "Assertion failed: " + Q(e) + ", at: " + [r ? Q(r) : "unknown filename", s, o ? Q(o) : "unknown function"] + " at " + qa();
      },
      STACKTOP: z,
      STACK_MAX: xa,
      tempDoublePtr: Ia,
      ABORT: F,
      cttz_i8: Sa,
    };
    var Y = (function (e, r, s) {
        "use asm";
        var o = new e.Int8Array(s);
        var n = new e.Int16Array(s);
        var i = new e.Int32Array(s);
        var a = new e.Uint8Array(s);
        var l = new e.Uint16Array(s);
        var d = new e.Uint32Array(s);
        var h = new e.Float32Array(s);
        var p = new e.Float64Array(s);
        var w = r.STACKTOP | 0;
        var k = r.STACK_MAX | 0;
        var _ = r.tempDoublePtr | 0;
        var M = r.ABORT | 0;
        var j = r.cttz_i8 | 0;
        var q = 0;
        var $ = 0;
        var ee = 0;
        var te = 0;
        var re = e.NaN,
          se = e.Infinity;
        var oe = 0,
          ne = 0,
          ie = 0,
          Ae = 0,
          ae = 0.0,
          ce = 0,
          le = 0,
          ue = 0,
          ge = 0.0;
        var de = 0;
        var fe = 0;
        var he = 0;
        var pe = 0;
        var Ee = 0;
        var Ie = 0;
        var Ce = 0;
        var me = 0;
        var Be = 0;
        var Qe = 0;
        var be = e.Math.floor;
        var we = e.Math.abs;
        var ye = e.Math.sqrt;
        var ke = e.Math.pow;
        var Re = e.Math.cos;
        var Te = e.Math.sin;
        var De = e.Math.tan;
        var Fe = e.Math.acos;
        var ve = e.Math.asin;
        var Se = e.Math.atan;
        var Ne = e.Math.atan2;
        var Oe = e.Math.exp;
        var Ue = e.Math.log;
        var Ge = e.Math.ceil;
        var Pe = e.Math.imul;
        var Le = e.Math.min;
        var _e = e.Math.clz32;
        var Me = r.abort;
        var xe = r.assert;
        var He = r.invoke_vii;
        var Ve = r.invoke_iii;
        var Ye = r.__exit;
        var je = r._pthread_self;
        var qe = r._abort;
        var Je = r.___setErrNo;
        var We = r._sysconf;
        var Ke = r._sbrk;
        var Xe = r._time;
        var ze = r._emscripten_memcpy_big;
        var Ze = r._llvm_trap;
        var $e = r._exit;
        var et = r.___assert_fail;
        var tt = 0.0;
        function $a(e, r, s, l, d, h, p, k) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          var _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0;
          fe = w;
          w = (w + 16) | 0;
          ge = fe;
          i[ge >> 2] = 0;
          i[(ge + 4) >> 2] = 0;
          i[(ge + 8) >> 2] = 0;
          i[(ge + 12) >> 2] = 0;
          ue = 0;
          le = 0;
          while (1) {
            if (!s) break;
            _ = i[(r + (le << 2)) >> 2] | 0;
            if (!_) M = ue;
            else {
              if (ue >>> 0 < 4) i[(ge + (ue << 2)) >> 2] = le;
              M = (ue + 1) | 0;
              s = (s - _) | 0;
            }
            ue = M;
            le = (le + 1) | 0;
          }
          if (ue >>> 0 < 2) {
            _ = i[p >> 2] | 0;
            j = (k + (_ >>> 3)) | 0;
            s = a[j >> 0] | 0;
            _ = cc(1, 0, (_ & 7) | 0) | 0;
            M = de;
            _ = s | _;
            s = j;
            o[s >> 0] = _;
            o[(s + 1) >> 0] = _ >> 8;
            o[(s + 2) >> 0] = _ >> 16;
            o[(s + 3) >> 0] = _ >> 24;
            j = (j + 4) | 0;
            o[j >> 0] = M;
            o[(j + 1) >> 0] = M >> 8;
            o[(j + 2) >> 0] = M >> 16;
            o[(j + 3) >> 0] = M >> 24;
            j = ((i[p >> 2] | 0) + 4) | 0;
            i[p >> 2] = j;
            M = i[ge >> 2] | 0;
            s = (k + (j >>> 3)) | 0;
            _ = a[s >> 0] | 0;
            k = bc(M | 0, 0, l | 0) | 0;
            if (!(((k | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
            if (l >>> 0 >= 57) et(406267, 406218, 55, 406251);
            le = cc(M | 0, 0, (j & 7) | 0) | 0;
            ge = de;
            le = _ | le;
            k = s;
            ue = k;
            o[ue >> 0] = le;
            o[(ue + 1) >> 0] = le >> 8;
            o[(ue + 2) >> 0] = le >> 16;
            o[(ue + 3) >> 0] = le >> 24;
            k = (k + 4) | 0;
            o[k >> 0] = ge;
            o[(k + 1) >> 0] = ge >> 8;
            o[(k + 2) >> 0] = ge >> 16;
            o[(k + 3) >> 0] = ge >> 24;
            i[p >> 2] = (i[p >> 2] | 0) + l;
            o[(d + M) >> 0] = 0;
            n[(h + (M << 1)) >> 1] = 0;
            w = fe;
            return;
          }
          ac(d | 0, 0, le | 0) | 0;
          ie = (e + 8) | 0;
          Ae = st[i[e >> 2] & 1](i[ie >> 2] | 0, (le << 4) | 8) | 0;
          ae = Ae;
          if (!Ae) $e(1);
          ce = 1;
          while (1) {
            s = le;
            _ = ae;
            e: while (1) {
              do {
                if (!s) break e;
                s = (s + -1) | 0;
                M = i[(r + (s << 2)) >> 2] | 0;
              } while ((M | 0) == 0);
              j = s & 65535;
              if (M >>> 0 < ce >>> 0) {
                i[_ >> 2] = ce;
                n[(_ + 4) >> 1] = -1;
                n[(_ + 6) >> 1] = j;
              } else {
                i[_ >> 2] = M;
                n[(_ + 4) >> 1] = -1;
                n[(_ + 6) >> 1] = j;
              }
              _ = (_ + 8) | 0;
            }
            ne = (_ - ae) | 0;
            oe = ne >> 3;
            se = (oe + 1) | 0;
            e: do {
              if (oe >>> 0 < 13) {
                ee = 1;
                while (1) {
                  if (ee >>> 0 >= oe >>> 0) break e;
                  $ = (Ae + (ee << 3)) | 0;
                  q = i[$ >> 2] | 0;
                  $ = i[($ + 4) >> 2] | 0;
                  j = ee;
                  while (1) {
                    s = j;
                    j = (j + -1) | 0;
                    M = (Ae + (j << 3)) | 0;
                    if (!(cb(q, i[M >> 2] | 0) | 0)) break;
                    te = i[(M + 4) >> 2] | 0;
                    re = (Ae + (s << 3)) | 0;
                    i[re >> 2] = i[M >> 2];
                    i[(re + 4) >> 2] = te;
                    if (!j) {
                      s = 0;
                      break;
                    }
                  }
                  re = (Ae + (s << 3)) | 0;
                  i[re >> 2] = q;
                  i[(re + 4) >> 2] = $;
                  ee = (ee + 1) | 0;
                }
              } else {
                te = oe >>> 0 < 57 ? 2 : 0;
                while (1) {
                  if ((te | 0) >= 6) break e;
                  s = i[(19428 + (te << 2)) >> 2] | 0;
                  re = s;
                  while (1) {
                    if (re >>> 0 >= oe >>> 0) break;
                    j = (Ae + (re << 3)) | 0;
                    M = i[j >> 2] | 0;
                    j = i[(j + 4) >> 2] | 0;
                    ee = re;
                    while (1) {
                      if (ee >>> 0 < s >>> 0) break;
                      q = (ee - s) | 0;
                      $ = (Ae + (q << 3)) | 0;
                      if (!(cb(M, i[$ >> 2] | 0) | 0)) break;
                      pe = $;
                      he = i[(pe + 4) >> 2] | 0;
                      $ = (Ae + (ee << 3)) | 0;
                      i[$ >> 2] = i[pe >> 2];
                      i[($ + 4) >> 2] = he;
                      ee = q;
                    }
                    pe = (Ae + (ee << 3)) | 0;
                    i[pe >> 2] = M;
                    i[(pe + 4) >> 2] = j;
                    re = (re + 1) | 0;
                  }
                  te = (te + 1) | 0;
                }
              }
            } while (0);
            re = _;
            M = _;
            i[M >> 2] = -1;
            i[(M + 4) >> 2] = -1;
            M = (re + 8) | 0;
            i[M >> 2] = -1;
            i[(M + 4) >> 2] = -1;
            M = 0;
            j = se;
            re = (re + 16) | 0;
            te = oe;
            while (1) {
              if ((te | 0) <= 1) break;
              _ = i[(Ae + (M << 3)) >> 2] | 0;
              s = i[(Ae + (j << 3)) >> 2] | 0;
              if (_ >>> 0 > s >>> 0) {
                ee = (j + 1) | 0;
                s = i[(Ae + (ee << 3)) >> 2] | 0;
                $ = M;
                q = j;
              } else {
                $ = (M + 1) | 0;
                _ = i[(Ae + ($ << 3)) >> 2] | 0;
                ee = j;
                q = M;
              }
              if (_ >>> 0 > s >>> 0) {
                M = $;
                j = (ee + 1) | 0;
                _ = ee;
              } else {
                s = _;
                M = ($ + 1) | 0;
                j = ee;
                _ = $;
              }
              i[(re + -8) >> 2] = (i[(Ae + (q << 3)) >> 2] | 0) + s;
              n[(re + -4) >> 1] = q;
              n[(re + -2) >> 1] = _;
              pe = re;
              i[pe >> 2] = -1;
              i[(pe + 4) >> 2] = -1;
              re = (re + 8) | 0;
              te = (te + -1) | 0;
            }
            if (Gb(((ne >> 2) + -1) | 0, Ae, d, 14) | 0) break;
            ce = ce << 1;
          }
          rt[i[(e + 4) >> 2] & 1](i[ie >> 2] | 0, Ae);
          Jb(d, le, h);
          ne = i[p >> 2] | 0;
          se = (k + (ne >>> 3)) | 0;
          oe = a[se >> 0] | 0;
          ne = ne & 7;
          if (ue >>> 0 >= 5) {
            pe = cc(1431655764, 255, ne | 0) | 0;
            _ = de;
            pe = oe | pe;
            s = se;
            te = s;
            o[te >> 0] = pe;
            o[(te + 1) >> 0] = pe >> 8;
            o[(te + 2) >> 0] = pe >> 16;
            o[(te + 3) >> 0] = pe >> 24;
            s = (s + 4) | 0;
            o[s >> 0] = _;
            o[(s + 1) >> 0] = _ >> 8;
            o[(s + 2) >> 0] = _ >> 16;
            o[(s + 3) >> 0] = _ >> 24;
            s = ((i[p >> 2] | 0) + 40) | 0;
            i[p >> 2] = s;
            _ = 0;
            te = 8;
            e: while (1) {
              while (1) {
                if (_ >>> 0 >= le >>> 0) {
                  s = 114;
                  break e;
                }
                re = o[(d + _) >> 0] | 0;
                ee = 1;
                M = _;
                while (1) {
                  M = (M + 1) | 0;
                  if (M >>> 0 >= le >>> 0) break;
                  if ((o[(d + M) >> 0] | 0) != (re << 24) >> 24) break;
                  ee = (ee + 1) | 0;
                }
                _ = (_ + ee) | 0;
                if ((re << 24) >> 24) break;
                $ = i[(11564 + (ee << 2)) >> 2] | 0;
                j = (8 + (ee << 3)) | 0;
                M = i[j >> 2] | 0;
                j = i[(j + 4) >> 2] | 0;
                q = (k + (s >>> 3)) | 0;
                pe = bc(M | 0, j | 0, $ | 0) | 0;
                if (!(((pe | 0) == 0) & ((de | 0) == 0))) {
                  s = 99;
                  break e;
                }
                pe = a[q >> 0] | 0;
                e = cc(M | 0, j | 0, (s & 7) | 0) | 0;
                he = de;
                e = pe | e;
                pe = q;
                h = pe;
                o[h >> 0] = e;
                o[(h + 1) >> 0] = e >> 8;
                o[(h + 2) >> 0] = e >> 16;
                o[(h + 3) >> 0] = e >> 24;
                pe = (pe + 4) | 0;
                o[pe >> 0] = he;
                o[(pe + 1) >> 0] = he >> 8;
                o[(pe + 2) >> 0] = he >> 16;
                o[(pe + 3) >> 0] = he >> 24;
                pe = ((i[p >> 2] | 0) + $) | 0;
                i[p >> 2] = pe;
                s = pe;
              }
              if ((te << 24) >> 24 == (re << 24) >> 24) M = ee;
              else {
                j = re & 255;
                M = o[(404394 + j) >> 0] | 0;
                j = i[(14380 + (j << 2)) >> 2] | 0;
                q = (k + (s >>> 3)) | 0;
                pe = bc(j | 0, 0, (M & 255) | 0) | 0;
                if (!(((pe | 0) == 0) & ((de | 0) == 0))) {
                  s = 103;
                  break;
                }
                he = a[q >> 0] | 0;
                h = cc(j | 0, 0, (s & 7) | 0) | 0;
                pe = de;
                h = he | h;
                s = q;
                he = s;
                o[he >> 0] = h;
                o[(he + 1) >> 0] = h >> 8;
                o[(he + 2) >> 0] = h >> 16;
                o[(he + 3) >> 0] = h >> 24;
                s = (s + 4) | 0;
                o[s >> 0] = pe;
                o[(s + 1) >> 0] = pe >> 8;
                o[(s + 2) >> 0] = pe >> 16;
                o[(s + 3) >> 0] = pe >> 24;
                s = ((i[p >> 2] | 0) + (M & 255)) | 0;
                i[p >> 2] = s;
                M = (ee + -1) | 0;
              }
              if (M >>> 0 >= 3) {
                q = (M + -3) | 0;
                M = i[(14452 + (q << 2)) >> 2] | 0;
                q = (5640 + (q << 3)) | 0;
                j = i[q >> 2] | 0;
                q = i[(q + 4) >> 2] | 0;
                $ = (k + (s >>> 3)) | 0;
                pe = bc(j | 0, q | 0, M | 0) | 0;
                if (!(((pe | 0) == 0) & ((de | 0) == 0))) {
                  s = 112;
                  break;
                }
                pe = a[$ >> 0] | 0;
                he = cc(j | 0, q | 0, (s & 7) | 0) | 0;
                te = de;
                he = pe | he;
                s = $;
                pe = s;
                o[pe >> 0] = he;
                o[(pe + 1) >> 0] = he >> 8;
                o[(pe + 2) >> 0] = he >> 16;
                o[(pe + 3) >> 0] = he >> 24;
                s = (s + 4) | 0;
                o[s >> 0] = te;
                o[(s + 1) >> 0] = te >> 8;
                o[(s + 2) >> 0] = te >> 16;
                o[(s + 3) >> 0] = te >> 24;
                s = ((i[p >> 2] | 0) + M) | 0;
                i[p >> 2] = s;
                te = re;
                continue;
              }
              te = re & 255;
              ee = (404394 + te) | 0;
              te = (14380 + (te << 2)) | 0;
              while (1) {
                if (!M) {
                  te = re;
                  continue e;
                }
                j = o[ee >> 0] | 0;
                q = i[te >> 2] | 0;
                $ = (k + (s >>> 3)) | 0;
                pe = bc(q | 0, 0, (j & 255) | 0) | 0;
                if (!(((pe | 0) == 0) & ((de | 0) == 0))) {
                  s = 109;
                  break e;
                }
                pe = a[$ >> 0] | 0;
                e = cc(q | 0, 0, (s & 7) | 0) | 0;
                he = de;
                e = pe | e;
                pe = $;
                h = pe;
                o[h >> 0] = e;
                o[(h + 1) >> 0] = e >> 8;
                o[(h + 2) >> 0] = e >> 16;
                o[(h + 3) >> 0] = e >> 24;
                pe = (pe + 4) | 0;
                o[pe >> 0] = he;
                o[(pe + 1) >> 0] = he >> 8;
                o[(pe + 2) >> 0] = he >> 16;
                o[(pe + 3) >> 0] = he >> 24;
                pe = ((i[p >> 2] | 0) + (j & 255)) | 0;
                i[p >> 2] = pe;
                s = pe;
                M = (M + -1) | 0;
              }
            }
            if ((s | 0) == 99) et(406196, 406218, 54, 406251);
            else if ((s | 0) == 103) et(406196, 406218, 54, 406251);
            else if ((s | 0) == 109) et(406196, 406218, 54, 406251);
            else if ((s | 0) == 112) et(406196, 406218, 54, 406251);
            else if ((s | 0) == 114) {
              w = fe;
              return;
            }
          }
          pe = cc(1, 0, ne | 0) | 0;
          _ = de;
          pe = oe | pe;
          s = se;
          M = s;
          o[M >> 0] = pe;
          o[(M + 1) >> 0] = pe >> 8;
          o[(M + 2) >> 0] = pe >> 16;
          o[(M + 3) >> 0] = pe >> 24;
          s = (s + 4) | 0;
          o[s >> 0] = _;
          o[(s + 1) >> 0] = _ >> 8;
          o[(s + 2) >> 0] = _ >> 16;
          o[(s + 3) >> 0] = _ >> 24;
          s = ((i[p >> 2] | 0) + 2) | 0;
          i[p >> 2] = s;
          _ = (ue + -1) | 0;
          M = (k + (s >>> 3)) | 0;
          if (!((((_ & -4) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
          te = a[M >> 0] | 0;
          pe = cc(_ | 0, 0, (s & 7) | 0) | 0;
          j = de;
          pe = te | pe;
          te = M;
          $ = te;
          o[$ >> 0] = pe;
          o[($ + 1) >> 0] = pe >> 8;
          o[($ + 2) >> 0] = pe >> 16;
          o[($ + 3) >> 0] = pe >> 24;
          te = (te + 4) | 0;
          o[te >> 0] = j;
          o[(te + 1) >> 0] = j >> 8;
          o[(te + 2) >> 0] = j >> 16;
          o[(te + 3) >> 0] = j >> 24;
          te = ((i[p >> 2] | 0) + 2) | 0;
          i[p >> 2] = te;
          j = (ue + -1) | 0;
          $ = 0;
          while (1) {
            if (($ | 0) == (ue | 0)) break;
            q = (ge + ($ << 2)) | 0;
            s = $;
            while (1) {
              ee = (s + 1) | 0;
              if ((s | 0) == (j | 0)) break;
              s = (ge + (ee << 2)) | 0;
              _ = i[s >> 2] | 0;
              M = i[q >> 2] | 0;
              if ((a[(d + _) >> 0] | 0) >= (a[(d + M) >> 0] | 0)) {
                s = ee;
                continue;
              }
              i[s >> 2] = M;
              i[q >> 2] = _;
              s = ee;
            }
            $ = ($ + 1) | 0;
          }
          switch (ue | 0) {
            case 2: {
              s = i[ge >> 2] | 0;
              _ = (k + (te >>> 3)) | 0;
              M = a[_ >> 0] | 0;
              if (!(((bc(s | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if (l >>> 0 >= 57) et(406267, 406218, 55, 406251);
              pe = cc(s | 0, 0, (te & 7) | 0) | 0;
              s = de;
              pe = M | pe;
              M = _;
              _ = M;
              o[_ >> 0] = pe;
              o[(_ + 1) >> 0] = pe >> 8;
              o[(_ + 2) >> 0] = pe >> 16;
              o[(_ + 3) >> 0] = pe >> 24;
              M = (M + 4) | 0;
              o[M >> 0] = s;
              o[(M + 1) >> 0] = s >> 8;
              o[(M + 2) >> 0] = s >> 16;
              o[(M + 3) >> 0] = s >> 24;
              M = ((i[p >> 2] | 0) + l) | 0;
              i[p >> 2] = M;
              _ = i[(ge + 4) >> 2] | 0;
              s = (k + (M >>> 3)) | 0;
              if (!(((bc(_ | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              pe = a[s >> 0] | 0;
              ge = cc(_ | 0, 0, (M & 7) | 0) | 0;
              he = de;
              ge = pe | ge;
              pe = s;
              k = pe;
              o[k >> 0] = ge;
              o[(k + 1) >> 0] = ge >> 8;
              o[(k + 2) >> 0] = ge >> 16;
              o[(k + 3) >> 0] = ge >> 24;
              pe = (pe + 4) | 0;
              o[pe >> 0] = he;
              o[(pe + 1) >> 0] = he >> 8;
              o[(pe + 2) >> 0] = he >> 16;
              o[(pe + 3) >> 0] = he >> 24;
              i[p >> 2] = (i[p >> 2] | 0) + l;
              w = fe;
              return;
            }
            case 3: {
              s = i[ge >> 2] | 0;
              _ = (k + (te >>> 3)) | 0;
              M = a[_ >> 0] | 0;
              if (!(((bc(s | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if (l >>> 0 >= 57) et(406267, 406218, 55, 406251);
              s = cc(s | 0, 0, (te & 7) | 0) | 0;
              pe = de;
              M = M | s;
              s = _;
              _ = s;
              o[_ >> 0] = M;
              o[(_ + 1) >> 0] = M >> 8;
              o[(_ + 2) >> 0] = M >> 16;
              o[(_ + 3) >> 0] = M >> 24;
              s = (s + 4) | 0;
              o[s >> 0] = pe;
              o[(s + 1) >> 0] = pe >> 8;
              o[(s + 2) >> 0] = pe >> 16;
              o[(s + 3) >> 0] = pe >> 24;
              s = ((i[p >> 2] | 0) + l) | 0;
              i[p >> 2] = s;
              _ = i[(ge + 4) >> 2] | 0;
              M = (k + (s >>> 3)) | 0;
              if (!(((bc(_ | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              he = a[M >> 0] | 0;
              pe = cc(_ | 0, 0, (s & 7) | 0) | 0;
              _ = de;
              pe = he | pe;
              s = M;
              o[s >> 0] = pe;
              o[(s + 1) >> 0] = pe >> 8;
              o[(s + 2) >> 0] = pe >> 16;
              o[(s + 3) >> 0] = pe >> 24;
              M = (M + 4) | 0;
              o[M >> 0] = _;
              o[(M + 1) >> 0] = _ >> 8;
              o[(M + 2) >> 0] = _ >> 16;
              o[(M + 3) >> 0] = _ >> 24;
              M = ((i[p >> 2] | 0) + l) | 0;
              i[p >> 2] = M;
              _ = i[(ge + 8) >> 2] | 0;
              s = (k + (M >>> 3)) | 0;
              if (!(((bc(_ | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              pe = a[s >> 0] | 0;
              ge = cc(_ | 0, 0, (M & 7) | 0) | 0;
              he = de;
              ge = pe | ge;
              pe = s;
              k = pe;
              o[k >> 0] = ge;
              o[(k + 1) >> 0] = ge >> 8;
              o[(k + 2) >> 0] = ge >> 16;
              o[(k + 3) >> 0] = ge >> 24;
              pe = (pe + 4) | 0;
              o[pe >> 0] = he;
              o[(pe + 1) >> 0] = he >> 8;
              o[(pe + 2) >> 0] = he >> 16;
              o[(pe + 3) >> 0] = he >> 24;
              i[p >> 2] = (i[p >> 2] | 0) + l;
              w = fe;
              return;
            }
            default: {
              j = i[ge >> 2] | 0;
              s = (k + (te >>> 3)) | 0;
              _ = a[s >> 0] | 0;
              if (!(((bc(j | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if (l >>> 0 >= 57) et(406267, 406218, 55, 406251);
              pe = cc(j | 0, 0, (te & 7) | 0) | 0;
              M = de;
              pe = _ | pe;
              _ = s;
              o[_ >> 0] = pe;
              o[(_ + 1) >> 0] = pe >> 8;
              o[(_ + 2) >> 0] = pe >> 16;
              o[(_ + 3) >> 0] = pe >> 24;
              s = (s + 4) | 0;
              o[s >> 0] = M;
              o[(s + 1) >> 0] = M >> 8;
              o[(s + 2) >> 0] = M >> 16;
              o[(s + 3) >> 0] = M >> 24;
              s = ((i[p >> 2] | 0) + l) | 0;
              i[p >> 2] = s;
              _ = i[(ge + 4) >> 2] | 0;
              M = (k + (s >>> 3)) | 0;
              if (!(((bc(_ | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              he = a[M >> 0] | 0;
              pe = cc(_ | 0, 0, (s & 7) | 0) | 0;
              _ = de;
              pe = he | pe;
              s = M;
              M = s;
              o[M >> 0] = pe;
              o[(M + 1) >> 0] = pe >> 8;
              o[(M + 2) >> 0] = pe >> 16;
              o[(M + 3) >> 0] = pe >> 24;
              s = (s + 4) | 0;
              o[s >> 0] = _;
              o[(s + 1) >> 0] = _ >> 8;
              o[(s + 2) >> 0] = _ >> 16;
              o[(s + 3) >> 0] = _ >> 24;
              s = ((i[p >> 2] | 0) + l) | 0;
              i[p >> 2] = s;
              _ = i[(ge + 8) >> 2] | 0;
              M = (k + (s >>> 3)) | 0;
              if (!(((bc(_ | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              he = a[M >> 0] | 0;
              pe = cc(_ | 0, 0, (s & 7) | 0) | 0;
              s = de;
              pe = he | pe;
              _ = M;
              o[_ >> 0] = pe;
              o[(_ + 1) >> 0] = pe >> 8;
              o[(_ + 2) >> 0] = pe >> 16;
              o[(_ + 3) >> 0] = pe >> 24;
              M = (M + 4) | 0;
              o[M >> 0] = s;
              o[(M + 1) >> 0] = s >> 8;
              o[(M + 2) >> 0] = s >> 16;
              o[(M + 3) >> 0] = s >> 24;
              M = ((i[p >> 2] | 0) + l) | 0;
              i[p >> 2] = M;
              s = i[(ge + 12) >> 2] | 0;
              _ = (k + (M >>> 3)) | 0;
              if (!(((bc(s | 0, 0, l | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              he = a[_ >> 0] | 0;
              ue = cc(s | 0, 0, (M & 7) | 0) | 0;
              pe = de;
              ue = he | ue;
              he = _;
              ge = he;
              o[ge >> 0] = ue;
              o[(ge + 1) >> 0] = ue >> 8;
              o[(ge + 2) >> 0] = ue >> 16;
              o[(ge + 3) >> 0] = ue >> 24;
              he = (he + 4) | 0;
              o[he >> 0] = pe;
              o[(he + 1) >> 0] = pe >> 8;
              o[(he + 2) >> 0] = pe >> 16;
              o[(he + 3) >> 0] = pe >> 24;
              he = ((i[p >> 2] | 0) + l) | 0;
              i[p >> 2] = he;
              pe = (k + (he >>> 3)) | 0;
              l = a[pe >> 0] | 0;
              k = cc(((o[(d + j) >> 0] | 0) == 1) | 0, 0, (he & 7) | 0) | 0;
              he = de;
              k = l | k;
              l = pe;
              o[l >> 0] = k;
              o[(l + 1) >> 0] = k >> 8;
              o[(l + 2) >> 0] = k >> 16;
              o[(l + 3) >> 0] = k >> 24;
              pe = (pe + 4) | 0;
              o[pe >> 0] = he;
              o[(pe + 1) >> 0] = he >> 8;
              o[(pe + 2) >> 0] = he >> 16;
              o[(pe + 3) >> 0] = he >> 24;
              i[p >> 2] = (i[p >> 2] | 0) + 1;
              w = fe;
              return;
            }
          }
        }
        function ab(e, r, s, n, l, d, h, p, k, _, M, j, q, $, ee, te) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          te = te | 0;
          var re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0;
          Re = w;
          w = (w + 2704) | 0;
          ke = (Re + 1800) | 0;
          we = (Re + 900) | 0;
          ye = Re;
          db(p, n, ee, te);
          be = (e + 8) | 0;
          ie = st[i[e >> 2] & 1](i[be >> 2] | 0, 11272) | 0;
          if (!ie) $e(1);
          me = i[$ >> 2] | 0;
          Be = i[($ + 8) >> 2] | 0;
          n = i[($ + 12) >> 2] | 0;
          Qe = i[($ + 4) >> 2] | 0;
          i[ke >> 2] = 256;
          i[(ke + 4) >> 2] = me;
          i[(ke + 8) >> 2] = Be;
          i[(ke + 12) >> 2] = n;
          i[(ke + 16) >> 2] = Qe;
          i[(ke + 20) >> 2] = 1;
          i[(ke + 24) >> 2] = 0;
          i[(ke + 880) >> 2] = 0;
          if (!Qe) n = 0;
          else n = i[n >> 2] | 0;
          i[(ke + 884) >> 2] = n;
          i[(ke + 888) >> 2] = 0;
          Be = (ke + 892) | 0;
          i[Be >> 2] = 0;
          Qe = (ke + 896) | 0;
          i[Qe >> 2] = 0;
          Ie = i[($ + 24) >> 2] | 0;
          Ce = i[($ + 32) >> 2] | 0;
          n = i[($ + 36) >> 2] | 0;
          me = i[($ + 28) >> 2] | 0;
          i[we >> 2] = 704;
          i[(we + 4) >> 2] = Ie;
          i[(we + 8) >> 2] = Ce;
          i[(we + 12) >> 2] = n;
          i[(we + 16) >> 2] = me;
          i[(we + 20) >> 2] = 1;
          i[(we + 24) >> 2] = 0;
          i[(we + 880) >> 2] = 0;
          if (!me) n = 0;
          else n = i[n >> 2] | 0;
          i[(we + 884) >> 2] = n;
          i[(we + 888) >> 2] = 0;
          Ce = (we + 892) | 0;
          i[Ce >> 2] = 0;
          me = (we + 896) | 0;
          i[me >> 2] = 0;
          pe = i[($ + 48) >> 2] | 0;
          Ee = i[($ + 56) >> 2] | 0;
          n = i[($ + 60) >> 2] | 0;
          Ie = i[($ + 52) >> 2] | 0;
          i[ye >> 2] = k + 16 + (48 << _);
          i[(ye + 4) >> 2] = pe;
          i[(ye + 8) >> 2] = Ee;
          i[(ye + 12) >> 2] = n;
          i[(ye + 16) >> 2] = Ie;
          i[(ye + 20) >> 2] = 1;
          i[(ye + 24) >> 2] = 0;
          i[(ye + 880) >> 2] = 0;
          if (!Ie) n = 0;
          else n = i[n >> 2] | 0;
          i[(ye + 884) >> 2] = n;
          i[(ye + 888) >> 2] = 0;
          Ee = (ye + 892) | 0;
          i[Ee >> 2] = 0;
          Ie = (ye + 896) | 0;
          i[Ie >> 2] = 0;
          eb(ke, ie, ee, te);
          eb(we, ie, ee, te);
          eb(ye, ie, ee, te);
          n = i[ee >> 2] | 0;
          re = (te + (n >>> 3)) | 0;
          se = a[re >> 0] | 0;
          if (!((((_ & -4) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
          oe = cc(_ | 0, 0, (n & 7) | 0) | 0;
          n = de;
          se = se | oe;
          oe = re;
          re = oe;
          o[re >> 0] = se;
          o[(re + 1) >> 0] = se >> 8;
          o[(re + 2) >> 0] = se >> 16;
          o[(re + 3) >> 0] = se >> 24;
          oe = (oe + 4) | 0;
          o[oe >> 0] = n;
          o[(oe + 1) >> 0] = n >> 8;
          o[(oe + 2) >> 0] = n >> 16;
          o[(oe + 3) >> 0] = n >> 24;
          oe = ((i[ee >> 2] | 0) + 2) | 0;
          i[ee >> 2] = oe;
          n = k >>> _;
          re = (te + (oe >>> 3)) | 0;
          se = a[re >> 0] | 0;
          if (!((((n & -16) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
          pe = cc(n | 0, 0, (oe & 7) | 0) | 0;
          n = de;
          pe = se | pe;
          _ = re;
          o[_ >> 0] = pe;
          o[(_ + 1) >> 0] = pe >> 8;
          o[(_ + 2) >> 0] = pe >> 16;
          o[(_ + 3) >> 0] = pe >> 24;
          re = (re + 4) | 0;
          o[re >> 0] = n;
          o[(re + 1) >> 0] = n >> 8;
          o[(re + 2) >> 0] = n >> 16;
          o[(re + 3) >> 0] = n >> 24;
          re = ((i[ee >> 2] | 0) + 4) | 0;
          i[ee >> 2] = re;
          n = (((M & -4) | 0) == 0) & (0 == 0);
          _ = 0;
          while (1) {
            if (_ >>> 0 >= (i[$ >> 2] | 0) >>> 0) break;
            se = (te + (re >>> 3)) | 0;
            oe = a[se >> 0] | 0;
            if (!n) {
              ne = 16;
              break;
            }
            ge = cc(M | 0, 0, (re & 7) | 0) | 0;
            he = de;
            ge = oe | ge;
            pe = se;
            fe = pe;
            o[fe >> 0] = ge;
            o[(fe + 1) >> 0] = ge >> 8;
            o[(fe + 2) >> 0] = ge >> 16;
            o[(fe + 3) >> 0] = ge >> 24;
            pe = (pe + 4) | 0;
            o[pe >> 0] = he;
            o[(pe + 1) >> 0] = he >> 8;
            o[(pe + 2) >> 0] = he >> 16;
            o[(pe + 3) >> 0] = he >> 24;
            pe = ((i[ee >> 2] | 0) + 2) | 0;
            i[ee >> 2] = pe;
            re = pe;
            _ = (_ + 1) | 0;
          }
          if ((ne | 0) == 16) et(406196, 406218, 54, 406251);
          pe = ($ + 76) | 0;
          n = i[pe >> 2] | 0;
          se = ($ + 92) | 0;
          re = i[se >> 2] | 0;
          if (!n) fb(re, 6, ie, ee, te);
          else gb(e, i[($ + 72) >> 2] | 0, n, re, ie, ee, te);
          he = ($ + 84) | 0;
          n = i[he >> 2] | 0;
          k = ($ + 108) | 0;
          re = i[k >> 2] | 0;
          if (!n) fb(re, 2, ie, ee, te);
          else gb(e, i[($ + 80) >> 2] | 0, n, re, ie, ee, te);
          oe = i[($ + 88) >> 2] | 0;
          se = i[se >> 2] | 0;
          _ = i[ke >> 2] | 0;
          n = Pe(se, _) | 0;
          re = st[i[e >> 2] & 1](i[be >> 2] | 0, n) | 0;
          if (!re) $e(1);
          i[Be >> 2] = re;
          n = st[i[e >> 2] & 1](i[be >> 2] | 0, n << 1) | 0;
          if (!n) $e(1);
          i[Qe >> 2] = n;
          n = oe;
          re = 0;
          while (1) {
            if ((re | 0) == (se | 0)) break;
            fe = Pe(re, _) | 0;
            kb((n + ((re * 1040) | 0)) | 0, _, ie, ((i[Be >> 2] | 0) + fe) | 0, ((i[Qe >> 2] | 0) + (fe << 1)) | 0, ee, te);
            re = (re + 1) | 0;
          }
          se = i[($ + 96) >> 2] | 0;
          oe = i[($ + 100) >> 2] | 0;
          _ = i[we >> 2] | 0;
          n = Pe(oe, _) | 0;
          re = st[i[e >> 2] & 1](i[be >> 2] | 0, n) | 0;
          if (!re) $e(1);
          i[Ce >> 2] = re;
          n = st[i[e >> 2] & 1](i[be >> 2] | 0, n << 1) | 0;
          if (!n) $e(1);
          i[me >> 2] = n;
          n = se;
          re = 0;
          while (1) {
            if ((re | 0) == (oe | 0)) break;
            fe = Pe(re, _) | 0;
            kb((n + ((re * 2832) | 0)) | 0, _, ie, ((i[Ce >> 2] | 0) + fe) | 0, ((i[me >> 2] | 0) + (fe << 1)) | 0, ee, te);
            re = (re + 1) | 0;
          }
          se = i[($ + 104) >> 2] | 0;
          oe = i[k >> 2] | 0;
          _ = i[ye >> 2] | 0;
          n = Pe(oe, _) | 0;
          re = st[i[e >> 2] & 1](i[be >> 2] | 0, n) | 0;
          if (!re) $e(1);
          i[Ee >> 2] = re;
          n = st[i[e >> 2] & 1](i[be >> 2] | 0, n << 1) | 0;
          if (!n) $e(1);
          i[Ie >> 2] = n;
          n = se;
          re = 0;
          while (1) {
            if ((re | 0) == (oe | 0)) break;
            fe = Pe(re, _) | 0;
            kb((n + ((re * 2096) | 0)) | 0, _, ie, ((i[Ee >> 2] | 0) + fe) | 0, ((i[Ie >> 2] | 0) + (fe << 1)) | 0, ee, te);
            re = (re + 1) | 0;
          }
          fe = (e + 4) | 0;
          rt[i[fe >> 2] & 1](i[be >> 2] | 0, ie);
          ge = ($ + 80) | 0;
          ue = ($ + 72) | 0;
          re = d;
          n = h;
          le = 0;
          e: while (1) {
            if (le >>> 0 >= q >>> 0) {
              ne = 87;
              break;
            }
            e = i[(j + (le << 4)) >> 2] | 0;
            _ = i[(j + (le << 4) + 4) >> 2] | 0;
            ce = i[(j + (le << 4) + 8) >> 2] | 0;
            h = i[(j + (le << 4) + 12) >> 2] | 0;
            d = h & 65535;
            ae = h >>> 16;
            Ae = h & 65535;
            hb(we, Ae, ee, te);
            $ = _ & 16777215;
            _ = $ ^ (_ >>> 24);
            do {
              if (e >>> 0 < 6) oe = e;
              else {
                if (e >>> 0 < 130) {
                  ie = (e + -2) | 0;
                  oe = (((_e(ie | 0) | 0) ^ 31) + -1) | 0;
                  oe = ((oe << 1) + (ie >>> oe) + 2) | 0;
                  break;
                }
                if (e >>> 0 < 2114) {
                  oe = (((_e((e + -66) | 0) | 0) ^ 31) + 10) | 0;
                  break;
                }
                if (e >>> 0 < 6210) {
                  oe = 21;
                  break;
                }
                oe = e >>> 0 < 22594 ? 22 : 23;
              }
            } while (0);
            do {
              if (_ >>> 0 < 10) se = (_ + 65534) | 0;
              else {
                if (_ >>> 0 < 134) {
                  ie = (_ + -6) | 0;
                  se = (((_e(ie | 0) | 0) ^ 31) + -1) | 0;
                  se = ((se << 1) + (ie >>> se) + 4) | 0;
                  break;
                }
                if (_ >>> 0 >= 2118) {
                  se = 23;
                  break;
                }
                se = (((_e((_ + -70) | 0) | 0) ^ 31) + 12) | 0;
              }
            } while (0);
            oe = oe & 65535;
            ne = i[(17268 + (oe << 2)) >> 2] | 0;
            oe = (e - (i[(18788 + (oe << 2)) >> 2] | 0)) | 0;
            k = se & 65535;
            _ = cc((_ - (i[(17364 + (k << 2)) >> 2] | 0)) | 0, 0, ne | 0) | 0;
            se = de;
            oe = _ | oe;
            _ = (ne + (i[(17460 + (k << 2)) >> 2] | 0)) | 0;
            k = i[ee >> 2] | 0;
            ne = (te + (k >>> 3)) | 0;
            ie = a[ne >> 0] | 0;
            Te = bc(oe | 0, se | 0, _ | 0) | 0;
            if (!(((Te | 0) == 0) & ((de | 0) == 0))) {
              ne = 61;
              break;
            }
            if (_ >>> 0 >= 57) {
              ne = 63;
              break;
            }
            oe = cc(oe | 0, se | 0, (k & 7) | 0) | 0;
            k = de;
            oe = ie | oe;
            Te = ne;
            ie = Te;
            o[ie >> 0] = oe;
            o[(ie + 1) >> 0] = oe >> 8;
            o[(ie + 2) >> 0] = oe >> 16;
            o[(ie + 3) >> 0] = oe >> 24;
            Te = (Te + 4) | 0;
            o[Te >> 0] = k;
            o[(Te + 1) >> 0] = k >> 8;
            o[(Te + 2) >> 0] = k >> 16;
            o[(Te + 3) >> 0] = k >> 24;
            i[ee >> 2] = (i[ee >> 2] | 0) + _;
            t: do {
              if (!(i[pe >> 2] | 0)) {
                se = s;
                oe = e;
                while (1) {
                  if (!oe) break t;
                  hb(ke, a[(r + (se & l)) >> 0] | 0, ee, te);
                  se = (se + 1) | 0;
                  oe = (oe + -1) | 0;
                }
              } else {
                se = s;
                oe = e;
                while (1) {
                  if (!oe) break t;
                  switch (M | 0) {
                    case 0: {
                      n = re & 63;
                      break;
                    }
                    case 1: {
                      n = (re & 255) >>> 2;
                      break;
                    }
                    case 2: {
                      n = o[(406969 + (re & 255)) >> 0] | o[(406969 + ((n & 255) | 256)) >> 0];
                      break;
                    }
                    case 3: {
                      n = (((a[(407481 + (re & 255)) >> 0] | 0) << 3) + (a[(407481 + (n & 255)) >> 0] | 0)) & 255;
                      break;
                    }
                    default:
                      n = 0;
                  }
                  Te = o[(r + (se & l)) >> 0] | 0;
                  ib(ke, Te & 255, n & 255, i[ue >> 2] | 0, ee, te, 6);
                  n = re;
                  re = Te;
                  se = (se + 1) | 0;
                  oe = (oe + -1) | 0;
                }
              }
            } while (0);
            ie = (s + e + $) | 0;
            do {
              if ($) {
                n = o[(r + ((ie + -2) & l)) >> 0] | 0;
                re = o[(r + ((ie + -1) & l)) >> 0] | 0;
                if ((d & 65535) <= 127) break;
                k = ce >>> 24;
                ne = ce & 16777215;
                if (!(i[he >> 2] | 0)) hb(ye, ae, ee, te);
                else {
                  se = h & 7;
                  switch ((Ae >>> 6) | 0) {
                    case 7:
                    case 4:
                    case 2:
                    case 0: {
                      se = se >>> 0 < 3 ? se : 3;
                      break;
                    }
                    default:
                      se = 3;
                  }
                  ib(ye, ae, se, i[ge >> 2] | 0, ee, te, 2);
                }
                se = i[ee >> 2] | 0;
                oe = (te + (se >>> 3)) | 0;
                _ = a[oe >> 0] | 0;
                Te = bc(ne | 0, 0, k | 0) | 0;
                if (!(((Te | 0) == 0) & ((de | 0) == 0))) {
                  ne = 82;
                  break e;
                }
                if (ce >>> 0 >= 956301312) {
                  ne = 84;
                  break e;
                }
                Ae = cc(ne | 0, 0, (se & 7) | 0) | 0;
                ce = de;
                Ae = _ | Ae;
                Te = oe;
                ae = Te;
                o[ae >> 0] = Ae;
                o[(ae + 1) >> 0] = Ae >> 8;
                o[(ae + 2) >> 0] = Ae >> 16;
                o[(ae + 3) >> 0] = Ae >> 24;
                Te = (Te + 4) | 0;
                o[Te >> 0] = ce;
                o[(Te + 1) >> 0] = ce >> 8;
                o[(Te + 2) >> 0] = ce >> 16;
                o[(Te + 3) >> 0] = ce >> 24;
                i[ee >> 2] = (i[ee >> 2] | 0) + k;
              }
            } while (0);
            s = ie;
            le = (le + 1) | 0;
          }
          if ((ne | 0) == 61) et(406196, 406218, 54, 406251);
          else if ((ne | 0) == 63) et(406267, 406218, 55, 406251);
          else if ((ne | 0) == 82) et(406196, 406218, 54, 406251);
          else if ((ne | 0) == 84) et(406267, 406218, 55, 406251);
          else if ((ne | 0) == 87) {
            rt[i[fe >> 2] & 1](i[be >> 2] | 0, i[Ee >> 2] | 0);
            i[Ee >> 2] = 0;
            rt[i[fe >> 2] & 1](i[be >> 2] | 0, i[Ie >> 2] | 0);
            i[Ie >> 2] = 0;
            rt[i[fe >> 2] & 1](i[be >> 2] | 0, i[Ce >> 2] | 0);
            i[Ce >> 2] = 0;
            rt[i[fe >> 2] & 1](i[be >> 2] | 0, i[me >> 2] | 0);
            i[me >> 2] = 0;
            rt[i[fe >> 2] & 1](i[be >> 2] | 0, i[Be >> 2] | 0);
            i[Be >> 2] = 0;
            rt[i[fe >> 2] & 1](i[be >> 2] | 0, i[Qe >> 2] | 0);
            i[Qe >> 2] = 0;
            if (!p) {
              w = Re;
              return;
            }
            Te = ((i[ee >> 2] | 0) + 7) | 0;
            i[ee >> 2] = Te & -8;
            o[(te + (Te >>> 3)) >> 0] = 0;
            w = Re;
            return;
          }
        }
        function bb(e, r, s, n, l, d, h) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          var p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0;
          te = w;
          w = (w + 32) | 0;
          $ = (te + 8) | 0;
          q = (te + 16) | 0;
          p = te;
          ee = s & n;
          s = (h + ((i[d >> 2] | 0) >>> 3)) | 0;
          _ = a[s >> 0] | 0;
          k = s;
          o[k >> 0] = _;
          o[(k + 1) >> 0] = _ >> 8;
          o[(k + 2) >> 0] = _ >> 16;
          o[(k + 3) >> 0] = _ >> 24;
          s = (s + 4) | 0;
          o[s >> 0] = 0;
          o[(s + 1) >> 0] = 0;
          o[(s + 2) >> 0] = 0;
          o[(s + 3) >> 0] = 0;
          i[d >> 2] = (i[d >> 2] | 0) + 1;
          mb(l, $, q, p);
          s = i[p >> 2] | 0;
          p = i[(p + 4) >> 2] | 0;
          k = i[d >> 2] | 0;
          _ = (h + (k >>> 3)) | 0;
          M = a[_ >> 0] | 0;
          if (!((p >>> 0 < 0) | (((p | 0) == 0) & (s >>> 0 < 4)))) et(406196, 406218, 54, 406251);
          s = cc(s | 0, p | 0, (k & 7) | 0) | 0;
          p = de;
          s = M | s;
          j = _;
          M = j;
          o[M >> 0] = s;
          o[(M + 1) >> 0] = s >> 8;
          o[(M + 2) >> 0] = s >> 16;
          o[(M + 3) >> 0] = s >> 24;
          j = (j + 4) | 0;
          o[j >> 0] = p;
          o[(j + 1) >> 0] = p >> 8;
          o[(j + 2) >> 0] = p >> 16;
          o[(j + 3) >> 0] = p >> 24;
          j = ((i[d >> 2] | 0) + 2) | 0;
          i[d >> 2] = j;
          M = i[q >> 2] | 0;
          p = $;
          s = i[p >> 2] | 0;
          p = i[(p + 4) >> 2] | 0;
          k = (h + (j >>> 3)) | 0;
          _ = a[k >> 0] | 0;
          $ = bc(s | 0, p | 0, M | 0) | 0;
          if (!((($ | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          if (M >>> 0 >= 57) et(406267, 406218, 55, 406251);
          $ = cc(s | 0, p | 0, (j & 7) | 0) | 0;
          s = de;
          $ = _ | $;
          j = k;
          q = j;
          o[q >> 0] = $;
          o[(q + 1) >> 0] = $ >> 8;
          o[(q + 2) >> 0] = $ >> 16;
          o[(q + 3) >> 0] = $ >> 24;
          j = (j + 4) | 0;
          o[j >> 0] = s;
          o[(j + 1) >> 0] = s >> 8;
          o[(j + 2) >> 0] = s >> 16;
          o[(j + 3) >> 0] = s >> 24;
          j = ((i[d >> 2] | 0) + M) | 0;
          i[d >> 2] = j;
          s = (h + (j >>> 3)) | 0;
          q = a[s >> 0] | 0;
          j = cc(1, 0, (j & 7) | 0) | 0;
          $ = de;
          j = q | j;
          q = s;
          o[q >> 0] = j;
          o[(q + 1) >> 0] = j >> 8;
          o[(q + 2) >> 0] = j >> 16;
          o[(q + 3) >> 0] = j >> 24;
          s = (s + 4) | 0;
          o[s >> 0] = $;
          o[(s + 1) >> 0] = $ >> 8;
          o[(s + 2) >> 0] = $ >> 16;
          o[(s + 3) >> 0] = $ >> 24;
          i[d >> 2] = (i[d >> 2] | 0) + 1;
          s = ((i[d >> 2] | 0) + 7) | 0;
          i[d >> 2] = s & -8;
          o[(h + (s >>> 3)) >> 0] = 0;
          s = (n + 1) | 0;
          if (((ee + l) | 0) >>> 0 > s >>> 0) {
            s = (s - ee) | 0;
            dc((h + ((i[d >> 2] | 0) >>> 3)) | 0, (r + ee) | 0, s | 0) | 0;
            p = ((i[d >> 2] | 0) + (s << 3)) | 0;
            i[d >> 2] = p;
            l = (l - s) | 0;
            s = 0;
          } else {
            p = i[d >> 2] | 0;
            s = ee;
          }
          dc((h + (p >>> 3)) | 0, (r + s) | 0, l | 0) | 0;
          s = ((i[d >> 2] | 0) + (l << 3)) | 0;
          i[d >> 2] = s;
          if (s & 7) et(405180, 406218, 82, 405195);
          o[(h + (s >>> 3)) >> 0] = 0;
          if (!e) {
            w = te;
            return;
          }
          r = i[d >> 2] | 0;
          n = (h + (r >>> 3)) | 0;
          ee = a[n >> 0] | 0;
          r = cc(1, 0, (r & 7) | 0) | 0;
          e = de;
          r = ee | r;
          ee = n;
          o[ee >> 0] = r;
          o[(ee + 1) >> 0] = r >> 8;
          o[(ee + 2) >> 0] = r >> 16;
          o[(ee + 3) >> 0] = r >> 24;
          n = (n + 4) | 0;
          o[n >> 0] = e;
          o[(n + 1) >> 0] = e >> 8;
          o[(n + 2) >> 0] = e >> 16;
          o[(n + 3) >> 0] = e >> 24;
          n = ((i[d >> 2] | 0) + 1) | 0;
          i[d >> 2] = n;
          e = (h + (n >>> 3)) | 0;
          ee = a[e >> 0] | 0;
          n = cc(1, 0, (n & 7) | 0) | 0;
          r = de;
          n = ee | n;
          ee = e;
          o[ee >> 0] = n;
          o[(ee + 1) >> 0] = n >> 8;
          o[(ee + 2) >> 0] = n >> 16;
          o[(ee + 3) >> 0] = n >> 24;
          e = (e + 4) | 0;
          o[e >> 0] = r;
          o[(e + 1) >> 0] = r >> 8;
          o[(e + 2) >> 0] = r >> 16;
          o[(e + 3) >> 0] = r >> 24;
          e = ((i[d >> 2] | 0) + 8) | 0;
          i[d >> 2] = e & -8;
          o[(h + (e >>> 3)) >> 0] = 0;
          w = te;
          return;
        }
        function cb(e, r) {
          e = e | 0;
          r = r | 0;
          return (e >>> 0 < r >>> 0) | 0;
        }
        function db(e, r, s, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          var l = 0,
            d = 0,
            h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0;
          j = w;
          w = (w + 32) | 0;
          M = (j + 8) | 0;
          _ = (j + 16) | 0;
          d = j;
          l = (n + ((i[s >> 2] | 0) >>> 3)) | 0;
          p = a[l >> 0] | 0;
          h = cc((e & 1) | 0, 0, (i[s >> 2] & 7) | 0) | 0;
          k = de;
          h = p | h;
          p = l;
          o[p >> 0] = h;
          o[(p + 1) >> 0] = h >> 8;
          o[(p + 2) >> 0] = h >> 16;
          o[(p + 3) >> 0] = h >> 24;
          l = (l + 4) | 0;
          o[l >> 0] = k;
          o[(l + 1) >> 0] = k >> 8;
          o[(l + 2) >> 0] = k >> 16;
          o[(l + 3) >> 0] = k >> 24;
          l = ((i[s >> 2] | 0) + 1) | 0;
          i[s >> 2] = l;
          if (e) {
            k = (n + (l >>> 3)) | 0;
            h = a[k >> 0] | 0;
            p = k;
            o[p >> 0] = h;
            o[(p + 1) >> 0] = h >> 8;
            o[(p + 2) >> 0] = h >> 16;
            o[(p + 3) >> 0] = h >> 24;
            k = (k + 4) | 0;
            o[k >> 0] = 0;
            o[(k + 1) >> 0] = 0;
            o[(k + 2) >> 0] = 0;
            o[(k + 3) >> 0] = 0;
            i[s >> 2] = (i[s >> 2] | 0) + 1;
          }
          mb(r, M, _, d);
          r = d;
          l = i[r >> 2] | 0;
          r = i[(r + 4) >> 2] | 0;
          d = i[s >> 2] | 0;
          h = (n + (d >>> 3)) | 0;
          p = a[h >> 0] | 0;
          if (!((r >>> 0 < 0) | (((r | 0) == 0) & (l >>> 0 < 4)))) et(406196, 406218, 54, 406251);
          l = cc(l | 0, r | 0, (d & 7) | 0) | 0;
          r = de;
          l = p | l;
          k = h;
          p = k;
          o[p >> 0] = l;
          o[(p + 1) >> 0] = l >> 8;
          o[(p + 2) >> 0] = l >> 16;
          o[(p + 3) >> 0] = l >> 24;
          k = (k + 4) | 0;
          o[k >> 0] = r;
          o[(k + 1) >> 0] = r >> 8;
          o[(k + 2) >> 0] = r >> 16;
          o[(k + 3) >> 0] = r >> 24;
          k = ((i[s >> 2] | 0) + 2) | 0;
          i[s >> 2] = k;
          p = i[_ >> 2] | 0;
          r = M;
          l = i[r >> 2] | 0;
          r = i[(r + 4) >> 2] | 0;
          d = (n + (k >>> 3)) | 0;
          h = a[d >> 0] | 0;
          M = bc(l | 0, r | 0, p | 0) | 0;
          if (!(((M | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          if (p >>> 0 >= 57) et(406267, 406218, 55, 406251);
          k = cc(l | 0, r | 0, (k & 7) | 0) | 0;
          M = de;
          k = h | k;
          l = d;
          _ = l;
          o[_ >> 0] = k;
          o[(_ + 1) >> 0] = k >> 8;
          o[(_ + 2) >> 0] = k >> 16;
          o[(_ + 3) >> 0] = k >> 24;
          l = (l + 4) | 0;
          o[l >> 0] = M;
          o[(l + 1) >> 0] = M >> 8;
          o[(l + 2) >> 0] = M >> 16;
          o[(l + 3) >> 0] = M >> 24;
          l = ((i[s >> 2] | 0) + p) | 0;
          i[s >> 2] = l;
          if (e) {
            w = j;
            return;
          }
          n = (n + (l >>> 3)) | 0;
          M = a[n >> 0] | 0;
          e = n;
          o[e >> 0] = M;
          o[(e + 1) >> 0] = M >> 8;
          o[(e + 2) >> 0] = M >> 16;
          o[(e + 3) >> 0] = M >> 24;
          n = (n + 4) | 0;
          o[n >> 0] = 0;
          o[(n + 1) >> 0] = 0;
          o[(n + 2) >> 0] = 0;
          o[(n + 3) >> 0] = 0;
          i[s >> 2] = (i[s >> 2] | 0) + 1;
          w = j;
          return;
        }
        function eb(e, r, s, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          var d = 0,
            h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0;
          se = w;
          w = (w + 1136) | 0;
          re = (se + 104) | 0;
          te = se;
          d = i[(e + 8) >> 2] | 0;
          k = i[(e + 12) >> 2] | 0;
          $ = i[(e + 16) >> 2] | 0;
          ee = i[(e + 4) >> 2] | 0;
          ac(re | 0, 0, ((ee << 2) + 8) | 0) | 0;
          h = te;
          p = (h + 104) | 0;
          do {
            i[h >> 2] = 0;
            h = (h + 4) | 0;
          } while ((h | 0) < (p | 0));
          j = 0;
          q = 1;
          h = 0;
          while (1) {
            if ((j | 0) == ($ | 0)) break;
            M = a[(d + j) >> 0] | 0;
            if ((M | 0) == ((q + 1) | 0)) h = 1;
            else h = (M | 0) == (h | 0) ? 0 : (M + 2) | 0;
            if (j) {
              _ = (re + (h << 2)) | 0;
              i[_ >> 2] = (i[_ >> 2] | 0) + 1;
            }
            h = i[(k + (j << 2)) >> 2] | 0;
            if (h >>> 0 > 176) _ = h >>> 0 > 752 ? 20 : 14;
            else _ = h >>> 0 > 40 ? 7 : 0;
            while (1) {
              if (_ >>> 0 >= 25) break;
              p = (_ + 1) | 0;
              if (h >>> 0 < (i[(17556 + (p << 3)) >> 2] | 0) >>> 0) break;
              else _ = p;
            }
            h = (te + (_ << 2)) | 0;
            i[h >> 2] = (i[h >> 2] | 0) + 1;
            h = q;
            j = (j + 1) | 0;
            q = M;
          }
          nb((ee + -1) | 0, s, n);
          if (ee >>> 0 <= 1) {
            w = se;
            return;
          }
          $ = (e + 20) | 0;
          kb(re, (ee + 2) | 0, r, (e + 28) | 0, (e + 286) | 0, s, n);
          kb(te, 26, r, (e + 802) | 0, (e + 828) | 0, s, n);
          h = i[k >> 2] | 0;
          re = a[d >> 0] | 0;
          i[(e + 24) >> 2] = i[$ >> 2];
          i[$ >> 2] = re;
          if (h >>> 0 > 176) p = h >>> 0 > 752 ? 20 : 14;
          else p = h >>> 0 > 40 ? 7 : 0;
          while (1) {
            if (p >>> 0 >= 25) break;
            d = (p + 1) | 0;
            if (h >>> 0 < (i[(17556 + (d << 3)) >> 2] | 0) >>> 0) break;
            else p = d;
          }
          j = i[(17556 + (p << 3) + 4) >> 2] | 0;
          M = (h - (i[(17556 + (p << 3)) >> 2] | 0)) | 0;
          _ = o[(e + 802 + p) >> 0] | 0;
          d = l[(e + 828 + (p << 1)) >> 1] | 0;
          h = i[s >> 2] | 0;
          p = (n + (h >>> 3)) | 0;
          k = a[p >> 0] | 0;
          e = bc(d | 0, 0, (_ & 255) | 0) | 0;
          if (!(((e | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          if ((_ & 255) >= 57) et(406267, 406218, 55, 406251);
          e = cc(d | 0, 0, (h & 7) | 0) | 0;
          d = de;
          e = k | e;
          h = p;
          o[h >> 0] = e;
          o[(h + 1) >> 0] = e >> 8;
          o[(h + 2) >> 0] = e >> 16;
          o[(h + 3) >> 0] = e >> 24;
          p = (p + 4) | 0;
          o[p >> 0] = d;
          o[(p + 1) >> 0] = d >> 8;
          o[(p + 2) >> 0] = d >> 16;
          o[(p + 3) >> 0] = d >> 24;
          p = ((i[s >> 2] | 0) + (_ & 255)) | 0;
          i[s >> 2] = p;
          d = (n + (p >>> 3)) | 0;
          h = a[d >> 0] | 0;
          n = bc(M | 0, 0, j | 0) | 0;
          if (!(((n | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          r = cc(M | 0, 0, (p & 7) | 0) | 0;
          e = de;
          r = h | r;
          n = d;
          re = n;
          o[re >> 0] = r;
          o[(re + 1) >> 0] = r >> 8;
          o[(re + 2) >> 0] = r >> 16;
          o[(re + 3) >> 0] = r >> 24;
          n = (n + 4) | 0;
          o[n >> 0] = e;
          o[(n + 1) >> 0] = e >> 8;
          o[(n + 2) >> 0] = e >> 16;
          o[(n + 3) >> 0] = e >> 24;
          i[s >> 2] = (i[s >> 2] | 0) + j;
          w = se;
          return;
        }
        function fb(e, r, s, n, d) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          d = d | 0;
          var h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0;
          ne = w;
          w = (w + 1904) | 0;
          j = ne;
          oe = (ne + 1632) | 0;
          se = (ne + 1088) | 0;
          nb((e + -1) | 0, n, d);
          if (e >>> 0 <= 1) {
            w = ne;
            return;
          }
          te = (r + -1) | 0;
          re = ((1 << te) + -1) | 0;
          M = (te + e) | 0;
          ac(j | 0, 0, (M << 2) | 0) | 0;
          _ = i[n >> 2] | 0;
          h = (d + (_ >>> 3)) | 0;
          k = a[h >> 0] | 0;
          _ = cc(1, 0, (_ & 7) | 0) | 0;
          p = de;
          _ = k | _;
          k = h;
          o[k >> 0] = _;
          o[(k + 1) >> 0] = _ >> 8;
          o[(k + 2) >> 0] = _ >> 16;
          o[(k + 3) >> 0] = _ >> 24;
          h = (h + 4) | 0;
          o[h >> 0] = p;
          o[(h + 1) >> 0] = p >> 8;
          o[(h + 2) >> 0] = p >> 16;
          o[(h + 3) >> 0] = p >> 24;
          h = ((i[n >> 2] | 0) + 1) | 0;
          i[n >> 2] = h;
          p = (r + -2) | 0;
          k = (d + (h >>> 3)) | 0;
          _ = a[k >> 0] | 0;
          if (!((((p & -16) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
          q = cc(p | 0, 0, (h & 7) | 0) | 0;
          ee = de;
          q = _ | q;
          h = k;
          $ = h;
          o[$ >> 0] = q;
          o[($ + 1) >> 0] = q >> 8;
          o[($ + 2) >> 0] = q >> 16;
          o[($ + 3) >> 0] = q >> 24;
          h = (h + 4) | 0;
          o[h >> 0] = ee;
          o[(h + 1) >> 0] = ee >> 8;
          o[(h + 2) >> 0] = ee >> 16;
          o[(h + 3) >> 0] = ee >> 24;
          i[n >> 2] = (i[n >> 2] | 0) + 4;
          i[(j + (te << 2)) >> 2] = e;
          i[j >> 2] = 1;
          h = r;
          while (1) {
            if (h >>> 0 >= M >>> 0) break;
            i[(j + (h << 2)) >> 2] = 1;
            h = (h + 1) | 0;
          }
          kb(j, M, s, oe, se, n, d);
          j = (oe + te) | 0;
          s = (se + (te << 1)) | 0;
          q = bc(re | 0, 0, te | 0) | 0;
          q = ((q | 0) == 0) & ((de | 0) == 0);
          $ = te >>> 0 < 57;
          ee = 0;
          while (1) {
            if (ee >>> 0 >= e >>> 0) {
              h = 22;
              break;
            }
            p = (ee | 0) == 0 ? 0 : (ee + r + -1) | 0;
            h = o[(oe + p) >> 0] | 0;
            p = l[(se + (p << 1)) >> 1] | 0;
            k = i[n >> 2] | 0;
            _ = (d + (k >>> 3)) | 0;
            M = a[_ >> 0] | 0;
            ie = bc(p | 0, 0, (h & 255) | 0) | 0;
            if (!(((ie | 0) == 0) & ((de | 0) == 0))) {
              h = 10;
              break;
            }
            if ((h & 255) >= 57) {
              h = 12;
              break;
            }
            p = cc(p | 0, 0, (k & 7) | 0) | 0;
            k = de;
            M = M | p;
            p = _;
            _ = p;
            o[_ >> 0] = M;
            o[(_ + 1) >> 0] = M >> 8;
            o[(_ + 2) >> 0] = M >> 16;
            o[(_ + 3) >> 0] = M >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = k;
            o[(p + 1) >> 0] = k >> 8;
            o[(p + 2) >> 0] = k >> 16;
            o[(p + 3) >> 0] = k >> 24;
            h = ((i[n >> 2] | 0) + (h & 255)) | 0;
            i[n >> 2] = h;
            p = o[j >> 0] | 0;
            k = l[s >> 1] | 0;
            _ = (d + (h >>> 3)) | 0;
            M = a[_ >> 0] | 0;
            ie = bc(k | 0, 0, (p & 255) | 0) | 0;
            if (!(((ie | 0) == 0) & ((de | 0) == 0))) {
              h = 14;
              break;
            }
            if ((p & 255) >= 57) {
              h = 16;
              break;
            }
            h = cc(k | 0, 0, (h & 7) | 0) | 0;
            k = de;
            M = M | h;
            h = _;
            ie = h;
            o[ie >> 0] = M;
            o[(ie + 1) >> 0] = M >> 8;
            o[(ie + 2) >> 0] = M >> 16;
            o[(ie + 3) >> 0] = M >> 24;
            h = (h + 4) | 0;
            o[h >> 0] = k;
            o[(h + 1) >> 0] = k >> 8;
            o[(h + 2) >> 0] = k >> 16;
            o[(h + 3) >> 0] = k >> 24;
            h = ((i[n >> 2] | 0) + (p & 255)) | 0;
            i[n >> 2] = h;
            p = (d + (h >>> 3)) | 0;
            k = a[p >> 0] | 0;
            if (!q) {
              h = 18;
              break;
            }
            if (!$) {
              h = 20;
              break;
            }
            ie = cc(re | 0, 0, (h & 7) | 0) | 0;
            M = de;
            k = k | ie;
            ie = p;
            _ = ie;
            o[_ >> 0] = k;
            o[(_ + 1) >> 0] = k >> 8;
            o[(_ + 2) >> 0] = k >> 16;
            o[(_ + 3) >> 0] = k >> 24;
            ie = (ie + 4) | 0;
            o[ie >> 0] = M;
            o[(ie + 1) >> 0] = M >> 8;
            o[(ie + 2) >> 0] = M >> 16;
            o[(ie + 3) >> 0] = M >> 24;
            i[n >> 2] = (i[n >> 2] | 0) + te;
            ee = (ee + 1) | 0;
          }
          if ((h | 0) == 10) et(406196, 406218, 54, 406251);
          else if ((h | 0) == 12) et(406267, 406218, 55, 406251);
          else if ((h | 0) == 14) et(406196, 406218, 54, 406251);
          else if ((h | 0) == 16) et(406267, 406218, 55, 406251);
          else if ((h | 0) == 18) et(406196, 406218, 54, 406251);
          else if ((h | 0) == 20) et(406267, 406218, 55, 406251);
          else if ((h | 0) == 22) {
            oe = i[n >> 2] | 0;
            ie = (d + (oe >>> 3)) | 0;
            e = a[ie >> 0] | 0;
            oe = cc(1, 0, (oe & 7) | 0) | 0;
            d = de;
            oe = e | oe;
            e = ie;
            o[e >> 0] = oe;
            o[(e + 1) >> 0] = oe >> 8;
            o[(e + 2) >> 0] = oe >> 16;
            o[(e + 3) >> 0] = oe >> 24;
            ie = (ie + 4) | 0;
            o[ie >> 0] = d;
            o[(ie + 1) >> 0] = d >> 8;
            o[(ie + 2) >> 0] = d >> 16;
            o[(ie + 3) >> 0] = d >> 24;
            i[n >> 2] = (i[n >> 2] | 0) + 1;
            w = ne;
            return;
          }
        }
        function gb(e, r, s, n, d, h, p) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          var k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0;
          ce = w;
          w = (w + 2160) | 0;
          $ = (ce + 1088) | 0;
          se = ce;
          ae = (ce + 1888) | 0;
          Ae = (ce + 1344) | 0;
          nb((n + -1) | 0, h, p);
          if ((n | 0) == 1) {
            w = ce;
            return;
          }
          ne = (e + 8) | 0;
          ie = st[i[e >> 2] & 1](i[ne >> 2] | 0, s << 2) | 0;
          if (!ie) $e(1);
          e: do {
            if (!s) oe = ie;
            else {
              k = i[r >> 2] | 0;
              _ = 1;
              while (1) {
                if ((_ | 0) == (s | 0)) break;
                re = i[(r + (_ << 2)) >> 2] | 0;
                k = re >>> 0 > k >>> 0 ? re : k;
                _ = (_ + 1) | 0;
              }
              if (k >>> 0 < 256) M = 0;
              else et(405316, 404333, 616, 405333);
              while (1) {
                if (M >>> 0 > k >>> 0) break;
                o[($ + M) >> 0] = M;
                M = (M + 1) | 0;
              }
              j = (k + 1) | 0;
              q = 0;
              t: while (1) {
                if (q >>> 0 >= s >>> 0) {
                  oe = ie;
                  break e;
                }
                k = i[(r + (q << 2)) >> 2] & 255;
                M = 0;
                while (1) {
                  if (M >>> 0 >= j >>> 0) break t;
                  if ((o[($ + M) >> 0] | 0) == (k << 24) >> 24) break;
                  M = (M + 1) | 0;
                }
                i[(ie + (q << 2)) >> 2] = M;
                _ = o[($ + M) >> 0] | 0;
                k = M;
                while (1) {
                  if (!k) break;
                  re = (k + -1) | 0;
                  o[($ + k) >> 0] = o[($ + re) >> 0] | 0;
                  k = re;
                }
                o[$ >> 0] = _;
                q = (q + 1) | 0;
              }
              et(405354, 404333, 624, 405333);
            }
          } while (0);
          i[$ >> 2] = 0;
          k = 0;
          M = 0;
          while (1) {
            if (k >>> 0 >= s >>> 0) break;
            while (1) {
              if (k >>> 0 >= s >>> 0) {
                _ = 0;
                break;
              }
              if (!(i[(oe + (k << 2)) >> 2] | 0)) {
                _ = 0;
                break;
              }
              re = (k + 1) | 0;
              i[$ >> 2] = re;
              k = re;
            }
            while (1) {
              if (k >>> 0 >= s >>> 0) break;
              if (i[(oe + (k << 2)) >> 2] | 0) break;
              re = (k + 1) | 0;
              i[$ >> 2] = re;
              k = re;
              _ = (_ + 1) | 0;
            }
            M = _ >>> 0 > M >>> 0 ? _ : M;
          }
          if (!M) re = 0;
          else {
            re = (_e(M | 0) | 0) ^ 31;
            re = re >>> 0 < 6 ? re : 6;
          }
          i[$ >> 2] = 0;
          j = 2 << re;
          q = (re + ((512 << re) + -512)) | 0;
          r = (j + -1) | 0;
          M = 0;
          ee = 0;
          while (1) {
            if (M >>> 0 >= s >>> 0) break;
            if (ee >>> 0 > M >>> 0) {
              te = 38;
              break;
            }
            k = i[(oe + (M << 2)) >> 2] | 0;
            e: do {
              if (!k) {
                k = M;
                _ = 1;
                while (1) {
                  k = (k + 1) | 0;
                  if (k >>> 0 >= s >>> 0) break;
                  if (i[(oe + (k << 2)) >> 2] | 0) break;
                  _ = (_ + 1) | 0;
                }
                i[$ >> 2] = M + _;
                k = ee;
                while (1) {
                  if (!_) break e;
                  if (_ >>> 0 < j >>> 0) break;
                  i[(oe + (k << 2)) >> 2] = q;
                  k = (k + 1) | 0;
                  _ = (_ - r) | 0;
                }
                ee = (_e(_ | 0) | 0) ^ 31;
                i[(oe + (k << 2)) >> 2] = ee | ((_ - (1 << ee)) << 9);
                k = (k + 1) | 0;
              } else {
                i[(oe + (ee << 2)) >> 2] = k + re;
                i[$ >> 2] = (i[$ >> 2] | 0) + 1;
                k = (ee + 1) | 0;
              }
            } while (0);
            M = i[$ >> 2] | 0;
            ee = k;
          }
          if ((te | 0) == 38) et(405282, 404333, 656, 405297);
          ac(se | 0, 0, 1088) | 0;
          k = 0;
          while (1) {
            if ((k | 0) == (ee | 0)) break;
            te = (se + ((i[(oe + (k << 2)) >> 2] & 511) << 2)) | 0;
            i[te >> 2] = (i[te >> 2] | 0) + 1;
            k = (k + 1) | 0;
          }
          te = (re | 0) != 0;
          r = i[h >> 2] | 0;
          k = (p + (r >>> 3)) | 0;
          s = a[k >> 0] | 0;
          r = cc((te & 1) | 0, 0, (r & 7) | 0) | 0;
          $ = de;
          r = s | r;
          s = k;
          o[s >> 0] = r;
          o[(s + 1) >> 0] = r >> 8;
          o[(s + 2) >> 0] = r >> 16;
          o[(s + 3) >> 0] = r >> 24;
          k = (k + 4) | 0;
          o[k >> 0] = $;
          o[(k + 1) >> 0] = $ >> 8;
          o[(k + 2) >> 0] = $ >> 16;
          o[(k + 3) >> 0] = $ >> 24;
          k = ((i[h >> 2] | 0) + 1) | 0;
          i[h >> 2] = k;
          do {
            if (te) {
              _ = (re + -1) | 0;
              M = (p + (k >>> 3)) | 0;
              j = a[M >> 0] | 0;
              if ((((_ & -16) | 0) == 0) & (0 == 0)) {
                r = cc(_ | 0, 0, (k & 7) | 0) | 0;
                $ = de;
                r = j | r;
                te = M;
                s = te;
                o[s >> 0] = r;
                o[(s + 1) >> 0] = r >> 8;
                o[(s + 2) >> 0] = r >> 16;
                o[(s + 3) >> 0] = r >> 24;
                te = (te + 4) | 0;
                o[te >> 0] = $;
                o[(te + 1) >> 0] = $ >> 8;
                o[(te + 2) >> 0] = $ >> 16;
                o[(te + 3) >> 0] = $ >> 24;
                i[h >> 2] = (i[h >> 2] | 0) + 4;
                break;
              } else et(406196, 406218, 54, 406251);
            }
          } while (0);
          kb(se, (re + n) | 0, d, ae, Ae, h, p);
          $ = 0;
          while (1) {
            if ($ >>> 0 >= ee >>> 0) {
              te = 70;
              break;
            }
            s = i[(oe + ($ << 2)) >> 2] | 0;
            r = s & 511;
            s = s >>> 9;
            k = o[(ae + r) >> 0] | 0;
            _ = l[(Ae + (r << 1)) >> 1] | 0;
            M = i[h >> 2] | 0;
            j = (p + (M >>> 3)) | 0;
            q = a[j >> 0] | 0;
            d = bc(_ | 0, 0, (k & 255) | 0) | 0;
            if (!(((d | 0) == 0) & ((de | 0) == 0))) {
              te = 60;
              break;
            }
            if ((k & 255) >= 57) {
              te = 62;
              break;
            }
            te = cc(_ | 0, 0, (M & 7) | 0) | 0;
            n = de;
            te = q | te;
            d = j;
            se = d;
            o[se >> 0] = te;
            o[(se + 1) >> 0] = te >> 8;
            o[(se + 2) >> 0] = te >> 16;
            o[(se + 3) >> 0] = te >> 24;
            d = (d + 4) | 0;
            o[d >> 0] = n;
            o[(d + 1) >> 0] = n >> 8;
            o[(d + 2) >> 0] = n >> 16;
            o[(d + 3) >> 0] = n >> 24;
            k = ((i[h >> 2] | 0) + (k & 255)) | 0;
            i[h >> 2] = k;
            if (!(((r | 0) == 0) | (r >>> 0 > re >>> 0))) {
              _ = (p + (k >>> 3)) | 0;
              M = a[_ >> 0] | 0;
              d = bc(s | 0, 0, r | 0) | 0;
              if (!(((d | 0) == 0) & ((de | 0) == 0))) {
                te = 65;
                break;
              }
              if (r >>> 0 >= 57) {
                te = 67;
                break;
              }
              te = cc(s | 0, 0, (k & 7) | 0) | 0;
              n = de;
              te = M | te;
              d = _;
              se = d;
              o[se >> 0] = te;
              o[(se + 1) >> 0] = te >> 8;
              o[(se + 2) >> 0] = te >> 16;
              o[(se + 3) >> 0] = te >> 24;
              d = (d + 4) | 0;
              o[d >> 0] = n;
              o[(d + 1) >> 0] = n >> 8;
              o[(d + 2) >> 0] = n >> 16;
              o[(d + 3) >> 0] = n >> 24;
              i[h >> 2] = (i[h >> 2] | 0) + r;
            }
            $ = ($ + 1) | 0;
          }
          if ((te | 0) == 60) et(406196, 406218, 54, 406251);
          else if ((te | 0) == 62) et(406267, 406218, 55, 406251);
          else if ((te | 0) == 65) et(406196, 406218, 54, 406251);
          else if ((te | 0) == 67) et(406267, 406218, 55, 406251);
          else if ((te | 0) == 70) {
            oe = i[h >> 2] | 0;
            p = (p + (oe >>> 3)) | 0;
            Ae = a[p >> 0] | 0;
            oe = cc(1, 0, (oe & 7) | 0) | 0;
            ae = de;
            oe = Ae | oe;
            Ae = p;
            o[Ae >> 0] = oe;
            o[(Ae + 1) >> 0] = oe >> 8;
            o[(Ae + 2) >> 0] = oe >> 16;
            o[(Ae + 3) >> 0] = oe >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = ae;
            o[(p + 1) >> 0] = ae >> 8;
            o[(p + 2) >> 0] = ae >> 16;
            o[(p + 3) >> 0] = ae >> 24;
            i[h >> 2] = (i[h >> 2] | 0) + 1;
            rt[i[(e + 4) >> 2] & 1](i[ne >> 2] | 0, ie);
            w = ce;
            return;
          }
        }
        function hb(e, r, s, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          var d = 0,
            h = 0,
            p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0;
          ee = (e + 884) | 0;
          d = i[ee >> 2] | 0;
          do {
            if (!d) {
              j = (e + 880) | 0;
              h = ((i[j >> 2] | 0) + 1) | 0;
              i[j >> 2] = h;
              j = i[((i[(e + 12) >> 2] | 0) + (h << 2)) >> 2] | 0;
              h = o[((i[(e + 8) >> 2] | 0) + h) >> 0] | 0;
              i[ee >> 2] = j;
              h = h & 255;
              q = (e + 888) | 0;
              i[q >> 2] = Pe(h, i[e >> 2] | 0) | 0;
              p = (e + 20) | 0;
              w = i[p >> 2] | 0;
              d = (e + 24) | 0;
              if ((h | 0) == ((w + 1) | 0)) k = 1;
              else k = (h | 0) == (i[d >> 2] | 0) ? 0 : (h + 2) | 0;
              i[d >> 2] = w;
              i[p >> 2] = h;
              _ = o[(e + 28 + k) >> 0] | 0;
              d = l[(e + 286 + (k << 1)) >> 1] | 0;
              h = i[s >> 2] | 0;
              p = (n + (h >>> 3)) | 0;
              w = a[p >> 0] | 0;
              M = bc(d | 0, 0, (_ & 255) | 0) | 0;
              if (!(((M | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if ((_ & 255) >= 57) et(406267, 406218, 55, 406251);
              h = cc(d | 0, 0, (h & 7) | 0) | 0;
              k = de;
              h = w | h;
              M = p;
              w = M;
              o[w >> 0] = h;
              o[(w + 1) >> 0] = h >> 8;
              o[(w + 2) >> 0] = h >> 16;
              o[(w + 3) >> 0] = h >> 24;
              M = (M + 4) | 0;
              o[M >> 0] = k;
              o[(M + 1) >> 0] = k >> 8;
              o[(M + 2) >> 0] = k >> 16;
              o[(M + 3) >> 0] = k >> 24;
              i[s >> 2] = (i[s >> 2] | 0) + (_ & 255);
              if (j >>> 0 > 176) h = j >>> 0 > 752 ? 20 : 14;
              else h = j >>> 0 > 40 ? 7 : 0;
              while (1) {
                if (h >>> 0 >= 25) break;
                d = (h + 1) | 0;
                if (j >>> 0 < (i[(17556 + (d << 3)) >> 2] | 0) >>> 0) break;
                else h = d;
              }
              M = i[(17556 + (h << 3) + 4) >> 2] | 0;
              _ = (j - (i[(17556 + (h << 3)) >> 2] | 0)) | 0;
              k = o[(e + 802 + h) >> 0] | 0;
              d = l[(e + 828 + (h << 1)) >> 1] | 0;
              h = i[s >> 2] | 0;
              p = (n + (h >>> 3)) | 0;
              w = a[p >> 0] | 0;
              j = bc(d | 0, 0, (k & 255) | 0) | 0;
              if (!(((j | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if ((k & 255) >= 57) et(406267, 406218, 55, 406251);
              j = cc(d | 0, 0, (h & 7) | 0) | 0;
              d = de;
              j = w | j;
              h = p;
              p = h;
              o[p >> 0] = j;
              o[(p + 1) >> 0] = j >> 8;
              o[(p + 2) >> 0] = j >> 16;
              o[(p + 3) >> 0] = j >> 24;
              h = (h + 4) | 0;
              o[h >> 0] = d;
              o[(h + 1) >> 0] = d >> 8;
              o[(h + 2) >> 0] = d >> 16;
              o[(h + 3) >> 0] = d >> 24;
              h = ((i[s >> 2] | 0) + (k & 255)) | 0;
              i[s >> 2] = h;
              p = (n + (h >>> 3)) | 0;
              d = a[p >> 0] | 0;
              j = bc(_ | 0, 0, M | 0) | 0;
              if (((j | 0) == 0) & ((de | 0) == 0)) {
                _ = cc(_ | 0, 0, (h & 7) | 0) | 0;
                te = de;
                _ = d | _;
                $ = p;
                j = $;
                o[j >> 0] = _;
                o[(j + 1) >> 0] = _ >> 8;
                o[(j + 2) >> 0] = _ >> 16;
                o[(j + 3) >> 0] = _ >> 24;
                $ = ($ + 4) | 0;
                o[$ >> 0] = te;
                o[($ + 1) >> 0] = te >> 8;
                o[($ + 2) >> 0] = te >> 16;
                o[($ + 3) >> 0] = te >> 24;
                i[s >> 2] = (i[s >> 2] | 0) + M;
                $ = q;
                te = i[ee >> 2] | 0;
                break;
              } else et(406196, 406218, 54, 406251);
            } else {
              $ = (e + 888) | 0;
              te = d;
            }
          } while (0);
          i[ee >> 2] = te + -1;
          p = ((i[$ >> 2] | 0) + r) | 0;
          k = o[((i[(e + 892) >> 2] | 0) + p) >> 0] | 0;
          p = l[((i[(e + 896) >> 2] | 0) + (p << 1)) >> 1] | 0;
          w = i[s >> 2] | 0;
          d = (n + (w >>> 3)) | 0;
          h = a[d >> 0] | 0;
          n = bc(p | 0, 0, (k & 255) | 0) | 0;
          if (!(((n | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          if ((k & 255) < 57) {
            te = cc(p | 0, 0, (w & 7) | 0) | 0;
            e = de;
            te = h | te;
            n = d;
            r = n;
            o[r >> 0] = te;
            o[(r + 1) >> 0] = te >> 8;
            o[(r + 2) >> 0] = te >> 16;
            o[(r + 3) >> 0] = te >> 24;
            n = (n + 4) | 0;
            o[n >> 0] = e;
            o[(n + 1) >> 0] = e >> 8;
            o[(n + 2) >> 0] = e >> 16;
            o[(n + 3) >> 0] = e >> 24;
            i[s >> 2] = (i[s >> 2] | 0) + (k & 255);
            return;
          } else et(406267, 406218, 55, 406251);
        }
        function ib(e, r, s, n, d, h, p) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          var w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0;
          re = (e + 884) | 0;
          w = i[re >> 2] | 0;
          do {
            if (!w) {
              $ = (e + 880) | 0;
              _ = ((i[$ >> 2] | 0) + 1) | 0;
              i[$ >> 2] = _;
              $ = i[((i[(e + 12) >> 2] | 0) + (_ << 2)) >> 2] | 0;
              _ = o[((i[(e + 8) >> 2] | 0) + _) >> 0] | 0;
              i[re >> 2] = $;
              _ = _ & 255;
              ee = (e + 888) | 0;
              i[ee >> 2] = _ << p;
              p = (e + 20) | 0;
              k = i[p >> 2] | 0;
              w = (e + 24) | 0;
              if ((_ | 0) == ((k + 1) | 0)) M = 1;
              else M = (_ | 0) == (i[w >> 2] | 0) ? 0 : (_ + 2) | 0;
              i[w >> 2] = k;
              i[p >> 2] = _;
              j = o[(e + 28 + M) >> 0] | 0;
              w = l[(e + 286 + (M << 1)) >> 1] | 0;
              p = i[d >> 2] | 0;
              k = (h + (p >>> 3)) | 0;
              _ = a[k >> 0] | 0;
              q = bc(w | 0, 0, (j & 255) | 0) | 0;
              if (!(((q | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if ((j & 255) >= 57) et(406267, 406218, 55, 406251);
              p = cc(w | 0, 0, (p & 7) | 0) | 0;
              M = de;
              p = _ | p;
              q = k;
              _ = q;
              o[_ >> 0] = p;
              o[(_ + 1) >> 0] = p >> 8;
              o[(_ + 2) >> 0] = p >> 16;
              o[(_ + 3) >> 0] = p >> 24;
              q = (q + 4) | 0;
              o[q >> 0] = M;
              o[(q + 1) >> 0] = M >> 8;
              o[(q + 2) >> 0] = M >> 16;
              o[(q + 3) >> 0] = M >> 24;
              i[d >> 2] = (i[d >> 2] | 0) + (j & 255);
              if ($ >>> 0 > 176) p = $ >>> 0 > 752 ? 20 : 14;
              else p = $ >>> 0 > 40 ? 7 : 0;
              while (1) {
                if (p >>> 0 >= 25) break;
                w = (p + 1) | 0;
                if ($ >>> 0 < (i[(17556 + (w << 3)) >> 2] | 0) >>> 0) break;
                else p = w;
              }
              q = i[(17556 + (p << 3) + 4) >> 2] | 0;
              j = ($ - (i[(17556 + (p << 3)) >> 2] | 0)) | 0;
              M = o[(e + 802 + p) >> 0] | 0;
              w = l[(e + 828 + (p << 1)) >> 1] | 0;
              p = i[d >> 2] | 0;
              k = (h + (p >>> 3)) | 0;
              _ = a[k >> 0] | 0;
              $ = bc(w | 0, 0, (M & 255) | 0) | 0;
              if (!((($ | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if ((M & 255) >= 57) et(406267, 406218, 55, 406251);
              $ = cc(w | 0, 0, (p & 7) | 0) | 0;
              p = de;
              $ = _ | $;
              w = k;
              k = w;
              o[k >> 0] = $;
              o[(k + 1) >> 0] = $ >> 8;
              o[(k + 2) >> 0] = $ >> 16;
              o[(k + 3) >> 0] = $ >> 24;
              w = (w + 4) | 0;
              o[w >> 0] = p;
              o[(w + 1) >> 0] = p >> 8;
              o[(w + 2) >> 0] = p >> 16;
              o[(w + 3) >> 0] = p >> 24;
              w = ((i[d >> 2] | 0) + (M & 255)) | 0;
              i[d >> 2] = w;
              p = (h + (w >>> 3)) | 0;
              k = a[p >> 0] | 0;
              $ = bc(j | 0, 0, q | 0) | 0;
              if ((($ | 0) == 0) & ((de | 0) == 0)) {
                j = cc(j | 0, 0, (w & 7) | 0) | 0;
                se = de;
                j = k | j;
                te = p;
                $ = te;
                o[$ >> 0] = j;
                o[($ + 1) >> 0] = j >> 8;
                o[($ + 2) >> 0] = j >> 16;
                o[($ + 3) >> 0] = j >> 24;
                te = (te + 4) | 0;
                o[te >> 0] = se;
                o[(te + 1) >> 0] = se >> 8;
                o[(te + 2) >> 0] = se >> 16;
                o[(te + 3) >> 0] = se >> 24;
                i[d >> 2] = (i[d >> 2] | 0) + q;
                te = ee;
                se = i[re >> 2] | 0;
                break;
              } else et(406196, 406218, 54, 406251);
            } else {
              te = (e + 888) | 0;
              se = w;
            }
          } while (0);
          i[re >> 2] = se + -1;
          k = ((Pe(i[(n + (((i[te >> 2] | 0) + s) << 2)) >> 2] | 0, i[e >> 2] | 0) | 0) + r) | 0;
          M = o[((i[(e + 892) >> 2] | 0) + k) >> 0] | 0;
          k = l[((i[(e + 896) >> 2] | 0) + (k << 1)) >> 1] | 0;
          _ = i[d >> 2] | 0;
          w = (h + (_ >>> 3)) | 0;
          p = a[w >> 0] | 0;
          h = bc(k | 0, 0, (M & 255) | 0) | 0;
          if (!(((h | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          if ((M & 255) < 57) {
            n = cc(k | 0, 0, (_ & 7) | 0) | 0;
            e = de;
            n = p | n;
            h = w;
            r = h;
            o[r >> 0] = n;
            o[(r + 1) >> 0] = n >> 8;
            o[(r + 2) >> 0] = n >> 16;
            o[(r + 3) >> 0] = n >> 24;
            h = (h + 4) | 0;
            o[h >> 0] = e;
            o[(h + 1) >> 0] = e >> 8;
            o[(h + 2) >> 0] = e >> 16;
            o[(h + 3) >> 0] = e >> 24;
            i[d >> 2] = (i[d >> 2] | 0) + (M & 255);
            return;
          } else et(406267, 406218, 55, 406251);
        }
        function jb(e, r, s, o, n, l, d, h) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          var p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0;
          $ = (d + 2816) | 0;
          ee = (l + 1024) | 0;
          te = (h + 2080) | 0;
          q = 0;
          while (1) {
            if ((q | 0) == (n | 0)) break;
            M = i[(o + (q << 4)) >> 2] | 0;
            p = i[(o + (q << 4) + 4) >> 2] | 0;
            w = i[(o + (q << 4) + 12) >> 2] | 0;
            j = w & 65535;
            _ = w >>> 16;
            w = (d + ((w & 65535) << 2)) | 0;
            i[w >> 2] = (i[w >> 2] | 0) + 1;
            i[$ >> 2] = (i[$ >> 2] | 0) + 1;
            w = r;
            k = M;
            while (1) {
              if (!k) break;
              re = (l + ((a[(e + (w & s)) >> 0] | 0) << 2)) | 0;
              i[re >> 2] = (i[re >> 2] | 0) + 1;
              i[ee >> 2] = (i[ee >> 2] | 0) + 1;
              w = (w + 1) | 0;
              k = (k + -1) | 0;
            }
            p = p & 16777215;
            if (((p | 0) != 0) & ((j & 65535) > 127)) {
              re = (h + (_ << 2)) | 0;
              i[re >> 2] = (i[re >> 2] | 0) + 1;
              i[te >> 2] = (i[te >> 2] | 0) + 1;
            }
            r = (r + M + p) | 0;
            q = (q + 1) | 0;
          }
          return;
        }
        function kb(e, r, s, l, d, h, p) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          var k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0;
          ee = w;
          w = (w + 16) | 0;
          q = ee;
          i[q >> 2] = 0;
          i[(q + 4) >> 2] = 0;
          i[(q + 8) >> 2] = 0;
          i[(q + 12) >> 2] = 0;
          j = 0;
          _ = 0;
          while (1) {
            if (_ >>> 0 >= r >>> 0) break;
            if (!(i[(e + (_ << 2)) >> 2] | 0)) k = j;
            else {
              if (j >>> 0 >= 4) {
                if (j >>> 0 > 4) break;
              } else i[(q + (j << 2)) >> 2] = _;
              k = (j + 1) | 0;
            }
            j = k;
            _ = (_ + 1) | 0;
          }
          $ = 0;
          k = (r + -1) | 0;
          while (1) {
            if (!k) break;
            $ = ($ + 1) | 0;
            k = k >>> 1;
          }
          if (j >>> 0 < 2) {
            _ = i[h >> 2] | 0;
            e = (p + (_ >>> 3)) | 0;
            k = a[e >> 0] | 0;
            _ = cc(1, 0, (_ & 7) | 0) | 0;
            r = de;
            _ = k | _;
            k = e;
            o[k >> 0] = _;
            o[(k + 1) >> 0] = _ >> 8;
            o[(k + 2) >> 0] = _ >> 16;
            o[(k + 3) >> 0] = _ >> 24;
            e = (e + 4) | 0;
            o[e >> 0] = r;
            o[(e + 1) >> 0] = r >> 8;
            o[(e + 2) >> 0] = r >> 16;
            o[(e + 3) >> 0] = r >> 24;
            e = ((i[h >> 2] | 0) + 4) | 0;
            i[h >> 2] = e;
            r = i[q >> 2] | 0;
            k = (p + (e >>> 3)) | 0;
            _ = a[k >> 0] | 0;
            p = bc(r | 0, 0, $ | 0) | 0;
            if (!(((p | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
            if ($ >>> 0 >= 57) et(406267, 406218, 55, 406251);
            s = cc(r | 0, 0, (e & 7) | 0) | 0;
            j = de;
            s = _ | s;
            p = k;
            M = p;
            o[M >> 0] = s;
            o[(M + 1) >> 0] = s >> 8;
            o[(M + 2) >> 0] = s >> 16;
            o[(M + 3) >> 0] = s >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = j;
            o[(p + 1) >> 0] = j >> 8;
            o[(p + 2) >> 0] = j >> 16;
            o[(p + 3) >> 0] = j >> 24;
            i[h >> 2] = (i[h >> 2] | 0) + $;
            o[(l + (i[q >> 2] | 0)) >> 0] = 0;
            n[(d + (i[q >> 2] << 1)) >> 1] = 0;
            w = ee;
            return;
          }
          ac(l | 0, 0, r | 0) | 0;
          Hb(e, r, 15, s, l);
          Jb(l, r, d);
          if (j >>> 0 >= 5) {
            _a(l, r, s, h, p);
            w = ee;
            return;
          }
          k = (p + ((i[h >> 2] | 0) >>> 3)) | 0;
          e = a[k >> 0] | 0;
          r = cc(1, 0, (i[h >> 2] & 7) | 0) | 0;
          _ = de;
          r = e | r;
          e = k;
          o[e >> 0] = r;
          o[(e + 1) >> 0] = r >> 8;
          o[(e + 2) >> 0] = r >> 16;
          o[(e + 3) >> 0] = r >> 24;
          k = (k + 4) | 0;
          o[k >> 0] = _;
          o[(k + 1) >> 0] = _ >> 8;
          o[(k + 2) >> 0] = _ >> 16;
          o[(k + 3) >> 0] = _ >> 24;
          k = ((i[h >> 2] | 0) + 2) | 0;
          i[h >> 2] = k;
          _ = (j + -1) | 0;
          e = (p + (k >>> 3)) | 0;
          r = a[e >> 0] | 0;
          if (!((((_ & -4) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
          s = cc(_ | 0, 0, (k & 7) | 0) | 0;
          d = de;
          s = r | s;
          r = e;
          M = r;
          o[M >> 0] = s;
          o[(M + 1) >> 0] = s >> 8;
          o[(M + 2) >> 0] = s >> 16;
          o[(M + 3) >> 0] = s >> 24;
          r = (r + 4) | 0;
          o[r >> 0] = d;
          o[(r + 1) >> 0] = d >> 8;
          o[(r + 2) >> 0] = d >> 16;
          o[(r + 3) >> 0] = d >> 24;
          i[h >> 2] = (i[h >> 2] | 0) + 2;
          r = (j + -1) | 0;
          d = 0;
          while (1) {
            if ((d | 0) == (j | 0)) break;
            s = (q + (d << 2)) | 0;
            k = d;
            while (1) {
              M = (k + 1) | 0;
              if ((k | 0) == (r | 0)) break;
              k = (q + (M << 2)) | 0;
              _ = i[k >> 2] | 0;
              e = i[s >> 2] | 0;
              if ((a[(l + _) >> 0] | 0) >= (a[(l + e) >> 0] | 0)) {
                k = M;
                continue;
              }
              i[k >> 2] = e;
              i[s >> 2] = _;
              k = M;
            }
            d = (d + 1) | 0;
          }
          switch (j | 0) {
            case 2: {
              k = i[q >> 2] | 0;
              _ = i[h >> 2] | 0;
              e = (p + (_ >>> 3)) | 0;
              r = a[e >> 0] | 0;
              if (!(((bc(k | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if ($ >>> 0 >= 57) et(406267, 406218, 55, 406251);
              _ = cc(k | 0, 0, (_ & 7) | 0) | 0;
              k = de;
              _ = r | _;
              r = e;
              e = r;
              o[e >> 0] = _;
              o[(e + 1) >> 0] = _ >> 8;
              o[(e + 2) >> 0] = _ >> 16;
              o[(e + 3) >> 0] = _ >> 24;
              r = (r + 4) | 0;
              o[r >> 0] = k;
              o[(r + 1) >> 0] = k >> 8;
              o[(r + 2) >> 0] = k >> 16;
              o[(r + 3) >> 0] = k >> 24;
              r = ((i[h >> 2] | 0) + $) | 0;
              i[h >> 2] = r;
              e = i[(q + 4) >> 2] | 0;
              k = (p + (r >>> 3)) | 0;
              _ = a[k >> 0] | 0;
              if (!(((bc(e | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              j = cc(e | 0, 0, (r & 7) | 0) | 0;
              q = de;
              j = _ | j;
              p = k;
              l = p;
              o[l >> 0] = j;
              o[(l + 1) >> 0] = j >> 8;
              o[(l + 2) >> 0] = j >> 16;
              o[(l + 3) >> 0] = j >> 24;
              p = (p + 4) | 0;
              o[p >> 0] = q;
              o[(p + 1) >> 0] = q >> 8;
              o[(p + 2) >> 0] = q >> 16;
              o[(p + 3) >> 0] = q >> 24;
              i[h >> 2] = (i[h >> 2] | 0) + $;
              w = ee;
              return;
            }
            case 3: {
              k = i[q >> 2] | 0;
              _ = i[h >> 2] | 0;
              e = (p + (_ >>> 3)) | 0;
              r = a[e >> 0] | 0;
              if (!(((bc(k | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if ($ >>> 0 >= 57) et(406267, 406218, 55, 406251);
              k = cc(k | 0, 0, (_ & 7) | 0) | 0;
              _ = de;
              r = r | k;
              k = e;
              e = k;
              o[e >> 0] = r;
              o[(e + 1) >> 0] = r >> 8;
              o[(e + 2) >> 0] = r >> 16;
              o[(e + 3) >> 0] = r >> 24;
              k = (k + 4) | 0;
              o[k >> 0] = _;
              o[(k + 1) >> 0] = _ >> 8;
              o[(k + 2) >> 0] = _ >> 16;
              o[(k + 3) >> 0] = _ >> 24;
              k = ((i[h >> 2] | 0) + $) | 0;
              i[h >> 2] = k;
              _ = i[(q + 4) >> 2] | 0;
              e = (p + (k >>> 3)) | 0;
              r = a[e >> 0] | 0;
              if (!(((bc(_ | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              _ = cc(_ | 0, 0, (k & 7) | 0) | 0;
              k = de;
              _ = r | _;
              r = e;
              e = r;
              o[e >> 0] = _;
              o[(e + 1) >> 0] = _ >> 8;
              o[(e + 2) >> 0] = _ >> 16;
              o[(e + 3) >> 0] = _ >> 24;
              r = (r + 4) | 0;
              o[r >> 0] = k;
              o[(r + 1) >> 0] = k >> 8;
              o[(r + 2) >> 0] = k >> 16;
              o[(r + 3) >> 0] = k >> 24;
              r = ((i[h >> 2] | 0) + $) | 0;
              i[h >> 2] = r;
              e = i[(q + 8) >> 2] | 0;
              k = (p + (r >>> 3)) | 0;
              _ = a[k >> 0] | 0;
              if (!(((bc(e | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              j = cc(e | 0, 0, (r & 7) | 0) | 0;
              q = de;
              j = _ | j;
              p = k;
              l = p;
              o[l >> 0] = j;
              o[(l + 1) >> 0] = j >> 8;
              o[(l + 2) >> 0] = j >> 16;
              o[(l + 3) >> 0] = j >> 24;
              p = (p + 4) | 0;
              o[p >> 0] = q;
              o[(p + 1) >> 0] = q >> 8;
              o[(p + 2) >> 0] = q >> 16;
              o[(p + 3) >> 0] = q >> 24;
              i[h >> 2] = (i[h >> 2] | 0) + $;
              w = ee;
              return;
            }
            default: {
              k = i[q >> 2] | 0;
              _ = i[h >> 2] | 0;
              e = (p + (_ >>> 3)) | 0;
              r = a[e >> 0] | 0;
              if (!(((bc(k | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              if ($ >>> 0 >= 57) et(406267, 406218, 55, 406251);
              k = cc(k | 0, 0, (_ & 7) | 0) | 0;
              _ = de;
              r = r | k;
              k = e;
              e = k;
              o[e >> 0] = r;
              o[(e + 1) >> 0] = r >> 8;
              o[(e + 2) >> 0] = r >> 16;
              o[(e + 3) >> 0] = r >> 24;
              k = (k + 4) | 0;
              o[k >> 0] = _;
              o[(k + 1) >> 0] = _ >> 8;
              o[(k + 2) >> 0] = _ >> 16;
              o[(k + 3) >> 0] = _ >> 24;
              k = ((i[h >> 2] | 0) + $) | 0;
              i[h >> 2] = k;
              _ = i[(q + 4) >> 2] | 0;
              e = (p + (k >>> 3)) | 0;
              r = a[e >> 0] | 0;
              if (!(((bc(_ | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              k = cc(_ | 0, 0, (k & 7) | 0) | 0;
              _ = de;
              r = r | k;
              k = e;
              e = k;
              o[e >> 0] = r;
              o[(e + 1) >> 0] = r >> 8;
              o[(e + 2) >> 0] = r >> 16;
              o[(e + 3) >> 0] = r >> 24;
              k = (k + 4) | 0;
              o[k >> 0] = _;
              o[(k + 1) >> 0] = _ >> 8;
              o[(k + 2) >> 0] = _ >> 16;
              o[(k + 3) >> 0] = _ >> 24;
              k = ((i[h >> 2] | 0) + $) | 0;
              i[h >> 2] = k;
              _ = i[(q + 8) >> 2] | 0;
              e = (p + (k >>> 3)) | 0;
              r = a[e >> 0] | 0;
              if (!(((bc(_ | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              k = cc(_ | 0, 0, (k & 7) | 0) | 0;
              _ = de;
              r = r | k;
              k = e;
              e = k;
              o[e >> 0] = r;
              o[(e + 1) >> 0] = r >> 8;
              o[(e + 2) >> 0] = r >> 16;
              o[(e + 3) >> 0] = r >> 24;
              k = (k + 4) | 0;
              o[k >> 0] = _;
              o[(k + 1) >> 0] = _ >> 8;
              o[(k + 2) >> 0] = _ >> 16;
              o[(k + 3) >> 0] = _ >> 24;
              k = ((i[h >> 2] | 0) + $) | 0;
              i[h >> 2] = k;
              _ = i[(q + 12) >> 2] | 0;
              e = (p + (k >>> 3)) | 0;
              r = a[e >> 0] | 0;
              if (!(((bc(_ | 0, 0, $ | 0) | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
              s = cc(_ | 0, 0, (k & 7) | 0) | 0;
              j = de;
              s = r | s;
              M = e;
              d = M;
              o[d >> 0] = s;
              o[(d + 1) >> 0] = s >> 8;
              o[(d + 2) >> 0] = s >> 16;
              o[(d + 3) >> 0] = s >> 24;
              M = (M + 4) | 0;
              o[M >> 0] = j;
              o[(M + 1) >> 0] = j >> 8;
              o[(M + 2) >> 0] = j >> 16;
              o[(M + 3) >> 0] = j >> 24;
              M = ((i[h >> 2] | 0) + $) | 0;
              i[h >> 2] = M;
              $ = (p + (M >>> 3)) | 0;
              j = a[$ >> 0] | 0;
              l = cc(((o[(l + (i[q >> 2] | 0)) >> 0] | 0) == 1) | 0, 0, (M & 7) | 0) | 0;
              p = de;
              l = j | l;
              q = $;
              o[q >> 0] = l;
              o[(q + 1) >> 0] = l >> 8;
              o[(q + 2) >> 0] = l >> 16;
              o[(q + 3) >> 0] = l >> 24;
              $ = ($ + 4) | 0;
              o[$ >> 0] = p;
              o[($ + 1) >> 0] = p >> 8;
              o[($ + 2) >> 0] = p >> 16;
              o[($ + 3) >> 0] = p >> 24;
              i[h >> 2] = (i[h >> 2] | 0) + 1;
              w = ee;
              return;
            }
          }
        }
        function lb(e, r, s, n, d, h, p, w, k, _, M, j, q) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          w = w | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          var $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0;
          ue = 0;
          e: while (1) {
            if (ue >>> 0 >= d >>> 0) {
              r = 42;
              break;
            }
            ie = i[(n + (ue << 4)) >> 2] | 0;
            oe = i[(n + (ue << 4) + 4) >> 2] | 0;
            le = i[(n + (ue << 4) + 8) >> 2] | 0;
            ee = i[(n + (ue << 4) + 12) >> 2] | 0;
            ae = ee & 65535;
            ce = ee >>> 16;
            ee = ee & 65535;
            $ = o[(w + ee) >> 0] | 0;
            ee = l[(k + (ee << 1)) >> 1] | 0;
            te = i[j >> 2] | 0;
            re = (q + (te >>> 3)) | 0;
            se = a[re >> 0] | 0;
            Ae = bc(ee | 0, 0, ($ & 255) | 0) | 0;
            if (!(((Ae | 0) == 0) & ((de | 0) == 0))) {
              r = 4;
              break;
            }
            if (($ & 255) >= 57) {
              r = 6;
              break;
            }
            ne = cc(ee | 0, 0, (te & 7) | 0) | 0;
            Ae = de;
            se = se | ne;
            ne = re;
            te = ne;
            o[te >> 0] = se;
            o[(te + 1) >> 0] = se >> 8;
            o[(te + 2) >> 0] = se >> 16;
            o[(te + 3) >> 0] = se >> 24;
            ne = (ne + 4) | 0;
            o[ne >> 0] = Ae;
            o[(ne + 1) >> 0] = Ae >> 8;
            o[(ne + 2) >> 0] = Ae >> 16;
            o[(ne + 3) >> 0] = Ae >> 24;
            ne = ((i[j >> 2] | 0) + ($ & 255)) | 0;
            i[j >> 2] = ne;
            Ae = oe & 16777215;
            te = Ae ^ (oe >>> 24);
            do {
              if (ie >>> 0 >= 6) {
                if (ie >>> 0 < 130) {
                  oe = (ie + -2) | 0;
                  ee = (((_e(oe | 0) | 0) ^ 31) + -1) | 0;
                  ee = ((ee << 1) + (oe >>> ee) + 2) | 0;
                  break;
                }
                if (ie >>> 0 < 2114) {
                  ee = (((_e((ie + -66) | 0) | 0) ^ 31) + 10) | 0;
                  break;
                }
                if (ie >>> 0 < 6210) ee = 21;
                else ee = ie >>> 0 < 22594 ? 22 : 23;
              } else ee = ie;
            } while (0);
            do {
              if (te >>> 0 >= 10) {
                if (te >>> 0 < 134) {
                  oe = (te + -6) | 0;
                  $ = (((_e(oe | 0) | 0) ^ 31) + -1) | 0;
                  $ = (($ << 1) + (oe >>> $) + 4) | 0;
                  break;
                }
                if (te >>> 0 < 2118) $ = (((_e((te + -70) | 0) | 0) ^ 31) + 12) | 0;
                else $ = 23;
              } else $ = (te + 65534) | 0;
            } while (0);
            ee = ee & 65535;
            se = i[(17268 + (ee << 2)) >> 2] | 0;
            ee = (ie - (i[(18788 + (ee << 2)) >> 2] | 0)) | 0;
            re = $ & 65535;
            te = cc((te - (i[(17364 + (re << 2)) >> 2] | 0)) | 0, 0, se | 0) | 0;
            $ = de;
            ee = te | ee;
            te = (se + (i[(17460 + (re << 2)) >> 2] | 0)) | 0;
            re = (q + (ne >>> 3)) | 0;
            se = a[re >> 0] | 0;
            oe = bc(ee | 0, $ | 0, te | 0) | 0;
            if (!(((oe | 0) == 0) & ((de | 0) == 0))) {
              r = 21;
              break;
            }
            if (te >>> 0 >= 57) {
              r = 23;
              break;
            }
            ee = cc(ee | 0, $ | 0, (ne & 7) | 0) | 0;
            oe = de;
            ee = se | ee;
            ne = re;
            se = ne;
            o[se >> 0] = ee;
            o[(se + 1) >> 0] = ee >> 8;
            o[(se + 2) >> 0] = ee >> 16;
            o[(se + 3) >> 0] = ee >> 24;
            ne = (ne + 4) | 0;
            o[ne >> 0] = oe;
            o[(ne + 1) >> 0] = oe >> 8;
            o[(ne + 2) >> 0] = oe >> 16;
            o[(ne + 3) >> 0] = oe >> 24;
            ne = ((i[j >> 2] | 0) + te) | 0;
            i[j >> 2] = ne;
            se = ie;
            while (1) {
              if (!se) break;
              ee = a[(e + (r & s)) >> 0] | 0;
              $ = o[(h + ee) >> 0] | 0;
              ee = l[(p + (ee << 1)) >> 1] | 0;
              te = (q + (ne >>> 3)) | 0;
              re = a[te >> 0] | 0;
              ie = bc(ee | 0, 0, ($ & 255) | 0) | 0;
              if (!(((ie | 0) == 0) & ((de | 0) == 0))) {
                r = 27;
                break e;
              }
              if (($ & 255) >= 57) {
                r = 29;
                break e;
              }
              ee = cc(ee | 0, 0, (ne & 7) | 0) | 0;
              oe = de;
              ee = re | ee;
              ie = te;
              re = ie;
              o[re >> 0] = ee;
              o[(re + 1) >> 0] = ee >> 8;
              o[(re + 2) >> 0] = ee >> 16;
              o[(re + 3) >> 0] = ee >> 24;
              ie = (ie + 4) | 0;
              o[ie >> 0] = oe;
              o[(ie + 1) >> 0] = oe >> 8;
              o[(ie + 2) >> 0] = oe >> 16;
              o[(ie + 3) >> 0] = oe >> 24;
              ie = ((i[j >> 2] | 0) + ($ & 255)) | 0;
              i[j >> 2] = ie;
              ne = ie;
              r = (r + 1) | 0;
              se = (se + -1) | 0;
            }
            r = (r + Ae) | 0;
            if (((Ae | 0) != 0) & ((ae & 65535) > 127)) {
              se = le >>> 24;
              oe = le & 16777215;
              re = o[(_ + ce) >> 0] | 0;
              $ = l[(M + (ce << 1)) >> 1] | 0;
              ee = (q + (ne >>> 3)) | 0;
              te = a[ee >> 0] | 0;
              ce = bc($ | 0, 0, (re & 255) | 0) | 0;
              if (!(((ce | 0) == 0) & ((de | 0) == 0))) {
                r = 33;
                break;
              }
              if ((re & 255) >= 57) {
                r = 35;
                break;
              }
              $ = cc($ | 0, 0, (ne & 7) | 0) | 0;
              ce = de;
              te = te | $;
              $ = ee;
              ee = $;
              o[ee >> 0] = te;
              o[(ee + 1) >> 0] = te >> 8;
              o[(ee + 2) >> 0] = te >> 16;
              o[(ee + 3) >> 0] = te >> 24;
              $ = ($ + 4) | 0;
              o[$ >> 0] = ce;
              o[($ + 1) >> 0] = ce >> 8;
              o[($ + 2) >> 0] = ce >> 16;
              o[($ + 3) >> 0] = ce >> 24;
              $ = ((i[j >> 2] | 0) + (re & 255)) | 0;
              i[j >> 2] = $;
              ee = (q + ($ >>> 3)) | 0;
              te = a[ee >> 0] | 0;
              ce = bc(oe | 0, 0, se | 0) | 0;
              if (!(((ce | 0) == 0) & ((de | 0) == 0))) {
                r = 37;
                break;
              }
              if (le >>> 0 >= 956301312) {
                r = 39;
                break;
              }
              Ae = cc(oe | 0, 0, ($ & 7) | 0) | 0;
              ce = de;
              Ae = te | Ae;
              le = ee;
              ae = le;
              o[ae >> 0] = Ae;
              o[(ae + 1) >> 0] = Ae >> 8;
              o[(ae + 2) >> 0] = Ae >> 16;
              o[(ae + 3) >> 0] = Ae >> 24;
              le = (le + 4) | 0;
              o[le >> 0] = ce;
              o[(le + 1) >> 0] = ce >> 8;
              o[(le + 2) >> 0] = ce >> 16;
              o[(le + 3) >> 0] = ce >> 24;
              i[j >> 2] = (i[j >> 2] | 0) + se;
            }
            ue = (ue + 1) | 0;
          }
          switch (r | 0) {
            case 4: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 6: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 21: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 23: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 27: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 29: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 33: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 35: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 37: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 39: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 42:
              return;
          }
        }
        function mb(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          var n = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0,
            w = 0;
          if ((e | 0) != 1) {
            d = (_e((e + -1) | 0) | 0) ^ 31;
            h = (d + 1) | 0;
            if (!e) et(405225, 404333, 86, 405236);
            else {
              a = h >>> 0 < 16 ? 4 : ((d + 4) | 0) >>> 2;
              p = h;
            }
            if (e >>> 0 < 16777217) {
              l = a;
              w = p;
            } else et(405253, 404333, 87, 405236);
            if (w >>> 0 < 25) n = l;
            else et(405273, 404333, 88, 405236);
          } else n = 4;
          i[o >> 2] = n + -4;
          i[(o + 4) >> 2] = 0;
          i[s >> 2] = n << 2;
          s = r;
          i[s >> 2] = e + -1;
          i[(s + 4) >> 2] = 0;
          return;
        }
        function nb(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var n = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0,
            w = 0;
          if (!e) {
            p = (s + ((i[r >> 2] | 0) >>> 3)) | 0;
            e = a[p >> 0] | 0;
            s = p;
            o[s >> 0] = e;
            o[(s + 1) >> 0] = e >> 8;
            o[(s + 2) >> 0] = e >> 16;
            o[(s + 3) >> 0] = e >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = 0;
            o[(p + 1) >> 0] = 0;
            o[(p + 2) >> 0] = 0;
            o[(p + 3) >> 0] = 0;
            p = ((i[r >> 2] | 0) + 1) | 0;
            i[r >> 2] = p;
            return;
          }
          p = (_e(e | 0) | 0) ^ 31;
          h = i[r >> 2] | 0;
          n = (s + (h >>> 3)) | 0;
          d = a[n >> 0] | 0;
          h = cc(1, 0, (h & 7) | 0) | 0;
          l = de;
          h = d | h;
          d = n;
          o[d >> 0] = h;
          o[(d + 1) >> 0] = h >> 8;
          o[(d + 2) >> 0] = h >> 16;
          o[(d + 3) >> 0] = h >> 24;
          n = (n + 4) | 0;
          o[n >> 0] = l;
          o[(n + 1) >> 0] = l >> 8;
          o[(n + 2) >> 0] = l >> 16;
          o[(n + 3) >> 0] = l >> 24;
          n = ((i[r >> 2] | 0) + 1) | 0;
          i[r >> 2] = n;
          l = (s + (n >>> 3)) | 0;
          d = a[l >> 0] | 0;
          if (!((((p & 56) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
          w = cc(p | 0, 0, (n & 7) | 0) | 0;
          n = de;
          w = d | w;
          h = l;
          d = h;
          o[d >> 0] = w;
          o[(d + 1) >> 0] = w >> 8;
          o[(d + 2) >> 0] = w >> 16;
          o[(d + 3) >> 0] = w >> 24;
          h = (h + 4) | 0;
          o[h >> 0] = n;
          o[(h + 1) >> 0] = n >> 8;
          o[(h + 2) >> 0] = n >> 16;
          o[(h + 3) >> 0] = n >> 24;
          h = ((i[r >> 2] | 0) + 3) | 0;
          i[r >> 2] = h;
          d = (e - (1 << p)) | 0;
          n = (s + (h >>> 3)) | 0;
          l = a[n >> 0] | 0;
          s = bc(d | 0, 0, p | 0) | 0;
          if (!(((s | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          if (p >>> 0 >= 57) et(406267, 406218, 55, 406251);
          h = cc(d | 0, 0, (h & 7) | 0) | 0;
          s = de;
          h = l | h;
          w = n;
          e = w;
          o[e >> 0] = h;
          o[(e + 1) >> 0] = h >> 8;
          o[(e + 2) >> 0] = h >> 16;
          o[(e + 3) >> 0] = h >> 24;
          w = (w + 4) | 0;
          o[w >> 0] = s;
          o[(w + 1) >> 0] = s >> 8;
          o[(w + 2) >> 0] = s >> 16;
          o[(w + 3) >> 0] = s >> 24;
          w = ((i[r >> 2] | 0) + p) | 0;
          i[r >> 2] = w;
          return;
        }
        function ob(e, r, s, o, n, a, l) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          l = l | 0;
          var d = 0.0,
            k = 0.0,
            _ = 0.0,
            M = 0.0,
            j = 0.0,
            q = 0.0,
            $ = 0.0,
            ee = 0.0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0;
          oe = w;
          w = (w + 1040) | 0;
          te = oe;
          if ((s | 0) == (o | 0)) {
            w = oe;
            return;
          }
          re = o >>> 0 < s >>> 0;
          se = re ? s : o;
          re = re ? o : s;
          s = i[(r + (re << 2)) >> 2] | 0;
          o = i[(r + (se << 2)) >> 2] | 0;
          r = (s + o) | 0;
          ee = +(s >>> 0);
          if (s >>> 0 < 256) $ = +h[(19516 + (s << 2)) >> 2];
          else $ = +Xb(ee);
          q = +(o >>> 0);
          if (o >>> 0 < 256) j = +h[(19516 + (o << 2)) >> 2];
          else j = +Xb(q);
          _ = +(r >>> 0);
          if (r >>> 0 < 256) k = +h[(19516 + (r << 2)) >> 2];
          else k = +Xb(_);
          d = +p[(e + ((re * 1040) | 0) + 1032) >> 3];
          M = +p[(e + ((se * 1040) | 0) + 1032) >> 3];
          _ = (ee * $ + q * j - _ * k) * 0.5 - d - M;
          if (i[(e + ((re * 1040) | 0) + 1024) >> 2] | 0) {
            s = i[(e + ((se * 1040) | 0) + 1024) >> 2] | 0;
            if (s) {
              if (i[l >> 2] | 0) {
                d = +p[(a + 16) >> 3];
                if (d < 0.0) k = 0.0;
                else k = d;
              } else k = 1e99;
              dc(te | 0, (e + ((re * 1040) | 0)) | 0, 1040) | 0;
              r = (te + 1024) | 0;
              i[r >> 2] = (i[r >> 2] | 0) + s;
              s = 0;
              while (1) {
                if ((s | 0) == 256) break;
                r = (te + (s << 2)) | 0;
                i[r >> 2] = (i[r >> 2] | 0) + (i[(e + ((se * 1040) | 0) + (s << 2)) >> 2] | 0);
                s = (s + 1) | 0;
              }
              d = +Wa(te);
              if (!(d < k - _)) {
                w = oe;
                return;
              }
            }
          } else d = M;
          k = _ + d;
          s = i[l >> 2] | 0;
          do {
            if (s) {
              _ = +p[(a + 16) >> 3];
              if (_ != k) {
                if (!(_ > k)) break;
              } else if ((((i[(a + 4) >> 2] | 0) - (i[a >> 2] | 0)) | 0) >>> 0 <= ((se - re) | 0) >>> 0) break;
              if (s >>> 0 < n >>> 0) {
                n = (a + ((s * 24) | 0)) | 0;
                i[n >> 2] = i[a >> 2];
                i[(n + 4) >> 2] = i[(a + 4) >> 2];
                i[(n + 8) >> 2] = i[(a + 8) >> 2];
                i[(n + 12) >> 2] = i[(a + 12) >> 2];
                i[(n + 16) >> 2] = i[(a + 16) >> 2];
                i[(n + 20) >> 2] = i[(a + 20) >> 2];
                i[l >> 2] = (i[l >> 2] | 0) + 1;
              }
              i[a >> 2] = re;
              i[(a + 4) >> 2] = se;
              p[(a + 8) >> 3] = d;
              p[(a + 16) >> 3] = k;
              w = oe;
              return;
            }
          } while (0);
          if (s >>> 0 >= n >>> 0) {
            w = oe;
            return;
          }
          i[(a + ((s * 24) | 0)) >> 2] = re;
          i[(a + ((s * 24) | 0) + 4) >> 2] = se;
          p[(a + ((s * 24) | 0) + 8) >> 3] = d;
          p[(a + ((s * 24) | 0) + 16) >> 3] = k;
          i[l >> 2] = (i[l >> 2] | 0) + 1;
          w = oe;
          return;
        }
        function pb(e, r, s, o, n, a, l, d, h) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          var k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0.0,
            ee = 0.0,
            te = 0,
            re = 0,
            se = 0.0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0;
          de = w;
          w = (w + 32) | 0;
          ge = (de + 24) | 0;
          ue = de;
          i[ge >> 2] = 0;
          k = (a + -1) | 0;
          M = 0;
          while (1) {
            if ((M | 0) == (a | 0)) break;
            _ = (o + (M << 2)) | 0;
            q = M;
            while (1) {
              j = (q + 1) | 0;
              if ((q | 0) == (k | 0)) break;
              ob(e, r, i[_ >> 2] | 0, i[(o + (j << 2)) >> 2] | 0, h, n, ge);
              q = j;
            }
            M = (M + 1) | 0;
          }
          ne = (n + 16) | 0;
          ie = (n + 4) | 0;
          Ae = (n + 8) | 0;
          k = a;
          se = 0.0;
          oe = 1;
          e: while (1) {
            re = k;
            while (1) {
              k = (k + -1) | 0;
              if (re >>> 0 <= oe >>> 0) break e;
              if (+p[ne >> 3] >= se) {
                k = re;
                se = 1e99;
                oe = d;
                continue e;
              }
              te = i[n >> 2] | 0;
              a = i[ie >> 2] | 0;
              _ = (e + ((te * 1040) | 0) + 1024) | 0;
              i[_ >> 2] = (i[_ >> 2] | 0) + (i[(e + ((a * 1040) | 0) + 1024) >> 2] | 0);
              _ = 0;
              while (1) {
                if ((_ | 0) == 256) break;
                q = (e + ((te * 1040) | 0) + (_ << 2)) | 0;
                i[q >> 2] = (i[q >> 2] | 0) + (i[(e + ((a * 1040) | 0) + (_ << 2)) >> 2] | 0);
                _ = (_ + 1) | 0;
              }
              p[(e + ((te * 1040) | 0) + 1032) >> 3] = +p[Ae >> 3];
              M = (r + (te << 2)) | 0;
              i[M >> 2] = (i[M >> 2] | 0) + (i[(r + (a << 2)) >> 2] | 0);
              M = 0;
              while (1) {
                if ((M | 0) == (l | 0)) {
                  M = 0;
                  break;
                }
                _ = (s + (M << 2)) | 0;
                if ((i[_ >> 2] | 0) == (a | 0)) i[_ >> 2] = te;
                M = (M + 1) | 0;
              }
              while (1) {
                if (re >>> 0 <= M >>> 0) break;
                _ = (o + (M << 2)) | 0;
                if ((i[_ >> 2] | 0) == (a | 0)) {
                  ae = 22;
                  break;
                }
                M = (M + 1) | 0;
              }
              if ((ae | 0) == 22) {
                ae = 0;
                fc(_ | 0, (o + ((M + 1) << 2)) | 0, (((re - M) << 2) + -4) | 0) | 0;
              }
              j = i[ge >> 2] | 0;
              _ = 0;
              q = 0;
              while (1) {
                if ((q | 0) == (j | 0)) break;
                M = (n + ((q * 24) | 0)) | 0;
                if (
                  ((i[M >> 2] | 0) != (te | 0) ? ((ce = i[(n + ((q * 24) | 0) + 4) >> 2] | 0), (ce | 0) != (te | 0)) : 0)
                    ? ((le = i[M >> 2] | 0), !(((le | 0) == (a | 0)) | ((ce | 0) == (a | 0))))
                    : 0
                ) {
                  $ = +p[ne >> 3];
                  ee = +p[(n + ((q * 24) | 0) + 16) >> 3];
                  if ($ != ee)
                    if ($ > ee) ae = 32;
                    else ae = 33;
                  else if ((((i[ie >> 2] | 0) - (i[n >> 2] | 0)) | 0) >>> 0 > ((ce - le) | 0) >>> 0) ae = 32;
                  else ae = 33;
                  if ((ae | 0) == 32) {
                    ae = 0;
                    i[ue >> 2] = i[n >> 2];
                    i[(ue + 4) >> 2] = i[(n + 4) >> 2];
                    i[(ue + 8) >> 2] = i[(n + 8) >> 2];
                    i[(ue + 12) >> 2] = i[(n + 12) >> 2];
                    i[(ue + 16) >> 2] = i[(n + 16) >> 2];
                    i[(ue + 20) >> 2] = i[(n + 20) >> 2];
                    i[n >> 2] = i[M >> 2];
                    i[(n + 4) >> 2] = i[(M + 4) >> 2];
                    i[(n + 8) >> 2] = i[(M + 8) >> 2];
                    i[(n + 12) >> 2] = i[(M + 12) >> 2];
                    i[(n + 16) >> 2] = i[(M + 16) >> 2];
                    i[(n + 20) >> 2] = i[(M + 20) >> 2];
                    M = (n + ((_ * 24) | 0)) | 0;
                    i[M >> 2] = i[ue >> 2];
                    i[(M + 4) >> 2] = i[(ue + 4) >> 2];
                    i[(M + 8) >> 2] = i[(ue + 8) >> 2];
                    i[(M + 12) >> 2] = i[(ue + 12) >> 2];
                    i[(M + 16) >> 2] = i[(ue + 16) >> 2];
                    i[(M + 20) >> 2] = i[(ue + 20) >> 2];
                  } else if ((ae | 0) == 33) {
                    ae = 0;
                    fe = (n + ((_ * 24) | 0)) | 0;
                    i[fe >> 2] = i[M >> 2];
                    i[(fe + 4) >> 2] = i[(M + 4) >> 2];
                    i[(fe + 8) >> 2] = i[(M + 8) >> 2];
                    i[(fe + 12) >> 2] = i[(M + 12) >> 2];
                    i[(fe + 16) >> 2] = i[(M + 16) >> 2];
                    i[(fe + 20) >> 2] = i[(M + 20) >> 2];
                  }
                  _ = (_ + 1) | 0;
                }
                q = (q + 1) | 0;
              }
              i[ge >> 2] = _;
              _ = 0;
              while (1) {
                if ((_ | 0) == (k | 0)) break;
                ob(e, r, te, i[(o + (_ << 2)) >> 2] | 0, h, n, ge);
                _ = (_ + 1) | 0;
              }
              re = (re + -1) | 0;
            }
          }
          w = de;
          return re | 0;
        }
        function qb(e, r, s, o, n, a, l) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          l = l | 0;
          var d = 0.0,
            k = 0.0,
            _ = 0.0,
            M = 0.0,
            j = 0.0,
            q = 0.0,
            $ = 0.0,
            ee = 0.0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0;
          oe = w;
          w = (w + 2832) | 0;
          te = oe;
          if ((s | 0) == (o | 0)) {
            w = oe;
            return;
          }
          re = o >>> 0 < s >>> 0;
          se = re ? s : o;
          re = re ? o : s;
          s = i[(r + (re << 2)) >> 2] | 0;
          o = i[(r + (se << 2)) >> 2] | 0;
          r = (s + o) | 0;
          ee = +(s >>> 0);
          if (s >>> 0 < 256) $ = +h[(19516 + (s << 2)) >> 2];
          else $ = +Xb(ee);
          q = +(o >>> 0);
          if (o >>> 0 < 256) j = +h[(19516 + (o << 2)) >> 2];
          else j = +Xb(q);
          _ = +(r >>> 0);
          if (r >>> 0 < 256) k = +h[(19516 + (r << 2)) >> 2];
          else k = +Xb(_);
          d = +p[(e + ((re * 2832) | 0) + 2824) >> 3];
          M = +p[(e + ((se * 2832) | 0) + 2824) >> 3];
          _ = (ee * $ + q * j - _ * k) * 0.5 - d - M;
          if (i[(e + ((re * 2832) | 0) + 2816) >> 2] | 0) {
            s = i[(e + ((se * 2832) | 0) + 2816) >> 2] | 0;
            if (s) {
              if (i[l >> 2] | 0) {
                d = +p[(a + 16) >> 3];
                if (d < 0.0) k = 0.0;
                else k = d;
              } else k = 1e99;
              dc(te | 0, (e + ((re * 2832) | 0)) | 0, 2832) | 0;
              r = (te + 2816) | 0;
              i[r >> 2] = (i[r >> 2] | 0) + s;
              s = 0;
              while (1) {
                if ((s | 0) == 704) break;
                r = (te + (s << 2)) | 0;
                i[r >> 2] = (i[r >> 2] | 0) + (i[(e + ((se * 2832) | 0) + (s << 2)) >> 2] | 0);
                s = (s + 1) | 0;
              }
              d = +Xa(te);
              if (!(d < k - _)) {
                w = oe;
                return;
              }
            }
          } else d = M;
          k = _ + d;
          s = i[l >> 2] | 0;
          do {
            if (s) {
              _ = +p[(a + 16) >> 3];
              if (_ != k) {
                if (!(_ > k)) break;
              } else if ((((i[(a + 4) >> 2] | 0) - (i[a >> 2] | 0)) | 0) >>> 0 <= ((se - re) | 0) >>> 0) break;
              if (s >>> 0 < n >>> 0) {
                n = (a + ((s * 24) | 0)) | 0;
                i[n >> 2] = i[a >> 2];
                i[(n + 4) >> 2] = i[(a + 4) >> 2];
                i[(n + 8) >> 2] = i[(a + 8) >> 2];
                i[(n + 12) >> 2] = i[(a + 12) >> 2];
                i[(n + 16) >> 2] = i[(a + 16) >> 2];
                i[(n + 20) >> 2] = i[(a + 20) >> 2];
                i[l >> 2] = (i[l >> 2] | 0) + 1;
              }
              i[a >> 2] = re;
              i[(a + 4) >> 2] = se;
              p[(a + 8) >> 3] = d;
              p[(a + 16) >> 3] = k;
              w = oe;
              return;
            }
          } while (0);
          if (s >>> 0 >= n >>> 0) {
            w = oe;
            return;
          }
          i[(a + ((s * 24) | 0)) >> 2] = re;
          i[(a + ((s * 24) | 0) + 4) >> 2] = se;
          p[(a + ((s * 24) | 0) + 8) >> 3] = d;
          p[(a + ((s * 24) | 0) + 16) >> 3] = k;
          i[l >> 2] = (i[l >> 2] | 0) + 1;
          w = oe;
          return;
        }
        function rb(e, r, s, o, n, a, l, d, h) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          var k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0.0,
            ee = 0.0,
            te = 0,
            re = 0,
            se = 0.0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0;
          de = w;
          w = (w + 32) | 0;
          ge = (de + 24) | 0;
          ue = de;
          i[ge >> 2] = 0;
          k = (a + -1) | 0;
          M = 0;
          while (1) {
            if ((M | 0) == (a | 0)) break;
            _ = (o + (M << 2)) | 0;
            q = M;
            while (1) {
              j = (q + 1) | 0;
              if ((q | 0) == (k | 0)) break;
              qb(e, r, i[_ >> 2] | 0, i[(o + (j << 2)) >> 2] | 0, h, n, ge);
              q = j;
            }
            M = (M + 1) | 0;
          }
          ne = (n + 16) | 0;
          ie = (n + 4) | 0;
          Ae = (n + 8) | 0;
          k = a;
          se = 0.0;
          oe = 1;
          e: while (1) {
            re = k;
            while (1) {
              k = (k + -1) | 0;
              if (re >>> 0 <= oe >>> 0) break e;
              if (+p[ne >> 3] >= se) {
                k = re;
                se = 1e99;
                oe = d;
                continue e;
              }
              te = i[n >> 2] | 0;
              a = i[ie >> 2] | 0;
              _ = (e + ((te * 2832) | 0) + 2816) | 0;
              i[_ >> 2] = (i[_ >> 2] | 0) + (i[(e + ((a * 2832) | 0) + 2816) >> 2] | 0);
              _ = 0;
              while (1) {
                if ((_ | 0) == 704) break;
                q = (e + ((te * 2832) | 0) + (_ << 2)) | 0;
                i[q >> 2] = (i[q >> 2] | 0) + (i[(e + ((a * 2832) | 0) + (_ << 2)) >> 2] | 0);
                _ = (_ + 1) | 0;
              }
              p[(e + ((te * 2832) | 0) + 2824) >> 3] = +p[Ae >> 3];
              M = (r + (te << 2)) | 0;
              i[M >> 2] = (i[M >> 2] | 0) + (i[(r + (a << 2)) >> 2] | 0);
              M = 0;
              while (1) {
                if ((M | 0) == (l | 0)) {
                  M = 0;
                  break;
                }
                _ = (s + (M << 2)) | 0;
                if ((i[_ >> 2] | 0) == (a | 0)) i[_ >> 2] = te;
                M = (M + 1) | 0;
              }
              while (1) {
                if (re >>> 0 <= M >>> 0) break;
                _ = (o + (M << 2)) | 0;
                if ((i[_ >> 2] | 0) == (a | 0)) {
                  ae = 22;
                  break;
                }
                M = (M + 1) | 0;
              }
              if ((ae | 0) == 22) {
                ae = 0;
                fc(_ | 0, (o + ((M + 1) << 2)) | 0, (((re - M) << 2) + -4) | 0) | 0;
              }
              j = i[ge >> 2] | 0;
              _ = 0;
              q = 0;
              while (1) {
                if ((q | 0) == (j | 0)) break;
                M = (n + ((q * 24) | 0)) | 0;
                if (
                  ((i[M >> 2] | 0) != (te | 0) ? ((ce = i[(n + ((q * 24) | 0) + 4) >> 2] | 0), (ce | 0) != (te | 0)) : 0)
                    ? ((le = i[M >> 2] | 0), !(((le | 0) == (a | 0)) | ((ce | 0) == (a | 0))))
                    : 0
                ) {
                  $ = +p[ne >> 3];
                  ee = +p[(n + ((q * 24) | 0) + 16) >> 3];
                  if ($ != ee)
                    if ($ > ee) ae = 32;
                    else ae = 33;
                  else if ((((i[ie >> 2] | 0) - (i[n >> 2] | 0)) | 0) >>> 0 > ((ce - le) | 0) >>> 0) ae = 32;
                  else ae = 33;
                  if ((ae | 0) == 32) {
                    ae = 0;
                    i[ue >> 2] = i[n >> 2];
                    i[(ue + 4) >> 2] = i[(n + 4) >> 2];
                    i[(ue + 8) >> 2] = i[(n + 8) >> 2];
                    i[(ue + 12) >> 2] = i[(n + 12) >> 2];
                    i[(ue + 16) >> 2] = i[(n + 16) >> 2];
                    i[(ue + 20) >> 2] = i[(n + 20) >> 2];
                    i[n >> 2] = i[M >> 2];
                    i[(n + 4) >> 2] = i[(M + 4) >> 2];
                    i[(n + 8) >> 2] = i[(M + 8) >> 2];
                    i[(n + 12) >> 2] = i[(M + 12) >> 2];
                    i[(n + 16) >> 2] = i[(M + 16) >> 2];
                    i[(n + 20) >> 2] = i[(M + 20) >> 2];
                    M = (n + ((_ * 24) | 0)) | 0;
                    i[M >> 2] = i[ue >> 2];
                    i[(M + 4) >> 2] = i[(ue + 4) >> 2];
                    i[(M + 8) >> 2] = i[(ue + 8) >> 2];
                    i[(M + 12) >> 2] = i[(ue + 12) >> 2];
                    i[(M + 16) >> 2] = i[(ue + 16) >> 2];
                    i[(M + 20) >> 2] = i[(ue + 20) >> 2];
                  } else if ((ae | 0) == 33) {
                    ae = 0;
                    fe = (n + ((_ * 24) | 0)) | 0;
                    i[fe >> 2] = i[M >> 2];
                    i[(fe + 4) >> 2] = i[(M + 4) >> 2];
                    i[(fe + 8) >> 2] = i[(M + 8) >> 2];
                    i[(fe + 12) >> 2] = i[(M + 12) >> 2];
                    i[(fe + 16) >> 2] = i[(M + 16) >> 2];
                    i[(fe + 20) >> 2] = i[(M + 20) >> 2];
                  }
                  _ = (_ + 1) | 0;
                }
                q = (q + 1) | 0;
              }
              i[ge >> 2] = _;
              _ = 0;
              while (1) {
                if ((_ | 0) == (k | 0)) break;
                qb(e, r, te, i[(o + (_ << 2)) >> 2] | 0, h, n, ge);
                _ = (_ + 1) | 0;
              }
              re = (re + -1) | 0;
            }
          }
          w = de;
          return re | 0;
        }
        function sb(e, r, s, o, n, a, l) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          l = l | 0;
          var d = 0.0,
            k = 0.0,
            _ = 0.0,
            M = 0.0,
            j = 0.0,
            q = 0.0,
            $ = 0.0,
            ee = 0.0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0;
          oe = w;
          w = (w + 2096) | 0;
          te = oe;
          if ((s | 0) == (o | 0)) {
            w = oe;
            return;
          }
          re = o >>> 0 < s >>> 0;
          se = re ? s : o;
          re = re ? o : s;
          s = i[(r + (re << 2)) >> 2] | 0;
          o = i[(r + (se << 2)) >> 2] | 0;
          r = (s + o) | 0;
          ee = +(s >>> 0);
          if (s >>> 0 < 256) $ = +h[(19516 + (s << 2)) >> 2];
          else $ = +Xb(ee);
          q = +(o >>> 0);
          if (o >>> 0 < 256) j = +h[(19516 + (o << 2)) >> 2];
          else j = +Xb(q);
          _ = +(r >>> 0);
          if (r >>> 0 < 256) k = +h[(19516 + (r << 2)) >> 2];
          else k = +Xb(_);
          d = +p[(e + ((re * 2096) | 0) + 2088) >> 3];
          M = +p[(e + ((se * 2096) | 0) + 2088) >> 3];
          _ = (ee * $ + q * j - _ * k) * 0.5 - d - M;
          if (i[(e + ((re * 2096) | 0) + 2080) >> 2] | 0) {
            s = i[(e + ((se * 2096) | 0) + 2080) >> 2] | 0;
            if (s) {
              if (i[l >> 2] | 0) {
                d = +p[(a + 16) >> 3];
                if (d < 0.0) k = 0.0;
                else k = d;
              } else k = 1e99;
              dc(te | 0, (e + ((re * 2096) | 0)) | 0, 2096) | 0;
              r = (te + 2080) | 0;
              i[r >> 2] = (i[r >> 2] | 0) + s;
              s = 0;
              while (1) {
                if ((s | 0) == 520) break;
                r = (te + (s << 2)) | 0;
                i[r >> 2] = (i[r >> 2] | 0) + (i[(e + ((se * 2096) | 0) + (s << 2)) >> 2] | 0);
                s = (s + 1) | 0;
              }
              d = +Ya(te);
              if (!(d < k - _)) {
                w = oe;
                return;
              }
            }
          } else d = M;
          k = _ + d;
          s = i[l >> 2] | 0;
          do {
            if (s) {
              _ = +p[(a + 16) >> 3];
              if (_ != k) {
                if (!(_ > k)) break;
              } else if ((((i[(a + 4) >> 2] | 0) - (i[a >> 2] | 0)) | 0) >>> 0 <= ((se - re) | 0) >>> 0) break;
              if (s >>> 0 < n >>> 0) {
                n = (a + ((s * 24) | 0)) | 0;
                i[n >> 2] = i[a >> 2];
                i[(n + 4) >> 2] = i[(a + 4) >> 2];
                i[(n + 8) >> 2] = i[(a + 8) >> 2];
                i[(n + 12) >> 2] = i[(a + 12) >> 2];
                i[(n + 16) >> 2] = i[(a + 16) >> 2];
                i[(n + 20) >> 2] = i[(a + 20) >> 2];
                i[l >> 2] = (i[l >> 2] | 0) + 1;
              }
              i[a >> 2] = re;
              i[(a + 4) >> 2] = se;
              p[(a + 8) >> 3] = d;
              p[(a + 16) >> 3] = k;
              w = oe;
              return;
            }
          } while (0);
          if (s >>> 0 >= n >>> 0) {
            w = oe;
            return;
          }
          i[(a + ((s * 24) | 0)) >> 2] = re;
          i[(a + ((s * 24) | 0) + 4) >> 2] = se;
          p[(a + ((s * 24) | 0) + 8) >> 3] = d;
          p[(a + ((s * 24) | 0) + 16) >> 3] = k;
          i[l >> 2] = (i[l >> 2] | 0) + 1;
          w = oe;
          return;
        }
        function tb(e, r, s, o, n, a, l, d, h) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          var k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0.0,
            ee = 0.0,
            te = 0,
            re = 0,
            se = 0.0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0;
          de = w;
          w = (w + 32) | 0;
          ge = (de + 24) | 0;
          ue = de;
          i[ge >> 2] = 0;
          k = (a + -1) | 0;
          M = 0;
          while (1) {
            if ((M | 0) == (a | 0)) break;
            _ = (o + (M << 2)) | 0;
            q = M;
            while (1) {
              j = (q + 1) | 0;
              if ((q | 0) == (k | 0)) break;
              sb(e, r, i[_ >> 2] | 0, i[(o + (j << 2)) >> 2] | 0, h, n, ge);
              q = j;
            }
            M = (M + 1) | 0;
          }
          ne = (n + 16) | 0;
          ie = (n + 4) | 0;
          Ae = (n + 8) | 0;
          k = a;
          se = 0.0;
          oe = 1;
          e: while (1) {
            re = k;
            while (1) {
              k = (k + -1) | 0;
              if (re >>> 0 <= oe >>> 0) break e;
              if (+p[ne >> 3] >= se) {
                k = re;
                se = 1e99;
                oe = d;
                continue e;
              }
              te = i[n >> 2] | 0;
              a = i[ie >> 2] | 0;
              _ = (e + ((te * 2096) | 0) + 2080) | 0;
              i[_ >> 2] = (i[_ >> 2] | 0) + (i[(e + ((a * 2096) | 0) + 2080) >> 2] | 0);
              _ = 0;
              while (1) {
                if ((_ | 0) == 520) break;
                q = (e + ((te * 2096) | 0) + (_ << 2)) | 0;
                i[q >> 2] = (i[q >> 2] | 0) + (i[(e + ((a * 2096) | 0) + (_ << 2)) >> 2] | 0);
                _ = (_ + 1) | 0;
              }
              p[(e + ((te * 2096) | 0) + 2088) >> 3] = +p[Ae >> 3];
              M = (r + (te << 2)) | 0;
              i[M >> 2] = (i[M >> 2] | 0) + (i[(r + (a << 2)) >> 2] | 0);
              M = 0;
              while (1) {
                if ((M | 0) == (l | 0)) {
                  M = 0;
                  break;
                }
                _ = (s + (M << 2)) | 0;
                if ((i[_ >> 2] | 0) == (a | 0)) i[_ >> 2] = te;
                M = (M + 1) | 0;
              }
              while (1) {
                if (re >>> 0 <= M >>> 0) break;
                _ = (o + (M << 2)) | 0;
                if ((i[_ >> 2] | 0) == (a | 0)) {
                  ae = 22;
                  break;
                }
                M = (M + 1) | 0;
              }
              if ((ae | 0) == 22) {
                ae = 0;
                fc(_ | 0, (o + ((M + 1) << 2)) | 0, (((re - M) << 2) + -4) | 0) | 0;
              }
              j = i[ge >> 2] | 0;
              _ = 0;
              q = 0;
              while (1) {
                if ((q | 0) == (j | 0)) break;
                M = (n + ((q * 24) | 0)) | 0;
                if (
                  ((i[M >> 2] | 0) != (te | 0) ? ((ce = i[(n + ((q * 24) | 0) + 4) >> 2] | 0), (ce | 0) != (te | 0)) : 0)
                    ? ((le = i[M >> 2] | 0), !(((le | 0) == (a | 0)) | ((ce | 0) == (a | 0))))
                    : 0
                ) {
                  $ = +p[ne >> 3];
                  ee = +p[(n + ((q * 24) | 0) + 16) >> 3];
                  if ($ != ee)
                    if ($ > ee) ae = 32;
                    else ae = 33;
                  else if ((((i[ie >> 2] | 0) - (i[n >> 2] | 0)) | 0) >>> 0 > ((ce - le) | 0) >>> 0) ae = 32;
                  else ae = 33;
                  if ((ae | 0) == 32) {
                    ae = 0;
                    i[ue >> 2] = i[n >> 2];
                    i[(ue + 4) >> 2] = i[(n + 4) >> 2];
                    i[(ue + 8) >> 2] = i[(n + 8) >> 2];
                    i[(ue + 12) >> 2] = i[(n + 12) >> 2];
                    i[(ue + 16) >> 2] = i[(n + 16) >> 2];
                    i[(ue + 20) >> 2] = i[(n + 20) >> 2];
                    i[n >> 2] = i[M >> 2];
                    i[(n + 4) >> 2] = i[(M + 4) >> 2];
                    i[(n + 8) >> 2] = i[(M + 8) >> 2];
                    i[(n + 12) >> 2] = i[(M + 12) >> 2];
                    i[(n + 16) >> 2] = i[(M + 16) >> 2];
                    i[(n + 20) >> 2] = i[(M + 20) >> 2];
                    M = (n + ((_ * 24) | 0)) | 0;
                    i[M >> 2] = i[ue >> 2];
                    i[(M + 4) >> 2] = i[(ue + 4) >> 2];
                    i[(M + 8) >> 2] = i[(ue + 8) >> 2];
                    i[(M + 12) >> 2] = i[(ue + 12) >> 2];
                    i[(M + 16) >> 2] = i[(ue + 16) >> 2];
                    i[(M + 20) >> 2] = i[(ue + 20) >> 2];
                  } else if ((ae | 0) == 33) {
                    ae = 0;
                    fe = (n + ((_ * 24) | 0)) | 0;
                    i[fe >> 2] = i[M >> 2];
                    i[(fe + 4) >> 2] = i[(M + 4) >> 2];
                    i[(fe + 8) >> 2] = i[(M + 8) >> 2];
                    i[(fe + 12) >> 2] = i[(M + 12) >> 2];
                    i[(fe + 16) >> 2] = i[(M + 16) >> 2];
                    i[(fe + 20) >> 2] = i[(M + 20) >> 2];
                  }
                  _ = (_ + 1) | 0;
                }
                q = (q + 1) | 0;
              }
              i[ge >> 2] = _;
              _ = 0;
              while (1) {
                if ((_ | 0) == (k | 0)) break;
                sb(e, r, te, i[(o + (_ << 2)) >> 2] | 0, h, n, ge);
                _ = (_ + 1) | 0;
              }
              re = (re + -1) | 0;
            }
          }
          w = de;
          return re | 0;
        }
        function ub(e, r, s, n, d, p, k, _, M, j, q, $) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          d = d | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          var ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0.0,
            Ae = 0.0,
            ae = 0,
            ce = 0,
            le = 0.0,
            ue = 0.0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Pe = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0;
          nt = w;
          w = (w + 2304) | 0;
          tt = (nt + 512) | 0;
          $e = nt;
          st = (nt + 2048) | 0;
          rt = (nt + 1536) | 0;
          oe = r;
          ae = s >>> 0 < 98304 ? s : 98304;
          ce = i[q >> 2] | 0;
          Ze = (64 - ((_e(p | 0) | 0) ^ 31)) | 0;
          if (!p) et(405532, 405401, 464, 405439);
          if (p >>> 0 >= 2147483649) et(405605, 405401, 465, 405439);
          ee = (p + -1) | 0;
          if (ee & p) et(405630, 405401, 467, 405439);
          ze = bc(16777215, -1, Ze | 0) | 0;
          if ((ee | 0) != (ze | 0)) et(405667, 405401, 469, 405439);
          if (!s) {
            if (!n) et(405466, 405401, 472, 405439);
            e = ($ + (ce >>> 3)) | 0;
            d = a[e >> 0] | 0;
            st = cc(1, 0, (ce & 7) | 0) | 0;
            ot = de;
            st = d | st;
            d = e;
            o[d >> 0] = st;
            o[(d + 1) >> 0] = st >> 8;
            o[(d + 2) >> 0] = st >> 16;
            o[(d + 3) >> 0] = st >> 24;
            e = (e + 4) | 0;
            o[e >> 0] = ot;
            o[(e + 1) >> 0] = ot >> 8;
            o[(e + 2) >> 0] = ot >> 16;
            o[(e + 3) >> 0] = ot >> 24;
            e = ((i[q >> 2] | 0) + 1) | 0;
            i[q >> 2] = e;
            ot = ($ + (e >>> 3)) | 0;
            $ = a[ot >> 0] | 0;
            e = cc(1, 0, (e & 7) | 0) | 0;
            d = de;
            e = $ | e;
            $ = ot;
            o[$ >> 0] = e;
            o[($ + 1) >> 0] = e >> 8;
            o[($ + 2) >> 0] = e >> 16;
            o[($ + 3) >> 0] = e >> 24;
            ot = (ot + 4) | 0;
            o[ot >> 0] = d;
            o[(ot + 1) >> 0] = d >> 8;
            o[(ot + 2) >> 0] = d >> 16;
            o[(ot + 3) >> 0] = d >> 24;
            i[q >> 2] = ((i[q >> 2] | 0) + 8) & -8;
            w = nt;
            return;
          }
          vb(ae, 0, q, $);
          ne = ($ + ((i[q >> 2] | 0) >>> 3)) | 0;
          ze = a[ne >> 0] | 0;
          ee = ne;
          o[ee >> 0] = ze;
          o[(ee + 1) >> 0] = ze >> 8;
          o[(ee + 2) >> 0] = ze >> 16;
          o[(ee + 3) >> 0] = ze >> 24;
          ne = (ne + 4) | 0;
          o[ne >> 0] = 0;
          o[(ne + 1) >> 0] = 0;
          o[(ne + 2) >> 0] = 0;
          o[(ne + 3) >> 0] = 0;
          i[q >> 2] = (i[q >> 2] | 0) + 13;
          ne = wb(e, r, ae, st, rt, q, $) | 0;
          ee = 0;
          while (1) {
            p = i[M >> 2] | 0;
            if ((ee | 7) >>> 0 >= p >>> 0) break;
            We = i[q >> 2] | 0;
            ze = ($ + (We >>> 3)) | 0;
            Ke = a[ze >> 0] | 0;
            We = cc(a[(j + (ee >>> 3)) >> 0] | 0, 0, (We & 7) | 0) | 0;
            Xe = de;
            We = Ke | We;
            Ke = ze;
            o[Ke >> 0] = We;
            o[(Ke + 1) >> 0] = We >> 8;
            o[(Ke + 2) >> 0] = We >> 16;
            o[(Ke + 3) >> 0] = We >> 24;
            ze = (ze + 4) | 0;
            o[ze >> 0] = Xe;
            o[(ze + 1) >> 0] = Xe >> 8;
            o[(ze + 2) >> 0] = Xe >> 16;
            o[(ze + 3) >> 0] = Xe >> 24;
            i[q >> 2] = (i[q >> 2] | 0) + 8;
            ee = (ee + 8) | 0;
          }
          se = p & 7;
          ee = a[(j + (p >>> 3)) >> 0] | 0;
          p = i[q >> 2] | 0;
          te = ($ + (p >>> 3)) | 0;
          re = a[te >> 0] | 0;
          ze = bc(ee | 0, 0, se | 0) | 0;
          if (!(((ze | 0) == 0) & ((de | 0) == 0))) et(406196, 406218, 54, 406251);
          Pe = cc(ee | 0, 0, (p & 7) | 0) | 0;
          Ue = de;
          Pe = re | Pe;
          Oe = te;
          Ge = Oe;
          o[Ge >> 0] = Pe;
          o[(Ge + 1) >> 0] = Pe >> 8;
          o[(Ge + 2) >> 0] = Pe >> 16;
          o[(Ge + 3) >> 0] = Pe >> 24;
          Oe = (Oe + 4) | 0;
          o[Oe >> 0] = Ue;
          o[(Oe + 1) >> 0] = Ue >> 8;
          o[(Oe + 2) >> 0] = Ue >> 16;
          o[(Oe + 3) >> 0] = Ue >> 24;
          i[q >> 2] = (i[q >> 2] | 0) + se;
          Oe = r;
          Ue = (k + 61) | 0;
          Ge = (_ + 122) | 0;
          Pe = ($e + 84) | 0;
          Le = (k + 64) | 0;
          Me = (_ + 128) | 0;
          xe = ($e + 256) | 0;
          He = (k + 39) | 0;
          Ve = (_ + 78) | 0;
          Ye = ($e + 188) | 0;
          je = ($e + 256) | 0;
          qe = (k + 62) | 0;
          Je = (_ + 124) | 0;
          We = ($e + 88) | 0;
          Ke = (k + 63) | 0;
          Xe = (_ + 126) | 0;
          ze = ($e + 92) | 0;
          p = s;
          ee = oe;
          re = ae;
          te = ne;
          e: while (1) {
            ve = (ce + 3) | 0;
            Se = te >>> 0 > 980;
            Re = ee;
            De = re;
            se = ee;
            Fe = re;
            t: while (1) {
              dc($e | 0, 17764, 512) | 0;
              Te = Re;
              te = (Te + De) | 0;
              Ne = te;
              r: do {
                if (De >>> 0 > 15) {
                  oe = (De + -5) | 0;
                  ke = (p + -16) | 0;
                  ke = (Te + (oe >>> 0 < ke >>> 0 ? oe : ke)) | 0;
                  oe = (Te + 1) | 0;
                  s = oe;
                  re = s;
                  s = (s + 4) | 0;
                  re = a[re >> 0] | (a[(re + 1) >> 0] << 8) | (a[(re + 2) >> 0] << 16) | (a[(re + 3) >> 0] << 24);
                  s = a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24);
                  me = -1;
                  while (1) {
                    re = lc(re | 0, s | 0, -1124073472, 1979815) | 0;
                    re = bc(re | 0, de | 0, Ze | 0) | 0;
                    Ie = se;
                    if (Ie >>> 0 >= oe >>> 0) {
                      ot = 24;
                      break e;
                    }
                    fe = (0 - me) | 0;
                    we = oe;
                    ge = 32;
                    while (1) {
                      he = we;
                      s = ge;
                      ge = (ge + 1) | 0;
                      ye = we;
                      be = ye;
                      ye = (ye + 4) | 0;
                      ye =
                        lc(
                          a[be >> 0] | (a[(be + 1) >> 0] << 8) | (a[(be + 2) >> 0] << 16) | (a[(be + 3) >> 0] << 24) | 0,
                          a[ye >> 0] | (a[(ye + 1) >> 0] << 8) | (a[(ye + 2) >> 0] << 16) | (a[(ye + 3) >> 0] << 24) | 0,
                          -1124073472,
                          1979815
                        ) | 0;
                      ye = bc(ye | 0, de | 0, Ze | 0) | 0;
                      if ((re | 0) != (ye | 0)) {
                        ot = 26;
                        break e;
                      }
                      ne = (we + (s >>> 5)) | 0;
                      if (ne >>> 0 > ke >>> 0) break r;
                      ae = ne;
                      s = ae;
                      ae = (ae + 4) | 0;
                      ae =
                        lc(
                          a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24) | 0,
                          a[ae >> 0] | (a[(ae + 1) >> 0] << 8) | (a[(ae + 2) >> 0] << 16) | (a[(ae + 3) >> 0] << 24) | 0,
                          -1124073472,
                          1979815
                        ) | 0;
                      ae = bc(ae | 0, de | 0, Ze | 0) | 0;
                      s = (we + fe) | 0;
                      if (
                        (a[we >> 0] | (a[(we + 1) >> 0] << 8) | (a[(we + 2) >> 0] << 16) | (a[(we + 3) >> 0] << 24) | 0) ==
                        (a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24) | 0)
                          ? (fe | 0) < 0
                            ? (o[(we + 4) >> 0] | 0) == (o[(we + (4 - me)) >> 0] | 0)
                            : 0
                          : 0
                      ) {
                        ot = 30;
                        break;
                      }
                      re = (d + (re << 2)) | 0;
                      oe = i[re >> 2] | 0;
                      s = (r + oe) | 0;
                      if ((oe | 0) < 0) {
                        ot = 32;
                        break e;
                      }
                      if (s >>> 0 >= we >>> 0) {
                        ot = 34;
                        break e;
                      }
                      i[re >> 2] = he - Oe;
                      if (
                        (a[we >> 0] | (a[(we + 1) >> 0] << 8) | (a[(we + 2) >> 0] << 16) | (a[(we + 3) >> 0] << 24) | 0) !=
                        (a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24) | 0)
                      ) {
                        re = ae;
                        we = ne;
                        continue;
                      }
                      if ((o[(we + 4) >> 0] | 0) == (o[(r + (oe + 4)) >> 0] | 0)) break;
                      else {
                        re = ae;
                        we = ne;
                      }
                    }
                    if ((ot | 0) == 30) {
                      ot = 0;
                      i[(d + (re << 2)) >> 2] = he - Oe;
                    }
                    ne = s;
                    ye = (Te + (De + -4)) | 0;
                    re = 0;
                    oe = (we + 5) | 0;
                    while (1) {
                      if (oe >>> 0 > ye >>> 0) {
                        be = re;
                        re = oe;
                        break;
                      }
                      be = (s + (re + 5)) | 0;
                      if (
                        (a[oe >> 0] | (a[(oe + 1) >> 0] << 8) | (a[(oe + 2) >> 0] << 16) | (a[(oe + 3) >> 0] << 24) | 0) !=
                        (a[be >> 0] | (a[(be + 1) >> 0] << 8) | (a[(be + 2) >> 0] << 16) | (a[(be + 3) >> 0] << 24) | 0)
                      ) {
                        be = re;
                        re = oe;
                        break;
                      }
                      re = (re + 4) | 0;
                      oe = (oe + 4) | 0;
                    }
                    while (1) {
                      if (re >>> 0 >= te >>> 0) break;
                      if ((o[(s + (be + 5)) >> 0] | 0) != (o[re >> 0] | 0)) break;
                      be = (be + 1) | 0;
                      re = (re + 1) | 0;
                    }
                    Ce = (be + 5) | 0;
                    pe = (he - ne) | 0;
                    Ee = (he - se) | 0;
                    Be = (we + Ce) | 0;
                    Qe = Be;
                    s: do {
                      if (Ce) {
                        ne = Ce;
                        ae = we;
                        while (1) {
                          re = o[ae >> 0] | 0;
                          oe = o[s >> 0] | 0;
                          if ((re << 24) >> 24 != (oe << 24) >> 24) break;
                          ne = (ne + -1) | 0;
                          if (!ne) break s;
                          else {
                            ae = (ae + 1) | 0;
                            s = (s + 1) | 0;
                          }
                        }
                        if ((re << 24) >> 24 != (oe << 24) >> 24) {
                          ot = 48;
                          break e;
                        }
                      }
                    } while (0);
                    do {
                      if (Ee >>> 0 >= 6210) {
                        if (!((((((se - ee) | 0) * 50) | 0) >>> 0 > Ee >>> 0) | (Se ^ 1))) {
                          ot = 84;
                          break t;
                        }
                        if (Ee >>> 0 < 22594) {
                          re = o[qe >> 0] | 0;
                          se = l[Je >> 1] | 0;
                          s = i[q >> 2] | 0;
                          oe = ($ + (s >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          he = bc(se | 0, 0, (re & 255) | 0) | 0;
                          if (!(((he | 0) == 0) & ((de | 0) == 0))) {
                            ot = 87;
                            break e;
                          }
                          if ((re & 255) >= 57) {
                            ot = 89;
                            break e;
                          }
                          he = cc(se | 0, 0, (s & 7) | 0) | 0;
                          s = de;
                          he = ne | he;
                          se = oe;
                          oe = se;
                          o[oe >> 0] = he;
                          o[(oe + 1) >> 0] = he >> 8;
                          o[(oe + 2) >> 0] = he >> 16;
                          o[(oe + 3) >> 0] = he >> 24;
                          se = (se + 4) | 0;
                          o[se >> 0] = s;
                          o[(se + 1) >> 0] = s >> 8;
                          o[(se + 2) >> 0] = s >> 16;
                          o[(se + 3) >> 0] = s >> 24;
                          re = ((i[q >> 2] | 0) + (re & 255)) | 0;
                          i[q >> 2] = re;
                          se = (Ee + -6210) | 0;
                          s = ($ + (re >>> 3)) | 0;
                          oe = a[s >> 0] | 0;
                          if (!((((se & -16384) | 0) == 0) & (0 == 0))) {
                            ot = 91;
                            break e;
                          }
                          ge = cc(se | 0, 0, (re & 7) | 0) | 0;
                          he = de;
                          ge = oe | ge;
                          ae = s;
                          fe = ae;
                          o[fe >> 0] = ge;
                          o[(fe + 1) >> 0] = ge >> 8;
                          o[(fe + 2) >> 0] = ge >> 16;
                          o[(fe + 3) >> 0] = ge >> 24;
                          ae = (ae + 4) | 0;
                          o[ae >> 0] = he;
                          o[(ae + 1) >> 0] = he >> 8;
                          o[(ae + 2) >> 0] = he >> 16;
                          o[(ae + 3) >> 0] = he >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + 14;
                          i[We >> 2] = (i[We >> 2] | 0) + 1;
                          ae = 0;
                          break;
                        } else {
                          re = o[Ke >> 0] | 0;
                          se = l[Xe >> 1] | 0;
                          s = i[q >> 2] | 0;
                          oe = ($ + (s >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          he = bc(se | 0, 0, (re & 255) | 0) | 0;
                          if (!(((he | 0) == 0) & ((de | 0) == 0))) {
                            ot = 94;
                            break e;
                          }
                          if ((re & 255) >= 57) {
                            ot = 96;
                            break e;
                          }
                          he = cc(se | 0, 0, (s & 7) | 0) | 0;
                          s = de;
                          he = ne | he;
                          se = oe;
                          oe = se;
                          o[oe >> 0] = he;
                          o[(oe + 1) >> 0] = he >> 8;
                          o[(oe + 2) >> 0] = he >> 16;
                          o[(oe + 3) >> 0] = he >> 24;
                          se = (se + 4) | 0;
                          o[se >> 0] = s;
                          o[(se + 1) >> 0] = s >> 8;
                          o[(se + 2) >> 0] = s >> 16;
                          o[(se + 3) >> 0] = s >> 24;
                          re = ((i[q >> 2] | 0) + (re & 255)) | 0;
                          i[q >> 2] = re;
                          se = (Ee + -22594) | 0;
                          s = ($ + (re >>> 3)) | 0;
                          oe = a[s >> 0] | 0;
                          if (!((((se & -16777216) | 0) == 0) & (0 == 0))) {
                            ot = 98;
                            break e;
                          }
                          ge = cc(se | 0, 0, (re & 7) | 0) | 0;
                          he = de;
                          ge = oe | ge;
                          ae = s;
                          fe = ae;
                          o[fe >> 0] = ge;
                          o[(fe + 1) >> 0] = ge >> 8;
                          o[(fe + 2) >> 0] = ge >> 16;
                          o[(fe + 3) >> 0] = ge >> 24;
                          ae = (ae + 4) | 0;
                          o[ae >> 0] = he;
                          o[(ae + 1) >> 0] = he >> 8;
                          o[(ae + 2) >> 0] = he >> 16;
                          o[(ae + 3) >> 0] = he >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + 24;
                          i[ze >> 2] = (i[ze >> 2] | 0) + 1;
                          ae = 0;
                          break;
                        }
                      } else {
                        if (Ee >>> 0 < 6) {
                          re = (Ee + 40) | 0;
                          se = o[(k + re) >> 0] | 0;
                          s = l[(_ + (re << 1)) >> 1] | 0;
                          oe = i[q >> 2] | 0;
                          ne = ($ + (oe >>> 3)) | 0;
                          ae = a[ne >> 0] | 0;
                          he = bc(s | 0, 0, (se & 255) | 0) | 0;
                          if (!(((he | 0) == 0) & ((de | 0) == 0))) {
                            ot = 52;
                            break e;
                          }
                          if ((se & 255) >= 57) {
                            ot = 54;
                            break e;
                          }
                          ge = cc(s | 0, 0, (oe & 7) | 0) | 0;
                          he = de;
                          ge = ae | ge;
                          ae = ne;
                          fe = ae;
                          o[fe >> 0] = ge;
                          o[(fe + 1) >> 0] = ge >> 8;
                          o[(fe + 2) >> 0] = ge >> 16;
                          o[(fe + 3) >> 0] = ge >> 24;
                          ae = (ae + 4) | 0;
                          o[ae >> 0] = he;
                          o[(ae + 1) >> 0] = he >> 8;
                          o[(ae + 2) >> 0] = he >> 16;
                          o[(ae + 3) >> 0] = he >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + (se & 255);
                          ae = ($e + (re << 2)) | 0;
                          i[ae >> 2] = (i[ae >> 2] | 0) + 1;
                          ae = 0;
                          break;
                        }
                        if (Ee >>> 0 < 130) {
                          ae = (Ee + -2) | 0;
                          fe = (((_e(ae | 0) | 0) ^ 31) + -1) | 0;
                          ge = ae >>> fe;
                          he = ((fe << 1) + ge + 42) | 0;
                          re = o[(k + he) >> 0] | 0;
                          se = l[(_ + (he << 1)) >> 1] | 0;
                          s = i[q >> 2] | 0;
                          oe = ($ + (s >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          it = bc(se | 0, 0, (re & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 58;
                            break e;
                          }
                          if ((re & 255) >= 57) {
                            ot = 60;
                            break e;
                          }
                          it = cc(se | 0, 0, (s & 7) | 0) | 0;
                          se = de;
                          it = ne | it;
                          s = oe;
                          o[s >> 0] = it;
                          o[(s + 1) >> 0] = it >> 8;
                          o[(s + 2) >> 0] = it >> 16;
                          o[(s + 3) >> 0] = it >> 24;
                          oe = (oe + 4) | 0;
                          o[oe >> 0] = se;
                          o[(oe + 1) >> 0] = se >> 8;
                          o[(oe + 2) >> 0] = se >> 16;
                          o[(oe + 3) >> 0] = se >> 24;
                          oe = ((i[q >> 2] | 0) + (re & 255)) | 0;
                          i[q >> 2] = oe;
                          re = (ae - (ge << fe)) | 0;
                          se = ($ + (oe >>> 3)) | 0;
                          s = a[se >> 0] | 0;
                          it = bc(re | 0, 0, fe | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 62;
                            break e;
                          }
                          if (fe >>> 0 >= 57) {
                            ot = 64;
                            break e;
                          }
                          ne = cc(re | 0, 0, (oe & 7) | 0) | 0;
                          it = de;
                          ne = s | ne;
                          ae = se;
                          ge = ae;
                          o[ge >> 0] = ne;
                          o[(ge + 1) >> 0] = ne >> 8;
                          o[(ge + 2) >> 0] = ne >> 16;
                          o[(ge + 3) >> 0] = ne >> 24;
                          ae = (ae + 4) | 0;
                          o[ae >> 0] = it;
                          o[(ae + 1) >> 0] = it >> 8;
                          o[(ae + 2) >> 0] = it >> 16;
                          o[(ae + 3) >> 0] = it >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + fe;
                          ae = ($e + (he << 2)) | 0;
                          i[ae >> 2] = (i[ae >> 2] | 0) + 1;
                          ae = 0;
                          break;
                        }
                        if (Ee >>> 0 >= 2114) {
                          re = o[Ue >> 0] | 0;
                          se = l[Ge >> 1] | 0;
                          s = i[q >> 2] | 0;
                          oe = ($ + (s >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          it = bc(se | 0, 0, (re & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 77;
                            break e;
                          }
                          if ((re & 255) >= 57) {
                            ot = 79;
                            break e;
                          }
                          it = cc(se | 0, 0, (s & 7) | 0) | 0;
                          s = de;
                          it = ne | it;
                          se = oe;
                          oe = se;
                          o[oe >> 0] = it;
                          o[(oe + 1) >> 0] = it >> 8;
                          o[(oe + 2) >> 0] = it >> 16;
                          o[(oe + 3) >> 0] = it >> 24;
                          se = (se + 4) | 0;
                          o[se >> 0] = s;
                          o[(se + 1) >> 0] = s >> 8;
                          o[(se + 2) >> 0] = s >> 16;
                          o[(se + 3) >> 0] = s >> 24;
                          re = ((i[q >> 2] | 0) + (re & 255)) | 0;
                          i[q >> 2] = re;
                          se = (Ee + -2114) | 0;
                          s = ($ + (re >>> 3)) | 0;
                          oe = a[s >> 0] | 0;
                          if (!((((se & -4096) | 0) == 0) & (0 == 0))) {
                            ot = 81;
                            break e;
                          }
                          fe = cc(se | 0, 0, (re & 7) | 0) | 0;
                          it = de;
                          fe = oe | fe;
                          ae = s;
                          he = ae;
                          o[he >> 0] = fe;
                          o[(he + 1) >> 0] = fe >> 8;
                          o[(he + 2) >> 0] = fe >> 16;
                          o[(he + 3) >> 0] = fe >> 24;
                          ae = (ae + 4) | 0;
                          o[ae >> 0] = it;
                          o[(ae + 1) >> 0] = it >> 8;
                          o[(ae + 2) >> 0] = it >> 16;
                          o[(ae + 3) >> 0] = it >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + 12;
                          i[Pe >> 2] = (i[Pe >> 2] | 0) + 1;
                          ae = 0;
                          break;
                        }
                        ae = (Ee + -66) | 0;
                        ge = (_e(ae | 0) | 0) ^ 31;
                        fe = (ge + 50) | 0;
                        re = o[(k + fe) >> 0] | 0;
                        se = l[(_ + (fe << 1)) >> 1] | 0;
                        s = i[q >> 2] | 0;
                        oe = ($ + (s >>> 3)) | 0;
                        ne = a[oe >> 0] | 0;
                        it = bc(se | 0, 0, (re & 255) | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 68;
                          break e;
                        }
                        if ((re & 255) >= 57) {
                          ot = 70;
                          break e;
                        }
                        it = cc(se | 0, 0, (s & 7) | 0) | 0;
                        se = de;
                        it = ne | it;
                        s = oe;
                        o[s >> 0] = it;
                        o[(s + 1) >> 0] = it >> 8;
                        o[(s + 2) >> 0] = it >> 16;
                        o[(s + 3) >> 0] = it >> 24;
                        oe = (oe + 4) | 0;
                        o[oe >> 0] = se;
                        o[(oe + 1) >> 0] = se >> 8;
                        o[(oe + 2) >> 0] = se >> 16;
                        o[(oe + 3) >> 0] = se >> 24;
                        oe = ((i[q >> 2] | 0) + (re & 255)) | 0;
                        i[q >> 2] = oe;
                        re = (ae - (1 << ge)) | 0;
                        se = ($ + (oe >>> 3)) | 0;
                        s = a[se >> 0] | 0;
                        it = bc(re | 0, 0, ge | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 72;
                          break e;
                        }
                        if (ge >>> 0 >= 57) {
                          ot = 74;
                          break e;
                        }
                        ne = cc(re | 0, 0, (oe & 7) | 0) | 0;
                        it = de;
                        ne = s | ne;
                        ae = se;
                        he = ae;
                        o[he >> 0] = ne;
                        o[(he + 1) >> 0] = ne >> 8;
                        o[(he + 2) >> 0] = ne >> 16;
                        o[(he + 3) >> 0] = ne >> 24;
                        ae = (ae + 4) | 0;
                        o[ae >> 0] = it;
                        o[(ae + 1) >> 0] = it >> 8;
                        o[(ae + 2) >> 0] = it >> 16;
                        o[(ae + 3) >> 0] = it >> 24;
                        i[q >> 2] = (i[q >> 2] | 0) + ge;
                        ae = ($e + (fe << 2)) | 0;
                        i[ae >> 2] = (i[ae >> 2] | 0) + 1;
                        ae = 0;
                      }
                    } while (0);
                    while (1) {
                      if (ae >>> 0 >= Ee >>> 0) break;
                      se = a[(Ie + ae) >> 0] | 0;
                      re = o[(st + se) >> 0] | 0;
                      se = l[(rt + (se << 1)) >> 1] | 0;
                      s = i[q >> 2] | 0;
                      oe = ($ + (s >>> 3)) | 0;
                      ne = a[oe >> 0] | 0;
                      it = bc(se | 0, 0, (re & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 102;
                        break e;
                      }
                      if ((re & 255) >= 57) {
                        ot = 104;
                        break e;
                      }
                      ge = cc(se | 0, 0, (s & 7) | 0) | 0;
                      he = de;
                      ge = ne | ge;
                      it = oe;
                      fe = it;
                      o[fe >> 0] = ge;
                      o[(fe + 1) >> 0] = ge >> 8;
                      o[(fe + 2) >> 0] = ge >> 16;
                      o[(fe + 3) >> 0] = ge >> 24;
                      it = (it + 4) | 0;
                      o[it >> 0] = he;
                      o[(it + 1) >> 0] = he >> 8;
                      o[(it + 2) >> 0] = he >> 16;
                      o[(it + 3) >> 0] = he >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + (re & 255);
                      ae = (ae + 1) | 0;
                    }
                    if ((pe | 0) == (me | 0)) {
                      re = o[Le >> 0] | 0;
                      se = l[Me >> 1] | 0;
                      s = i[q >> 2] | 0;
                      oe = ($ + (s >>> 3)) | 0;
                      ne = a[oe >> 0] | 0;
                      it = bc(se | 0, 0, (re & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 108;
                        break e;
                      }
                      if ((re & 255) >= 57) {
                        ot = 110;
                        break e;
                      }
                      Ee = cc(se | 0, 0, (s & 7) | 0) | 0;
                      it = de;
                      Ee = ne | Ee;
                      pe = oe;
                      Ie = pe;
                      o[Ie >> 0] = Ee;
                      o[(Ie + 1) >> 0] = Ee >> 8;
                      o[(Ie + 2) >> 0] = Ee >> 16;
                      o[(Ie + 3) >> 0] = Ee >> 24;
                      pe = (pe + 4) | 0;
                      o[pe >> 0] = it;
                      o[(pe + 1) >> 0] = it >> 8;
                      o[(pe + 2) >> 0] = it >> 16;
                      o[(pe + 3) >> 0] = it >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + (re & 255);
                      i[xe >> 2] = (i[xe >> 2] | 0) + 1;
                      pe = me;
                    } else {
                      ae = (pe + 3) | 0;
                      fe = (((_e(ae | 0) | 0) ^ 31) + -1) | 0;
                      ge = (ae >>> fe) & 1;
                      he = ((((fe << 1) + -2) | ge) + 80) | 0;
                      re = o[(k + he) >> 0] | 0;
                      se = l[(_ + (he << 1)) >> 1] | 0;
                      s = i[q >> 2] | 0;
                      oe = ($ + (s >>> 3)) | 0;
                      ne = a[oe >> 0] | 0;
                      it = bc(se | 0, 0, (re & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 113;
                        break e;
                      }
                      if ((re & 255) >= 57) {
                        ot = 115;
                        break e;
                      }
                      it = cc(se | 0, 0, (s & 7) | 0) | 0;
                      se = de;
                      it = ne | it;
                      s = oe;
                      o[s >> 0] = it;
                      o[(s + 1) >> 0] = it >> 8;
                      o[(s + 2) >> 0] = it >> 16;
                      o[(s + 3) >> 0] = it >> 24;
                      oe = (oe + 4) | 0;
                      o[oe >> 0] = se;
                      o[(oe + 1) >> 0] = se >> 8;
                      o[(oe + 2) >> 0] = se >> 16;
                      o[(oe + 3) >> 0] = se >> 24;
                      oe = ((i[q >> 2] | 0) + (re & 255)) | 0;
                      i[q >> 2] = oe;
                      re = (ae - ((ge | 2) << fe)) | 0;
                      se = ($ + (oe >>> 3)) | 0;
                      s = a[se >> 0] | 0;
                      it = bc(re | 0, 0, fe | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 117;
                        break e;
                      }
                      if (fe >>> 0 >= 57) {
                        ot = 119;
                        break e;
                      }
                      Ee = cc(re | 0, 0, (oe & 7) | 0) | 0;
                      me = de;
                      Ee = s | Ee;
                      it = se;
                      Ie = it;
                      o[Ie >> 0] = Ee;
                      o[(Ie + 1) >> 0] = Ee >> 8;
                      o[(Ie + 2) >> 0] = Ee >> 16;
                      o[(Ie + 3) >> 0] = Ee >> 24;
                      it = (it + 4) | 0;
                      o[it >> 0] = me;
                      o[(it + 1) >> 0] = me >> 8;
                      o[(it + 2) >> 0] = me >> 16;
                      o[(it + 3) >> 0] = me >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + fe;
                      it = ($e + (he << 2)) | 0;
                      i[it >> 2] = (i[it >> 2] | 0) + 1;
                    }
                    do {
                      if (Ce >>> 0 < 12) {
                        re = (be + 1) | 0;
                        se = o[(k + re) >> 0] | 0;
                        s = l[(_ + (re << 1)) >> 1] | 0;
                        oe = i[q >> 2] | 0;
                        ne = ($ + (oe >>> 3)) | 0;
                        ae = a[ne >> 0] | 0;
                        it = bc(s | 0, 0, (se & 255) | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 123;
                          break e;
                        }
                        if ((se & 255) >= 57) {
                          ot = 125;
                          break e;
                        }
                        Ie = cc(s | 0, 0, (oe & 7) | 0) | 0;
                        me = de;
                        Ie = ae | Ie;
                        it = ne;
                        Ce = it;
                        o[Ce >> 0] = Ie;
                        o[(Ce + 1) >> 0] = Ie >> 8;
                        o[(Ce + 2) >> 0] = Ie >> 16;
                        o[(Ce + 3) >> 0] = Ie >> 24;
                        it = (it + 4) | 0;
                        o[it >> 0] = me;
                        o[(it + 1) >> 0] = me >> 8;
                        o[(it + 2) >> 0] = me >> 16;
                        o[(it + 3) >> 0] = me >> 24;
                        i[q >> 2] = (i[q >> 2] | 0) + (se & 255);
                        it = ($e + (re << 2)) | 0;
                        i[it >> 2] = (i[it >> 2] | 0) + 1;
                      } else {
                        if (Ce >>> 0 < 72) {
                          ae = (be + -3) | 0;
                          fe = (((_e(ae | 0) | 0) ^ 31) + -1) | 0;
                          ge = ae >>> fe;
                          he = ((fe << 1) + ge + 4) | 0;
                          re = o[(k + he) >> 0] | 0;
                          se = l[(_ + (he << 1)) >> 1] | 0;
                          s = i[q >> 2] | 0;
                          oe = ($ + (s >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          it = bc(se | 0, 0, (re & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 129;
                            break e;
                          }
                          if ((re & 255) >= 57) {
                            ot = 131;
                            break e;
                          }
                          it = cc(se | 0, 0, (s & 7) | 0) | 0;
                          se = de;
                          it = ne | it;
                          s = oe;
                          o[s >> 0] = it;
                          o[(s + 1) >> 0] = it >> 8;
                          o[(s + 2) >> 0] = it >> 16;
                          o[(s + 3) >> 0] = it >> 24;
                          oe = (oe + 4) | 0;
                          o[oe >> 0] = se;
                          o[(oe + 1) >> 0] = se >> 8;
                          o[(oe + 2) >> 0] = se >> 16;
                          o[(oe + 3) >> 0] = se >> 24;
                          oe = ((i[q >> 2] | 0) + (re & 255)) | 0;
                          i[q >> 2] = oe;
                          re = (ae - (ge << fe)) | 0;
                          se = ($ + (oe >>> 3)) | 0;
                          s = a[se >> 0] | 0;
                          it = bc(re | 0, 0, fe | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 133;
                            break e;
                          }
                          if (fe >>> 0 >= 57) {
                            ot = 135;
                            break e;
                          }
                          Ie = cc(re | 0, 0, (oe & 7) | 0) | 0;
                          me = de;
                          Ie = s | Ie;
                          it = se;
                          Ce = it;
                          o[Ce >> 0] = Ie;
                          o[(Ce + 1) >> 0] = Ie >> 8;
                          o[(Ce + 2) >> 0] = Ie >> 16;
                          o[(Ce + 3) >> 0] = Ie >> 24;
                          it = (it + 4) | 0;
                          o[it >> 0] = me;
                          o[(it + 1) >> 0] = me >> 8;
                          o[(it + 2) >> 0] = me >> 16;
                          o[(it + 3) >> 0] = me >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + fe;
                          it = ($e + (he << 2)) | 0;
                          i[it >> 2] = (i[it >> 2] | 0) + 1;
                          break;
                        }
                        if (Ce >>> 0 < 136) {
                          re = (be + -3) | 0;
                          ge = ((re >>> 5) + 30) | 0;
                          se = o[(k + ge) >> 0] | 0;
                          s = l[(_ + (ge << 1)) >> 1] | 0;
                          oe = i[q >> 2] | 0;
                          ne = ($ + (oe >>> 3)) | 0;
                          ae = a[ne >> 0] | 0;
                          it = bc(s | 0, 0, (se & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 139;
                            break e;
                          }
                          if ((se & 255) >= 57) {
                            ot = 141;
                            break e;
                          }
                          it = cc(s | 0, 0, (oe & 7) | 0) | 0;
                          s = de;
                          it = ae | it;
                          oe = ne;
                          ne = oe;
                          o[ne >> 0] = it;
                          o[(ne + 1) >> 0] = it >> 8;
                          o[(ne + 2) >> 0] = it >> 16;
                          o[(ne + 3) >> 0] = it >> 24;
                          oe = (oe + 4) | 0;
                          o[oe >> 0] = s;
                          o[(oe + 1) >> 0] = s >> 8;
                          o[(oe + 2) >> 0] = s >> 16;
                          o[(oe + 3) >> 0] = s >> 24;
                          oe = ((i[q >> 2] | 0) + (se & 255)) | 0;
                          i[q >> 2] = oe;
                          s = ($ + (oe >>> 3)) | 0;
                          ne = a[s >> 0] | 0;
                          oe = cc((re & 31) | 0, 0, (oe & 7) | 0) | 0;
                          se = de;
                          oe = ne | oe;
                          re = s;
                          s = re;
                          o[s >> 0] = oe;
                          o[(s + 1) >> 0] = oe >> 8;
                          o[(s + 2) >> 0] = oe >> 16;
                          o[(s + 3) >> 0] = oe >> 24;
                          re = (re + 4) | 0;
                          o[re >> 0] = se;
                          o[(re + 1) >> 0] = se >> 8;
                          o[(re + 2) >> 0] = se >> 16;
                          o[(re + 3) >> 0] = se >> 24;
                          re = ((i[q >> 2] | 0) + 5) | 0;
                          i[q >> 2] = re;
                          se = o[Le >> 0] | 0;
                          s = l[Me >> 1] | 0;
                          oe = ($ + (re >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          it = bc(s | 0, 0, (se & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 143;
                            break e;
                          }
                          if ((se & 255) >= 57) {
                            ot = 145;
                            break e;
                          }
                          Ie = cc(s | 0, 0, (re & 7) | 0) | 0;
                          me = de;
                          Ie = ne | Ie;
                          it = oe;
                          Ce = it;
                          o[Ce >> 0] = Ie;
                          o[(Ce + 1) >> 0] = Ie >> 8;
                          o[(Ce + 2) >> 0] = Ie >> 16;
                          o[(Ce + 3) >> 0] = Ie >> 24;
                          it = (it + 4) | 0;
                          o[it >> 0] = me;
                          o[(it + 1) >> 0] = me >> 8;
                          o[(it + 2) >> 0] = me >> 16;
                          o[(it + 3) >> 0] = me >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + (se & 255);
                          it = ($e + (ge << 2)) | 0;
                          i[it >> 2] = (i[it >> 2] | 0) + 1;
                          i[je >> 2] = (i[je >> 2] | 0) + 1;
                          break;
                        }
                        if (Ce >>> 0 >= 2120) {
                          re = o[He >> 0] | 0;
                          se = l[Ve >> 1] | 0;
                          s = i[q >> 2] | 0;
                          oe = ($ + (s >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          it = bc(se | 0, 0, (re & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 162;
                            break e;
                          }
                          if ((re & 255) >= 57) {
                            ot = 164;
                            break e;
                          }
                          it = cc(se | 0, 0, (s & 7) | 0) | 0;
                          s = de;
                          it = ne | it;
                          se = oe;
                          oe = se;
                          o[oe >> 0] = it;
                          o[(oe + 1) >> 0] = it >> 8;
                          o[(oe + 2) >> 0] = it >> 16;
                          o[(oe + 3) >> 0] = it >> 24;
                          se = (se + 4) | 0;
                          o[se >> 0] = s;
                          o[(se + 1) >> 0] = s >> 8;
                          o[(se + 2) >> 0] = s >> 16;
                          o[(se + 3) >> 0] = s >> 24;
                          re = ((i[q >> 2] | 0) + (re & 255)) | 0;
                          i[q >> 2] = re;
                          se = (be + -2115) | 0;
                          s = ($ + (re >>> 3)) | 0;
                          oe = a[s >> 0] | 0;
                          if (!((((se & -16777216) | 0) == 0) & (0 == 0))) {
                            ot = 166;
                            break e;
                          }
                          re = cc(se | 0, 0, (re & 7) | 0) | 0;
                          se = de;
                          oe = oe | re;
                          re = s;
                          s = re;
                          o[s >> 0] = oe;
                          o[(s + 1) >> 0] = oe >> 8;
                          o[(s + 2) >> 0] = oe >> 16;
                          o[(s + 3) >> 0] = oe >> 24;
                          re = (re + 4) | 0;
                          o[re >> 0] = se;
                          o[(re + 1) >> 0] = se >> 8;
                          o[(re + 2) >> 0] = se >> 16;
                          o[(re + 3) >> 0] = se >> 24;
                          re = ((i[q >> 2] | 0) + 24) | 0;
                          i[q >> 2] = re;
                          se = o[Le >> 0] | 0;
                          s = l[Me >> 1] | 0;
                          oe = ($ + (re >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          it = bc(s | 0, 0, (se & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 168;
                            break e;
                          }
                          if ((se & 255) >= 57) {
                            ot = 170;
                            break e;
                          }
                          Ie = cc(s | 0, 0, (re & 7) | 0) | 0;
                          me = de;
                          Ie = ne | Ie;
                          it = oe;
                          Ce = it;
                          o[Ce >> 0] = Ie;
                          o[(Ce + 1) >> 0] = Ie >> 8;
                          o[(Ce + 2) >> 0] = Ie >> 16;
                          o[(Ce + 3) >> 0] = Ie >> 24;
                          it = (it + 4) | 0;
                          o[it >> 0] = me;
                          o[(it + 1) >> 0] = me >> 8;
                          o[(it + 2) >> 0] = me >> 16;
                          o[(it + 3) >> 0] = me >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + (se & 255);
                          i[Ye >> 2] = (i[Ye >> 2] | 0) + 1;
                          i[je >> 2] = (i[je >> 2] | 0) + 1;
                          break;
                        }
                        ae = (be + -67) | 0;
                        ge = (_e(ae | 0) | 0) ^ 31;
                        fe = (ge + 28) | 0;
                        re = o[(k + fe) >> 0] | 0;
                        se = l[(_ + (fe << 1)) >> 1] | 0;
                        s = i[q >> 2] | 0;
                        oe = ($ + (s >>> 3)) | 0;
                        ne = a[oe >> 0] | 0;
                        it = bc(se | 0, 0, (re & 255) | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 149;
                          break e;
                        }
                        if ((re & 255) >= 57) {
                          ot = 151;
                          break e;
                        }
                        it = cc(se | 0, 0, (s & 7) | 0) | 0;
                        se = de;
                        it = ne | it;
                        s = oe;
                        o[s >> 0] = it;
                        o[(s + 1) >> 0] = it >> 8;
                        o[(s + 2) >> 0] = it >> 16;
                        o[(s + 3) >> 0] = it >> 24;
                        oe = (oe + 4) | 0;
                        o[oe >> 0] = se;
                        o[(oe + 1) >> 0] = se >> 8;
                        o[(oe + 2) >> 0] = se >> 16;
                        o[(oe + 3) >> 0] = se >> 24;
                        oe = ((i[q >> 2] | 0) + (re & 255)) | 0;
                        i[q >> 2] = oe;
                        re = (ae - (1 << ge)) | 0;
                        se = ($ + (oe >>> 3)) | 0;
                        s = a[se >> 0] | 0;
                        it = bc(re | 0, 0, ge | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 153;
                          break e;
                        }
                        if (ge >>> 0 >= 57) {
                          ot = 155;
                          break e;
                        }
                        re = cc(re | 0, 0, (oe & 7) | 0) | 0;
                        oe = de;
                        s = s | re;
                        re = se;
                        se = re;
                        o[se >> 0] = s;
                        o[(se + 1) >> 0] = s >> 8;
                        o[(se + 2) >> 0] = s >> 16;
                        o[(se + 3) >> 0] = s >> 24;
                        re = (re + 4) | 0;
                        o[re >> 0] = oe;
                        o[(re + 1) >> 0] = oe >> 8;
                        o[(re + 2) >> 0] = oe >> 16;
                        o[(re + 3) >> 0] = oe >> 24;
                        re = ((i[q >> 2] | 0) + ge) | 0;
                        i[q >> 2] = re;
                        se = o[Le >> 0] | 0;
                        s = l[Me >> 1] | 0;
                        oe = ($ + (re >>> 3)) | 0;
                        ne = a[oe >> 0] | 0;
                        it = bc(s | 0, 0, (se & 255) | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 157;
                          break e;
                        }
                        if ((se & 255) >= 57) {
                          ot = 159;
                          break e;
                        }
                        Ie = cc(s | 0, 0, (re & 7) | 0) | 0;
                        me = de;
                        Ie = ne | Ie;
                        it = oe;
                        Ce = it;
                        o[Ce >> 0] = Ie;
                        o[(Ce + 1) >> 0] = Ie >> 8;
                        o[(Ce + 2) >> 0] = Ie >> 16;
                        o[(Ce + 3) >> 0] = Ie >> 24;
                        it = (it + 4) | 0;
                        o[it >> 0] = me;
                        o[(it + 1) >> 0] = me >> 8;
                        o[(it + 2) >> 0] = me >> 16;
                        o[(it + 3) >> 0] = me >> 24;
                        i[q >> 2] = (i[q >> 2] | 0) + (se & 255);
                        it = ($e + (fe << 2)) | 0;
                        i[it >> 2] = (i[it >> 2] | 0) + 1;
                        i[je >> 2] = (i[je >> 2] | 0) + 1;
                      }
                    } while (0);
                    if (Be >>> 0 >= ke >>> 0) {
                      se = Qe;
                      break r;
                    }
                    se = (we + (be + 2)) | 0;
                    it = se;
                    it = a[it >> 0] | (a[(it + 1) >> 0] << 8) | (a[(it + 2) >> 0] << 16) | (a[(it + 3) >> 0] << 24);
                    se = (se + 4) | 0;
                    se = a[se >> 0] | (a[(se + 1) >> 0] << 8) | (a[(se + 2) >> 0] << 16) | (a[(se + 3) >> 0] << 24);
                    we = lc(it | 0, se | 0, -1124073472, 1979815) | 0;
                    we = bc(we | 0, de | 0, Ze | 0) | 0;
                    ne = bc(it | 0, se | 0, 24) | 0;
                    ne = lc(ne | 0, de | 0, -1124073472, 1979815) | 0;
                    ne = bc(ne | 0, de | 0, Ze | 0) | 0;
                    ae = (Be - Oe) | 0;
                    i[(d + (we << 2)) >> 2] = ae + -3;
                    we = bc(it | 0, se | 0, 8) | 0;
                    we = lc(we | 0, de | 0, -1124073472, 1979815) | 0;
                    we = bc(we | 0, de | 0, Ze | 0) | 0;
                    i[(d + (we << 2)) >> 2] = ae + -2;
                    se = bc(it | 0, se | 0, 16) | 0;
                    se = lc(se | 0, de | 0, -1124073472, 1979815) | 0;
                    se = bc(se | 0, de | 0, Ze | 0) | 0;
                    i[(d + (se << 2)) >> 2] = ae + -1;
                    ne = (d + (ne << 2)) | 0;
                    se = i[ne >> 2] | 0;
                    i[ne >> 2] = ae;
                    ne = pe;
                    ae = Qe;
                    while (1) {
                      he = (r + se) | 0;
                      it = ae;
                      re = ae;
                      if (
                        (a[it >> 0] | (a[(it + 1) >> 0] << 8) | (a[(it + 2) >> 0] << 16) | (a[(it + 3) >> 0] << 24) | 0) !=
                        (a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24) | 0)
                      )
                        break;
                      if ((o[(re + 4) >> 0] | 0) != (o[(r + (se + 4)) >> 0] | 0)) break;
                      oe = (se + 5) | 0;
                      se = 0;
                      s = (re + 5) | 0;
                      while (1) {
                        if (s >>> 0 > ye >>> 0) break;
                        it = (r + (oe + se)) | 0;
                        if (
                          (a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24) | 0) !=
                          (a[it >> 0] | (a[(it + 1) >> 0] << 8) | (a[(it + 2) >> 0] << 16) | (a[(it + 3) >> 0] << 24) | 0)
                        )
                          break;
                        se = (se + 4) | 0;
                        s = (s + 4) | 0;
                      }
                      while (1) {
                        if (s >>> 0 >= te >>> 0) break;
                        if ((o[(r + (oe + se)) >> 0] | 0) != (o[s >> 0] | 0)) break;
                        se = (se + 1) | 0;
                        s = (s + 1) | 0;
                      }
                      fe = (se + 5) | 0;
                      Ie = (re + fe) | 0;
                      me = Ie;
                      Ce = (ae - he) | 0;
                      do {
                        if (!fe) ot = 189;
                        else {
                          ae = fe;
                          ge = re;
                          ne = he;
                          while (1) {
                            s = o[ge >> 0] | 0;
                            oe = o[ne >> 0] | 0;
                            if ((s << 24) >> 24 != (oe << 24) >> 24) {
                              ot = 186;
                              break;
                            }
                            ae = (ae + -1) | 0;
                            if (!ae) break;
                            else {
                              ge = (ge + 1) | 0;
                              ne = (ne + 1) | 0;
                            }
                          }
                          if ((ot | 0) == 186 ? ((ot = 0), (s << 24) >> 24 != (oe << 24) >> 24) : 0) {
                            ot = 187;
                            break e;
                          }
                          if (fe >>> 0 < 10) {
                            ot = 189;
                            break;
                          }
                          if (fe >>> 0 < 134) {
                            fe = (se + -1) | 0;
                            pe = (((_e(fe | 0) | 0) ^ 31) + -1) | 0;
                            he = fe >>> pe;
                            Ee = ((pe << 1) + he + 20) | 0;
                            s = o[(k + Ee) >> 0] | 0;
                            oe = l[(_ + (Ee << 1)) >> 1] | 0;
                            ne = i[q >> 2] | 0;
                            ae = ($ + (ne >>> 3)) | 0;
                            ge = a[ae >> 0] | 0;
                            it = bc(oe | 0, 0, (s & 255) | 0) | 0;
                            if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                              ot = 196;
                              break e;
                            }
                            if ((s & 255) >= 57) {
                              ot = 198;
                              break e;
                            }
                            it = cc(oe | 0, 0, (ne & 7) | 0) | 0;
                            oe = de;
                            it = ge | it;
                            ne = ae;
                            o[ne >> 0] = it;
                            o[(ne + 1) >> 0] = it >> 8;
                            o[(ne + 2) >> 0] = it >> 16;
                            o[(ne + 3) >> 0] = it >> 24;
                            ae = (ae + 4) | 0;
                            o[ae >> 0] = oe;
                            o[(ae + 1) >> 0] = oe >> 8;
                            o[(ae + 2) >> 0] = oe >> 16;
                            o[(ae + 3) >> 0] = oe >> 24;
                            ae = ((i[q >> 2] | 0) + (s & 255)) | 0;
                            i[q >> 2] = ae;
                            s = (fe - (he << pe)) | 0;
                            oe = ($ + (ae >>> 3)) | 0;
                            ne = a[oe >> 0] | 0;
                            it = bc(s | 0, 0, pe | 0) | 0;
                            if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                              ot = 200;
                              break e;
                            }
                            if (pe >>> 0 >= 57) {
                              ot = 202;
                              break e;
                            }
                            Qe = cc(s | 0, 0, (ae & 7) | 0) | 0;
                            we = de;
                            Qe = ne | Qe;
                            it = oe;
                            be = it;
                            o[be >> 0] = Qe;
                            o[(be + 1) >> 0] = Qe >> 8;
                            o[(be + 2) >> 0] = Qe >> 16;
                            o[(be + 3) >> 0] = Qe >> 24;
                            it = (it + 4) | 0;
                            o[it >> 0] = we;
                            o[(it + 1) >> 0] = we >> 8;
                            o[(it + 2) >> 0] = we >> 16;
                            o[(it + 3) >> 0] = we >> 24;
                            i[q >> 2] = (i[q >> 2] | 0) + pe;
                            it = ($e + (Ee << 2)) | 0;
                            i[it >> 2] = (i[it >> 2] | 0) + 1;
                            break;
                          }
                          if (fe >>> 0 >= 2118) {
                            s = o[He >> 0] | 0;
                            oe = l[Ve >> 1] | 0;
                            ne = i[q >> 2] | 0;
                            ae = ($ + (ne >>> 3)) | 0;
                            ge = a[ae >> 0] | 0;
                            it = bc(oe | 0, 0, (s & 255) | 0) | 0;
                            if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                              ot = 215;
                              break e;
                            }
                            if ((s & 255) >= 57) {
                              ot = 217;
                              break e;
                            }
                            it = cc(oe | 0, 0, (ne & 7) | 0) | 0;
                            ne = de;
                            it = ge | it;
                            oe = ae;
                            ae = oe;
                            o[ae >> 0] = it;
                            o[(ae + 1) >> 0] = it >> 8;
                            o[(ae + 2) >> 0] = it >> 16;
                            o[(ae + 3) >> 0] = it >> 24;
                            oe = (oe + 4) | 0;
                            o[oe >> 0] = ne;
                            o[(oe + 1) >> 0] = ne >> 8;
                            o[(oe + 2) >> 0] = ne >> 16;
                            o[(oe + 3) >> 0] = ne >> 24;
                            s = ((i[q >> 2] | 0) + (s & 255)) | 0;
                            i[q >> 2] = s;
                            oe = (se + -2113) | 0;
                            ne = ($ + (s >>> 3)) | 0;
                            ae = a[ne >> 0] | 0;
                            if (!((((oe & -16777216) | 0) == 0) & (0 == 0))) {
                              ot = 219;
                              break e;
                            }
                            Qe = cc(oe | 0, 0, (s & 7) | 0) | 0;
                            we = de;
                            Qe = ae | Qe;
                            it = ne;
                            be = it;
                            o[be >> 0] = Qe;
                            o[(be + 1) >> 0] = Qe >> 8;
                            o[(be + 2) >> 0] = Qe >> 16;
                            o[(be + 3) >> 0] = Qe >> 24;
                            it = (it + 4) | 0;
                            o[it >> 0] = we;
                            o[(it + 1) >> 0] = we >> 8;
                            o[(it + 2) >> 0] = we >> 16;
                            o[(it + 3) >> 0] = we >> 24;
                            i[q >> 2] = (i[q >> 2] | 0) + 24;
                            i[Ye >> 2] = (i[Ye >> 2] | 0) + 1;
                            break;
                          }
                          fe = (se + -65) | 0;
                          he = (_e(fe | 0) | 0) ^ 31;
                          pe = (he + 28) | 0;
                          s = o[(k + pe) >> 0] | 0;
                          oe = l[(_ + (pe << 1)) >> 1] | 0;
                          ne = i[q >> 2] | 0;
                          ae = ($ + (ne >>> 3)) | 0;
                          ge = a[ae >> 0] | 0;
                          it = bc(oe | 0, 0, (s & 255) | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 206;
                            break e;
                          }
                          if ((s & 255) >= 57) {
                            ot = 208;
                            break e;
                          }
                          it = cc(oe | 0, 0, (ne & 7) | 0) | 0;
                          oe = de;
                          it = ge | it;
                          ne = ae;
                          o[ne >> 0] = it;
                          o[(ne + 1) >> 0] = it >> 8;
                          o[(ne + 2) >> 0] = it >> 16;
                          o[(ne + 3) >> 0] = it >> 24;
                          ae = (ae + 4) | 0;
                          o[ae >> 0] = oe;
                          o[(ae + 1) >> 0] = oe >> 8;
                          o[(ae + 2) >> 0] = oe >> 16;
                          o[(ae + 3) >> 0] = oe >> 24;
                          ae = ((i[q >> 2] | 0) + (s & 255)) | 0;
                          i[q >> 2] = ae;
                          s = (fe - (1 << he)) | 0;
                          oe = ($ + (ae >>> 3)) | 0;
                          ne = a[oe >> 0] | 0;
                          it = bc(s | 0, 0, he | 0) | 0;
                          if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                            ot = 210;
                            break e;
                          }
                          if (he >>> 0 >= 57) {
                            ot = 212;
                            break e;
                          }
                          Qe = cc(s | 0, 0, (ae & 7) | 0) | 0;
                          we = de;
                          Qe = ne | Qe;
                          it = oe;
                          be = it;
                          o[be >> 0] = Qe;
                          o[(be + 1) >> 0] = Qe >> 8;
                          o[(be + 2) >> 0] = Qe >> 16;
                          o[(be + 3) >> 0] = Qe >> 24;
                          it = (it + 4) | 0;
                          o[it >> 0] = we;
                          o[(it + 1) >> 0] = we >> 8;
                          o[(it + 2) >> 0] = we >> 16;
                          o[(it + 3) >> 0] = we >> 24;
                          i[q >> 2] = (i[q >> 2] | 0) + he;
                          it = ($e + (pe << 2)) | 0;
                          i[it >> 2] = (i[it >> 2] | 0) + 1;
                        }
                      } while (0);
                      if ((ot | 0) == 189) {
                        ot = 0;
                        s = (se + 19) | 0;
                        oe = o[(k + s) >> 0] | 0;
                        ne = l[(_ + (s << 1)) >> 1] | 0;
                        ae = i[q >> 2] | 0;
                        ge = ($ + (ae >>> 3)) | 0;
                        fe = a[ge >> 0] | 0;
                        it = bc(ne | 0, 0, (oe & 255) | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 190;
                          break e;
                        }
                        if ((oe & 255) >= 57) {
                          ot = 192;
                          break e;
                        }
                        Qe = cc(ne | 0, 0, (ae & 7) | 0) | 0;
                        we = de;
                        Qe = fe | Qe;
                        it = ge;
                        be = it;
                        o[be >> 0] = Qe;
                        o[(be + 1) >> 0] = Qe >> 8;
                        o[(be + 2) >> 0] = Qe >> 16;
                        o[(be + 3) >> 0] = Qe >> 24;
                        it = (it + 4) | 0;
                        o[it >> 0] = we;
                        o[(it + 1) >> 0] = we >> 8;
                        o[(it + 2) >> 0] = we >> 16;
                        o[(it + 3) >> 0] = we >> 24;
                        i[q >> 2] = (i[q >> 2] | 0) + (oe & 255);
                        it = ($e + (s << 2)) | 0;
                        i[it >> 2] = (i[it >> 2] | 0) + 1;
                      }
                      fe = (Ce + 3) | 0;
                      pe = (((_e(fe | 0) | 0) ^ 31) + -1) | 0;
                      he = (fe >>> pe) & 1;
                      Ee = ((((pe << 1) + -2) | he) + 80) | 0;
                      s = o[(k + Ee) >> 0] | 0;
                      oe = l[(_ + (Ee << 1)) >> 1] | 0;
                      ne = i[q >> 2] | 0;
                      ae = ($ + (ne >>> 3)) | 0;
                      ge = a[ae >> 0] | 0;
                      it = bc(oe | 0, 0, (s & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 222;
                        break e;
                      }
                      if ((s & 255) >= 57) {
                        ot = 224;
                        break e;
                      }
                      it = cc(oe | 0, 0, (ne & 7) | 0) | 0;
                      oe = de;
                      it = ge | it;
                      ne = ae;
                      o[ne >> 0] = it;
                      o[(ne + 1) >> 0] = it >> 8;
                      o[(ne + 2) >> 0] = it >> 16;
                      o[(ne + 3) >> 0] = it >> 24;
                      ae = (ae + 4) | 0;
                      o[ae >> 0] = oe;
                      o[(ae + 1) >> 0] = oe >> 8;
                      o[(ae + 2) >> 0] = oe >> 16;
                      o[(ae + 3) >> 0] = oe >> 24;
                      ae = ((i[q >> 2] | 0) + (s & 255)) | 0;
                      i[q >> 2] = ae;
                      s = (fe - ((he | 2) << pe)) | 0;
                      oe = ($ + (ae >>> 3)) | 0;
                      ne = a[oe >> 0] | 0;
                      it = bc(s | 0, 0, pe | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 226;
                        break e;
                      }
                      if (pe >>> 0 >= 57) {
                        ot = 228;
                        break e;
                      }
                      Qe = cc(s | 0, 0, (ae & 7) | 0) | 0;
                      we = de;
                      Qe = ne | Qe;
                      it = oe;
                      be = it;
                      o[be >> 0] = Qe;
                      o[(be + 1) >> 0] = Qe >> 8;
                      o[(be + 2) >> 0] = Qe >> 16;
                      o[(be + 3) >> 0] = Qe >> 24;
                      it = (it + 4) | 0;
                      o[it >> 0] = we;
                      o[(it + 1) >> 0] = we >> 8;
                      o[(it + 2) >> 0] = we >> 16;
                      o[(it + 3) >> 0] = we >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + pe;
                      it = ($e + (Ee << 2)) | 0;
                      i[it >> 2] = (i[it >> 2] | 0) + 1;
                      if (Ie >>> 0 >= ke >>> 0) {
                        se = me;
                        break r;
                      }
                      se = (re + (se + 2)) | 0;
                      it = se;
                      it = a[it >> 0] | (a[(it + 1) >> 0] << 8) | (a[(it + 2) >> 0] << 16) | (a[(it + 3) >> 0] << 24);
                      se = (se + 4) | 0;
                      se = a[se >> 0] | (a[(se + 1) >> 0] << 8) | (a[(se + 2) >> 0] << 16) | (a[(se + 3) >> 0] << 24);
                      we = lc(it | 0, se | 0, -1124073472, 1979815) | 0;
                      we = bc(we | 0, de | 0, Ze | 0) | 0;
                      ne = bc(it | 0, se | 0, 24) | 0;
                      ne = lc(ne | 0, de | 0, -1124073472, 1979815) | 0;
                      ne = bc(ne | 0, de | 0, Ze | 0) | 0;
                      ae = (Ie - Oe) | 0;
                      i[(d + (we << 2)) >> 2] = ae + -3;
                      we = bc(it | 0, se | 0, 8) | 0;
                      we = lc(we | 0, de | 0, -1124073472, 1979815) | 0;
                      we = bc(we | 0, de | 0, Ze | 0) | 0;
                      i[(d + (we << 2)) >> 2] = ae + -2;
                      se = bc(it | 0, se | 0, 16) | 0;
                      se = lc(se | 0, de | 0, -1124073472, 1979815) | 0;
                      se = bc(se | 0, de | 0, Ze | 0) | 0;
                      i[(d + (se << 2)) >> 2] = ae + -1;
                      ne = (d + (ne << 2)) | 0;
                      se = i[ne >> 2] | 0;
                      i[ne >> 2] = ae;
                      ne = Ce;
                      ae = me;
                    }
                    oe = (re + 1) | 0;
                    s = oe;
                    re = s;
                    s = (s + 4) | 0;
                    re = a[re >> 0] | (a[(re + 1) >> 0] << 8) | (a[(re + 2) >> 0] << 16) | (a[(re + 3) >> 0] << 24);
                    s = a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24);
                    me = ne;
                    se = ae;
                  }
                }
              } while (0);
              fe = se;
              if (fe >>> 0 > te >>> 0) {
                ot = 233;
                break e;
              }
              s = (p - De) | 0;
              oe = s >>> 0 < 65536 ? s : 65536;
              if ((p | 0) == (De | 0)) {
                p = 0;
                ot = 254;
                break;
              }
              ne = (Fe + oe) | 0;
              if (ne >>> 0 >= 1048577) {
                p = s;
                ot = 254;
                break;
              }
              ac(tt | 0, 0, 1024) | 0;
              p = 0;
              while (1) {
                if (p >>> 0 >= oe >>> 0) break;
                it = (tt + (a[(Te + (De + p)) >> 0] << 2)) | 0;
                i[it >> 2] = (i[it >> 2] | 0) + 1;
                p = (p + 43) | 0;
              }
              it = (oe + 42) | 0;
              p = ((it >>> 0) / 43) | 0;
              if (it >>> 0 < 11008) {
                Ae = +(p >>> 0);
                ie = +h[(19516 + (p << 2)) >> 2];
              } else {
                ie = +(p >>> 0);
                Ae = ie;
                ie = +Xb(ie);
              }
              ue = (ie + 0.5) * Ae + 200.0;
              re = 0;
              while (1) {
                if ((re | 0) == 256) break;
                p = i[(tt + (re << 2)) >> 2] | 0;
                Ae = +(p >>> 0);
                le = +(a[(st + re) >> 0] | 0);
                if (p >>> 0 < 256) ie = +h[(19516 + (p << 2)) >> 2];
                else ie = +Xb(Ae);
                ue = ue - Ae * (le + ie);
                re = (re + 1) | 0;
              }
              if (!(ue >= 0.0)) {
                p = s;
                ot = 254;
                break;
              }
              if (Fe >>> 0 <= 65536) {
                ot = 250;
                break e;
              }
              p = 20;
              te = (ne + -1) | 0;
              re = ve;
              while (1) {
                if (!p) {
                  p = s;
                  Re = Ne;
                  De = oe;
                  Fe = ne;
                  continue t;
                }
                De = re & 7;
                it = (8 - De) | 0;
                it = p >>> 0 < it >>> 0 ? p : it;
                Fe = ($ + (re >>> 3)) | 0;
                o[Fe >> 0] = ((te & ((1 << it) + -1)) << De) | (a[Fe >> 0] & ((-1 << (De + it)) | ((1 << De) + 255)));
                p = (p - it) | 0;
                te = te >>> it;
                re = (re + it) | 0;
              }
            }
            t: do {
              if ((ot | 0) == 84) {
                ot = 0;
                it = (he - ee) | 0;
                Ne = ($ + (ce >>> 3)) | 0;
                o[Ne >> 0] = a[Ne >> 0] & ((1 << (ce & 7)) + 255);
                i[q >> 2] = ce;
                vb(it, 1, q, $);
                Ne = ((i[q >> 2] | 0) + 7) | 0;
                i[q >> 2] = Ne & -8;
                dc(($ + (Ne >>> 3)) | 0, ee | 0, it | 0) | 0;
                ee = ((i[q >> 2] | 0) + (it << 3)) | 0;
                i[q >> 2] = ee;
                o[($ + (ee >>> 3)) >> 0] = 0;
                p = (p + (Re - he)) | 0;
                ee = he;
              } else if ((ot | 0) == 254) {
                ot = 0;
                if (fe >>> 0 < te >>> 0) {
                  ge = (te - se) | 0;
                  if (ge >>> 0 >= 6210) {
                    if (!((((((se - ee) | 0) * 50) | 0) >>> 0 > ge >>> 0) | (Se ^ 1))) {
                      it = (te - ee) | 0;
                      Se = ($ + (ce >>> 3)) | 0;
                      o[Se >> 0] = a[Se >> 0] & ((1 << (ce & 7)) + 255);
                      i[q >> 2] = ce;
                      vb(it, 1, q, $);
                      Se = ((i[q >> 2] | 0) + 7) | 0;
                      i[q >> 2] = Se & -8;
                      dc(($ + (Se >>> 3)) | 0, ee | 0, it | 0) | 0;
                      ee = ((i[q >> 2] | 0) + (it << 3)) | 0;
                      i[q >> 2] = ee;
                      o[($ + (ee >>> 3)) >> 0] = 0;
                      ee = Ne;
                      break;
                    }
                    if (ge >>> 0 < 22594) {
                      ee = o[qe >> 0] | 0;
                      te = l[Je >> 1] | 0;
                      re = i[q >> 2] | 0;
                      se = ($ + (re >>> 3)) | 0;
                      s = a[se >> 0] | 0;
                      it = bc(te | 0, 0, (ee & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 299;
                        break e;
                      }
                      if ((ee & 255) >= 57) {
                        ot = 301;
                        break e;
                      }
                      it = cc(te | 0, 0, (re & 7) | 0) | 0;
                      re = de;
                      it = s | it;
                      te = se;
                      se = te;
                      o[se >> 0] = it;
                      o[(se + 1) >> 0] = it >> 8;
                      o[(se + 2) >> 0] = it >> 16;
                      o[(se + 3) >> 0] = it >> 24;
                      te = (te + 4) | 0;
                      o[te >> 0] = re;
                      o[(te + 1) >> 0] = re >> 8;
                      o[(te + 2) >> 0] = re >> 16;
                      o[(te + 3) >> 0] = re >> 24;
                      ee = ((i[q >> 2] | 0) + (ee & 255)) | 0;
                      i[q >> 2] = ee;
                      te = (ge + -6210) | 0;
                      re = ($ + (ee >>> 3)) | 0;
                      se = a[re >> 0] | 0;
                      if (!((((te & -16384) | 0) == 0) & (0 == 0))) {
                        ot = 303;
                        break e;
                      }
                      ve = cc(te | 0, 0, (ee & 7) | 0) | 0;
                      it = de;
                      ve = se | ve;
                      oe = re;
                      Se = oe;
                      o[Se >> 0] = ve;
                      o[(Se + 1) >> 0] = ve >> 8;
                      o[(Se + 2) >> 0] = ve >> 16;
                      o[(Se + 3) >> 0] = ve >> 24;
                      oe = (oe + 4) | 0;
                      o[oe >> 0] = it;
                      o[(oe + 1) >> 0] = it >> 8;
                      o[(oe + 2) >> 0] = it >> 16;
                      o[(oe + 3) >> 0] = it >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + 14;
                      i[We >> 2] = (i[We >> 2] | 0) + 1;
                      oe = 0;
                    } else {
                      ee = o[Ke >> 0] | 0;
                      te = l[Xe >> 1] | 0;
                      re = i[q >> 2] | 0;
                      se = ($ + (re >>> 3)) | 0;
                      s = a[se >> 0] | 0;
                      it = bc(te | 0, 0, (ee & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 306;
                        break e;
                      }
                      if ((ee & 255) >= 57) {
                        ot = 308;
                        break e;
                      }
                      it = cc(te | 0, 0, (re & 7) | 0) | 0;
                      re = de;
                      it = s | it;
                      te = se;
                      se = te;
                      o[se >> 0] = it;
                      o[(se + 1) >> 0] = it >> 8;
                      o[(se + 2) >> 0] = it >> 16;
                      o[(se + 3) >> 0] = it >> 24;
                      te = (te + 4) | 0;
                      o[te >> 0] = re;
                      o[(te + 1) >> 0] = re >> 8;
                      o[(te + 2) >> 0] = re >> 16;
                      o[(te + 3) >> 0] = re >> 24;
                      ee = ((i[q >> 2] | 0) + (ee & 255)) | 0;
                      i[q >> 2] = ee;
                      te = (ge + -22594) | 0;
                      re = ($ + (ee >>> 3)) | 0;
                      se = a[re >> 0] | 0;
                      if (!((((te & -16777216) | 0) == 0) & (0 == 0))) {
                        ot = 310;
                        break e;
                      }
                      ve = cc(te | 0, 0, (ee & 7) | 0) | 0;
                      it = de;
                      ve = se | ve;
                      oe = re;
                      Se = oe;
                      o[Se >> 0] = ve;
                      o[(Se + 1) >> 0] = ve >> 8;
                      o[(Se + 2) >> 0] = ve >> 16;
                      o[(Se + 3) >> 0] = ve >> 24;
                      oe = (oe + 4) | 0;
                      o[oe >> 0] = it;
                      o[(oe + 1) >> 0] = it >> 8;
                      o[(oe + 2) >> 0] = it >> 16;
                      o[(oe + 3) >> 0] = it >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + 24;
                      i[ze >> 2] = (i[ze >> 2] | 0) + 1;
                      oe = 0;
                    }
                    while (1) {
                      if (oe >>> 0 >= ge >>> 0) {
                        ee = Ne;
                        break t;
                      }
                      te = a[(fe + oe) >> 0] | 0;
                      ee = o[(st + te) >> 0] | 0;
                      te = l[(rt + (te << 1)) >> 1] | 0;
                      re = i[q >> 2] | 0;
                      se = ($ + (re >>> 3)) | 0;
                      s = a[se >> 0] | 0;
                      it = bc(te | 0, 0, (ee & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 314;
                        break e;
                      }
                      if ((ee & 255) >= 57) {
                        ot = 316;
                        break e;
                      }
                      Fe = cc(te | 0, 0, (re & 7) | 0) | 0;
                      Se = de;
                      Fe = s | Fe;
                      it = se;
                      ve = it;
                      o[ve >> 0] = Fe;
                      o[(ve + 1) >> 0] = Fe >> 8;
                      o[(ve + 2) >> 0] = Fe >> 16;
                      o[(ve + 3) >> 0] = Fe >> 24;
                      it = (it + 4) | 0;
                      o[it >> 0] = Se;
                      o[(it + 1) >> 0] = Se >> 8;
                      o[(it + 2) >> 0] = Se >> 16;
                      o[(it + 3) >> 0] = Se >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + (ee & 255);
                      oe = (oe + 1) | 0;
                    }
                  }
                  do {
                    if (ge >>> 0 < 6) {
                      ee = (ge + 40) | 0;
                      te = o[(k + ee) >> 0] | 0;
                      re = l[(_ + (ee << 1)) >> 1] | 0;
                      se = i[q >> 2] | 0;
                      s = ($ + (se >>> 3)) | 0;
                      oe = a[s >> 0] | 0;
                      it = bc(re | 0, 0, (te & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 258;
                        break e;
                      }
                      if ((te & 255) >= 57) {
                        ot = 260;
                        break e;
                      }
                      ve = cc(re | 0, 0, (se & 7) | 0) | 0;
                      it = de;
                      ve = oe | ve;
                      oe = s;
                      Se = oe;
                      o[Se >> 0] = ve;
                      o[(Se + 1) >> 0] = ve >> 8;
                      o[(Se + 2) >> 0] = ve >> 16;
                      o[(Se + 3) >> 0] = ve >> 24;
                      oe = (oe + 4) | 0;
                      o[oe >> 0] = it;
                      o[(oe + 1) >> 0] = it >> 8;
                      o[(oe + 2) >> 0] = it >> 16;
                      o[(oe + 3) >> 0] = it >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + (te & 255);
                      oe = ($e + (ee << 2)) | 0;
                      i[oe >> 2] = (i[oe >> 2] | 0) + 1;
                      oe = 0;
                    } else {
                      if (ge >>> 0 < 130) {
                        oe = (ge + -2) | 0;
                        ae = (((_e(oe | 0) | 0) ^ 31) + -1) | 0;
                        ne = oe >>> ae;
                        ce = ((ae << 1) + ne + 42) | 0;
                        ee = o[(k + ce) >> 0] | 0;
                        te = l[(_ + (ce << 1)) >> 1] | 0;
                        re = i[q >> 2] | 0;
                        se = ($ + (re >>> 3)) | 0;
                        s = a[se >> 0] | 0;
                        it = bc(te | 0, 0, (ee & 255) | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 264;
                          break e;
                        }
                        if ((ee & 255) >= 57) {
                          ot = 266;
                          break e;
                        }
                        it = cc(te | 0, 0, (re & 7) | 0) | 0;
                        te = de;
                        it = s | it;
                        re = se;
                        o[re >> 0] = it;
                        o[(re + 1) >> 0] = it >> 8;
                        o[(re + 2) >> 0] = it >> 16;
                        o[(re + 3) >> 0] = it >> 24;
                        se = (se + 4) | 0;
                        o[se >> 0] = te;
                        o[(se + 1) >> 0] = te >> 8;
                        o[(se + 2) >> 0] = te >> 16;
                        o[(se + 3) >> 0] = te >> 24;
                        se = ((i[q >> 2] | 0) + (ee & 255)) | 0;
                        i[q >> 2] = se;
                        ee = (oe - (ne << ae)) | 0;
                        te = ($ + (se >>> 3)) | 0;
                        re = a[te >> 0] | 0;
                        it = bc(ee | 0, 0, ae | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 268;
                          break e;
                        }
                        if (ae >>> 0 >= 57) {
                          ot = 270;
                          break e;
                        }
                        ve = cc(ee | 0, 0, (se & 7) | 0) | 0;
                        it = de;
                        ve = re | ve;
                        oe = te;
                        Se = oe;
                        o[Se >> 0] = ve;
                        o[(Se + 1) >> 0] = ve >> 8;
                        o[(Se + 2) >> 0] = ve >> 16;
                        o[(Se + 3) >> 0] = ve >> 24;
                        oe = (oe + 4) | 0;
                        o[oe >> 0] = it;
                        o[(oe + 1) >> 0] = it >> 8;
                        o[(oe + 2) >> 0] = it >> 16;
                        o[(oe + 3) >> 0] = it >> 24;
                        i[q >> 2] = (i[q >> 2] | 0) + ae;
                        oe = ($e + (ce << 2)) | 0;
                        i[oe >> 2] = (i[oe >> 2] | 0) + 1;
                        oe = 0;
                        break;
                      }
                      if (ge >>> 0 >= 2114) {
                        ee = o[Ue >> 0] | 0;
                        te = l[Ge >> 1] | 0;
                        re = i[q >> 2] | 0;
                        se = ($ + (re >>> 3)) | 0;
                        s = a[se >> 0] | 0;
                        it = bc(te | 0, 0, (ee & 255) | 0) | 0;
                        if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                          ot = 283;
                          break e;
                        }
                        if ((ee & 255) >= 57) {
                          ot = 285;
                          break e;
                        }
                        it = cc(te | 0, 0, (re & 7) | 0) | 0;
                        re = de;
                        it = s | it;
                        te = se;
                        se = te;
                        o[se >> 0] = it;
                        o[(se + 1) >> 0] = it >> 8;
                        o[(se + 2) >> 0] = it >> 16;
                        o[(se + 3) >> 0] = it >> 24;
                        te = (te + 4) | 0;
                        o[te >> 0] = re;
                        o[(te + 1) >> 0] = re >> 8;
                        o[(te + 2) >> 0] = re >> 16;
                        o[(te + 3) >> 0] = re >> 24;
                        ee = ((i[q >> 2] | 0) + (ee & 255)) | 0;
                        i[q >> 2] = ee;
                        te = (ge + -2114) | 0;
                        re = ($ + (ee >>> 3)) | 0;
                        se = a[re >> 0] | 0;
                        if (!((((te & -4096) | 0) == 0) & (0 == 0))) {
                          ot = 287;
                          break e;
                        }
                        ve = cc(te | 0, 0, (ee & 7) | 0) | 0;
                        it = de;
                        ve = se | ve;
                        oe = re;
                        Se = oe;
                        o[Se >> 0] = ve;
                        o[(Se + 1) >> 0] = ve >> 8;
                        o[(Se + 2) >> 0] = ve >> 16;
                        o[(Se + 3) >> 0] = ve >> 24;
                        oe = (oe + 4) | 0;
                        o[oe >> 0] = it;
                        o[(oe + 1) >> 0] = it >> 8;
                        o[(oe + 2) >> 0] = it >> 16;
                        o[(oe + 3) >> 0] = it >> 24;
                        i[q >> 2] = (i[q >> 2] | 0) + 12;
                        i[Pe >> 2] = (i[Pe >> 2] | 0) + 1;
                        oe = 0;
                        break;
                      }
                      oe = (ge + -66) | 0;
                      ne = (_e(oe | 0) | 0) ^ 31;
                      ae = (ne + 50) | 0;
                      ee = o[(k + ae) >> 0] | 0;
                      te = l[(_ + (ae << 1)) >> 1] | 0;
                      re = i[q >> 2] | 0;
                      se = ($ + (re >>> 3)) | 0;
                      s = a[se >> 0] | 0;
                      it = bc(te | 0, 0, (ee & 255) | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 274;
                        break e;
                      }
                      if ((ee & 255) >= 57) {
                        ot = 276;
                        break e;
                      }
                      it = cc(te | 0, 0, (re & 7) | 0) | 0;
                      te = de;
                      it = s | it;
                      re = se;
                      o[re >> 0] = it;
                      o[(re + 1) >> 0] = it >> 8;
                      o[(re + 2) >> 0] = it >> 16;
                      o[(re + 3) >> 0] = it >> 24;
                      se = (se + 4) | 0;
                      o[se >> 0] = te;
                      o[(se + 1) >> 0] = te >> 8;
                      o[(se + 2) >> 0] = te >> 16;
                      o[(se + 3) >> 0] = te >> 24;
                      se = ((i[q >> 2] | 0) + (ee & 255)) | 0;
                      i[q >> 2] = se;
                      ee = (oe - (1 << ne)) | 0;
                      te = ($ + (se >>> 3)) | 0;
                      re = a[te >> 0] | 0;
                      it = bc(ee | 0, 0, ne | 0) | 0;
                      if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                        ot = 278;
                        break e;
                      }
                      if (ne >>> 0 >= 57) {
                        ot = 280;
                        break e;
                      }
                      ve = cc(ee | 0, 0, (se & 7) | 0) | 0;
                      it = de;
                      ve = re | ve;
                      oe = te;
                      Se = oe;
                      o[Se >> 0] = ve;
                      o[(Se + 1) >> 0] = ve >> 8;
                      o[(Se + 2) >> 0] = ve >> 16;
                      o[(Se + 3) >> 0] = ve >> 24;
                      oe = (oe + 4) | 0;
                      o[oe >> 0] = it;
                      o[(oe + 1) >> 0] = it >> 8;
                      o[(oe + 2) >> 0] = it >> 16;
                      o[(oe + 3) >> 0] = it >> 24;
                      i[q >> 2] = (i[q >> 2] | 0) + ne;
                      oe = ($e + (ae << 2)) | 0;
                      i[oe >> 2] = (i[oe >> 2] | 0) + 1;
                      oe = 0;
                    }
                  } while (0);
                  while (1) {
                    if (oe >>> 0 >= ge >>> 0) {
                      ee = Ne;
                      break t;
                    }
                    te = a[(fe + oe) >> 0] | 0;
                    ee = o[(st + te) >> 0] | 0;
                    te = l[(rt + (te << 1)) >> 1] | 0;
                    re = i[q >> 2] | 0;
                    se = ($ + (re >>> 3)) | 0;
                    s = a[se >> 0] | 0;
                    it = bc(te | 0, 0, (ee & 255) | 0) | 0;
                    if (!(((it | 0) == 0) & ((de | 0) == 0))) {
                      ot = 291;
                      break e;
                    }
                    if ((ee & 255) >= 57) {
                      ot = 293;
                      break e;
                    }
                    Fe = cc(te | 0, 0, (re & 7) | 0) | 0;
                    Se = de;
                    Fe = s | Fe;
                    it = se;
                    ve = it;
                    o[ve >> 0] = Fe;
                    o[(ve + 1) >> 0] = Fe >> 8;
                    o[(ve + 2) >> 0] = Fe >> 16;
                    o[(ve + 3) >> 0] = Fe >> 24;
                    it = (it + 4) | 0;
                    o[it >> 0] = Se;
                    o[(it + 1) >> 0] = Se >> 8;
                    o[(it + 2) >> 0] = Se >> 16;
                    o[(it + 3) >> 0] = Se >> 24;
                    i[q >> 2] = (i[q >> 2] | 0) + (ee & 255);
                    oe = (oe + 1) | 0;
                  }
                } else ee = Ne;
              }
            } while (0);
            if (!p) {
              ot = 320;
              break;
            }
            re = p >>> 0 < 98304 ? p : 98304;
            ce = i[q >> 2] | 0;
            vb(re, 0, q, $);
            te = ($ + ((i[q >> 2] | 0) >>> 3)) | 0;
            Ne = a[te >> 0] | 0;
            it = te;
            o[it >> 0] = Ne;
            o[(it + 1) >> 0] = Ne >> 8;
            o[(it + 2) >> 0] = Ne >> 16;
            o[(it + 3) >> 0] = Ne >> 24;
            te = (te + 4) | 0;
            o[te >> 0] = 0;
            o[(te + 1) >> 0] = 0;
            o[(te + 2) >> 0] = 0;
            o[(te + 3) >> 0] = 0;
            i[q >> 2] = (i[q >> 2] | 0) + 13;
            te = wb(e, ee, re, st, rt, q, $) | 0;
            xb($e, k, _, q, $);
          }
          switch (ot | 0) {
            case 24: {
              et(405740, 405401, 539, 405439);
              break;
            }
            case 26: {
              et(405474, 405401, 544, 405439);
              break;
            }
            case 32: {
              et(405779, 405401, 559, 405439);
              break;
            }
            case 34: {
              et(405800, 405401, 560, 405439);
              break;
            }
            case 48: {
              et(405815, 405401, 579, 405439);
              break;
            }
            case 52: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 54: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 58: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 60: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 62: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 64: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 68: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 70: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 72: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 74: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 77: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 79: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 81: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 87: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 89: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 91: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 94: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 96: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 98: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 102: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 104: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 108: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 110: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 113: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 115: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 117: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 119: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 123: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 125: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 129: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 131: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 133: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 135: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 139: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 141: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 143: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 145: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 149: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 151: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 153: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 155: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 157: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 159: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 162: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 164: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 166: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 168: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 170: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 187: {
              et(405815, 405401, 638, 405439);
              break;
            }
            case 190: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 192: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 196: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 198: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 200: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 202: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 206: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 208: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 210: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 212: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 215: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 217: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 219: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 222: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 224: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 226: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 228: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 233: {
              et(405853, 405401, 671, 405439);
              break;
            }
            case 250: {
              et(405503, 405401, 681, 405439);
              break;
            }
            case 258: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 260: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 264: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 266: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 268: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 270: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 274: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 276: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 278: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 280: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 283: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 285: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 287: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 291: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 293: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 299: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 301: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 303: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 306: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 308: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 310: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 314: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 316: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 320:
              if (n) {
                e = i[q >> 2] | 0;
                ot = ($ + (e >>> 3)) | 0;
                d = a[ot >> 0] | 0;
                e = cc(1, 0, (e & 7) | 0) | 0;
                it = de;
                e = d | e;
                d = ot;
                o[d >> 0] = e;
                o[(d + 1) >> 0] = e >> 8;
                o[(d + 2) >> 0] = e >> 16;
                o[(d + 3) >> 0] = e >> 24;
                ot = (ot + 4) | 0;
                o[ot >> 0] = it;
                o[(ot + 1) >> 0] = it >> 8;
                o[(ot + 2) >> 0] = it >> 16;
                o[(ot + 3) >> 0] = it >> 24;
                ot = ((i[q >> 2] | 0) + 1) | 0;
                i[q >> 2] = ot;
                it = ($ + (ot >>> 3)) | 0;
                d = a[it >> 0] | 0;
                $ = cc(1, 0, (ot & 7) | 0) | 0;
                ot = de;
                $ = d | $;
                d = it;
                o[d >> 0] = $;
                o[(d + 1) >> 0] = $ >> 8;
                o[(d + 2) >> 0] = $ >> 16;
                o[(d + 3) >> 0] = $ >> 24;
                it = (it + 4) | 0;
                o[it >> 0] = ot;
                o[(it + 1) >> 0] = ot >> 8;
                o[(it + 2) >> 0] = ot >> 16;
                o[(it + 3) >> 0] = ot >> 24;
                i[q >> 2] = ((i[q >> 2] | 0) + 8) & -8;
                w = nt;
                return;
              } else {
                o[j >> 0] = 0;
                i[M >> 2] = 0;
                xb($e, k, _, M, j);
                w = nt;
                return;
              }
          }
        }
        function vb(e, r, s, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          var l = 0,
            d = 0,
            h = 0,
            p = 0;
          l = (n + ((i[s >> 2] | 0) >>> 3)) | 0;
          h = a[l >> 0] | 0;
          d = l;
          o[d >> 0] = h;
          o[(d + 1) >> 0] = h >> 8;
          o[(d + 2) >> 0] = h >> 16;
          o[(d + 3) >> 0] = h >> 24;
          l = (l + 4) | 0;
          o[l >> 0] = 0;
          o[(l + 1) >> 0] = 0;
          o[(l + 2) >> 0] = 0;
          o[(l + 3) >> 0] = 0;
          l = ((i[s >> 2] | 0) + 1) | 0;
          i[s >> 2] = l;
          d = (n + (l >>> 3)) | 0;
          h = a[d >> 0] | 0;
          if (e >>> 0 < 65537) {
            p = d;
            l = p;
            o[l >> 0] = h;
            o[(l + 1) >> 0] = h >> 8;
            o[(l + 2) >> 0] = h >> 16;
            o[(l + 3) >> 0] = h >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = 0;
            o[(p + 1) >> 0] = 0;
            o[(p + 2) >> 0] = 0;
            o[(p + 3) >> 0] = 0;
            p = ((i[s >> 2] | 0) + 2) | 0;
            i[s >> 2] = p;
            l = (e + -1) | 0;
            d = (n + (p >>> 3)) | 0;
            h = a[d >> 0] | 0;
            if (!((((l & -65536) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
            l = cc(l | 0, 0, (p & 7) | 0) | 0;
            e = de;
            l = h | l;
            p = d;
            h = p;
            o[h >> 0] = l;
            o[(h + 1) >> 0] = l >> 8;
            o[(h + 2) >> 0] = l >> 16;
            o[(h + 3) >> 0] = l >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = e;
            o[(p + 1) >> 0] = e >> 8;
            o[(p + 2) >> 0] = e >> 16;
            o[(p + 3) >> 0] = e >> 24;
            p = ((i[s >> 2] | 0) + 16) | 0;
            i[s >> 2] = p;
            r = r & 1;
            e = p >>> 3;
            n = (n + e) | 0;
            e = o[n >> 0] | 0;
            e = e & 255;
            p = p & 7;
            p = cc(r | 0, 0, p | 0) | 0;
            r = de;
            p = e | p;
            e = n;
            o[e >> 0] = p;
            o[(e + 1) >> 0] = p >> 8;
            o[(e + 2) >> 0] = p >> 16;
            o[(e + 3) >> 0] = p >> 24;
            n = (n + 4) | 0;
            o[n >> 0] = r;
            o[(n + 1) >> 0] = r >> 8;
            o[(n + 2) >> 0] = r >> 16;
            o[(n + 3) >> 0] = r >> 24;
            n = i[s >> 2] | 0;
            n = (n + 1) | 0;
            i[s >> 2] = n;
            return;
          } else {
            p = cc(1, 0, (l & 7) | 0) | 0;
            l = de;
            h = h | p;
            p = d;
            d = p;
            o[d >> 0] = h;
            o[(d + 1) >> 0] = h >> 8;
            o[(d + 2) >> 0] = h >> 16;
            o[(d + 3) >> 0] = h >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = l;
            o[(p + 1) >> 0] = l >> 8;
            o[(p + 2) >> 0] = l >> 16;
            o[(p + 3) >> 0] = l >> 24;
            p = ((i[s >> 2] | 0) + 2) | 0;
            i[s >> 2] = p;
            l = (e + -1) | 0;
            d = (n + (p >>> 3)) | 0;
            h = a[d >> 0] | 0;
            if (!((((l & -1048576) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
            l = cc(l | 0, 0, (p & 7) | 0) | 0;
            e = de;
            l = h | l;
            p = d;
            h = p;
            o[h >> 0] = l;
            o[(h + 1) >> 0] = l >> 8;
            o[(h + 2) >> 0] = l >> 16;
            o[(h + 3) >> 0] = l >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = e;
            o[(p + 1) >> 0] = e >> 8;
            o[(p + 2) >> 0] = e >> 16;
            o[(p + 3) >> 0] = e >> 24;
            p = ((i[s >> 2] | 0) + 20) | 0;
            i[s >> 2] = p;
            r = r & 1;
            e = p >>> 3;
            n = (n + e) | 0;
            e = o[n >> 0] | 0;
            e = e & 255;
            p = p & 7;
            p = cc(r | 0, 0, p | 0) | 0;
            r = de;
            p = e | p;
            e = n;
            o[e >> 0] = p;
            o[(e + 1) >> 0] = p >> 8;
            o[(e + 2) >> 0] = p >> 16;
            o[(e + 3) >> 0] = p >> 24;
            n = (n + 4) | 0;
            o[n >> 0] = r;
            o[(n + 1) >> 0] = r >> 8;
            o[(n + 2) >> 0] = r >> 16;
            o[(n + 3) >> 0] = r >> 24;
            n = i[s >> 2] | 0;
            n = (n + 1) | 0;
            i[s >> 2] = n;
            return;
          }
        }
        function wb(e, r, s, o, n, l, d) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          l = l | 0;
          d = d | 0;
          var h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0;
          _ = w;
          w = (w + 1024) | 0;
          k = _;
          ac(k | 0, 0, 1024) | 0;
          e: do {
            if (s >>> 0 < 32768) {
              h = 0;
              while (1) {
                if ((h | 0) == (s | 0)) {
                  h = 0;
                  break;
                }
                p = (k + ((a[(r + h) >> 0] | 0) << 2)) | 0;
                i[p >> 2] = (i[p >> 2] | 0) + 1;
                h = (h + 1) | 0;
              }
              while (1) {
                if ((h | 0) == 256) {
                  p = s;
                  break e;
                }
                r = (k + (h << 2)) | 0;
                M = i[r >> 2] | 0;
                p = (M >>> 0 < 11 ? M : 11) << 1;
                i[r >> 2] = M + p;
                s = (s + p) | 0;
                h = (h + 1) | 0;
              }
            } else {
              h = 0;
              while (1) {
                if (h >>> 0 >= s >>> 0) break;
                M = (k + ((a[(r + h) >> 0] | 0) << 2)) | 0;
                i[M >> 2] = (i[M >> 2] | 0) + 1;
                h = (h + 29) | 0;
              }
              s = ((((s + 28) | 0) >>> 0) / 29) | 0;
              h = 0;
              while (1) {
                if ((h | 0) == 256) {
                  p = s;
                  break e;
                }
                p = (k + (h << 2)) | 0;
                r = i[p >> 2] | 0;
                M = ((r >>> 0 < 11 ? r : 11) << 1) | 1;
                i[p >> 2] = r + M;
                s = (s + M) | 0;
                h = (h + 1) | 0;
              }
            }
          } while (0);
          $a(e, k, p, 8, o, n, l, d);
          s = 0;
          r = 0;
          while (1) {
            if ((r | 0) == 256) break;
            h = i[(k + (r << 2)) >> 2] | 0;
            if (h) s = (s + (Pe(h, a[(o + r) >> 0] | 0) | 0)) | 0;
            r = (r + 1) | 0;
          }
          w = _;
          return ((((s * 125) | 0) >>> 0) / (p >>> 0)) | 0 | 0;
        }
        function xb(e, r, s, l, d) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          var h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0;
          ee = w;
          w = (w + 1872) | 0;
          $ = (ee + 704) | 0;
          q = ee;
          M = (ee + 1736) | 0;
          ac(q | 0, 0, 704) | 0;
          Hb(e, 64, 15, $, r);
          j = (r + 64) | 0;
          Hb((e + 256) | 0, 64, 14, $, j);
          p = q;
          k = r;
          _ = (p + 24) | 0;
          do {
            o[p >> 0] = o[k >> 0] | 0;
            p = (p + 1) | 0;
            k = (k + 1) | 0;
          } while ((p | 0) < (_ | 0));
          p = (r + 40) | 0;
          h = p;
          p = (p + 4) | 0;
          p = a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24);
          e = (q + 24) | 0;
          i[e >> 2] = a[h >> 0] | (a[(h + 1) >> 0] << 8) | (a[(h + 2) >> 0] << 16) | (a[(h + 3) >> 0] << 24);
          i[(e + 4) >> 2] = p;
          e = (r + 24) | 0;
          p = e;
          h = p;
          p = (p + 4) | 0;
          p = a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24);
          _ = (q + 32) | 0;
          i[_ >> 2] = a[h >> 0] | (a[(h + 1) >> 0] << 8) | (a[(h + 2) >> 0] << 16) | (a[(h + 3) >> 0] << 24);
          i[(_ + 4) >> 2] = p;
          _ = (r + 48) | 0;
          p = _;
          _ = (_ + 4) | 0;
          _ = a[_ >> 0] | (a[(_ + 1) >> 0] << 8) | (a[(_ + 2) >> 0] << 16) | (a[(_ + 3) >> 0] << 24);
          h = (q + 40) | 0;
          i[h >> 2] = a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24);
          i[(h + 4) >> 2] = _;
          h = (r + 32) | 0;
          _ = h;
          p = _;
          _ = (_ + 4) | 0;
          _ = a[_ >> 0] | (a[(_ + 1) >> 0] << 8) | (a[(_ + 2) >> 0] << 16) | (a[(_ + 3) >> 0] << 24);
          k = (q + 48) | 0;
          i[k >> 2] = a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24);
          i[(k + 4) >> 2] = _;
          k = (r + 56) | 0;
          _ = k;
          k = (k + 4) | 0;
          k = a[k >> 0] | (a[(k + 1) >> 0] << 8) | (a[(k + 2) >> 0] << 16) | (a[(k + 3) >> 0] << 24);
          p = (q + 56) | 0;
          i[p >> 2] = a[_ >> 0] | (a[(_ + 1) >> 0] << 8) | (a[(_ + 2) >> 0] << 16) | (a[(_ + 3) >> 0] << 24);
          i[(p + 4) >> 2] = k;
          Jb(q, 64, M);
          p = s;
          k = M;
          _ = (p + 48) | 0;
          do {
            n[p >> 1] = n[k >> 1] | 0;
            p = (p + 2) | 0;
            k = (k + 2) | 0;
          } while ((p | 0) < (_ | 0));
          p = (s + 48) | 0;
          _ = (M + 64) | 0;
          n[p >> 1] = n[_ >> 1] | 0;
          n[(p + 2) >> 1] = n[(_ + 2) >> 1] | 0;
          n[(p + 4) >> 1] = n[(_ + 4) >> 1] | 0;
          n[(p + 6) >> 1] = n[(_ + 6) >> 1] | 0;
          n[(p + 8) >> 1] = n[(_ + 8) >> 1] | 0;
          n[(p + 10) >> 1] = n[(_ + 10) >> 1] | 0;
          n[(p + 12) >> 1] = n[(_ + 12) >> 1] | 0;
          n[(p + 14) >> 1] = n[(_ + 14) >> 1] | 0;
          p = (s + 64) | 0;
          _ = (M + 96) | 0;
          n[p >> 1] = n[_ >> 1] | 0;
          n[(p + 2) >> 1] = n[(_ + 2) >> 1] | 0;
          n[(p + 4) >> 1] = n[(_ + 4) >> 1] | 0;
          n[(p + 6) >> 1] = n[(_ + 6) >> 1] | 0;
          n[(p + 8) >> 1] = n[(_ + 8) >> 1] | 0;
          n[(p + 10) >> 1] = n[(_ + 10) >> 1] | 0;
          n[(p + 12) >> 1] = n[(_ + 12) >> 1] | 0;
          n[(p + 14) >> 1] = n[(_ + 14) >> 1] | 0;
          p = (s + 80) | 0;
          _ = (M + 48) | 0;
          n[p >> 1] = n[_ >> 1] | 0;
          n[(p + 2) >> 1] = n[(_ + 2) >> 1] | 0;
          n[(p + 4) >> 1] = n[(_ + 4) >> 1] | 0;
          n[(p + 6) >> 1] = n[(_ + 6) >> 1] | 0;
          n[(p + 8) >> 1] = n[(_ + 8) >> 1] | 0;
          n[(p + 10) >> 1] = n[(_ + 10) >> 1] | 0;
          n[(p + 12) >> 1] = n[(_ + 12) >> 1] | 0;
          n[(p + 14) >> 1] = n[(_ + 14) >> 1] | 0;
          p = (s + 96) | 0;
          _ = (M + 80) | 0;
          n[p >> 1] = n[_ >> 1] | 0;
          n[(p + 2) >> 1] = n[(_ + 2) >> 1] | 0;
          n[(p + 4) >> 1] = n[(_ + 4) >> 1] | 0;
          n[(p + 6) >> 1] = n[(_ + 6) >> 1] | 0;
          n[(p + 8) >> 1] = n[(_ + 8) >> 1] | 0;
          n[(p + 10) >> 1] = n[(_ + 10) >> 1] | 0;
          n[(p + 12) >> 1] = n[(_ + 12) >> 1] | 0;
          n[(p + 14) >> 1] = n[(_ + 14) >> 1] | 0;
          p = (s + 112) | 0;
          _ = (M + 112) | 0;
          n[p >> 1] = n[_ >> 1] | 0;
          n[(p + 2) >> 1] = n[(_ + 2) >> 1] | 0;
          n[(p + 4) >> 1] = n[(_ + 4) >> 1] | 0;
          n[(p + 6) >> 1] = n[(_ + 6) >> 1] | 0;
          n[(p + 8) >> 1] = n[(_ + 8) >> 1] | 0;
          n[(p + 10) >> 1] = n[(_ + 10) >> 1] | 0;
          n[(p + 12) >> 1] = n[(_ + 12) >> 1] | 0;
          n[(p + 14) >> 1] = n[(_ + 14) >> 1] | 0;
          Jb(j, 64, (s + 128) | 0);
          p = q;
          _ = (p + 64) | 0;
          do {
            i[p >> 2] = 0;
            p = (p + 4) | 0;
          } while ((p | 0) < (_ | 0));
          s = r;
          M = s;
          s = (s + 4) | 0;
          s = a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24);
          _ = q;
          i[_ >> 2] = a[M >> 0] | (a[(M + 1) >> 0] << 8) | (a[(M + 2) >> 0] << 16) | (a[(M + 3) >> 0] << 24);
          i[(_ + 4) >> 2] = s;
          _ = (r + 8) | 0;
          s = _;
          _ = (_ + 4) | 0;
          _ = a[_ >> 0] | (a[(_ + 1) >> 0] << 8) | (a[(_ + 2) >> 0] << 16) | (a[(_ + 3) >> 0] << 24);
          M = (q + 64) | 0;
          i[M >> 2] = a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24);
          i[(M + 4) >> 2] = _;
          M = (r + 16) | 0;
          _ = M;
          M = (M + 4) | 0;
          M = a[M >> 0] | (a[(M + 1) >> 0] << 8) | (a[(M + 2) >> 0] << 16) | (a[(M + 3) >> 0] << 24);
          s = (q + 128) | 0;
          i[s >> 2] = a[_ >> 0] | (a[(_ + 1) >> 0] << 8) | (a[(_ + 2) >> 0] << 16) | (a[(_ + 3) >> 0] << 24);
          i[(s + 4) >> 2] = M;
          s = e;
          e = s;
          s = (s + 4) | 0;
          s = a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24);
          M = (q + 192) | 0;
          i[M >> 2] = a[e >> 0] | (a[(e + 1) >> 0] << 8) | (a[(e + 2) >> 0] << 16) | (a[(e + 3) >> 0] << 24);
          i[(M + 4) >> 2] = s;
          M = h;
          s = M;
          M = (M + 4) | 0;
          M = a[M >> 0] | (a[(M + 1) >> 0] << 8) | (a[(M + 2) >> 0] << 16) | (a[(M + 3) >> 0] << 24);
          e = (q + 384) | 0;
          i[e >> 2] = a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24);
          i[(e + 4) >> 2] = M;
          e = 0;
          while (1) {
            if ((e | 0) == 8) break;
            M = e << 3;
            o[(q + (M + 128)) >> 0] = o[(r + (e + 40)) >> 0] | 0;
            o[(q + (M + 256)) >> 0] = o[(r + (e + 48)) >> 0] | 0;
            o[(q + (M + 448)) >> 0] = o[(r + (e + 56)) >> 0] | 0;
            e = (e + 1) | 0;
          }
          _a(q, 704, $, l, d);
          _a(j, 64, $, l, d);
          w = ee;
          return;
        }
        function yb(e, r, s, d, p, k, _, M, j, q) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          var $ = 0.0,
            ee = 0,
            te = 0,
            re = 0.0,
            se = 0.0,
            oe = 0.0,
            ne = 0,
            ie = 0,
            Ae = 0.0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0.0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Pe = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0,
            Et = 0,
            It = 0,
            Ct = 0,
            mt = 0,
            Bt = 0,
            Qt = 0,
            bt = 0,
            wt = 0,
            yt = 0,
            kt = 0,
            Rt = 0,
            Tt = 0,
            Dt = 0;
          Dt = w;
          w = (w + 4560) | 0;
          Rt = (Dt + 2376) | 0;
          mt = (Dt + 128) | 0;
          Ct = (Dt + 4176) | 0;
          yt = (Dt + 4304) | 0;
          wt = (Dt + 3664) | 0;
          Bt = Dt;
          It = (Dt + 3408) | 0;
          Qt = (Dt + 1864) | 0;
          kt = (Dt + 840) | 0;
          bt = (Dt + 832) | 0;
          dt = p;
          ft = k;
          ht = (64 - ((_e(M | 0) | 0) ^ 31)) | 0;
          pt = (M | 0) == 0;
          Et = M >>> 0 < 2147483649;
          Re = (M + -1) | 0;
          gt = ((Re & M) | 0) == 0;
          ke = bc(16777215, -1, ht | 0) | 0;
          ke = (Re | 0) == (ke | 0);
          Re = r;
          Te = k;
          De = p;
          Fe = (Qt + 4) | 0;
          ve = (Qt + 8) | 0;
          Se = (Qt + 256) | 0;
          Ne = (Qt + 336) | 0;
          Oe = (Qt + 256) | 0;
          Ue = (Bt + 64) | 0;
          Ge = (Bt + 24) | 0;
          Pe = (mt + 24) | 0;
          Le = (mt + 32) | 0;
          Me = (Bt + 48) | 0;
          xe = (mt + 40) | 0;
          He = (Bt + 8) | 0;
          Ve = (mt + 48) | 0;
          Ye = (Bt + 56) | 0;
          je = (mt + 56) | 0;
          qe = (Bt + 16) | 0;
          Je = (Ct + 48) | 0;
          We = (It + 16) | 0;
          Ke = (Ct + 80) | 0;
          Xe = (It + 32) | 0;
          ze = (Ct + 112) | 0;
          Ze = (It + 48) | 0;
          $e = (It + 96) | 0;
          tt = (Ct + 64) | 0;
          rt = (It + 112) | 0;
          st = (Ct + 96) | 0;
          ot = (It + 128) | 0;
          nt = (mt + 64) | 0;
          it = (Bt + 32) | 0;
          At = (mt + 128) | 0;
          at = (Bt + 40) | 0;
          ct = (mt + 192) | 0;
          lt = (mt + 384) | 0;
          ye = kt;
          ut = (kt + 1024) | 0;
          Qe = r;
          e: while (1) {
            if (!s) {
              Tt = 155;
              break;
            }
            be = s >>> 0 < 131072 ? s : 131072;
            i[bt >> 2] = dt;
            we = (Qe + be) | 0;
            M = Qe;
            if (pt) {
              Tt = 4;
              break;
            }
            if (!Et) {
              Tt = 6;
              break;
            }
            if (!gt) {
              Tt = 8;
              break;
            }
            if (!ke) {
              Tt = 10;
              break;
            }
            t: do {
              if (be >>> 0 > 15) {
                ae = (be + -6) | 0;
                Be = (s + -16) | 0;
                Be = (Qe + (ae >>> 0 < Be >>> 0 ? ae : Be)) | 0;
                ae = (Qe + 1) | 0;
                te = ae;
                ee = te;
                te = (te + 4) | 0;
                ee = a[ee >> 0] | (a[(ee + 1) >> 0] << 8) | (a[(ee + 2) >> 0] << 16) | (a[(ee + 3) >> 0] << 24);
                te = a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24);
                Ce = -1;
                ne = ft;
                while (1) {
                  ee = lc(ee | 0, te | 0, -1480785920, 7733) | 0;
                  ee = bc(ee | 0, de | 0, ht | 0) | 0;
                  Ee = M;
                  if (Ee >>> 0 >= ae >>> 0) {
                    Tt = 15;
                    break e;
                  }
                  ge = (0 - Ce) | 0;
                  Ie = ae;
                  le = 32;
                  while (1) {
                    fe = Ie;
                    te = le;
                    le = (le + 1) | 0;
                    me = Ie;
                    pe = me;
                    me = (me + 4) | 0;
                    me =
                      lc(
                        a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24) | 0,
                        a[me >> 0] | (a[(me + 1) >> 0] << 8) | (a[(me + 2) >> 0] << 16) | (a[(me + 3) >> 0] << 24) | 0,
                        -1480785920,
                        7733
                      ) | 0;
                    me = bc(me | 0, de | 0, ht | 0) | 0;
                    if ((ee | 0) != (me | 0)) {
                      Tt = 17;
                      break e;
                    }
                    ae = (Ie + (te >>> 5)) | 0;
                    if (ae >>> 0 > Be >>> 0) break t;
                    ce = ae;
                    te = ce;
                    ce = (ce + 4) | 0;
                    ce =
                      lc(
                        a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0,
                        a[ce >> 0] | (a[(ce + 1) >> 0] << 8) | (a[(ce + 2) >> 0] << 16) | (a[(ce + 3) >> 0] << 24) | 0,
                        -1480785920,
                        7733
                      ) | 0;
                    ce = bc(ce | 0, de | 0, ht | 0) | 0;
                    te = (Ie + ge) | 0;
                    if (
                      (
                        (a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24) | 0) ==
                        (a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0)
                          ? (o[(Ie + 4) >> 0] | 0) == (o[(Ie + (4 - Ce)) >> 0] | 0)
                          : 0
                      )
                        ? (ge | 0) < 0
                          ? (o[(Ie + 5) >> 0] | 0) == (o[(Ie + (5 - Ce)) >> 0] | 0)
                          : 0
                        : 0
                    ) {
                      Tt = 22;
                      break;
                    }
                    ee = (_ + (ee << 2)) | 0;
                    ie = i[ee >> 2] | 0;
                    te = (r + ie) | 0;
                    if ((ie | 0) < 0) {
                      Tt = 24;
                      break e;
                    }
                    if (te >>> 0 >= Ie >>> 0) {
                      Tt = 26;
                      break e;
                    }
                    i[ee >> 2] = fe - Re;
                    if (
                      (a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24) | 0) !=
                      (a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0)
                    ) {
                      ee = ce;
                      Ie = ae;
                      continue;
                    }
                    if ((o[(Ie + 4) >> 0] | 0) != (o[(r + (ie + 4)) >> 0] | 0)) {
                      ee = ce;
                      Ie = ae;
                      continue;
                    }
                    if ((o[(Ie + 5) >> 0] | 0) == (o[(r + (ie + 5)) >> 0] | 0)) break;
                    else {
                      ee = ce;
                      Ie = ae;
                    }
                  }
                  if ((Tt | 0) == 22) {
                    Tt = 0;
                    i[(_ + (ee << 2)) >> 2] = fe - Re;
                  }
                  ae = te;
                  me = (Qe + (be + -4)) | 0;
                  ee = 0;
                  ie = (Ie + 6) | 0;
                  while (1) {
                    if (ie >>> 0 > me >>> 0) {
                      pe = ee;
                      ee = ie;
                      break;
                    }
                    pe = (te + (ee + 6)) | 0;
                    if (
                      (a[ie >> 0] | (a[(ie + 1) >> 0] << 8) | (a[(ie + 2) >> 0] << 16) | (a[(ie + 3) >> 0] << 24) | 0) !=
                      (a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24) | 0)
                    ) {
                      pe = ee;
                      ee = ie;
                      break;
                    }
                    ee = (ee + 4) | 0;
                    ie = (ie + 4) | 0;
                  }
                  while (1) {
                    if (ee >>> 0 >= we >>> 0) break;
                    if ((o[(te + (pe + 6)) >> 0] | 0) != (o[ee >> 0] | 0)) break;
                    pe = (pe + 1) | 0;
                    ee = (ee + 1) | 0;
                  }
                  he = (pe + 6) | 0;
                  ie = (fe - ae) | 0;
                  ge = (fe - M) | 0;
                  fe = (Ie + he) | 0;
                  M = fe;
                  r: do {
                    if (he) {
                      ce = he;
                      le = Ie;
                      while (1) {
                        ee = o[le >> 0] | 0;
                        ae = o[te >> 0] | 0;
                        if ((ee << 24) >> 24 != (ae << 24) >> 24) break;
                        ce = (ce + -1) | 0;
                        if (!ce) break r;
                        else {
                          le = (le + 1) | 0;
                          te = (te + 1) | 0;
                        }
                      }
                      if ((ee << 24) >> 24 != (ae << 24) >> 24) {
                        Tt = 41;
                        break e;
                      }
                    }
                  } while (0);
                  do {
                    if (ge >>> 0 >= 6) {
                      if (ge >>> 0 < 130) {
                        ae = (ge + -2) | 0;
                        le = (((_e(ae | 0) | 0) ^ 31) + -1) | 0;
                        ce = ae >>> le;
                        i[i[bt >> 2] >> 2] = ((le << 1) + ce + 2) | ((ae - (ce << le)) << 8);
                        break;
                      }
                      if (ge >>> 0 < 2114) {
                        ce = (ge + -66) | 0;
                        le = (_e(ce | 0) | 0) ^ 31;
                        i[i[bt >> 2] >> 2] = (le + 10) | ((ce - (1 << le)) << 8);
                        break;
                      }
                      if (ge >>> 0 < 6210) {
                        i[i[bt >> 2] >> 2] = ((ge << 8) + -541184) | 21;
                        break;
                      }
                      ee = ge << 8;
                      if (ge >>> 0 < 22594) {
                        i[i[bt >> 2] >> 2] = (ee + -1589760) | 22;
                        break;
                      } else {
                        i[i[bt >> 2] >> 2] = (ee + -5784064) | 23;
                        break;
                      }
                    } else i[i[bt >> 2] >> 2] = ge;
                  } while (0);
                  i[bt >> 2] = (i[bt >> 2] | 0) + 4;
                  dc(ne | 0, Ee | 0, ge | 0) | 0;
                  ne = (ne + ge) | 0;
                  if ((ie | 0) == (Ce | 0)) {
                    i[i[bt >> 2] >> 2] = 64;
                    ee = i[bt >> 2] | 0;
                    ie = Ce;
                  } else {
                    Ee = (ie + 3) | 0;
                    ee = (((_e(Ee | 0) | 0) ^ 31) + -1) | 0;
                    Ce = (Ee >>> ee) & 1;
                    i[i[bt >> 2] >> 2] = ((((ee << 1) + -2) | Ce) + 80) | ((Ee - ((Ce | 2) << ee)) << 8);
                    ee = i[bt >> 2] | 0;
                  }
                  ee = (ee + 4) | 0;
                  i[bt >> 2] = ee;
                  do {
                    if (he >>> 0 >= 12) {
                      if (he >>> 0 < 72) {
                        he = (pe + -2) | 0;
                        Ce = (((_e(he | 0) | 0) ^ 31) + -1) | 0;
                        Ee = he >>> Ce;
                        i[ee >> 2] = ((Ce << 1) + Ee + 28) | ((he - (Ee << Ce)) << 8);
                        i[bt >> 2] = (i[bt >> 2] | 0) + 4;
                        break;
                      }
                      if (he >>> 0 < 136) {
                        Ce = (pe + -2) | 0;
                        i[ee >> 2] = ((Ce >>> 5) + 54) | ((Ce << 8) & 7936);
                        Ce = ((i[bt >> 2] | 0) + 4) | 0;
                        i[bt >> 2] = Ce;
                        i[Ce >> 2] = 64;
                        i[bt >> 2] = (i[bt >> 2] | 0) + 4;
                        break;
                      }
                      if (he >>> 0 < 2120) {
                        Ee = (pe + -66) | 0;
                        Ce = (_e(Ee | 0) | 0) ^ 31;
                        i[ee >> 2] = (Ce + 52) | ((Ee - (1 << Ce)) << 8);
                        Ce = ((i[bt >> 2] | 0) + 4) | 0;
                        i[bt >> 2] = Ce;
                        i[Ce >> 2] = 64;
                        i[bt >> 2] = (i[bt >> 2] | 0) + 4;
                        break;
                      } else {
                        i[ee >> 2] = ((he << 8) + -542720) | 63;
                        Ce = ((i[bt >> 2] | 0) + 4) | 0;
                        i[bt >> 2] = Ce;
                        i[Ce >> 2] = 64;
                        i[bt >> 2] = (i[bt >> 2] | 0) + 4;
                        break;
                      }
                    } else {
                      i[ee >> 2] = pe + 26;
                      i[bt >> 2] = (i[bt >> 2] | 0) + 4;
                    }
                  } while (0);
                  if (fe >>> 0 >= Be >>> 0) break t;
                  te = (Ie + (pe + 1)) | 0;
                  Ce = te;
                  Ce = a[Ce >> 0] | (a[(Ce + 1) >> 0] << 8) | (a[(Ce + 2) >> 0] << 16) | (a[(Ce + 3) >> 0] << 24);
                  te = (te + 4) | 0;
                  te = a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24);
                  he = lc(Ce | 0, te | 0, -1480785920, 7733) | 0;
                  he = bc(he | 0, de | 0, ht | 0) | 0;
                  Ee = (fe - Re) | 0;
                  i[(_ + (he << 2)) >> 2] = Ee + -5;
                  he = bc(Ce | 0, te | 0, 8) | 0;
                  he = lc(he | 0, de | 0, -1480785920, 7733) | 0;
                  he = bc(he | 0, de | 0, ht | 0) | 0;
                  i[(_ + (he << 2)) >> 2] = Ee + -4;
                  te = bc(Ce | 0, te | 0, 16) | 0;
                  te = lc(te | 0, de | 0, -1480785920, 7733) | 0;
                  te = bc(te | 0, de | 0, ht | 0) | 0;
                  i[(_ + (te << 2)) >> 2] = Ee + -3;
                  te = (Ie + (pe + 4)) | 0;
                  Ie = te;
                  Ie = a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24);
                  te = (te + 4) | 0;
                  te = a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24);
                  Ce = bc(Ie | 0, te | 0, 16) | 0;
                  Ce = lc(Ce | 0, de | 0, -1480785920, 7733) | 0;
                  Ce = bc(Ce | 0, de | 0, ht | 0) | 0;
                  pe = lc(Ie | 0, te | 0, -1480785920, 7733) | 0;
                  pe = bc(pe | 0, de | 0, ht | 0) | 0;
                  i[(_ + (pe << 2)) >> 2] = Ee + -2;
                  te = bc(Ie | 0, te | 0, 8) | 0;
                  te = lc(te | 0, de | 0, -1480785920, 7733) | 0;
                  te = bc(te | 0, de | 0, ht | 0) | 0;
                  i[(_ + (te << 2)) >> 2] = Ee + -1;
                  Ce = (_ + (Ce << 2)) | 0;
                  te = i[Ce >> 2] | 0;
                  i[Ce >> 2] = Ee;
                  while (1) {
                    ce = (r + te) | 0;
                    Ce = M;
                    ee = M;
                    if (
                      (a[Ce >> 0] | (a[(Ce + 1) >> 0] << 8) | (a[(Ce + 2) >> 0] << 16) | (a[(Ce + 3) >> 0] << 24) | 0) !=
                      (a[ce >> 0] | (a[(ce + 1) >> 0] << 8) | (a[(ce + 2) >> 0] << 16) | (a[(ce + 3) >> 0] << 24) | 0)
                    )
                      break;
                    if ((o[(ee + 4) >> 0] | 0) != (o[(r + (te + 4)) >> 0] | 0)) break;
                    if ((o[(ee + 5) >> 0] | 0) != (o[(r + (te + 5)) >> 0] | 0)) break;
                    ae = (te + 6) | 0;
                    te = 0;
                    ie = (ee + 6) | 0;
                    while (1) {
                      if (ie >>> 0 > me >>> 0) break;
                      Ce = (r + (ae + te)) | 0;
                      if (
                        (a[ie >> 0] | (a[(ie + 1) >> 0] << 8) | (a[(ie + 2) >> 0] << 16) | (a[(ie + 3) >> 0] << 24) | 0) !=
                        (a[Ce >> 0] | (a[(Ce + 1) >> 0] << 8) | (a[(Ce + 2) >> 0] << 16) | (a[(Ce + 3) >> 0] << 24) | 0)
                      )
                        break;
                      te = (te + 4) | 0;
                      ie = (ie + 4) | 0;
                    }
                    while (1) {
                      if (ie >>> 0 >= we >>> 0) break;
                      if ((o[(r + (ae + te)) >> 0] | 0) != (o[ie >> 0] | 0)) break;
                      te = (te + 1) | 0;
                      ie = (ie + 1) | 0;
                    }
                    fe = (te + 6) | 0;
                    he = (ee + fe) | 0;
                    pe = he;
                    ie = (M - ce) | 0;
                    do {
                      if (fe) {
                        le = fe;
                        ge = ee;
                        while (1) {
                          M = o[ge >> 0] | 0;
                          ae = o[ce >> 0] | 0;
                          if ((M << 24) >> 24 != (ae << 24) >> 24) {
                            Tt = 80;
                            break;
                          }
                          le = (le + -1) | 0;
                          if (!le) break;
                          else {
                            ge = (ge + 1) | 0;
                            ce = (ce + 1) | 0;
                          }
                        }
                        if ((Tt | 0) == 80 ? ((Tt = 0), (M << 24) >> 24 != (ae << 24) >> 24) : 0) {
                          Tt = 81;
                          break e;
                        }
                        if (fe >>> 0 < 10) {
                          Tt = 83;
                          break;
                        }
                        if (fe >>> 0 < 134) {
                          Ce = (((_e(te | 0) | 0) ^ 31) + -1) | 0;
                          Ie = te >>> Ce;
                          i[i[bt >> 2] >> 2] = ((Ce << 1) + Ie + 44) | ((te - (Ie << Ce)) << 8);
                          break;
                        }
                        if (fe >>> 0 < 2118) {
                          Ie = (te + -64) | 0;
                          Ce = (_e(Ie | 0) | 0) ^ 31;
                          i[i[bt >> 2] >> 2] = (Ce + 52) | ((Ie - (1 << Ce)) << 8);
                          break;
                        } else {
                          i[i[bt >> 2] >> 2] = ((fe << 8) + -542208) | 63;
                          break;
                        }
                      } else Tt = 83;
                    } while (0);
                    if ((Tt | 0) == 83) {
                      Tt = 0;
                      i[i[bt >> 2] >> 2] = te + 44;
                    }
                    Ce = ((i[bt >> 2] | 0) + 4) | 0;
                    i[bt >> 2] = Ce;
                    fe = (ie + 3) | 0;
                    Ie = (((_e(fe | 0) | 0) ^ 31) + -1) | 0;
                    Ee = (fe >>> Ie) & 1;
                    i[Ce >> 2] = ((((Ie << 1) + -2) | Ee) + 80) | ((fe - ((Ee | 2) << Ie)) << 8);
                    i[bt >> 2] = (i[bt >> 2] | 0) + 4;
                    if (he >>> 0 >= Be >>> 0) {
                      M = pe;
                      break t;
                    }
                    Ie = (ee + (te + 1)) | 0;
                    M = Ie;
                    M = a[M >> 0] | (a[(M + 1) >> 0] << 8) | (a[(M + 2) >> 0] << 16) | (a[(M + 3) >> 0] << 24);
                    Ie = (Ie + 4) | 0;
                    Ie = a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24);
                    Ee = lc(M | 0, Ie | 0, -1480785920, 7733) | 0;
                    Ee = bc(Ee | 0, de | 0, ht | 0) | 0;
                    Ce = (he - Re) | 0;
                    i[(_ + (Ee << 2)) >> 2] = Ce + -5;
                    Ee = bc(M | 0, Ie | 0, 8) | 0;
                    Ee = lc(Ee | 0, de | 0, -1480785920, 7733) | 0;
                    Ee = bc(Ee | 0, de | 0, ht | 0) | 0;
                    i[(_ + (Ee << 2)) >> 2] = Ce + -4;
                    Ie = bc(M | 0, Ie | 0, 16) | 0;
                    Ie = lc(Ie | 0, de | 0, -1480785920, 7733) | 0;
                    Ie = bc(Ie | 0, de | 0, ht | 0) | 0;
                    i[(_ + (Ie << 2)) >> 2] = Ce + -3;
                    te = (ee + (te + 4)) | 0;
                    Ie = te;
                    Ie = a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24);
                    te = (te + 4) | 0;
                    te = a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24);
                    M = bc(Ie | 0, te | 0, 16) | 0;
                    M = lc(M | 0, de | 0, -1480785920, 7733) | 0;
                    M = bc(M | 0, de | 0, ht | 0) | 0;
                    Ee = lc(Ie | 0, te | 0, -1480785920, 7733) | 0;
                    Ee = bc(Ee | 0, de | 0, ht | 0) | 0;
                    i[(_ + (Ee << 2)) >> 2] = Ce + -2;
                    te = bc(Ie | 0, te | 0, 8) | 0;
                    te = lc(te | 0, de | 0, -1480785920, 7733) | 0;
                    te = bc(te | 0, de | 0, ht | 0) | 0;
                    i[(_ + (te << 2)) >> 2] = Ce + -1;
                    M = (_ + (M << 2)) | 0;
                    te = i[M >> 2] | 0;
                    i[M >> 2] = Ce;
                    M = pe;
                  }
                  ae = (ee + 1) | 0;
                  te = ae;
                  ee = te;
                  te = (te + 4) | 0;
                  ee = a[ee >> 0] | (a[(ee + 1) >> 0] << 8) | (a[(ee + 2) >> 0] << 16) | (a[(ee + 3) >> 0] << 24);
                  te = a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24);
                  Ce = ie;
                }
              } else ne = ft;
            } while (0);
            te = M;
            if (te >>> 0 > we >>> 0) {
              Tt = 93;
              break;
            }
            if (te >>> 0 < we >>> 0) {
              M = (we - M) | 0;
              do {
                if (M >>> 0 >= 6) {
                  if (M >>> 0 < 130) {
                    Ce = (M + -2) | 0;
                    Be = (((_e(Ce | 0) | 0) ^ 31) + -1) | 0;
                    me = Ce >>> Be;
                    i[i[bt >> 2] >> 2] = ((Be << 1) + me + 2) | ((Ce - (me << Be)) << 8);
                    break;
                  }
                  if (M >>> 0 < 2114) {
                    me = (M + -66) | 0;
                    Be = (_e(me | 0) | 0) ^ 31;
                    i[i[bt >> 2] >> 2] = (Be + 10) | ((me - (1 << Be)) << 8);
                    break;
                  }
                  if (M >>> 0 < 6210) {
                    i[i[bt >> 2] >> 2] = ((M << 8) + -541184) | 21;
                    break;
                  }
                  ee = M << 8;
                  if (M >>> 0 < 22594) {
                    i[i[bt >> 2] >> 2] = (ee + -1589760) | 22;
                    break;
                  } else {
                    i[i[bt >> 2] >> 2] = (ee + -5784064) | 23;
                    break;
                  }
                } else i[i[bt >> 2] >> 2] = M;
              } while (0);
              i[bt >> 2] = (i[bt >> 2] | 0) + 4;
              dc(ne | 0, te | 0, M | 0) | 0;
              ne = (ne + M) | 0;
            }
            ae = (ne - Te) | 0;
            $ = +(be >>> 0);
            if (!(+(ae >>> 0) < $ * 0.98)) {
              ac(kt | 0, 0, 1024) | 0;
              ue = $ * 8.0 * 0.98;
              M = 0;
              while (1) {
                if (M >>> 0 >= be >>> 0) {
                  M = ye;
                  $ = 0.0;
                  ie = 0;
                  break;
                }
                Be = (kt + (a[(Qe + M) >> 0] << 2)) | 0;
                i[Be >> 2] = (i[Be >> 2] | 0) + 1;
                M = (M + 43) | 0;
              }
              while (1) {
                if (M >>> 0 >= ut >>> 0) break;
                ee = i[M >> 2] | 0;
                re = +(ee >>> 0);
                if (ee >>> 0 < 256) Ae = +h[(19516 + (ee << 2)) >> 2];
                else Ae = +Xb(re);
                te = i[(M + 4) >> 2] | 0;
                se = +(te >>> 0);
                if (te >>> 0 < 256) oe = +h[(19516 + (te << 2)) >> 2];
                else oe = +Xb(se);
                M = (M + 8) | 0;
                $ = $ - re * Ae - se * oe;
                ie = (ie + ee + te) | 0;
              }
              Ae = ue / 43.0;
              se = +(ie >>> 0);
              if (!ie) oe = se;
              else {
                if (ie >>> 0 < 256) re = +h[(19516 + (ie << 2)) >> 2];
                else re = +Xb(se);
                oe = se;
                $ = $ + se * re;
              }
              if (!(($ < oe ? oe : $) < Ae)) {
                zb(be, 1, j, q);
                Be = ((i[j >> 2] | 0) + 7) | 0;
                i[j >> 2] = Be & -8;
                dc((q + (Be >>> 3)) | 0, Qe | 0, be | 0) | 0;
                Qe = ((i[j >> 2] | 0) + (be << 3)) | 0;
                i[j >> 2] = Qe;
                o[(q + (Qe >>> 3)) >> 0] = 0;
              } else Tt = 126;
            } else Tt = 126;
            if ((Tt | 0) == 126) {
              Tt = 0;
              fe = ((i[bt >> 2] | 0) - De) >> 2;
              zb(be, 0, j, q);
              ee = (q + ((i[j >> 2] | 0) >>> 3)) | 0;
              Qe = a[ee >> 0] | 0;
              te = ee;
              o[te >> 0] = Qe;
              o[(te + 1) >> 0] = Qe >> 8;
              o[(te + 2) >> 0] = Qe >> 16;
              o[(te + 3) >> 0] = Qe >> 24;
              ee = (ee + 4) | 0;
              o[ee >> 0] = 0;
              o[(ee + 1) >> 0] = 0;
              o[(ee + 2) >> 0] = 0;
              o[(ee + 3) >> 0] = 0;
              i[j >> 2] = (i[j >> 2] | 0) + 13;
              ac(kt | 0, 0, 1024) | 0;
              ee = Bt;
              te = (ee + 128) | 0;
              do {
                i[ee >> 2] = 0;
                ee = (ee + 4) | 0;
              } while ((ee | 0) < (te | 0));
              ac(It | 0, 0, 256) | 0;
              ac(Qt | 0, 0, 512) | 0;
              M = (ne - Te) | 0;
              ee = 0;
              while (1) {
                if ((ee | 0) == (M | 0)) break;
                Qe = (kt + (a[(k + ee) >> 0] << 2)) | 0;
                i[Qe >> 2] = (i[Qe >> 2] | 0) + 1;
                ee = (ee + 1) | 0;
              }
              $a(e, kt, ae, 8, yt, wt, j, q);
              M = 0;
              while (1) {
                if ((M | 0) == (fe | 0)) break;
                Qe = (Qt + ((i[(p + (M << 2)) >> 2] & 255) << 2)) | 0;
                i[Qe >> 2] = (i[Qe >> 2] | 0) + 1;
                M = (M + 1) | 0;
              }
              i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
              i[ve >> 2] = (i[ve >> 2] | 0) + 1;
              i[Se >> 2] = (i[Se >> 2] | 0) + 1;
              i[Ne >> 2] = (i[Ne >> 2] | 0) + 1;
              ac(mt | 0, 0, 704) | 0;
              Hb(Qt, 64, 15, Rt, Bt);
              Hb(Oe, 64, 14, Rt, Ue);
              i[mt >> 2] = i[Ge >> 2];
              i[(mt + 4) >> 2] = i[(Ge + 4) >> 2];
              i[(mt + 8) >> 2] = i[(Ge + 8) >> 2];
              i[(mt + 12) >> 2] = i[(Ge + 12) >> 2];
              i[(mt + 16) >> 2] = i[(Ge + 16) >> 2];
              i[(mt + 20) >> 2] = i[(Ge + 20) >> 2];
              te = Bt;
              M = i[(te + 4) >> 2] | 0;
              ee = Pe;
              i[ee >> 2] = i[te >> 2];
              i[(ee + 4) >> 2] = M;
              ee = Me;
              M = i[(ee + 4) >> 2] | 0;
              te = Le;
              i[te >> 2] = i[ee >> 2];
              i[(te + 4) >> 2] = M;
              te = He;
              M = i[(te + 4) >> 2] | 0;
              ee = xe;
              i[ee >> 2] = i[te >> 2];
              i[(ee + 4) >> 2] = M;
              ee = Ye;
              M = i[(ee + 4) >> 2] | 0;
              te = Ve;
              i[te >> 2] = i[ee >> 2];
              i[(te + 4) >> 2] = M;
              te = qe;
              M = i[(te + 4) >> 2] | 0;
              ee = je;
              i[ee >> 2] = i[te >> 2];
              i[(ee + 4) >> 2] = M;
              Jb(mt, 64, Ct);
              n[It >> 1] = n[Je >> 1] | 0;
              n[(It + 2) >> 1] = n[(Je + 2) >> 1] | 0;
              n[(It + 4) >> 1] = n[(Je + 4) >> 1] | 0;
              n[(It + 6) >> 1] = n[(Je + 6) >> 1] | 0;
              n[(It + 8) >> 1] = n[(Je + 8) >> 1] | 0;
              n[(It + 10) >> 1] = n[(Je + 10) >> 1] | 0;
              n[(It + 12) >> 1] = n[(Je + 12) >> 1] | 0;
              n[(It + 14) >> 1] = n[(Je + 14) >> 1] | 0;
              n[We >> 1] = n[Ke >> 1] | 0;
              n[(We + 2) >> 1] = n[(Ke + 2) >> 1] | 0;
              n[(We + 4) >> 1] = n[(Ke + 4) >> 1] | 0;
              n[(We + 6) >> 1] = n[(Ke + 6) >> 1] | 0;
              n[(We + 8) >> 1] = n[(Ke + 8) >> 1] | 0;
              n[(We + 10) >> 1] = n[(Ke + 10) >> 1] | 0;
              n[(We + 12) >> 1] = n[(Ke + 12) >> 1] | 0;
              n[(We + 14) >> 1] = n[(Ke + 14) >> 1] | 0;
              n[Xe >> 1] = n[ze >> 1] | 0;
              n[(Xe + 2) >> 1] = n[(ze + 2) >> 1] | 0;
              n[(Xe + 4) >> 1] = n[(ze + 4) >> 1] | 0;
              n[(Xe + 6) >> 1] = n[(ze + 6) >> 1] | 0;
              n[(Xe + 8) >> 1] = n[(ze + 8) >> 1] | 0;
              n[(Xe + 10) >> 1] = n[(ze + 10) >> 1] | 0;
              n[(Xe + 12) >> 1] = n[(ze + 12) >> 1] | 0;
              n[(Xe + 14) >> 1] = n[(ze + 14) >> 1] | 0;
              ee = Ze;
              M = Ct;
              te = (ee + 48) | 0;
              do {
                n[ee >> 1] = n[M >> 1] | 0;
                ee = (ee + 2) | 0;
                M = (M + 2) | 0;
              } while ((ee | 0) < (te | 0));
              n[$e >> 1] = n[tt >> 1] | 0;
              n[($e + 2) >> 1] = n[(tt + 2) >> 1] | 0;
              n[($e + 4) >> 1] = n[(tt + 4) >> 1] | 0;
              n[($e + 6) >> 1] = n[(tt + 6) >> 1] | 0;
              n[($e + 8) >> 1] = n[(tt + 8) >> 1] | 0;
              n[($e + 10) >> 1] = n[(tt + 10) >> 1] | 0;
              n[($e + 12) >> 1] = n[(tt + 12) >> 1] | 0;
              n[($e + 14) >> 1] = n[(tt + 14) >> 1] | 0;
              n[rt >> 1] = n[st >> 1] | 0;
              n[(rt + 2) >> 1] = n[(st + 2) >> 1] | 0;
              n[(rt + 4) >> 1] = n[(st + 4) >> 1] | 0;
              n[(rt + 6) >> 1] = n[(st + 6) >> 1] | 0;
              n[(rt + 8) >> 1] = n[(st + 8) >> 1] | 0;
              n[(rt + 10) >> 1] = n[(st + 10) >> 1] | 0;
              n[(rt + 12) >> 1] = n[(st + 12) >> 1] | 0;
              n[(rt + 14) >> 1] = n[(st + 14) >> 1] | 0;
              Jb(Ue, 64, ot);
              ee = mt;
              te = (ee + 64) | 0;
              do {
                i[ee >> 2] = 0;
                ee = (ee + 4) | 0;
              } while ((ee | 0) < (te | 0));
              Be = Ge;
              Qe = i[(Be + 4) >> 2] | 0;
              M = mt;
              i[M >> 2] = i[Be >> 2];
              i[(M + 4) >> 2] = Qe;
              M = it;
              Qe = i[(M + 4) >> 2] | 0;
              Be = nt;
              i[Be >> 2] = i[M >> 2];
              i[(Be + 4) >> 2] = Qe;
              Be = at;
              Qe = i[(Be + 4) >> 2] | 0;
              M = At;
              i[M >> 2] = i[Be >> 2];
              i[(M + 4) >> 2] = Qe;
              M = Me;
              Qe = i[(M + 4) >> 2] | 0;
              Be = ct;
              i[Be >> 2] = i[M >> 2];
              i[(Be + 4) >> 2] = Qe;
              Be = Ye;
              Qe = i[(Be + 4) >> 2] | 0;
              M = lt;
              i[M >> 2] = i[Be >> 2];
              i[(M + 4) >> 2] = Qe;
              M = 0;
              while (1) {
                if ((M | 0) == 8) break;
                Qe = M << 3;
                o[(mt + (Qe + 128)) >> 0] = o[(Bt + M) >> 0] | 0;
                o[(mt + (Qe + 256)) >> 0] = o[(Bt + (M + 8)) >> 0] | 0;
                o[(mt + (Qe + 448)) >> 0] = o[(Bt + (M + 16)) >> 0] | 0;
                M = (M + 1) | 0;
              }
              _a(mt, 704, Rt, j, q);
              _a(Ue, 64, Rt, j, q);
              M = ft;
              ge = 0;
              while (1) {
                if (ge >>> 0 >= fe >>> 0) break;
                le = i[(p + (ge << 2)) >> 2] | 0;
                ce = le & 255;
                le = le >>> 8;
                ee = o[(Bt + ce) >> 0] | 0;
                te = l[(It + (ce << 1)) >> 1] | 0;
                ne = i[j >> 2] | 0;
                ie = (q + (ne >>> 3)) | 0;
                ae = a[ie >> 0] | 0;
                Qe = bc(te | 0, 0, (ee & 255) | 0) | 0;
                if (!(((Qe | 0) == 0) & ((de | 0) == 0))) {
                  Tt = 138;
                  break e;
                }
                if ((ee & 255) >= 57) {
                  Tt = 140;
                  break e;
                }
                Qe = cc(te | 0, 0, (ne & 7) | 0) | 0;
                ne = de;
                Qe = ae | Qe;
                te = ie;
                ie = te;
                o[ie >> 0] = Qe;
                o[(ie + 1) >> 0] = Qe >> 8;
                o[(ie + 2) >> 0] = Qe >> 16;
                o[(ie + 3) >> 0] = Qe >> 24;
                te = (te + 4) | 0;
                o[te >> 0] = ne;
                o[(te + 1) >> 0] = ne >> 8;
                o[(te + 2) >> 0] = ne >> 16;
                o[(te + 3) >> 0] = ne >> 24;
                ee = ((i[j >> 2] | 0) + (ee & 255)) | 0;
                i[j >> 2] = ee;
                te = i[(18276 + (ce << 2)) >> 2] | 0;
                ne = (q + (ee >>> 3)) | 0;
                ie = a[ne >> 0] | 0;
                Qe = bc(le | 0, 0, te | 0) | 0;
                if (!(((Qe | 0) == 0) & ((de | 0) == 0))) {
                  Tt = 142;
                  break e;
                }
                me = cc(le | 0, 0, (ee & 7) | 0) | 0;
                Qe = de;
                me = ie | me;
                ee = ne;
                Be = ee;
                o[Be >> 0] = me;
                o[(Be + 1) >> 0] = me >> 8;
                o[(Be + 2) >> 0] = me >> 16;
                o[(Be + 3) >> 0] = me >> 24;
                ee = (ee + 4) | 0;
                o[ee >> 0] = Qe;
                o[(ee + 1) >> 0] = Qe >> 8;
                o[(ee + 2) >> 0] = Qe >> 16;
                o[(ee + 3) >> 0] = Qe >> 24;
                ee = ((i[j >> 2] | 0) + te) | 0;
                i[j >> 2] = ee;
                t: do {
                  if (ce >>> 0 < 24) {
                    le = ((i[(18788 + (ce << 2)) >> 2] | 0) + le) | 0;
                    ce = 0;
                    while (1) {
                      if (ce >>> 0 >= le >>> 0) break t;
                      ne = a[M >> 0] | 0;
                      te = o[(yt + ne) >> 0] | 0;
                      ne = l[(wt + (ne << 1)) >> 1] | 0;
                      ie = (q + (ee >>> 3)) | 0;
                      ae = a[ie >> 0] | 0;
                      Qe = bc(ne | 0, 0, (te & 255) | 0) | 0;
                      if (!(((Qe | 0) == 0) & ((de | 0) == 0))) {
                        Tt = 147;
                        break e;
                      }
                      if ((te & 255) >= 57) {
                        Tt = 149;
                        break e;
                      }
                      Ce = cc(ne | 0, 0, (ee & 7) | 0) | 0;
                      Be = de;
                      Ce = ae | Ce;
                      Qe = ie;
                      me = Qe;
                      o[me >> 0] = Ce;
                      o[(me + 1) >> 0] = Ce >> 8;
                      o[(me + 2) >> 0] = Ce >> 16;
                      o[(me + 3) >> 0] = Ce >> 24;
                      Qe = (Qe + 4) | 0;
                      o[Qe >> 0] = Be;
                      o[(Qe + 1) >> 0] = Be >> 8;
                      o[(Qe + 2) >> 0] = Be >> 16;
                      o[(Qe + 3) >> 0] = Be >> 24;
                      Qe = ((i[j >> 2] | 0) + (te & 255)) | 0;
                      i[j >> 2] = Qe;
                      M = (M + 1) | 0;
                      ee = Qe;
                      ce = (ce + 1) | 0;
                    }
                  }
                } while (0);
                ge = (ge + 1) | 0;
              }
            }
            s = (s - be) | 0;
            Qe = we;
          }
          switch (Tt | 0) {
            case 4: {
              et(405532, 405543, 251, 405590);
              break;
            }
            case 6: {
              et(405605, 405543, 252, 405590);
              break;
            }
            case 8: {
              et(405630, 405543, 254, 405590);
              break;
            }
            case 10: {
              et(405667, 405543, 256, 405590);
              break;
            }
            case 15: {
              et(405740, 405543, 289, 405590);
              break;
            }
            case 17: {
              et(405755, 405543, 295, 405590);
              break;
            }
            case 24: {
              et(405779, 405543, 309, 405590);
              break;
            }
            case 26: {
              et(405800, 405543, 310, 405590);
              break;
            }
            case 41: {
              et(405815, 405543, 329, 405590);
              break;
            }
            case 81: {
              et(405815, 405543, 378, 405590);
              break;
            }
            case 93: {
              et(405853, 405543, 415, 405590);
              break;
            }
            case 138: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 140: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 142: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 147: {
              et(406196, 406218, 54, 406251);
              break;
            }
            case 149: {
              et(406267, 406218, 55, 406251);
              break;
            }
            case 155: {
              if (!d) {
                w = Dt;
                return;
              }
              e = i[j >> 2] | 0;
              Rt = (q + (e >>> 3)) | 0;
              _ = a[Rt >> 0] | 0;
              e = cc(1, 0, (e & 7) | 0) | 0;
              Tt = de;
              e = _ | e;
              _ = Rt;
              o[_ >> 0] = e;
              o[(_ + 1) >> 0] = e >> 8;
              o[(_ + 2) >> 0] = e >> 16;
              o[(_ + 3) >> 0] = e >> 24;
              Rt = (Rt + 4) | 0;
              o[Rt >> 0] = Tt;
              o[(Rt + 1) >> 0] = Tt >> 8;
              o[(Rt + 2) >> 0] = Tt >> 16;
              o[(Rt + 3) >> 0] = Tt >> 24;
              Rt = ((i[j >> 2] | 0) + 1) | 0;
              i[j >> 2] = Rt;
              Tt = (q + (Rt >>> 3)) | 0;
              _ = a[Tt >> 0] | 0;
              q = cc(1, 0, (Rt & 7) | 0) | 0;
              Rt = de;
              q = _ | q;
              _ = Tt;
              o[_ >> 0] = q;
              o[(_ + 1) >> 0] = q >> 8;
              o[(_ + 2) >> 0] = q >> 16;
              o[(_ + 3) >> 0] = q >> 24;
              Tt = (Tt + 4) | 0;
              o[Tt >> 0] = Rt;
              o[(Tt + 1) >> 0] = Rt >> 8;
              o[(Tt + 2) >> 0] = Rt >> 16;
              o[(Tt + 3) >> 0] = Rt >> 24;
              i[j >> 2] = ((i[j >> 2] | 0) + 8) & -8;
              w = Dt;
              return;
            }
          }
        }
        function zb(e, r, s, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          var l = 0,
            d = 0,
            h = 0,
            p = 0;
          l = (n + ((i[s >> 2] | 0) >>> 3)) | 0;
          h = a[l >> 0] | 0;
          d = l;
          o[d >> 0] = h;
          o[(d + 1) >> 0] = h >> 8;
          o[(d + 2) >> 0] = h >> 16;
          o[(d + 3) >> 0] = h >> 24;
          l = (l + 4) | 0;
          o[l >> 0] = 0;
          o[(l + 1) >> 0] = 0;
          o[(l + 2) >> 0] = 0;
          o[(l + 3) >> 0] = 0;
          l = ((i[s >> 2] | 0) + 1) | 0;
          i[s >> 2] = l;
          d = (n + (l >>> 3)) | 0;
          h = a[d >> 0] | 0;
          if (e >>> 0 < 65537) {
            p = d;
            l = p;
            o[l >> 0] = h;
            o[(l + 1) >> 0] = h >> 8;
            o[(l + 2) >> 0] = h >> 16;
            o[(l + 3) >> 0] = h >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = 0;
            o[(p + 1) >> 0] = 0;
            o[(p + 2) >> 0] = 0;
            o[(p + 3) >> 0] = 0;
            p = ((i[s >> 2] | 0) + 2) | 0;
            i[s >> 2] = p;
            l = (e + -1) | 0;
            d = (n + (p >>> 3)) | 0;
            h = a[d >> 0] | 0;
            if (!((((l & -65536) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
            l = cc(l | 0, 0, (p & 7) | 0) | 0;
            e = de;
            l = h | l;
            p = d;
            h = p;
            o[h >> 0] = l;
            o[(h + 1) >> 0] = l >> 8;
            o[(h + 2) >> 0] = l >> 16;
            o[(h + 3) >> 0] = l >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = e;
            o[(p + 1) >> 0] = e >> 8;
            o[(p + 2) >> 0] = e >> 16;
            o[(p + 3) >> 0] = e >> 24;
            p = ((i[s >> 2] | 0) + 16) | 0;
            i[s >> 2] = p;
            r = r & 1;
            e = p >>> 3;
            n = (n + e) | 0;
            e = o[n >> 0] | 0;
            e = e & 255;
            p = p & 7;
            p = cc(r | 0, 0, p | 0) | 0;
            r = de;
            p = e | p;
            e = n;
            o[e >> 0] = p;
            o[(e + 1) >> 0] = p >> 8;
            o[(e + 2) >> 0] = p >> 16;
            o[(e + 3) >> 0] = p >> 24;
            n = (n + 4) | 0;
            o[n >> 0] = r;
            o[(n + 1) >> 0] = r >> 8;
            o[(n + 2) >> 0] = r >> 16;
            o[(n + 3) >> 0] = r >> 24;
            n = i[s >> 2] | 0;
            n = (n + 1) | 0;
            i[s >> 2] = n;
            return;
          } else {
            p = cc(1, 0, (l & 7) | 0) | 0;
            l = de;
            h = h | p;
            p = d;
            d = p;
            o[d >> 0] = h;
            o[(d + 1) >> 0] = h >> 8;
            o[(d + 2) >> 0] = h >> 16;
            o[(d + 3) >> 0] = h >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = l;
            o[(p + 1) >> 0] = l >> 8;
            o[(p + 2) >> 0] = l >> 16;
            o[(p + 3) >> 0] = l >> 24;
            p = ((i[s >> 2] | 0) + 2) | 0;
            i[s >> 2] = p;
            l = (e + -1) | 0;
            d = (n + (p >>> 3)) | 0;
            h = a[d >> 0] | 0;
            if (!((((l & -1048576) | 0) == 0) & (0 == 0))) et(406196, 406218, 54, 406251);
            l = cc(l | 0, 0, (p & 7) | 0) | 0;
            e = de;
            l = h | l;
            p = d;
            h = p;
            o[h >> 0] = l;
            o[(h + 1) >> 0] = l >> 8;
            o[(h + 2) >> 0] = l >> 16;
            o[(h + 3) >> 0] = l >> 24;
            p = (p + 4) | 0;
            o[p >> 0] = e;
            o[(p + 1) >> 0] = e >> 8;
            o[(p + 2) >> 0] = e >> 16;
            o[(p + 3) >> 0] = e >> 24;
            p = ((i[s >> 2] | 0) + 20) | 0;
            i[s >> 2] = p;
            r = r & 1;
            e = p >>> 3;
            n = (n + e) | 0;
            e = o[n >> 0] | 0;
            e = e & 255;
            p = p & 7;
            p = cc(r | 0, 0, p | 0) | 0;
            r = de;
            p = e | p;
            e = n;
            o[e >> 0] = p;
            o[(e + 1) >> 0] = p >> 8;
            o[(e + 2) >> 0] = p >> 16;
            o[(e + 3) >> 0] = p >> 24;
            n = (n + 4) | 0;
            o[n >> 0] = r;
            o[(n + 1) >> 0] = r >> 8;
            o[(n + 2) >> 0] = r >> 16;
            o[(n + 3) >> 0] = r >> 24;
            n = i[s >> 2] | 0;
            n = (n + 1) | 0;
            i[s >> 2] = n;
            return;
          }
        }
        function Ab(e, r, s, l, d, h) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          var p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Pe = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            tt = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0,
            Et = 0,
            It = 0,
            Ct = 0,
            mt = 0,
            Bt = 0,
            Qt = 0,
            bt = 0,
            wt = 0,
            yt = 0,
            kt = 0,
            Rt = 0,
            Tt = 0;
          Tt = w;
          w = (w + 16) | 0;
          kt = (Tt + 8) | 0;
          Rt = (Tt + 4) | 0;
          Qt = Tt;
          if (!(Bb(e) | 0)) {
            h = 0;
            w = Tt;
            return h | 0;
          }
          wt = (e + 5232) | 0;
          if ((i[wt >> 2] | 0) != 0 ? (i[r >> 2] | 0) != 0 : 0) {
            h = 0;
            w = Tt;
            return h | 0;
          }
          yt = (e + 4) | 0;
          p = i[yt >> 2] | 0;
          if (p >>> 0 < 2) {
            me = 1 << i[(e + 8) >> 2];
            M = i[r >> 2] | 0;
            M = M >>> 0 < me >>> 0 ? M : me;
            M = M >>> 0 > 131072 ? 131072 : M;
            Be = (e + 16) | 0;
            e: do {
              switch (p | 0) {
                case 0: {
                  j = 0;
                  _ = 0;
                  Ce = 0;
                  Ie = 0;
                  bt = 20;
                  break;
                }
                case 1: {
                  _ = (e + 5208) | 0;
                  bt = i[_ >> 2] | 0;
                  p = bt;
                  t: do {
                    if (!bt) {
                      do {
                        if ((M | 0) == 131072) {
                          p = (e + 24) | 0;
                          k = st[i[Be >> 2] & 1](i[p >> 2] | 0, 524288) | 0;
                          if (!k) $e(1);
                          i[_ >> 2] = k;
                          p = st[i[Be >> 2] & 1](i[p >> 2] | 0, 131072) | 0;
                          if (p) {
                            i[(e + 5212) >> 2] = p;
                            p = i[_ >> 2] | 0;
                            if (!p) break;
                            else {
                              j = p;
                              break t;
                            }
                          } else $e(1);
                        }
                      } while (0);
                      p = (e + 24) | 0;
                      k = st[i[Be >> 2] & 1](i[p >> 2] | 0, M << 2) | 0;
                      if (!k) $e(1);
                      p = st[i[Be >> 2] & 1](i[p >> 2] | 0, M) | 0;
                      if (!p) $e(1);
                      else {
                        j = k;
                        _ = p;
                        Ce = k;
                        Ie = p;
                        bt = 20;
                        break e;
                      }
                    } else j = p;
                  } while (0);
                  _ = i[(e + 5212) >> 2] | 0;
                  Ce = 0;
                  Ie = 0;
                  bt = 20;
                  break;
                }
                default:
                  Qe = 0;
              }
            } while (0);
            do {
              if ((bt | 0) == 20) {
                se = (e + 193) | 0;
                oe = (e + 5220) | 0;
                ne = (e + 196) | 0;
                ie = (e + 200) | 0;
                Ae = (e + 20) | 0;
                ae = (e + 24) | 0;
                ce = (e + 192) | 0;
                le = (e + 4308) | 0;
                ue = (e + 4436) | 0;
                ge = (e + 5204) | 0;
                fe = (e + 4692) | 0;
                he = (e + 5216) | 0;
                pe = (e + 5224) | 0;
                Ee = (h | 0) == 0;
                e: while (1) {
                  p = i[wt >> 2] | 0;
                  while (1) {
                    if ((p | 0) == 1 ? (o[se >> 0] | 0) != 0 : 0) {
                      bt = 24;
                      break;
                    }
                    k = i[oe >> 2] | 0;
                    if (k) break;
                    if (p) {
                      bt = 49;
                      break e;
                    }
                    re = i[r >> 2] | 0;
                    ee = me >>> 0 < re >>> 0 ? me : re;
                    re = (re | 0) == (ee | 0) ? 1 : 0;
                    p = ((ee << 1) + 502) | 0;
                    i[kt >> 2] = a[se >> 0];
                    if (p >>> 0 > (i[l >> 2] | 0) >>> 0) {
                      k = i[ie >> 2] | 0;
                      if ((i[ne >> 2] | 0) >>> 0 < p >>> 0) {
                        rt[i[Ae >> 2] & 1](i[ae >> 2] | 0, k);
                        i[ie >> 2] = 0;
                        k = st[i[Be >> 2] & 1](i[ae >> 2] | 0, p) | 0;
                        if (!k) {
                          bt = 34;
                          break e;
                        }
                        i[ie >> 2] = k;
                        i[ne >> 2] = p;
                        te = 0;
                      } else te = 0;
                    } else {
                      te = 1;
                      k = i[d >> 2] | 0;
                    }
                    o[k >> 0] = o[ce >> 0] | 0;
                    p = Cb(e, i[yt >> 2] | 0, ee, Rt) | 0;
                    M = i[s >> 2] | 0;
                    q = (re << 24) >> 24 != 0;
                    $ = i[Rt >> 2] | 0;
                    if (!(i[yt >> 2] | 0)) ub(Be, M, ee, q, p, $, le, ue, ge, fe, kt, k);
                    else yb(Be, M, ee, q, j, _, p, $, kt, k);
                    i[s >> 2] = (i[s >> 2] | 0) + ee;
                    i[r >> 2] = (i[r >> 2] | 0) - ee;
                    M = i[kt >> 2] | 0;
                    q = M >>> 3;
                    if ((te << 24) >> 24) {
                      p = i[l >> 2] | 0;
                      if (q >>> 0 > p >>> 0) {
                        bt = 41;
                        break e;
                      }
                      if (!((((M & 7) | 0) == 0) | (q >>> 0 < p >>> 0))) {
                        bt = 43;
                        break e;
                      }
                      i[d >> 2] = (i[d >> 2] | 0) + q;
                      i[l >> 2] = (i[l >> 2] | 0) - q;
                      p = ((i[pe >> 2] | 0) + q) | 0;
                      i[pe >> 2] = p;
                      if (!Ee) i[h >> 2] = p;
                    } else {
                      i[he >> 2] = k;
                      i[oe >> 2] = q;
                    }
                    o[ce >> 0] = o[(k + ((i[kt >> 2] | 0) >>> 3)) >> 0] | 0;
                    o[se >> 0] = i[kt >> 2] & 7;
                    if (!((re << 24) >> 24)) continue e;
                    i[wt >> 2] = 2;
                    p = 2;
                  }
                  if ((bt | 0) == 24) {
                    bt = 0;
                    Eb(e);
                    continue;
                  }
                  p = i[l >> 2] | 0;
                  if (!p) {
                    bt = 49;
                    break;
                  }
                  p = k >>> 0 < p >>> 0 ? k : p;
                  dc(i[d >> 2] | 0, i[he >> 2] | 0, p | 0) | 0;
                  i[d >> 2] = (i[d >> 2] | 0) + p;
                  i[l >> 2] = (i[l >> 2] | 0) - p;
                  i[he >> 2] = (i[he >> 2] | 0) + p;
                  i[oe >> 2] = (i[oe >> 2] | 0) - p;
                  p = ((i[pe >> 2] | 0) + p) | 0;
                  i[pe >> 2] = p;
                  if (Ee) continue;
                  i[h >> 2] = p;
                }
                if ((bt | 0) == 34) $e(1);
                else if ((bt | 0) == 41) et(406280, 406053, 1436, 406308);
                else if ((bt | 0) == 43) et(406340, 406053, 1437, 406308);
                else if ((bt | 0) == 49) {
                  rt[i[Ae >> 2] & 1](i[ae >> 2] | 0, Ce);
                  rt[i[Ae >> 2] & 1](i[ae >> 2] | 0, Ie);
                  if ((i[wt >> 2] | 0) != 1) {
                    Qe = 1;
                    break;
                  }
                  if (i[oe >> 2] | 0) {
                    Qe = 1;
                    break;
                  }
                  i[wt >> 2] = 0;
                  i[he >> 2] = 0;
                  Qe = 1;
                  break;
                }
              }
            } while (0);
            h = Qe;
            w = Tt;
            return h | 0;
          }
          It = (e + 80) | 0;
          Ct = (e + 152) | 0;
          ne = (e + 12) | 0;
          ie = (e + 193) | 0;
          Ae = (e + 5220) | 0;
          ae = (e + 5216) | 0;
          ce = (e + 16) | 0;
          le = (e + 116) | 0;
          ue = (e + 92) | 0;
          ge = (e + 5236) | 0;
          fe = (e + 5208) | 0;
          he = (e + 24) | 0;
          pe = (e + 5212) | 0;
          Ee = (e + 196) | 0;
          Ie = (e + 200) | 0;
          Ce = (e + 20) | 0;
          me = (e + 24) | 0;
          Be = (e + 192) | 0;
          Qe = (e + 4308) | 0;
          be = (e + 4436) | 0;
          we = (e + 5204) | 0;
          ye = (e + 4692) | 0;
          ke = (e + 128) | 0;
          Re = (e + 120) | 0;
          Te = (e + 124) | 0;
          De = (e + 20) | 0;
          Fe = (e + 160) | 0;
          ve = (e + 136) | 0;
          Se = (e + 132) | 0;
          Ne = (e + 4) | 0;
          Oe = (e + 72) | 0;
          Ue = (e + 8) | 0;
          Ge = (e + 144) | 0;
          Pe = (e + 28) | 0;
          Le = (e + 32) | 0;
          Me = (e + 36) | 0;
          xe = (e + 40) | 0;
          He = (e + 44) | 0;
          Ve = (e + 48) | 0;
          Ye = (e + 52) | 0;
          je = (e + 56) | 0;
          qe = (e + 60) | 0;
          Je = (e + 64) | 0;
          We = (e + 68) | 0;
          Ke = (e + 8) | 0;
          Xe = (e + 194) | 0;
          ze = (e + 195) | 0;
          Ze = (e + 176) | 0;
          tt = (e + 176) | 0;
          ot = (e + 160) | 0;
          nt = (e + 8) | 0;
          it = (e + 5224) | 0;
          At = (h | 0) == 0;
          at = (e + 108) | 0;
          ct = (e + 96) | 0;
          lt = (e + 112) | 0;
          ut = (e + 104) | 0;
          gt = (e + 116) | 0;
          dt = (e + 116) | 0;
          ft = (e + 92) | 0;
          ht = (e + 104) | 0;
          pt = (e + 100) | 0;
          Et = (e + 88) | 0;
          e: while (1) {
            k = It;
            p = Ct;
            p = $b(i[k >> 2] | 0, i[(k + 4) >> 2] | 0, i[p >> 2] | 0, i[(p + 4) >> 2] | 0) | 0;
            k = de;
            if (Bb(e) | 0) _ = 1 << i[ne >> 2];
            else _ = 0;
            if (
              ((k >>> 0 < 0) | (((k | 0) == 0) & (p >>> 0 < _ >>> 0)) ? ((mt = (_ - p) | 0), (mt | 0) != 0) : 0) ? ((Bt = i[r >> 2] | 0), (Bt | 0) != 0) : 0
            ) {
              j = mt >>> 0 < Bt >>> 0 ? mt : Bt;
              M = i[s >> 2] | 0;
              if (Bb(e) | 0) {
                p = i[at >> 2] | 0;
                if ((p | 0) == 0 ? j >>> 0 < (i[ct >> 2] | 0) >>> 0 : 0) {
                  i[at >> 2] = j;
                  p = st[i[ce >> 2] & 1](i[he >> 2] | 0, (j + 9) | 0) | 0;
                  if (!p) {
                    bt = 62;
                    break;
                  }
                  k = i[lt >> 2] | 0;
                  if (k) {
                    dc(p | 0, k | 0, ((i[ut >> 2] | 0) + 9) | 0) | 0;
                    rt[i[De >> 2] & 1](i[he >> 2] | 0, i[lt >> 2] | 0);
                    i[lt >> 2] = 0;
                  }
                  i[lt >> 2] = p;
                  i[ut >> 2] = j;
                  i[gt >> 2] = p + 2;
                  o[(p + 1) >> 0] = 0;
                  o[((i[gt >> 2] | 0) + -2) >> 0] = 0;
                  p = 0;
                  while (1) {
                    if ((p | 0) == 7) break;
                    o[((i[gt >> 2] | 0) + ((i[ut >> 2] | 0) + p)) >> 0] = 0;
                    p = (p + 1) | 0;
                  }
                  dc(i[dt >> 2] | 0, M | 0, j | 0) | 0;
                } else {
                  _ = i[pt >> 2] | 0;
                  if ((i[ht >> 2] | 0) >>> 0 < _ >>> 0) {
                    p = st[i[ce >> 2] & 1](i[he >> 2] | 0, (_ + 9) | 0) | 0;
                    if (!p) {
                      bt = 71;
                      break;
                    }
                    k = i[lt >> 2] | 0;
                    if (k) {
                      dc(p | 0, k | 0, ((i[ut >> 2] | 0) + 9) | 0) | 0;
                      rt[i[De >> 2] & 1](i[he >> 2] | 0, i[lt >> 2] | 0);
                      i[lt >> 2] = 0;
                    }
                    i[lt >> 2] = p;
                    i[ut >> 2] = _;
                    i[gt >> 2] = p + 2;
                    o[(p + 1) >> 0] = 0;
                    o[((i[gt >> 2] | 0) + -2) >> 0] = 0;
                    p = 0;
                    while (1) {
                      if ((p | 0) == 7) break;
                      o[((i[gt >> 2] | 0) + ((i[ut >> 2] | 0) + p)) >> 0] = 0;
                      p = (p + 1) | 0;
                    }
                    o[((i[dt >> 2] | 0) + ((i[Et >> 2] | 0) + -2)) >> 0] = 0;
                    o[((i[dt >> 2] | 0) + ((i[Et >> 2] | 0) + -1)) >> 0] = 0;
                    p = i[at >> 2] | 0;
                  }
                  _ = p & i[ft >> 2];
                  p = i[ct >> 2] | 0;
                  if (p >>> 0 > _ >>> 0) {
                    bt = (p - _) | 0;
                    dc(((i[dt >> 2] | 0) + ((i[Et >> 2] | 0) + _)) | 0, M | 0, (j >>> 0 < bt >>> 0 ? j : bt) | 0) | 0;
                  }
                  k = ((i[dt >> 2] | 0) + _) | 0;
                  p = M;
                  if (((_ + j) | 0) >>> 0 > (i[Et >> 2] | 0) >>> 0) {
                    bt = ((i[pt >> 2] | 0) - _) | 0;
                    dc(k | 0, p | 0, (j >>> 0 < bt >>> 0 ? j : bt) | 0) | 0;
                    bt = i[Et >> 2] | 0;
                    dc(i[dt >> 2] | 0, (p + (bt - _)) | 0, (j + (_ - bt)) | 0) | 0;
                  } else dc(k | 0, p | 0, j | 0) | 0;
                  p = i[dt >> 2] | 0;
                  o[(p + -2) >> 0] = o[(p + ((i[Et >> 2] | 0) + -2)) >> 0] | 0;
                  p = i[dt >> 2] | 0;
                  o[(p + -1) >> 0] = o[(p + ((i[Et >> 2] | 0) + -1)) >> 0] | 0;
                  p = ((i[at >> 2] | 0) + j) | 0;
                  i[at >> 2] = p;
                  if (p >>> 0 > 1073741824) i[at >> 2] = (p & 1073741823) | 1073741824;
                }
                bt = It;
                bt = ec(i[bt >> 2] | 0, i[(bt + 4) >> 2] | 0, j | 0, 0) | 0;
                p = It;
                i[p >> 2] = bt;
                i[(p + 4) >> 2] = de;
                p = i[at >> 2] | 0;
                if (p >>> 0 <= (i[ft >> 2] | 0) >>> 0) {
                  bt = ((i[dt >> 2] | 0) + p) | 0;
                  o[bt >> 0] = 0;
                  o[(bt + 1) >> 0] = 0;
                  o[(bt + 2) >> 0] = 0;
                  o[(bt + 3) >> 0] = 0;
                  o[(bt + 4) >> 0] = 0;
                  o[(bt + 5) >> 0] = 0;
                  o[(bt + 6) >> 0] = 0;
                }
              }
              i[s >> 2] = (i[s >> 2] | 0) + j;
              i[r >> 2] = (i[r >> 2] | 0) - j;
              continue;
            }
            p = i[wt >> 2] | 0;
            _ = (p | 0) == 1;
            if (_ ? (o[ie >> 0] | 0) != 0 : 0) {
              Eb(e);
              continue;
            }
            k = i[Ae >> 2] | 0;
            M = (k | 0) == 0;
            if (!M) {
              p = i[l >> 2] | 0;
              if (!p) {
                bt = 234;
                break;
              }
              p = k >>> 0 < p >>> 0 ? k : p;
              dc(i[d >> 2] | 0, i[ae >> 2] | 0, p | 0) | 0;
              i[d >> 2] = (i[d >> 2] | 0) + p;
              i[l >> 2] = (i[l >> 2] | 0) - p;
              i[ae >> 2] = (i[ae >> 2] | 0) + p;
              i[Ae >> 2] = (i[Ae >> 2] | 0) - p;
              p = ((i[it >> 2] | 0) + p) | 0;
              i[it >> 2] = p;
              if (At) continue;
              i[h >> 2] = p;
              continue;
            }
            if (p) {
              bt = 234;
              break;
            }
            oe = (i[r >> 2] | 0) == 0 ? 1 : 0;
            M = It;
            _ = i[M >> 2] | 0;
            M = i[(M + 4) >> 2] | 0;
            q = Ct;
            j = i[q >> 2] | 0;
            q = i[(q + 4) >> 2] | 0;
            ee = $b(_ | 0, M | 0, j | 0, q | 0) | 0;
            p = de;
            if ((q >>> 0 > 0) | (((q | 0) == 0) & (j >>> 0 > 3221225471))) {
              $ = bc(j | 0, q | 0, 30) | 0;
              $ = (j & 1073741823) | (((($ & 1) ^ 1) << 30) + 1073741824);
            } else $ = j;
            if (!(Bb(e) | 0)) {
              bt = 231;
              break;
            }
            re = i[le >> 2] | 0;
            se = i[ue >> 2] | 0;
            if (o[ge >> 0] & 1) {
              bt = 231;
              break;
            }
            te = (oe << 24) >> 24 == 0;
            if (!te) o[ge >> 0] = 1;
            if (Bb(e) | 0) k = 1 << i[ne >> 2];
            else k = 0;
            if ((p >>> 0 > 0) | (((p | 0) == 0) & (ee >>> 0 > k >>> 0))) {
              bt = 231;
              break;
            }
            p = i[yt >> 2] | 0;
            if ((p | 0) == 1)
              if (!(i[fe >> 2] | 0)) {
                p = st[i[ce >> 2] & 1](i[he >> 2] | 0, 524288) | 0;
                if (!p) {
                  bt = 108;
                  break;
                }
                i[fe >> 2] = p;
                p = st[i[ce >> 2] & 1](i[he >> 2] | 0, 131072) | 0;
                if (!p) {
                  bt = 110;
                  break;
                }
                i[pe >> 2] = p;
                p = i[yt >> 2] | 0;
                bt = 112;
              } else bt = 114;
            else bt = 112;
            t: do {
              if ((bt | 0) == 112) {
                bt = 0;
                if ((p | 0) != 0 ? (p | 0) != 1 : 0) {
                  k = i[ke >> 2] | 0;
                  p = (k + (ee >>> 1) + 1) | 0;
                  if (p >>> 0 > (i[Re >> 2] | 0) >>> 0) {
                    p = (p + ((ee >>> 2) + 16)) | 0;
                    i[Re >> 2] = p;
                    p = st[i[ce >> 2] & 1](i[he >> 2] | 0, p << 4) | 0;
                    if (!p) {
                      bt = 127;
                      break e;
                    }
                    k = i[Te >> 2] | 0;
                    if (k) {
                      dc(p | 0, k | 0, (i[ke >> 2] << 4) | 0) | 0;
                      rt[i[De >> 2] & 1](i[he >> 2] | 0, i[Te >> 2] | 0);
                      i[Te >> 2] = 0;
                    }
                    i[Te >> 2] = p;
                    k = i[ke >> 2] | 0;
                  } else p = i[Te >> 2] | 0;
                  k = (p + (k << 4)) | 0;
                  p = i[Ne >> 2] | 0;
                  r: do {
                    switch (p | 0) {
                      case 10: {
                        Ha(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Oe >> 2] | 0, Fe, ve, k, ke, Se);
                        break;
                      }
                      case 11: {
                        Ia(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Oe >> 2] | 0, Fe, ve, k, ke, Se);
                        break;
                      }
                      default: {
                        if ((p | 0) > 9) break r;
                        do {
                          if ((p | 0) < 5) bt = 139;
                          else {
                            if ((i[nt >> 2] | 0) >= 17) {
                              bt = 139;
                              break;
                            }
                            if ((p | 0) < 7) break;
                            p = (p | 0) < 9 ? 41 : 42;
                            bt = 139;
                          }
                        } while (0);
                        s: do {
                          if ((bt | 0) == 139) {
                            bt = 0;
                            do {
                              switch (p | 0) {
                                case 40:
                                  break s;
                                case 2: {
                                  Ja(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Pe >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 3: {
                                  Ka(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Le >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 4: {
                                  La(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Me >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 5: {
                                  Ma(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[xe >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 6: {
                                  Na(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[He >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 7: {
                                  Oa(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Ve >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 8: {
                                  Pa(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Ye >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 9: {
                                  Qa(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[je >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 41: {
                                  Sa(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[Je >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                case 42: {
                                  Ta(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[We >> 2] | 0, Fe, ve, k, ke, Se);
                                  break r;
                                }
                                default:
                                  break r;
                              }
                            } while (0);
                          }
                        } while (0);
                        Ra(ce, ee, $, (oe << 24) >> 24 != 0, re, se, e, i[qe >> 2] | 0, Fe, ve, k, ke, Se);
                      }
                    }
                  } while (0);
                  _ = i[Ue >> 2] | 0;
                  k = i[ne >> 2] | 0;
                  k = (((_ | 0) > (k | 0) ? _ : k) + 1) | 0;
                  k = 1 << ((k | 0) < 24 ? k : 24);
                  _ = k >>> 3;
                  ee = It;
                  M = Ge;
                  M = $b(i[ee >> 2] | 0, i[(ee + 4) >> 2] | 0, i[M >> 2] | 0, i[(M + 4) >> 2] | 0) | 0;
                  if (Bb(e) | 0) q = 1 << i[ne >> 2];
                  else q = 0;
                  p = i[yt >> 2] | 0;
                  if ((p | 0) < 4) j = (((i[Se >> 2] | 0) + (i[ke >> 2] | 0)) | 0) >>> 0 > 12286;
                  else j = 0;
                  do {
                    if (!((te ^ 1) | j | (((M + q) | 0) >>> 0 > k >>> 0))) {
                      if ((i[Se >> 2] | 0) >>> 0 >= _ >>> 0) break;
                      if ((i[ke >> 2] | 0) >>> 0 >= _ >>> 0) break;
                      _ = Ct;
                      k = i[_ >> 2] | 0;
                      _ = i[(_ + 4) >> 2] | 0;
                      if ((_ >>> 0 > 0) | (((_ | 0) == 0) & (k >>> 0 > 3221225471))) {
                        se = bc(k | 0, _ | 0, 30) | 0;
                        k = (k & 1073741823) | ((((se & 1) ^ 1) << 30) + 1073741824);
                      }
                      M = It;
                      _ = i[M >> 2] | 0;
                      M = i[(M + 4) >> 2] | 0;
                      if ((M >>> 0 > 0) | (((M | 0) == 0) & (_ >>> 0 > 3221225471))) {
                        j = bc(_ | 0, M | 0, 30) | 0;
                        j = (_ & 1073741823) | ((((j & 1) ^ 1) << 30) + 1073741824);
                      } else j = _;
                      se = Ct;
                      i[se >> 2] = _;
                      i[(se + 4) >> 2] = M;
                      r: do {
                        if (j >>> 0 < k >>> 0) {
                          s: do {
                            if ((p | 0) <= 9) {
                              do {
                                if ((p | 0) < 5) bt = 168;
                                else {
                                  if ((i[Ke >> 2] | 0) >= 17) {
                                    bt = 168;
                                    break;
                                  }
                                  if ((p | 0) < 7) break;
                                  p = (p | 0) < 9 ? 41 : 42;
                                  bt = 168;
                                }
                              } while (0);
                              o: do {
                                if ((bt | 0) == 168) {
                                  bt = 0;
                                  do {
                                    switch (p | 0) {
                                      case 10:
                                        break s;
                                      case 40:
                                        break o;
                                      case 2: {
                                        se = i[Pe >> 2] | 0;
                                        o[(se + 262148) >> 0] = 1;
                                        i[(se + 262152) >> 2] = 0;
                                        i[(se + 262156) >> 2] = 0;
                                        break r;
                                      }
                                      case 3: {
                                        se = i[Le >> 2] | 0;
                                        o[(se + 262152) >> 0] = 1;
                                        i[(se + 262156) >> 2] = 0;
                                        i[(se + 262160) >> 2] = 0;
                                        break r;
                                      }
                                      case 4: {
                                        se = i[Me >> 2] | 0;
                                        o[(se + 524304) >> 0] = 1;
                                        i[(se + 524308) >> 2] = 0;
                                        i[(se + 524312) >> 2] = 0;
                                        break r;
                                      }
                                      case 5: {
                                        se = i[xe >> 2] | 0;
                                        o[(se + 1081344) >> 0] = 1;
                                        i[(se + 1081348) >> 2] = 0;
                                        i[(se + 1081352) >> 2] = 0;
                                        break r;
                                      }
                                      case 6: {
                                        se = i[He >> 2] | 0;
                                        o[(se + 2129920) >> 0] = 1;
                                        i[(se + 2129924) >> 2] = 0;
                                        i[(se + 2129928) >> 2] = 0;
                                        break r;
                                      }
                                      case 7: {
                                        se = i[Ve >> 2] | 0;
                                        o[(se + 8454144) >> 0] = 1;
                                        i[(se + 8454148) >> 2] = 0;
                                        i[(se + 8454152) >> 2] = 0;
                                        break r;
                                      }
                                      case 8: {
                                        se = i[Ye >> 2] | 0;
                                        o[(se + 16842752) >> 0] = 1;
                                        i[(se + 16842756) >> 2] = 0;
                                        i[(se + 16842760) >> 2] = 0;
                                        break r;
                                      }
                                      case 9: {
                                        se = i[je >> 2] | 0;
                                        o[(se + 33619968) >> 0] = 1;
                                        i[(se + 33619972) >> 2] = 0;
                                        i[(se + 33619976) >> 2] = 0;
                                        break r;
                                      }
                                      case 41: {
                                        se = i[Je >> 2] | 0;
                                        o[(se + 524290) >> 0] = 1;
                                        i[(se + 524292) >> 2] = 0;
                                        i[(se + 524296) >> 2] = 0;
                                        break r;
                                      }
                                      case 42: {
                                        se = i[We >> 2] | 0;
                                        o[(se + 1311744) >> 0] = 1;
                                        i[(se + 1311748) >> 2] = 0;
                                        i[(se + 1311752) >> 2] = 0;
                                        break r;
                                      }
                                      default:
                                        break r;
                                    }
                                  } while (0);
                                }
                              } while (0);
                              se = i[qe >> 2] | 0;
                              o[(se + 524290) >> 0] = 1;
                              i[(se + 524292) >> 2] = 0;
                              i[(se + 524296) >> 2] = 0;
                              break r;
                            }
                          } while (0);
                          o[((i[Oe >> 2] | 0) + 524304) >> 0] = 1;
                        }
                      } while (0);
                      i[Ae >> 2] = 0;
                      break t;
                    }
                  } while (0);
                  p = i[ve >> 2] | 0;
                  if (p) {
                    k = i[ke >> 2] | 0;
                    i[ke >> 2] = k + 1;
                    ee = i[Te >> 2] | 0;
                    i[(ee + (k << 4)) >> 2] = p;
                    i[(ee + (k << 4) + 4) >> 2] = 67108864;
                    i[(ee + (k << 4) + 8) >> 2] = 0;
                    n[(ee + (k << 4) + 14) >> 1] = 16;
                    k = (ee + (k << 4) + 12) | 0;
                    do {
                      if (p >>> 0 >= 6) {
                        if (p >>> 0 < 130) {
                          ee = (p + -2) | 0;
                          p = (((_e(ee | 0) | 0) ^ 31) + -1) | 0;
                          p = ((p << 1) + (ee >>> p) + 2) | 0;
                          break;
                        }
                        if (p >>> 0 < 2114) {
                          p = (((_e((p + -66) | 0) | 0) ^ 31) + 10) | 0;
                          break;
                        }
                        if (p >>> 0 < 6210) {
                          p = 21;
                          break;
                        }
                        p = p >>> 0 < 22594 ? 22 : 23;
                      }
                    } while (0);
                    ee = p & 65535;
                    n[k >> 1] = n[(88156 + (((ee >>> 3) * 3) << 1)) >> 1] | ((((ee << 3) & 56) | 2) & 65535);
                    i[Se >> 2] = (i[Se >> 2] | 0) + (i[ve >> 2] | 0);
                    i[ve >> 2] = 0;
                  }
                  k = It;
                  p = i[k >> 2] | 0;
                  k = i[(k + 4) >> 2] | 0;
                  M = Ge;
                  _ = i[M >> 2] | 0;
                  M = i[(M + 4) >> 2] | 0;
                  if (te & (((p | 0) == (_ | 0)) & ((k | 0) == (M | 0)))) {
                    i[Ae >> 2] = 0;
                    break;
                  }
                  if ((k >>> 0 < M >>> 0) | (((k | 0) == (M | 0)) & (p >>> 0 < _ >>> 0))) {
                    bt = 194;
                    break e;
                  }
                  if (!((k >>> 0 > M >>> 0) | (((k | 0) == (M | 0)) & (p >>> 0 > _ >>> 0)) | (te ^ 1))) {
                    bt = 196;
                    break e;
                  }
                  _ = $b(p | 0, k | 0, _ | 0, M | 0) | 0;
                  te = de;
                  if (!((te >>> 0 < 0) | (((te | 0) == 0) & (_ >>> 0 < 16777217)))) {
                    bt = 198;
                    break e;
                  }
                  p = ((_ << 1) + 502) | 0;
                  if ((i[Ee >> 2] | 0) >>> 0 < p >>> 0) {
                    rt[i[Ce >> 2] & 1](i[me >> 2] | 0, i[Ie >> 2] | 0);
                    i[Ie >> 2] = 0;
                    te = st[i[ce >> 2] & 1](i[me >> 2] | 0, p) | 0;
                    k = te;
                    if (!te) {
                      bt = 202;
                      break e;
                    }
                    i[Ie >> 2] = k;
                    i[Ee >> 2] = p;
                  } else k = i[Ie >> 2] | 0;
                  i[Qt >> 2] = a[ie >> 0];
                  j = k;
                  o[j >> 0] = o[Be >> 0] | 0;
                  q = re;
                  M = Ge;
                  Db(
                    ce,
                    q,
                    se,
                    i[M >> 2] | 0,
                    i[(M + 4) >> 2] | 0,
                    _,
                    (oe << 24) >> 24 != 0,
                    e,
                    o[Xe >> 0] | 0,
                    o[ze >> 0] | 0,
                    i[Se >> 2] | 0,
                    i[ke >> 2] | 0,
                    i[Te >> 2] | 0,
                    Ze,
                    Fe,
                    Qt,
                    j
                  );
                  o[Be >> 0] = o[(j + ((i[Qt >> 2] | 0) >>> 3)) >> 0] | 0;
                  o[ie >> 0] = i[Qt >> 2] & 7;
                  j = It;
                  M = i[j >> 2] | 0;
                  j = i[(j + 4) >> 2] | 0;
                  _ = Ge;
                  i[_ >> 2] = M;
                  i[(_ + 4) >> 2] = j;
                  _ = Ct;
                  p = i[_ >> 2] | 0;
                  _ = i[(_ + 4) >> 2] | 0;
                  if ((_ >>> 0 > 0) | (((_ | 0) == 0) & (p >>> 0 > 3221225471))) {
                    re = bc(p | 0, _ | 0, 30) | 0;
                    p = (p & 1073741823) | ((((re & 1) ^ 1) << 30) + 1073741824);
                  }
                  if ((j >>> 0 > 0) | (((j | 0) == 0) & (M >>> 0 > 3221225471))) {
                    _ = bc(M | 0, j | 0, 30) | 0;
                    _ = (M & 1073741823) | ((((_ & 1) ^ 1) << 30) + 1073741824);
                  } else _ = M;
                  re = Ct;
                  i[re >> 2] = M;
                  i[(re + 4) >> 2] = j;
                  r: do {
                    if (_ >>> 0 < p >>> 0) {
                      p = i[yt >> 2] | 0;
                      s: do {
                        if ((p | 0) <= 9) {
                          do {
                            if ((p | 0) < 5) bt = 214;
                            else {
                              if ((i[Ke >> 2] | 0) >= 17) {
                                bt = 214;
                                break;
                              }
                              if ((p | 0) < 7) break;
                              p = (p | 0) < 9 ? 41 : 42;
                              bt = 214;
                            }
                          } while (0);
                          o: do {
                            if ((bt | 0) == 214) {
                              bt = 0;
                              do {
                                switch (p | 0) {
                                  case 10:
                                    break s;
                                  case 40:
                                    break o;
                                  case 2: {
                                    re = i[Pe >> 2] | 0;
                                    o[(re + 262148) >> 0] = 1;
                                    i[(re + 262152) >> 2] = 0;
                                    i[(re + 262156) >> 2] = 0;
                                    break r;
                                  }
                                  case 3: {
                                    re = i[Le >> 2] | 0;
                                    o[(re + 262152) >> 0] = 1;
                                    i[(re + 262156) >> 2] = 0;
                                    i[(re + 262160) >> 2] = 0;
                                    break r;
                                  }
                                  case 4: {
                                    re = i[Me >> 2] | 0;
                                    o[(re + 524304) >> 0] = 1;
                                    i[(re + 524308) >> 2] = 0;
                                    i[(re + 524312) >> 2] = 0;
                                    break r;
                                  }
                                  case 5: {
                                    re = i[xe >> 2] | 0;
                                    o[(re + 1081344) >> 0] = 1;
                                    i[(re + 1081348) >> 2] = 0;
                                    i[(re + 1081352) >> 2] = 0;
                                    break r;
                                  }
                                  case 6: {
                                    re = i[He >> 2] | 0;
                                    o[(re + 2129920) >> 0] = 1;
                                    i[(re + 2129924) >> 2] = 0;
                                    i[(re + 2129928) >> 2] = 0;
                                    break r;
                                  }
                                  case 7: {
                                    re = i[Ve >> 2] | 0;
                                    o[(re + 8454144) >> 0] = 1;
                                    i[(re + 8454148) >> 2] = 0;
                                    i[(re + 8454152) >> 2] = 0;
                                    break r;
                                  }
                                  case 8: {
                                    re = i[Ye >> 2] | 0;
                                    o[(re + 16842752) >> 0] = 1;
                                    i[(re + 16842756) >> 2] = 0;
                                    i[(re + 16842760) >> 2] = 0;
                                    break r;
                                  }
                                  case 9: {
                                    re = i[je >> 2] | 0;
                                    o[(re + 33619968) >> 0] = 1;
                                    i[(re + 33619972) >> 2] = 0;
                                    i[(re + 33619976) >> 2] = 0;
                                    break r;
                                  }
                                  case 41: {
                                    re = i[Je >> 2] | 0;
                                    o[(re + 524290) >> 0] = 1;
                                    i[(re + 524292) >> 2] = 0;
                                    i[(re + 524296) >> 2] = 0;
                                    break r;
                                  }
                                  case 42: {
                                    re = i[We >> 2] | 0;
                                    o[(re + 1311744) >> 0] = 1;
                                    i[(re + 1311748) >> 2] = 0;
                                    i[(re + 1311752) >> 2] = 0;
                                    break r;
                                  }
                                  default:
                                    break r;
                                }
                              } while (0);
                            }
                          } while (0);
                          re = i[qe >> 2] | 0;
                          o[(re + 524290) >> 0] = 1;
                          i[(re + 524292) >> 2] = 0;
                          i[(re + 524296) >> 2] = 0;
                          break r;
                        }
                      } while (0);
                      o[((i[Oe >> 2] | 0) + 524304) >> 0] = 1;
                    }
                  } while (0);
                  _ = Ge;
                  p = i[_ >> 2] | 0;
                  _ = i[(_ + 4) >> 2] | 0;
                  do {
                    if (!(((p | 0) == 0) & ((_ | 0) == 0))) {
                      o[Xe >> 0] = o[(q + ((p + -1) & se)) >> 0] | 0;
                      if (!((_ >>> 0 > 0) | (((_ | 0) == 0) & (p >>> 0 > 1)))) break;
                      re = ec(p | 0, _ | 0, -2, 0) | 0;
                      o[ze >> 0] = o[(q + (re & se)) >> 0] | 0;
                    }
                  } while (0);
                  i[ke >> 2] = 0;
                  i[Se >> 2] = 0;
                  i[tt >> 2] = i[ot >> 2];
                  i[(tt + 4) >> 2] = i[(ot + 4) >> 2];
                  i[(tt + 8) >> 2] = i[(ot + 8) >> 2];
                  i[(tt + 12) >> 2] = i[(ot + 12) >> 2];
                  i[ae >> 2] = k;
                  i[Ae >> 2] = (i[Qt >> 2] | 0) >>> 3;
                } else bt = 114;
              }
            } while (0);
            do {
              if ((bt | 0) == 114) {
                i[kt >> 2] = a[ie >> 0];
                if (!(((((_ | 0) == (j | 0)) & ((M | 0) == (q | 0))) ^ 1) | (te ^ 1))) {
                  i[Ae >> 2] = 0;
                  break;
                }
                k = ((ee << 1) + 502) | 0;
                p = i[Ie >> 2] | 0;
                if ((i[Ee >> 2] | 0) >>> 0 < k >>> 0) {
                  rt[i[Ce >> 2] & 1](i[me >> 2] | 0, p);
                  i[Ie >> 2] = 0;
                  p = st[i[ce >> 2] & 1](i[me >> 2] | 0, k) | 0;
                  if (!p) {
                    bt = 118;
                    break e;
                  }
                  i[Ie >> 2] = p;
                  i[Ee >> 2] = k;
                  _ = p;
                } else _ = p;
                o[_ >> 0] = o[Be >> 0] | 0;
                M = Cb(e, i[yt >> 2] | 0, ee, Rt) | 0;
                p = (re + ($ & se)) | 0;
                k = (oe << 24) >> 24 != 0;
                if (!(i[yt >> 2] | 0)) ub(ce, p, ee, k, M, i[Rt >> 2] | 0, Qe, be, we, ye, kt, _);
                else yb(ce, p, ee, k, i[fe >> 2] | 0, i[pe >> 2] | 0, M, i[Rt >> 2] | 0, kt, _);
                o[Be >> 0] = o[(_ + ((i[kt >> 2] | 0) >>> 3)) >> 0] | 0;
                o[ie >> 0] = i[kt >> 2] & 7;
                re = It;
                se = i[(re + 4) >> 2] | 0;
                bt = Ct;
                i[bt >> 2] = i[re >> 2];
                i[(bt + 4) >> 2] = se;
                i[ae >> 2] = _;
                i[Ae >> 2] = (i[kt >> 2] | 0) >>> 3;
              }
            } while (0);
            if (!((oe << 24) >> 24)) continue;
            i[wt >> 2] = 2;
          }
          switch (bt | 0) {
            case 62: {
              $e(1);
              break;
            }
            case 71: {
              $e(1);
              break;
            }
            case 108: {
              $e(1);
              break;
            }
            case 110: {
              $e(1);
              break;
            }
            case 118: {
              $e(1);
              break;
            }
            case 127: {
              $e(1);
              break;
            }
            case 194: {
              et(406017, 406053, 906, 406080);
              break;
            }
            case 196: {
              et(406103, 406053, 907, 406080);
              break;
            }
            case 198: {
              et(406149, 406053, 908, 406080);
              break;
            }
            case 202: {
              $e(1);
              break;
            }
            case 231: {
              h = 0;
              w = Tt;
              return h | 0;
            }
            case 234: {
              if ((_ ^ 1) | (M ^ 1)) {
                h = 1;
                w = Tt;
                return h | 0;
              }
              i[wt >> 2] = 0;
              i[ae >> 2] = 0;
              h = 1;
              w = Tt;
              return h | 0;
            }
          }
          return 0;
        }
        function Bb(e) {
          e = e | 0;
          var r = 0,
            s = 0,
            n = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0;
          p = (e + 5237) | 0;
          if (o[p >> 0] & 1) return 1;
          s = i[(e + 4) >> 2] | 0;
          if ((s | 0) >= 0)
            if ((s | 0) > 11) l = 11;
            else d = 4;
          else {
            s = 0;
            d = 4;
          }
          if ((d | 0) == 4) l = s;
          i[(e + 4) >> 2] = l;
          s = (e + 8) | 0;
          n = i[s >> 2] | 0;
          if ((n | 0) >= 10) {
            if ((n | 0) > 24) {
              i[s >> 2] = 24;
              n = 24;
            }
          } else {
            i[s >> 2] = 10;
            n = 10;
          }
          a = (e + 12) | 0;
          s = i[a >> 2] | 0;
          d = (l | 0) == 0;
          do {
            if (l >>> 0 >= 2)
              if ((l | 0) < 4) s = 14;
              else {
                if (!s) {
                  if (!(((l | 0) > 8) & ((n | 0) > 16))) {
                    s = 16;
                    break;
                  }
                  s = (n | 0) > 18 ? 18 : n;
                  break;
                }
                if ((s | 0) >= 16) {
                  if ((s | 0) > 24) {
                    s = 24;
                    break;
                  }
                } else s = 16;
              }
            else s = n;
          } while (0);
          i[a >> 2] = s;
          a = 1 << (((n | 0) > (s | 0) ? n : s) + 1);
          i[(e + 88) >> 2] = a;
          i[(e + 92) >> 2] = a + -1;
          s = 1 << s;
          i[(e + 96) >> 2] = s;
          i[(e + 100) >> 2] = a + s;
          s = (e + 192) | 0;
          a = (e + 193) | 0;
          e: do {
            switch (n | 0) {
              case 16: {
                o[s >> 0] = 0;
                o[a >> 0] = 1;
                break;
              }
              case 17: {
                o[s >> 0] = 1;
                o[a >> 0] = 7;
                break;
              }
              default:
                if ((n | 0) > 17) {
                  o[s >> 0] = ((n << 1) + 222) | 1;
                  o[a >> 0] = 4;
                  break e;
                } else {
                  o[s >> 0] = ((n << 4) + 128) | 1;
                  o[a >> 0] = 7;
                  break e;
                }
            }
          } while (0);
          e: do {
            if (d) {
              a = (e + 4436) | 0;
              l = (e + 4692) | 0;
              d = (e + 5204) | 0;
              r = (e + 4308) | 0;
              s = 406473;
              n = (r + 128) | 0;
              do {
                o[r >> 0] = o[s >> 0] | 0;
                r = (r + 1) | 0;
                s = (s + 1) | 0;
              } while ((r | 0) < (n | 0));
              dc(a | 0, 88174, 256) | 0;
              r = l;
              s = 406601;
              n = (r + 57) | 0;
              do {
                o[r >> 0] = o[s >> 0] | 0;
                r = (r + 1) | 0;
                s = (s + 1) | 0;
              } while ((r | 0) < (n | 0));
              i[d >> 2] = 448;
            } else {
              s = (e + 16) | 0;
              a = (e + 28) | 0;
              t: do {
                if ((l | 0) > 9) {
                  n = a;
                  d = 65;
                } else {
                  do {
                    if (((l | 0) >= 5) & ((n | 0) < 17))
                      if ((l | 0) < 7) {
                        n = a;
                        d = 56;
                        break;
                      } else {
                        l = (l | 0) < 9 ? 41 : 42;
                        d = 31;
                        break;
                      }
                    else d = 31;
                  } while (0);
                  r: do {
                    if ((d | 0) == 31) {
                      n = a;
                      s: do {
                        switch (l | 0) {
                          case 10: {
                            d = 65;
                            break t;
                          }
                          case 40: {
                            d = 56;
                            break r;
                          }
                          case 2: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 262160) | 0;
                            if (!r) $e(1);
                            else {
                              i[a >> 2] = r;
                              r = n;
                              d = 69;
                              break s;
                            }
                            break;
                          }
                          case 3: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 262164) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 32) >> 2] = r;
                              r = n;
                              d = 70;
                              break s;
                            }
                            break;
                          }
                          case 4: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 524316) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 36) >> 2] = r;
                              r = n;
                              d = 71;
                              break s;
                            }
                            break;
                          }
                          case 5: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 1081356) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 40) >> 2] = r;
                              r = n;
                              d = 72;
                              break s;
                            }
                            break;
                          }
                          case 6: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 2129932) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 44) >> 2] = r;
                              r = n;
                              d = 73;
                              break s;
                            }
                            break;
                          }
                          case 7: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 8454156) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 48) >> 2] = r;
                              r = n;
                              d = 74;
                              break s;
                            }
                            break;
                          }
                          case 8: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 16842764) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 52) >> 2] = r;
                              r = n;
                              d = 75;
                              break s;
                            }
                            break;
                          }
                          case 9: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 33619980) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 56) >> 2] = r;
                              r = n;
                              d = 76;
                              break s;
                            }
                            break;
                          }
                          case 41: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 524304) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 64) >> 2] = r;
                              r = n;
                              d = 78;
                              break s;
                            }
                            break;
                          }
                          case 42: {
                            r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 1311760) | 0;
                            if (!r) $e(1);
                            else {
                              i[(e + 68) >> 2] = r;
                              r = n;
                              d = 79;
                              break s;
                            }
                            break;
                          }
                          default: {
                            r = n;
                            switch (l | 0) {
                              case 10:
                                break t;
                              case 40: {
                                h = r;
                                break r;
                              }
                              case 2: {
                                d = 69;
                                break;
                              }
                              case 3: {
                                d = 70;
                                break;
                              }
                              case 4: {
                                d = 71;
                                break;
                              }
                              case 5: {
                                d = 72;
                                break;
                              }
                              case 6: {
                                d = 73;
                                break;
                              }
                              case 7: {
                                d = 74;
                                break;
                              }
                              case 8: {
                                d = 75;
                                break;
                              }
                              case 9: {
                                d = 76;
                                break;
                              }
                              case 41: {
                                d = 78;
                                break;
                              }
                              case 42: {
                                d = 79;
                                break;
                              }
                              default:
                                break e;
                            }
                          }
                        }
                      } while (0);
                      switch (d | 0) {
                        case 69: {
                          e = i[r >> 2] | 0;
                          o[(e + 262148) >> 0] = 1;
                          i[(e + 262152) >> 2] = 0;
                          i[(e + 262156) >> 2] = 0;
                          break e;
                        }
                        case 70: {
                          e = i[(r + 4) >> 2] | 0;
                          o[(e + 262152) >> 0] = 1;
                          i[(e + 262156) >> 2] = 0;
                          i[(e + 262160) >> 2] = 0;
                          break e;
                        }
                        case 71: {
                          e = i[(r + 8) >> 2] | 0;
                          o[(e + 524304) >> 0] = 1;
                          i[(e + 524308) >> 2] = 0;
                          i[(e + 524312) >> 2] = 0;
                          break e;
                        }
                        case 72: {
                          e = i[(r + 12) >> 2] | 0;
                          o[(e + 1081344) >> 0] = 1;
                          i[(e + 1081348) >> 2] = 0;
                          i[(e + 1081352) >> 2] = 0;
                          break e;
                        }
                        case 73: {
                          e = i[(r + 16) >> 2] | 0;
                          o[(e + 2129920) >> 0] = 1;
                          i[(e + 2129924) >> 2] = 0;
                          i[(e + 2129928) >> 2] = 0;
                          break e;
                        }
                        case 74: {
                          e = i[(r + 20) >> 2] | 0;
                          o[(e + 8454144) >> 0] = 1;
                          i[(e + 8454148) >> 2] = 0;
                          i[(e + 8454152) >> 2] = 0;
                          break e;
                        }
                        case 75: {
                          e = i[(r + 24) >> 2] | 0;
                          o[(e + 16842752) >> 0] = 1;
                          i[(e + 16842756) >> 2] = 0;
                          i[(e + 16842760) >> 2] = 0;
                          break e;
                        }
                        case 76: {
                          e = i[(r + 28) >> 2] | 0;
                          o[(e + 33619968) >> 0] = 1;
                          i[(e + 33619972) >> 2] = 0;
                          i[(e + 33619976) >> 2] = 0;
                          break e;
                        }
                        case 78: {
                          e = i[(r + 36) >> 2] | 0;
                          o[(e + 524290) >> 0] = 1;
                          i[(e + 524292) >> 2] = 0;
                          i[(e + 524296) >> 2] = 0;
                          break e;
                        }
                        case 79: {
                          e = i[(r + 40) >> 2] | 0;
                          o[(e + 1311744) >> 0] = 1;
                          i[(e + 1311748) >> 2] = 0;
                          i[(e + 1311752) >> 2] = 0;
                          break e;
                        }
                      }
                    }
                  } while (0);
                  do {
                    if ((d | 0) == 56) {
                      r = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 524304) | 0;
                      if (!r) $e(1);
                      else {
                        i[(e + 60) >> 2] = r;
                        h = n;
                        break;
                      }
                    }
                  } while (0);
                  e = i[(h + 32) >> 2] | 0;
                  o[(e + 524290) >> 0] = 1;
                  i[(e + 524292) >> 2] = 0;
                  i[(e + 524296) >> 2] = 0;
                  break e;
                }
              } while (0);
              do {
                if ((d | 0) == 65) {
                  s = st[i[s >> 2] & 1](i[(e + 24) >> 2] | 0, 524308) | 0;
                  if (!s) $e(1);
                  else {
                    i[(n + 44) >> 2] = s;
                    r = i[(n + 44) >> 2] | 0;
                    i[(r + 524292) >> 2] = 0;
                    i[(r + 524300) >> 2] = 0;
                    o[(r + 524304) >> 0] = 1;
                    r = n;
                    break;
                  }
                }
              } while (0);
              o[((i[(r + 44) >> 2] | 0) + 524304) >> 0] = 1;
            }
          } while (0);
          o[p >> 0] = 1;
          return 1;
        }
        function Cb(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          var n = 0,
            a = 0;
          r = (r | 0) == 0 ? 32768 : 131072;
          n = 256;
          while (1) {
            if (!((n >>> 0 < r >>> 0) & (n >>> 0 < s >>> 0))) break;
            n = n << 1;
          }
          do {
            if (n >>> 0 >= 1025) {
              r = (e + 4304) | 0;
              if (n >>> 0 <= (i[r >> 2] | 0) >>> 0) {
                a = i[(e + 4300) >> 2] | 0;
                break;
              }
              i[r >> 2] = n;
              s = (e + 4300) | 0;
              r = (e + 24) | 0;
              rt[i[(e + 20) >> 2] & 1](i[r >> 2] | 0, i[s >> 2] | 0);
              i[s >> 2] = 0;
              e = st[i[(e + 16) >> 2] & 1](i[r >> 2] | 0, n << 2) | 0;
              r = e;
              if (!e) $e(1);
              else {
                i[s >> 2] = r;
                a = r;
                break;
              }
            } else a = (e + 204) | 0;
          } while (0);
          i[o >> 2] = n;
          ac(a | 0, 0, (n << 2) | 0) | 0;
          return a | 0;
        }
        function Pa(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0;
          Ze = w;
          w = (w + 32) | 0;
          Xe = (Ze + 16) | 0;
          ze = Ze;
          We = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          se = i[j >> 2] | 0;
          Ke = (s + r) | 0;
          Je = r >>> 0 > 3 ? (Ke + -3) | 0 : s;
          qe = (k + 4) | 0;
          je = (i[qe >> 2] | 0) < 9 ? 64 : 512;
          re = (je + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 513)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              n[(_ + (((Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17) << 1)) >> 1] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(_ + 16842752) >> 0] = 0;
              te = 8;
            }
          } else {
            e = (_ + 16842752) | 0;
            if (!(o[e >> 0] & 1)) te = 8;
            else {
              ac(_ | 0, 0, 65536) | 0;
              o[e >> 0] = 0;
              te = 8;
            }
          }
          if ((te | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            He = (s + -3) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[Ye >> 1] & 127) | (Ve << 7)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
            Ye = (s + -2) | 0;
            Ve = (h + (Ye & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            He = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[He >> 1] & 127) | (Ve << 7)) << 2)) >> 2] = Ye;
            n[He >> 1] = (((n[He >> 1] | 0) + 1) << 16) >> 16;
            He = (s + -1) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[Ye >> 1] & 127) | (Ve << 7)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
          }
          be = (Xe + 4) | 0;
          we = (Xe + 8) | 0;
          ye = (Xe + 12) | 0;
          ke = (Xe + 4) | 0;
          Re = (Xe + 8) | 0;
          Te = (Xe + 12) | 0;
          De = (_ + 16842760) | 0;
          Fe = (_ + 16842756) | 0;
          ve = je << 2;
          Se = (Ke + -4) | 0;
          Ne = (Ke + -3) | 0;
          Oe = (ze + 12) | 0;
          Ue = (ze + 4) | 0;
          Ge = (ze + 8) | 0;
          Le = (ze + 4) | 0;
          Me = (ze + 8) | 0;
          xe = (ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Qe = q;
          e = se;
          e: while (1) {
            me = Qe;
            Be = (re + ve) | 0;
            t: while (1) {
              Ce = (Ke - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Ke >>> 0) break e;
              Ee = k >>> 0 < We >>> 0 ? k : We;
              i[Xe >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 0;
              i[ye >> 2] = 4240;
              Ie = k & p;
              r = i[Xe >> 2] | 0;
              i[Xe >> 2] = 0;
              i[ke >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              ie = 4240;
              d = 0;
              ne = 0;
              while (1) {
                if ((ne | 0) == 10) break;
                oe = ((i[(M + (i[(11372 + (ne << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ne << 2)) >> 2] | 0)) | 0;
                te = (k - oe) | 0;
                do {
                  if (
                    (
                      (!((te >>> 0 >= k >>> 0) | (oe >>> 0 > Ee >>> 0)) ? (($e = te & p), (et = (Ie + r) | 0), et >>> 0 <= p >>> 0) : 0)
                        ? ((tt = ($e + r) | 0), tt >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + et) >> 0] | 0) == (o[(h + tt) >> 0] | 0)
                      : 0
                  ) {
                    se = 0;
                    te = de;
                    while (1) {
                      s = te;
                      if (s >>> 0 > he >>> 0) break;
                      ue = te;
                      ge = (h + ($e + se)) | 0;
                      if (
                        (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0) !=
                        (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0)
                      )
                        break;
                      se = (se + 4) | 0;
                      te = (s + 4) | 0;
                    }
                    while (1) {
                      if (te >>> 0 >= fe >>> 0) break;
                      if ((o[(h + ($e + se)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                      se = (se + 1) | 0;
                      te = (te + 1) | 0;
                    }
                    if (se >>> 0 <= 2 ? !(((se | 0) == 2) & (ne >>> 0 < 2)) : 0) {
                      te = ie;
                      break;
                    }
                    te = (((se * 540) | 0) + (i[(11500 + (ne << 2)) >> 2] | 0)) | 0;
                    if (ie >>> 0 < te >>> 0) {
                      i[Xe >> 2] = se;
                      i[Re >> 2] = oe;
                      i[Te >> 2] = te;
                      r = se;
                      d = 1;
                    } else te = ie;
                  } else te = ie;
                } while (0);
                ie = te;
                ne = (ne + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              le = ue << 7;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              te = ge & 65535;
              ge = (ge & 65535) > 128 ? (te + -128) | 0 : 0;
              r: while (1) {
                ce = (Ie + r) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (te >>> 0 <= ge >>> 0) break r;
                  te = (te + -1) | 0;
                  s = i[(_ + 65536 + ((le | (te & 127)) << 2)) >> 2] | 0;
                  Ae = (k - s) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break r;
                  ne = s & p;
                  if (ae) continue;
                  s = (ne + r) | 0;
                  if (s >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + s) >> 0] | 0)) {
                    oe = 0;
                    s = de;
                  } else continue;
                  while (1) {
                    se = s;
                    if (se >>> 0 > he >>> 0) break;
                    pt = s;
                    ht = (h + (ne + oe)) | 0;
                    if (
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0) !=
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0)
                    )
                      break;
                    oe = (oe + 4) | 0;
                    s = (se + 4) | 0;
                  }
                  while (1) {
                    if (s >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (ne + oe)) >> 0] | 0) != (o[s >> 0] | 0)) break;
                    oe = (oe + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  if (oe >>> 0 <= 3) continue;
                  s = (((oe * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (ie >>> 0 < s >>> 0) break;
                }
                i[Xe >> 2] = oe;
                i[Re >> 2] = Ae;
                i[Te >> 2] = s;
                r = oe;
                ie = s;
                d = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 65536 + ((le | (pt & 127)) << 2)) >> 2] = k;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    pt = n[(21084 + (oe << 1)) >> 1] | 0;
                    te = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((rt = te & 31), (st = te >>> 5), (ot = ((i[(11272 + (rt << 2)) >> 2] | 0) + (Pe(rt, st) | 0)) | 0), rt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      r = (ot + rt) | 0;
                      se = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      s = 0;
                      te = (280811 + ot) | 0;
                      while (1) {
                        if (te >>> 0 > r >>> 0) break;
                        pt = (h + (Ie + s)) | 0;
                        if (
                          (a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        s = (s + 4) | 0;
                        te = (te + 4) | 0;
                      }
                      while (1) {
                        if (te >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ie + s)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                        s = (s + 1) | 0;
                        te = (te + 1) | 0;
                      }
                      if (
                        !((((s + 10) | 0) >>> 0 <= rt >>> 0) | ((s | 0) == 0))
                          ? ((nt = (Ee + st + 1 + (a[(407930 + (rt - s)) >> 0] << a[(280786 + rt) >> 0])) | 0),
                            (it = (((s * 540) | 0) + 3840 + (Pe((_e(nt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            it >>> 0 >= (i[Te >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Xe >> 2] = s;
                        i[ke >> 2] = rt ^ s;
                        i[Re >> 2] = nt;
                        i[Te >> 2] = it;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                me = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              te = (k + 1) | 0;
              if (te >>> 0 <= re >>> 0) {
                k = te;
                continue;
              }
              if (te >>> 0 > Be >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 65536 + (((l[pt >> 1] & 127) | (ht << 7)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 65536 + (((l[pt >> 1] & 127) | (ht << 7)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ce = (Ce + -1) | 0;
              if ((i[qe >> 2] | 0) < 5) {
                e = ((i[Xe >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ce >>> 0 ? e : Ce;
              } else e = 0;
              i[ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              Ee = ie >>> 0 < We >>> 0 ? ie : We;
              Ie = ie & p;
              te = i[ze >> 2] | 0;
              i[ze >> 2] = 0;
              i[Le >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              oe = 4240;
              e = 0;
              se = 0;
              while (1) {
                if ((se | 0) == 10) break;
                s = ((i[(M + (i[(11372 + (se << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (se << 2)) >> 2] | 0)) | 0;
                d = (ie - s) | 0;
                do {
                  if (
                    (
                      (!((d >>> 0 >= ie >>> 0) | (s >>> 0 > Ee >>> 0)) ? ((At = d & p), (at = (Ie + te) | 0), at >>> 0 <= p >>> 0) : 0)
                        ? ((ct = (At + te) | 0), ct >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + at) >> 0] | 0) == (o[(h + ct) >> 0] | 0)
                      : 0
                  ) {
                    re = 0;
                    d = de;
                    while (1) {
                      r = d;
                      if (r >>> 0 > he >>> 0) break;
                      ht = d;
                      pt = (h + (At + re)) | 0;
                      if (
                        (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                        (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                      )
                        break;
                      re = (re + 4) | 0;
                      d = (r + 4) | 0;
                    }
                    while (1) {
                      if (d >>> 0 >= fe >>> 0) break;
                      if ((o[(h + (At + re)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                      re = (re + 1) | 0;
                      d = (d + 1) | 0;
                    }
                    if (re >>> 0 <= 2 ? !(((re | 0) == 2) & (se >>> 0 < 2)) : 0) {
                      d = oe;
                      break;
                    }
                    d = (((re * 540) | 0) + (i[(11500 + (se << 2)) >> 2] | 0)) | 0;
                    if (oe >>> 0 < d >>> 0) {
                      i[ze >> 2] = re;
                      i[Me >> 2] = s;
                      i[xe >> 2] = d;
                      te = re;
                      e = 1;
                    } else d = oe;
                  } else d = oe;
                } while (0);
                oe = d;
                se = (se + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              le = ue << 7;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              d = ge & 65535;
              ge = (ge & 65535) > 128 ? (d + -128) | 0 : 0;
              t: while (1) {
                ce = (Ie + te) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (d >>> 0 <= ge >>> 0) break t;
                  d = (d + -1) | 0;
                  r = i[(_ + 65536 + ((le | (d & 127)) << 2)) >> 2] | 0;
                  Ae = (ie - r) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break t;
                  se = r & p;
                  if (ae) continue;
                  r = (se + te) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    s = 0;
                    r = de;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > he >>> 0) break;
                    ht = r;
                    pt = (h + (se + s)) | 0;
                    if (
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (se + s)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  r = (((s * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (oe >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = s;
                i[Me >> 2] = Ae;
                i[xe >> 2] = r;
                te = s;
                oe = r;
                e = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 65536 + ((le | (pt & 127)) << 2)) >> 2] = ie;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  s = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    pt = n[(21084 + (s << 1)) >> 1] | 0;
                    d = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((lt = d & 31), (ut = d >>> 5), (gt = ((i[(11272 + (lt << 2)) >> 2] | 0) + (Pe(lt, ut) | 0)) | 0), lt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      te = (gt + lt) | 0;
                      re = (280811 + te) | 0;
                      te = (280811 + (te + -4)) | 0;
                      r = 0;
                      d = (280811 + gt) | 0;
                      while (1) {
                        if (d >>> 0 > te >>> 0) break;
                        pt = (h + (Ie + r)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        r = (r + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= re >>> 0) break;
                        if ((o[(h + (Ie + r)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        r = (r + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((r + 10) | 0) >>> 0 <= lt >>> 0) | ((r | 0) == 0))
                          ? ((dt = (Ee + ut + 1 + (a[(407930 + (lt - r)) >> 0] << a[(280786 + lt) >> 0])) | 0),
                            (ft = (((r * 540) | 0) + 3840 + (Pe((_e(dt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            ft >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = r;
                        i[Le >> 2] = lt ^ r;
                        i[Me >> 2] = dt;
                        i[xe >> 2] = ft;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[ye >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[Xe >> 2] = i[ze >> 2];
              i[(Xe + 4) >> 2] = i[(ze + 4) >> 2];
              i[(Xe + 8) >> 2] = i[(ze + 8) >> 2];
              i[(Xe + 12) >> 2] = i[(ze + 12) >> 2];
              me = (me + 1) | 0;
              if (!(((me | 0) < 4) & (((k + 5) | 0) >>> 0 < Ke >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[Xe >> 2] | 0;
            re = (ie + (k << 1) + je) | 0;
            e = i[we >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < We >>> 0 ? ie : We) >>> 0) {
                r = (e + 3) | 0;
                pt = i[M >> 2] | 0;
                d = (r - pt) | 0;
                te = i[Ye >> 2] | 0;
                r = (r - te) | 0;
                if ((e | 0) == (pt | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (te | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (r >>> 0 < 7) {
                            e = (266017486 >>> (r << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[we >> 2];
                  k = i[Xe >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Qe + 16) | 0;
            pt = i[be >> 2] | 0;
            d = k ^ pt;
            i[Qe >> 2] = ne;
            i[(Qe + 4) >> 2] = k | (pt << 24);
            k = (Qe + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              Be = (e + -12) | 0;
              pt = (((_e(Be | 0) | 0) ^ 31) + -1) | 0;
              ht = (Be >>> pt) & 1;
              e = ((((pt << 1) + 65534) | ht) + 16) & 65535;
              n[k >> 1] = e;
              k = (pt << 24) | (Be - ((ht | 2) << pt));
            }
            i[(Qe + 8) >> 2] = k;
            s = (e << 16) >> 16 == 0;
            se = (Qe + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  pt = (ne + -2) | 0;
                  r = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  r = ((r << 1) + (pt >>> r) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  r = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) r = 21;
                else r = ne >>> 0 < 22594 ? 22 : 23;
              } else r = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  pt = (d + -6) | 0;
                  e = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (pt >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = r & 65535;
            te = (k & 7) | ((d << 3) & 56);
            if (s & ((r & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? te : te | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (te & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[Xe >> 2] | 0)) | 0;
            e = e >>> 0 < Je >>> 0 ? e : Je;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ht = (h + (k & p)) | 0;
              ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              pt = (_ + (ht << 1)) | 0;
              i[(_ + 65536 + (((l[pt >> 1] & 127) | (ht << 7)) << 2)) >> 2] = k;
              n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
              k = (k + 1) | 0;
            }
            k = (ie + (i[Xe >> 2] | 0)) | 0;
            Qe = oe;
            e = 0;
          }
          i[j >> 2] = e + Ce;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((me - q) >> 4);
          w = Ze;
          return;
        }
        function Qa(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0;
          Ze = w;
          w = (w + 32) | 0;
          Xe = (Ze + 16) | 0;
          ze = Ze;
          We = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          se = i[j >> 2] | 0;
          Ke = (s + r) | 0;
          Je = r >>> 0 > 3 ? (Ke + -3) | 0 : s;
          qe = (k + 4) | 0;
          je = (i[qe >> 2] | 0) < 9 ? 64 : 512;
          re = (je + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 513)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              n[(_ + (((Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17) << 1)) >> 1] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(_ + 33619968) >> 0] = 0;
              te = 8;
            }
          } else {
            e = (_ + 33619968) | 0;
            if (!(o[e >> 0] & 1)) te = 8;
            else {
              ac(_ | 0, 0, 65536) | 0;
              o[e >> 0] = 0;
              te = 8;
            }
          }
          if ((te | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            He = (s + -3) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[Ye >> 1] & 255) | (Ve << 8)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
            Ye = (s + -2) | 0;
            Ve = (h + (Ye & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            He = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[He >> 1] & 255) | (Ve << 8)) << 2)) >> 2] = Ye;
            n[He >> 1] = (((n[He >> 1] | 0) + 1) << 16) >> 16;
            He = (s + -1) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[Ye >> 1] & 255) | (Ve << 8)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
          }
          be = (Xe + 4) | 0;
          we = (Xe + 8) | 0;
          ye = (Xe + 12) | 0;
          ke = (Xe + 4) | 0;
          Re = (Xe + 8) | 0;
          Te = (Xe + 12) | 0;
          De = (_ + 33619976) | 0;
          Fe = (_ + 33619972) | 0;
          ve = je << 2;
          Se = (Ke + -4) | 0;
          Ne = (Ke + -3) | 0;
          Oe = (ze + 12) | 0;
          Ue = (ze + 4) | 0;
          Ge = (ze + 8) | 0;
          Le = (ze + 4) | 0;
          Me = (ze + 8) | 0;
          xe = (ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Qe = q;
          e = se;
          e: while (1) {
            me = Qe;
            Be = (re + ve) | 0;
            t: while (1) {
              Ce = (Ke - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Ke >>> 0) break e;
              Ee = k >>> 0 < We >>> 0 ? k : We;
              i[Xe >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 0;
              i[ye >> 2] = 4240;
              Ie = k & p;
              r = i[Xe >> 2] | 0;
              i[Xe >> 2] = 0;
              i[ke >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              ie = 4240;
              d = 0;
              ne = 0;
              while (1) {
                if ((ne | 0) == 16) break;
                oe = ((i[(M + (i[(11372 + (ne << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ne << 2)) >> 2] | 0)) | 0;
                te = (k - oe) | 0;
                do {
                  if (
                    (
                      (!((te >>> 0 >= k >>> 0) | (oe >>> 0 > Ee >>> 0)) ? (($e = te & p), (et = (Ie + r) | 0), et >>> 0 <= p >>> 0) : 0)
                        ? ((tt = ($e + r) | 0), tt >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + et) >> 0] | 0) == (o[(h + tt) >> 0] | 0)
                      : 0
                  ) {
                    se = 0;
                    te = de;
                    while (1) {
                      s = te;
                      if (s >>> 0 > he >>> 0) break;
                      ue = te;
                      ge = (h + ($e + se)) | 0;
                      if (
                        (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0) !=
                        (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0)
                      )
                        break;
                      se = (se + 4) | 0;
                      te = (s + 4) | 0;
                    }
                    while (1) {
                      if (te >>> 0 >= fe >>> 0) break;
                      if ((o[(h + ($e + se)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                      se = (se + 1) | 0;
                      te = (te + 1) | 0;
                    }
                    if (se >>> 0 <= 2 ? !(((se | 0) == 2) & (ne >>> 0 < 2)) : 0) {
                      te = ie;
                      break;
                    }
                    te = (((se * 540) | 0) + (i[(11500 + (ne << 2)) >> 2] | 0)) | 0;
                    if (ie >>> 0 < te >>> 0) {
                      i[Xe >> 2] = se;
                      i[Re >> 2] = oe;
                      i[Te >> 2] = te;
                      r = se;
                      d = 1;
                    } else te = ie;
                  } else te = ie;
                } while (0);
                ie = te;
                ne = (ne + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              le = ue << 8;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              te = ge & 65535;
              ge = (ge & 65535) > 256 ? (te + -256) | 0 : 0;
              r: while (1) {
                ce = (Ie + r) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (te >>> 0 <= ge >>> 0) break r;
                  te = (te + -1) | 0;
                  s = i[(_ + 65536 + ((le | (te & 255)) << 2)) >> 2] | 0;
                  Ae = (k - s) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break r;
                  ne = s & p;
                  if (ae) continue;
                  s = (ne + r) | 0;
                  if (s >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + s) >> 0] | 0)) {
                    oe = 0;
                    s = de;
                  } else continue;
                  while (1) {
                    se = s;
                    if (se >>> 0 > he >>> 0) break;
                    pt = s;
                    ht = (h + (ne + oe)) | 0;
                    if (
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0) !=
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0)
                    )
                      break;
                    oe = (oe + 4) | 0;
                    s = (se + 4) | 0;
                  }
                  while (1) {
                    if (s >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (ne + oe)) >> 0] | 0) != (o[s >> 0] | 0)) break;
                    oe = (oe + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  if (oe >>> 0 <= 3) continue;
                  s = (((oe * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (ie >>> 0 < s >>> 0) break;
                }
                i[Xe >> 2] = oe;
                i[Re >> 2] = Ae;
                i[Te >> 2] = s;
                r = oe;
                ie = s;
                d = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 65536 + ((le | (pt & 255)) << 2)) >> 2] = k;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    pt = n[(21084 + (oe << 1)) >> 1] | 0;
                    te = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((rt = te & 31), (st = te >>> 5), (ot = ((i[(11272 + (rt << 2)) >> 2] | 0) + (Pe(rt, st) | 0)) | 0), rt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      r = (ot + rt) | 0;
                      se = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      s = 0;
                      te = (280811 + ot) | 0;
                      while (1) {
                        if (te >>> 0 > r >>> 0) break;
                        pt = (h + (Ie + s)) | 0;
                        if (
                          (a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        s = (s + 4) | 0;
                        te = (te + 4) | 0;
                      }
                      while (1) {
                        if (te >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ie + s)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                        s = (s + 1) | 0;
                        te = (te + 1) | 0;
                      }
                      if (
                        !((((s + 10) | 0) >>> 0 <= rt >>> 0) | ((s | 0) == 0))
                          ? ((nt = (Ee + st + 1 + (a[(407930 + (rt - s)) >> 0] << a[(280786 + rt) >> 0])) | 0),
                            (it = (((s * 540) | 0) + 3840 + (Pe((_e(nt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            it >>> 0 >= (i[Te >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Xe >> 2] = s;
                        i[ke >> 2] = rt ^ s;
                        i[Re >> 2] = nt;
                        i[Te >> 2] = it;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                me = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              te = (k + 1) | 0;
              if (te >>> 0 <= re >>> 0) {
                k = te;
                continue;
              }
              if (te >>> 0 > Be >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 65536 + (((l[pt >> 1] & 255) | (ht << 8)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 65536 + (((l[pt >> 1] & 255) | (ht << 8)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ce = (Ce + -1) | 0;
              if ((i[qe >> 2] | 0) < 5) {
                e = ((i[Xe >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ce >>> 0 ? e : Ce;
              } else e = 0;
              i[ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              Ee = ie >>> 0 < We >>> 0 ? ie : We;
              Ie = ie & p;
              te = i[ze >> 2] | 0;
              i[ze >> 2] = 0;
              i[Le >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              oe = 4240;
              e = 0;
              se = 0;
              while (1) {
                if ((se | 0) == 16) break;
                s = ((i[(M + (i[(11372 + (se << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (se << 2)) >> 2] | 0)) | 0;
                d = (ie - s) | 0;
                do {
                  if (
                    (
                      (!((d >>> 0 >= ie >>> 0) | (s >>> 0 > Ee >>> 0)) ? ((At = d & p), (at = (Ie + te) | 0), at >>> 0 <= p >>> 0) : 0)
                        ? ((ct = (At + te) | 0), ct >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + at) >> 0] | 0) == (o[(h + ct) >> 0] | 0)
                      : 0
                  ) {
                    re = 0;
                    d = de;
                    while (1) {
                      r = d;
                      if (r >>> 0 > he >>> 0) break;
                      ht = d;
                      pt = (h + (At + re)) | 0;
                      if (
                        (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                        (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                      )
                        break;
                      re = (re + 4) | 0;
                      d = (r + 4) | 0;
                    }
                    while (1) {
                      if (d >>> 0 >= fe >>> 0) break;
                      if ((o[(h + (At + re)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                      re = (re + 1) | 0;
                      d = (d + 1) | 0;
                    }
                    if (re >>> 0 <= 2 ? !(((re | 0) == 2) & (se >>> 0 < 2)) : 0) {
                      d = oe;
                      break;
                    }
                    d = (((re * 540) | 0) + (i[(11500 + (se << 2)) >> 2] | 0)) | 0;
                    if (oe >>> 0 < d >>> 0) {
                      i[ze >> 2] = re;
                      i[Me >> 2] = s;
                      i[xe >> 2] = d;
                      te = re;
                      e = 1;
                    } else d = oe;
                  } else d = oe;
                } while (0);
                oe = d;
                se = (se + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              le = ue << 8;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              d = ge & 65535;
              ge = (ge & 65535) > 256 ? (d + -256) | 0 : 0;
              t: while (1) {
                ce = (Ie + te) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (d >>> 0 <= ge >>> 0) break t;
                  d = (d + -1) | 0;
                  r = i[(_ + 65536 + ((le | (d & 255)) << 2)) >> 2] | 0;
                  Ae = (ie - r) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break t;
                  se = r & p;
                  if (ae) continue;
                  r = (se + te) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    s = 0;
                    r = de;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > he >>> 0) break;
                    ht = r;
                    pt = (h + (se + s)) | 0;
                    if (
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (se + s)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  r = (((s * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (oe >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = s;
                i[Me >> 2] = Ae;
                i[xe >> 2] = r;
                te = s;
                oe = r;
                e = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 65536 + ((le | (pt & 255)) << 2)) >> 2] = ie;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  s = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    pt = n[(21084 + (s << 1)) >> 1] | 0;
                    d = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((lt = d & 31), (ut = d >>> 5), (gt = ((i[(11272 + (lt << 2)) >> 2] | 0) + (Pe(lt, ut) | 0)) | 0), lt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      te = (gt + lt) | 0;
                      re = (280811 + te) | 0;
                      te = (280811 + (te + -4)) | 0;
                      r = 0;
                      d = (280811 + gt) | 0;
                      while (1) {
                        if (d >>> 0 > te >>> 0) break;
                        pt = (h + (Ie + r)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        r = (r + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= re >>> 0) break;
                        if ((o[(h + (Ie + r)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        r = (r + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((r + 10) | 0) >>> 0 <= lt >>> 0) | ((r | 0) == 0))
                          ? ((dt = (Ee + ut + 1 + (a[(407930 + (lt - r)) >> 0] << a[(280786 + lt) >> 0])) | 0),
                            (ft = (((r * 540) | 0) + 3840 + (Pe((_e(dt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            ft >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = r;
                        i[Le >> 2] = lt ^ r;
                        i[Me >> 2] = dt;
                        i[xe >> 2] = ft;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[ye >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[Xe >> 2] = i[ze >> 2];
              i[(Xe + 4) >> 2] = i[(ze + 4) >> 2];
              i[(Xe + 8) >> 2] = i[(ze + 8) >> 2];
              i[(Xe + 12) >> 2] = i[(ze + 12) >> 2];
              me = (me + 1) | 0;
              if (!(((me | 0) < 4) & (((k + 5) | 0) >>> 0 < Ke >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[Xe >> 2] | 0;
            re = (ie + (k << 1) + je) | 0;
            e = i[we >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < We >>> 0 ? ie : We) >>> 0) {
                r = (e + 3) | 0;
                pt = i[M >> 2] | 0;
                d = (r - pt) | 0;
                te = i[Ye >> 2] | 0;
                r = (r - te) | 0;
                if ((e | 0) == (pt | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (te | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (r >>> 0 < 7) {
                            e = (266017486 >>> (r << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[we >> 2];
                  k = i[Xe >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Qe + 16) | 0;
            pt = i[be >> 2] | 0;
            d = k ^ pt;
            i[Qe >> 2] = ne;
            i[(Qe + 4) >> 2] = k | (pt << 24);
            k = (Qe + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              Be = (e + -12) | 0;
              pt = (((_e(Be | 0) | 0) ^ 31) + -1) | 0;
              ht = (Be >>> pt) & 1;
              e = ((((pt << 1) + 65534) | ht) + 16) & 65535;
              n[k >> 1] = e;
              k = (pt << 24) | (Be - ((ht | 2) << pt));
            }
            i[(Qe + 8) >> 2] = k;
            s = (e << 16) >> 16 == 0;
            se = (Qe + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  pt = (ne + -2) | 0;
                  r = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  r = ((r << 1) + (pt >>> r) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  r = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) r = 21;
                else r = ne >>> 0 < 22594 ? 22 : 23;
              } else r = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  pt = (d + -6) | 0;
                  e = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (pt >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = r & 65535;
            te = (k & 7) | ((d << 3) & 56);
            if (s & ((r & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? te : te | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (te & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[Xe >> 2] | 0)) | 0;
            e = e >>> 0 < Je >>> 0 ? e : Je;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ht = (h + (k & p)) | 0;
              ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              pt = (_ + (ht << 1)) | 0;
              i[(_ + 65536 + (((l[pt >> 1] & 255) | (ht << 8)) << 2)) >> 2] = k;
              n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
              k = (k + 1) | 0;
            }
            k = (ie + (i[Xe >> 2] | 0)) | 0;
            Qe = oe;
            e = 0;
          }
          i[j >> 2] = e + Ce;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((me - q) >> 4);
          w = Ze;
          return;
        }
        function Ra(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0;
          et = w;
          w = (w + 32) | 0;
          ze = (et + 16) | 0;
          Ze = et;
          Ke = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          re = i[j >> 2] | 0;
          Xe = (s + r) | 0;
          We = r >>> 0 > 3 ? (Xe + -3) | 0 : s;
          Je = (k + 4) | 0;
          Ye = i[Je >> 2] | 0;
          je = (Ye | 0) < 9 ? 64 : 512;
          te = (je + s) | 0;
          qe = (_ + 524300) | 0;
          i[qe >> 2] = ((Ye | 0) > 6 ? 7 : 8) << (Ye + -4);
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 513)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              Ye = (Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              i[(_ + (Ye << 2)) >> 2] = -858993460;
              n[(_ + 131072 + (Ye << 1)) >> 1] = -13108;
              e = (e + 1) | 0;
            }
            ac((_ + 196608) | 0, 0, 65536) | 0;
            n[(_ + 524288) >> 1] = 0;
            if (r) {
              o[(_ + 524290) >> 0] = 0;
              $e = 8;
            }
          } else {
            e = (_ + 524290) | 0;
            if (!(o[e >> 0] & 1)) $e = 8;
            else {
              ac(_ | 0, -52, 131072) | 0;
              n[(_ + 524288) >> 1] = 0;
              o[e >> 0] = 0;
              ac((_ + 131072) | 0, 0, 131072) | 0;
              $e = 8;
            }
          }
          if (($e | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            Le = (s + -3) | 0;
            He = (h + (Le & p)) | 0;
            He = (Pe(a[He >> 0] | (a[(He + 1) >> 0] << 8) | (a[(He + 2) >> 0] << 16) | (a[(He + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Me = (_ + 524288) | 0;
            xe = n[Me >> 1] | 0;
            n[Me >> 1] = ((xe + 1) << 16) >> 16;
            Ve = xe & 65535;
            Ye = (_ + (He << 2)) | 0;
            Ge = (Le - (i[Ye >> 2] | 0)) | 0;
            o[((Le & 65535) + (_ + 196608)) >> 0] = He;
            n[(_ + 262144 + (Ve << 2)) >> 1] = Ge >>> 0 > 65535 ? 65535 : Ge;
            He = (_ + 131072 + (He << 1)) | 0;
            n[(_ + 262144 + (Ve << 2) + 2) >> 1] = n[He >> 1] | 0;
            i[Ye >> 2] = Le;
            n[He >> 1] = xe;
            He = (s + -2) | 0;
            xe = (h + (He & p)) | 0;
            xe = (Pe(a[xe >> 0] | (a[(xe + 1) >> 0] << 8) | (a[(xe + 2) >> 0] << 16) | (a[(xe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = n[Me >> 1] | 0;
            n[Me >> 1] = ((Ye + 1) << 16) >> 16;
            Le = Ye & 65535;
            Ve = (_ + (xe << 2)) | 0;
            Ge = (He - (i[Ve >> 2] | 0)) | 0;
            o[((He & 65535) + (_ + 196608)) >> 0] = xe;
            n[(_ + 262144 + (Le << 2)) >> 1] = Ge >>> 0 > 65535 ? 65535 : Ge;
            xe = (_ + 131072 + (xe << 1)) | 0;
            n[(_ + 262144 + (Le << 2) + 2) >> 1] = n[xe >> 1] | 0;
            i[Ve >> 2] = He;
            n[xe >> 1] = Ye;
            xe = (s + -1) | 0;
            Ye = (h + (xe & p)) | 0;
            Ye = (Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ve = n[Me >> 1] | 0;
            n[Me >> 1] = ((Ve + 1) << 16) >> 16;
            Me = Ve & 65535;
            He = (_ + (Ye << 2)) | 0;
            Le = (xe - (i[He >> 2] | 0)) | 0;
            o[((xe & 65535) + (_ + 196608)) >> 0] = Ye;
            n[(_ + 262144 + (Me << 2)) >> 1] = Le >>> 0 > 65535 ? 65535 : Le;
            Ye = (_ + 131072 + (Ye << 1)) | 0;
            n[(_ + 262144 + (Me << 2) + 2) >> 1] = n[Ye >> 1] | 0;
            i[He >> 2] = xe;
            n[Ye >> 1] = Ve;
          }
          Qe = (ze + 4) | 0;
          be = (ze + 8) | 0;
          we = (ze + 12) | 0;
          ye = (ze + 4) | 0;
          ke = (ze + 8) | 0;
          Re = (ze + 12) | 0;
          Te = (_ + 524288) | 0;
          De = (_ + 524296) | 0;
          Fe = (_ + 524292) | 0;
          ve = je << 2;
          Se = (Xe + -4) | 0;
          Ne = (Xe + -3) | 0;
          Oe = (Ze + 12) | 0;
          Ue = (Ze + 4) | 0;
          Ge = (Ze + 8) | 0;
          Le = (Ze + 4) | 0;
          Me = (Ze + 8) | 0;
          xe = (Ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Be = q;
          e = re;
          e: while (1) {
            Ce = Be;
            me = (te + ve) | 0;
            t: while (1) {
              Ie = (Xe - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Xe >>> 0) break e;
              pe = k >>> 0 < Ke >>> 0 ? k : Ke;
              i[ze >> 2] = 0;
              i[Qe >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 4240;
              Ee = k & p;
              Ae = i[ze >> 2] | 0;
              he = (h + Ee) | 0;
              ce = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              ie = ce & 255;
              i[ze >> 2] = 0;
              i[ye >> 2] = 0;
              fe = (Ee + Ie) | 0;
              de = (h + fe) | 0;
              ge = he;
              fe = (h + (fe + -4)) | 0;
              s = 4240;
              d = 0;
              ae = 0;
              while (1) {
                if ((ae | 0) == 4) break;
                ne = ((i[(M + (i[(11372 + (ae << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ae << 2)) >> 2] | 0)) | 0;
                r = (k - ne) | 0;
                if (!ae)
                  if ((r >>> 0 >= k >>> 0) | (ne >>> 0 > pe >>> 0)) r = Ae;
                  else $e = 17;
                else if (((r >>> 0 < k >>> 0 ? (o[((r & 65535) + (_ + 196608)) >> 0] | 0) == (ie << 24) >> 24 : 0) ^ 1) | (ne >>> 0 > pe >>> 0)) r = Ae;
                else $e = 17;
                if (($e | 0) == 17) {
                  $e = 0;
                  oe = r & p;
                  r = 0;
                  re = ge;
                  while (1) {
                    se = re;
                    if (se >>> 0 > fe >>> 0) break;
                    le = re;
                    ue = (h + (oe + r)) | 0;
                    if (
                      (a[le >> 0] | (a[(le + 1) >> 0] << 8) | (a[(le + 2) >> 0] << 16) | (a[(le + 3) >> 0] << 24) | 0) !=
                      (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0)
                    )
                      break;
                    r = (r + 4) | 0;
                    re = (se + 4) | 0;
                  }
                  while (1) {
                    if (re >>> 0 >= de >>> 0) break;
                    if ((o[(h + (oe + r)) >> 0] | 0) != (o[re >> 0] | 0)) break;
                    r = (r + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  if (r >>> 0 > 1 ? ((tt = (((r * 540) | 0) + (i[(11500 + (ae << 2)) >> 2] | 0)) | 0), s >>> 0 < tt >>> 0) : 0) {
                    i[ze >> 2] = r;
                    i[ke >> 2] = ne;
                    i[Re >> 2] = tt;
                    s = tt;
                    d = 1;
                  } else r = Ae;
                }
                Ae = r;
                ae = (ae + 1) | 0;
              }
              oe = 0;
              re = (k - (i[(_ + (ce << 2)) >> 2] | 0)) | 0;
              se = i[qe >> 2] | 0;
              r = l[(_ + 131072 + (ce << 1)) >> 1] | 0;
              r: while (1) {
                ue = (Ee + Ae) | 0;
                le = ue >>> 0 > p >>> 0;
                ue = (h + ue) | 0;
                ne = oe;
                ie = re;
                ae = se;
                ce = r;
                while (1) {
                  oe = ae;
                  ae = (ae + -1) | 0;
                  if (!oe) break r;
                  ne = (ne + ie) | 0;
                  if (ne >>> 0 > pe >>> 0) break r;
                  oe = (k - ne) & p;
                  ie = ce;
                  ce = l[(_ + 262144 + (ce << 2) + 2) >> 1] | 0;
                  ie = l[(_ + 262144 + (ie << 2)) >> 1] | 0;
                  if (le) continue;
                  r = (oe + Ae) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ue >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    se = 0;
                    r = ge;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > fe >>> 0) break;
                    ft = r;
                    dt = (h + (oe + se)) | 0;
                    if (
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0) !=
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    se = (se + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= de >>> 0) break;
                    if ((o[(h + (oe + se)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    se = (se + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (se >>> 0 <= 3) continue;
                  r = (((se * 540) | 0) + 3840 + (Pe((_e(ne | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (s >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = se;
                i[ke >> 2] = ne;
                i[Re >> 2] = r;
                oe = ne;
                Ae = se;
                s = r;
                re = ie;
                se = ae;
                d = 1;
                r = ce;
              }
              ft = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              dt = n[Te >> 1] | 0;
              n[Te >> 1] = ((dt + 1) << 16) >> 16;
              de = dt & 65535;
              fe = (_ + (ft << 2)) | 0;
              ge = (k - (i[fe >> 2] | 0)) | 0;
              o[((k & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (de << 2)) >> 1] = ge >>> 0 > 65535 ? 65535 : ge;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (de << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[fe >> 2] = k;
              n[ft >> 1] = dt;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    ft = n[(21084 + (oe << 1)) >> 1] | 0;
                    r = ft & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (ft << 16) >> 16 != 0
                        ? ((rt = r & 31), (st = r >>> 5), (ot = ((i[(11272 + (rt << 2)) >> 2] | 0) + (Pe(rt, st) | 0)) | 0), rt >>> 0 <= Ie >>> 0)
                        : 0
                    ) {
                      s = (ot + rt) | 0;
                      se = (280811 + s) | 0;
                      s = (280811 + (s + -4)) | 0;
                      re = 0;
                      r = (280811 + ot) | 0;
                      while (1) {
                        if (r >>> 0 > s >>> 0) break;
                        ft = (h + (Ee + re)) | 0;
                        if (
                          (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                          (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                        )
                          break;
                        re = (re + 4) | 0;
                        r = (r + 4) | 0;
                      }
                      while (1) {
                        if (r >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ee + re)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                        re = (re + 1) | 0;
                        r = (r + 1) | 0;
                      }
                      if (
                        !((((re + 10) | 0) >>> 0 <= rt >>> 0) | ((re | 0) == 0))
                          ? ((nt = (pe + st + 1 + (a[(407930 + (rt - re)) >> 0] << a[(280786 + rt) >> 0])) | 0),
                            (it = (((re * 540) | 0) + 3840 + (Pe((_e(nt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            it >>> 0 >= (i[Re >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = re;
                        i[ye >> 2] = rt ^ re;
                        i[ke >> 2] = nt;
                        i[Re >> 2] = it;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                Ce = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              r = (k + 1) | 0;
              if (r >>> 0 <= te >>> 0) {
                k = r;
                continue;
              }
              if (r >>> 0 > me >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = r;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ft = (h + (k & p)) | 0;
                  ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  dt = n[Te >> 1] | 0;
                  n[Te >> 1] = ((dt + 1) << 16) >> 16;
                  Ee = dt & 65535;
                  Ie = (_ + (ft << 2)) | 0;
                  pe = (k - (i[Ie >> 2] | 0)) | 0;
                  o[((k & 65535) + (_ + 196608)) >> 0] = ft;
                  n[(_ + 262144 + (Ee << 2)) >> 1] = pe >>> 0 > 65535 ? 65535 : pe;
                  ft = (_ + 131072 + (ft << 1)) | 0;
                  n[(_ + 262144 + (Ee << 2) + 2) >> 1] = n[ft >> 1] | 0;
                  i[Ie >> 2] = k;
                  n[ft >> 1] = dt;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = r;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ft = (h + (k & p)) | 0;
                  ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  dt = n[Te >> 1] | 0;
                  n[Te >> 1] = ((dt + 1) << 16) >> 16;
                  Ee = dt & 65535;
                  Ie = (_ + (ft << 2)) | 0;
                  pe = (k - (i[Ie >> 2] | 0)) | 0;
                  o[((k & 65535) + (_ + 196608)) >> 0] = ft;
                  n[(_ + 262144 + (Ee << 2)) >> 1] = pe >>> 0 > 65535 ? 65535 : pe;
                  ft = (_ + 131072 + (ft << 1)) | 0;
                  n[(_ + 262144 + (Ee << 2) + 2) >> 1] = n[ft >> 1] | 0;
                  i[Ie >> 2] = k;
                  n[ft >> 1] = dt;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ie = (Ie + -1) | 0;
              if ((i[Je >> 2] | 0) < 5) {
                e = ((i[ze >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ie >>> 0 ? e : Ie;
              } else e = 0;
              i[Ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              pe = ie >>> 0 < Ke >>> 0 ? ie : Ke;
              Ee = ie & p;
              Ae = i[Ze >> 2] | 0;
              he = (h + Ee) | 0;
              ce = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              oe = ce & 255;
              i[Ze >> 2] = 0;
              i[Le >> 2] = 0;
              fe = (Ee + Ie) | 0;
              de = (h + fe) | 0;
              ge = he;
              fe = (h + (fe + -4)) | 0;
              r = 4240;
              e = 0;
              ae = 0;
              while (1) {
                if ((ae | 0) == 4) break;
                se = ((i[(M + (i[(11372 + (ae << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ae << 2)) >> 2] | 0)) | 0;
                d = (ie - se) | 0;
                if (!ae)
                  if ((d >>> 0 >= ie >>> 0) | (se >>> 0 > pe >>> 0)) d = Ae;
                  else $e = 71;
                else if (((d >>> 0 < ie >>> 0 ? (o[((d & 65535) + (_ + 196608)) >> 0] | 0) == (oe << 24) >> 24 : 0) ^ 1) | (se >>> 0 > pe >>> 0)) d = Ae;
                else $e = 71;
                if (($e | 0) == 71) {
                  $e = 0;
                  re = d & p;
                  d = 0;
                  te = ge;
                  while (1) {
                    s = te;
                    if (s >>> 0 > fe >>> 0) break;
                    dt = te;
                    ft = (h + (re + d)) | 0;
                    if (
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0) !=
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                    )
                      break;
                    d = (d + 4) | 0;
                    te = (s + 4) | 0;
                  }
                  while (1) {
                    if (te >>> 0 >= de >>> 0) break;
                    if ((o[(h + (re + d)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                    d = (d + 1) | 0;
                    te = (te + 1) | 0;
                  }
                  if (d >>> 0 > 1 ? ((At = (((d * 540) | 0) + (i[(11500 + (ae << 2)) >> 2] | 0)) | 0), r >>> 0 < At >>> 0) : 0) {
                    i[Ze >> 2] = d;
                    i[Me >> 2] = se;
                    i[xe >> 2] = At;
                    r = At;
                    e = 1;
                  } else d = Ae;
                }
                Ae = d;
                ae = (ae + 1) | 0;
              }
              re = 0;
              te = (ie - (i[(_ + (ce << 2)) >> 2] | 0)) | 0;
              s = i[qe >> 2] | 0;
              d = l[(_ + 131072 + (ce << 1)) >> 1] | 0;
              t: while (1) {
                ue = (Ee + Ae) | 0;
                le = ue >>> 0 > p >>> 0;
                ue = (h + ue) | 0;
                se = re;
                oe = te;
                ae = s;
                ce = d;
                while (1) {
                  ft = ae;
                  ae = (ae + -1) | 0;
                  if (!ft) break t;
                  se = (se + oe) | 0;
                  if (se >>> 0 > pe >>> 0) break t;
                  re = (ie - se) & p;
                  oe = ce;
                  ce = l[(_ + 262144 + (ce << 2) + 2) >> 1] | 0;
                  oe = l[(_ + 262144 + (oe << 2)) >> 1] | 0;
                  if (le) continue;
                  d = (re + Ae) | 0;
                  if (d >>> 0 > p >>> 0) continue;
                  if ((o[ue >> 0] | 0) == (o[(h + d) >> 0] | 0)) {
                    s = 0;
                    d = ge;
                  } else continue;
                  while (1) {
                    te = d;
                    if (te >>> 0 > fe >>> 0) break;
                    dt = d;
                    ft = (h + (re + s)) | 0;
                    if (
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0) !=
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    d = (te + 4) | 0;
                  }
                  while (1) {
                    if (d >>> 0 >= de >>> 0) break;
                    if ((o[(h + (re + s)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    d = (d + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  d = (((s * 540) | 0) + 3840 + (Pe((_e(se | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (r >>> 0 < d >>> 0) break;
                }
                i[Ze >> 2] = s;
                i[Me >> 2] = se;
                i[xe >> 2] = d;
                re = se;
                Ae = s;
                r = d;
                te = oe;
                s = ae;
                e = 1;
                d = ce;
              }
              ft = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              dt = n[Te >> 1] | 0;
              n[Te >> 1] = ((dt + 1) << 16) >> 16;
              fe = dt & 65535;
              me = (_ + (ft << 2)) | 0;
              de = (ie - (i[me >> 2] | 0)) | 0;
              o[((ie & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (fe << 2)) >> 1] = de >>> 0 > 65535 ? 65535 : de;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (fe << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[me >> 2] = ie;
              n[ft >> 1] = dt;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  re = ((Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    ft = n[(21084 + (re << 1)) >> 1] | 0;
                    d = ft & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (ft << 16) >> 16 != 0
                        ? ((at = d & 31), (ct = d >>> 5), (lt = ((i[(11272 + (at << 2)) >> 2] | 0) + (Pe(at, ct) | 0)) | 0), at >>> 0 <= Ie >>> 0)
                        : 0
                    ) {
                      r = (lt + at) | 0;
                      s = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      te = 0;
                      d = (280811 + lt) | 0;
                      while (1) {
                        if (d >>> 0 > r >>> 0) break;
                        ft = (h + (Ee + te)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                        )
                          break;
                        te = (te + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= s >>> 0) break;
                        if ((o[(h + (Ee + te)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        te = (te + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((te + 10) | 0) >>> 0 <= at >>> 0) | ((te | 0) == 0))
                          ? ((ut = (pe + ct + 1 + (a[(407930 + (at - te)) >> 0] << a[(280786 + at) >> 0])) | 0),
                            (gt = (((te * 540) | 0) + 3840 + (Pe((_e(ut | 0) | 0) ^ 31, -120) | 0)) | 0),
                            gt >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Ze >> 2] = te;
                        i[Le >> 2] = at ^ te;
                        i[Me >> 2] = ut;
                        i[xe >> 2] = gt;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[we >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[ze >> 2] = i[Ze >> 2];
              i[(ze + 4) >> 2] = i[(Ze + 4) >> 2];
              i[(ze + 8) >> 2] = i[(Ze + 8) >> 2];
              i[(ze + 12) >> 2] = i[(Ze + 12) >> 2];
              Ce = (Ce + 1) | 0;
              if (!(((Ce | 0) < 4) & (((k + 5) | 0) >>> 0 < Xe >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[ze >> 2] | 0;
            te = (ie + (k << 1) + je) | 0;
            e = i[be >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < Ke >>> 0 ? ie : Ke) >>> 0) {
                s = (e + 3) | 0;
                ft = i[M >> 2] | 0;
                d = (s - ft) | 0;
                r = i[Ye >> 2] | 0;
                s = (s - r) | 0;
                if ((e | 0) == (ft | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (r | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (s >>> 0 < 7) {
                            e = (266017486 >>> (s << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[be >> 2];
                  k = i[ze >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Be + 16) | 0;
            ft = i[Qe >> 2] | 0;
            d = k ^ ft;
            i[Be >> 2] = ne;
            i[(Be + 4) >> 2] = k | (ft << 24);
            k = (Be + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              me = (e + -12) | 0;
              ft = (((_e(me | 0) | 0) ^ 31) + -1) | 0;
              dt = (me >>> ft) & 1;
              e = ((((ft << 1) + 65534) | dt) + 16) & 65535;
              n[k >> 1] = e;
              k = (ft << 24) | (me - ((dt | 2) << ft));
            }
            i[(Be + 8) >> 2] = k;
            re = (e << 16) >> 16 == 0;
            se = (Be + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  ft = (ne + -2) | 0;
                  s = (((_e(ft | 0) | 0) ^ 31) + -1) | 0;
                  s = ((s << 1) + (ft >>> s) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  s = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) s = 21;
                else s = ne >>> 0 < 22594 ? 22 : 23;
              } else s = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  ft = (d + -6) | 0;
                  e = (((_e(ft | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (ft >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = s & 65535;
            r = (k & 7) | ((d << 3) & 56);
            if (re & ((s & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? r : r | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (r & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[ze >> 2] | 0)) | 0;
            e = e >>> 0 < We >>> 0 ? e : We;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ft = (h + (k & p)) | 0;
              ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              dt = n[Te >> 1] | 0;
              n[Te >> 1] = ((dt + 1) << 16) >> 16;
              me = dt & 65535;
              Be = (_ + (ft << 2)) | 0;
              Ce = (k - (i[Be >> 2] | 0)) | 0;
              o[((k & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (me << 2)) >> 1] = Ce >>> 0 > 65535 ? 65535 : Ce;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (me << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[Be >> 2] = k;
              n[ft >> 1] = dt;
              k = (k + 1) | 0;
            }
            k = (ie + (i[ze >> 2] | 0)) | 0;
            Be = oe;
            e = 0;
          }
          i[j >> 2] = e + Ie;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((Ce - q) >> 4);
          w = et;
          return;
        }
        function Sa(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0;
          et = w;
          w = (w + 32) | 0;
          ze = (et + 16) | 0;
          Ze = et;
          Ke = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          re = i[j >> 2] | 0;
          Xe = (s + r) | 0;
          We = r >>> 0 > 3 ? (Xe + -3) | 0 : s;
          Je = (k + 4) | 0;
          Ye = i[Je >> 2] | 0;
          je = (Ye | 0) < 9 ? 64 : 512;
          te = (je + s) | 0;
          qe = (_ + 524300) | 0;
          i[qe >> 2] = ((Ye | 0) > 6 ? 7 : 8) << (Ye + -4);
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 513)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              Ye = (Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              i[(_ + (Ye << 2)) >> 2] = -858993460;
              n[(_ + 131072 + (Ye << 1)) >> 1] = -13108;
              e = (e + 1) | 0;
            }
            ac((_ + 196608) | 0, 0, 65536) | 0;
            n[(_ + 524288) >> 1] = 0;
            if (r) {
              o[(_ + 524290) >> 0] = 0;
              $e = 8;
            }
          } else {
            e = (_ + 524290) | 0;
            if (!(o[e >> 0] & 1)) $e = 8;
            else {
              ac(_ | 0, -52, 131072) | 0;
              n[(_ + 524288) >> 1] = 0;
              o[e >> 0] = 0;
              ac((_ + 131072) | 0, 0, 131072) | 0;
              $e = 8;
            }
          }
          if (($e | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            Le = (s + -3) | 0;
            He = (h + (Le & p)) | 0;
            He = (Pe(a[He >> 0] | (a[(He + 1) >> 0] << 8) | (a[(He + 2) >> 0] << 16) | (a[(He + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Me = (_ + 524288) | 0;
            xe = n[Me >> 1] | 0;
            n[Me >> 1] = ((xe + 1) << 16) >> 16;
            Ve = xe & 65535;
            Ye = (_ + (He << 2)) | 0;
            Ge = (Le - (i[Ye >> 2] | 0)) | 0;
            o[((Le & 65535) + (_ + 196608)) >> 0] = He;
            n[(_ + 262144 + (Ve << 2)) >> 1] = Ge >>> 0 > 65535 ? 65535 : Ge;
            He = (_ + 131072 + (He << 1)) | 0;
            n[(_ + 262144 + (Ve << 2) + 2) >> 1] = n[He >> 1] | 0;
            i[Ye >> 2] = Le;
            n[He >> 1] = xe;
            He = (s + -2) | 0;
            xe = (h + (He & p)) | 0;
            xe = (Pe(a[xe >> 0] | (a[(xe + 1) >> 0] << 8) | (a[(xe + 2) >> 0] << 16) | (a[(xe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = n[Me >> 1] | 0;
            n[Me >> 1] = ((Ye + 1) << 16) >> 16;
            Le = Ye & 65535;
            Ve = (_ + (xe << 2)) | 0;
            Ge = (He - (i[Ve >> 2] | 0)) | 0;
            o[((He & 65535) + (_ + 196608)) >> 0] = xe;
            n[(_ + 262144 + (Le << 2)) >> 1] = Ge >>> 0 > 65535 ? 65535 : Ge;
            xe = (_ + 131072 + (xe << 1)) | 0;
            n[(_ + 262144 + (Le << 2) + 2) >> 1] = n[xe >> 1] | 0;
            i[Ve >> 2] = He;
            n[xe >> 1] = Ye;
            xe = (s + -1) | 0;
            Ye = (h + (xe & p)) | 0;
            Ye = (Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ve = n[Me >> 1] | 0;
            n[Me >> 1] = ((Ve + 1) << 16) >> 16;
            Me = Ve & 65535;
            He = (_ + (Ye << 2)) | 0;
            Le = (xe - (i[He >> 2] | 0)) | 0;
            o[((xe & 65535) + (_ + 196608)) >> 0] = Ye;
            n[(_ + 262144 + (Me << 2)) >> 1] = Le >>> 0 > 65535 ? 65535 : Le;
            Ye = (_ + 131072 + (Ye << 1)) | 0;
            n[(_ + 262144 + (Me << 2) + 2) >> 1] = n[Ye >> 1] | 0;
            i[He >> 2] = xe;
            n[Ye >> 1] = Ve;
          }
          Qe = (ze + 4) | 0;
          be = (ze + 8) | 0;
          we = (ze + 12) | 0;
          ye = (ze + 4) | 0;
          ke = (ze + 8) | 0;
          Re = (ze + 12) | 0;
          Te = (_ + 524288) | 0;
          De = (_ + 524296) | 0;
          Fe = (_ + 524292) | 0;
          ve = je << 2;
          Se = (Xe + -4) | 0;
          Ne = (Xe + -3) | 0;
          Oe = (Ze + 12) | 0;
          Ue = (Ze + 4) | 0;
          Ge = (Ze + 8) | 0;
          Le = (Ze + 4) | 0;
          Me = (Ze + 8) | 0;
          xe = (Ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Be = q;
          e = re;
          e: while (1) {
            Ce = Be;
            me = (te + ve) | 0;
            t: while (1) {
              Ie = (Xe - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Xe >>> 0) break e;
              pe = k >>> 0 < Ke >>> 0 ? k : Ke;
              i[ze >> 2] = 0;
              i[Qe >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 4240;
              Ee = k & p;
              Ae = i[ze >> 2] | 0;
              he = (h + Ee) | 0;
              ce = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              ie = ce & 255;
              i[ze >> 2] = 0;
              i[ye >> 2] = 0;
              fe = (Ee + Ie) | 0;
              de = (h + fe) | 0;
              ge = he;
              fe = (h + (fe + -4)) | 0;
              s = 4240;
              d = 0;
              ae = 0;
              while (1) {
                if ((ae | 0) == 10) break;
                ne = ((i[(M + (i[(11372 + (ae << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ae << 2)) >> 2] | 0)) | 0;
                r = (k - ne) | 0;
                if (!ae)
                  if ((r >>> 0 >= k >>> 0) | (ne >>> 0 > pe >>> 0)) r = Ae;
                  else $e = 17;
                else if (((r >>> 0 < k >>> 0 ? (o[((r & 65535) + (_ + 196608)) >> 0] | 0) == (ie << 24) >> 24 : 0) ^ 1) | (ne >>> 0 > pe >>> 0)) r = Ae;
                else $e = 17;
                if (($e | 0) == 17) {
                  $e = 0;
                  oe = r & p;
                  r = 0;
                  re = ge;
                  while (1) {
                    se = re;
                    if (se >>> 0 > fe >>> 0) break;
                    le = re;
                    ue = (h + (oe + r)) | 0;
                    if (
                      (a[le >> 0] | (a[(le + 1) >> 0] << 8) | (a[(le + 2) >> 0] << 16) | (a[(le + 3) >> 0] << 24) | 0) !=
                      (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0)
                    )
                      break;
                    r = (r + 4) | 0;
                    re = (se + 4) | 0;
                  }
                  while (1) {
                    if (re >>> 0 >= de >>> 0) break;
                    if ((o[(h + (oe + r)) >> 0] | 0) != (o[re >> 0] | 0)) break;
                    r = (r + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  if (r >>> 0 > 1 ? ((tt = (((r * 540) | 0) + (i[(11500 + (ae << 2)) >> 2] | 0)) | 0), s >>> 0 < tt >>> 0) : 0) {
                    i[ze >> 2] = r;
                    i[ke >> 2] = ne;
                    i[Re >> 2] = tt;
                    s = tt;
                    d = 1;
                  } else r = Ae;
                }
                Ae = r;
                ae = (ae + 1) | 0;
              }
              oe = 0;
              re = (k - (i[(_ + (ce << 2)) >> 2] | 0)) | 0;
              se = i[qe >> 2] | 0;
              r = l[(_ + 131072 + (ce << 1)) >> 1] | 0;
              r: while (1) {
                ue = (Ee + Ae) | 0;
                le = ue >>> 0 > p >>> 0;
                ue = (h + ue) | 0;
                ne = oe;
                ie = re;
                ae = se;
                ce = r;
                while (1) {
                  oe = ae;
                  ae = (ae + -1) | 0;
                  if (!oe) break r;
                  ne = (ne + ie) | 0;
                  if (ne >>> 0 > pe >>> 0) break r;
                  oe = (k - ne) & p;
                  ie = ce;
                  ce = l[(_ + 262144 + (ce << 2) + 2) >> 1] | 0;
                  ie = l[(_ + 262144 + (ie << 2)) >> 1] | 0;
                  if (le) continue;
                  r = (oe + Ae) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ue >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    se = 0;
                    r = ge;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > fe >>> 0) break;
                    ft = r;
                    dt = (h + (oe + se)) | 0;
                    if (
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0) !=
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    se = (se + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= de >>> 0) break;
                    if ((o[(h + (oe + se)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    se = (se + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (se >>> 0 <= 3) continue;
                  r = (((se * 540) | 0) + 3840 + (Pe((_e(ne | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (s >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = se;
                i[ke >> 2] = ne;
                i[Re >> 2] = r;
                oe = ne;
                Ae = se;
                s = r;
                re = ie;
                se = ae;
                d = 1;
                r = ce;
              }
              ft = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              dt = n[Te >> 1] | 0;
              n[Te >> 1] = ((dt + 1) << 16) >> 16;
              de = dt & 65535;
              fe = (_ + (ft << 2)) | 0;
              ge = (k - (i[fe >> 2] | 0)) | 0;
              o[((k & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (de << 2)) >> 1] = ge >>> 0 > 65535 ? 65535 : ge;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (de << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[fe >> 2] = k;
              n[ft >> 1] = dt;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    ft = n[(21084 + (oe << 1)) >> 1] | 0;
                    r = ft & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (ft << 16) >> 16 != 0
                        ? ((rt = r & 31), (st = r >>> 5), (ot = ((i[(11272 + (rt << 2)) >> 2] | 0) + (Pe(rt, st) | 0)) | 0), rt >>> 0 <= Ie >>> 0)
                        : 0
                    ) {
                      s = (ot + rt) | 0;
                      se = (280811 + s) | 0;
                      s = (280811 + (s + -4)) | 0;
                      re = 0;
                      r = (280811 + ot) | 0;
                      while (1) {
                        if (r >>> 0 > s >>> 0) break;
                        ft = (h + (Ee + re)) | 0;
                        if (
                          (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                          (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                        )
                          break;
                        re = (re + 4) | 0;
                        r = (r + 4) | 0;
                      }
                      while (1) {
                        if (r >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ee + re)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                        re = (re + 1) | 0;
                        r = (r + 1) | 0;
                      }
                      if (
                        !((((re + 10) | 0) >>> 0 <= rt >>> 0) | ((re | 0) == 0))
                          ? ((nt = (pe + st + 1 + (a[(407930 + (rt - re)) >> 0] << a[(280786 + rt) >> 0])) | 0),
                            (it = (((re * 540) | 0) + 3840 + (Pe((_e(nt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            it >>> 0 >= (i[Re >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = re;
                        i[ye >> 2] = rt ^ re;
                        i[ke >> 2] = nt;
                        i[Re >> 2] = it;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                Ce = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              r = (k + 1) | 0;
              if (r >>> 0 <= te >>> 0) {
                k = r;
                continue;
              }
              if (r >>> 0 > me >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = r;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ft = (h + (k & p)) | 0;
                  ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  dt = n[Te >> 1] | 0;
                  n[Te >> 1] = ((dt + 1) << 16) >> 16;
                  Ee = dt & 65535;
                  Ie = (_ + (ft << 2)) | 0;
                  pe = (k - (i[Ie >> 2] | 0)) | 0;
                  o[((k & 65535) + (_ + 196608)) >> 0] = ft;
                  n[(_ + 262144 + (Ee << 2)) >> 1] = pe >>> 0 > 65535 ? 65535 : pe;
                  ft = (_ + 131072 + (ft << 1)) | 0;
                  n[(_ + 262144 + (Ee << 2) + 2) >> 1] = n[ft >> 1] | 0;
                  i[Ie >> 2] = k;
                  n[ft >> 1] = dt;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = r;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ft = (h + (k & p)) | 0;
                  ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  dt = n[Te >> 1] | 0;
                  n[Te >> 1] = ((dt + 1) << 16) >> 16;
                  Ee = dt & 65535;
                  Ie = (_ + (ft << 2)) | 0;
                  pe = (k - (i[Ie >> 2] | 0)) | 0;
                  o[((k & 65535) + (_ + 196608)) >> 0] = ft;
                  n[(_ + 262144 + (Ee << 2)) >> 1] = pe >>> 0 > 65535 ? 65535 : pe;
                  ft = (_ + 131072 + (ft << 1)) | 0;
                  n[(_ + 262144 + (Ee << 2) + 2) >> 1] = n[ft >> 1] | 0;
                  i[Ie >> 2] = k;
                  n[ft >> 1] = dt;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ie = (Ie + -1) | 0;
              if ((i[Je >> 2] | 0) < 5) {
                e = ((i[ze >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ie >>> 0 ? e : Ie;
              } else e = 0;
              i[Ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              pe = ie >>> 0 < Ke >>> 0 ? ie : Ke;
              Ee = ie & p;
              Ae = i[Ze >> 2] | 0;
              he = (h + Ee) | 0;
              ce = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              oe = ce & 255;
              i[Ze >> 2] = 0;
              i[Le >> 2] = 0;
              fe = (Ee + Ie) | 0;
              de = (h + fe) | 0;
              ge = he;
              fe = (h + (fe + -4)) | 0;
              r = 4240;
              e = 0;
              ae = 0;
              while (1) {
                if ((ae | 0) == 10) break;
                se = ((i[(M + (i[(11372 + (ae << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ae << 2)) >> 2] | 0)) | 0;
                d = (ie - se) | 0;
                if (!ae)
                  if ((d >>> 0 >= ie >>> 0) | (se >>> 0 > pe >>> 0)) d = Ae;
                  else $e = 71;
                else if (((d >>> 0 < ie >>> 0 ? (o[((d & 65535) + (_ + 196608)) >> 0] | 0) == (oe << 24) >> 24 : 0) ^ 1) | (se >>> 0 > pe >>> 0)) d = Ae;
                else $e = 71;
                if (($e | 0) == 71) {
                  $e = 0;
                  re = d & p;
                  d = 0;
                  te = ge;
                  while (1) {
                    s = te;
                    if (s >>> 0 > fe >>> 0) break;
                    dt = te;
                    ft = (h + (re + d)) | 0;
                    if (
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0) !=
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                    )
                      break;
                    d = (d + 4) | 0;
                    te = (s + 4) | 0;
                  }
                  while (1) {
                    if (te >>> 0 >= de >>> 0) break;
                    if ((o[(h + (re + d)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                    d = (d + 1) | 0;
                    te = (te + 1) | 0;
                  }
                  if (d >>> 0 > 1 ? ((At = (((d * 540) | 0) + (i[(11500 + (ae << 2)) >> 2] | 0)) | 0), r >>> 0 < At >>> 0) : 0) {
                    i[Ze >> 2] = d;
                    i[Me >> 2] = se;
                    i[xe >> 2] = At;
                    r = At;
                    e = 1;
                  } else d = Ae;
                }
                Ae = d;
                ae = (ae + 1) | 0;
              }
              re = 0;
              te = (ie - (i[(_ + (ce << 2)) >> 2] | 0)) | 0;
              s = i[qe >> 2] | 0;
              d = l[(_ + 131072 + (ce << 1)) >> 1] | 0;
              t: while (1) {
                ue = (Ee + Ae) | 0;
                le = ue >>> 0 > p >>> 0;
                ue = (h + ue) | 0;
                se = re;
                oe = te;
                ae = s;
                ce = d;
                while (1) {
                  ft = ae;
                  ae = (ae + -1) | 0;
                  if (!ft) break t;
                  se = (se + oe) | 0;
                  if (se >>> 0 > pe >>> 0) break t;
                  re = (ie - se) & p;
                  oe = ce;
                  ce = l[(_ + 262144 + (ce << 2) + 2) >> 1] | 0;
                  oe = l[(_ + 262144 + (oe << 2)) >> 1] | 0;
                  if (le) continue;
                  d = (re + Ae) | 0;
                  if (d >>> 0 > p >>> 0) continue;
                  if ((o[ue >> 0] | 0) == (o[(h + d) >> 0] | 0)) {
                    s = 0;
                    d = ge;
                  } else continue;
                  while (1) {
                    te = d;
                    if (te >>> 0 > fe >>> 0) break;
                    dt = d;
                    ft = (h + (re + s)) | 0;
                    if (
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0) !=
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    d = (te + 4) | 0;
                  }
                  while (1) {
                    if (d >>> 0 >= de >>> 0) break;
                    if ((o[(h + (re + s)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    d = (d + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  d = (((s * 540) | 0) + 3840 + (Pe((_e(se | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (r >>> 0 < d >>> 0) break;
                }
                i[Ze >> 2] = s;
                i[Me >> 2] = se;
                i[xe >> 2] = d;
                re = se;
                Ae = s;
                r = d;
                te = oe;
                s = ae;
                e = 1;
                d = ce;
              }
              ft = (Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              dt = n[Te >> 1] | 0;
              n[Te >> 1] = ((dt + 1) << 16) >> 16;
              fe = dt & 65535;
              me = (_ + (ft << 2)) | 0;
              de = (ie - (i[me >> 2] | 0)) | 0;
              o[((ie & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (fe << 2)) >> 1] = de >>> 0 > 65535 ? 65535 : de;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (fe << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[me >> 2] = ie;
              n[ft >> 1] = dt;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  re = ((Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    ft = n[(21084 + (re << 1)) >> 1] | 0;
                    d = ft & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (ft << 16) >> 16 != 0
                        ? ((at = d & 31), (ct = d >>> 5), (lt = ((i[(11272 + (at << 2)) >> 2] | 0) + (Pe(at, ct) | 0)) | 0), at >>> 0 <= Ie >>> 0)
                        : 0
                    ) {
                      r = (lt + at) | 0;
                      s = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      te = 0;
                      d = (280811 + lt) | 0;
                      while (1) {
                        if (d >>> 0 > r >>> 0) break;
                        ft = (h + (Ee + te)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                        )
                          break;
                        te = (te + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= s >>> 0) break;
                        if ((o[(h + (Ee + te)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        te = (te + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((te + 10) | 0) >>> 0 <= at >>> 0) | ((te | 0) == 0))
                          ? ((ut = (pe + ct + 1 + (a[(407930 + (at - te)) >> 0] << a[(280786 + at) >> 0])) | 0),
                            (gt = (((te * 540) | 0) + 3840 + (Pe((_e(ut | 0) | 0) ^ 31, -120) | 0)) | 0),
                            gt >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Ze >> 2] = te;
                        i[Le >> 2] = at ^ te;
                        i[Me >> 2] = ut;
                        i[xe >> 2] = gt;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[we >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[ze >> 2] = i[Ze >> 2];
              i[(ze + 4) >> 2] = i[(Ze + 4) >> 2];
              i[(ze + 8) >> 2] = i[(Ze + 8) >> 2];
              i[(ze + 12) >> 2] = i[(Ze + 12) >> 2];
              Ce = (Ce + 1) | 0;
              if (!(((Ce | 0) < 4) & (((k + 5) | 0) >>> 0 < Xe >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[ze >> 2] | 0;
            te = (ie + (k << 1) + je) | 0;
            e = i[be >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < Ke >>> 0 ? ie : Ke) >>> 0) {
                s = (e + 3) | 0;
                ft = i[M >> 2] | 0;
                d = (s - ft) | 0;
                r = i[Ye >> 2] | 0;
                s = (s - r) | 0;
                if ((e | 0) == (ft | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (r | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (s >>> 0 < 7) {
                            e = (266017486 >>> (s << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[be >> 2];
                  k = i[ze >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Be + 16) | 0;
            ft = i[Qe >> 2] | 0;
            d = k ^ ft;
            i[Be >> 2] = ne;
            i[(Be + 4) >> 2] = k | (ft << 24);
            k = (Be + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              me = (e + -12) | 0;
              ft = (((_e(me | 0) | 0) ^ 31) + -1) | 0;
              dt = (me >>> ft) & 1;
              e = ((((ft << 1) + 65534) | dt) + 16) & 65535;
              n[k >> 1] = e;
              k = (ft << 24) | (me - ((dt | 2) << ft));
            }
            i[(Be + 8) >> 2] = k;
            re = (e << 16) >> 16 == 0;
            se = (Be + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  ft = (ne + -2) | 0;
                  s = (((_e(ft | 0) | 0) ^ 31) + -1) | 0;
                  s = ((s << 1) + (ft >>> s) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  s = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) s = 21;
                else s = ne >>> 0 < 22594 ? 22 : 23;
              } else s = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  ft = (d + -6) | 0;
                  e = (((_e(ft | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (ft >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = s & 65535;
            r = (k & 7) | ((d << 3) & 56);
            if (re & ((s & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? r : r | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (r & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[ze >> 2] | 0)) | 0;
            e = e >>> 0 < We >>> 0 ? e : We;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ft = (h + (k & p)) | 0;
              ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              dt = n[Te >> 1] | 0;
              n[Te >> 1] = ((dt + 1) << 16) >> 16;
              me = dt & 65535;
              Be = (_ + (ft << 2)) | 0;
              Ce = (k - (i[Be >> 2] | 0)) | 0;
              o[((k & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (me << 2)) >> 1] = Ce >>> 0 > 65535 ? 65535 : Ce;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (me << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[Be >> 2] = k;
              n[ft >> 1] = dt;
              k = (k + 1) | 0;
            }
            k = (ie + (i[ze >> 2] | 0)) | 0;
            Be = oe;
            e = 0;
          }
          i[j >> 2] = e + Ie;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((Ce - q) >> 4);
          w = et;
          return;
        }
        function Ta(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0;
          $e = w;
          w = (w + 32) | 0;
          ze = ($e + 16) | 0;
          Ze = $e;
          Ke = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          re = i[j >> 2] | 0;
          Xe = (s + r) | 0;
          We = r >>> 0 > 3 ? (Xe + -3) | 0 : s;
          Je = (k + 4) | 0;
          Ye = i[Je >> 2] | 0;
          je = (Ye | 0) < 9 ? 64 : 512;
          te = (je + s) | 0;
          qe = (_ + 1311756) | 0;
          i[qe >> 2] = ((Ye | 0) > 6 ? 7 : 8) << (Ye + -4);
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 513)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              Ye = (Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              i[(_ + (Ye << 2)) >> 2] = -858993460;
              n[(_ + 131072 + (Ye << 1)) >> 1] = -13108;
              e = (e + 1) | 0;
            }
            ac((_ + 196608) | 0, 0, 65536) | 0;
            ac((_ + 1310720) | 0, 0, 1024) | 0;
            if (r) {
              o[(_ + 1311744) >> 0] = 0;
              gt = 8;
            }
          } else if (!(o[(_ + 1311744) >> 0] & 1)) gt = 8;
          else {
            ac(_ | 0, -52, 131072) | 0;
            ac((_ + 131072) | 0, 0, 131072) | 0;
            ac((_ + 1310720) | 0, 0, 1025) | 0;
            gt = 8;
          }
          if ((gt | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            Me = (s + -3) | 0;
            He = (h + (Me & p)) | 0;
            He = (Pe(a[He >> 0] | (a[(He + 1) >> 0] << 8) | (a[(He + 2) >> 0] << 16) | (a[(He + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = He & 511;
            Ve = (_ + 1310720 + (Ye << 1)) | 0;
            xe = n[Ve >> 1] | 0;
            n[Ve >> 1] = ((xe + 1) << 16) >> 16;
            xe = xe & 511;
            Ve = (_ + (He << 2)) | 0;
            Le = (Me - (i[Ve >> 2] | 0)) | 0;
            o[((Me & 65535) + (_ + 196608)) >> 0] = He;
            n[(_ + 262144 + (Ye << 11) + (xe << 2)) >> 1] = Le >>> 0 > 65535 ? 65535 : Le;
            He = (_ + 131072 + (He << 1)) | 0;
            n[(_ + 262144 + (Ye << 11) + (xe << 2) + 2) >> 1] = n[He >> 1] | 0;
            i[Ve >> 2] = Me;
            n[He >> 1] = xe;
            He = (s + -2) | 0;
            xe = (h + (He & p)) | 0;
            xe = (Pe(a[xe >> 0] | (a[(xe + 1) >> 0] << 8) | (a[(xe + 2) >> 0] << 16) | (a[(xe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ve = xe & 511;
            Me = (_ + 1310720 + (Ve << 1)) | 0;
            Ye = n[Me >> 1] | 0;
            n[Me >> 1] = ((Ye + 1) << 16) >> 16;
            Ye = Ye & 511;
            Me = (_ + (xe << 2)) | 0;
            Le = (He - (i[Me >> 2] | 0)) | 0;
            o[((He & 65535) + (_ + 196608)) >> 0] = xe;
            n[(_ + 262144 + (Ve << 11) + (Ye << 2)) >> 1] = Le >>> 0 > 65535 ? 65535 : Le;
            xe = (_ + 131072 + (xe << 1)) | 0;
            n[(_ + 262144 + (Ve << 11) + (Ye << 2) + 2) >> 1] = n[xe >> 1] | 0;
            i[Me >> 2] = He;
            n[xe >> 1] = Ye;
            xe = (s + -1) | 0;
            Ye = (h + (xe & p)) | 0;
            Ye = (Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Me = Ye & 511;
            He = (_ + 1310720 + (Me << 1)) | 0;
            Ve = n[He >> 1] | 0;
            n[He >> 1] = ((Ve + 1) << 16) >> 16;
            Ve = Ve & 511;
            He = (_ + (Ye << 2)) | 0;
            Le = (xe - (i[He >> 2] | 0)) | 0;
            o[((xe & 65535) + (_ + 196608)) >> 0] = Ye;
            n[(_ + 262144 + (Me << 11) + (Ve << 2)) >> 1] = Le >>> 0 > 65535 ? 65535 : Le;
            Ye = (_ + 131072 + (Ye << 1)) | 0;
            n[(_ + 262144 + (Me << 11) + (Ve << 2) + 2) >> 1] = n[Ye >> 1] | 0;
            i[He >> 2] = xe;
            n[Ye >> 1] = Ve;
          }
          be = (ze + 4) | 0;
          we = (ze + 8) | 0;
          ye = (ze + 12) | 0;
          ke = (ze + 4) | 0;
          Re = (ze + 8) | 0;
          Te = (ze + 12) | 0;
          De = (_ + 1311752) | 0;
          Fe = (_ + 1311748) | 0;
          ve = je << 2;
          Se = (Xe + -4) | 0;
          Ne = (Xe + -3) | 0;
          Oe = (Ze + 12) | 0;
          Ue = (Ze + 4) | 0;
          Ge = (Ze + 8) | 0;
          Le = (Ze + 4) | 0;
          Me = (Ze + 8) | 0;
          xe = (Ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Qe = q;
          e = re;
          e: while (1) {
            me = Qe;
            Be = (te + ve) | 0;
            t: while (1) {
              Ce = (Xe - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Xe >>> 0) break e;
              Ee = k >>> 0 < Ke >>> 0 ? k : Ke;
              i[ze >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 0;
              i[ye >> 2] = 4240;
              Ie = k & p;
              ae = i[ze >> 2] | 0;
              pe = (h + Ie) | 0;
              ce = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              ie = ce & 255;
              i[ze >> 2] = 0;
              i[ke >> 2] = 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              s = 4240;
              d = 0;
              Ae = 0;
              while (1) {
                if ((Ae | 0) == 16) break;
                ne = ((i[(M + (i[(11372 + (Ae << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (Ae << 2)) >> 2] | 0)) | 0;
                r = (k - ne) | 0;
                if (!Ae)
                  if ((r >>> 0 >= k >>> 0) | (ne >>> 0 > Ee >>> 0)) r = ae;
                  else gt = 17;
                else if (((r >>> 0 < k >>> 0 ? (o[((r & 65535) + (_ + 196608)) >> 0] | 0) == (ie << 24) >> 24 : 0) ^ 1) | (ne >>> 0 > Ee >>> 0)) r = ae;
                else gt = 17;
                if ((gt | 0) == 17) {
                  gt = 0;
                  oe = r & p;
                  r = 0;
                  re = de;
                  while (1) {
                    se = re;
                    if (se >>> 0 > he >>> 0) break;
                    ue = re;
                    ge = (h + (oe + r)) | 0;
                    if (
                      (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0) !=
                      (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0)
                    )
                      break;
                    r = (r + 4) | 0;
                    re = (se + 4) | 0;
                  }
                  while (1) {
                    if (re >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (oe + r)) >> 0] | 0) != (o[re >> 0] | 0)) break;
                    r = (r + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  if (r >>> 0 > 1 ? ((et = (((r * 540) | 0) + (i[(11500 + (Ae << 2)) >> 2] | 0)) | 0), s >>> 0 < et >>> 0) : 0) {
                    i[ze >> 2] = r;
                    i[Re >> 2] = ne;
                    i[Te >> 2] = et;
                    s = et;
                    d = 1;
                  } else r = ae;
                }
                ae = r;
                Ae = (Ae + 1) | 0;
              }
              ge = ce & 511;
              oe = 0;
              re = (k - (i[(_ + (ce << 2)) >> 2] | 0)) | 0;
              se = i[qe >> 2] | 0;
              r = l[(_ + 131072 + (ce << 1)) >> 1] | 0;
              r: while (1) {
                ue = (Ie + ae) | 0;
                le = ue >>> 0 > p >>> 0;
                ue = (h + ue) | 0;
                ne = oe;
                ie = re;
                Ae = se;
                ce = r;
                while (1) {
                  oe = Ae;
                  Ae = (Ae + -1) | 0;
                  if (!oe) break r;
                  ne = (ne + ie) | 0;
                  if (ne >>> 0 > Ee >>> 0) break r;
                  oe = (k - ne) & p;
                  ie = ce;
                  ce = l[(_ + 262144 + (ge << 11) + (ce << 2) + 2) >> 1] | 0;
                  ie = l[(_ + 262144 + (ge << 11) + (ie << 2)) >> 1] | 0;
                  if (le) continue;
                  r = (oe + ae) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ue >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    se = 0;
                    r = de;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > he >>> 0) break;
                    ft = r;
                    dt = (h + (oe + se)) | 0;
                    if (
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0) !=
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    se = (se + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (oe + se)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    se = (se + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (se >>> 0 <= 3) continue;
                  r = (((se * 540) | 0) + 3840 + (Pe((_e(ne | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (s >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = se;
                i[Re >> 2] = ne;
                i[Te >> 2] = r;
                oe = ne;
                ae = se;
                s = r;
                re = ie;
                se = Ae;
                d = 1;
                r = ce;
              }
              ft = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              fe = ft & 511;
              he = (_ + 1310720 + (fe << 1)) | 0;
              dt = n[he >> 1] | 0;
              n[he >> 1] = ((dt + 1) << 16) >> 16;
              dt = dt & 511;
              he = (_ + (ft << 2)) | 0;
              de = (k - (i[he >> 2] | 0)) | 0;
              o[((k & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (fe << 11) + (dt << 2)) >> 1] = de >>> 0 > 65535 ? 65535 : de;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (fe << 11) + (dt << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[he >> 2] = k;
              n[ft >> 1] = dt;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    ft = n[(21084 + (oe << 1)) >> 1] | 0;
                    r = ft & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (ft << 16) >> 16 != 0
                        ? ((tt = r & 31), (rt = r >>> 5), (st = ((i[(11272 + (tt << 2)) >> 2] | 0) + (Pe(tt, rt) | 0)) | 0), tt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      s = (st + tt) | 0;
                      se = (280811 + s) | 0;
                      s = (280811 + (s + -4)) | 0;
                      re = 0;
                      r = (280811 + st) | 0;
                      while (1) {
                        if (r >>> 0 > s >>> 0) break;
                        ft = (h + (Ie + re)) | 0;
                        if (
                          (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                          (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                        )
                          break;
                        re = (re + 4) | 0;
                        r = (r + 4) | 0;
                      }
                      while (1) {
                        if (r >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ie + re)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                        re = (re + 1) | 0;
                        r = (r + 1) | 0;
                      }
                      if (
                        !((((re + 10) | 0) >>> 0 <= tt >>> 0) | ((re | 0) == 0))
                          ? ((ot = (Ee + rt + 1 + (a[(407930 + (tt - re)) >> 0] << a[(280786 + tt) >> 0])) | 0),
                            (nt = (((re * 540) | 0) + 3840 + (Pe((_e(ot | 0) | 0) ^ 31, -120) | 0)) | 0),
                            nt >>> 0 >= (i[Te >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = re;
                        i[ke >> 2] = tt ^ re;
                        i[Re >> 2] = ot;
                        i[Te >> 2] = nt;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                me = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              r = (k + 1) | 0;
              if (r >>> 0 <= te >>> 0) {
                k = r;
                continue;
              }
              if (r >>> 0 > Be >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = r;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ft = (h + (k & p)) | 0;
                  ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  Ie = ft & 511;
                  Ce = (_ + 1310720 + (Ie << 1)) | 0;
                  dt = n[Ce >> 1] | 0;
                  n[Ce >> 1] = ((dt + 1) << 16) >> 16;
                  dt = dt & 511;
                  Ce = (_ + (ft << 2)) | 0;
                  Ee = (k - (i[Ce >> 2] | 0)) | 0;
                  o[((k & 65535) + (_ + 196608)) >> 0] = ft;
                  n[(_ + 262144 + (Ie << 11) + (dt << 2)) >> 1] = Ee >>> 0 > 65535 ? 65535 : Ee;
                  ft = (_ + 131072 + (ft << 1)) | 0;
                  n[(_ + 262144 + (Ie << 11) + (dt << 2) + 2) >> 1] = n[ft >> 1] | 0;
                  i[Ce >> 2] = k;
                  n[ft >> 1] = dt;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = r;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ft = (h + (k & p)) | 0;
                  ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  Ie = ft & 511;
                  Ce = (_ + 1310720 + (Ie << 1)) | 0;
                  dt = n[Ce >> 1] | 0;
                  n[Ce >> 1] = ((dt + 1) << 16) >> 16;
                  dt = dt & 511;
                  Ce = (_ + (ft << 2)) | 0;
                  Ee = (k - (i[Ce >> 2] | 0)) | 0;
                  o[((k & 65535) + (_ + 196608)) >> 0] = ft;
                  n[(_ + 262144 + (Ie << 11) + (dt << 2)) >> 1] = Ee >>> 0 > 65535 ? 65535 : Ee;
                  ft = (_ + 131072 + (ft << 1)) | 0;
                  n[(_ + 262144 + (Ie << 11) + (dt << 2) + 2) >> 1] = n[ft >> 1] | 0;
                  i[Ce >> 2] = k;
                  n[ft >> 1] = dt;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ce = (Ce + -1) | 0;
              if ((i[Je >> 2] | 0) < 5) {
                e = ((i[ze >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ce >>> 0 ? e : Ce;
              } else e = 0;
              i[Ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              Ee = ie >>> 0 < Ke >>> 0 ? ie : Ke;
              Ie = ie & p;
              ae = i[Ze >> 2] | 0;
              pe = (h + Ie) | 0;
              ce = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              oe = ce & 255;
              i[Ze >> 2] = 0;
              i[Le >> 2] = 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              r = 4240;
              e = 0;
              Ae = 0;
              while (1) {
                if ((Ae | 0) == 16) break;
                se = ((i[(M + (i[(11372 + (Ae << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (Ae << 2)) >> 2] | 0)) | 0;
                d = (ie - se) | 0;
                if (!Ae)
                  if ((d >>> 0 >= ie >>> 0) | (se >>> 0 > Ee >>> 0)) d = ae;
                  else gt = 71;
                else if (((d >>> 0 < ie >>> 0 ? (o[((d & 65535) + (_ + 196608)) >> 0] | 0) == (oe << 24) >> 24 : 0) ^ 1) | (se >>> 0 > Ee >>> 0)) d = ae;
                else gt = 71;
                if ((gt | 0) == 71) {
                  gt = 0;
                  re = d & p;
                  d = 0;
                  te = de;
                  while (1) {
                    s = te;
                    if (s >>> 0 > he >>> 0) break;
                    dt = te;
                    ft = (h + (re + d)) | 0;
                    if (
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0) !=
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                    )
                      break;
                    d = (d + 4) | 0;
                    te = (s + 4) | 0;
                  }
                  while (1) {
                    if (te >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (re + d)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                    d = (d + 1) | 0;
                    te = (te + 1) | 0;
                  }
                  if (d >>> 0 > 1 ? ((it = (((d * 540) | 0) + (i[(11500 + (Ae << 2)) >> 2] | 0)) | 0), r >>> 0 < it >>> 0) : 0) {
                    i[Ze >> 2] = d;
                    i[Me >> 2] = se;
                    i[xe >> 2] = it;
                    r = it;
                    e = 1;
                  } else d = ae;
                }
                ae = d;
                Ae = (Ae + 1) | 0;
              }
              ge = ce & 511;
              re = 0;
              te = (ie - (i[(_ + (ce << 2)) >> 2] | 0)) | 0;
              s = i[qe >> 2] | 0;
              d = l[(_ + 131072 + (ce << 1)) >> 1] | 0;
              t: while (1) {
                ue = (Ie + ae) | 0;
                le = ue >>> 0 > p >>> 0;
                ue = (h + ue) | 0;
                se = re;
                oe = te;
                Ae = s;
                ce = d;
                while (1) {
                  ft = Ae;
                  Ae = (Ae + -1) | 0;
                  if (!ft) break t;
                  se = (se + oe) | 0;
                  if (se >>> 0 > Ee >>> 0) break t;
                  re = (ie - se) & p;
                  oe = ce;
                  ce = l[(_ + 262144 + (ge << 11) + (ce << 2) + 2) >> 1] | 0;
                  oe = l[(_ + 262144 + (ge << 11) + (oe << 2)) >> 1] | 0;
                  if (le) continue;
                  d = (re + ae) | 0;
                  if (d >>> 0 > p >>> 0) continue;
                  if ((o[ue >> 0] | 0) == (o[(h + d) >> 0] | 0)) {
                    s = 0;
                    d = de;
                  } else continue;
                  while (1) {
                    te = d;
                    if (te >>> 0 > he >>> 0) break;
                    dt = d;
                    ft = (h + (re + s)) | 0;
                    if (
                      (a[dt >> 0] | (a[(dt + 1) >> 0] << 8) | (a[(dt + 2) >> 0] << 16) | (a[(dt + 3) >> 0] << 24) | 0) !=
                      (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    d = (te + 4) | 0;
                  }
                  while (1) {
                    if (d >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (re + s)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    d = (d + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  d = (((s * 540) | 0) + 3840 + (Pe((_e(se | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (r >>> 0 < d >>> 0) break;
                }
                i[Ze >> 2] = s;
                i[Me >> 2] = se;
                i[xe >> 2] = d;
                re = se;
                ae = s;
                r = d;
                te = oe;
                s = Ae;
                e = 1;
                d = ce;
              }
              ft = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              he = ft & 511;
              Be = (_ + 1310720 + (he << 1)) | 0;
              dt = n[Be >> 1] | 0;
              n[Be >> 1] = ((dt + 1) << 16) >> 16;
              dt = dt & 511;
              Be = (_ + (ft << 2)) | 0;
              fe = (ie - (i[Be >> 2] | 0)) | 0;
              o[((ie & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (he << 11) + (dt << 2)) >> 1] = fe >>> 0 > 65535 ? 65535 : fe;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (he << 11) + (dt << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[Be >> 2] = ie;
              n[ft >> 1] = dt;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  re = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    ft = n[(21084 + (re << 1)) >> 1] | 0;
                    d = ft & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (ft << 16) >> 16 != 0
                        ? ((At = d & 31), (at = d >>> 5), (ct = ((i[(11272 + (At << 2)) >> 2] | 0) + (Pe(At, at) | 0)) | 0), At >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      r = (ct + At) | 0;
                      s = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      te = 0;
                      d = (280811 + ct) | 0;
                      while (1) {
                        if (d >>> 0 > r >>> 0) break;
                        ft = (h + (Ie + te)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24) | 0)
                        )
                          break;
                        te = (te + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= s >>> 0) break;
                        if ((o[(h + (Ie + te)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        te = (te + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((te + 10) | 0) >>> 0 <= At >>> 0) | ((te | 0) == 0))
                          ? ((lt = (Ee + at + 1 + (a[(407930 + (At - te)) >> 0] << a[(280786 + At) >> 0])) | 0),
                            (ut = (((te * 540) | 0) + 3840 + (Pe((_e(lt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            ut >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Ze >> 2] = te;
                        i[Le >> 2] = At ^ te;
                        i[Me >> 2] = lt;
                        i[xe >> 2] = ut;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[ye >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[ze >> 2] = i[Ze >> 2];
              i[(ze + 4) >> 2] = i[(Ze + 4) >> 2];
              i[(ze + 8) >> 2] = i[(Ze + 8) >> 2];
              i[(ze + 12) >> 2] = i[(Ze + 12) >> 2];
              me = (me + 1) | 0;
              if (!(((me | 0) < 4) & (((k + 5) | 0) >>> 0 < Xe >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[ze >> 2] | 0;
            te = (ie + (k << 1) + je) | 0;
            e = i[we >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < Ke >>> 0 ? ie : Ke) >>> 0) {
                s = (e + 3) | 0;
                ft = i[M >> 2] | 0;
                d = (s - ft) | 0;
                r = i[Ye >> 2] | 0;
                s = (s - r) | 0;
                if ((e | 0) == (ft | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (r | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (s >>> 0 < 7) {
                            e = (266017486 >>> (s << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[we >> 2];
                  k = i[ze >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Qe + 16) | 0;
            ft = i[be >> 2] | 0;
            d = k ^ ft;
            i[Qe >> 2] = ne;
            i[(Qe + 4) >> 2] = k | (ft << 24);
            k = (Qe + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              Be = (e + -12) | 0;
              ft = (((_e(Be | 0) | 0) ^ 31) + -1) | 0;
              dt = (Be >>> ft) & 1;
              e = ((((ft << 1) + 65534) | dt) + 16) & 65535;
              n[k >> 1] = e;
              k = (ft << 24) | (Be - ((dt | 2) << ft));
            }
            i[(Qe + 8) >> 2] = k;
            re = (e << 16) >> 16 == 0;
            se = (Qe + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  ft = (ne + -2) | 0;
                  s = (((_e(ft | 0) | 0) ^ 31) + -1) | 0;
                  s = ((s << 1) + (ft >>> s) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  s = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) s = 21;
                else s = ne >>> 0 < 22594 ? 22 : 23;
              } else s = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  ft = (d + -6) | 0;
                  e = (((_e(ft | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (ft >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = s & 65535;
            r = (k & 7) | ((d << 3) & 56);
            if (re & ((s & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? r : r | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (r & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[ze >> 2] | 0)) | 0;
            e = e >>> 0 < We >>> 0 ? e : We;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ft = (h + (k & p)) | 0;
              ft = (Pe(a[ft >> 0] | (a[(ft + 1) >> 0] << 8) | (a[(ft + 2) >> 0] << 16) | (a[(ft + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              Be = ft & 511;
              Qe = (_ + 1310720 + (Be << 1)) | 0;
              dt = n[Qe >> 1] | 0;
              n[Qe >> 1] = ((dt + 1) << 16) >> 16;
              dt = dt & 511;
              Qe = (_ + (ft << 2)) | 0;
              me = (k - (i[Qe >> 2] | 0)) | 0;
              o[((k & 65535) + (_ + 196608)) >> 0] = ft;
              n[(_ + 262144 + (Be << 11) + (dt << 2)) >> 1] = me >>> 0 > 65535 ? 65535 : me;
              ft = (_ + 131072 + (ft << 1)) | 0;
              n[(_ + 262144 + (Be << 11) + (dt << 2) + 2) >> 1] = n[ft >> 1] | 0;
              i[Qe >> 2] = k;
              n[ft >> 1] = dt;
              k = (k + 1) | 0;
            }
            k = (ie + (i[ze >> 2] | 0)) | 0;
            Qe = oe;
            e = 0;
          }
          i[j >> 2] = e + Ce;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((me - q) >> 4);
          w = $e;
          return;
        }
        function Ua(e, r, s, n, a, l) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          a = a | 0;
          l = l | 0;
          var d = 0,
            h = 0;
          h = (r + 524304) | 0;
          if (!(o[h >> 0] & 1)) return;
          s = 1 << i[(s + 8) >> 2];
          i[r >> 2] = s + -1;
          s = (1 - s) | 0;
          i[(r + 524296) >> 2] = s;
          d = 0;
          while (1) {
            if ((d | 0) == 131072) break;
            i[(r + 4 + (d << 2)) >> 2] = s;
            d = (d + 1) | 0;
          }
          if ((((n | 0) == 0) ^ 1) | (l ^ 1)) a = ((i[r >> 2] | 0) + 1) | 0;
          l = (r + 524300) | 0;
          do {
            if (a >>> 0 > (i[l >> 2] | 0) >>> 0) {
              d = (r + 524292) | 0;
              s = (e + 8) | 0;
              rt[i[(e + 4) >> 2] & 1](i[s >> 2] | 0, i[d >> 2] | 0);
              i[d >> 2] = 0;
              s = st[i[e >> 2] & 1](i[s >> 2] | 0, a << 3) | 0;
              if (!s) $e(1);
              else {
                i[d >> 2] = s;
                i[l >> 2] = a;
                break;
              }
            }
          } while (0);
          o[h >> 0] = 0;
          return;
        }
        function Va(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var o = 0.0,
            n = 0,
            a = 0,
            l = 0.0,
            d = 0.0,
            p = 0;
          n = 0;
          a = 0;
          while (1) {
            if ((n | 0) == (r | 0)) break;
            p = (a + (i[(e + (n << 2)) >> 2] | 0)) | 0;
            n = (n + 1) | 0;
            a = p;
          }
          if (a >>> 0 < 256) o = +h[(19516 + (a << 2)) >> 2];
          else o = +Xb(+(a >>> 0));
          d = o + 2.0;
          a = 0;
          while (1) {
            if ((a | 0) == (r | 0)) break;
            n = i[(e + (a << 2)) >> 2] | 0;
            if (n) {
              if (n >>> 0 < 256) l = +h[(19516 + (n << 2)) >> 2];
              else l = +Xb(+(n >>> 0));
              l = o - l;
              n = (s + (a << 2)) | 0;
              h[n >> 2] = l;
              if (l < 1.0) h[n >> 2] = 1.0;
            } else h[(s + (a << 2)) >> 2] = d;
            a = (a + 1) | 0;
          }
          return;
        }
        function Wa(e) {
          e = e | 0;
          var r = 0.0,
            s = 0,
            o = 0.0,
            n = 0,
            a = 0.0,
            l = 0.0,
            d = 0.0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0.0,
            j = 0,
            q = 0.0,
            $ = 0,
            ee = 0;
          ee = w;
          w = (w + 112) | 0;
          k = (ee + 88) | 0;
          j = (ee + 72) | 0;
          $ = ee;
          _ = i[(e + 1024) >> 2] | 0;
          if (!_) {
            q = 12.0;
            w = ee;
            return +q;
          } else {
            n = 0;
            p = 0;
          }
          while (1) {
            if (p >>> 0 >= 256) {
              s = n;
              break;
            }
            if (i[(e + (p << 2)) >> 2] | 0) {
              i[(k + (n << 2)) >> 2] = p;
              s = (n + 1) | 0;
              if ((n | 0) > 3) break;
            } else s = n;
            n = s;
            p = (p + 1) | 0;
          }
          switch (s | 0) {
            case 2: {
              q = +(_ >>> 0) + 20.0;
              w = ee;
              return +q;
            }
            case 3: {
              j = i[(e + (i[k >> 2] << 2)) >> 2] | 0;
              _ = i[(e + (i[(k + 4) >> 2] << 2)) >> 2] | 0;
              e = i[(e + (i[(k + 8) >> 2] << 2)) >> 2] | 0;
              $ = _ >>> 0 > e >>> 0 ? _ : e;
              q = +(((j + _ + e) << 1) >>> 0) + 28.0 - +((j >>> 0 > $ >>> 0 ? j : $) >>> 0);
              w = ee;
              return +q;
            }
            case 4: {
              s = 0;
              while (1) {
                if ((s | 0) == 4) {
                  _ = 0;
                  break;
                }
                i[(j + (s << 2)) >> 2] = i[(e + (i[(k + (s << 2)) >> 2] << 2)) >> 2];
                s = (s + 1) | 0;
              }
              while (1) {
                if ((_ | 0) == 4) break;
                k = (j + (_ << 2)) | 0;
                s = _;
                while (1) {
                  e = (s + 1) | 0;
                  if ((s | 0) == 3) break;
                  s = (j + (e << 2)) | 0;
                  n = i[s >> 2] | 0;
                  p = i[k >> 2] | 0;
                  if (n >>> 0 <= p >>> 0) {
                    s = e;
                    continue;
                  }
                  i[s >> 2] = p;
                  i[k >> 2] = n;
                  s = e;
                }
                _ = (_ + 1) | 0;
              }
              e = ((i[(j + 8) >> 2] | 0) + (i[(j + 12) >> 2] | 0)) | 0;
              $ = i[j >> 2] | 0;
              q = +(((e * 3) | 0) >>> 0) + 37.0 + +((($ + (i[(j + 4) >> 2] | 0)) << 1) >>> 0) - +((e >>> 0 > $ >>> 0 ? e : $) >>> 0);
              w = ee;
              return +q;
            }
            case 1: {
              q = 12.0;
              w = ee;
              return +q;
            }
            default: {
              s = $;
              n = (s + 72) | 0;
              do {
                i[s >> 2] = 0;
                s = (s + 4) | 0;
              } while ((s | 0) < (n | 0));
              if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
              else a = +Xb(+(_ >>> 0));
              k = ($ + 68) | 0;
              r = 0.0;
              s = 0;
              _ = 1;
              e: while (1) {
                q = r;
                t: while (1) {
                  while (1) {
                    if (s >>> 0 >= 256) break e;
                    n = i[(e + (s << 2)) >> 2] | 0;
                    if (!n) {
                      p = 1;
                      n = s;
                    } else break t;
                    while (1) {
                      n = (n + 1) | 0;
                      if (n >>> 0 >= 256) break;
                      if (i[(e + (n << 2)) >> 2] | 0) break;
                      p = (p + 1) | 0;
                    }
                    s = (s + p) | 0;
                    if ((s | 0) == 256) break e;
                    if (p >>> 0 >= 3) break;
                    i[$ >> 2] = (i[$ >> 2] | 0) + p;
                  }
                  r = q;
                  n = (p + -2) | 0;
                  while (1) {
                    if (!n) {
                      q = r;
                      continue t;
                    }
                    i[k >> 2] = (i[k >> 2] | 0) + 1;
                    r = r + 3.0;
                    n = n >>> 3;
                  }
                }
                if (n >>> 0 < 256) {
                  o = +(n >>> 0);
                  r = +h[(19516 + (n << 2)) >> 2];
                } else {
                  r = +(n >>> 0);
                  o = r;
                  r = +Xb(r);
                }
                r = a - r;
                j = ~~(r + 0.5) >>> 0;
                j = j >>> 0 > 15 ? 15 : j;
                p = ($ + (j << 2)) | 0;
                i[p >> 2] = (i[p >> 2] | 0) + 1;
                r = q + o * r;
                s = (s + 1) | 0;
                _ = j >>> 0 > _ >>> 0 ? j : _;
              }
              M = +((((_ << 1) + 18) | 0) >>> 0);
              k = ($ + 72) | 0;
              s = $;
              r = 0.0;
              _ = 0;
              while (1) {
                if (s >>> 0 >= k >>> 0) break;
                n = i[s >> 2] | 0;
                o = +(n >>> 0);
                if (n >>> 0 < 256) d = +h[(19516 + (n << 2)) >> 2];
                else d = +Xb(o);
                p = i[(s + 4) >> 2] | 0;
                a = +(p >>> 0);
                if (p >>> 0 < 256) l = +h[(19516 + (p << 2)) >> 2];
                else l = +Xb(a);
                s = (s + 8) | 0;
                r = r - o * d - a * l;
                _ = (_ + n + p) | 0;
              }
              d = q + M;
              l = +(_ >>> 0);
              if (!_) a = l;
              else {
                if (_ >>> 0 < 256) o = +h[(19516 + (_ << 2)) >> 2];
                else o = +Xb(l);
                a = l;
                r = r + l * o;
              }
              q = d + (r < a ? a : r);
              w = ee;
              return +q;
            }
          }
          return 0.0;
        }
        function Xa(e) {
          e = e | 0;
          var r = 0.0,
            s = 0,
            o = 0.0,
            n = 0,
            a = 0.0,
            l = 0.0,
            d = 0.0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0.0,
            j = 0,
            q = 0.0,
            $ = 0,
            ee = 0;
          ee = w;
          w = (w + 112) | 0;
          k = (ee + 88) | 0;
          j = (ee + 72) | 0;
          $ = ee;
          _ = i[(e + 2816) >> 2] | 0;
          if (!_) {
            q = 12.0;
            w = ee;
            return +q;
          } else {
            n = 0;
            p = 0;
          }
          while (1) {
            if (p >>> 0 >= 704) {
              s = n;
              break;
            }
            if (i[(e + (p << 2)) >> 2] | 0) {
              i[(k + (n << 2)) >> 2] = p;
              s = (n + 1) | 0;
              if ((n | 0) > 3) break;
            } else s = n;
            n = s;
            p = (p + 1) | 0;
          }
          switch (s | 0) {
            case 2: {
              q = +(_ >>> 0) + 20.0;
              w = ee;
              return +q;
            }
            case 3: {
              j = i[(e + (i[k >> 2] << 2)) >> 2] | 0;
              _ = i[(e + (i[(k + 4) >> 2] << 2)) >> 2] | 0;
              e = i[(e + (i[(k + 8) >> 2] << 2)) >> 2] | 0;
              $ = _ >>> 0 > e >>> 0 ? _ : e;
              q = +(((j + _ + e) << 1) >>> 0) + 28.0 - +((j >>> 0 > $ >>> 0 ? j : $) >>> 0);
              w = ee;
              return +q;
            }
            case 4: {
              s = 0;
              while (1) {
                if ((s | 0) == 4) {
                  _ = 0;
                  break;
                }
                i[(j + (s << 2)) >> 2] = i[(e + (i[(k + (s << 2)) >> 2] << 2)) >> 2];
                s = (s + 1) | 0;
              }
              while (1) {
                if ((_ | 0) == 4) break;
                k = (j + (_ << 2)) | 0;
                s = _;
                while (1) {
                  e = (s + 1) | 0;
                  if ((s | 0) == 3) break;
                  s = (j + (e << 2)) | 0;
                  n = i[s >> 2] | 0;
                  p = i[k >> 2] | 0;
                  if (n >>> 0 <= p >>> 0) {
                    s = e;
                    continue;
                  }
                  i[s >> 2] = p;
                  i[k >> 2] = n;
                  s = e;
                }
                _ = (_ + 1) | 0;
              }
              e = ((i[(j + 8) >> 2] | 0) + (i[(j + 12) >> 2] | 0)) | 0;
              $ = i[j >> 2] | 0;
              q = +(((e * 3) | 0) >>> 0) + 37.0 + +((($ + (i[(j + 4) >> 2] | 0)) << 1) >>> 0) - +((e >>> 0 > $ >>> 0 ? e : $) >>> 0);
              w = ee;
              return +q;
            }
            case 1: {
              q = 12.0;
              w = ee;
              return +q;
            }
            default: {
              s = $;
              n = (s + 72) | 0;
              do {
                i[s >> 2] = 0;
                s = (s + 4) | 0;
              } while ((s | 0) < (n | 0));
              if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
              else a = +Xb(+(_ >>> 0));
              k = ($ + 68) | 0;
              r = 0.0;
              s = 0;
              _ = 1;
              e: while (1) {
                q = r;
                t: while (1) {
                  while (1) {
                    if (s >>> 0 >= 704) break e;
                    n = i[(e + (s << 2)) >> 2] | 0;
                    if (!n) {
                      p = 1;
                      n = s;
                    } else break t;
                    while (1) {
                      n = (n + 1) | 0;
                      if (n >>> 0 >= 704) break;
                      if (i[(e + (n << 2)) >> 2] | 0) break;
                      p = (p + 1) | 0;
                    }
                    s = (s + p) | 0;
                    if ((s | 0) == 704) break e;
                    if (p >>> 0 >= 3) break;
                    i[$ >> 2] = (i[$ >> 2] | 0) + p;
                  }
                  r = q;
                  n = (p + -2) | 0;
                  while (1) {
                    if (!n) {
                      q = r;
                      continue t;
                    }
                    i[k >> 2] = (i[k >> 2] | 0) + 1;
                    r = r + 3.0;
                    n = n >>> 3;
                  }
                }
                if (n >>> 0 < 256) {
                  o = +(n >>> 0);
                  r = +h[(19516 + (n << 2)) >> 2];
                } else {
                  r = +(n >>> 0);
                  o = r;
                  r = +Xb(r);
                }
                r = a - r;
                j = ~~(r + 0.5) >>> 0;
                j = j >>> 0 > 15 ? 15 : j;
                p = ($ + (j << 2)) | 0;
                i[p >> 2] = (i[p >> 2] | 0) + 1;
                r = q + o * r;
                s = (s + 1) | 0;
                _ = j >>> 0 > _ >>> 0 ? j : _;
              }
              M = +((((_ << 1) + 18) | 0) >>> 0);
              k = ($ + 72) | 0;
              s = $;
              r = 0.0;
              _ = 0;
              while (1) {
                if (s >>> 0 >= k >>> 0) break;
                n = i[s >> 2] | 0;
                o = +(n >>> 0);
                if (n >>> 0 < 256) d = +h[(19516 + (n << 2)) >> 2];
                else d = +Xb(o);
                p = i[(s + 4) >> 2] | 0;
                a = +(p >>> 0);
                if (p >>> 0 < 256) l = +h[(19516 + (p << 2)) >> 2];
                else l = +Xb(a);
                s = (s + 8) | 0;
                r = r - o * d - a * l;
                _ = (_ + n + p) | 0;
              }
              d = q + M;
              l = +(_ >>> 0);
              if (!_) a = l;
              else {
                if (_ >>> 0 < 256) o = +h[(19516 + (_ << 2)) >> 2];
                else o = +Xb(l);
                a = l;
                r = r + l * o;
              }
              q = d + (r < a ? a : r);
              w = ee;
              return +q;
            }
          }
          return 0.0;
        }
        function Ya(e) {
          e = e | 0;
          var r = 0.0,
            s = 0,
            o = 0.0,
            n = 0,
            a = 0.0,
            l = 0.0,
            d = 0.0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0.0,
            j = 0,
            q = 0.0,
            $ = 0,
            ee = 0;
          ee = w;
          w = (w + 112) | 0;
          k = (ee + 88) | 0;
          j = (ee + 72) | 0;
          $ = ee;
          _ = i[(e + 2080) >> 2] | 0;
          if (!_) {
            q = 12.0;
            w = ee;
            return +q;
          } else {
            n = 0;
            p = 0;
          }
          while (1) {
            if (p >>> 0 >= 520) {
              s = n;
              break;
            }
            if (i[(e + (p << 2)) >> 2] | 0) {
              i[(k + (n << 2)) >> 2] = p;
              s = (n + 1) | 0;
              if ((n | 0) > 3) break;
            } else s = n;
            n = s;
            p = (p + 1) | 0;
          }
          switch (s | 0) {
            case 2: {
              q = +(_ >>> 0) + 20.0;
              w = ee;
              return +q;
            }
            case 3: {
              j = i[(e + (i[k >> 2] << 2)) >> 2] | 0;
              _ = i[(e + (i[(k + 4) >> 2] << 2)) >> 2] | 0;
              e = i[(e + (i[(k + 8) >> 2] << 2)) >> 2] | 0;
              $ = _ >>> 0 > e >>> 0 ? _ : e;
              q = +(((j + _ + e) << 1) >>> 0) + 28.0 - +((j >>> 0 > $ >>> 0 ? j : $) >>> 0);
              w = ee;
              return +q;
            }
            case 4: {
              s = 0;
              while (1) {
                if ((s | 0) == 4) {
                  _ = 0;
                  break;
                }
                i[(j + (s << 2)) >> 2] = i[(e + (i[(k + (s << 2)) >> 2] << 2)) >> 2];
                s = (s + 1) | 0;
              }
              while (1) {
                if ((_ | 0) == 4) break;
                k = (j + (_ << 2)) | 0;
                s = _;
                while (1) {
                  e = (s + 1) | 0;
                  if ((s | 0) == 3) break;
                  s = (j + (e << 2)) | 0;
                  n = i[s >> 2] | 0;
                  p = i[k >> 2] | 0;
                  if (n >>> 0 <= p >>> 0) {
                    s = e;
                    continue;
                  }
                  i[s >> 2] = p;
                  i[k >> 2] = n;
                  s = e;
                }
                _ = (_ + 1) | 0;
              }
              e = ((i[(j + 8) >> 2] | 0) + (i[(j + 12) >> 2] | 0)) | 0;
              $ = i[j >> 2] | 0;
              q = +(((e * 3) | 0) >>> 0) + 37.0 + +((($ + (i[(j + 4) >> 2] | 0)) << 1) >>> 0) - +((e >>> 0 > $ >>> 0 ? e : $) >>> 0);
              w = ee;
              return +q;
            }
            case 1: {
              q = 12.0;
              w = ee;
              return +q;
            }
            default: {
              s = $;
              n = (s + 72) | 0;
              do {
                i[s >> 2] = 0;
                s = (s + 4) | 0;
              } while ((s | 0) < (n | 0));
              if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
              else a = +Xb(+(_ >>> 0));
              k = ($ + 68) | 0;
              r = 0.0;
              s = 0;
              _ = 1;
              e: while (1) {
                q = r;
                t: while (1) {
                  while (1) {
                    if (s >>> 0 >= 520) break e;
                    n = i[(e + (s << 2)) >> 2] | 0;
                    if (!n) {
                      p = 1;
                      n = s;
                    } else break t;
                    while (1) {
                      n = (n + 1) | 0;
                      if (n >>> 0 >= 520) break;
                      if (i[(e + (n << 2)) >> 2] | 0) break;
                      p = (p + 1) | 0;
                    }
                    s = (s + p) | 0;
                    if ((s | 0) == 520) break e;
                    if (p >>> 0 >= 3) break;
                    i[$ >> 2] = (i[$ >> 2] | 0) + p;
                  }
                  r = q;
                  n = (p + -2) | 0;
                  while (1) {
                    if (!n) {
                      q = r;
                      continue t;
                    }
                    i[k >> 2] = (i[k >> 2] | 0) + 1;
                    r = r + 3.0;
                    n = n >>> 3;
                  }
                }
                if (n >>> 0 < 256) {
                  o = +(n >>> 0);
                  r = +h[(19516 + (n << 2)) >> 2];
                } else {
                  r = +(n >>> 0);
                  o = r;
                  r = +Xb(r);
                }
                r = a - r;
                j = ~~(r + 0.5) >>> 0;
                j = j >>> 0 > 15 ? 15 : j;
                p = ($ + (j << 2)) | 0;
                i[p >> 2] = (i[p >> 2] | 0) + 1;
                r = q + o * r;
                s = (s + 1) | 0;
                _ = j >>> 0 > _ >>> 0 ? j : _;
              }
              M = +((((_ << 1) + 18) | 0) >>> 0);
              k = ($ + 72) | 0;
              s = $;
              r = 0.0;
              _ = 0;
              while (1) {
                if (s >>> 0 >= k >>> 0) break;
                n = i[s >> 2] | 0;
                o = +(n >>> 0);
                if (n >>> 0 < 256) d = +h[(19516 + (n << 2)) >> 2];
                else d = +Xb(o);
                p = i[(s + 4) >> 2] | 0;
                a = +(p >>> 0);
                if (p >>> 0 < 256) l = +h[(19516 + (p << 2)) >> 2];
                else l = +Xb(a);
                s = (s + 8) | 0;
                r = r - o * d - a * l;
                _ = (_ + n + p) | 0;
              }
              d = q + M;
              l = +(_ >>> 0);
              if (!_) a = l;
              else {
                if (_ >>> 0 < 256) o = +h[(19516 + (_ << 2)) >> 2];
                else o = +Xb(l);
                a = l;
                r = r + l * o;
              }
              q = d + (r < a ? a : r);
              w = ee;
              return +q;
            }
          }
          return 0.0;
        }
        function Za(e, r, s, d, k, _, M, j, q, $) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          var ee = 0,
            te = 0,
            re = 0,
            oe = 0,
            ne = 0,
            ie = 0.0,
            Ae = 0.0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0.0;
          Ue = w;
          w = (w + 6688) | 0;
          Ne = (Ue + 2832) | 0;
          Se = Ue;
          De = (Ue + 6432) | 0;
          Re = (Ue + 6176) | 0;
          Fe = (Ue + 5920) | 0;
          Te = (Ue + 5664) | 0;
          ee = 0;
          Ie = 0;
          while (1) {
            if ((ee | 0) == (s | 0)) break;
            Oe = (Ie + (i[(r + (ee << 4)) >> 2] | 0)) | 0;
            ee = (ee + 1) | 0;
            Ie = Oe;
          }
          Oe = (e + 8) | 0;
          ye = st[i[e >> 2] & 1](i[Oe >> 2] | 0, Ie) | 0;
          if (!ye) $e(1);
          ne = (_ + 1) | 0;
          re = 0;
          oe = 0;
          while (1) {
            ee = k & _;
            if ((oe | 0) == (s | 0)) break;
            k = i[(r + (oe << 4)) >> 2] | 0;
            if (((ee + k) | 0) >>> 0 > _ >>> 0) {
              we = (ne - ee) | 0;
              dc((ye + re) | 0, (d + ee) | 0, we | 0) | 0;
              ee = 0;
              te = (k - we) | 0;
              k = (re + we) | 0;
            } else {
              te = k;
              k = re;
            }
            if (te) {
              dc((ye + k) | 0, (d + ee) | 0, te | 0) | 0;
              k = (k + te) | 0;
            }
            re = k;
            k = (ee + te + (i[(r + (oe << 4) + 4) >> 2] & 16777215)) | 0;
            oe = (oe + 1) | 0;
          }
          ce = ((((Ie >>> 0) / 544) | 0) + 1) | 0;
          ce = ce >>> 0 > 100 ? 100 : ce;
          do {
            if (Ie) {
              if (Ie >>> 0 < 128) {
                oe = (j + 16) | 0;
                k = i[oe >> 2] | 0;
                ne = (j + 4) | 0;
                ee = i[ne >> 2] | 0;
                te = (ee + 1) | 0;
                if (k >>> 0 < te >>> 0) {
                  re = (k | 0) == 0 ? te : k;
                  while (1) {
                    if (re >>> 0 >= te >>> 0) break;
                    re = re << 1;
                  }
                  k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re) | 0;
                  if (!k) $e(1);
                  te = i[oe >> 2] | 0;
                  ee = (j + 8) | 0;
                  if (te) dc(k | 0, i[ee >> 2] | 0, te | 0) | 0;
                  rt[i[(e + 4) >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                  i[ee >> 2] = k;
                  i[oe >> 2] = re;
                  ee = i[ne >> 2] | 0;
                }
                oe = (j + 20) | 0;
                k = i[oe >> 2] | 0;
                te = (ee + 1) | 0;
                if (k >>> 0 < te >>> 0) {
                  re = (k | 0) == 0 ? te : k;
                  while (1) {
                    if (re >>> 0 >= te >>> 0) break;
                    re = re << 1;
                  }
                  ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re << 2) | 0;
                  if (!ee) $e(1);
                  te = i[oe >> 2] | 0;
                  k = (j + 12) | 0;
                  if (te) dc(ee | 0, i[k >> 2] | 0, (te << 2) | 0) | 0;
                  rt[i[(e + 4) >> 2] & 1](i[Oe >> 2] | 0, i[k >> 2] | 0);
                  i[k >> 2] = ee;
                  i[oe >> 2] = re;
                  ee = i[ne >> 2] | 0;
                } else k = (j + 12) | 0;
                i[j >> 2] = 1;
                o[((i[(j + 8) >> 2] | 0) + ee) >> 0] = 0;
                i[((i[k >> 2] | 0) + (i[ne >> 2] << 2)) >> 2] = Ie;
                i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                break;
              }
              Ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (ce * 1040) | 0) | 0;
              if (!Ee) $e(1);
              ee = 0;
              while (1) {
                if ((ee | 0) == (ce | 0)) break;
                ac((Ee + ((ee * 1040) | 0)) | 0, 0, 1024) | 0;
                i[(Ee + ((ee * 1040) | 0) + 1024) >> 2] = 0;
                p[(Ee + ((ee * 1040) | 0) + 1032) >> 3] = se;
                ee = (ee + 1) | 0;
              }
              oe = ((Ie >>> 0) / (ce >>> 0)) | 0;
              ne = (Ie + -71) | 0;
              k = 7;
              d = 0;
              while (1) {
                if ((d | 0) == (ce | 0)) break;
                ee = (((Pe(Ie, d) | 0) >>> 0) / (ce >>> 0)) | 0;
                if (d) {
                  k = (k * 16807) | 0;
                  k = (k | 0) == 0 ? 1 : k;
                  ee = (ee + ((k >>> 0) % (oe >>> 0) | 0)) | 0;
                }
                te = (Ee + ((d * 1040) | 0) + 1024) | 0;
                i[te >> 2] = (i[te >> 2] | 0) + 70;
                te = 71;
                re = (ye + (((ee + 70) | 0) >>> 0 < Ie >>> 0 ? ee : ne)) | 0;
                while (1) {
                  ee = (te + -1) | 0;
                  if (!ee) break;
                  te = (Ee + ((d * 1040) | 0) + (a[re >> 0] << 2)) | 0;
                  i[te >> 2] = (i[te >> 2] | 0) + 1;
                  te = ee;
                  re = (re + 1) | 0;
                }
                d = (d + 1) | 0;
              }
              i[Ne >> 2] = 7;
              te = (((((Ie << 1) >>> 0) / 70) | 0) + 100 + ce + -1) | 0;
              te = (te - ((te >>> 0) % (ce >>> 0) | 0)) | 0;
              re = (Se + 1024) | 0;
              oe = (Se + 1032) | 0;
              ne = Ie >>> 0 > 70;
              d = (Ie + -69) | 0;
              _ = (Se + 1024) | 0;
              ae = 0;
              while (1) {
                if (ae >>> 0 >= te >>> 0) break;
                ac(Se | 0, 0, 1028) | 0;
                p[oe >> 3] = se;
                if (ne) {
                  k = ((i[Ne >> 2] | 0) * 16807) | 0;
                  we = (k | 0) == 0;
                  i[Ne >> 2] = we ? 1 : k;
                  ee = 70;
                  k = ((we ? 1 : k) >>> 0) % (d >>> 0) | 0;
                } else {
                  ee = Ie;
                  k = 0;
                }
                i[_ >> 2] = (i[_ >> 2] | 0) + ee;
                ee = (ee + 1) | 0;
                k = (ye + k) | 0;
                while (1) {
                  ee = (ee + -1) | 0;
                  if (!ee) break;
                  we = (Se + (a[k >> 0] << 2)) | 0;
                  i[we >> 2] = (i[we >> 2] | 0) + 1;
                  k = (k + 1) | 0;
                }
                ee = (ae >>> 0) % (ce >>> 0) | 0;
                k = (Ee + ((ee * 1040) | 0) + 1024) | 0;
                i[k >> 2] = (i[k >> 2] | 0) + (i[re >> 2] | 0);
                k = 0;
                while (1) {
                  if ((k | 0) == 256) break;
                  we = (Ee + ((ee * 1040) | 0) + (k << 2)) | 0;
                  i[we >> 2] = (i[we >> 2] | 0) + (i[(Se + (k << 2)) >> 2] | 0);
                  k = (k + 1) | 0;
                }
                ae = (ae + 1) | 0;
              }
              we = st[i[e >> 2] & 1](i[Oe >> 2] | 0, Ie) | 0;
              if (!we) $e(1);
              de = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ce << 11) | 0;
              if (!de) $e(1);
              fe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ce << 3) | 0;
              if (!fe) $e(1);
              he = Pe(Ie, ((ce + 7) | 0) >>> 3) | 0;
              he = st[i[e >> 2] & 1](i[Oe >> 2] | 0, he) | 0;
              if (!he) $e(1);
              pe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ce << 1) | 0;
              if (!pe) $e(1);
              le = (i[(M + 4) >> 2] | 0) < 11 ? 3 : 10;
              ue = (Ie + -1) | 0;
              ge = (we + ue) | 0;
              Qe = 0;
              ae = 0;
              e: while (1) {
                if (ae >>> 0 >= le >>> 0) {
                  d = 136;
                  break;
                }
                _ = ((ce + 7) | 0) >>> 3;
                if (ce >>> 0 >= 257) {
                  d = 73;
                  break;
                }
                t: do {
                  if (ce >>> 0 < 2) {
                    ee = 0;
                    while (1) {
                      if ((ee | 0) == (Ie | 0)) {
                        re = 1;
                        break t;
                      }
                      o[(we + ee) >> 0] = 0;
                      ee = (ee + 1) | 0;
                    }
                  } else {
                    ac(de | 0, 0, (ce << 11) | 0) | 0;
                    k = 0;
                    while (1) {
                      if ((k | 0) == (ce | 0)) {
                        ee = 256;
                        break;
                      }
                      ee = i[(Ee + ((k * 1040) | 0) + 1024) >> 2] | 0;
                      if (ee >>> 0 < 256) ie = +h[(19516 + (ee << 2)) >> 2];
                      else ie = +Xb(+(ee >>> 0));
                      p[(de + (k << 3)) >> 3] = ie;
                      k = (k + 1) | 0;
                    }
                    r: while (1) {
                      if (!ee) break;
                      ee = (ee + -1) | 0;
                      te = Pe(ee, ce) | 0;
                      re = 0;
                      while (1) {
                        if ((re | 0) == (ce | 0)) continue r;
                        Ae = +p[(de + (re << 3)) >> 3];
                        k = i[(Ee + ((re * 1040) | 0) + (ee << 2)) >> 2] | 0;
                        do {
                          if (k)
                            if (k >>> 0 < 256) {
                              ie = +h[(19516 + (k << 2)) >> 2];
                              break;
                            } else {
                              ie = +Xb(+(k >>> 0));
                              break;
                            }
                          else ie = -2.0;
                        } while (0);
                        p[(de + ((te + re) << 3)) >> 3] = Ae - ie;
                        re = (re + 1) | 0;
                      }
                    }
                    ac(fe | 0, 0, (ce << 3) | 0) | 0;
                    ac(he | 0, 0, Pe(Ie, _) | 0) | 0;
                    re = 0;
                    while (1) {
                      if (re >>> 0 >= Ie >>> 0) break;
                      ee = Pe(a[(ye + re) >> 0] | 0, ce) | 0;
                      k = (we + re) | 0;
                      Ae = 1e99;
                      te = 0;
                      while (1) {
                        if ((te | 0) == (ce | 0)) break;
                        Qe = (fe + (te << 3)) | 0;
                        ie = +p[Qe >> 3] + +p[(de + ((ee + te) << 3)) >> 3];
                        p[Qe >> 3] = ie;
                        if (ie < Ae) o[k >> 0] = te;
                        else ie = Ae;
                        Ae = ie;
                        te = (te + 1) | 0;
                      }
                      k = Pe(re, _) | 0;
                      if (re >>> 0 < 2e3) ie = ((+(re >>> 0) * 0.07) / 2.0e3 + 0.77) * 28.1;
                      else ie = 28.1;
                      te = 0;
                      while (1) {
                        if (te >>> 0 >= ce >>> 0) break;
                        ee = (fe + (te << 3)) | 0;
                        Ge = +p[ee >> 3] - Ae;
                        p[ee >> 3] = Ge;
                        if (Ge >= ie) {
                          p[ee >> 3] = ie;
                          ee = te >>> 3;
                          if (ee >>> 0 >= _ >>> 0) {
                            d = 104;
                            break e;
                          }
                          Qe = (he + (k + ee)) | 0;
                          o[Qe >> 0] = o[Qe >> 0] | ((1 << (te & 7)) & 255);
                        }
                        te = (te + 1) | 0;
                      }
                      re = (re + 1) | 0;
                    }
                    k = Pe(ue, _) | 0;
                    re = ue;
                    ee = o[ge >> 0] | 0;
                    te = 1;
                    while (1) {
                      if (!re) {
                        re = te;
                        break t;
                      }
                      oe = ee & 255;
                      ne = oe >>> 3;
                      if (ne >>> 0 >= _ >>> 0) {
                        d = 111;
                        break e;
                      }
                      d = (re + -1) | 0;
                      k = (k - _) | 0;
                      re = (we + d) | 0;
                      if (((o[(he + (k + ne)) >> 0] & ((1 << (oe & 7)) & 255)) << 24) >> 24) {
                        Be = o[re >> 0] | 0;
                        Qe = (ee << 24) >> 24 == (Be << 24) >> 24;
                        ee = Qe ? ee : Be;
                        te = Qe ? te : (te + 1) | 0;
                      }
                      o[re >> 0] = ee;
                      re = d;
                    }
                  }
                } while (0);
                ee = 0;
                while (1) {
                  if ((ee | 0) == (ce | 0)) {
                    ee = 0;
                    te = 0;
                    break;
                  }
                  n[(pe + (ee << 1)) >> 1] = 256;
                  ee = (ee + 1) | 0;
                }
                while (1) {
                  if (te >>> 0 >= Ie >>> 0) {
                    k = 0;
                    break;
                  }
                  k = a[(we + te) >> 0] | 0;
                  if (k >>> 0 >= ce >>> 0) {
                    d = 120;
                    break e;
                  }
                  k = (pe + (k << 1)) | 0;
                  if ((n[k >> 1] | 0) == 256) {
                    n[k >> 1] = ee;
                    ee = ((ee + 1) << 16) >> 16;
                  }
                  te = (te + 1) | 0;
                }
                while (1) {
                  if (k >>> 0 >= Ie >>> 0) break;
                  Be = (we + k) | 0;
                  Qe = n[(pe + (a[Be >> 0] << 1)) >> 1] | 0;
                  o[Be >> 0] = Qe;
                  if ((Qe & 255) >>> 0 >= ce >>> 0) {
                    d = 126;
                    break e;
                  }
                  k = (k + 1) | 0;
                }
                te = ee & 65535;
                if (te >>> 0 > ce >>> 0) {
                  d = 129;
                  break;
                }
                ee = ee & 65535;
                k = 0;
                while (1) {
                  if ((k | 0) == (ee | 0)) {
                    ee = 0;
                    break;
                  }
                  ac((Ee + ((k * 1040) | 0)) | 0, 0, 1024) | 0;
                  i[(Ee + ((k * 1040) | 0) + 1024) >> 2] = 0;
                  p[(Ee + ((k * 1040) | 0) + 1032) >> 3] = se;
                  k = (k + 1) | 0;
                }
                while (1) {
                  if ((ee | 0) == (Ie | 0)) break;
                  Qe = a[(we + ee) >> 0] | 0;
                  Be = (Ee + ((Qe * 1040) | 0) + (a[(ye + ee) >> 0] << 2)) | 0;
                  i[Be >> 2] = (i[Be >> 2] | 0) + 1;
                  Qe = (Ee + ((Qe * 1040) | 0) + 1024) | 0;
                  i[Qe >> 2] = (i[Qe >> 2] | 0) + 1;
                  ee = (ee + 1) | 0;
                }
                Qe = re;
                ce = te;
                ae = (ae + 1) | 0;
              }
              if ((d | 0) == 73) et(404083, 403848, 80, 404281);
              else if ((d | 0) == 104) et(404124, 403848, 130, 404281);
              else if ((d | 0) == 111) et(404145, 403848, 141, 404281);
              else if ((d | 0) == 120) et(404005, 403848, 165, 404260);
              else if ((d | 0) == 126) et(404005, 403848, 172, 404260);
              else if ((d | 0) == 129) et(404057, 403848, 174, 404260);
              else if ((d | 0) == 136) {
                Be = (e + 4) | 0;
                rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, de);
                rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, fe);
                rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, he);
                rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, pe);
                rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, Ee);
                ee = Qe << 2;
                Ce = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ee) | 0;
                if (!Ce) $e(1);
                me = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ee) | 0;
                if (!me) $e(1);
                ne = (((Qe << 4) + 1008) | 0) >>> 6;
                Ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (ne * 1040) | 0) | 0;
                re = Ee;
                if (!Ee) $e(1);
                Ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ne << 2) | 0;
                oe = Ee;
                if (!Ee) $e(1);
                fe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ((Qe >>> 0 < 64 ? Qe : 64) * 1040) | 0) | 0;
                if (!fe) $e(1);
                he = st[i[e >> 2] & 1](i[Oe >> 2] | 0, 49176) | 0;
                if (!he) $e(1);
                ac(De | 0, 0, 256) | 0;
                ac(Re | 0, 0, 256) | 0;
                ac(Fe | 0, 0, 256) | 0;
                ac(Te | 0, 0, 256) | 0;
                ac(me | 0, 0, ee | 0) | 0;
                k = 0;
                te = 0;
                while (1) {
                  if (te >>> 0 >= Ie >>> 0) break;
                  if (k >>> 0 >= Qe >>> 0) {
                    d = 151;
                    break;
                  }
                  ee = (me + (k << 2)) | 0;
                  i[ee >> 2] = (i[ee >> 2] | 0) + 1;
                  ee = (te + 1) | 0;
                  if ((ee | 0) != (Ie | 0) ? (o[(we + te) >> 0] | 0) == (o[(we + ee) >> 0] | 0) : 0) {
                    te = ee;
                    continue;
                  }
                  k = (k + 1) | 0;
                  te = ee;
                }
                if ((d | 0) == 151) et(403825, 403848, 231, 404239);
                if ((k | 0) != (Qe | 0)) et(403911, 403848, 237, 404239);
                le = ne;
                ce = ne;
                Ee = 0;
                ee = 0;
                de = 0;
                while (1) {
                  if (Qe >>> 0 <= de >>> 0) {
                    d = 193;
                    break;
                  }
                  ge = (Qe - de) | 0;
                  ge = ge >>> 0 < 64 ? ge : 64;
                  _ = 0;
                  while (1) {
                    if ((_ | 0) == (ge | 0)) break;
                    te = (fe + ((_ * 1040) | 0)) | 0;
                    ac(te | 0, 0, 1024) | 0;
                    ne = (fe + ((_ * 1040) | 0) + 1024) | 0;
                    i[ne >> 2] = 0;
                    p[(fe + ((_ * 1040) | 0) + 1032) >> 3] = se;
                    d = (me + ((de + _) << 2)) | 0;
                    k = 0;
                    while (1) {
                      if (k >>> 0 >= (i[d >> 2] | 0) >>> 0) break;
                      Ie = (fe + ((_ * 1040) | 0) + (a[(ye + ee) >> 0] << 2)) | 0;
                      i[Ie >> 2] = (i[Ie >> 2] | 0) + 1;
                      i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                      ee = (ee + 1) | 0;
                      k = (k + 1) | 0;
                    }
                    p[(fe + ((_ * 1040) | 0) + 1032) >> 3] = +Wa(te);
                    i[(Re + (_ << 2)) >> 2] = _;
                    i[(Fe + (_ << 2)) >> 2] = _;
                    i[(De + (_ << 2)) >> 2] = 1;
                    _ = (_ + 1) | 0;
                  }
                  ue = pb(fe, De, Fe, Re, he, ge, ge, 64, 2048) | 0;
                  k = (Ee + ue) | 0;
                  if (le >>> 0 < k >>> 0) {
                    te = (le | 0) == 0;
                    ne = te ? k : le;
                    while (1) {
                      if (ne >>> 0 >= k >>> 0) break;
                      ne = ne << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (ne * 1040) | 0) | 0;
                    if (!k) {
                      d = 170;
                      break;
                    }
                    if (!te) dc(k | 0, re | 0, (le * 1040) | 0) | 0;
                    rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, re);
                    re = k;
                    le = ne;
                  }
                  k = (Ee + ue) | 0;
                  if (ce >>> 0 < k >>> 0) {
                    te = (ce | 0) == 0;
                    ne = te ? k : ce;
                    while (1) {
                      if (ne >>> 0 >= k >>> 0) break;
                      ne = ne << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ne << 2) | 0;
                    if (!k) {
                      d = 179;
                      break;
                    }
                    if (!te) dc(k | 0, oe | 0, (ce << 2) | 0) | 0;
                    rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, oe);
                    oe = k;
                    ce = ne;
                  }
                  k = re;
                  te = oe;
                  ae = (ue + Ee) | 0;
                  ne = Ee;
                  d = Ee;
                  _ = 0;
                  while (1) {
                    if ((_ | 0) == (ue | 0)) {
                      k = 0;
                      break;
                    }
                    Ie = (Re + (_ << 2)) | 0;
                    pe = i[Ie >> 2] | 0;
                    dc((k + ((ne * 1040) | 0)) | 0, (fe + ((pe * 1040) | 0)) | 0, 1040) | 0;
                    i[(te + (d << 2)) >> 2] = i[(De + (pe << 2)) >> 2];
                    i[(Te + (i[Ie >> 2] << 2)) >> 2] = _;
                    ne = (ne + 1) | 0;
                    d = (d + 1) | 0;
                    _ = (_ + 1) | 0;
                  }
                  while (1) {
                    if ((k | 0) == (ge | 0)) break;
                    i[(Ce + ((de + k) << 2)) >> 2] = Ee + (i[(Te + (i[(Fe + (k << 2)) >> 2] << 2)) >> 2] | 0);
                    k = (k + 1) | 0;
                  }
                  k = (ue + Ee) | 0;
                  if (((Ee + ue) | 0) != (k | 0)) {
                    d = 189;
                    break;
                  }
                  if ((k | 0) != (ae | 0)) {
                    d = 191;
                    break;
                  }
                  Ee = k;
                  de = (de + 64) | 0;
                }
                if ((d | 0) == 170) $e(1);
                else if ((d | 0) == 179) $e(1);
                else if ((d | 0) == 189) et(403935, 403848, 273, 404239);
                else if ((d | 0) == 191) et(403969, 403848, 274, 404239);
                else if ((d | 0) == 193) {
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, fe);
                  Ie = Ee << 6;
                  te = Pe(Ee >>> 1, Ee) | 0;
                  te = Ie >>> 0 < te >>> 0 ? Ie : te;
                  do {
                    if (((te + 1) | 0) >>> 0 > 2049) {
                      rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, he);
                      ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (((te * 24) | 0) + 24) | 0) | 0;
                      if (ee) {
                        be = ee;
                        break;
                      }
                      $e(1);
                    } else be = he;
                  } while (0);
                  k = Ee << 2;
                  pe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, k) | 0;
                  if (!pe) $e(1);
                  ee = 0;
                  while (1) {
                    if ((ee | 0) == (Ee | 0)) break;
                    i[(pe + (ee << 2)) >> 2] = ee;
                    ee = (ee + 1) | 0;
                  }
                  he = re;
                  fe = pb(he, oe, Ce, pe, be, Ee, Qe, 256, te) | 0;
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, be);
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, oe);
                  Ie = st[i[e >> 2] & 1](i[Oe >> 2] | 0, k) | 0;
                  if (!Ie) $e(1);
                  ee = 0;
                  while (1) {
                    if ((ee | 0) == (Ee | 0)) break;
                    i[(Ie + (ee << 2)) >> 2] = -1;
                    ee = (ee + 1) | 0;
                  }
                  ce = (Se + 1024) | 0;
                  le = (Se + 1032) | 0;
                  ue = (Ne + 1024) | 0;
                  ge = (Ne + 1024) | 0;
                  ee = 0;
                  k = 0;
                  de = 0;
                  while (1) {
                    if ((de | 0) == (Qe | 0)) break;
                    ac(Se | 0, 0, 1028) | 0;
                    p[le >> 3] = se;
                    te = (me + (de << 2)) | 0;
                    oe = 0;
                    ae = k;
                    k = 0;
                    while (1) {
                      if (k >>> 0 >= (i[te >> 2] | 0) >>> 0) break;
                      oe = (Se + (a[(ye + ae) >> 0] << 2)) | 0;
                      i[oe >> 2] = (i[oe >> 2] | 0) + 1;
                      oe = ((i[ce >> 2] | 0) + 1) | 0;
                      i[ce >> 2] = oe;
                      ae = (ae + 1) | 0;
                      k = (k + 1) | 0;
                    }
                    te = i[((de | 0) == 0 ? Ce : (Ce + ((de + -1) << 2)) | 0) >> 2] | 0;
                    _ = (oe | 0) == 0;
                    if (_) ie = 0.0;
                    else {
                      dc(Ne | 0, Se | 0, 1040) | 0;
                      i[ge >> 2] = (i[ge >> 2] | 0) + (i[(he + ((te * 1040) | 0) + 1024) >> 2] | 0);
                      k = 0;
                      while (1) {
                        if ((k | 0) == 256) break;
                        be = (Ne + (k << 2)) | 0;
                        i[be >> 2] = (i[be >> 2] | 0) + (i[(he + ((te * 1040) | 0) + (k << 2)) >> 2] | 0);
                        k = (k + 1) | 0;
                      }
                      ie = +Wa(Ne);
                      ie = ie - +p[(he + ((te * 1040) | 0) + 1032) >> 3];
                    }
                    k = te;
                    d = 0;
                    while (1) {
                      if ((d | 0) == (fe | 0)) break;
                      ne = (pe + (d << 2)) | 0;
                      te = i[ne >> 2] | 0;
                      if (_) Ae = 0.0;
                      else {
                        dc(Ne | 0, Se | 0, 1040) | 0;
                        i[ue >> 2] = (i[ue >> 2] | 0) + (i[(he + ((te * 1040) | 0) + 1024) >> 2] | 0);
                        oe = 0;
                        while (1) {
                          if ((oe | 0) == 256) break;
                          be = (Ne + (oe << 2)) | 0;
                          i[be >> 2] = (i[be >> 2] | 0) + (i[(he + ((te * 1040) | 0) + (oe << 2)) >> 2] | 0);
                          oe = (oe + 1) | 0;
                        }
                        Ae = +Wa(Ne);
                        Ae = Ae - +p[(he + ((te * 1040) | 0) + 1032) >> 3];
                      }
                      if (Ae < ie) {
                        ie = Ae;
                        k = i[ne >> 2] | 0;
                      }
                      d = (d + 1) | 0;
                    }
                    i[(Ce + (de << 2)) >> 2] = k;
                    k = (Ie + (k << 2)) | 0;
                    if ((i[k >> 2] | 0) == -1) {
                      i[k >> 2] = ee;
                      ee = (ee + 1) | 0;
                    }
                    k = ae;
                    de = (de + 1) | 0;
                  }
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, pe);
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, re);
                  oe = (j + 16) | 0;
                  ee = i[oe >> 2] | 0;
                  if (ee >>> 0 < Qe >>> 0) {
                    re = (ee | 0) == 0 ? Qe : ee;
                    while (1) {
                      if (re >>> 0 >= Qe >>> 0) break;
                      re = re << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re) | 0;
                    if (!k) $e(1);
                    te = i[oe >> 2] | 0;
                    ee = (j + 8) | 0;
                    if (te) dc(k | 0, i[ee >> 2] | 0, te | 0) | 0;
                    rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                    i[ee >> 2] = k;
                    i[oe >> 2] = re;
                  }
                  oe = (j + 20) | 0;
                  ee = i[oe >> 2] | 0;
                  if (ee >>> 0 < Qe >>> 0) {
                    re = (ee | 0) == 0 ? Qe : ee;
                    while (1) {
                      if (re >>> 0 >= Qe >>> 0) break;
                      re = re << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re << 2) | 0;
                    if (!k) $e(1);
                    te = i[oe >> 2] | 0;
                    ee = (j + 12) | 0;
                    if (te) dc(k | 0, i[ee >> 2] | 0, (te << 2) | 0) | 0;
                    rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                    i[ee >> 2] = k;
                    i[oe >> 2] = re;
                  } else ee = (j + 12) | 0;
                  oe = (j + 8) | 0;
                  d = 0;
                  k = 0;
                  _ = 0;
                  te = 0;
                  while (1) {
                    if ((te | 0) == (Qe | 0)) break;
                    re = (k + (i[(me + (te << 2)) >> 2] | 0)) | 0;
                    ne = (te + 1) | 0;
                    k = i[(Ce + (te << 2)) >> 2] | 0;
                    if ((ne | 0) != (Qe | 0) ? (k | 0) == (i[(Ce + (ne << 2)) >> 2] | 0) : 0) {
                      k = re;
                      te = ne;
                      continue;
                    }
                    te = i[(Ie + (k << 2)) >> 2] | 0;
                    be = te & 255;
                    o[((i[oe >> 2] | 0) + d) >> 0] = be;
                    i[((i[ee >> 2] | 0) + (d << 2)) >> 2] = re;
                    d = (d + 1) | 0;
                    k = 0;
                    _ = ((_ & 255) > (be & 255) ? _ & 255 : te & 255) & 255;
                    te = ne;
                  }
                  i[(j + 4) >> 2] = d;
                  i[j >> 2] = (_ & 255) + 1;
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, Ie);
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, me);
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, Ce);
                  rt[i[Be >> 2] & 1](i[Oe >> 2] | 0, we);
                  break;
                }
              }
            } else i[j >> 2] = 1;
          } while (0);
          j = (e + 4) | 0;
          rt[i[j >> 2] & 1](i[Oe >> 2] | 0, ye);
          be = s << 1;
          we = st[i[e >> 2] & 1](i[Oe >> 2] | 0, be) | 0;
          if (!we) $e(1);
          ee = 0;
          while (1) {
            if ((ee | 0) == (s | 0)) break;
            n[(we + (ee << 1)) >> 1] = n[(r + (ee << 4) + 12) >> 1] | 0;
            ee = (ee + 1) | 0;
          }
          le = ((((s >>> 0) / 530) | 0) + 1) | 0;
          le = le >>> 0 > 50 ? 50 : le;
          do {
            if (s) {
              if (s >>> 0 < 128) {
                oe = (q + 16) | 0;
                k = i[oe >> 2] | 0;
                ne = (q + 4) | 0;
                ee = i[ne >> 2] | 0;
                te = (ee + 1) | 0;
                if (k >>> 0 < te >>> 0) {
                  re = (k | 0) == 0 ? te : k;
                  while (1) {
                    if (re >>> 0 >= te >>> 0) break;
                    re = re << 1;
                  }
                  k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re) | 0;
                  if (!k) $e(1);
                  te = i[oe >> 2] | 0;
                  ee = (q + 8) | 0;
                  if (te) dc(k | 0, i[ee >> 2] | 0, te | 0) | 0;
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                  i[ee >> 2] = k;
                  i[oe >> 2] = re;
                  ee = i[ne >> 2] | 0;
                }
                oe = (q + 20) | 0;
                k = i[oe >> 2] | 0;
                te = (ee + 1) | 0;
                if (k >>> 0 < te >>> 0) {
                  re = (k | 0) == 0 ? te : k;
                  while (1) {
                    if (re >>> 0 >= te >>> 0) break;
                    re = re << 1;
                  }
                  ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re << 2) | 0;
                  if (!ee) $e(1);
                  te = i[oe >> 2] | 0;
                  k = (q + 12) | 0;
                  if (te) dc(ee | 0, i[k >> 2] | 0, (te << 2) | 0) | 0;
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[k >> 2] | 0);
                  i[k >> 2] = ee;
                  i[oe >> 2] = re;
                  ee = i[ne >> 2] | 0;
                } else k = (q + 12) | 0;
                i[q >> 2] = 1;
                o[((i[(q + 8) >> 2] | 0) + ee) >> 0] = 0;
                i[((i[k >> 2] | 0) + (i[ne >> 2] << 2)) >> 2] = s;
                i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                break;
              }
              Ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (le * 2832) | 0) | 0;
              if (!Ee) $e(1);
              ee = 0;
              while (1) {
                if ((ee | 0) == (le | 0)) break;
                ac((Ee + ((ee * 2832) | 0)) | 0, 0, 2816) | 0;
                i[(Ee + ((ee * 2832) | 0) + 2816) >> 2] = 0;
                p[(Ee + ((ee * 2832) | 0) + 2824) >> 3] = se;
                ee = (ee + 1) | 0;
              }
              re = ((s >>> 0) / (le >>> 0)) | 0;
              oe = (s + -41) | 0;
              k = 7;
              ne = 0;
              while (1) {
                if ((ne | 0) == (le | 0)) break;
                ee = (((Pe(ne, s) | 0) >>> 0) / (le >>> 0)) | 0;
                if (ne) {
                  k = (k * 16807) | 0;
                  k = (k | 0) == 0 ? 1 : k;
                  ee = (ee + ((k >>> 0) % (re >>> 0) | 0)) | 0;
                }
                te = (Ee + ((ne * 2832) | 0) + 2816) | 0;
                i[te >> 2] = (i[te >> 2] | 0) + 40;
                te = (we + ((((ee + 40) | 0) >>> 0 < s >>> 0 ? ee : oe) << 1)) | 0;
                ee = 41;
                while (1) {
                  ee = (ee + -1) | 0;
                  if (!ee) break;
                  ye = (Ee + ((ne * 2832) | 0) + (l[te >> 1] << 2)) | 0;
                  i[ye >> 2] = (i[ye >> 2] | 0) + 1;
                  te = (te + 2) | 0;
                }
                ne = (ne + 1) | 0;
              }
              i[Ne >> 2] = 7;
              re = ((((be >>> 0) / 40) | 0) + 100 + le + -1) | 0;
              re = (re - ((re >>> 0) % (le >>> 0) | 0)) | 0;
              oe = (Se + 2816) | 0;
              ne = (Se + 2824) | 0;
              d = s >>> 0 > 40;
              _ = (s + -39) | 0;
              ae = (Se + 2816) | 0;
              ce = 0;
              while (1) {
                if (ce >>> 0 >= re >>> 0) break;
                ac(Se | 0, 0, 2820) | 0;
                p[ne >> 3] = se;
                if (d) {
                  ee = ((i[Ne >> 2] | 0) * 16807) | 0;
                  ye = (ee | 0) == 0;
                  i[Ne >> 2] = ye ? 1 : ee;
                  k = 40;
                  ee = ((ye ? 1 : ee) >>> 0) % (_ >>> 0) | 0;
                } else {
                  k = s;
                  ee = 0;
                }
                i[ae >> 2] = (i[ae >> 2] | 0) + k;
                te = (we + (ee << 1)) | 0;
                ee = (k + 1) | 0;
                while (1) {
                  ee = (ee + -1) | 0;
                  if (!ee) break;
                  ye = (Se + (l[te >> 1] << 2)) | 0;
                  i[ye >> 2] = (i[ye >> 2] | 0) + 1;
                  te = (te + 2) | 0;
                }
                ee = (ce >>> 0) % (le >>> 0) | 0;
                k = (Ee + ((ee * 2832) | 0) + 2816) | 0;
                i[k >> 2] = (i[k >> 2] | 0) + (i[oe >> 2] | 0);
                k = 0;
                while (1) {
                  if ((k | 0) == 704) break;
                  ye = (Ee + ((ee * 2832) | 0) + (k << 2)) | 0;
                  i[ye >> 2] = (i[ye >> 2] | 0) + (i[(Se + (k << 2)) >> 2] | 0);
                  k = (k + 1) | 0;
                }
                ce = (ce + 1) | 0;
              }
              Qe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, s) | 0;
              if (!Qe) $e(1);
              de = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (le * 5632) | 0) | 0;
              if (!de) $e(1);
              fe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, le << 3) | 0;
              if (!fe) $e(1);
              he = Pe(((le + 7) | 0) >>> 3, s) | 0;
              he = st[i[e >> 2] & 1](i[Oe >> 2] | 0, he) | 0;
              if (!he) $e(1);
              pe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, le << 1) | 0;
              if (!pe) $e(1);
              ce = (i[(M + 4) >> 2] | 0) < 11 ? 3 : 10;
              ue = (s + -1) | 0;
              ge = (Qe + ue) | 0;
              Be = 0;
              ae = 0;
              e: while (1) {
                if (ae >>> 0 >= ce >>> 0) {
                  d = 382;
                  break;
                }
                _ = ((le + 7) | 0) >>> 3;
                if (le >>> 0 >= 257) {
                  d = 319;
                  break;
                }
                t: do {
                  if (le >>> 0 < 2) {
                    ee = 0;
                    while (1) {
                      if ((ee | 0) == (s | 0)) {
                        re = 1;
                        break t;
                      }
                      o[(Qe + ee) >> 0] = 0;
                      ee = (ee + 1) | 0;
                    }
                  } else {
                    ac(de | 0, 0, (le * 5632) | 0) | 0;
                    k = 0;
                    while (1) {
                      if ((k | 0) == (le | 0)) {
                        ee = 704;
                        break;
                      }
                      ee = i[(Ee + ((k * 2832) | 0) + 2816) >> 2] | 0;
                      if (ee >>> 0 < 256) ie = +h[(19516 + (ee << 2)) >> 2];
                      else ie = +Xb(+(ee >>> 0));
                      p[(de + (k << 3)) >> 3] = ie;
                      k = (k + 1) | 0;
                    }
                    r: while (1) {
                      if (!ee) break;
                      ee = (ee + -1) | 0;
                      te = Pe(ee, le) | 0;
                      re = 0;
                      while (1) {
                        if ((re | 0) == (le | 0)) continue r;
                        Ae = +p[(de + (re << 3)) >> 3];
                        k = i[(Ee + ((re * 2832) | 0) + (ee << 2)) >> 2] | 0;
                        do {
                          if (k)
                            if (k >>> 0 < 256) {
                              ie = +h[(19516 + (k << 2)) >> 2];
                              break;
                            } else {
                              ie = +Xb(+(k >>> 0));
                              break;
                            }
                          else ie = -2.0;
                        } while (0);
                        p[(de + ((te + re) << 3)) >> 3] = Ae - ie;
                        re = (re + 1) | 0;
                      }
                    }
                    ac(fe | 0, 0, (le << 3) | 0) | 0;
                    ac(he | 0, 0, Pe(_, s) | 0) | 0;
                    re = 0;
                    while (1) {
                      if (re >>> 0 >= s >>> 0) break;
                      ee = Pe(l[(we + (re << 1)) >> 1] | 0, le) | 0;
                      k = (Qe + re) | 0;
                      Ae = 1e99;
                      te = 0;
                      while (1) {
                        if ((te | 0) == (le | 0)) break;
                        ye = (fe + (te << 3)) | 0;
                        ie = +p[ye >> 3] + +p[(de + ((ee + te) << 3)) >> 3];
                        p[ye >> 3] = ie;
                        if (ie < Ae) o[k >> 0] = te;
                        else ie = Ae;
                        Ae = ie;
                        te = (te + 1) | 0;
                      }
                      k = Pe(re, _) | 0;
                      if (re >>> 0 < 2e3) ie = ((+(re >>> 0) * 0.07) / 2.0e3 + 0.77) * 13.5;
                      else ie = 13.5;
                      te = 0;
                      while (1) {
                        if (te >>> 0 >= le >>> 0) break;
                        ee = (fe + (te << 3)) | 0;
                        Ge = +p[ee >> 3] - Ae;
                        p[ee >> 3] = Ge;
                        if (Ge >= ie) {
                          p[ee >> 3] = ie;
                          ee = te >>> 3;
                          if (ee >>> 0 >= _ >>> 0) {
                            d = 350;
                            break e;
                          }
                          ye = (he + (k + ee)) | 0;
                          o[ye >> 0] = o[ye >> 0] | ((1 << (te & 7)) & 255);
                        }
                        te = (te + 1) | 0;
                      }
                      re = (re + 1) | 0;
                    }
                    k = Pe(ue, _) | 0;
                    re = ue;
                    ee = o[ge >> 0] | 0;
                    te = 1;
                    while (1) {
                      if (!re) {
                        re = te;
                        break t;
                      }
                      oe = ee & 255;
                      ne = oe >>> 3;
                      if (ne >>> 0 >= _ >>> 0) {
                        d = 357;
                        break e;
                      }
                      d = (re + -1) | 0;
                      k = (k - _) | 0;
                      re = (Qe + d) | 0;
                      if (((o[(he + (k + ne)) >> 0] & ((1 << (oe & 7)) & 255)) << 24) >> 24) {
                        Be = o[re >> 0] | 0;
                        ye = (ee << 24) >> 24 == (Be << 24) >> 24;
                        ee = ye ? ee : Be;
                        te = ye ? te : (te + 1) | 0;
                      }
                      o[re >> 0] = ee;
                      re = d;
                    }
                  }
                } while (0);
                ee = 0;
                while (1) {
                  if ((ee | 0) == (le | 0)) {
                    ee = 0;
                    te = 0;
                    break;
                  }
                  n[(pe + (ee << 1)) >> 1] = 256;
                  ee = (ee + 1) | 0;
                }
                while (1) {
                  if (te >>> 0 >= s >>> 0) {
                    k = 0;
                    break;
                  }
                  k = a[(Qe + te) >> 0] | 0;
                  if (k >>> 0 >= le >>> 0) {
                    d = 366;
                    break e;
                  }
                  k = (pe + (k << 1)) | 0;
                  if ((n[k >> 1] | 0) == 256) {
                    n[k >> 1] = ee;
                    ee = ((ee + 1) << 16) >> 16;
                  }
                  te = (te + 1) | 0;
                }
                while (1) {
                  if (k >>> 0 >= s >>> 0) break;
                  Be = (Qe + k) | 0;
                  ye = n[(pe + (a[Be >> 0] << 1)) >> 1] | 0;
                  o[Be >> 0] = ye;
                  if ((ye & 255) >>> 0 >= le >>> 0) {
                    d = 372;
                    break e;
                  }
                  k = (k + 1) | 0;
                }
                te = ee & 65535;
                if (te >>> 0 > le >>> 0) {
                  d = 375;
                  break;
                }
                ee = ee & 65535;
                k = 0;
                while (1) {
                  if ((k | 0) == (ee | 0)) {
                    ee = 0;
                    break;
                  }
                  ac((Ee + ((k * 2832) | 0)) | 0, 0, 2816) | 0;
                  i[(Ee + ((k * 2832) | 0) + 2816) >> 2] = 0;
                  p[(Ee + ((k * 2832) | 0) + 2824) >> 3] = se;
                  k = (k + 1) | 0;
                }
                while (1) {
                  if ((ee | 0) == (s | 0)) break;
                  ye = a[(Qe + ee) >> 0] | 0;
                  Be = (Ee + ((ye * 2832) | 0) + (l[(we + (ee << 1)) >> 1] << 2)) | 0;
                  i[Be >> 2] = (i[Be >> 2] | 0) + 1;
                  ye = (Ee + ((ye * 2832) | 0) + 2816) | 0;
                  i[ye >> 2] = (i[ye >> 2] | 0) + 1;
                  ee = (ee + 1) | 0;
                }
                Be = re;
                le = te;
                ae = (ae + 1) | 0;
              }
              if ((d | 0) == 319) et(404083, 403848, 80, 404221);
              else if ((d | 0) == 350) et(404124, 403848, 130, 404221);
              else if ((d | 0) == 357) et(404145, 403848, 141, 404221);
              else if ((d | 0) == 366) et(404005, 403848, 165, 404200);
              else if ((d | 0) == 372) et(404005, 403848, 172, 404200);
              else if ((d | 0) == 375) et(404057, 403848, 174, 404200);
              else if ((d | 0) == 382) {
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, de);
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, fe);
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, he);
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, pe);
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Ee);
                ee = Be << 2;
                Ce = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ee) | 0;
                if (!Ce) $e(1);
                me = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ee) | 0;
                if (!me) $e(1);
                ne = (((Be << 4) + 1008) | 0) >>> 6;
                ye = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (ne * 2832) | 0) | 0;
                re = ye;
                if (!ye) $e(1);
                ye = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ne << 2) | 0;
                oe = ye;
                if (!ye) $e(1);
                fe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ((Be >>> 0 < 64 ? Be : 64) * 2832) | 0) | 0;
                if (!fe) $e(1);
                he = st[i[e >> 2] & 1](i[Oe >> 2] | 0, 49176) | 0;
                if (!he) $e(1);
                ac(De | 0, 0, 256) | 0;
                ac(Re | 0, 0, 256) | 0;
                ac(Fe | 0, 0, 256) | 0;
                ac(Te | 0, 0, 256) | 0;
                ac(me | 0, 0, ee | 0) | 0;
                k = 0;
                te = 0;
                while (1) {
                  if (te >>> 0 >= s >>> 0) break;
                  if (k >>> 0 >= Be >>> 0) {
                    d = 397;
                    break;
                  }
                  ee = (me + (k << 2)) | 0;
                  i[ee >> 2] = (i[ee >> 2] | 0) + 1;
                  ee = (te + 1) | 0;
                  if ((ee | 0) != (s | 0) ? (o[(Qe + te) >> 0] | 0) == (o[(Qe + ee) >> 0] | 0) : 0) {
                    te = ee;
                    continue;
                  }
                  k = (k + 1) | 0;
                  te = ee;
                }
                if ((d | 0) == 397) et(403825, 403848, 231, 404179);
                if ((k | 0) != (Be | 0)) et(403911, 403848, 237, 404179);
                le = ne;
                ce = ne;
                Ee = 0;
                ee = 0;
                de = 0;
                while (1) {
                  if (Be >>> 0 <= de >>> 0) {
                    d = 439;
                    break;
                  }
                  ge = (Be - de) | 0;
                  ge = ge >>> 0 < 64 ? ge : 64;
                  _ = 0;
                  while (1) {
                    if ((_ | 0) == (ge | 0)) break;
                    te = (fe + ((_ * 2832) | 0)) | 0;
                    ac(te | 0, 0, 2816) | 0;
                    ne = (fe + ((_ * 2832) | 0) + 2816) | 0;
                    i[ne >> 2] = 0;
                    p[(fe + ((_ * 2832) | 0) + 2824) >> 3] = se;
                    d = (me + ((de + _) << 2)) | 0;
                    k = 0;
                    while (1) {
                      if (k >>> 0 >= (i[d >> 2] | 0) >>> 0) break;
                      ye = (fe + ((_ * 2832) | 0) + (l[(we + (ee << 1)) >> 1] << 2)) | 0;
                      i[ye >> 2] = (i[ye >> 2] | 0) + 1;
                      i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                      ee = (ee + 1) | 0;
                      k = (k + 1) | 0;
                    }
                    p[(fe + ((_ * 2832) | 0) + 2824) >> 3] = +Xa(te);
                    i[(Re + (_ << 2)) >> 2] = _;
                    i[(Fe + (_ << 2)) >> 2] = _;
                    i[(De + (_ << 2)) >> 2] = 1;
                    _ = (_ + 1) | 0;
                  }
                  ue = rb(fe, De, Fe, Re, he, ge, ge, 64, 2048) | 0;
                  k = (Ee + ue) | 0;
                  if (le >>> 0 < k >>> 0) {
                    te = (le | 0) == 0;
                    ne = te ? k : le;
                    while (1) {
                      if (ne >>> 0 >= k >>> 0) break;
                      ne = ne << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (ne * 2832) | 0) | 0;
                    if (!k) {
                      d = 416;
                      break;
                    }
                    if (!te) dc(k | 0, re | 0, (le * 2832) | 0) | 0;
                    rt[i[j >> 2] & 1](i[Oe >> 2] | 0, re);
                    re = k;
                    le = ne;
                  }
                  k = (Ee + ue) | 0;
                  if (ce >>> 0 < k >>> 0) {
                    te = (ce | 0) == 0;
                    ne = te ? k : ce;
                    while (1) {
                      if (ne >>> 0 >= k >>> 0) break;
                      ne = ne << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ne << 2) | 0;
                    if (!k) {
                      d = 425;
                      break;
                    }
                    if (!te) dc(k | 0, oe | 0, (ce << 2) | 0) | 0;
                    rt[i[j >> 2] & 1](i[Oe >> 2] | 0, oe);
                    oe = k;
                    ce = ne;
                  }
                  k = re;
                  te = oe;
                  ae = (ue + Ee) | 0;
                  ne = Ee;
                  d = Ee;
                  _ = 0;
                  while (1) {
                    if ((_ | 0) == (ue | 0)) {
                      k = 0;
                      break;
                    }
                    ye = (Re + (_ << 2)) | 0;
                    Ie = i[ye >> 2] | 0;
                    dc((k + ((ne * 2832) | 0)) | 0, (fe + ((Ie * 2832) | 0)) | 0, 2832) | 0;
                    i[(te + (d << 2)) >> 2] = i[(De + (Ie << 2)) >> 2];
                    i[(Te + (i[ye >> 2] << 2)) >> 2] = _;
                    ne = (ne + 1) | 0;
                    d = (d + 1) | 0;
                    _ = (_ + 1) | 0;
                  }
                  while (1) {
                    if ((k | 0) == (ge | 0)) break;
                    i[(Ce + ((de + k) << 2)) >> 2] = Ee + (i[(Te + (i[(Fe + (k << 2)) >> 2] << 2)) >> 2] | 0);
                    k = (k + 1) | 0;
                  }
                  k = (ue + Ee) | 0;
                  if (((Ee + ue) | 0) != (k | 0)) {
                    d = 435;
                    break;
                  }
                  if ((k | 0) != (ae | 0)) {
                    d = 437;
                    break;
                  }
                  Ee = k;
                  de = (de + 64) | 0;
                }
                if ((d | 0) == 416) $e(1);
                else if ((d | 0) == 425) $e(1);
                else if ((d | 0) == 435) et(403935, 403848, 273, 404179);
                else if ((d | 0) == 437) et(403969, 403848, 274, 404179);
                else if ((d | 0) == 439) {
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, fe);
                  ye = Ee << 6;
                  te = Pe(Ee >>> 1, Ee) | 0;
                  te = ye >>> 0 < te >>> 0 ? ye : te;
                  do {
                    if (((te + 1) | 0) >>> 0 > 2049) {
                      rt[i[j >> 2] & 1](i[Oe >> 2] | 0, he);
                      ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (((te * 24) | 0) + 24) | 0) | 0;
                      if (ee) {
                        ke = ee;
                        break;
                      }
                      $e(1);
                    } else ke = he;
                  } while (0);
                  k = Ee << 2;
                  pe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, k) | 0;
                  if (!pe) $e(1);
                  ee = 0;
                  while (1) {
                    if ((ee | 0) == (Ee | 0)) break;
                    i[(pe + (ee << 2)) >> 2] = ee;
                    ee = (ee + 1) | 0;
                  }
                  he = re;
                  fe = rb(he, oe, Ce, pe, ke, Ee, Be, 256, te) | 0;
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, ke);
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, oe);
                  Ie = st[i[e >> 2] & 1](i[Oe >> 2] | 0, k) | 0;
                  if (!Ie) $e(1);
                  ee = 0;
                  while (1) {
                    if ((ee | 0) == (Ee | 0)) break;
                    i[(Ie + (ee << 2)) >> 2] = -1;
                    ee = (ee + 1) | 0;
                  }
                  ce = (Se + 2816) | 0;
                  le = (Se + 2824) | 0;
                  ue = (Ne + 2816) | 0;
                  ge = (Ne + 2816) | 0;
                  ee = 0;
                  k = 0;
                  de = 0;
                  while (1) {
                    if ((de | 0) == (Be | 0)) break;
                    ac(Se | 0, 0, 2820) | 0;
                    p[le >> 3] = se;
                    te = (me + (de << 2)) | 0;
                    oe = 0;
                    ae = k;
                    k = 0;
                    while (1) {
                      if (k >>> 0 >= (i[te >> 2] | 0) >>> 0) break;
                      oe = (Se + (l[(we + (ae << 1)) >> 1] << 2)) | 0;
                      i[oe >> 2] = (i[oe >> 2] | 0) + 1;
                      oe = ((i[ce >> 2] | 0) + 1) | 0;
                      i[ce >> 2] = oe;
                      ae = (ae + 1) | 0;
                      k = (k + 1) | 0;
                    }
                    te = i[((de | 0) == 0 ? Ce : (Ce + ((de + -1) << 2)) | 0) >> 2] | 0;
                    _ = (oe | 0) == 0;
                    if (_) ie = 0.0;
                    else {
                      dc(Ne | 0, Se | 0, 2832) | 0;
                      i[ge >> 2] = (i[ge >> 2] | 0) + (i[(he + ((te * 2832) | 0) + 2816) >> 2] | 0);
                      k = 0;
                      while (1) {
                        if ((k | 0) == 704) break;
                        ke = (Ne + (k << 2)) | 0;
                        i[ke >> 2] = (i[ke >> 2] | 0) + (i[(he + ((te * 2832) | 0) + (k << 2)) >> 2] | 0);
                        k = (k + 1) | 0;
                      }
                      ie = +Xa(Ne);
                      ie = ie - +p[(he + ((te * 2832) | 0) + 2824) >> 3];
                    }
                    k = te;
                    d = 0;
                    while (1) {
                      if ((d | 0) == (fe | 0)) break;
                      ne = (pe + (d << 2)) | 0;
                      te = i[ne >> 2] | 0;
                      if (_) Ae = 0.0;
                      else {
                        dc(Ne | 0, Se | 0, 2832) | 0;
                        i[ue >> 2] = (i[ue >> 2] | 0) + (i[(he + ((te * 2832) | 0) + 2816) >> 2] | 0);
                        oe = 0;
                        while (1) {
                          if ((oe | 0) == 704) break;
                          ke = (Ne + (oe << 2)) | 0;
                          i[ke >> 2] = (i[ke >> 2] | 0) + (i[(he + ((te * 2832) | 0) + (oe << 2)) >> 2] | 0);
                          oe = (oe + 1) | 0;
                        }
                        Ae = +Xa(Ne);
                        Ae = Ae - +p[(he + ((te * 2832) | 0) + 2824) >> 3];
                      }
                      if (Ae < ie) {
                        ie = Ae;
                        k = i[ne >> 2] | 0;
                      }
                      d = (d + 1) | 0;
                    }
                    i[(Ce + (de << 2)) >> 2] = k;
                    k = (Ie + (k << 2)) | 0;
                    if ((i[k >> 2] | 0) == -1) {
                      i[k >> 2] = ee;
                      ee = (ee + 1) | 0;
                    }
                    k = ae;
                    de = (de + 1) | 0;
                  }
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, pe);
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, re);
                  oe = (q + 16) | 0;
                  ee = i[oe >> 2] | 0;
                  if (ee >>> 0 < Be >>> 0) {
                    re = (ee | 0) == 0 ? Be : ee;
                    while (1) {
                      if (re >>> 0 >= Be >>> 0) break;
                      re = re << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re) | 0;
                    if (!k) $e(1);
                    te = i[oe >> 2] | 0;
                    ee = (q + 8) | 0;
                    if (te) dc(k | 0, i[ee >> 2] | 0, te | 0) | 0;
                    rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                    i[ee >> 2] = k;
                    i[oe >> 2] = re;
                  }
                  oe = (q + 20) | 0;
                  ee = i[oe >> 2] | 0;
                  if (ee >>> 0 < Be >>> 0) {
                    re = (ee | 0) == 0 ? Be : ee;
                    while (1) {
                      if (re >>> 0 >= Be >>> 0) break;
                      re = re << 1;
                    }
                    k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re << 2) | 0;
                    if (!k) $e(1);
                    te = i[oe >> 2] | 0;
                    ee = (q + 12) | 0;
                    if (te) dc(k | 0, i[ee >> 2] | 0, (te << 2) | 0) | 0;
                    rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                    i[ee >> 2] = k;
                    i[oe >> 2] = re;
                  } else ee = (q + 12) | 0;
                  oe = (q + 8) | 0;
                  d = 0;
                  k = 0;
                  _ = 0;
                  te = 0;
                  while (1) {
                    if ((te | 0) == (Be | 0)) break;
                    re = (k + (i[(me + (te << 2)) >> 2] | 0)) | 0;
                    ne = (te + 1) | 0;
                    k = i[(Ce + (te << 2)) >> 2] | 0;
                    if ((ne | 0) != (Be | 0) ? (k | 0) == (i[(Ce + (ne << 2)) >> 2] | 0) : 0) {
                      k = re;
                      te = ne;
                      continue;
                    }
                    te = i[(Ie + (k << 2)) >> 2] | 0;
                    ke = te & 255;
                    o[((i[oe >> 2] | 0) + d) >> 0] = ke;
                    i[((i[ee >> 2] | 0) + (d << 2)) >> 2] = re;
                    d = (d + 1) | 0;
                    k = 0;
                    _ = ((_ & 255) > (ke & 255) ? _ & 255 : te & 255) & 255;
                    te = ne;
                  }
                  i[(q + 4) >> 2] = d;
                  i[q >> 2] = (_ & 255) + 1;
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Ie);
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, me);
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Ce);
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Qe);
                  break;
                }
              }
            } else i[q >> 2] = 1;
          } while (0);
          rt[i[j >> 2] & 1](i[Oe >> 2] | 0, we);
          be = st[i[e >> 2] & 1](i[Oe >> 2] | 0, be) | 0;
          if (!be) $e(1);
          Ie = 0;
          k = 0;
          while (1) {
            if ((k | 0) == (s | 0)) break;
            if (((i[(r + (k << 4) + 4) >> 2] & 16777215) | 0) != 0 ? (l[(r + (k << 4) + 12) >> 1] | 0) > 127 : 0) {
              n[(be + (Ie << 1)) >> 1] = n[(r + (k << 4) + 14) >> 1] | 0;
              ee = (Ie + 1) | 0;
            } else ee = Ie;
            Ie = ee;
            k = (k + 1) | 0;
          }
          le = ((((Ie >>> 0) / 544) | 0) + 1) | 0;
          le = le >>> 0 > 50 ? 50 : le;
          if (!Ie) {
            i[$ >> 2] = 1;
            e = i[j >> 2] | 0;
            $ = i[Oe >> 2] | 0;
            rt[e & 1]($, be);
            w = Ue;
            return;
          }
          if (Ie >>> 0 < 128) {
            oe = ($ + 16) | 0;
            k = i[oe >> 2] | 0;
            ne = ($ + 4) | 0;
            ee = i[ne >> 2] | 0;
            te = (ee + 1) | 0;
            if (k >>> 0 < te >>> 0) {
              re = (k | 0) == 0 ? te : k;
              while (1) {
                if (re >>> 0 >= te >>> 0) break;
                re = re << 1;
              }
              k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re) | 0;
              if (!k) $e(1);
              te = i[oe >> 2] | 0;
              ee = ($ + 8) | 0;
              if (te) dc(k | 0, i[ee >> 2] | 0, te | 0) | 0;
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
              i[ee >> 2] = k;
              i[oe >> 2] = re;
              ee = i[ne >> 2] | 0;
            }
            oe = ($ + 20) | 0;
            k = i[oe >> 2] | 0;
            te = (ee + 1) | 0;
            if (k >>> 0 < te >>> 0) {
              re = (k | 0) == 0 ? te : k;
              while (1) {
                if (re >>> 0 >= te >>> 0) break;
                re = re << 1;
              }
              ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re << 2) | 0;
              if (!ee) $e(1);
              te = i[oe >> 2] | 0;
              k = ($ + 12) | 0;
              if (te) dc(ee | 0, i[k >> 2] | 0, (te << 2) | 0) | 0;
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[k >> 2] | 0);
              i[k >> 2] = ee;
              i[oe >> 2] = re;
              ee = i[ne >> 2] | 0;
            } else k = ($ + 12) | 0;
            i[$ >> 2] = 1;
            o[((i[($ + 8) >> 2] | 0) + ee) >> 0] = 0;
            i[((i[k >> 2] | 0) + (i[ne >> 2] << 2)) >> 2] = Ie;
            i[ne >> 2] = (i[ne >> 2] | 0) + 1;
            e = i[j >> 2] | 0;
            $ = i[Oe >> 2] | 0;
            rt[e & 1]($, be);
            w = Ue;
            return;
          }
          Ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (le * 2096) | 0) | 0;
          if (!Ee) $e(1);
          ee = 0;
          while (1) {
            if ((ee | 0) == (le | 0)) break;
            ac((Ee + ((ee * 2096) | 0)) | 0, 0, 2080) | 0;
            i[(Ee + ((ee * 2096) | 0) + 2080) >> 2] = 0;
            p[(Ee + ((ee * 2096) | 0) + 2088) >> 3] = se;
            ee = (ee + 1) | 0;
          }
          re = ((Ie >>> 0) / (le >>> 0)) | 0;
          oe = (Ie + -41) | 0;
          k = 7;
          ne = 0;
          while (1) {
            if ((ne | 0) == (le | 0)) break;
            ee = (((Pe(Ie, ne) | 0) >>> 0) / (le >>> 0)) | 0;
            if (ne) {
              k = (k * 16807) | 0;
              k = (k | 0) == 0 ? 1 : k;
              ee = (ee + ((k >>> 0) % (re >>> 0) | 0)) | 0;
            }
            te = (Ee + ((ne * 2096) | 0) + 2080) | 0;
            i[te >> 2] = (i[te >> 2] | 0) + 40;
            te = (be + ((((ee + 40) | 0) >>> 0 < Ie >>> 0 ? ee : oe) << 1)) | 0;
            ee = 41;
            while (1) {
              ee = (ee + -1) | 0;
              if (!ee) break;
              s = (Ee + ((ne * 2096) | 0) + (l[te >> 1] << 2)) | 0;
              i[s >> 2] = (i[s >> 2] | 0) + 1;
              te = (te + 2) | 0;
            }
            ne = (ne + 1) | 0;
          }
          i[Ne >> 2] = 7;
          re = (((((Ie << 1) >>> 0) / 40) | 0) + 100 + le + -1) | 0;
          re = (re - ((re >>> 0) % (le >>> 0) | 0)) | 0;
          oe = (Se + 2080) | 0;
          ne = (Se + 2088) | 0;
          d = Ie >>> 0 > 40;
          _ = (Ie + -39) | 0;
          ae = (Se + 2080) | 0;
          ce = 0;
          while (1) {
            if (ce >>> 0 >= re >>> 0) break;
            ac(Se | 0, 0, 2084) | 0;
            p[ne >> 3] = se;
            if (d) {
              ee = ((i[Ne >> 2] | 0) * 16807) | 0;
              s = (ee | 0) == 0;
              i[Ne >> 2] = s ? 1 : ee;
              k = 40;
              ee = ((s ? 1 : ee) >>> 0) % (_ >>> 0) | 0;
            } else {
              k = Ie;
              ee = 0;
            }
            i[ae >> 2] = (i[ae >> 2] | 0) + k;
            te = (be + (ee << 1)) | 0;
            ee = (k + 1) | 0;
            while (1) {
              ee = (ee + -1) | 0;
              if (!ee) break;
              s = (Se + (l[te >> 1] << 2)) | 0;
              i[s >> 2] = (i[s >> 2] | 0) + 1;
              te = (te + 2) | 0;
            }
            ee = (ce >>> 0) % (le >>> 0) | 0;
            k = (Ee + ((ee * 2096) | 0) + 2080) | 0;
            i[k >> 2] = (i[k >> 2] | 0) + (i[oe >> 2] | 0);
            k = 0;
            while (1) {
              if ((k | 0) == 520) break;
              s = (Ee + ((ee * 2096) | 0) + (k << 2)) | 0;
              i[s >> 2] = (i[s >> 2] | 0) + (i[(Se + (k << 2)) >> 2] | 0);
              k = (k + 1) | 0;
            }
            ce = (ce + 1) | 0;
          }
          Qe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, Ie) | 0;
          if (!Qe) $e(1);
          de = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (le * 4160) | 0) | 0;
          if (!de) $e(1);
          fe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, le << 3) | 0;
          if (!fe) $e(1);
          he = Pe(Ie, ((le + 7) | 0) >>> 3) | 0;
          he = st[i[e >> 2] & 1](i[Oe >> 2] | 0, he) | 0;
          if (!he) $e(1);
          pe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, le << 1) | 0;
          if (!pe) $e(1);
          ce = (i[(M + 4) >> 2] | 0) < 11 ? 3 : 10;
          ue = (Ie + -1) | 0;
          ge = (Qe + ue) | 0;
          Be = 0;
          ae = 0;
          e: while (1) {
            if (ae >>> 0 >= ce >>> 0) {
              d = 631;
              break;
            }
            _ = ((le + 7) | 0) >>> 3;
            if (le >>> 0 >= 257) {
              d = 568;
              break;
            }
            t: do {
              if (le >>> 0 < 2) {
                ee = 0;
                while (1) {
                  if ((ee | 0) == (Ie | 0)) {
                    re = 1;
                    break t;
                  }
                  o[(Qe + ee) >> 0] = 0;
                  ee = (ee + 1) | 0;
                }
              } else {
                ac(de | 0, 0, (le * 4160) | 0) | 0;
                k = 0;
                while (1) {
                  if ((k | 0) == (le | 0)) {
                    ee = 520;
                    break;
                  }
                  ee = i[(Ee + ((k * 2096) | 0) + 2080) >> 2] | 0;
                  if (ee >>> 0 < 256) ie = +h[(19516 + (ee << 2)) >> 2];
                  else ie = +Xb(+(ee >>> 0));
                  p[(de + (k << 3)) >> 3] = ie;
                  k = (k + 1) | 0;
                }
                r: while (1) {
                  if (!ee) break;
                  ee = (ee + -1) | 0;
                  te = Pe(ee, le) | 0;
                  re = 0;
                  while (1) {
                    if ((re | 0) == (le | 0)) continue r;
                    Ae = +p[(de + (re << 3)) >> 3];
                    k = i[(Ee + ((re * 2096) | 0) + (ee << 2)) >> 2] | 0;
                    do {
                      if (k)
                        if (k >>> 0 < 256) {
                          ie = +h[(19516 + (k << 2)) >> 2];
                          break;
                        } else {
                          ie = +Xb(+(k >>> 0));
                          break;
                        }
                      else ie = -2.0;
                    } while (0);
                    p[(de + ((te + re) << 3)) >> 3] = Ae - ie;
                    re = (re + 1) | 0;
                  }
                }
                ac(fe | 0, 0, (le << 3) | 0) | 0;
                ac(he | 0, 0, Pe(Ie, _) | 0) | 0;
                re = 0;
                while (1) {
                  if (re >>> 0 >= Ie >>> 0) break;
                  ee = Pe(l[(be + (re << 1)) >> 1] | 0, le) | 0;
                  k = (Qe + re) | 0;
                  Ae = 1e99;
                  te = 0;
                  while (1) {
                    if ((te | 0) == (le | 0)) break;
                    M = (fe + (te << 3)) | 0;
                    ie = +p[M >> 3] + +p[(de + ((ee + te) << 3)) >> 3];
                    p[M >> 3] = ie;
                    if (ie < Ae) o[k >> 0] = te;
                    else ie = Ae;
                    Ae = ie;
                    te = (te + 1) | 0;
                  }
                  k = Pe(re, _) | 0;
                  if (re >>> 0 < 2e3) ie = ((+(re >>> 0) * 0.07) / 2.0e3 + 0.77) * 14.6;
                  else ie = 14.6;
                  te = 0;
                  while (1) {
                    if (te >>> 0 >= le >>> 0) break;
                    ee = (fe + (te << 3)) | 0;
                    Ge = +p[ee >> 3] - Ae;
                    p[ee >> 3] = Ge;
                    if (Ge >= ie) {
                      p[ee >> 3] = ie;
                      ee = te >>> 3;
                      if (ee >>> 0 >= _ >>> 0) {
                        d = 599;
                        break e;
                      }
                      M = (he + (k + ee)) | 0;
                      o[M >> 0] = o[M >> 0] | ((1 << (te & 7)) & 255);
                    }
                    te = (te + 1) | 0;
                  }
                  re = (re + 1) | 0;
                }
                k = Pe(ue, _) | 0;
                re = ue;
                ee = o[ge >> 0] | 0;
                te = 1;
                while (1) {
                  if (!re) {
                    re = te;
                    break t;
                  }
                  oe = ee & 255;
                  ne = oe >>> 3;
                  if (ne >>> 0 >= _ >>> 0) {
                    d = 606;
                    break e;
                  }
                  d = (re + -1) | 0;
                  k = (k - _) | 0;
                  re = (Qe + d) | 0;
                  if (((o[(he + (k + ne)) >> 0] & ((1 << (oe & 7)) & 255)) << 24) >> 24) {
                    s = o[re >> 0] | 0;
                    M = (ee << 24) >> 24 == (s << 24) >> 24;
                    ee = M ? ee : s;
                    te = M ? te : (te + 1) | 0;
                  }
                  o[re >> 0] = ee;
                  re = d;
                }
              }
            } while (0);
            ee = 0;
            while (1) {
              if ((ee | 0) == (le | 0)) {
                ee = 0;
                te = 0;
                break;
              }
              n[(pe + (ee << 1)) >> 1] = 256;
              ee = (ee + 1) | 0;
            }
            while (1) {
              if (te >>> 0 >= Ie >>> 0) {
                k = 0;
                break;
              }
              k = a[(Qe + te) >> 0] | 0;
              if (k >>> 0 >= le >>> 0) {
                d = 615;
                break e;
              }
              k = (pe + (k << 1)) | 0;
              if ((n[k >> 1] | 0) == 256) {
                n[k >> 1] = ee;
                ee = ((ee + 1) << 16) >> 16;
              }
              te = (te + 1) | 0;
            }
            while (1) {
              if (k >>> 0 >= Ie >>> 0) break;
              s = (Qe + k) | 0;
              M = n[(pe + (a[s >> 0] << 1)) >> 1] | 0;
              o[s >> 0] = M;
              if ((M & 255) >>> 0 >= le >>> 0) {
                d = 621;
                break e;
              }
              k = (k + 1) | 0;
            }
            te = ee & 65535;
            if (te >>> 0 > le >>> 0) {
              d = 624;
              break;
            }
            ee = ee & 65535;
            k = 0;
            while (1) {
              if ((k | 0) == (ee | 0)) {
                ee = 0;
                break;
              }
              ac((Ee + ((k * 2096) | 0)) | 0, 0, 2080) | 0;
              i[(Ee + ((k * 2096) | 0) + 2080) >> 2] = 0;
              p[(Ee + ((k * 2096) | 0) + 2088) >> 3] = se;
              k = (k + 1) | 0;
            }
            while (1) {
              if ((ee | 0) == (Ie | 0)) break;
              M = a[(Qe + ee) >> 0] | 0;
              s = (Ee + ((M * 2096) | 0) + (l[(be + (ee << 1)) >> 1] << 2)) | 0;
              i[s >> 2] = (i[s >> 2] | 0) + 1;
              M = (Ee + ((M * 2096) | 0) + 2080) | 0;
              i[M >> 2] = (i[M >> 2] | 0) + 1;
              ee = (ee + 1) | 0;
            }
            Be = re;
            le = te;
            ae = (ae + 1) | 0;
          }
          if ((d | 0) == 568) et(404083, 403848, 80, 404105);
          else if ((d | 0) == 599) et(404124, 403848, 130, 404105);
          else if ((d | 0) == 606) et(404145, 403848, 141, 404105);
          else if ((d | 0) == 615) et(404005, 403848, 165, 404035);
          else if ((d | 0) == 621) et(404005, 403848, 172, 404035);
          else if ((d | 0) == 624) et(404057, 403848, 174, 404035);
          else if ((d | 0) == 631) {
            rt[i[j >> 2] & 1](i[Oe >> 2] | 0, de);
            rt[i[j >> 2] & 1](i[Oe >> 2] | 0, fe);
            rt[i[j >> 2] & 1](i[Oe >> 2] | 0, he);
            rt[i[j >> 2] & 1](i[Oe >> 2] | 0, pe);
            rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Ee);
            ee = Be << 2;
            Ce = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ee) | 0;
            if (!Ce) $e(1);
            me = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ee) | 0;
            if (!me) $e(1);
            ne = (((Be << 4) + 1008) | 0) >>> 6;
            M = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (ne * 2096) | 0) | 0;
            re = M;
            if (!M) $e(1);
            M = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ne << 2) | 0;
            oe = M;
            if (!M) $e(1);
            fe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ((Be >>> 0 < 64 ? Be : 64) * 2096) | 0) | 0;
            if (!fe) $e(1);
            he = st[i[e >> 2] & 1](i[Oe >> 2] | 0, 49176) | 0;
            if (!he) $e(1);
            ac(De | 0, 0, 256) | 0;
            ac(Re | 0, 0, 256) | 0;
            ac(Fe | 0, 0, 256) | 0;
            ac(Te | 0, 0, 256) | 0;
            ac(me | 0, 0, ee | 0) | 0;
            k = 0;
            te = 0;
            while (1) {
              if (te >>> 0 >= Ie >>> 0) break;
              if (k >>> 0 >= Be >>> 0) {
                d = 646;
                break;
              }
              ee = (me + (k << 2)) | 0;
              i[ee >> 2] = (i[ee >> 2] | 0) + 1;
              ee = (te + 1) | 0;
              if ((ee | 0) != (Ie | 0) ? (o[(Qe + te) >> 0] | 0) == (o[(Qe + ee) >> 0] | 0) : 0) {
                te = ee;
                continue;
              }
              k = (k + 1) | 0;
              te = ee;
            }
            if ((d | 0) == 646) et(403825, 403848, 231, 403889);
            if ((k | 0) != (Be | 0)) et(403911, 403848, 237, 403889);
            le = ne;
            ce = ne;
            Ie = 0;
            ee = 0;
            de = 0;
            while (1) {
              if (Be >>> 0 <= de >>> 0) {
                d = 688;
                break;
              }
              ge = (Be - de) | 0;
              ge = ge >>> 0 < 64 ? ge : 64;
              _ = 0;
              while (1) {
                if ((_ | 0) == (ge | 0)) break;
                te = (fe + ((_ * 2096) | 0)) | 0;
                ac(te | 0, 0, 2080) | 0;
                ne = (fe + ((_ * 2096) | 0) + 2080) | 0;
                i[ne >> 2] = 0;
                p[(fe + ((_ * 2096) | 0) + 2088) >> 3] = se;
                d = (me + ((de + _) << 2)) | 0;
                k = 0;
                while (1) {
                  if (k >>> 0 >= (i[d >> 2] | 0) >>> 0) break;
                  M = (fe + ((_ * 2096) | 0) + (l[(be + (ee << 1)) >> 1] << 2)) | 0;
                  i[M >> 2] = (i[M >> 2] | 0) + 1;
                  i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                  ee = (ee + 1) | 0;
                  k = (k + 1) | 0;
                }
                p[(fe + ((_ * 2096) | 0) + 2088) >> 3] = +Ya(te);
                i[(Re + (_ << 2)) >> 2] = _;
                i[(Fe + (_ << 2)) >> 2] = _;
                i[(De + (_ << 2)) >> 2] = 1;
                _ = (_ + 1) | 0;
              }
              ue = tb(fe, De, Fe, Re, he, ge, ge, 64, 2048) | 0;
              k = (Ie + ue) | 0;
              if (le >>> 0 < k >>> 0) {
                te = (le | 0) == 0;
                ne = te ? k : le;
                while (1) {
                  if (ne >>> 0 >= k >>> 0) break;
                  ne = ne << 1;
                }
                k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (ne * 2096) | 0) | 0;
                if (!k) {
                  d = 665;
                  break;
                }
                if (!te) dc(k | 0, re | 0, (le * 2096) | 0) | 0;
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, re);
                re = k;
                le = ne;
              }
              k = (Ie + ue) | 0;
              if (ce >>> 0 < k >>> 0) {
                te = (ce | 0) == 0;
                ne = te ? k : ce;
                while (1) {
                  if (ne >>> 0 >= k >>> 0) break;
                  ne = ne << 1;
                }
                k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, ne << 2) | 0;
                if (!k) {
                  d = 674;
                  break;
                }
                if (!te) dc(k | 0, oe | 0, (ce << 2) | 0) | 0;
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, oe);
                oe = k;
                ce = ne;
              }
              k = re;
              te = oe;
              ae = (ue + Ie) | 0;
              ne = Ie;
              d = Ie;
              _ = 0;
              while (1) {
                if ((_ | 0) == (ue | 0)) {
                  k = 0;
                  break;
                }
                M = (Re + (_ << 2)) | 0;
                s = i[M >> 2] | 0;
                dc((k + ((ne * 2096) | 0)) | 0, (fe + ((s * 2096) | 0)) | 0, 2096) | 0;
                i[(te + (d << 2)) >> 2] = i[(De + (s << 2)) >> 2];
                i[(Te + (i[M >> 2] << 2)) >> 2] = _;
                ne = (ne + 1) | 0;
                d = (d + 1) | 0;
                _ = (_ + 1) | 0;
              }
              while (1) {
                if ((k | 0) == (ge | 0)) break;
                i[(Ce + ((de + k) << 2)) >> 2] = Ie + (i[(Te + (i[(Fe + (k << 2)) >> 2] << 2)) >> 2] | 0);
                k = (k + 1) | 0;
              }
              k = (ue + Ie) | 0;
              if (((Ie + ue) | 0) != (k | 0)) {
                d = 684;
                break;
              }
              if ((k | 0) != (ae | 0)) {
                d = 686;
                break;
              }
              Ie = k;
              de = (de + 64) | 0;
            }
            if ((d | 0) == 665) $e(1);
            else if ((d | 0) == 674) $e(1);
            else if ((d | 0) == 684) et(403935, 403848, 273, 403889);
            else if ((d | 0) == 686) et(403969, 403848, 274, 403889);
            else if ((d | 0) == 688) {
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, fe);
              Fe = Ie << 6;
              te = Pe(Ie >>> 1, Ie) | 0;
              te = Fe >>> 0 < te >>> 0 ? Fe : te;
              do {
                if (((te + 1) | 0) >>> 0 > 2049) {
                  rt[i[j >> 2] & 1](i[Oe >> 2] | 0, he);
                  ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, (((te * 24) | 0) + 24) | 0) | 0;
                  if (ee) {
                    ve = ee;
                    break;
                  }
                  $e(1);
                } else ve = he;
              } while (0);
              k = Ie << 2;
              pe = st[i[e >> 2] & 1](i[Oe >> 2] | 0, k) | 0;
              if (!pe) $e(1);
              ee = 0;
              while (1) {
                if ((ee | 0) == (Ie | 0)) break;
                i[(pe + (ee << 2)) >> 2] = ee;
                ee = (ee + 1) | 0;
              }
              he = re;
              fe = tb(he, oe, Ce, pe, ve, Ie, Be, 256, te) | 0;
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, ve);
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, oe);
              Ee = st[i[e >> 2] & 1](i[Oe >> 2] | 0, k) | 0;
              if (!Ee) $e(1);
              ee = 0;
              while (1) {
                if ((ee | 0) == (Ie | 0)) break;
                i[(Ee + (ee << 2)) >> 2] = -1;
                ee = (ee + 1) | 0;
              }
              ce = (Se + 2080) | 0;
              le = (Se + 2088) | 0;
              ue = (Ne + 2080) | 0;
              ge = (Ne + 2080) | 0;
              ee = 0;
              k = 0;
              de = 0;
              while (1) {
                if ((de | 0) == (Be | 0)) break;
                ac(Se | 0, 0, 2084) | 0;
                p[le >> 3] = se;
                te = (me + (de << 2)) | 0;
                oe = 0;
                ae = k;
                k = 0;
                while (1) {
                  if (k >>> 0 >= (i[te >> 2] | 0) >>> 0) break;
                  oe = (Se + (l[(be + (ae << 1)) >> 1] << 2)) | 0;
                  i[oe >> 2] = (i[oe >> 2] | 0) + 1;
                  oe = ((i[ce >> 2] | 0) + 1) | 0;
                  i[ce >> 2] = oe;
                  ae = (ae + 1) | 0;
                  k = (k + 1) | 0;
                }
                te = i[((de | 0) == 0 ? Ce : (Ce + ((de + -1) << 2)) | 0) >> 2] | 0;
                _ = (oe | 0) == 0;
                if (_) ie = 0.0;
                else {
                  dc(Ne | 0, Se | 0, 2096) | 0;
                  i[ge >> 2] = (i[ge >> 2] | 0) + (i[(he + ((te * 2096) | 0) + 2080) >> 2] | 0);
                  k = 0;
                  while (1) {
                    if ((k | 0) == 520) break;
                    ve = (Ne + (k << 2)) | 0;
                    i[ve >> 2] = (i[ve >> 2] | 0) + (i[(he + ((te * 2096) | 0) + (k << 2)) >> 2] | 0);
                    k = (k + 1) | 0;
                  }
                  ie = +Ya(Ne);
                  ie = ie - +p[(he + ((te * 2096) | 0) + 2088) >> 3];
                }
                k = te;
                d = 0;
                while (1) {
                  if ((d | 0) == (fe | 0)) break;
                  ne = (pe + (d << 2)) | 0;
                  te = i[ne >> 2] | 0;
                  if (_) Ae = 0.0;
                  else {
                    dc(Ne | 0, Se | 0, 2096) | 0;
                    i[ue >> 2] = (i[ue >> 2] | 0) + (i[(he + ((te * 2096) | 0) + 2080) >> 2] | 0);
                    oe = 0;
                    while (1) {
                      if ((oe | 0) == 520) break;
                      ve = (Ne + (oe << 2)) | 0;
                      i[ve >> 2] = (i[ve >> 2] | 0) + (i[(he + ((te * 2096) | 0) + (oe << 2)) >> 2] | 0);
                      oe = (oe + 1) | 0;
                    }
                    Ae = +Ya(Ne);
                    Ae = Ae - +p[(he + ((te * 2096) | 0) + 2088) >> 3];
                  }
                  if (Ae < ie) {
                    ie = Ae;
                    k = i[ne >> 2] | 0;
                  }
                  d = (d + 1) | 0;
                }
                i[(Ce + (de << 2)) >> 2] = k;
                k = (Ee + (k << 2)) | 0;
                if ((i[k >> 2] | 0) == -1) {
                  i[k >> 2] = ee;
                  ee = (ee + 1) | 0;
                }
                k = ae;
                de = (de + 1) | 0;
              }
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, pe);
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, re);
              oe = ($ + 16) | 0;
              ee = i[oe >> 2] | 0;
              if (ee >>> 0 < Be >>> 0) {
                re = (ee | 0) == 0 ? Be : ee;
                while (1) {
                  if (re >>> 0 >= Be >>> 0) break;
                  re = re << 1;
                }
                k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re) | 0;
                if (!k) $e(1);
                te = i[oe >> 2] | 0;
                ee = ($ + 8) | 0;
                if (te) dc(k | 0, i[ee >> 2] | 0, te | 0) | 0;
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                i[ee >> 2] = k;
                i[oe >> 2] = re;
              }
              oe = ($ + 20) | 0;
              ee = i[oe >> 2] | 0;
              if (ee >>> 0 < Be >>> 0) {
                re = (ee | 0) == 0 ? Be : ee;
                while (1) {
                  if (re >>> 0 >= Be >>> 0) break;
                  re = re << 1;
                }
                k = st[i[e >> 2] & 1](i[Oe >> 2] | 0, re << 2) | 0;
                if (!k) $e(1);
                te = i[oe >> 2] | 0;
                ee = ($ + 12) | 0;
                if (te) dc(k | 0, i[ee >> 2] | 0, (te << 2) | 0) | 0;
                rt[i[j >> 2] & 1](i[Oe >> 2] | 0, i[ee >> 2] | 0);
                i[ee >> 2] = k;
                i[oe >> 2] = re;
              } else ee = ($ + 12) | 0;
              oe = ($ + 8) | 0;
              d = 0;
              k = 0;
              _ = 0;
              te = 0;
              while (1) {
                if ((te | 0) == (Be | 0)) break;
                re = (k + (i[(me + (te << 2)) >> 2] | 0)) | 0;
                ne = (te + 1) | 0;
                k = i[(Ce + (te << 2)) >> 2] | 0;
                if ((ne | 0) != (Be | 0) ? (k | 0) == (i[(Ce + (ne << 2)) >> 2] | 0) : 0) {
                  k = re;
                  te = ne;
                  continue;
                }
                te = i[(Ee + (k << 2)) >> 2] | 0;
                e = te & 255;
                o[((i[oe >> 2] | 0) + d) >> 0] = e;
                i[((i[ee >> 2] | 0) + (d << 2)) >> 2] = re;
                d = (d + 1) | 0;
                k = 0;
                _ = ((_ & 255) > (e & 255) ? _ & 255 : te & 255) & 255;
                te = ne;
              }
              i[($ + 4) >> 2] = d;
              i[$ >> 2] = (_ & 255) + 1;
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Ee);
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, me);
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Ce);
              rt[i[j >> 2] & 1](i[Oe >> 2] | 0, Qe);
              e = i[j >> 2] | 0;
              $ = i[Oe >> 2] | 0;
              rt[e & 1]($, be);
              w = Ue;
              return;
            }
          }
        }
        function _a(e, r, s, n, d) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          d = d | 0;
          var h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0;
          ae = w;
          w = (w + 1552) | 0;
          ie = (ae + 840) | 0;
          Ae = (ae + 136) | 0;
          se = (ae + 72) | 0;
          oe = (ae + 112) | 0;
          ne = (ae + 76) | 0;
          te = ae;
          i[se >> 2] = 0;
          p = oe;
          k = (p + 18) | 0;
          do {
            o[p >> 0] = 0;
            p = (p + 1) | 0;
          } while ((p | 0) < (k | 0));
          p = te;
          k = (p + 72) | 0;
          do {
            i[p >> 2] = 0;
            p = (p + 4) | 0;
          } while ((p | 0) < (k | 0));
          if (r >>> 0 < 705) {
            ee = r;
            h = 0;
          } else et(404299, 404333, 308, 404371);
          while (1) {
            if (h >>> 0 >= r >>> 0) break;
            if (o[(e + (r - h + -1)) >> 0] | 0) break;
            ee = (ee + -1) | 0;
            h = (h + 1) | 0;
          }
          if (r >>> 0 > 50) {
            k = 1;
            r = 1;
            q = 0;
            _ = 0;
            M = 0;
            while (1) {
              if (q >>> 0 >= ee >>> 0) break;
              p = o[(e + q) >> 0] | 0;
              j = 1;
              h = q;
              while (1) {
                h = (h + 1) | 0;
                if (h >>> 0 >= ee >>> 0) break;
                if ((o[(e + h) >> 0] | 0) != (p << 24) >> 24) break;
                j = (j + 1) | 0;
              }
              if (j >>> 0 > 2) {
                $ = (p << 24) >> 24 == 0;
                r = $ ? (r + 1) | 0 : r;
                h = $ ? (M + j) | 0 : M;
                if (j >>> 0 > 3 ? !$ : 0) {
                  k = (k + 1) | 0;
                  p = (_ + j) | 0;
                } else p = _;
              } else {
                p = _;
                h = M;
              }
              q = (q + j) | 0;
              _ = p;
              M = h;
            }
            h = (_ >>> 0 > (k << 1) >>> 0) & 1;
            r = (M >>> 0 > (r << 1) >>> 0) & 1;
          } else {
            h = 0;
            r = 0;
          }
          $ = (r << 24) >> 24 == 0;
          j = (h << 24) >> 24 == 0;
          _ = 8;
          q = 0;
          e: while (1) {
            if (q >>> 0 >= ee >>> 0) break;
            M = o[(e + q) >> 0] | 0;
            p = (M << 24) >> 24 == 0;
            if (p)
              if ($) {
                r = 1;
                re = 30;
              } else {
                h = q;
                r = 1;
                re = 23;
              }
            else if (j) {
              r = 1;
              re = 43;
            } else {
              h = q;
              r = 1;
              re = 23;
            }
            t: do {
              if ((re | 0) == 23) {
                while (1) {
                  re = 0;
                  h = (h + 1) | 0;
                  if (h >>> 0 >= ee >>> 0) break;
                  if ((o[(e + h) >> 0] | 0) != (M << 24) >> 24) break;
                  r = (r + 1) | 0;
                  re = 23;
                }
                if (!p)
                  if (!r) {
                    re = 42;
                    break e;
                  } else {
                    re = 43;
                    break;
                  }
                if ((r | 0) != 11)
                  if (r >>> 0 < 3) {
                    re = 30;
                    break;
                  } else k = r;
                else {
                  o[(ie + (i[se >> 2] | 0)) >> 0] = 0;
                  o[(Ae + (i[se >> 2] | 0)) >> 0] = 0;
                  i[se >> 2] = (i[se >> 2] | 0) + 1;
                  k = 10;
                }
                p = i[se >> 2] | 0;
                h = p;
                k = (k + -3) | 0;
                while (1) {
                  o[(ie + h) >> 0] = 17;
                  o[(Ae + (i[se >> 2] | 0)) >> 0] = k & 7;
                  h = ((i[se >> 2] | 0) + 1) | 0;
                  i[se >> 2] = h;
                  k = k >>> 3;
                  if (!k) {
                    k = p;
                    break;
                  }
                  k = (k + -1) | 0;
                }
                while (1) {
                  h = (h + -1) | 0;
                  if (k >>> 0 >= h >>> 0) break;
                  le = (ie + k) | 0;
                  ce = o[le >> 0] | 0;
                  M = (ie + h) | 0;
                  o[le >> 0] = o[M >> 0] | 0;
                  o[M >> 0] = ce;
                  k = (k + 1) | 0;
                }
                h = i[se >> 2] | 0;
                while (1) {
                  h = (h + -1) | 0;
                  if (p >>> 0 >= h >>> 0) {
                    h = _;
                    break t;
                  }
                  M = (Ae + p) | 0;
                  ce = o[M >> 0] | 0;
                  le = (Ae + h) | 0;
                  o[M >> 0] = o[le >> 0] | 0;
                  o[le >> 0] = ce;
                  p = (p + 1) | 0;
                }
              }
            } while (0);
            t: do {
              if ((re | 0) == 30) {
                re = 0;
                h = 0;
                while (1) {
                  if ((h | 0) == (r | 0)) {
                    h = _;
                    break t;
                  }
                  o[(ie + (i[se >> 2] | 0)) >> 0] = 0;
                  o[(Ae + (i[se >> 2] | 0)) >> 0] = 0;
                  i[se >> 2] = (i[se >> 2] | 0) + 1;
                  h = (h + 1) | 0;
                }
              } else if ((re | 0) == 43) {
                re = 0;
                if ((_ << 24) >> 24 == (M << 24) >> 24) h = r;
                else {
                  o[(ie + (i[se >> 2] | 0)) >> 0] = M;
                  o[(Ae + (i[se >> 2] | 0)) >> 0] = 0;
                  i[se >> 2] = (i[se >> 2] | 0) + 1;
                  h = (r + -1) | 0;
                }
                if ((h | 0) == 7) {
                  o[(ie + (i[se >> 2] | 0)) >> 0] = M;
                  o[(Ae + (i[se >> 2] | 0)) >> 0] = 0;
                  i[se >> 2] = (i[se >> 2] | 0) + 1;
                  h = (h + -1) | 0;
                }
                if (h >>> 0 < 3) {
                  p = 0;
                  while (1) {
                    if ((p | 0) == (h | 0)) {
                      h = M;
                      break t;
                    }
                    o[(ie + (i[se >> 2] | 0)) >> 0] = M;
                    o[(Ae + (i[se >> 2] | 0)) >> 0] = 0;
                    i[se >> 2] = (i[se >> 2] | 0) + 1;
                    p = (p + 1) | 0;
                  }
                }
                p = i[se >> 2] | 0;
                _ = p;
                k = (h + -3) | 0;
                while (1) {
                  o[(ie + _) >> 0] = 16;
                  o[(Ae + (i[se >> 2] | 0)) >> 0] = k & 3;
                  h = ((i[se >> 2] | 0) + 1) | 0;
                  i[se >> 2] = h;
                  k = k >>> 2;
                  if (!k) {
                    k = p;
                    break;
                  }
                  _ = h;
                  k = (k + -1) | 0;
                }
                while (1) {
                  h = (h + -1) | 0;
                  if (k >>> 0 >= h >>> 0) break;
                  _ = (ie + k) | 0;
                  ce = o[_ >> 0] | 0;
                  le = (ie + h) | 0;
                  o[_ >> 0] = o[le >> 0] | 0;
                  o[le >> 0] = ce;
                  k = (k + 1) | 0;
                }
                h = i[se >> 2] | 0;
                while (1) {
                  h = (h + -1) | 0;
                  if (p >>> 0 >= h >>> 0) {
                    h = M;
                    break t;
                  }
                  _ = (Ae + p) | 0;
                  ce = o[_ >> 0] | 0;
                  le = (Ae + h) | 0;
                  o[_ >> 0] = o[le >> 0] | 0;
                  o[le >> 0] = ce;
                  p = (p + 1) | 0;
                }
              }
            } while (0);
            _ = h;
            q = (q + r) | 0;
          }
          if ((re | 0) == 42) et(406724, 406674, 168, 406740);
          r = i[se >> 2] | 0;
          h = 0;
          while (1) {
            if ((h | 0) == (r | 0)) {
              $ = 0;
              h = 0;
              p = 0;
              break;
            }
            le = (te + (a[(ie + h) >> 0] << 2)) | 0;
            i[le >> 2] = (i[le >> 2] | 0) + 1;
            h = (h + 1) | 0;
          }
          while (1) {
            if (p >>> 0 >= 18) {
              q = h;
              break;
            }
            if (i[(te + (p << 2)) >> 2] | 0)
              if (h)
                if ((h | 0) == 1) {
                  q = 2;
                  break;
                } else r = $;
              else {
                r = p;
                h = 1;
              }
            else r = $;
            $ = r;
            p = (p + 1) | 0;
          }
          Hb(te, 18, 5, s, oe);
          Jb(oe, 18, ne);
          e: do {
            if ((q | 0) > 1) {
              h = 18;
              while (1) {
                if (!h) break e;
                r = (h + -1) | 0;
                if (!(o[(oe + (a[(405371 + r) >> 0] | 0)) >> 0] | 0)) h = r;
                else break;
              }
            } else h = 18;
          } while (0);
          if ((o[(oe + 1) >> 0] | 0) == 0 ? (o[(oe + 2) >> 0] | 0) == 0 : 0) r = (o[(oe + 3) >> 0] | 0) == 0 ? 3 : 2;
          else r = 0;
          s = i[n >> 2] | 0;
          j = (d + (s >>> 3)) | 0;
          ce = a[j >> 0] | 0;
          s = cc(r | 0, 0, (s & 7) | 0) | 0;
          le = de;
          s = ce | s;
          ce = j;
          o[ce >> 0] = s;
          o[(ce + 1) >> 0] = s >> 8;
          o[(ce + 2) >> 0] = s >> 16;
          o[(ce + 3) >> 0] = s >> 24;
          j = (j + 4) | 0;
          o[j >> 0] = le;
          o[(j + 1) >> 0] = le >> 8;
          o[(j + 2) >> 0] = le >> 16;
          o[(j + 3) >> 0] = le >> 24;
          j = ((i[n >> 2] | 0) + 2) | 0;
          i[n >> 2] = j;
          while (1) {
            if (r >>> 0 >= h >>> 0) break;
            k = a[(oe + (a[(405371 + r) >> 0] | 0)) >> 0] | 0;
            p = o[(405389 + k) >> 0] | 0;
            k = a[(405395 + k) >> 0] | 0;
            _ = (d + (j >>> 3)) | 0;
            M = a[_ >> 0] | 0;
            le = bc(k | 0, 0, (p & 255) | 0) | 0;
            if (!(((le | 0) == 0) & ((de | 0) == 0))) {
              re = 76;
              break;
            }
            te = cc(k | 0, 0, (j & 7) | 0) | 0;
            ce = de;
            te = M | te;
            le = _;
            s = le;
            o[s >> 0] = te;
            o[(s + 1) >> 0] = te >> 8;
            o[(s + 2) >> 0] = te >> 16;
            o[(s + 3) >> 0] = te >> 24;
            le = (le + 4) | 0;
            o[le >> 0] = ce;
            o[(le + 1) >> 0] = ce >> 8;
            o[(le + 2) >> 0] = ce >> 16;
            o[(le + 3) >> 0] = ce >> 24;
            le = ((i[n >> 2] | 0) + (p & 255)) | 0;
            i[n >> 2] = le;
            j = le;
            r = (r + 1) | 0;
          }
          if ((re | 0) == 76) et(406196, 406218, 54, 406251);
          if ((q | 0) == 1) o[(oe + $) >> 0] = 0;
          j = i[se >> 2] | 0;
          q = 0;
          e: while (1) {
            if (q >>> 0 >= j >>> 0) {
              re = 94;
              break;
            }
            M = a[(ie + q) >> 0] | 0;
            r = o[(oe + M) >> 0] | 0;
            h = l[(ne + (M << 1)) >> 1] | 0;
            p = i[n >> 2] | 0;
            k = (d + (p >>> 3)) | 0;
            _ = a[k >> 0] | 0;
            le = bc(h | 0, 0, (r & 255) | 0) | 0;
            if (!(((le | 0) == 0) & ((de | 0) == 0))) {
              re = 83;
              break;
            }
            if ((r & 255) >= 57) {
              re = 85;
              break;
            }
            se = cc(h | 0, 0, (p & 7) | 0) | 0;
            le = de;
            se = _ | se;
            ce = k;
            o[ce >> 0] = se;
            o[(ce + 1) >> 0] = se >> 8;
            o[(ce + 2) >> 0] = se >> 16;
            o[(ce + 3) >> 0] = se >> 24;
            k = (k + 4) | 0;
            o[k >> 0] = le;
            o[(k + 1) >> 0] = le >> 8;
            o[(k + 2) >> 0] = le >> 16;
            o[(k + 3) >> 0] = le >> 24;
            k = ((i[n >> 2] | 0) + (r & 255)) | 0;
            i[n >> 2] = k;
            switch (M | 0) {
              case 16: {
                r = a[(Ae + q) >> 0] | 0;
                h = (d + (k >>> 3)) | 0;
                p = a[h >> 0] | 0;
                if (!((((r & 252) | 0) == 0) & (0 == 0))) {
                  re = 88;
                  break e;
                }
                re = cc(r | 0, 0, (k & 7) | 0) | 0;
                ce = de;
                re = p | re;
                le = h;
                se = le;
                o[se >> 0] = re;
                o[(se + 1) >> 0] = re >> 8;
                o[(se + 2) >> 0] = re >> 16;
                o[(se + 3) >> 0] = re >> 24;
                le = (le + 4) | 0;
                o[le >> 0] = ce;
                o[(le + 1) >> 0] = ce >> 8;
                o[(le + 2) >> 0] = ce >> 16;
                o[(le + 3) >> 0] = ce >> 24;
                i[n >> 2] = (i[n >> 2] | 0) + 2;
                break;
              }
              case 17: {
                r = a[(Ae + q) >> 0] | 0;
                h = (d + (k >>> 3)) | 0;
                p = a[h >> 0] | 0;
                if (!((((r & 248) | 0) == 0) & (0 == 0))) {
                  re = 91;
                  break e;
                }
                re = cc(r | 0, 0, (k & 7) | 0) | 0;
                ce = de;
                re = p | re;
                le = h;
                se = le;
                o[se >> 0] = re;
                o[(se + 1) >> 0] = re >> 8;
                o[(se + 2) >> 0] = re >> 16;
                o[(se + 3) >> 0] = re >> 24;
                le = (le + 4) | 0;
                o[le >> 0] = ce;
                o[(le + 1) >> 0] = ce >> 8;
                o[(le + 2) >> 0] = ce >> 16;
                o[(le + 3) >> 0] = ce >> 24;
                i[n >> 2] = (i[n >> 2] | 0) + 3;
                break;
              }
              default: {
              }
            }
            q = (q + 1) | 0;
          }
          if ((re | 0) == 83) et(406196, 406218, 54, 406251);
          else if ((re | 0) == 85) et(406267, 406218, 55, 406251);
          else if ((re | 0) == 88) et(406196, 406218, 54, 406251);
          else if ((re | 0) == 91) et(406196, 406218, 54, 406251);
          else if ((re | 0) == 94) {
            w = ae;
            return;
          }
        }
        function ta(e) {
          e = e | 0;
          var r = 0;
          r = w;
          w = (w + e) | 0;
          w = (w + 15) & -16;
          return r | 0;
        }
        function ua() {
          return w | 0;
        }
        function va(e) {
          e = e | 0;
          w = e;
        }
        function wa(e, r) {
          e = e | 0;
          r = r | 0;
          w = e;
          k = r;
        }
        function xa(e, r) {
          e = e | 0;
          r = r | 0;
          if (!q) {
            q = e;
            $ = r;
          }
        }
        function ya(e) {
          e = e | 0;
          o[_ >> 0] = o[e >> 0];
          o[(_ + 1) >> 0] = o[(e + 1) >> 0];
          o[(_ + 2) >> 0] = o[(e + 2) >> 0];
          o[(_ + 3) >> 0] = o[(e + 3) >> 0];
        }
        function za(e) {
          e = e | 0;
          o[_ >> 0] = o[e >> 0];
          o[(_ + 1) >> 0] = o[(e + 1) >> 0];
          o[(_ + 2) >> 0] = o[(e + 2) >> 0];
          o[(_ + 3) >> 0] = o[(e + 3) >> 0];
          o[(_ + 4) >> 0] = o[(e + 4) >> 0];
          o[(_ + 5) >> 0] = o[(e + 5) >> 0];
          o[(_ + 6) >> 0] = o[(e + 6) >> 0];
          o[(_ + 7) >> 0] = o[(e + 7) >> 0];
        }
        function Aa(e) {
          e = e | 0;
          de = e;
        }
        function Ba() {
          return de | 0;
        }
        function Ca(e, r, s, l, d, p, k) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          p = p | 0;
          k = k | 0;
          var _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            tt = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0,
            Et = 0,
            It = 0,
            Ct = 0,
            mt = 0,
            Bt = 0;
          mt = w;
          w = (w + 224) | 0;
          dt = (mt + 200) | 0;
          lt = (mt + 184) | 0;
          pt = (mt + 168) | 0;
          ht = (mt + 152) | 0;
          ut = (mt + 144) | 0;
          ft = (mt + 140) | 0;
          Et = (mt + 136) | 0;
          gt = (mt + 24) | 0;
          q = (mt + 20) | 0;
          te = (mt + 16) | 0;
          $ = (mt + 12) | 0;
          re = (mt + 8) | 0;
          oe = (mt + 4) | 0;
          Ct = mt;
          i[Ct >> 2] = p;
          j = d;
          Ae = k;
          It = l >>> 24;
          It = (((It << 2) | 2) + (((l - (It << 24)) | 0) >>> 0 > 1048576 ? 4 : 3) + 1 + l) | 0;
          _ = (l | 0) == 0;
          It = _ ? 1 : It >>> 0 < l >>> 0 ? 0 : It;
          if (!p) {
            d = 0;
            Ct = i[Ct >> 2] | 0;
            Ct = d ? Ct : -1;
            w = mt;
            return Ct | 0;
          }
          if (_) {
            i[Ct >> 2] = 1;
            o[k >> 0] = 6;
            d = 1;
            Ct = i[Ct >> 2] | 0;
            Ct = d ? Ct : -1;
            w = mt;
            return Ct | 0;
          }
          do {
            if ((e | 0) == 10) {
              if ((r | 0) >= 16)
                if ((r | 0) > 24) r = 24;
                else ne = 7;
              else {
                r = 16;
                ne = 7;
              }
              q = 1 << r;
              tt = (q + -16) | 0;
              i[lt >> 2] = i[4721];
              i[(lt + 4) >> 2] = i[4722];
              i[(lt + 8) >> 2] = i[4723];
              i[(lt + 12) >> 2] = i[4724];
              i[pt >> 2] = i[4721];
              i[(pt + 4) >> 2] = i[4722];
              i[(pt + 8) >> 2] = i[4723];
              i[(pt + 12) >> 2] = i[4724];
              ot = i[Ct >> 2] | 0;
              q = q >>> 0 > l >>> 0 ? l : q;
              nt = 1 << ((r | 0) > 23 ? 24 : (r + 1) | 0);
              it = nt >>> 3;
              i[ht >> 2] = 0;
              At = (ht + 4) | 0;
              i[At >> 2] = 10;
              _ = (ht + 8) | 0;
              i[_ >> 2] = r;
              at = (ht + 12) | 0;
              i[at >> 2] = 0;
              i[At >> 2] = 10;
              At = (r | 0) > 16 ? ((r | 0) > 18 ? 18 : r) : 16;
              i[at >> 2] = At;
              At = 1 << At;
              i[dt >> 2] = 1;
              at = (dt + 4) | 0;
              i[at >> 2] = 1;
              ct = (dt + 8) | 0;
              i[ct >> 2] = 0;
              if (l >>> 0 >= 2147483649) et(406392, 406053, 1025, 406415);
              if ((r | 0) != 16)
                if ((r | 0) == 17) {
                  $ = 1;
                  s = 7;
                } else {
                  $ = (((r << 1) + 222) | 1) & 255;
                  s = 4;
                }
              else {
                $ = 0;
                s = 1;
              }
              ze = Lb(0, 524308) | 0;
              if (!ze) $e(1);
              i[(ze + 524292) >> 2] = 0;
              i[(ze + 524300) >> 2] = 0;
              o[(ze + 524304) >> 0] = 1;
              j = (ze + 524304) | 0;
              r = 1 << i[_ >> 2];
              i[ze >> 2] = r + -1;
              r = (1 - r) | 0;
              Xe = (ze + 524296) | 0;
              i[Xe >> 2] = r;
              _ = 0;
              while (1) {
                if ((_ | 0) == 131072) break;
                i[(ze + 4 + (_ << 2)) >> 2] = r;
                _ = (_ + 1) | 0;
              }
              r = (ze + 524300) | 0;
              do {
                if (q >>> 0 > (i[r >> 2] | 0) >>> 0) {
                  _ = (ze + 524292) | 0;
                  rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[_ >> 2] | 0);
                  i[_ >> 2] = 0;
                  M = st[i[dt >> 2] & 1](i[ct >> 2] | 0, q << 3) | 0;
                  if (!M) $e(1);
                  else {
                    i[_ >> 2] = M;
                    i[r >> 2] = q;
                    break;
                  }
                }
              } while (0);
              o[j >> 0] = 0;
              Fe = (ze + 524292) | 0;
              ve = (gt + 8) | 0;
              Se = (gt + 12) | 0;
              Ne = (gt + 28) | 0;
              Oe = (gt + 32) | 0;
              Ue = (gt + 36) | 0;
              Ge = (gt + 48) | 0;
              Le = (gt + 52) | 0;
              Me = (gt + 56) | 0;
              xe = (gt + 60) | 0;
              He = (gt + 72) | 0;
              Ve = (gt + 80) | 0;
              Ye = (gt + 88) | 0;
              je = (gt + 96) | 0;
              qe = (gt + 104) | 0;
              Je = (gt + 8) | 0;
              We = (gt + 32) | 0;
              Ke = (gt + 56) | 0;
              _ = Ae;
              Te = 0;
              De = 1;
              Re = 0;
              ee = 0;
              te = 0;
              e: while (1) {
                r = (De & 1) == 0;
                if (!((r ^ 1) & (Te >>> 0 < l >>> 0))) {
                  ne = 93;
                  break;
                }
                ye = (Te + nt) | 0;
                ye = ye >>> 0 > l >>> 0 ? l : ye;
                be = ((((((ye - Te) | 0) >>> 0) / 12) | 0) + 16) | 0;
                i[ut >> 2] = 0;
                i[ft >> 2] = 0;
                r = 0;
                we = Te;
                Ce = 0;
                Be = 0;
                re = 0;
                ke = 0;
                while (1) {
                  if (ye >>> 0 <= we >>> 0) {
                    j = r;
                    Ae = Be;
                    e = re;
                    M = ke;
                    break;
                  }
                  Qe = (ye - we) | 0;
                  Qe = Qe >>> 0 < At >>> 0 ? Qe : At;
                  me = st[i[dt >> 2] & 1](i[ct >> 2] | 0, ((Qe << 4) + 16) | 0) | 0;
                  if (!me) {
                    ne = 27;
                    break e;
                  }
                  r = (Qe + 1) | 0;
                  M = 0;
                  while (1) {
                    if ((M | 0) == (r | 0)) break;
                    i[(me + (M << 4)) >> 2] = 1;
                    i[(me + (M << 4) + 4) >> 2] = 0;
                    i[(me + (M << 4) + 8) >> 2] = 0;
                    h[(me + (M << 4) + 12) >> 2] = se;
                    M = (M + 1) | 0;
                  }
                  t: do {
                    if ((Qe >>> 0 > 2) & (we >>> 0 > 127)) {
                      Ie = (we + -127) | 0;
                      Ee = (Ie + Qe) | 0;
                      Ee = we >>> 0 < Ee >>> 0 ? we : Ee;
                      while (1) {
                        if (Ie >>> 0 >= Ee >>> 0) break t;
                        j = i[ze >> 2] | 0;
                        ge = (we - Ie) | 0;
                        ge = (j - (ge >>> 0 < 15 ? 15 : ge)) | 0;
                        fe = Ie & 2147483647;
                        he = (d + fe) | 0;
                        le =
                          (ze +
                            4 +
                            (((Pe(a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24), 506832829) | 0) >>> 15) << 2)) |
                          0;
                        ce = i[le >> 2] | 0;
                        j = (Ie & j) << 1;
                        i[le >> 2] = Ie;
                        le = 0;
                        q = 0;
                        ue = 0;
                        M = j;
                        j = j | 1;
                        pe = 64;
                        while (1) {
                          ae = ce & 2147483647;
                          if (((Ie | 0) == (ce | 0)) | (((Ie - ce) | 0) >>> 0 > ge >>> 0) | ((pe | 0) == 0)) {
                            ne = 36;
                            break;
                          }
                          Ae = q >>> 0 < ue >>> 0 ? q : ue;
                          if (Ae >>> 0 >= 129) {
                            ne = 38;
                            break e;
                          }
                          ne = (fe + Ae) | 0;
                          ie = (d + (ae + 128)) | 0;
                          e = (d + (ae + 124)) | 0;
                          oe = 0;
                          r = (d + (ae + Ae)) | 0;
                          while (1) {
                            if (r >>> 0 > e >>> 0) break;
                            Bt = (d + (ne + oe)) | 0;
                            if (
                              (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                              (a[Bt >> 0] | (a[(Bt + 1) >> 0] << 8) | (a[(Bt + 2) >> 0] << 16) | (a[(Bt + 3) >> 0] << 24) | 0)
                            )
                              break;
                            oe = (oe + 4) | 0;
                            r = (r + 4) | 0;
                          }
                          while (1) {
                            if (r >>> 0 >= ie >>> 0) break;
                            if ((o[(d + (ne + oe)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                            oe = (oe + 1) | 0;
                            r = (r + 1) | 0;
                          }
                          Ae = (Ae + oe) | 0;
                          r: do {
                            if (Ae) {
                              r = Ae;
                              ne = he;
                              ie = (d + ae) | 0;
                              while (1) {
                                e = o[ne >> 0] | 0;
                                oe = o[ie >> 0] | 0;
                                if ((e << 24) >> 24 != (oe << 24) >> 24) break;
                                r = (r + -1) | 0;
                                if (!r) break r;
                                else {
                                  ne = (ne + 1) | 0;
                                  ie = (ie + 1) | 0;
                                }
                              }
                              if ((e << 24) >> 24 != (oe << 24) >> 24) {
                                ne = 51;
                                break e;
                              }
                            }
                          } while (0);
                          if (le) {
                            ne = 53;
                            break e;
                          }
                          if (Ae >>> 0 >= 128) {
                            ne = 55;
                            break;
                          }
                          r = i[Fe >> 2] | 0;
                          if ((a[(d + (fe + Ae)) >> 0] | 0) > (a[(d + (ae + Ae)) >> 0] | 0)) {
                            i[(r + (M << 2)) >> 2] = ce;
                            e = ((ce & i[ze >> 2]) << 1) | 1;
                            q = Ae;
                            r = ue;
                            M = e;
                            e = ((i[Fe >> 2] | 0) + (e << 2)) | 0;
                          } else {
                            i[(r + (j << 2)) >> 2] = ce;
                            e = (ce & i[ze >> 2]) << 1;
                            r = Ae;
                            j = e;
                            e = ((i[Fe >> 2] | 0) + (e << 2)) | 0;
                          }
                          le = 0;
                          ue = r;
                          ce = i[e >> 2] | 0;
                          pe = (pe + -1) | 0;
                        }
                        if ((ne | 0) == 36) {
                          i[((i[Fe >> 2] | 0) + (M << 2)) >> 2] = i[Xe >> 2];
                          i[((i[Fe >> 2] | 0) + (j << 2)) >> 2] = i[Xe >> 2];
                        } else if ((ne | 0) == 55) {
                          Bt = i[Fe >> 2] | 0;
                          i[(Bt + (M << 2)) >> 2] = i[(Bt + (((ce & i[ze >> 2]) << 1) << 2)) >> 2];
                          Bt = i[Fe >> 2] | 0;
                          i[(Bt + (j << 2)) >> 2] = i[(Bt + ((((ce & i[ze >> 2]) << 1) | 1) << 2)) >> 2];
                        }
                        Ie = (Ie + 1) | 0;
                      }
                    }
                  } while (0);
                  M = (ke + (Ea(dt, Qe, we, d, 2147483647, ht, tt, lt, ze, me) | 0)) | 0;
                  j = (M + 1) | 0;
                  j = be >>> 0 > j >>> 0 ? be : j;
                  if ((Ce | 0) != (j | 0)) {
                    r = st[i[dt >> 2] & 1](i[ct >> 2] | 0, j << 4) | 0;
                    q = r;
                    if (!r) {
                      ne = 63;
                      break e;
                    }
                    if (Be) {
                      Bt = Be;
                      dc(r | 0, Bt | 0, (ke << 4) | 0) | 0;
                      rt[i[at >> 2] & 1](i[ct >> 2] | 0, Bt);
                    }
                  } else {
                    j = Ce;
                    q = Be;
                  }
                  Da(Qe, we, tt, me, lt, ut, (q + (ke << 4)) | 0, ft);
                  re = (re + Qe) | 0;
                  rt[i[at >> 2] & 1](i[ct >> 2] | 0, me);
                  r = i[ft >> 2] | 0;
                  if (r >>> 0 > it >>> 0) {
                    j = r;
                    Ae = q;
                    e = re;
                    break;
                  }
                  if (M >>> 0 > it >>> 0) {
                    j = r;
                    Ae = q;
                    e = re;
                    break;
                  } else {
                    we = (we + Qe) | 0;
                    Ce = j;
                    Be = q;
                    ke = M;
                  }
                }
                r = i[ut >> 2] | 0;
                if (!r) r = j;
                else {
                  j = (M + 1) | 0;
                  Bt = Ae;
                  i[(Bt + (M << 4)) >> 2] = r;
                  i[(Bt + (M << 4) + 4) >> 2] = 67108864;
                  i[(Bt + (M << 4) + 8) >> 2] = 0;
                  n[(Bt + (M << 4) + 14) >> 1] = 16;
                  M = (Bt + (M << 4) + 12) | 0;
                  do {
                    if (r >>> 0 >= 6) {
                      if (r >>> 0 < 130) {
                        Bt = (r + -2) | 0;
                        r = (((_e(Bt | 0) | 0) ^ 31) + -1) | 0;
                        r = ((r << 1) + (Bt >>> r) + 2) | 0;
                        break;
                      }
                      if (r >>> 0 < 2114) {
                        r = (((_e((r + -66) | 0) | 0) ^ 31) + 10) | 0;
                        break;
                      }
                      if (r >>> 0 < 6210) r = 21;
                      else r = r >>> 0 < 22594 ? 22 : 23;
                    }
                  } while (0);
                  r = r & 65535;
                  n[M >> 1] = n[(88156 + (((r >>> 3) * 3) << 1)) >> 1] | ((((r << 3) & 56) | 2) & 65535);
                  r = ((i[ft >> 2] | 0) + (i[ut >> 2] | 0)) | 0;
                  i[ft >> 2] = r;
                  M = j;
                }
                oe = (Te + e) | 0;
                re = (oe | 0) == (l | 0);
                s = s & 255;
                i[Et >> 2] = s;
                do {
                  if (!e) {
                    r = st[i[dt >> 2] & 1](i[ct >> 2] | 0, 16) | 0;
                    if (!r) {
                      ne = 79;
                      break e;
                    }
                    o[r >> 0] = $;
                    Bt = i[Et >> 2] | 0;
                    Te = (r + (Bt >>> 3)) | 0;
                    ke = a[Te >> 0] | 0;
                    ye = cc(3, 0, (Bt & 7) | 0) | 0;
                    Re = de;
                    ye = ke | ye;
                    ke = Te;
                    o[ke >> 0] = ye;
                    o[(ke + 1) >> 0] = ye >> 8;
                    o[(ke + 2) >> 0] = ye >> 16;
                    o[(ke + 3) >> 0] = ye >> 24;
                    Te = (Te + 4) | 0;
                    o[Te >> 0] = Re;
                    o[(Te + 1) >> 0] = Re >> 8;
                    o[(Te + 2) >> 0] = Re >> 16;
                    o[(Te + 3) >> 0] = Re >> 24;
                    i[Et >> 2] = (Bt + 9) & -8;
                  } else {
                    if (!(Fb(d, 2147483647, Te, 0, e, r, M) | 0)) {
                      i[lt >> 2] = i[pt >> 2];
                      i[(lt + 4) >> 2] = i[(pt + 4) >> 2];
                      i[(lt + 8) >> 2] = i[(pt + 8) >> 2];
                      i[(lt + 12) >> 2] = i[(pt + 12) >> 2];
                      r = st[i[dt >> 2] & 1](i[ct >> 2] | 0, (e + 16) | 0) | 0;
                      if (!r) {
                        ne = 83;
                        break e;
                      }
                      o[r >> 0] = $;
                      bb(re, d, Te, 2147483647, e, Et, r);
                      break;
                    }
                    i[gt >> 2] = 0;
                    i[(gt + 4) >> 2] = 0;
                    i[(gt + 8) >> 2] = 0;
                    i[(gt + 12) >> 2] = 0;
                    i[(gt + 16) >> 2] = 0;
                    i[(gt + 20) >> 2] = 0;
                    i[(gt + 24) >> 2] = 0;
                    i[Ne >> 2] = 0;
                    i[(Ne + 4) >> 2] = 0;
                    i[(Ne + 8) >> 2] = 0;
                    i[(Ne + 12) >> 2] = 0;
                    i[(Ne + 16) >> 2] = 0;
                    i[Ge >> 2] = 0;
                    i[Le >> 2] = 0;
                    i[(Le + 4) >> 2] = 0;
                    i[(Le + 8) >> 2] = 0;
                    i[(Le + 12) >> 2] = 0;
                    i[(Le + 16) >> 2] = 0;
                    ne = He;
                    ie = (ne + 40) | 0;
                    do {
                      i[ne >> 2] = 0;
                      ne = (ne + 4) | 0;
                    } while ((ne | 0) < (ie | 0));
                    j = Wb(d, Te, 2147483647, e) | 0;
                    j = j ? 2 : 3;
                    q = Ae;
                    Nb(dt, d, Te, 2147483647, ht, Re, ee, q, M, j, gt);
                    Ob(0, 0, gt);
                    r = st[i[dt >> 2] & 1](i[ct >> 2] | 0, ((e << 1) + 502) | 0) | 0;
                    if (!r) {
                      ne = 86;
                      break e;
                    }
                    o[r >> 0] = $;
                    ab(dt, d, Te, e, 2147483647, Re, ee, re, 0, 0, j, q, M, gt, Et, r);
                    if (((e + 4) | 0) >>> 0 < ((i[Et >> 2] | 0) >>> 3) >>> 0) {
                      i[lt >> 2] = i[pt >> 2];
                      i[(lt + 4) >> 2] = i[(pt + 4) >> 2];
                      i[(lt + 8) >> 2] = i[(pt + 8) >> 2];
                      i[(lt + 12) >> 2] = i[(pt + 12) >> 2];
                      o[r >> 0] = $;
                      i[Et >> 2] = s;
                      bb(re, d, Te, 2147483647, e, Et, r);
                    }
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[Je >> 2] | 0);
                    i[ve >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[Se >> 2] | 0);
                    i[Se >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[We >> 2] | 0);
                    i[Oe >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[Ue >> 2] | 0);
                    i[Ue >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[Ke >> 2] | 0);
                    i[Me >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[xe >> 2] | 0);
                    i[xe >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[He >> 2] | 0);
                    i[He >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[Ve >> 2] | 0);
                    i[Ve >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[Ye >> 2] | 0);
                    i[Ye >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[je >> 2] | 0);
                    i[je >> 2] = 0;
                    rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[qe >> 2] | 0);
                    i[qe >> 2] = 0;
                  }
                } while (0);
                j = i[Et >> 2] | 0;
                M = j >>> 3;
                $ = o[(r + M) >> 0] | 0;
                q = o[(d + (oe + -1)) >> 0] | 0;
                ee = o[(d + (oe + -2)) >> 0] | 0;
                i[pt >> 2] = i[lt >> 2];
                i[(pt + 4) >> 2] = i[(lt + 4) >> 2];
                i[(pt + 8) >> 2] = i[(lt + 8) >> 2];
                i[(pt + 12) >> 2] = i[(lt + 12) >> 2];
                te = (te + M) | 0;
                if (te >>> 0 > ot >>> 0) M = 0;
                else {
                  dc(_ | 0, r | 0, M | 0) | 0;
                  _ = (_ + M) | 0;
                  M = De;
                }
                rt[i[at >> 2] & 1](i[ct >> 2] | 0, r);
                rt[i[at >> 2] & 1](i[ct >> 2] | 0, Ae);
                s = j & 7;
                Te = oe;
                De = M;
                Re = q;
              }
              if ((ne | 0) == 27) $e(1);
              else if ((ne | 0) == 38) et(405873, 405905, 373, 405932);
              else if ((ne | 0) == 51) et(405955, 405905, 378, 405932);
              else if ((ne | 0) == 53) Ze();
              else if ((ne | 0) == 63) $e(1);
              else if ((ne | 0) == 79) $e(1);
              else if ((ne | 0) == 83) $e(1);
              else if ((ne | 0) == 86) $e(1);
              else if ((ne | 0) == 93) {
                i[Ct >> 2] = te;
                rt[i[at >> 2] & 1](i[ct >> 2] | 0, i[Fe >> 2] | 0);
                i[Fe >> 2] = 0;
                rt[i[at >> 2] & 1](i[ct >> 2] | 0, ze);
                if (r) {
                  ne = 107;
                  break;
                }
                if ((It | 0) != 0 ? (i[Ct >> 2] | 0) >>> 0 > It >>> 0 : 0) {
                  ne = 106;
                  break;
                } else r = 1;
                Bt = i[Ct >> 2] | 0;
                Bt = r ? Bt : -1;
                w = mt;
                return Bt | 0;
              }
            } else {
              ee = Yb(5240) | 0;
              if (!ee) {
                d = 0;
                Bt = i[Ct >> 2] | 0;
                Bt = d ? Bt : -1;
                w = mt;
                return Bt | 0;
              }
              i[(ee + 16) >> 2] = 1;
              i[(ee + 20) >> 2] = 1;
              i[(ee + 24) >> 2] = 0;
              i[ee >> 2] = 0;
              i[(ee + 4) >> 2] = 11;
              i[(ee + 8) >> 2] = 22;
              i[(ee + 12) >> 2] = 0;
              ne = (ee + 80) | 0;
              i[ne >> 2] = 0;
              i[(ne + 4) >> 2] = 0;
              i[(ee + 128) >> 2] = 0;
              i[(ee + 132) >> 2] = 0;
              i[(ee + 136) >> 2] = 0;
              ne = (ee + 144) | 0;
              i[(ee + 4300) >> 2] = 0;
              i[(ee + 4304) >> 2] = 0;
              _ = (ee + 5204) | 0;
              i[(ee + 5232) >> 2] = 0;
              o[(ee + 5236) >> 0] = 0;
              o[(ee + 5237) >> 0] = 0;
              i[(ee + 28) >> 2] = 0;
              M = (ee + 32) | 0;
              i[ne >> 2] = 0;
              i[(ne + 4) >> 2] = 0;
              i[(ne + 8) >> 2] = 0;
              i[(ne + 12) >> 2] = 0;
              ne = (ee + 194) | 0;
              ie = (ne + 10) | 0;
              do {
                o[ne >> 0] = 0;
                ne = (ne + 1) | 0;
              } while ((ne | 0) < (ie | 0));
              i[_ >> 2] = 0;
              i[(_ + 4) >> 2] = 0;
              i[(_ + 8) >> 2] = 0;
              i[(_ + 12) >> 2] = 0;
              i[(_ + 16) >> 2] = 0;
              i[(_ + 20) >> 2] = 0;
              _ = (ee + 104) | 0;
              ne = M;
              ie = (ne + 44) | 0;
              do {
                i[ne >> 2] = 0;
                ne = (ne + 4) | 0;
              } while ((ne | 0) < (ie | 0));
              i[_ >> 2] = 0;
              i[(ee + 108) >> 2] = 0;
              i[(ee + 112) >> 2] = 0;
              i[(ee + 116) >> 2] = 0;
              i[(ee + 124) >> 2] = 0;
              i[(ee + 120) >> 2] = 0;
              i[(ee + 160) >> 2] = 4;
              i[(ee + 164) >> 2] = 11;
              i[(ee + 168) >> 2] = 15;
              i[(ee + 172) >> 2] = 16;
              Bt = (ee + 176) | 0;
              Et = (ee + 160) | 0;
              i[Bt >> 2] = i[Et >> 2];
              i[(Bt + 4) >> 2] = i[(Et + 4) >> 2];
              i[(Bt + 8) >> 2] = i[(Et + 8) >> 2];
              i[(Bt + 12) >> 2] = i[(Et + 12) >> 2];
              if (!ee) {
                d = 0;
                Bt = i[Ct >> 2] | 0;
                Bt = d ? Bt : -1;
                w = mt;
                return Bt | 0;
              }
              i[q >> 2] = l;
              i[te >> 2] = j;
              i[$ >> 2] = i[Ct >> 2];
              i[re >> 2] = Ae;
              i[oe >> 2] = 0;
              if (!(o[(ee + 5237) >> 0] & 1)) {
                i[(ee + 4) >> 2] = e;
                i[(ee + 8) >> 2] = r;
                i[ee >> 2] = s;
              }
              r = Ab(ee, q, te, $, re, oe) | 0;
              if ((i[(ee + 5232) >> 2] | 0) == 2 ? (i[(ee + 5220) >> 2] | 0) == 0 : 0) s = r & 1;
              else s = 0;
              i[Ct >> 2] = i[oe >> 2];
              q = (ee + 200) | 0;
              r = i[(ee + 20) >> 2] | 0;
              _ = i[(ee + 24) >> 2] | 0;
              rt[r & 1](_, i[q >> 2] | 0);
              i[q >> 2] = 0;
              q = (ee + 124) | 0;
              M = (ee + 20) | 0;
              j = (ee + 24) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[q >> 2] | 0);
              i[q >> 2] = 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[(ee + 112) >> 2] | 0);
              i[(ee + 112) >> 2] = 0;
              q = (ee + 28) | 0;
              $ = i[(ee + 72) >> 2] | 0;
              if ($) {
                Bt = ($ + 524292) | 0;
                rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Bt >> 2] | 0);
                i[Bt >> 2] = 0;
              }
              Bt = (ee + 72) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[q >> 2] | 0);
              i[q >> 2] = 0;
              Et = (ee + 32) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 36) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 40) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 44) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 48) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 52) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 56) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 60) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 64) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              Et = (ee + 68) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Et >> 2] | 0);
              i[Et >> 2] = 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Bt >> 2] | 0);
              i[Bt >> 2] = 0;
              Bt = (ee + 4300) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Bt >> 2] | 0);
              i[Bt >> 2] = 0;
              Bt = (ee + 5208) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Bt >> 2] | 0);
              i[Bt >> 2] = 0;
              Bt = (ee + 5212) | 0;
              rt[i[M >> 2] & 1](i[j >> 2] | 0, i[Bt >> 2] | 0);
              i[Bt >> 2] = 0;
              rt[r & 1](_, ee);
              if ((s << 24) >> 24)
                if ((It | 0) != 0 ? (i[Ct >> 2] | 0) >>> 0 > It >>> 0 : 0) ne = 106;
                else {
                  d = 1;
                  Bt = i[Ct >> 2] | 0;
                  Bt = d ? Bt : -1;
                  w = mt;
                  return Bt | 0;
                }
              else ne = 107;
            }
          } while (0);
          if ((ne | 0) == 106) {
            i[Ct >> 2] = 0;
            if (It >>> 0 > p >>> 0) {
              d = 0;
              Bt = i[Ct >> 2] | 0;
              Bt = d ? Bt : -1;
              w = mt;
              return Bt | 0;
            }
          } else if ((ne | 0) == 107 ? ((i[Ct >> 2] = 0), ((It | 0) == 0) | (It >>> 0 > p >>> 0)) : 0) {
            d = 0;
            Bt = i[Ct >> 2] | 0;
            Bt = d ? Bt : -1;
            w = mt;
            return Bt | 0;
          }
          o[k >> 0] = 33;
          o[(k + 1) >> 0] = 3;
          s = 0;
          q = 2;
          $ = l;
          while (1) {
            if (!$) break;
            if ($ >>> 0 <= 16777216)
              if ($ >>> 0 > 65536) {
                r = $;
                if (r >>> 0 > 1048576) ne = 113;
                else j = 1;
              } else {
                r = $;
                j = 0;
              }
            else {
              r = 16777216;
              ne = 113;
            }
            if ((ne | 0) == 113) {
              ne = 0;
              j = 2;
            }
            M = (j << 1) | ((r << 3) + -8) | (1 << ((j << 2) | 19));
            o[(k + q) >> 0] = M;
            o[(k + (q + 1)) >> 0] = M >>> 8;
            _ = (q + 3) | 0;
            o[(k + (q + 2)) >> 0] = M >>> 16;
            if ((j | 0) == 2) {
              o[(k + _) >> 0] = M >>> 24;
              _ = (q + 4) | 0;
            }
            dc((k + _) | 0, (d + s) | 0, r | 0) | 0;
            s = (s + r) | 0;
            q = (_ + r) | 0;
            $ = ($ - r) | 0;
          }
          o[(k + q) >> 0] = 3;
          i[Ct >> 2] = q + 1;
          d = 1;
          Bt = i[Ct >> 2] | 0;
          Bt = d ? Bt : -1;
          w = mt;
          return Bt | 0;
        }
        function Da(e, r, s, o, a, l, d, h) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          a = a | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          var p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0;
          ne = (a + 8) | 0;
          ie = (a + 12) | 0;
          Ae = (a + 4) | 0;
          p = i[(o + 12) >> 2] | 0;
          w = 0;
          ce = 0;
          while (1) {
            if ((p | 0) == -1) break;
            _ = (w + p) | 0;
            M = (o + (_ << 4)) | 0;
            j = i[M >> 2] | 0;
            ae = j & 16777215;
            k = i[(o + (_ << 4) + 8) >> 2] | 0;
            oe = (w + k) | 0;
            p = i[(o + (_ << 4) + 12) >> 2] | 0;
            if (!ce) {
              k = (k + (i[l >> 2] | 0)) | 0;
              i[l >> 2] = 0;
            }
            re = i[(o + (_ << 4) + 4) >> 2] | 0;
            se = re & 33554431;
            M = i[M >> 2] | 0;
            M = ((M & 16777215) + 9 - (M >>> 24)) | 0;
            te = (oe + r) | 0;
            te = se >>> 0 > (te >>> 0 < s >>> 0 ? te : s) >>> 0;
            re = re >>> 25;
            re = (re | 0) == 0 ? (se + 15) | 0 : (re + -1) | 0;
            i[(d + (ce << 4)) >> 2] = k;
            i[(d + (ce << 4) + 4) >> 2] = ae | ((M ^ j) << 24);
            w = (d + (ce << 4) + 14) | 0;
            if (re >>> 0 < 16) {
              _ = re & 65535;
              n[w >> 1] = _;
              w = _;
              _ = 0;
            } else {
              $ = (re + -12) | 0;
              _ = (((_e($ | 0) | 0) ^ 31) + -1) | 0;
              ee = ($ >>> _) & 1;
              q = ((((_ << 1) + 65534) | ee) + 16) & 65535;
              n[w >> 1] = q;
              w = q;
              _ = (_ << 24) | ($ - ((ee | 2) << _));
            }
            i[(d + (ce << 4) + 8) >> 2] = _;
            $ = (w << 16) >> 16 == 0;
            ee = (d + (ce << 4) + 12) | 0;
            do {
              if (k >>> 0 >= 6) {
                if (k >>> 0 < 130) {
                  j = (k + -2) | 0;
                  q = (((_e(j | 0) | 0) ^ 31) + -1) | 0;
                  q = ((q << 1) + (j >>> q) + 2) & 65535;
                  break;
                }
                if (k >>> 0 < 2114) {
                  q = (((_e((k + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (k >>> 0 < 6210) q = 21;
                else q = k >>> 0 < 22594 ? 22 : 23;
              } else q = k & 65535;
            } while (0);
            do {
              if (M >>> 0 >= 10) {
                if (M >>> 0 < 134) {
                  j = (M + -6) | 0;
                  w = (((_e(j | 0) | 0) ^ 31) + -1) | 0;
                  w = ((w << 1) + (j >>> w) + 4) & 65535;
                  break;
                }
                if (M >>> 0 < 2118) w = (((_e((M + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else w = 23;
              } else w = (M + 65534) & 65535;
            } while (0);
            _ = w & 65535;
            M = q & 65535;
            j = (_ & 7) | ((M << 3) & 56);
            if ($ & ((q & 65535) < 8) & ((w & 65535) < 16)) w = ((w & 65535) < 8 ? j : j | 64) & 65535;
            else w = n[(88156 + (((_ >>> 3) + (((M >>> 3) * 3) | 0)) << 1)) >> 1] | (j & 65535);
            n[ee >> 1] = w;
            if (!(te | ((re | 0) == 0))) {
              i[ie >> 2] = i[ne >> 2];
              i[ne >> 2] = i[Ae >> 2];
              i[Ae >> 2] = i[a >> 2];
              i[a >> 2] = se;
            }
            i[h >> 2] = (i[h >> 2] | 0) + k;
            w = (oe + ae) | 0;
            ce = (ce + 1) | 0;
          }
          i[l >> 2] = (i[l >> 2] | 0) + (e - w);
          return;
        }
        function Ea(e, r, s, n, l, d, p, k, _, M) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          l = l | 0;
          d = d | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          var j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0;
          Ge = w;
          w = (w + 6320) | 0;
          Se = (Ge + 6160) | 0;
          Oe = (Ge + 1252) | 0;
          Ue = (Ge + 1024) | 0;
          Ne = Ge;
          Fe = (i[(d + 4) >> 2] | 0) < 11 ? 150 : 325;
          ve = r >>> 0 > 127 ? (s + r + -127) | 0 : s;
          i[M >> 2] = 0;
          h[(M + 12) >> 2] = 0.0;
          i[(Oe + 4904) >> 2] = r;
          Te = (e + 8) | 0;
          j = st[i[e >> 2] & 1](i[Te >> 2] | 0, ((r << 2) + 8) | 0) | 0;
          if (!j) $e(1);
          De = (Oe + 4896) | 0;
          i[De >> 2] = j;
          Fa(Oe, s, n, l);
          Be = (Ue + 224) | 0;
          i[Be >> 2] = 0;
          Qe = Ne;
          be = (d + 4) | 0;
          we = (_ + 524292) | 0;
          ye = (_ + 524296) | 0;
          ke = Ne;
          Re = (Ne + 4) | 0;
          j = 0;
          e: while (1) {
            if (((j + 3) | 0) >>> 0 >= r >>> 0) {
              oe = 98;
              break;
            }
            me = (j + s) | 0;
            Ce = me >>> 0 < p >>> 0 ? me : p;
            Ee = (r - j) | 0;
            pe = me & l;
            ae = (i[be >> 2] | 0) != 11 ? 16 : 64;
            ae = me >>> 0 < ae >>> 0 ? 0 : (me - ae) | 0;
            Ie = (n + pe) | 0;
            ne = (n + (pe + 1)) | 0;
            Ae = (pe + Ee) | 0;
            ie = (n + Ae) | 0;
            Ae = (n + (Ae + -4)) | 0;
            q = Qe;
            ee = 1;
            $ = me;
            while (1) {
              $ = ($ + -1) | 0;
              if (!(($ >>> 0 > ae >>> 0) & (ee >>> 0 < 3))) break;
              se = (me - $) | 0;
              if (se >>> 0 > Ce >>> 0) break;
              oe = $ & l;
              if ((o[Ie >> 0] | 0) != (o[(n + oe) >> 0] | 0)) {
                fe = ee;
                he = q;
                ee = fe;
                q = he;
                continue;
              }
              if ((o[ne >> 0] | 0) == (o[(n + (oe + 1)) >> 0] | 0)) {
                te = 0;
                re = Ie;
              } else {
                fe = ee;
                he = q;
                ee = fe;
                q = he;
                continue;
              }
              while (1) {
                if (re >>> 0 > Ae >>> 0) break;
                he = (n + (oe + te)) | 0;
                if (
                  (a[re >> 0] | (a[(re + 1) >> 0] << 8) | (a[(re + 2) >> 0] << 16) | (a[(re + 3) >> 0] << 24) | 0) !=
                  (a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24) | 0)
                )
                  break;
                te = (te + 4) | 0;
                re = (re + 4) | 0;
              }
              while (1) {
                if (re >>> 0 >= ie >>> 0) break;
                if ((o[(n + (oe + te)) >> 0] | 0) != (o[re >> 0] | 0)) break;
                te = (te + 1) | 0;
                re = (re + 1) | 0;
              }
              if (te >>> 0 <= ee >>> 0) {
                fe = ee;
                he = q;
                ee = fe;
                q = he;
                continue;
              }
              ee = q;
              i[ee >> 2] = se;
              i[(ee + 4) >> 2] = te << 5;
              q = (ee + 8) | 0;
              ee = te;
            }
            do {
              if (ee >>> 0 < Ee >>> 0) {
                fe = Ee >>> 0 < 128 ? Ee : 128;
                he = Ee >>> 0 > 127;
                $ =
                  (_ + 4 + (((Pe(a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24), 506832829) | 0) >>> 15) << 2)) | 0;
                se = i[$ >> 2] | 0;
                te = (me & i[_ >> 2]) << 1;
                re = te | 1;
                if (he) {
                  i[$ >> 2] = me;
                  ge = 0;
                  de = 0;
                  ue = 64;
                } else {
                  ge = 0;
                  de = 0;
                  ue = 64;
                }
                while (1) {
                  ce = (me - se) | 0;
                  le = se & l;
                  if (((me | 0) == (se | 0)) | (ce >>> 0 > Ce >>> 0) | ((ue | 0) == 0)) {
                    oe = 22;
                    break;
                  }
                  ae = ge >>> 0 < de >>> 0 ? ge : de;
                  if (ae >>> 0 >= 129) {
                    oe = 25;
                    break e;
                  }
                  ie = (pe + ae) | 0;
                  oe = (le + Ee) | 0;
                  Ae = (n + oe) | 0;
                  oe = (n + (oe + -4)) | 0;
                  ne = 0;
                  $ = (n + (le + ae)) | 0;
                  while (1) {
                    if ($ >>> 0 > oe >>> 0) break;
                    Le = (n + (ie + ne)) | 0;
                    if (
                      (a[$ >> 0] | (a[($ + 1) >> 0] << 8) | (a[($ + 2) >> 0] << 16) | (a[($ + 3) >> 0] << 24) | 0) !=
                      (a[Le >> 0] | (a[(Le + 1) >> 0] << 8) | (a[(Le + 2) >> 0] << 16) | (a[(Le + 3) >> 0] << 24) | 0)
                    )
                      break;
                    ne = (ne + 4) | 0;
                    $ = ($ + 4) | 0;
                  }
                  while (1) {
                    if ($ >>> 0 >= Ae >>> 0) break;
                    if ((o[(n + (ie + ne)) >> 0] | 0) != (o[$ >> 0] | 0)) break;
                    ne = (ne + 1) | 0;
                    $ = ($ + 1) | 0;
                  }
                  ae = (ae + ne) | 0;
                  t: do {
                    if (ae) {
                      $ = ae;
                      ie = Ie;
                      Ae = (n + le) | 0;
                      while (1) {
                        oe = o[ie >> 0] | 0;
                        ne = o[Ae >> 0] | 0;
                        if ((oe << 24) >> 24 != (ne << 24) >> 24) break;
                        $ = ($ + -1) | 0;
                        if (!$) break t;
                        else {
                          ie = (ie + 1) | 0;
                          Ae = (Ae + 1) | 0;
                        }
                      }
                      if ((oe << 24) >> 24 != (ne << 24) >> 24) {
                        oe = 38;
                        break e;
                      }
                    }
                  } while (0);
                  $ = q;
                  if (((q | 0) != 0) & (ae >>> 0 > ee >>> 0)) {
                    i[$ >> 2] = ce;
                    i[($ + 4) >> 2] = ae << 5;
                    q = ($ + 8) | 0;
                    ee = ae;
                  }
                  if (ae >>> 0 >= fe >>> 0) {
                    oe = 42;
                    break;
                  }
                  if ((a[(n + (pe + ae)) >> 0] | 0) > (a[(n + (le + ae)) >> 0] | 0)) {
                    if (he) i[((i[we >> 2] | 0) + (te << 2)) >> 2] = se;
                    oe = ((se & i[_ >> 2]) << 1) | 1;
                    se = ae;
                    $ = de;
                    te = oe;
                    oe = ((i[we >> 2] | 0) + (oe << 2)) | 0;
                  } else {
                    if (he) i[((i[we >> 2] | 0) + (re << 2)) >> 2] = se;
                    oe = (se & i[_ >> 2]) << 1;
                    se = ge;
                    $ = ae;
                    re = oe;
                    oe = ((i[we >> 2] | 0) + (oe << 2)) | 0;
                  }
                  ge = se;
                  de = $;
                  se = i[oe >> 2] | 0;
                  ue = (ue + -1) | 0;
                }
                if ((oe | 0) == 22) {
                  if (!he) break;
                  i[((i[we >> 2] | 0) + (te << 2)) >> 2] = i[ye >> 2];
                  i[((i[we >> 2] | 0) + (re << 2)) >> 2] = i[ye >> 2];
                  break;
                } else if ((oe | 0) == 42) {
                  if (!he) break;
                  Le = i[we >> 2] | 0;
                  i[(Le + (te << 2)) >> 2] = i[(Le + (((se & i[_ >> 2]) << 1) << 2)) >> 2];
                  Le = i[we >> 2] | 0;
                  i[(Le + (re << 2)) >> 2] = i[(Le + ((((se & i[_ >> 2]) << 1) | 1) << 2)) >> 2];
                  break;
                }
              }
            } while (0);
            $ = 0;
            while (1) {
              if (($ | 0) == 38) break;
              i[(Se + ($ << 2)) >> 2] = 268435455;
              $ = ($ + 1) | 0;
            }
            ee = (ee + 1) | 0;
            ee = ee >>> 0 < 4 ? 4 : ee;
            t: do {
              if (Vb(Ie, ee, Ee, Se) | 0) {
                te = Ee >>> 0 > 37 ? 37 : Ee;
                while (1) {
                  if (ee >>> 0 > te >>> 0) break t;
                  $ = i[(Se + (ee << 2)) >> 2] | 0;
                  if ($ >>> 0 < 268435455) {
                    Le = $ & 31;
                    i[q >> 2] = Ce + ($ >>> 5) + 1;
                    i[(q + 4) >> 2] = (ee << 5) | ((ee | 0) == (Le | 0) ? 0 : Le);
                    q = (q + 8) | 0;
                  }
                  ee = (ee + 1) | 0;
                }
              }
            } while (0);
            q = (q - ke) >> 3;
            do {
              if (q) {
                $ = (q + -1) | 0;
                if (((i[(Ne + ($ << 3) + 4) >> 2] | 0) >>> 5) >>> 0 <= Fe >>> 0) {
                  Le = q;
                  Ga(r, s, j, n, l, d, p, k, Le, Ne, Oe, Ue, M);
                  if ((Le | 0) != 1) break;
                } else {
                  Ie = (Ne + ($ << 3)) | 0;
                  Ce = i[(Ie + 4) >> 2] | 0;
                  Le = Ne;
                  i[Le >> 2] = i[Ie >> 2];
                  i[(Le + 4) >> 2] = Ce;
                  Ga(r, s, j, n, l, d, p, k, 1, Ne, Oe, Ue, M);
                }
                q = (i[Re >> 2] | 0) >>> 5;
                if (q >>> 0 > Fe >>> 0) {
                  pe = (me + q) | 0;
                  pe = pe >>> 0 < ve >>> 0 ? pe : ve;
                  he = ((me + 64) | 0) >>> 0 > pe >>> 0 ? (me + 1) | 0 : (pe + -63) | 0;
                  while (1) {
                    if (he >>> 0 >= pe >>> 0) break;
                    ee = i[_ >> 2] | 0;
                    ue = (ee + -15) | 0;
                    ge = he & l;
                    de = (n + ge) | 0;
                    ce =
                      (_ +
                        4 +
                        (((Pe(a[de >> 0] | (a[(de + 1) >> 0] << 8) | (a[(de + 2) >> 0] << 16) | (a[(de + 3) >> 0] << 24), 506832829) | 0) >>> 15) << 2)) |
                      0;
                    ae = i[ce >> 2] | 0;
                    ee = (he & ee) << 1;
                    i[ce >> 2] = he;
                    ce = 0;
                    te = 0;
                    le = 0;
                    $ = ee;
                    ee = ee | 1;
                    fe = 64;
                    while (1) {
                      Ae = ae & l;
                      if (((he | 0) == (ae | 0)) | (((he - ae) | 0) >>> 0 > ue >>> 0) | ((fe | 0) == 0)) {
                        oe = 71;
                        break;
                      }
                      ie = te >>> 0 < le >>> 0 ? te : le;
                      if (ie >>> 0 >= 129) {
                        oe = 73;
                        break e;
                      }
                      oe = (ge + ie) | 0;
                      ne = (n + (Ae + 128)) | 0;
                      re = (n + (Ae + 124)) | 0;
                      se = 0;
                      q = (n + (Ae + ie)) | 0;
                      while (1) {
                        if (q >>> 0 > re >>> 0) break;
                        Le = (n + (oe + se)) | 0;
                        if (
                          (a[q >> 0] | (a[(q + 1) >> 0] << 8) | (a[(q + 2) >> 0] << 16) | (a[(q + 3) >> 0] << 24) | 0) !=
                          (a[Le >> 0] | (a[(Le + 1) >> 0] << 8) | (a[(Le + 2) >> 0] << 16) | (a[(Le + 3) >> 0] << 24) | 0)
                        )
                          break;
                        se = (se + 4) | 0;
                        q = (q + 4) | 0;
                      }
                      while (1) {
                        if (q >>> 0 >= ne >>> 0) break;
                        if ((o[(n + (oe + se)) >> 0] | 0) != (o[q >> 0] | 0)) break;
                        se = (se + 1) | 0;
                        q = (q + 1) | 0;
                      }
                      ie = (ie + se) | 0;
                      t: do {
                        if (ie) {
                          q = ie;
                          oe = de;
                          ne = (n + Ae) | 0;
                          while (1) {
                            re = o[oe >> 0] | 0;
                            se = o[ne >> 0] | 0;
                            if ((re << 24) >> 24 != (se << 24) >> 24) break;
                            q = (q + -1) | 0;
                            if (!q) break t;
                            else {
                              oe = (oe + 1) | 0;
                              ne = (ne + 1) | 0;
                            }
                          }
                          if ((re << 24) >> 24 != (se << 24) >> 24) {
                            oe = 86;
                            break e;
                          }
                        }
                      } while (0);
                      if (ce) {
                        oe = 88;
                        break e;
                      }
                      if (ie >>> 0 >= 128) {
                        oe = 90;
                        break;
                      }
                      q = i[we >> 2] | 0;
                      if ((a[(n + (ge + ie)) >> 0] | 0) > (a[(n + (Ae + ie)) >> 0] | 0)) {
                        i[(q + ($ << 2)) >> 2] = ae;
                        re = ((ae & i[_ >> 2]) << 1) | 1;
                        te = ie;
                        q = le;
                        $ = re;
                        re = ((i[we >> 2] | 0) + (re << 2)) | 0;
                      } else {
                        i[(q + (ee << 2)) >> 2] = ae;
                        re = (ae & i[_ >> 2]) << 1;
                        q = ie;
                        ee = re;
                        re = ((i[we >> 2] | 0) + (re << 2)) | 0;
                      }
                      ce = 0;
                      le = q;
                      ae = i[re >> 2] | 0;
                      fe = (fe + -1) | 0;
                    }
                    if ((oe | 0) == 71) {
                      i[((i[we >> 2] | 0) + ($ << 2)) >> 2] = i[ye >> 2];
                      i[((i[we >> 2] | 0) + (ee << 2)) >> 2] = i[ye >> 2];
                    } else if ((oe | 0) == 90) {
                      Le = i[we >> 2] | 0;
                      i[(Le + ($ << 2)) >> 2] = i[(Le + (((ae & i[_ >> 2]) << 1) << 2)) >> 2];
                      Le = i[we >> 2] | 0;
                      i[(Le + (ee << 2)) >> 2] = i[(Le + ((((ae & i[_ >> 2]) << 1) | 1) << 2)) >> 2];
                    }
                    he = (he + 1) | 0;
                  }
                  j = (j + (((i[Re >> 2] | 0) >>> 5) + -1)) | 0;
                  i[Be >> 2] = 0;
                }
              } else Ga(r, s, j, n, l, d, p, k, 0, Ne, Oe, Ue, M);
            } while (0);
            j = (j + 1) | 0;
          }
          if ((oe | 0) == 25) et(405873, 405905, 373, 405932);
          else if ((oe | 0) == 38) et(405955, 405905, 378, 405932);
          else if ((oe | 0) == 73) et(405873, 405905, 373, 405932);
          else if ((oe | 0) == 86) et(405955, 405905, 378, 405932);
          else if ((oe | 0) == 88) Ze();
          else if ((oe | 0) == 98) {
            rt[i[(e + 4) >> 2] & 1](i[Te >> 2] | 0, i[De >> 2] | 0);
            i[De >> 2] = 0;
            while (1) {
              if (i[(M + (r << 4) + 8) >> 2] | 0) break;
              if ((i[(M + (r << 4)) >> 2] | 0) != 1) break;
              r = (r + -1) | 0;
            }
            i[(M + (r << 4) + 12) >> 2] = -1;
            j = 0;
            while (1) {
              if (!r) break;
              l = ((i[(M + (r << 4)) >> 2] & 16777215) + (i[(M + (r << 4) + 8) >> 2] | 0)) | 0;
              Le = (r - l) | 0;
              i[(M + (Le << 4) + 12) >> 2] = l;
              r = Le;
              j = (j + 1) | 0;
            }
            w = Ge;
            return j | 0;
          }
          return 0;
        }
        function Fa(e, r, s, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          var l = 0,
            d = 0.0,
            p = 0,
            k = 0.0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0;
          oe = w;
          w = (w + 4128) | 0;
          j = (oe + 4112) | 0;
          ee = (oe + 1040) | 0;
          te = (oe + 1024) | 0;
          M = oe;
          re = i[(e + 4904) >> 2] | 0;
          se = i[(e + 4896) >> 2] | 0;
          e: do {
            if (Wb(s, r, n, re) | 0) {
              i[j >> 2] = 0;
              i[(j + 4) >> 2] = 0;
              i[(j + 8) >> 2] = 0;
              p = 0;
              M = 0;
              while (1) {
                if ((M | 0) == (re | 0)) break;
                l = o[(s + ((M + r) & n)) >> 0] | 0;
                _ = l & 255;
                if ((l << 24) >> 24 <= -1)
                  if ((l & 255) > 191) l = 1;
                  else l = p >>> 0 < 224 ? 0 : 2;
                else l = 0;
                p = (j + (l << 2)) | 0;
                i[p >> 2] = (i[p >> 2] | 0) + 1;
                p = _;
                M = (M + 1) | 0;
              }
              $ = (((i[(j + 4) >> 2] | 0) + (i[(j + 8) >> 2] | 0)) | 0) >>> 0 < 25 ? 0 : 1;
              ac(ee | 0, 0, 3072) | 0;
              _ = re >>> 0 > 495 ? 495 : re;
              i[te >> 2] = 0;
              i[(te + 4) >> 2] = 0;
              i[(te + 8) >> 2] = 0;
              j = 0;
              q = 0;
              l = 0;
              while (1) {
                if ((q | 0) == (_ | 0)) {
                  M = 0;
                  break;
                }
                p = o[(s + ((q + r) & n)) >> 0] | 0;
                M = p & 255;
                ne = (ee + (l << 10) + (M << 2)) | 0;
                i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                l = (te + (l << 2)) | 0;
                i[l >> 2] = (i[l >> 2] | 0) + 1;
                if ((p << 24) >> 24 <= -1)
                  if ((p & 255) > 191) l = $;
                  else l = j >>> 0 < 224 ? 0 : $;
                else l = 0;
                j = M;
                q = (q + 1) | 0;
              }
              while (1) {
                if ((M | 0) == (re | 0)) break;
                if (M >>> 0 >= 495) {
                  if (M >>> 0 >= 496) {
                    l = (M + r) | 0;
                    p = a[(s + ((l + -496) & n)) >> 0] | 0;
                    if (M >>> 0 < 497) l = 0;
                    else l = a[(s + ((l + -497) & n)) >> 0] | 0;
                    if (p >>> 0 >= 128)
                      if (p >>> 0 > 191) l = $;
                      else l = l >>> 0 < 224 ? 0 : $;
                    else l = 0;
                  } else l = 0;
                  ne = (ee + (l << 10) + ((a[(s + ((M + r + -495) & n)) >> 0] | 0) << 2)) | 0;
                  i[ne >> 2] = (i[ne >> 2] | 0) + -1;
                  ne = (te + (l << 2)) | 0;
                  i[ne >> 2] = (i[ne >> 2] | 0) + -1;
                }
                if (((M + 495) | 0) >>> 0 < re >>> 0) {
                  p = (M + r) | 0;
                  _ = (p + 495) | 0;
                  l = o[(s + ((p + 494) & n)) >> 0] | 0;
                  p = o[(s + ((p + 493) & n)) >> 0] | 0;
                  if ((l << 24) >> 24 <= -1)
                    if ((l & 255) > 191) l = $;
                    else l = (p & 255) < 224 ? 0 : $;
                  else l = 0;
                  ne = (ee + (l << 10) + ((a[(s + (_ & n)) >> 0] | 0) << 2)) | 0;
                  i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                  ne = (te + (l << 2)) | 0;
                  i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                }
                if (M) {
                  l = (M + r) | 0;
                  p = a[(s + ((l + -1) & n)) >> 0] | 0;
                  if (M >>> 0 < 2) l = 0;
                  else l = a[(s + ((l + -2) & n)) >> 0] | 0;
                  if (p >>> 0 >= 128)
                    if (p >>> 0 > 191) l = $;
                    else l = l >>> 0 < 224 ? 0 : $;
                  else l = 0;
                } else l = 0;
                p = i[(ee + (l << 10) + ((a[(s + ((M + r) & n)) >> 0] | 0) << 2)) >> 2] | 0;
                p = (p | 0) == 0 ? 1 : p;
                l = i[(te + (l << 2)) >> 2] | 0;
                if (l >>> 0 < 256) k = +h[(19516 + (l << 2)) >> 2];
                else k = +Xb(+(l >>> 0));
                if (p >>> 0 < 256) d = +h[(19516 + (p << 2)) >> 2];
                else d = +Xb(+(p >>> 0));
                d = k - d + 0.02905;
                d = d < 1.0 ? d * 0.5 + 0.5 : d;
                if (M >>> 0 < 2e3) d = d + (0.7 - (+(((2e3 - M) | 0) >>> 0) / 2.0e3) * 0.35);
                h[(se + ((M + 1) << 2)) >> 2] = d;
                M = (M + 1) | 0;
              }
            } else {
              ac(M | 0, 0, 1024) | 0;
              l = re >>> 0 > 2e3 ? 2e3 : re;
              p = 0;
              while (1) {
                if ((p | 0) == (l | 0)) {
                  _ = 0;
                  break;
                }
                ne = (M + ((a[(s + ((p + r) & n)) >> 0] | 0) << 2)) | 0;
                i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                p = (p + 1) | 0;
              }
              while (1) {
                if ((_ | 0) == (re | 0)) break e;
                if (_ >>> 0 >= 2e3) {
                  ne = (M + ((a[(s + ((_ + r + -2e3) & n)) >> 0] | 0) << 2)) | 0;
                  i[ne >> 2] = (i[ne >> 2] | 0) + -1;
                  l = (l + -1) | 0;
                }
                p = (_ + r) | 0;
                if (((_ + 2e3) | 0) >>> 0 < re >>> 0) {
                  ne = (M + ((a[(s + ((p + 2e3) & n)) >> 0] | 0) << 2)) | 0;
                  i[ne >> 2] = (i[ne >> 2] | 0) + 1;
                  l = (l + 1) | 0;
                }
                p = i[(M + ((a[(s + (p & n)) >> 0] | 0) << 2)) >> 2] | 0;
                p = (p | 0) == 0 ? 1 : p;
                if (l >>> 0 < 256) k = +h[(19516 + (l << 2)) >> 2];
                else k = +Xb(+(l >>> 0));
                if (p >>> 0 < 256) d = +h[(19516 + (p << 2)) >> 2];
                else d = +Xb(+(p >>> 0));
                k = k - d + 0.029;
                h[(se + ((_ + 1) << 2)) >> 2] = k < 1.0 ? k * 0.5 + 0.5 : k;
                _ = (_ + 1) | 0;
              }
            }
          } while (0);
          h[se >> 2] = 0.0;
          d = 0.0;
          l = 0;
          while (1) {
            if ((l | 0) == (re | 0)) {
              p = 0;
              break;
            }
            ne = (l + 1) | 0;
            n = (se + (ne << 2)) | 0;
            k = +h[n >> 2] + d;
            h[n >> 2] = k;
            d = k;
            l = ne;
          }
          while (1) {
            if ((p | 0) == 704) {
              p = 0;
              break;
            }
            l = (p + 11) | 0;
            if (l >>> 0 < 256) d = +h[(19516 + (l << 2)) >> 2];
            else d = +Xb(+(l >>> 0));
            h[(e + (p << 2)) >> 2] = d;
            p = (p + 1) | 0;
          }
          while (1) {
            if ((p | 0) == 520) break;
            l = (p + 20) | 0;
            if (l >>> 0 < 256) d = +h[(19516 + (l << 2)) >> 2];
            else d = +Xb(+(l >>> 0));
            h[(e + 2816 + (p << 2)) >> 2] = d;
            p = (p + 1) | 0;
          }
          h[(e + 4900) >> 2] = 3.4594316482543945;
          w = oe;
          return;
        }
        function Ga(e, r, s, l, d, p, k, M, j, q, $, ee, te) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          p = p | 0;
          k = k | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          te = te | 0;
          var re = 0.0,
            se = 0,
            oe = 0,
            ne = 0.0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0.0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0;
          Ne = w;
          w = (w + 64) | 0;
          ae = (Ne + 36) | 0;
          Ae = (Ne + 8) | 0;
          Se = Ne;
          ke = (r + s) | 0;
          Re = ke & d;
          ye = ke >>> 0 < k >>> 0 ? ke : k;
          Te = (e - s) | 0;
          we = (i[(p + 4) >> 2] | 0) < 11;
          be = we ? 150 : 325;
          we = we ? 1 : 5;
          ie = i[(te + (s << 4) + 12) >> 2] | 0;
          r = i[(te + (s << 4)) >> 2] & 16777215;
          p = i[(te + (s << 4) + 8) >> 2] | 0;
          se = i[(te + (s << 4) + 4) >> 2] | 0;
          oe = se & 33554431;
          if (s)
            if ((((oe + r) | 0) >>> 0 > ke >>> 0) | (oe >>> 0 > k >>> 0) | (((se >>> 25) | 0) == 1)) r = i[(te + ((s - r - p) << 4) + 12) >> 2] | 0;
            else r = s;
          else r = 0;
          se = (te + (s << 4) + 12) | 0;
          i[se >> 2] = r;
          ne = ((i[_ >> 2] = ie), +h[_ >> 2]);
          Qe = ($ + 4896) | 0;
          p = i[Qe >> 2] | 0;
          re = +h[(p + (s << 2)) >> 2];
          if (!(ne <= re - +h[p >> 2])) ie = (ee + 224) | 0;
          else {
            i[Ae >> 2] = s;
            i[(Ae + 24) >> 2] = ie;
            r = i[Qe >> 2] | 0;
            h[(Ae + 20) >> 2] = ne - (+h[(r + (s << 2)) >> 2] - +h[r >> 2]);
            r = 0;
            p = se;
            while (1) {
              p = i[p >> 2] | 0;
              if (!(((r | 0) < 4) & ((p | 0) != 0))) {
                p = M;
                break;
              }
              Be = i[(te + (p << 4) + 8) >> 2] | 0;
              me = i[(te + (p << 4)) >> 2] & 16777215;
              i[(Ae + 4 + (r << 2)) >> 2] = i[(te + (p << 4) + 4) >> 2] & 33554431;
              r = (r + 1) | 0;
              p = (te + ((p - me - Be) << 4) + 12) | 0;
            }
            while (1) {
              if ((r | 0) >= 4) break;
              i[(Ae + 4 + (r << 2)) >> 2] = i[p >> 2];
              p = (p + 4) | 0;
              r = (r + 1) | 0;
            }
            ie = (ee + 224) | 0;
            r = i[ie >> 2] | 0;
            k = (r + 1) | 0;
            i[ie >> 2] = k;
            r = (r & 7) ^ 7;
            k = k >>> 0 < 8 ? k : 8;
            oe = (ee + ((r * 28) | 0)) | 0;
            i[oe >> 2] = i[Ae >> 2];
            i[(oe + 4) >> 2] = i[(Ae + 4) >> 2];
            i[(oe + 8) >> 2] = i[(Ae + 8) >> 2];
            i[(oe + 12) >> 2] = i[(Ae + 12) >> 2];
            i[(oe + 16) >> 2] = i[(Ae + 16) >> 2];
            i[(oe + 20) >> 2] = i[(Ae + 20) >> 2];
            i[(oe + 24) >> 2] = i[(Ae + 24) >> 2];
            oe = 1;
            while (1) {
              if (oe >>> 0 >= k >>> 0) break;
              se = r & 7;
              r = (r + 1) | 0;
              p = r & 7;
              if (+h[(ee + ((se * 28) | 0) + 20) >> 2] > +h[(ee + ((p * 28) | 0) + 20) >> 2]) {
                me = (ee + ((se * 28) | 0)) | 0;
                i[ae >> 2] = i[me >> 2];
                i[(ae + 4) >> 2] = i[(me + 4) >> 2];
                i[(ae + 8) >> 2] = i[(me + 8) >> 2];
                i[(ae + 12) >> 2] = i[(me + 12) >> 2];
                i[(ae + 16) >> 2] = i[(me + 16) >> 2];
                i[(ae + 20) >> 2] = i[(me + 20) >> 2];
                i[(ae + 24) >> 2] = i[(me + 24) >> 2];
                Be = (ee + ((p * 28) | 0)) | 0;
                i[me >> 2] = i[Be >> 2];
                i[(me + 4) >> 2] = i[(Be + 4) >> 2];
                i[(me + 8) >> 2] = i[(Be + 8) >> 2];
                i[(me + 12) >> 2] = i[(Be + 12) >> 2];
                i[(me + 16) >> 2] = i[(Be + 16) >> 2];
                i[(me + 20) >> 2] = i[(Be + 20) >> 2];
                i[(me + 24) >> 2] = i[(Be + 24) >> 2];
                i[Be >> 2] = i[ae >> 2];
                i[(Be + 4) >> 2] = i[(ae + 4) >> 2];
                i[(Be + 8) >> 2] = i[(ae + 8) >> 2];
                i[(Be + 12) >> 2] = i[(ae + 12) >> 2];
                i[(Be + 16) >> 2] = i[(ae + 16) >> 2];
                i[(Be + 20) >> 2] = i[(ae + 20) >> 2];
                i[(Be + 24) >> 2] = i[(ae + 24) >> 2];
              }
              oe = (oe + 1) | 0;
            }
            Be = i[Qe >> 2] | 0;
            p = Be;
            re = +h[(Be + (s << 2)) >> 2];
          }
          se = (0 - (i[ie >> 2] | 0)) & 7;
          r = 2;
          re = +h[(ee + ((se * 28) | 0) + 24) >> 2] + +h[($ + 4900) >> 2] + (re - +h[(p + (i[(ee + ((se * 28) | 0)) >> 2] << 2)) >> 2]);
          se = 4;
          oe = 10;
          e: while (1) {
            do {
              p = (r + s) | 0;
              if (p >>> 0 > e >>> 0) break e;
              if (!(+h[(te + (p << 4) + 12) >> 2] <= re)) break e;
              r = (r + 1) | 0;
            } while ((r | 0) != (oe | 0));
            Be = (oe + se) | 0;
            r = oe;
            re = re + 1.0;
            se = se << 1;
            oe = Be;
          }
          he = (r + -1) | 0;
          pe = (l + Re) | 0;
          Ie = (Re + Te) | 0;
          Ee = (l + Ie) | 0;
          Ie = (l + (Ie + -4)) | 0;
          Ce = (Se + 4) | 0;
          me = (Se + 4) | 0;
          Be = 0;
          while (1) {
            if (Be >>> 0 >= we >>> 0) {
              r = 82;
              break;
            }
            p = i[ie >> 2] | 0;
            if (Be >>> 0 >= (p >>> 0 < 8 ? p : 8) >>> 0) {
              r = 82;
              break;
            }
            le = (Be - p) & 7;
            ue = (s - (i[(ee + ((le * 28) | 0)) >> 2] | 0)) | 0;
            do {
              if (ue >>> 0 >= 6) {
                if (ue >>> 0 < 130) {
                  fe = (ue + -2) | 0;
                  p = (((_e(fe | 0) | 0) ^ 31) + -1) | 0;
                  p = ((p << 1) + (fe >>> p) + 2) & 65535;
                  break;
                }
                if (ue >>> 0 < 2114) {
                  p = (((_e((ue + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ue >>> 0 < 6210) p = 21;
                else p = ue >>> 0 < 22594 ? 22 : 23;
              } else p = ue & 65535;
            } while (0);
            fe = p & 65535;
            de = i[Qe >> 2] | 0;
            ge = +h[(ee + ((le * 28) | 0) + 20) >> 2] + +((i[(17268 + (fe << 2)) >> 2] | 0) >>> 0) + (+h[(de + (s << 2)) >> 2] - +h[de >> 2]);
            de = (fe << 3) & 56;
            fe = ((fe >>> 3) * 3) | 0;
            e = (p & 65535) < 8;
            p = he;
            ce = 0;
            while (1) {
              if (!((ce >>> 0 < 16) & (p >>> 0 < Te >>> 0))) break;
              k = ((i[(ee + ((le * 28) | 0) + 4 + (i[(11372 + (ce << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ce << 2)) >> 2] | 0)) | 0;
              se = (ke - k) | 0;
              e: do {
                if (
                  (
                    (!((se >>> 0 >= ke >>> 0) | (k >>> 0 > ye >>> 0)) ? ((De = se & d), (Fe = (Re + p) | 0), Fe >>> 0 <= d >>> 0) : 0)
                      ? ((ve = (De + p) | 0), ve >>> 0 <= d >>> 0)
                      : 0
                  )
                    ? (o[(l + Fe) >> 0] | 0) == (o[(l + ve) >> 0] | 0)
                    : 0
                ) {
                  se = 0;
                  oe = pe;
                  while (1) {
                    if (oe >>> 0 > Ie >>> 0) break;
                    ae = (l + (De + se)) | 0;
                    if (
                      (a[oe >> 0] | (a[(oe + 1) >> 0] << 8) | (a[(oe + 2) >> 0] << 16) | (a[(oe + 3) >> 0] << 24) | 0) !=
                      (a[ae >> 0] | (a[(ae + 1) >> 0] << 8) | (a[(ae + 2) >> 0] << 16) | (a[(ae + 3) >> 0] << 24) | 0)
                    )
                      break;
                    se = (se + 4) | 0;
                    oe = (oe + 4) | 0;
                  }
                  while (1) {
                    if (oe >>> 0 >= Ee >>> 0) break;
                    if ((o[(l + (De + se)) >> 0] | 0) != (o[oe >> 0] | 0)) break;
                    se = (se + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  ne = ge + +h[($ + 2816 + (ce << 2)) >> 2];
                  ae = (ce | 0) == 0;
                  Ae = k | ((ce << 25) + 33554432);
                  while (1) {
                    M = (p + 1) | 0;
                    if (M >>> 0 > se >>> 0) break e;
                    do {
                      if (M >>> 0 >= 10) {
                        if (M >>> 0 < 134) {
                          k = (p + -5) | 0;
                          p = (((_e(k | 0) | 0) ^ 31) + -1) | 0;
                          p = ((p << 1) + (k >>> p) + 4) & 65535;
                          break;
                        }
                        if (M >>> 0 < 2118) p = (((_e((p + -69) | 0) | 0) ^ 31) + 12) & 65535;
                        else p = 23;
                      } else p = (p + 65535) & 65535;
                    } while (0);
                    k = p & 65535;
                    oe = (k & 7) | de;
                    if ((((ae ^ 1) | (e ^ 1)) ^ 1) & ((p & 65535) < 16)) p = ((p & 65535) < 8 ? oe : oe | 64) & 65535;
                    else p = n[(88156 + (((k >>> 3) + fe) << 1)) >> 1] | (oe & 65535);
                    re = ((p & 65535) < 128 ? ge : ne) + +((i[(17460 + (k << 2)) >> 2] | 0) >>> 0) + +h[($ + ((p & 65535) << 2)) >> 2];
                    p = (M + s) | 0;
                    if (!(re < +h[(te + (p << 4) + 12) >> 2])) {
                      p = M;
                      continue;
                    }
                    i[(te + (p << 4)) >> 2] = M | 150994944;
                    i[(te + (p << 4) + 4) >> 2] = Ae;
                    i[(te + (p << 4) + 8) >> 2] = ue;
                    h[(te + (p << 4) + 12) >> 2] = re;
                    p = M;
                  }
                }
              } while (0);
              ce = (ce + 1) | 0;
            }
            e: do {
              if (Be >>> 0 <= 1) {
                M = r;
                le = 0;
                while (1) {
                  if ((le | 0) == (j | 0)) break e;
                  Ae = (q + (le << 3)) | 0;
                  e = i[Ae >> 2] | 0;
                  Ae = i[(Ae + 4) >> 2] | 0;
                  k = Se;
                  i[k >> 2] = e;
                  i[(k + 4) >> 2] = Ae;
                  k = e >>> 0 > ye >>> 0;
                  p = k & 1;
                  se = (e + 15) | 0;
                  ce = bc(e | 0, Ae | 0, 37) | 0;
                  if (se >>> 0 < 16) oe = 0;
                  else {
                    Oe = (e + 3) | 0;
                    oe = (((_e(Oe | 0) | 0) ^ 31) + -1) | 0;
                    ae = (Oe >>> oe) & 1;
                    se = ((((oe << 1) + 65534) | ae) + 16) | 0;
                    oe = (oe << 24) | (Oe - ((ae | 2) << oe));
                  }
                  ne = ge + +((oe >>> 24) >>> 0) + +h[($ + 2816 + ((se & 65535) << 2)) >> 2];
                  if (M >>> 0 < ce >>> 0) {
                    Oe = k | (ce >>> 0 > be >>> 0);
                    p = Oe ? p : 0;
                    M = Oe ? ce : M;
                  }
                  ae = (p << 24) >> 24 == 0;
                  oe = bc(e | 0, Ae | 0, 37) | 0;
                  oe = (oe + 1) | 0;
                  k = M >>> 0 > oe >>> 0;
                  Ae = M;
                  while (1) {
                    if (Ae >>> 0 > ce >>> 0) break;
                    if (!ae) {
                      p = i[Ce >> 2] & 31;
                      if (!p) p = (i[me >> 2] | 0) >>> 5;
                    } else p = Ae;
                    do {
                      if (p >>> 0 >= 10) {
                        if (p >>> 0 < 134) {
                          Oe = (p + -6) | 0;
                          se = (((_e(Oe | 0) | 0) ^ 31) + -1) | 0;
                          se = ((se << 1) + (Oe >>> se) + 4) | 0;
                          break;
                        }
                        if (p >>> 0 < 2118) se = (((_e((p + -70) | 0) | 0) ^ 31) + 12) | 0;
                        else se = 23;
                      } else se = (p + 65534) | 0;
                    } while (0);
                    Oe = se & 65535;
                    re =
                      ne +
                      +((i[(17460 + (Oe << 2)) >> 2] | 0) >>> 0) +
                      +h[($ + (((n[(88156 + (((Oe >>> 3) + fe) << 1)) >> 1] | (((se & 7) | de) & 65535)) & 65535) << 2)) >> 2];
                    se = (Ae + s) | 0;
                    if (re < +h[(te + (se << 4) + 12) >> 2]) {
                      i[(te + (se << 4)) >> 2] = Ae | ((Ae + 9 - p) << 24);
                      i[(te + (se << 4) + 4) >> 2] = e;
                      i[(te + (se << 4) + 8) >> 2] = ue;
                      h[(te + (se << 4) + 12) >> 2] = re;
                    }
                    Ae = (Ae + 1) | 0;
                  }
                  M = k ? M : oe;
                  le = (le + 1) | 0;
                }
              }
            } while (0);
            Be = (Be + 1) | 0;
          }
          if ((r | 0) == 82) {
            w = Ne;
            return;
          }
        }
        function Ha(e, r, s, n, l, d, p, w, k, _, M, j, q) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          l = l | 0;
          d = d | 0;
          p = p | 0;
          w = w | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          var $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0;
          me = ((1 << i[(p + 8) >> 2]) + -16) | 0;
          Ua(e, w, p, s, r, n);
          e: do {
            if ((r >>> 0 > 2) & (s >>> 0 > 127)) {
              Ce = (s + -127) | 0;
              Ie = (Ce + r) | 0;
              Ie = Ie >>> 0 > s >>> 0 ? s : Ie;
              Ee = (w + 524292) | 0;
              pe = (w + 524296) | 0;
              t: while (1) {
                if (Ce >>> 0 >= Ie >>> 0) break e;
                ee = i[w >> 2] | 0;
                ge = (s - Ce) | 0;
                ge = (ee - (ge >>> 0 < 15 ? 15 : ge)) | 0;
                de = Ce & d;
                fe = (l + de) | 0;
                le =
                  (w + 4 + (((Pe(a[fe >> 0] | (a[(fe + 1) >> 0] << 8) | (a[(fe + 2) >> 0] << 16) | (a[(fe + 3) >> 0] << 24), 506832829) | 0) >>> 15) << 2)) | 0;
                ce = i[le >> 2] | 0;
                ee = (Ce & ee) << 1;
                i[le >> 2] = Ce;
                le = 0;
                te = 0;
                ue = 0;
                $ = ee;
                ee = ee | 1;
                he = 64;
                while (1) {
                  ae = ce & d;
                  if (((Ce | 0) == (ce | 0)) | (((Ce - ce) | 0) >>> 0 > ge >>> 0) | ((he | 0) == 0)) {
                    n = 6;
                    break;
                  }
                  Ae = te >>> 0 < ue >>> 0 ? te : ue;
                  if (Ae >>> 0 >= 129) {
                    n = 8;
                    break t;
                  }
                  ne = (de + Ae) | 0;
                  ie = (l + (ae + 128)) | 0;
                  re = (l + (ae + 124)) | 0;
                  oe = 0;
                  n = (l + (ae + Ae)) | 0;
                  while (1) {
                    if (n >>> 0 > re >>> 0) break;
                    Be = (l + (ne + oe)) | 0;
                    if (
                      (a[n >> 0] | (a[(n + 1) >> 0] << 8) | (a[(n + 2) >> 0] << 16) | (a[(n + 3) >> 0] << 24) | 0) !=
                      (a[Be >> 0] | (a[(Be + 1) >> 0] << 8) | (a[(Be + 2) >> 0] << 16) | (a[(Be + 3) >> 0] << 24) | 0)
                    )
                      break;
                    oe = (oe + 4) | 0;
                    n = (n + 4) | 0;
                  }
                  while (1) {
                    if (n >>> 0 >= ie >>> 0) break;
                    if ((o[(l + (ne + oe)) >> 0] | 0) != (o[n >> 0] | 0)) break;
                    oe = (oe + 1) | 0;
                    n = (n + 1) | 0;
                  }
                  Ae = (Ae + oe) | 0;
                  r: do {
                    if (Ae) {
                      n = Ae;
                      ne = fe;
                      ie = (l + ae) | 0;
                      while (1) {
                        re = o[ne >> 0] | 0;
                        oe = o[ie >> 0] | 0;
                        if ((re << 24) >> 24 != (oe << 24) >> 24) break;
                        n = (n + -1) | 0;
                        if (!n) break r;
                        else {
                          ne = (ne + 1) | 0;
                          ie = (ie + 1) | 0;
                        }
                      }
                      if ((re << 24) >> 24 != (oe << 24) >> 24) {
                        n = 21;
                        break t;
                      }
                    }
                  } while (0);
                  if (le) {
                    n = 23;
                    break t;
                  }
                  if (Ae >>> 0 >= 128) {
                    n = 25;
                    break;
                  }
                  n = i[Ee >> 2] | 0;
                  if ((a[(l + (de + Ae)) >> 0] | 0) > (a[(l + (ae + Ae)) >> 0] | 0)) {
                    i[(n + ($ << 2)) >> 2] = ce;
                    re = ((ce & i[w >> 2]) << 1) | 1;
                    te = Ae;
                    n = ue;
                    $ = re;
                    re = ((i[Ee >> 2] | 0) + (re << 2)) | 0;
                  } else {
                    i[(n + (ee << 2)) >> 2] = ce;
                    re = (ce & i[w >> 2]) << 1;
                    n = Ae;
                    ee = re;
                    re = ((i[Ee >> 2] | 0) + (re << 2)) | 0;
                  }
                  le = 0;
                  ue = n;
                  ce = i[re >> 2] | 0;
                  he = (he + -1) | 0;
                }
                if ((n | 0) == 6) {
                  i[((i[Ee >> 2] | 0) + ($ << 2)) >> 2] = i[pe >> 2];
                  i[((i[Ee >> 2] | 0) + (ee << 2)) >> 2] = i[pe >> 2];
                } else if ((n | 0) == 25) {
                  Be = i[Ee >> 2] | 0;
                  i[(Be + ($ << 2)) >> 2] = i[(Be + (((ce & i[w >> 2]) << 1) << 2)) >> 2];
                  Be = i[Ee >> 2] | 0;
                  i[(Be + (ee << 2)) >> 2] = i[(Be + ((((ce & i[w >> 2]) << 1) | 1) << 2)) >> 2];
                }
                Ce = (Ce + 1) | 0;
              }
              if ((n | 0) == 8) et(405873, 405905, 373, 405932);
              else if ((n | 0) == 21) et(405955, 405905, 378, 405932);
              else if ((n | 0) == 23) Ze();
            }
          } while (0);
          n = (e + 8) | 0;
          $ = st[i[e >> 2] & 1](i[n >> 2] | 0, ((r << 4) + 16) | 0) | 0;
          if (!$) $e(1);
          ee = (r + 1) | 0;
          te = 0;
          while (1) {
            if ((te | 0) == (ee | 0)) break;
            i[($ + (te << 4)) >> 2] = 1;
            i[($ + (te << 4) + 4) >> 2] = 0;
            i[($ + (te << 4) + 8) >> 2] = 0;
            h[($ + (te << 4) + 12) >> 2] = se;
            te = (te + 1) | 0;
          }
          Be = Ea(e, r, s, l, d, p, me, k, w, $) | 0;
          i[j >> 2] = (i[j >> 2] | 0) + Be;
          Da(r, s, me, $, k, _, M, q);
          rt[i[(e + 4) >> 2] & 1](i[n >> 2] | 0, $);
          return;
        }
        function Ia(e, r, s, l, d, p, k, M, j, q, $, ee, te) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          p = p | 0;
          k = k | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          te = te | 0;
          var re = 0,
            oe = 0,
            ne = 0,
            ie = 0.0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            _e = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            tt = 0,
            ot = 0,
            nt = 0.0;
          tt = w;
          w = (w + 12256) | 0;
          xe = (tt + 12028) | 0;
          Me = (tt + 12024) | 0;
          Ke = (tt + 11e3) | 0;
          Je = (tt + 8184) | 0;
          We = (tt + 6104) | 0;
          qe = (tt + 5080) | 0;
          Ue = (tt + 4928) | 0;
          ze = (tt + 4912) | 0;
          Xe = tt;
          He = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          _e = r << 2;
          Ye = (e + 8) | 0;
          je = st[i[e >> 2] & 1](i[Ye >> 2] | 0, _e) | 0;
          if (!je) $e(1);
          Oe = r >>> 0 > 127 ? (s + r + -127) | 0 : s;
          Le = st[i[e >> 2] & 1](i[Ye >> 2] | 0, r << 5) | 0;
          we = Le;
          if (!Le) $e(1);
          Ua(e, M, k, s, r, l);
          e: do {
            if ((r >>> 0 > 2) & (s >>> 0 > 127)) {
              be = (s + -127) | 0;
              Qe = (be + r) | 0;
              Qe = Qe >>> 0 > s >>> 0 ? s : Qe;
              me = (M + 524292) | 0;
              Be = (M + 524296) | 0;
              t: while (1) {
                if (be >>> 0 >= Qe >>> 0) break e;
                oe = i[M >> 2] | 0;
                pe = (s - be) | 0;
                pe = (oe - (pe >>> 0 < 15 ? 15 : pe)) | 0;
                Ee = be & p;
                Ie = (d + Ee) | 0;
                fe =
                  (M + 4 + (((Pe(a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24), 506832829) | 0) >>> 15) << 2)) | 0;
                de = i[fe >> 2] | 0;
                oe = (be & oe) << 1;
                i[fe >> 2] = be;
                fe = 0;
                ne = 0;
                he = 0;
                re = oe;
                oe = oe | 1;
                Ce = 64;
                while (1) {
                  ge = de & p;
                  if (((be | 0) == (de | 0)) | (((be - de) | 0) >>> 0 > pe >>> 0) | ((Ce | 0) == 0)) {
                    ne = 11;
                    break;
                  }
                  ue = ne >>> 0 < he >>> 0 ? ne : he;
                  if (ue >>> 0 >= 129) {
                    ne = 13;
                    break t;
                  }
                  ce = (Ee + ue) | 0;
                  le = (d + (ge + 128)) | 0;
                  Ae = (d + (ge + 124)) | 0;
                  ae = 0;
                  l = (d + (ge + ue)) | 0;
                  while (1) {
                    if (l >>> 0 > Ae >>> 0) break;
                    Le = (d + (ce + ae)) | 0;
                    if (
                      (a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0) !=
                      (a[Le >> 0] | (a[(Le + 1) >> 0] << 8) | (a[(Le + 2) >> 0] << 16) | (a[(Le + 3) >> 0] << 24) | 0)
                    )
                      break;
                    ae = (ae + 4) | 0;
                    l = (l + 4) | 0;
                  }
                  while (1) {
                    if (l >>> 0 >= le >>> 0) break;
                    if ((o[(d + (ce + ae)) >> 0] | 0) != (o[l >> 0] | 0)) break;
                    ae = (ae + 1) | 0;
                    l = (l + 1) | 0;
                  }
                  ue = (ue + ae) | 0;
                  r: do {
                    if (ue) {
                      l = ue;
                      ce = Ie;
                      le = (d + ge) | 0;
                      while (1) {
                        Ae = o[ce >> 0] | 0;
                        ae = o[le >> 0] | 0;
                        if ((Ae << 24) >> 24 != (ae << 24) >> 24) break;
                        l = (l + -1) | 0;
                        if (!l) break r;
                        else {
                          ce = (ce + 1) | 0;
                          le = (le + 1) | 0;
                        }
                      }
                      if ((Ae << 24) >> 24 != (ae << 24) >> 24) {
                        ne = 26;
                        break t;
                      }
                    }
                  } while (0);
                  if (fe) {
                    ne = 28;
                    break t;
                  }
                  if (ue >>> 0 >= 128) {
                    ne = 30;
                    break;
                  }
                  l = i[me >> 2] | 0;
                  if ((a[(d + (Ee + ue)) >> 0] | 0) > (a[(d + (ge + ue)) >> 0] | 0)) {
                    i[(l + (re << 2)) >> 2] = de;
                    Ae = ((de & i[M >> 2]) << 1) | 1;
                    ne = ue;
                    l = he;
                    re = Ae;
                    Ae = ((i[me >> 2] | 0) + (Ae << 2)) | 0;
                  } else {
                    i[(l + (oe << 2)) >> 2] = de;
                    Ae = (de & i[M >> 2]) << 1;
                    l = ue;
                    oe = Ae;
                    Ae = ((i[me >> 2] | 0) + (Ae << 2)) | 0;
                  }
                  fe = 0;
                  he = l;
                  de = i[Ae >> 2] | 0;
                  Ce = (Ce + -1) | 0;
                }
                if ((ne | 0) == 11) {
                  i[((i[me >> 2] | 0) + (re << 2)) >> 2] = i[Be >> 2];
                  i[((i[me >> 2] | 0) + (oe << 2)) >> 2] = i[Be >> 2];
                } else if ((ne | 0) == 30) {
                  Le = i[me >> 2] | 0;
                  i[(Le + (re << 2)) >> 2] = i[(Le + (((de & i[M >> 2]) << 1) << 2)) >> 2];
                  Le = i[me >> 2] | 0;
                  i[(Le + (oe << 2)) >> 2] = i[(Le + ((((de & i[M >> 2]) << 1) | 1) << 2)) >> 2];
                }
                be = (be + 1) | 0;
              }
              if ((ne | 0) == 13) et(405873, 405905, 373, 405932);
              else if ((ne | 0) == 26) et(405955, 405905, 378, 405932);
              else if ((ne | 0) == 28) Ze();
            }
          } while (0);
          Ge = (e + 4) | 0;
          Le = (k + 4) | 0;
          Se = (M + 524292) | 0;
          Ne = (M + 524296) | 0;
          Fe = 0;
          ae = _e;
          re = 0;
          e: while (1) {
            if (((re + 3) | 0) >>> 0 >= r >>> 0) {
              ne = 142;
              break;
            }
            De = (re + s) | 0;
            Te = De >>> 0 < He >>> 0 ? De : He;
            ye = (r - re) | 0;
            l = (Fe + 128) | 0;
            if (ae >>> 0 < l >>> 0) {
              ne = (ae | 0) == 0;
              Ae = ne ? l : ae;
              while (1) {
                if (Ae >>> 0 >= l >>> 0) break;
                Ae = Ae << 1;
              }
              oe = st[i[e >> 2] & 1](i[Ye >> 2] | 0, Ae << 3) | 0;
              if (!oe) {
                ne = 42;
                break;
              }
              l = we;
              if (!ne) dc(oe | 0, l | 0, (ae << 3) | 0) | 0;
              rt[i[Ge >> 2] & 1](i[Ye >> 2] | 0, l);
              ve = Ae;
            } else {
              oe = we;
              ve = ae;
            }
            ke = oe;
            Re = (ke + (Fe << 3)) | 0;
            be = De & p;
            ge = (i[Le >> 2] | 0) != 11 ? 16 : 64;
            ge = De >>> 0 < ge >>> 0 ? 0 : (De - ge) | 0;
            we = (d + be) | 0;
            de = (d + (be + 1)) | 0;
            he = (be + ye) | 0;
            fe = (d + he) | 0;
            he = (d + (he + -4)) | 0;
            l = Re;
            Ae = 1;
            ne = De;
            while (1) {
              ne = (ne + -1) | 0;
              if (!((ne >>> 0 > ge >>> 0) & (Ae >>> 0 < 3))) break;
              le = (De - ne) | 0;
              if (le >>> 0 > Te >>> 0) break;
              ue = ne & p;
              if ((o[we >> 0] | 0) != (o[(d + ue) >> 0] | 0)) {
                Be = Ae;
                Qe = l;
                Ae = Be;
                l = Qe;
                continue;
              }
              if ((o[de >> 0] | 0) == (o[(d + (ue + 1)) >> 0] | 0)) {
                ae = 0;
                ce = we;
              } else {
                Be = Ae;
                Qe = l;
                Ae = Be;
                l = Qe;
                continue;
              }
              while (1) {
                if (ce >>> 0 > he >>> 0) break;
                Qe = (d + (ue + ae)) | 0;
                if (
                  (a[ce >> 0] | (a[(ce + 1) >> 0] << 8) | (a[(ce + 2) >> 0] << 16) | (a[(ce + 3) >> 0] << 24) | 0) !=
                  (a[Qe >> 0] | (a[(Qe + 1) >> 0] << 8) | (a[(Qe + 2) >> 0] << 16) | (a[(Qe + 3) >> 0] << 24) | 0)
                )
                  break;
                ae = (ae + 4) | 0;
                ce = (ce + 4) | 0;
              }
              while (1) {
                if (ce >>> 0 >= fe >>> 0) break;
                if ((o[(d + (ue + ae)) >> 0] | 0) != (o[ce >> 0] | 0)) break;
                ae = (ae + 1) | 0;
                ce = (ce + 1) | 0;
              }
              if (ae >>> 0 <= Ae >>> 0) {
                Be = Ae;
                Qe = l;
                Ae = Be;
                l = Qe;
                continue;
              }
              Ae = l;
              i[Ae >> 2] = le;
              i[(Ae + 4) >> 2] = ae << 5;
              l = (Ae + 8) | 0;
              Ae = ae;
            }
            do {
              if (Ae >>> 0 < ye >>> 0) {
                Be = ye >>> 0 < 128 ? ye : 128;
                Qe = ye >>> 0 > 127;
                ne =
                  (M + 4 + (((Pe(a[we >> 0] | (a[(we + 1) >> 0] << 8) | (a[(we + 2) >> 0] << 16) | (a[(we + 3) >> 0] << 24), 506832829) | 0) >>> 15) << 2)) | 0;
                le = i[ne >> 2] | 0;
                ae = (De & i[M >> 2]) << 1;
                ce = ae | 1;
                if (Qe) {
                  i[ne >> 2] = De;
                  Ce = 0;
                  me = 0;
                  Ie = 64;
                } else {
                  Ce = 0;
                  me = 0;
                  Ie = 64;
                }
                while (1) {
                  pe = (De - le) | 0;
                  Ee = le & p;
                  if (((De | 0) == (le | 0)) | (pe >>> 0 > Te >>> 0) | ((Ie | 0) == 0)) {
                    ne = 63;
                    break;
                  }
                  he = Ce >>> 0 < me >>> 0 ? Ce : me;
                  if (he >>> 0 >= 129) {
                    ne = 66;
                    break e;
                  }
                  de = (be + he) | 0;
                  ue = (Ee + ye) | 0;
                  fe = (d + ue) | 0;
                  ue = (d + (ue + -4)) | 0;
                  ge = 0;
                  ne = (d + (Ee + he)) | 0;
                  while (1) {
                    if (ne >>> 0 > ue >>> 0) break;
                    ot = (d + (de + ge)) | 0;
                    if (
                      (a[ne >> 0] | (a[(ne + 1) >> 0] << 8) | (a[(ne + 2) >> 0] << 16) | (a[(ne + 3) >> 0] << 24) | 0) !=
                      (a[ot >> 0] | (a[(ot + 1) >> 0] << 8) | (a[(ot + 2) >> 0] << 16) | (a[(ot + 3) >> 0] << 24) | 0)
                    )
                      break;
                    ge = (ge + 4) | 0;
                    ne = (ne + 4) | 0;
                  }
                  while (1) {
                    if (ne >>> 0 >= fe >>> 0) break;
                    if ((o[(d + (de + ge)) >> 0] | 0) != (o[ne >> 0] | 0)) break;
                    ge = (ge + 1) | 0;
                    ne = (ne + 1) | 0;
                  }
                  he = (he + ge) | 0;
                  t: do {
                    if (he) {
                      ne = he;
                      de = we;
                      fe = (d + Ee) | 0;
                      while (1) {
                        ue = o[de >> 0] | 0;
                        ge = o[fe >> 0] | 0;
                        if ((ue << 24) >> 24 != (ge << 24) >> 24) break;
                        ne = (ne + -1) | 0;
                        if (!ne) break t;
                        else {
                          de = (de + 1) | 0;
                          fe = (fe + 1) | 0;
                        }
                      }
                      if ((ue << 24) >> 24 != (ge << 24) >> 24) {
                        ne = 79;
                        break e;
                      }
                    }
                  } while (0);
                  ne = l;
                  if (((l | 0) != 0) & (he >>> 0 > Ae >>> 0)) {
                    i[ne >> 2] = pe;
                    i[(ne + 4) >> 2] = he << 5;
                    l = (ne + 8) | 0;
                    Ae = he;
                  }
                  if (he >>> 0 >= Be >>> 0) {
                    ne = 83;
                    break;
                  }
                  if ((a[(d + (be + he)) >> 0] | 0) > (a[(d + (Ee + he)) >> 0] | 0)) {
                    if (Qe) i[((i[Se >> 2] | 0) + (ae << 2)) >> 2] = le;
                    ue = ((le & i[M >> 2]) << 1) | 1;
                    le = he;
                    ne = me;
                    ae = ue;
                    ue = ((i[Se >> 2] | 0) + (ue << 2)) | 0;
                  } else {
                    if (Qe) i[((i[Se >> 2] | 0) + (ce << 2)) >> 2] = le;
                    ue = (le & i[M >> 2]) << 1;
                    le = Ce;
                    ne = he;
                    ce = ue;
                    ue = ((i[Se >> 2] | 0) + (ue << 2)) | 0;
                  }
                  Ce = le;
                  me = ne;
                  le = i[ue >> 2] | 0;
                  Ie = (Ie + -1) | 0;
                }
                if ((ne | 0) == 63) {
                  if (!Qe) break;
                  i[((i[Se >> 2] | 0) + (ae << 2)) >> 2] = i[Ne >> 2];
                  i[((i[Se >> 2] | 0) + (ce << 2)) >> 2] = i[Ne >> 2];
                  break;
                } else if ((ne | 0) == 83) {
                  if (!Qe) break;
                  ot = i[Se >> 2] | 0;
                  i[(ot + (ae << 2)) >> 2] = i[(ot + (((le & i[M >> 2]) << 1) << 2)) >> 2];
                  ot = i[Se >> 2] | 0;
                  i[(ot + (ce << 2)) >> 2] = i[(ot + ((((le & i[M >> 2]) << 1) | 1) << 2)) >> 2];
                  break;
                }
              }
            } while (0);
            ne = 0;
            while (1) {
              if ((ne | 0) == 38) break;
              i[(Ue + (ne << 2)) >> 2] = 268435455;
              ne = (ne + 1) | 0;
            }
            Ae = (Ae + 1) | 0;
            Ae = Ae >>> 0 < 4 ? 4 : Ae;
            t: do {
              if (Vb(we, Ae, ye, Ue) | 0) {
                ae = ye >>> 0 > 37 ? 37 : ye;
                while (1) {
                  if (Ae >>> 0 > ae >>> 0) break t;
                  ne = i[(Ue + (Ae << 2)) >> 2] | 0;
                  if (ne >>> 0 < 268435455) {
                    ot = ne & 31;
                    i[l >> 2] = Te + (ne >>> 5) + 1;
                    i[(l + 4) >> 2] = (Ae << 5) | ((Ae | 0) == (ot | 0) ? 0 : ot);
                    l = (l + 8) | 0;
                  }
                  Ae = (Ae + 1) | 0;
                }
              }
            } while (0);
            ae = (l - Re) >> 3;
            l = (Fe + ae) | 0;
            Ae = Fe;
            while (1) {
              ne = Ae;
              Ae = (Ae + 1) | 0;
              if (Ae >>> 0 >= l >>> 0) break;
              if (((i[(ke + (ne << 3) + 4) >> 2] | 0) >>> 5) >>> 0 >= ((i[(ke + (Ae << 3) + 4) >> 2] | 0) >>> 5) >>> 0) {
                ne = 105;
                break e;
              }
              ne = i[(ke + (ne << 3)) >> 2] | 0;
              if (ne >>> 0 > Te >>> 0) continue;
              if (ne >>> 0 > (i[(ke + (Ae << 3)) >> 2] | 0) >>> 0) {
                ne = 108;
                break e;
              }
            }
            ce = (je + (re << 2)) | 0;
            i[ce >> 2] = ae;
            if (ae) {
              ne = (l + -1) | 0;
              ot = i[(ke + (ne << 3) + 4) >> 2] | 0;
              Ae = ot >>> 5;
              if (ot >>> 0 > 10431) {
                ye = (Ae + -1) | 0;
                l = (Fe + 1) | 0;
                ot = (ke + (ne << 3)) | 0;
                be = i[(ot + 4) >> 2] | 0;
                we = Re;
                i[we >> 2] = i[ot >> 2];
                i[(we + 4) >> 2] = be;
                i[ce >> 2] = 1;
                we = (De + Ae) | 0;
                we = we >>> 0 < Oe >>> 0 ? we : Oe;
                be = ((De + 64) | 0) >>> 0 > we >>> 0 ? (De + 1) | 0 : (we + -63) | 0;
                while (1) {
                  if (be >>> 0 >= we >>> 0) break;
                  ae = i[M >> 2] | 0;
                  Ce = (ae + -15) | 0;
                  me = be & p;
                  Be = (d + me) | 0;
                  Ee =
                    (M + 4 + (((Pe(a[Be >> 0] | (a[(Be + 1) >> 0] << 8) | (a[(Be + 2) >> 0] << 16) | (a[(Be + 3) >> 0] << 24), 506832829) | 0) >>> 15) << 2)) |
                    0;
                  pe = i[Ee >> 2] | 0;
                  ae = (be & ae) << 1;
                  i[Ee >> 2] = be;
                  Ee = 0;
                  ce = 0;
                  Ie = 0;
                  Ae = ae;
                  ae = ae | 1;
                  Qe = 64;
                  while (1) {
                    he = pe & p;
                    if (((be | 0) == (pe | 0)) | (((be - pe) | 0) >>> 0 > Ce >>> 0) | ((Qe | 0) == 0)) {
                      ne = 115;
                      break;
                    }
                    fe = ce >>> 0 < Ie >>> 0 ? ce : Ie;
                    if (fe >>> 0 >= 129) {
                      ne = 117;
                      break e;
                    }
                    ge = (me + fe) | 0;
                    de = (d + (he + 128)) | 0;
                    le = (d + (he + 124)) | 0;
                    ue = 0;
                    ne = (d + (he + fe)) | 0;
                    while (1) {
                      if (ne >>> 0 > le >>> 0) break;
                      ot = (d + (ge + ue)) | 0;
                      if (
                        (a[ne >> 0] | (a[(ne + 1) >> 0] << 8) | (a[(ne + 2) >> 0] << 16) | (a[(ne + 3) >> 0] << 24) | 0) !=
                        (a[ot >> 0] | (a[(ot + 1) >> 0] << 8) | (a[(ot + 2) >> 0] << 16) | (a[(ot + 3) >> 0] << 24) | 0)
                      )
                        break;
                      ue = (ue + 4) | 0;
                      ne = (ne + 4) | 0;
                    }
                    while (1) {
                      if (ne >>> 0 >= de >>> 0) break;
                      if ((o[(d + (ge + ue)) >> 0] | 0) != (o[ne >> 0] | 0)) break;
                      ue = (ue + 1) | 0;
                      ne = (ne + 1) | 0;
                    }
                    fe = (fe + ue) | 0;
                    t: do {
                      if (fe) {
                        ne = fe;
                        ge = Be;
                        de = (d + he) | 0;
                        while (1) {
                          le = o[ge >> 0] | 0;
                          ue = o[de >> 0] | 0;
                          if ((le << 24) >> 24 != (ue << 24) >> 24) break;
                          ne = (ne + -1) | 0;
                          if (!ne) break t;
                          else {
                            ge = (ge + 1) | 0;
                            de = (de + 1) | 0;
                          }
                        }
                        if ((le << 24) >> 24 != (ue << 24) >> 24) {
                          ne = 130;
                          break e;
                        }
                      }
                    } while (0);
                    if (Ee) {
                      ne = 132;
                      break e;
                    }
                    if (fe >>> 0 >= 128) {
                      ne = 134;
                      break;
                    }
                    ne = i[Se >> 2] | 0;
                    if ((a[(d + (me + fe)) >> 0] | 0) > (a[(d + (he + fe)) >> 0] | 0)) {
                      i[(ne + (Ae << 2)) >> 2] = pe;
                      le = ((pe & i[M >> 2]) << 1) | 1;
                      ce = fe;
                      ne = Ie;
                      Ae = le;
                      le = ((i[Se >> 2] | 0) + (le << 2)) | 0;
                    } else {
                      i[(ne + (ae << 2)) >> 2] = pe;
                      le = (pe & i[M >> 2]) << 1;
                      ne = fe;
                      ae = le;
                      le = ((i[Se >> 2] | 0) + (le << 2)) | 0;
                    }
                    Ee = 0;
                    Ie = ne;
                    pe = i[le >> 2] | 0;
                    Qe = (Qe + -1) | 0;
                  }
                  if ((ne | 0) == 115) {
                    i[((i[Se >> 2] | 0) + (Ae << 2)) >> 2] = i[Ne >> 2];
                    i[((i[Se >> 2] | 0) + (ae << 2)) >> 2] = i[Ne >> 2];
                  } else if ((ne | 0) == 134) {
                    ot = i[Se >> 2] | 0;
                    i[(ot + (Ae << 2)) >> 2] = i[(ot + (((pe & i[M >> 2]) << 1) << 2)) >> 2];
                    ot = i[Se >> 2] | 0;
                    i[(ot + (ae << 2)) >> 2] = i[(ot + ((((pe & i[M >> 2]) << 1) | 1) << 2)) >> 2];
                  }
                  be = (be + 1) | 0;
                }
                ac((je + ((re + 1) << 2)) | 0, 0, (ye << 2) | 0) | 0;
                re = (re + ye) | 0;
              }
            } else l = Fe;
            Fe = l;
            we = oe;
            ae = ve;
            re = (re + 1) | 0;
          }
          if ((ne | 0) == 42) $e(1);
          else if ((ne | 0) == 66) et(405873, 405905, 373, 405932);
          else if ((ne | 0) == 79) et(405955, 405905, 378, 405932);
          else if ((ne | 0) == 105) et(403595, 403667, 793, 403707);
          else if ((ne | 0) == 108) et(403740, 403667, 795, 403707);
          else if ((ne | 0) == 117) et(405873, 405905, 373, 405932);
          else if ((ne | 0) == 130) et(405955, 405905, 378, 405932);
          else if ((ne | 0) == 132) Ze();
          else if ((ne | 0) == 142) {
            Ie = i[te >> 2] | 0;
            Ce = i[q >> 2] | 0;
            i[ze >> 2] = i[j >> 2];
            i[(ze + 4) >> 2] = i[(j + 4) >> 2];
            i[(ze + 8) >> 2] = i[(j + 8) >> 2];
            i[(ze + 12) >> 2] = i[(j + 12) >> 2];
            me = i[ee >> 2] | 0;
            Be = st[i[e >> 2] & 1](i[Ye >> 2] | 0, ((r << 4) + 16) | 0) | 0;
            if (!Be) $e(1);
            Qe = (Xe + 4904) | 0;
            i[Qe >> 2] = r;
            l = st[i[e >> 2] & 1](i[Ye >> 2] | 0, (_e + 8) | 0) | 0;
            if (!l) $e(1);
            Ee = (Xe + 4896) | 0;
            i[Ee >> 2] = l;
            ce = (Be + 12) | 0;
            le = (xe + 224) | 0;
            ue = we;
            ge = (s - Ce) | 0;
            de = (Xe + 2816) | 0;
            fe = (Xe + 4900) | 0;
            he = (r + 1) | 0;
            pe = 0;
            while (1) {
              if ((pe | 0) == 2) break;
              else l = 0;
              while (1) {
                if ((l | 0) == (he | 0)) break;
                i[(Be + (l << 4)) >> 2] = 1;
                i[(Be + (l << 4) + 4) >> 2] = 0;
                i[(Be + (l << 4) + 8) >> 2] = 0;
                h[(Be + (l << 4) + 12) >> 2] = se;
                l = (l + 1) | 0;
              }
              if (!pe) Fa(Xe, s, d, p);
              else {
                re = i[ee >> 2] | 0;
                ac(Ke | 0, 0, 1024) | 0;
                ac(Je | 0, 0, 2816) | 0;
                ac(We | 0, 0, 2080) | 0;
                re = (re - me) | 0;
                Ae = ge;
                ae = 0;
                while (1) {
                  if ((ae | 0) == (re | 0)) break;
                  oe = i[($ + (ae << 4)) >> 2] | 0;
                  ne = i[($ + (ae << 4) + 4) >> 2] & 16777215;
                  l = n[($ + (ae << 4) + 14) >> 1] | 0;
                  ot = n[($ + (ae << 4) + 12) >> 1] | 0;
                  e = (Je + ((ot & 65535) << 2)) | 0;
                  i[e >> 2] = (i[e >> 2] | 0) + 1;
                  if ((ot & 65535) > 127) {
                    l = (We + ((l & 65535) << 2)) | 0;
                    i[l >> 2] = (i[l >> 2] | 0) + 1;
                    l = 0;
                  } else l = 0;
                  while (1) {
                    if ((l | 0) == (oe | 0)) break;
                    ot = (Ke + (a[(d + ((Ae + l) & p)) >> 0] << 2)) | 0;
                    i[ot >> 2] = (i[ot >> 2] | 0) + 1;
                    l = (l + 1) | 0;
                  }
                  Ae = (Ae + (oe + ne)) | 0;
                  ae = (ae + 1) | 0;
                }
                Va(Ke, 256, qe);
                Va(Je, 704, Xe);
                Va(We, 520, de);
                l = 2139095040;
                re = 0;
                while (1) {
                  if ((re | 0) == 704) break;
                  ot = i[(Xe + (re << 2)) >> 2] | 0;
                  i[xe >> 2] = l;
                  i[Me >> 2] = ot;
                  ie = ((i[_ >> 2] = l), +h[_ >> 2]);
                  l = i[(ie < ((i[_ >> 2] = ot), +h[_ >> 2]) ? xe : Me) >> 2] | 0;
                  re = (re + 1) | 0;
                }
                i[fe >> 2] = l;
                re = i[Qe >> 2] | 0;
                l = i[Ee >> 2] | 0;
                h[l >> 2] = 0.0;
                ie = 0.0;
                oe = 0;
                while (1) {
                  if ((oe | 0) == (re | 0)) break;
                  nt = ie + +h[(qe + (a[(d + ((oe + s) & p)) >> 0] << 2)) >> 2];
                  ot = (oe + 1) | 0;
                  h[(l + (ot << 2)) >> 2] = nt;
                  ie = nt;
                  oe = ot;
                }
              }
              i[ee >> 2] = me;
              i[te >> 2] = Ie;
              i[q >> 2] = Ce;
              i[j >> 2] = i[ze >> 2];
              i[(j + 4) >> 2] = i[(ze + 4) >> 2];
              i[(j + 8) >> 2] = i[(ze + 8) >> 2];
              i[(j + 12) >> 2] = i[(ze + 12) >> 2];
              oe = (i[Le >> 2] | 0) < 11 ? 150 : 325;
              i[Be >> 2] = 0;
              h[ce >> 2] = 0.0;
              i[le >> 2] = 0;
              l = 0;
              re = 0;
              while (1) {
                if (((re + 3) | 0) >>> 0 >= r >>> 0) {
                  l = r;
                  break;
                }
                ot = (je + (re << 2)) | 0;
                Ga(r, s, re, d, p, k, He, j, i[ot >> 2] | 0, (ue + (l << 3)) | 0, Xe, xe, Be);
                ot = i[ot >> 2] | 0;
                l = (l + ot) | 0;
                if ((ot | 0) == 1 ? ((Ve = (i[(ue + ((l + -1) << 3) + 4) >> 2] | 0) >>> 5), Ve >>> 0 > oe >>> 0) : 0) {
                  i[le >> 2] = 0;
                  re = (re + (Ve + -1)) | 0;
                }
                re = (re + 1) | 0;
              }
              while (1) {
                if (i[(Be + (l << 4) + 8) >> 2] | 0) break;
                if ((i[(Be + (l << 4)) >> 2] | 0) != 1) break;
                l = (l + -1) | 0;
              }
              i[(Be + (l << 4) + 12) >> 2] = -1;
              re = 0;
              while (1) {
                if (!l) break;
                e = ((i[(Be + (l << 4)) >> 2] & 16777215) + (i[(Be + (l << 4) + 8) >> 2] | 0)) | 0;
                ot = (l - e) | 0;
                i[(Be + (ot << 4) + 12) >> 2] = e;
                l = ot;
                re = (re + 1) | 0;
              }
              i[ee >> 2] = (i[ee >> 2] | 0) + re;
              Da(r, s, He, Be, j, q, $, te);
              pe = (pe + 1) | 0;
            }
            rt[i[Ge >> 2] & 1](i[Ye >> 2] | 0, i[Ee >> 2] | 0);
            i[Ee >> 2] = 0;
            rt[i[Ge >> 2] & 1](i[Ye >> 2] | 0, Be);
            rt[i[Ge >> 2] & 1](i[Ye >> 2] | 0, we);
            rt[i[Ge >> 2] & 1](i[Ye >> 2] | 0, je);
            w = tt;
            return;
          }
        }
        function Ja(e, r, s, l, d, h, p, k, _, M, j, q, $) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          var ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0;
          He = w;
          w = (w + 32) | 0;
          Me = (He + 16) | 0;
          xe = He;
          Ge = ((1 << i[(p + 8) >> 2]) + -16) | 0;
          te = i[M >> 2] | 0;
          Le = (s + r) | 0;
          Ue = r >>> 0 > 7 ? (Le + -7) | 0 : s;
          Oe = (p + 4) | 0;
          Ne = (i[Oe >> 2] | 0) < 9 ? 64 : 512;
          ee = (Ne + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (l ^ 1)) ^ 1) & (r >>> 0 < 2049)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Se = (d + e) | 0;
              ve = Se;
              Se = (Se + 4) | 0;
              Se =
                lc(
                  a[ve >> 0] | (a[(ve + 1) >> 0] << 8) | (a[(ve + 2) >> 0] << 16) | (a[(ve + 3) >> 0] << 24) | 0,
                  a[Se >> 0] | (a[(Se + 1) >> 0] << 8) | (a[(Se + 2) >> 0] << 16) | (a[(Se + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              Se = bc(Se | 0, de | 0, 48) | 0;
              i[(k + (Se << 2)) >> 2] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(k + 262148) >> 0] = 0;
              tt = 8;
            }
          } else if (!(o[(k + 262148) >> 0] & 1)) tt = 8;
          else {
            ac(k | 0, 0, 262149) | 0;
            tt = 8;
          }
          if ((tt | 0) == 8 ? (r >>> 0 > 6) & (s >>> 0 > 2) : 0) {
            ve = (s + -3) | 0;
            Se = (d + (ve & h)) | 0;
            Fe = Se;
            Se = (Se + 4) | 0;
            Se =
              lc(
                a[Fe >> 0] | (a[(Fe + 1) >> 0] << 8) | (a[(Fe + 2) >> 0] << 16) | (a[(Fe + 3) >> 0] << 24) | 0,
                a[Se >> 0] | (a[(Se + 1) >> 0] << 8) | (a[(Se + 2) >> 0] << 16) | (a[(Se + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            Se = bc(Se | 0, de | 0, 48) | 0;
            i[(k + (Se << 2)) >> 2] = ve;
            Se = (s + -2) | 0;
            ve = (d + (Se & h)) | 0;
            Fe = ve;
            ve = (ve + 4) | 0;
            ve =
              lc(
                a[Fe >> 0] | (a[(Fe + 1) >> 0] << 8) | (a[(Fe + 2) >> 0] << 16) | (a[(Fe + 3) >> 0] << 24) | 0,
                a[ve >> 0] | (a[(ve + 1) >> 0] << 8) | (a[(ve + 2) >> 0] << 16) | (a[(ve + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            ve = bc(ve | 0, de | 0, 48) | 0;
            i[(k + (ve << 2)) >> 2] = Se;
            ve = (s + -1) | 0;
            Se = (d + (ve & h)) | 0;
            Fe = Se;
            Se = (Se + 4) | 0;
            Se =
              lc(
                a[Fe >> 0] | (a[(Fe + 1) >> 0] << 8) | (a[(Fe + 2) >> 0] << 16) | (a[(Fe + 3) >> 0] << 24) | 0,
                a[Se >> 0] | (a[(Se + 1) >> 0] << 8) | (a[(Se + 2) >> 0] << 16) | (a[(Se + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            Se = bc(Se | 0, de | 0, 48) | 0;
            i[(k + (Se << 2)) >> 2] = ve;
          }
          fe = (Me + 4) | 0;
          he = (Me + 8) | 0;
          pe = (Me + 12) | 0;
          Ee = (Me + 4) | 0;
          Ie = (k + 262156) | 0;
          Ce = (k + 262152) | 0;
          me = (Me + 12) | 0;
          Be = (Me + 8) | 0;
          Qe = Ne << 2;
          be = (Le + -7) | 0;
          we = (xe + 4) | 0;
          ye = (xe + 8) | 0;
          ke = (xe + 12) | 0;
          Re = (xe + 4) | 0;
          Te = (xe + 8) | 0;
          De = (xe + 12) | 0;
          Fe = (_ + 8) | 0;
          ve = (_ + 12) | 0;
          Se = (_ + 4) | 0;
          p = s;
          ge = j;
          e = te;
          e: while (1) {
            ce = ge;
            ue = (ee + Qe) | 0;
            t: while (1) {
              le = (Le - p) | 0;
              if (((p + 8) | 0) >>> 0 >= Le >>> 0) break e;
              Ae = p >>> 0 < Ge >>> 0 ? p : Ge;
              i[Me >> 2] = 0;
              i[fe >> 2] = 0;
              i[he >> 2] = 0;
              i[pe >> 2] = 4240;
              ae = p & h;
              ne = (d + ae) | 0;
              re = ne;
              oe = re;
              oe = a[oe >> 0] | (a[(oe + 1) >> 0] << 8) | (a[(oe + 2) >> 0] << 16) | (a[(oe + 3) >> 0] << 24);
              re = (re + 4) | 0;
              re = lc(oe | 0, a[re >> 0] | (a[(re + 1) >> 0] << 8) | (a[(re + 2) >> 0] << 16) | (a[(re + 3) >> 0] << 24) | 0, -1124073472, 1979815) | 0;
              re = bc(re | 0, de | 0, 48) | 0;
              se = i[_ >> 2] | 0;
              l = (p - se) | 0;
              i[Ee >> 2] = 0;
              if (l >>> 0 < p >>> 0 ? ((Ve = l & h), (o[(d + Ve) >> 0] | 0) == ((oe & 255) << 24) >> 24) : 0) {
                r = (ae + le) | 0;
                te = (d + r) | 0;
                r = (d + (r + -4)) | 0;
                s = 0;
                l = ne;
                while (1) {
                  if (l >>> 0 > r >>> 0) break;
                  ie = (d + (Ve + s)) | 0;
                  if (
                    (a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0) !=
                    (a[ie >> 0] | (a[(ie + 1) >> 0] << 8) | (a[(ie + 2) >> 0] << 16) | (a[(ie + 3) >> 0] << 24) | 0)
                  )
                    break;
                  s = (s + 4) | 0;
                  l = (l + 4) | 0;
                }
                while (1) {
                  if (l >>> 0 >= te >>> 0) break;
                  if ((o[(d + (Ve + s)) >> 0] | 0) != (o[l >> 0] | 0)) break;
                  s = (s + 1) | 0;
                  l = (l + 1) | 0;
                }
                if (s >>> 0 > 3) {
                  tt = 22;
                  break;
                }
              }
              ie = (k + (re << 2)) | 0;
              te = i[ie >> 2] | 0;
              i[ie >> 2] = p;
              re = (p - te) | 0;
              se = te & h;
              if (!(((p | 0) == (te | 0) ? 1 : (o[(d + se) >> 0] | 0) != ((oe & 255) << 24) >> 24) | (re >>> 0 > Ae >>> 0))) {
                r = (ae + le) | 0;
                te = (d + r) | 0;
                r = (d + (r + -4)) | 0;
                s = 0;
                l = ne;
                while (1) {
                  if (l >>> 0 > r >>> 0) break;
                  oe = (d + (se + s)) | 0;
                  if (
                    (a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0) !=
                    (a[oe >> 0] | (a[(oe + 1) >> 0] << 8) | (a[(oe + 2) >> 0] << 16) | (a[(oe + 3) >> 0] << 24) | 0)
                  )
                    break;
                  s = (s + 4) | 0;
                  l = (l + 4) | 0;
                }
                while (1) {
                  if (l >>> 0 >= te >>> 0) break;
                  if ((o[(d + (se + s)) >> 0] | 0) != (o[l >> 0] | 0)) break;
                  s = (s + 1) | 0;
                  l = (l + 1) | 0;
                }
                if (s >>> 0 > 3) {
                  tt = 32;
                  break;
                }
                if ((i[Ie >> 2] | 0) >>> 0 < ((i[Ce >> 2] | 0) >>> 7) >>> 0) l = 0;
                else {
                  oe = 0;
                  l = 0;
                  se = ((Pe(a[ne >> 0] | (a[(ne + 1) >> 0] << 8) | (a[(ne + 2) >> 0] << 16) | (a[(ne + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((oe | 0) == 1) break;
                    ne = n[(21084 + (se << 1)) >> 1] | 0;
                    r = ne & 65535;
                    i[Ce >> 2] = (i[Ce >> 2] | 0) + 1;
                    if (
                      (ne << 16) >> 16 != 0
                        ? ((Ye = r & 31), (je = r >>> 5), (qe = ((i[(11272 + (Ye << 2)) >> 2] | 0) + (Pe(Ye, je) | 0)) | 0), Ye >>> 0 <= le >>> 0)
                        : 0
                    ) {
                      s = (qe + Ye) | 0;
                      re = (280811 + s) | 0;
                      s = (280811 + (s + -4)) | 0;
                      te = 0;
                      r = (280811 + qe) | 0;
                      while (1) {
                        if (r >>> 0 > s >>> 0) break;
                        ne = (d + (ae + te)) | 0;
                        if (
                          (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                          (a[ne >> 0] | (a[(ne + 1) >> 0] << 8) | (a[(ne + 2) >> 0] << 16) | (a[(ne + 3) >> 0] << 24) | 0)
                        )
                          break;
                        te = (te + 4) | 0;
                        r = (r + 4) | 0;
                      }
                      while (1) {
                        if (r >>> 0 >= re >>> 0) break;
                        if ((o[(d + (ae + te)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                        te = (te + 1) | 0;
                        r = (r + 1) | 0;
                      }
                      if (
                        !((((te + 10) | 0) >>> 0 <= Ye >>> 0) | ((te | 0) == 0))
                          ? ((Je = (Ae + je + 1 + (a[(407930 + (Ye - te)) >> 0] << a[(280786 + Ye) >> 0])) | 0),
                            (We = (((te * 540) | 0) + 3840 + (Pe((_e(Je | 0) | 0) ^ 31, -120) | 0)) | 0),
                            We >>> 0 >= (i[me >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Me >> 2] = te;
                        i[Ee >> 2] = Ye ^ te;
                        i[Be >> 2] = Je;
                        i[me >> 2] = We;
                        i[Ie >> 2] = (i[Ie >> 2] | 0) + 1;
                        l = 1;
                      }
                    }
                    oe = (oe + 1) | 0;
                    se = (se + 1) | 0;
                  }
                  l = (l & 1) != 0;
                }
                i[ie >> 2] = p;
                if (l & 1) {
                  ue = 0;
                  break;
                }
              }
              e = (e + 1) | 0;
              r = (p + 1) | 0;
              if (r >>> 0 <= ee >>> 0) {
                p = r;
                continue;
              }
              if (r >>> 0 > ue >>> 0) {
                l = (p + 17) | 0;
                l = l >>> 0 < be >>> 0 ? l : be;
                p = r;
                while (1) {
                  if (p >>> 0 >= l >>> 0) continue t;
                  le = (d + (p & h)) | 0;
                  ae = le;
                  le = (le + 4) | 0;
                  le =
                    lc(
                      a[ae >> 0] | (a[(ae + 1) >> 0] << 8) | (a[(ae + 2) >> 0] << 16) | (a[(ae + 3) >> 0] << 24) | 0,
                      a[le >> 0] | (a[(le + 1) >> 0] << 8) | (a[(le + 2) >> 0] << 16) | (a[(le + 3) >> 0] << 24) | 0,
                      -1124073472,
                      1979815
                    ) | 0;
                  le = bc(le | 0, de | 0, 48) | 0;
                  i[(k + (le << 2)) >> 2] = p;
                  p = (p + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                l = (p + 9) | 0;
                l = l >>> 0 < be >>> 0 ? l : be;
                p = r;
                while (1) {
                  if (p >>> 0 >= l >>> 0) continue t;
                  le = (d + (p & h)) | 0;
                  ae = le;
                  le = (le + 4) | 0;
                  le =
                    lc(
                      a[ae >> 0] | (a[(ae + 1) >> 0] << 8) | (a[(ae + 2) >> 0] << 16) | (a[(ae + 3) >> 0] << 24) | 0,
                      a[le >> 0] | (a[(le + 1) >> 0] << 8) | (a[(le + 2) >> 0] << 16) | (a[(le + 3) >> 0] << 24) | 0,
                      -1124073472,
                      1979815
                    ) | 0;
                  le = bc(le | 0, de | 0, 48) | 0;
                  i[(k + (le << 2)) >> 2] = p;
                  p = (p + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            if ((tt | 0) == 22) {
              tt = 0;
              i[Me >> 2] = s;
              i[Be >> 2] = se;
              i[me >> 2] = ((s * 540) | 0) + 3900;
              i[(k + (re << 2)) >> 2] = p;
              ue = 0;
            } else if ((tt | 0) == 32) {
              tt = 0;
              i[Me >> 2] = s;
              i[Be >> 2] = re;
              i[me >> 2] = ((s * 540) | 0) + 3840 + (Pe((_e(re | 0) | 0) ^ 31, -120) | 0);
              ue = 0;
            }
            t: while (1) {
              le = (le + -1) | 0;
              if ((i[Oe >> 2] | 0) < 5) {
                se = ((i[Me >> 2] | 0) + -1) | 0;
                se = se >>> 0 < le >>> 0 ? se : le;
              } else se = 0;
              i[xe >> 2] = se;
              i[we >> 2] = 0;
              i[ye >> 2] = 0;
              i[ke >> 2] = 4240;
              ne = (p + 1) | 0;
              ae = ne >>> 0 < Ge >>> 0 ? ne : Ge;
              ce = ne & h;
              ie = (d + ce) | 0;
              te = ie;
              oe = te;
              te = (te + 4) | 0;
              te =
                lc(
                  a[oe >> 0] | (a[(oe + 1) >> 0] << 8) | (a[(oe + 2) >> 0] << 16) | (a[(oe + 3) >> 0] << 24) | 0,
                  a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              te = bc(te | 0, de | 0, 48) | 0;
              oe = o[(d + (ce + se)) >> 0] | 0;
              re = i[_ >> 2] | 0;
              l = (ne - re) | 0;
              i[Re >> 2] = 0;
              if (l >>> 0 < ne >>> 0 ? ((Ke = l & h), (oe << 24) >> 24 == (o[(d + (Ke + se)) >> 0] | 0)) : 0) {
                r = (ce + le) | 0;
                s = (d + r) | 0;
                r = (d + (r + -4)) | 0;
                ee = 0;
                l = ie;
                while (1) {
                  if (l >>> 0 > r >>> 0) break;
                  Ae = (d + (Ke + ee)) | 0;
                  if (
                    (a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0) !=
                    (a[Ae >> 0] | (a[(Ae + 1) >> 0] << 8) | (a[(Ae + 2) >> 0] << 16) | (a[(Ae + 3) >> 0] << 24) | 0)
                  )
                    break;
                  ee = (ee + 4) | 0;
                  l = (l + 4) | 0;
                }
                while (1) {
                  if (l >>> 0 >= s >>> 0) break;
                  if ((o[(d + (Ke + ee)) >> 0] | 0) != (o[l >> 0] | 0)) break;
                  ee = (ee + 1) | 0;
                  l = (l + 1) | 0;
                }
                if (ee >>> 0 > 3) {
                  i[xe >> 2] = ee;
                  i[Te >> 2] = re;
                  i[De >> 2] = ((ee * 540) | 0) + 3900;
                  i[(k + (te << 2)) >> 2] = ne;
                } else tt = 64;
              } else tt = 64;
              do {
                if ((tt | 0) == 64) {
                  tt = 0;
                  Ae = (k + (te << 2)) | 0;
                  s = i[Ae >> 2] | 0;
                  i[Ae >> 2] = ne;
                  te = (ne - s) | 0;
                  re = s & h;
                  if (((ne | 0) == (s | 0) ? 1 : (oe << 24) >> 24 != (o[(d + (re + se)) >> 0] | 0)) | (te >>> 0 > ae >>> 0)) {
                    ne = p;
                    oe = e;
                    break t;
                  }
                  r = (ce + le) | 0;
                  s = (d + r) | 0;
                  r = (d + (r + -4)) | 0;
                  ee = 0;
                  l = ie;
                  while (1) {
                    if (l >>> 0 > r >>> 0) break;
                    oe = (d + (re + ee)) | 0;
                    if (
                      (a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0) !=
                      (a[oe >> 0] | (a[(oe + 1) >> 0] << 8) | (a[(oe + 2) >> 0] << 16) | (a[(oe + 3) >> 0] << 24) | 0)
                    )
                      break;
                    ee = (ee + 4) | 0;
                    l = (l + 4) | 0;
                  }
                  while (1) {
                    if (l >>> 0 >= s >>> 0) break;
                    if ((o[(d + (re + ee)) >> 0] | 0) != (o[l >> 0] | 0)) break;
                    ee = (ee + 1) | 0;
                    l = (l + 1) | 0;
                  }
                  if (ee >>> 0 > 3) {
                    i[xe >> 2] = ee;
                    i[Te >> 2] = te;
                    i[De >> 2] = ((ee * 540) | 0) + 3840 + (Pe((_e(te | 0) | 0) ^ 31, -120) | 0);
                    break;
                  }
                  if ((i[Ie >> 2] | 0) >>> 0 < ((i[Ce >> 2] | 0) >>> 7) >>> 0) l = 0;
                  else {
                    se = 0;
                    l = 0;
                    re = ((Pe(a[ie >> 0] | (a[(ie + 1) >> 0] << 8) | (a[(ie + 2) >> 0] << 16) | (a[(ie + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                    while (1) {
                      if ((se | 0) == 1) break;
                      ie = n[(21084 + (re << 1)) >> 1] | 0;
                      r = ie & 65535;
                      i[Ce >> 2] = (i[Ce >> 2] | 0) + 1;
                      if (
                        (ie << 16) >> 16 != 0
                          ? ((Xe = r & 31), (ze = r >>> 5), (Ze = ((i[(11272 + (Xe << 2)) >> 2] | 0) + (Pe(Xe, ze) | 0)) | 0), Xe >>> 0 <= le >>> 0)
                          : 0
                      ) {
                        ee = (Ze + Xe) | 0;
                        te = (280811 + ee) | 0;
                        ee = (280811 + (ee + -4)) | 0;
                        s = 0;
                        r = (280811 + Ze) | 0;
                        while (1) {
                          if (r >>> 0 > ee >>> 0) break;
                          ie = (d + (ce + s)) | 0;
                          if (
                            (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                            (a[ie >> 0] | (a[(ie + 1) >> 0] << 8) | (a[(ie + 2) >> 0] << 16) | (a[(ie + 3) >> 0] << 24) | 0)
                          )
                            break;
                          s = (s + 4) | 0;
                          r = (r + 4) | 0;
                        }
                        while (1) {
                          if (r >>> 0 >= te >>> 0) break;
                          if ((o[(d + (ce + s)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                          s = (s + 1) | 0;
                          r = (r + 1) | 0;
                        }
                        if (
                          !((((s + 10) | 0) >>> 0 <= Xe >>> 0) | ((s | 0) == 0))
                            ? (($e = (ae + ze + 1 + (a[(407930 + (Xe - s)) >> 0] << a[(280786 + Xe) >> 0])) | 0),
                              (et = (((s * 540) | 0) + 3840 + (Pe((_e($e | 0) | 0) ^ 31, -120) | 0)) | 0),
                              et >>> 0 >= (i[De >> 2] | 0) >>> 0)
                            : 0
                        ) {
                          i[xe >> 2] = s;
                          i[Re >> 2] = Xe ^ s;
                          i[Te >> 2] = $e;
                          i[De >> 2] = et;
                          i[Ie >> 2] = (i[Ie >> 2] | 0) + 1;
                          l = 1;
                        }
                      }
                      se = (se + 1) | 0;
                      re = (re + 1) | 0;
                    }
                    l = (l & 1) != 0;
                  }
                  i[Ae >> 2] = ne;
                  if (!(l & 1)) {
                    ne = p;
                    oe = e;
                    break t;
                  }
                }
              } while (0);
              if ((i[ke >> 2] | 0) >>> 0 < (((i[pe >> 2] | 0) + 700) | 0) >>> 0) {
                ne = p;
                oe = e;
                break;
              }
              e = (e + 1) | 0;
              i[Me >> 2] = i[xe >> 2];
              i[(Me + 4) >> 2] = i[(xe + 4) >> 2];
              i[(Me + 8) >> 2] = i[(xe + 8) >> 2];
              i[(Me + 12) >> 2] = i[(xe + 12) >> 2];
              ue = (ue + 1) | 0;
              if (!(((ue | 0) < 4) & (((p + 9) | 0) >>> 0 < Le >>> 0))) {
                oe = e;
                break;
              } else p = ne;
            }
            p = i[Me >> 2] | 0;
            ee = (ne + (p << 1) + Ne) | 0;
            e = i[he >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ne >>> 0 < Ge >>> 0 ? ne : Ge) >>> 0) {
                s = (e + 3) | 0;
                ue = i[_ >> 2] | 0;
                l = (s - ue) | 0;
                r = i[Se >> 2] | 0;
                s = (s - r) | 0;
                if ((e | 0) == (ue | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (r | 0)) {
                      do {
                        if (l >>> 0 < 7) e = (158663784 >>> (l << 2)) & 15;
                        else {
                          if (s >>> 0 < 7) {
                            e = (266017486 >>> (s << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[Fe >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[ve >> 2] = i[Fe >> 2];
                  i[Fe >> 2] = i[Se >> 2];
                  i[Se >> 2] = i[_ >> 2];
                  i[_ >> 2] = i[he >> 2];
                  p = i[Me >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            se = (ge + 16) | 0;
            ue = i[fe >> 2] | 0;
            l = p ^ ue;
            i[ge >> 2] = oe;
            i[(ge + 4) >> 2] = p | (ue << 24);
            p = (ge + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[p >> 1] = e;
              p = 0;
            } else {
              ce = (e + -12) | 0;
              ue = (((_e(ce | 0) | 0) ^ 31) + -1) | 0;
              le = (ce >>> ue) & 1;
              e = ((((ue << 1) + 65534) | le) + 16) & 65535;
              n[p >> 1] = e;
              p = (ue << 24) | (ce - ((le | 2) << ue));
            }
            i[(ge + 8) >> 2] = p;
            te = (e << 16) >> 16 == 0;
            re = (ge + 12) | 0;
            do {
              if (oe >>> 0 >= 6) {
                if (oe >>> 0 < 130) {
                  ge = (oe + -2) | 0;
                  s = (((_e(ge | 0) | 0) ^ 31) + -1) | 0;
                  s = ((s << 1) + (ge >>> s) + 2) & 65535;
                  break;
                }
                if (oe >>> 0 < 2114) {
                  s = (((_e((oe + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (oe >>> 0 < 6210) s = 21;
                else s = oe >>> 0 < 22594 ? 22 : 23;
              } else s = oe & 65535;
            } while (0);
            do {
              if (l >>> 0 >= 10) {
                if (l >>> 0 < 134) {
                  ge = (l + -6) | 0;
                  e = (((_e(ge | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (ge >>> e) + 4) & 65535;
                  break;
                }
                if (l >>> 0 < 2118) e = (((_e((l + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (l + 65534) & 65535;
            } while (0);
            p = e & 65535;
            l = s & 65535;
            r = (p & 7) | ((l << 3) & 56);
            if (te & ((s & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? r : r | 64) & 65535;
            else e = n[(88156 + (((p >>> 3) + (((l >>> 3) * 3) | 0)) << 1)) >> 1] | (r & 65535);
            n[re >> 1] = e;
            i[$ >> 2] = (i[$ >> 2] | 0) + oe;
            e = (ne + (i[Me >> 2] | 0)) | 0;
            e = e >>> 0 < Ue >>> 0 ? e : Ue;
            p = (ne + 2) | 0;
            while (1) {
              if (p >>> 0 >= e >>> 0) break;
              ge = (d + (p & h)) | 0;
              ue = ge;
              ge = (ge + 4) | 0;
              ge =
                lc(
                  a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0,
                  a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              ge = bc(ge | 0, de | 0, 48) | 0;
              i[(k + (ge << 2)) >> 2] = p;
              p = (p + 1) | 0;
            }
            p = (ne + (i[Me >> 2] | 0)) | 0;
            ge = se;
            e = 0;
          }
          i[M >> 2] = e + le;
          i[q >> 2] = (i[q >> 2] | 0) + ((ce - j) >> 4);
          w = He;
          return;
        }
        function Ka(e, r, s, l, d, h, p, w, k, _, M, j, q) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          w = w | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          var $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0;
          ve = ((1 << i[(p + 8) >> 2]) + -16) | 0;
          ee = i[_ >> 2] | 0;
          Se = (s + r) | 0;
          Fe = r >>> 0 > 7 ? (Se + -7) | 0 : s;
          De = (p + 4) | 0;
          Te = (i[De >> 2] | 0) < 9 ? 64 : 512;
          p = (Te + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (l ^ 1)) ^ 1) & (r >>> 0 < 2049)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Re = (d + e) | 0;
              ke = Re;
              Re = (Re + 4) | 0;
              Re =
                lc(
                  a[ke >> 0] | (a[(ke + 1) >> 0] << 8) | (a[(ke + 2) >> 0] << 16) | (a[(ke + 3) >> 0] << 24) | 0,
                  a[Re >> 0] | (a[(Re + 1) >> 0] << 8) | (a[(Re + 2) >> 0] << 16) | (a[(Re + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              Re = bc(Re | 0, de | 0, 48) | 0;
              Re = (w + (Re << 2)) | 0;
              i[Re >> 2] = 0;
              i[(Re + 4) >> 2] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(w + 262152) >> 0] = 0;
              $ = 8;
            }
          } else if (!(o[(w + 262152) >> 0] & 1)) $ = 8;
          else {
            ac(w | 0, 0, 262153) | 0;
            $ = 8;
          }
          if (($ | 0) == 8 ? (r >>> 0 > 6) & (s >>> 0 > 2) : 0) {
            Re = (s + -3) | 0;
            ke = (d + (Re & h)) | 0;
            ye = ke;
            ke = (ke + 4) | 0;
            ke =
              lc(
                a[ye >> 0] | (a[(ye + 1) >> 0] << 8) | (a[(ye + 2) >> 0] << 16) | (a[(ye + 3) >> 0] << 24) | 0,
                a[ke >> 0] | (a[(ke + 1) >> 0] << 8) | (a[(ke + 2) >> 0] << 16) | (a[(ke + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            ke = bc(ke | 0, de | 0, 48) | 0;
            i[(w + ((ke + ((Re >>> 3) & 1)) << 2)) >> 2] = Re;
            Re = (s + -2) | 0;
            ke = (d + (Re & h)) | 0;
            ye = ke;
            ke = (ke + 4) | 0;
            ke =
              lc(
                a[ye >> 0] | (a[(ye + 1) >> 0] << 8) | (a[(ye + 2) >> 0] << 16) | (a[(ye + 3) >> 0] << 24) | 0,
                a[ke >> 0] | (a[(ke + 1) >> 0] << 8) | (a[(ke + 2) >> 0] << 16) | (a[(ke + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            ke = bc(ke | 0, de | 0, 48) | 0;
            i[(w + ((ke + ((Re >>> 3) & 1)) << 2)) >> 2] = Re;
            Re = (s + -1) | 0;
            ke = (d + (Re & h)) | 0;
            ye = ke;
            ke = (ke + 4) | 0;
            ke =
              lc(
                a[ye >> 0] | (a[(ye + 1) >> 0] << 8) | (a[(ye + 2) >> 0] << 16) | (a[(ye + 3) >> 0] << 24) | 0,
                a[ke >> 0] | (a[(ke + 1) >> 0] << 8) | (a[(ke + 2) >> 0] << 16) | (a[(ke + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            ke = bc(ke | 0, de | 0, 48) | 0;
            i[(w + ((ke + ((Re >>> 3) & 1)) << 2)) >> 2] = Re;
          }
          be = Te << 2;
          we = (Se + -7) | 0;
          ye = (k + 8) | 0;
          ke = (k + 12) | 0;
          Re = (k + 4) | 0;
          l = s;
          Qe = M;
          se = p;
          e = ee;
          e: while (1) {
            Ee = Qe;
            Ie = (se + be) | 0;
            t: while (1) {
              me = (Se - l) | 0;
              if (((l + 8) | 0) >>> 0 >= Se >>> 0) break e;
              ge = l >>> 0 < ve >>> 0 ? l : ve;
              fe = l & h;
              he = (d + fe) | 0;
              pe = he;
              p = pe;
              p = a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24);
              pe = (pe + 4) | 0;
              pe = lc(p | 0, a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24) | 0, -1124073472, 1979815) | 0;
              pe = bc(pe | 0, de | 0, 48) | 0;
              te = p & 255;
              r = i[k >> 2] | 0;
              $ = (l - r) | 0;
              if ($ >>> 0 < l >>> 0 ? ((Ne = $ & h), (o[(d + Ne) >> 0] | 0) == ((p & 255) << 24) >> 24) : 0) {
                $ = (fe + me) | 0;
                ee = (d + $) | 0;
                $ = (d + ($ + -4)) | 0;
                s = 0;
                p = he;
                while (1) {
                  if (p >>> 0 > $ >>> 0) break;
                  Be = (d + (Ne + s)) | 0;
                  if (
                    (a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24) | 0) !=
                    (a[Be >> 0] | (a[(Be + 1) >> 0] << 8) | (a[(Be + 2) >> 0] << 16) | (a[(Be + 3) >> 0] << 24) | 0)
                  )
                    break;
                  s = (s + 4) | 0;
                  p = (p + 4) | 0;
                }
                while (1) {
                  if (p >>> 0 >= ee >>> 0) break;
                  if ((o[(d + (Ne + s)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                  s = (s + 1) | 0;
                  p = (p + 1) | 0;
                }
                if (s >>> 0 > 3) {
                  te = a[(d + (fe + s)) >> 0] | 0;
                  p = 1;
                  ee = s;
                  s = (((s * 540) | 0) + 3900) | 0;
                } else {
                  p = 0;
                  ee = 0;
                  r = 0;
                  s = 4240;
                }
              } else {
                p = 0;
                ee = 0;
                r = 0;
                s = 4240;
              }
              le = (fe + me) | 0;
              ce = (d + le) | 0;
              le = (d + (le + -4)) | 0;
              ne = ee;
              re = s;
              ue = (w + ((pe + 1) << 2)) | 0;
              ie = 0;
              $ = (w + (pe << 2)) | 0;
              Ae = ee;
              ae = s;
              while (1) {
                $ = i[$ >> 2] | 0;
                if ((ie | 0) == 2) break;
                oe = (l - $) | 0;
                ee = $ & h;
                if (!(((l | 0) == ($ | 0) ? 1 : (te | 0) != (a[(d + (ee + ne)) >> 0] | 0)) | (oe >>> 0 > ge >>> 0))) {
                  $ = 0;
                  s = he;
                  while (1) {
                    if (s >>> 0 > le >>> 0) break;
                    Be = (d + (ee + $)) | 0;
                    if (
                      (a[s >> 0] | (a[(s + 1) >> 0] << 8) | (a[(s + 2) >> 0] << 16) | (a[(s + 3) >> 0] << 24) | 0) !=
                      (a[Be >> 0] | (a[(Be + 1) >> 0] << 8) | (a[(Be + 2) >> 0] << 16) | (a[(Be + 3) >> 0] << 24) | 0)
                    )
                      break;
                    $ = ($ + 4) | 0;
                    s = (s + 4) | 0;
                  }
                  while (1) {
                    if (s >>> 0 >= ce >>> 0) break;
                    if ((o[(d + (ee + $)) >> 0] | 0) != (o[s >> 0] | 0)) break;
                    $ = ($ + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  if ($ >>> 0 > 3 ? ((Oe = ((($ * 540) | 0) + 3840 + (Pe((_e(oe | 0) | 0) ^ 31, -120) | 0)) | 0), re >>> 0 < Oe >>> 0) : 0) {
                    ee = $;
                    re = Oe;
                    te = a[(d + (fe + $)) >> 0] | 0;
                    p = 1;
                    s = $;
                    r = oe;
                    $ = Oe;
                  } else {
                    ee = ne;
                    s = Ae;
                    $ = ae;
                  }
                } else {
                  ee = ne;
                  s = Ae;
                  $ = ae;
                }
                Be = ue;
                ne = ee;
                ue = (ue + 4) | 0;
                ie = (ie + 1) | 0;
                Ae = s;
                ae = $;
                $ = Be;
              }
              i[(w + ((pe + ((l >>> 3) & 1)) << 2)) >> 2] = l;
              if (p & 1) {
                Be = 0;
                break;
              }
              e = (e + 1) | 0;
              r = (l + 1) | 0;
              if (r >>> 0 <= se >>> 0) {
                l = r;
                continue;
              }
              if (r >>> 0 > Ie >>> 0) {
                p = (l + 17) | 0;
                p = p >>> 0 < we >>> 0 ? p : we;
                l = r;
                while (1) {
                  if (l >>> 0 >= p >>> 0) continue t;
                  Be = (d + (l & h)) | 0;
                  me = Be;
                  Be = (Be + 4) | 0;
                  Be =
                    lc(
                      a[me >> 0] | (a[(me + 1) >> 0] << 8) | (a[(me + 2) >> 0] << 16) | (a[(me + 3) >> 0] << 24) | 0,
                      a[Be >> 0] | (a[(Be + 1) >> 0] << 8) | (a[(Be + 2) >> 0] << 16) | (a[(Be + 3) >> 0] << 24) | 0,
                      -1124073472,
                      1979815
                    ) | 0;
                  Be = bc(Be | 0, de | 0, 48) | 0;
                  i[(w + ((Be + ((l >>> 3) & 1)) << 2)) >> 2] = l;
                  l = (l + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                p = (l + 9) | 0;
                p = p >>> 0 < we >>> 0 ? p : we;
                l = r;
                while (1) {
                  if (l >>> 0 >= p >>> 0) continue t;
                  Be = (d + (l & h)) | 0;
                  me = Be;
                  Be = (Be + 4) | 0;
                  Be =
                    lc(
                      a[me >> 0] | (a[(me + 1) >> 0] << 8) | (a[(me + 2) >> 0] << 16) | (a[(me + 3) >> 0] << 24) | 0,
                      a[Be >> 0] | (a[(Be + 1) >> 0] << 8) | (a[(Be + 2) >> 0] << 16) | (a[(Be + 3) >> 0] << 24) | 0,
                      -1124073472,
                      1979815
                    ) | 0;
                  Be = bc(Be | 0, de | 0, 48) | 0;
                  i[(w + ((Be + ((l >>> 3) & 1)) << 2)) >> 2] = l;
                  l = (l + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              me = (me + -1) | 0;
              if ((i[De >> 2] | 0) < 5) {
                re = (Ae + -1) | 0;
                re = re >>> 0 < me >>> 0 ? re : me;
              } else re = 0;
              ne = (l + 1) | 0;
              pe = ne >>> 0 < ve >>> 0 ? ne : ve;
              Ee = ne & h;
              Ie = (d + Ee) | 0;
              Ce = Ie;
              p = Ce;
              Ce = (Ce + 4) | 0;
              Ce =
                lc(
                  a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24) | 0,
                  a[Ce >> 0] | (a[(Ce + 1) >> 0] << 8) | (a[(Ce + 2) >> 0] << 16) | (a[(Ce + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              Ce = bc(Ce | 0, de | 0, 48) | 0;
              p = o[(d + (Ee + re)) >> 0] | 0;
              te = p & 255;
              se = i[k >> 2] | 0;
              $ = (ne - se) | 0;
              if ($ >>> 0 < ne >>> 0 ? ((Ue = $ & h), (p << 24) >> 24 == (o[(d + (Ue + re)) >> 0] | 0)) : 0) {
                $ = (Ee + me) | 0;
                ee = (d + $) | 0;
                $ = (d + ($ + -4)) | 0;
                s = 0;
                p = Ie;
                while (1) {
                  if (p >>> 0 > $ >>> 0) break;
                  he = (d + (Ue + s)) | 0;
                  if (
                    (a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24) | 0) !=
                    (a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24) | 0)
                  )
                    break;
                  s = (s + 4) | 0;
                  p = (p + 4) | 0;
                }
                while (1) {
                  if (p >>> 0 >= ee >>> 0) break;
                  if ((o[(d + (Ue + s)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                  s = (s + 1) | 0;
                  p = (p + 1) | 0;
                }
                if (s >>> 0 > 3) {
                  te = a[(d + (Ee + s)) >> 0] | 0;
                  p = 1;
                  re = s;
                  $ = (((s * 540) | 0) + 3900) | 0;
                } else {
                  p = 0;
                  $ = 4240;
                  se = 0;
                }
              } else {
                p = 0;
                $ = 4240;
                se = 0;
              }
              fe = (Ee + me) | 0;
              ge = (d + fe) | 0;
              fe = (d + (fe + -4)) | 0;
              ce = re;
              le = $;
              he = (w + ((Ce + 1) << 2)) | 0;
              ue = 0;
              ee = p;
              p = (w + (Ce << 2)) | 0;
              ie = $;
              while (1) {
                p = i[p >> 2] | 0;
                if ((ue | 0) == 2) break;
                oe = (ne - p) | 0;
                s = p & h;
                if (!(((ne | 0) == (p | 0) ? 1 : (te | 0) != (a[(d + (s + ce)) >> 0] | 0)) | (oe >>> 0 > pe >>> 0))) {
                  p = 0;
                  $ = Ie;
                  while (1) {
                    if ($ >>> 0 > fe >>> 0) break;
                    Le = (d + (s + p)) | 0;
                    if (
                      (a[$ >> 0] | (a[($ + 1) >> 0] << 8) | (a[($ + 2) >> 0] << 16) | (a[($ + 3) >> 0] << 24) | 0) !=
                      (a[Le >> 0] | (a[(Le + 1) >> 0] << 8) | (a[(Le + 2) >> 0] << 16) | (a[(Le + 3) >> 0] << 24) | 0)
                    )
                      break;
                    p = (p + 4) | 0;
                    $ = ($ + 4) | 0;
                  }
                  while (1) {
                    if ($ >>> 0 >= ge >>> 0) break;
                    if ((o[(d + (s + p)) >> 0] | 0) != (o[$ >> 0] | 0)) break;
                    p = (p + 1) | 0;
                    $ = ($ + 1) | 0;
                  }
                  if (p >>> 0 > 3 ? ((Ge = (((p * 540) | 0) + 3840 + (Pe((_e(oe | 0) | 0) ^ 31, -120) | 0)) | 0), le >>> 0 < Ge >>> 0) : 0) {
                    $ = p;
                    s = Ge;
                    te = a[(d + (Ee + p)) >> 0] | 0;
                    ee = 1;
                    re = p;
                    p = Ge;
                    se = oe;
                  } else {
                    $ = ce;
                    s = le;
                    p = ie;
                  }
                } else {
                  $ = ce;
                  s = le;
                  p = ie;
                }
                Le = he;
                ce = $;
                le = s;
                he = (he + 4) | 0;
                ue = (ue + 1) | 0;
                ie = p;
                p = Le;
              }
              i[(w + ((Ce + ((ne >>> 3) & 1)) << 2)) >> 2] = ne;
              if (((ee & 1) == 0) | (ie >>> 0 < ((ae + 700) | 0) >>> 0)) {
                ne = l;
                oe = e;
                re = Ae;
                break;
              }
              e = (e + 1) | 0;
              Be = (Be + 1) | 0;
              if (!(((Be | 0) < 4) & (((l + 9) | 0) >>> 0 < Se >>> 0))) {
                oe = e;
                r = se;
                break;
              } else {
                l = ne;
                Ae = re;
                r = se;
                ae = ie;
              }
            }
            se = (ne + (re << 1) + Te) | 0;
            t: do {
              if (r >>> 0 <= (ne >>> 0 < ve >>> 0 ? ne : ve) >>> 0) {
                l = (r + 3) | 0;
                Le = i[k >> 2] | 0;
                e = (l - Le) | 0;
                p = i[Re >> 2] | 0;
                l = (l - p) | 0;
                if ((r | 0) == (Le | 0)) e = 0;
                else {
                  r: do {
                    if ((r | 0) != (p | 0)) {
                      do {
                        if (e >>> 0 < 7) e = (158663784 >>> (e << 2)) & 15;
                        else {
                          if (l >>> 0 < 7) {
                            e = (266017486 >>> (l << 2)) & 15;
                            break;
                          }
                          if ((r | 0) == (i[ye >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((r | 0) == (i[ke >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (r + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[ke >> 2] = i[ye >> 2];
                  i[ye >> 2] = i[Re >> 2];
                  i[Re >> 2] = i[k >> 2];
                  i[k >> 2] = r;
                }
              } else e = (r + 15) | 0;
            } while (0);
            te = (Qe + 16) | 0;
            i[Qe >> 2] = oe;
            i[(Qe + 4) >> 2] = re;
            p = (Qe + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[p >> 1] = e;
              p = 0;
            } else {
              me = (e + -12) | 0;
              Le = (((_e(me | 0) | 0) ^ 31) + -1) | 0;
              Be = (me >>> Le) & 1;
              e = ((((Le << 1) + 65534) | Be) + 16) & 65535;
              n[p >> 1] = e;
              p = (Le << 24) | (me - ((Be | 2) << Le));
            }
            i[(Qe + 8) >> 2] = p;
            s = (e << 16) >> 16 == 0;
            ee = (Qe + 12) | 0;
            do {
              if (oe >>> 0 >= 6) {
                if (oe >>> 0 < 130) {
                  Le = (oe + -2) | 0;
                  p = (((_e(Le | 0) | 0) ^ 31) + -1) | 0;
                  p = ((p << 1) + (Le >>> p) + 2) & 65535;
                  break;
                }
                if (oe >>> 0 < 2114) {
                  p = (((_e((oe + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (oe >>> 0 < 6210) p = 21;
                else p = oe >>> 0 < 22594 ? 22 : 23;
              } else p = oe & 65535;
            } while (0);
            do {
              if (re >>> 0 >= 10) {
                if (re >>> 0 < 134) {
                  Le = (re + -6) | 0;
                  e = (((_e(Le | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (Le >>> e) + 4) & 65535;
                  break;
                }
                if (re >>> 0 < 2118) e = (((_e((re + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (re + 65534) & 65535;
            } while (0);
            l = e & 65535;
            r = p & 65535;
            $ = (l & 7) | ((r << 3) & 56);
            if (s & ((p & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? $ : $ | 64) & 65535;
            else e = n[(88156 + (((l >>> 3) + (((r >>> 3) * 3) | 0)) << 1)) >> 1] | ($ & 65535);
            n[ee >> 1] = e;
            i[q >> 2] = (i[q >> 2] | 0) + oe;
            l = (ne + re) | 0;
            p = l >>> 0 < Fe >>> 0 ? l : Fe;
            e = (ne + 2) | 0;
            while (1) {
              if (e >>> 0 >= p >>> 0) {
                Qe = te;
                e = 0;
                continue e;
              }
              Le = (d + (e & h)) | 0;
              Qe = Le;
              Le = (Le + 4) | 0;
              Le =
                lc(
                  a[Qe >> 0] | (a[(Qe + 1) >> 0] << 8) | (a[(Qe + 2) >> 0] << 16) | (a[(Qe + 3) >> 0] << 24) | 0,
                  a[Le >> 0] | (a[(Le + 1) >> 0] << 8) | (a[(Le + 2) >> 0] << 16) | (a[(Le + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              Le = bc(Le | 0, de | 0, 48) | 0;
              i[(w + ((Le + ((e >>> 3) & 1)) << 2)) >> 2] = e;
              e = (e + 1) | 0;
            }
          }
          i[_ >> 2] = e + me;
          i[j >> 2] = (i[j >> 2] | 0) + ((Ee - M) >> 4);
          return;
        }
        function La(e, r, s, l, d, h, p, k, _, M, j, q, $) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          l = l | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          var ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0;
          Je = w;
          w = (w + 32) | 0;
          je = (Je + 16) | 0;
          qe = Je;
          Ve = ((1 << i[(p + 8) >> 2]) + -16) | 0;
          re = i[M >> 2] | 0;
          Ye = (s + r) | 0;
          He = r >>> 0 > 7 ? (Ye + -7) | 0 : s;
          xe = (p + 4) | 0;
          Me = (i[xe >> 2] | 0) < 9 ? 64 : 512;
          te = (Me + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (l ^ 1)) ^ 1) & (r >>> 0 < 4097)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Le = (d + e) | 0;
              Ge = Le;
              Le = (Le + 4) | 0;
              Le =
                lc(
                  a[Ge >> 0] | (a[(Ge + 1) >> 0] << 8) | (a[(Ge + 2) >> 0] << 16) | (a[(Ge + 3) >> 0] << 24) | 0,
                  a[Le >> 0] | (a[(Le + 1) >> 0] << 8) | (a[(Le + 2) >> 0] << 16) | (a[(Le + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              Le = bc(Le | 0, de | 0, 47) | 0;
              Le = (k + (Le << 2)) | 0;
              i[Le >> 2] = 0;
              i[(Le + 4) >> 2] = 0;
              i[(Le + 8) >> 2] = 0;
              i[(Le + 12) >> 2] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(k + 524304) >> 0] = 0;
              ee = 8;
            }
          } else if (!(o[(k + 524304) >> 0] & 1)) ee = 8;
          else {
            ac(k | 0, 0, 524305) | 0;
            ee = 8;
          }
          if ((ee | 0) == 8 ? (r >>> 0 > 6) & (s >>> 0 > 2) : 0) {
            Le = (s + -3) | 0;
            Ge = (d + (Le & h)) | 0;
            Ue = Ge;
            Ge = (Ge + 4) | 0;
            Ge =
              lc(
                a[Ue >> 0] | (a[(Ue + 1) >> 0] << 8) | (a[(Ue + 2) >> 0] << 16) | (a[(Ue + 3) >> 0] << 24) | 0,
                a[Ge >> 0] | (a[(Ge + 1) >> 0] << 8) | (a[(Ge + 2) >> 0] << 16) | (a[(Ge + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            Ge = bc(Ge | 0, de | 0, 47) | 0;
            i[(k + ((Ge + ((Le >>> 3) & 3)) << 2)) >> 2] = Le;
            Le = (s + -2) | 0;
            Ge = (d + (Le & h)) | 0;
            Ue = Ge;
            Ge = (Ge + 4) | 0;
            Ge =
              lc(
                a[Ue >> 0] | (a[(Ue + 1) >> 0] << 8) | (a[(Ue + 2) >> 0] << 16) | (a[(Ue + 3) >> 0] << 24) | 0,
                a[Ge >> 0] | (a[(Ge + 1) >> 0] << 8) | (a[(Ge + 2) >> 0] << 16) | (a[(Ge + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            Ge = bc(Ge | 0, de | 0, 47) | 0;
            i[(k + ((Ge + ((Le >>> 3) & 3)) << 2)) >> 2] = Le;
            Le = (s + -1) | 0;
            Ge = (d + (Le & h)) | 0;
            Ue = Ge;
            Ge = (Ge + 4) | 0;
            Ge =
              lc(
                a[Ue >> 0] | (a[(Ue + 1) >> 0] << 8) | (a[(Ue + 2) >> 0] << 16) | (a[(Ue + 3) >> 0] << 24) | 0,
                a[Ge >> 0] | (a[(Ge + 1) >> 0] << 8) | (a[(Ge + 2) >> 0] << 16) | (a[(Ge + 3) >> 0] << 24) | 0,
                -1124073472,
                1979815
              ) | 0;
            Ge = bc(Ge | 0, de | 0, 47) | 0;
            i[(k + ((Ge + ((Le >>> 3) & 3)) << 2)) >> 2] = Le;
          }
          ye = (je + 4) | 0;
          ke = (je + 8) | 0;
          Re = (je + 12) | 0;
          Te = (je + 12) | 0;
          De = (je + 4) | 0;
          Fe = (je + 8) | 0;
          ve = (k + 524312) | 0;
          Se = (k + 524308) | 0;
          Ne = Me << 2;
          Oe = (Ye + -7) | 0;
          Ue = (qe + 12) | 0;
          Ge = (qe + 4) | 0;
          Le = (qe + 8) | 0;
          Ce = (qe + 12) | 0;
          me = (qe + 4) | 0;
          Be = (qe + 8) | 0;
          Qe = (_ + 8) | 0;
          be = (_ + 12) | 0;
          we = (_ + 4) | 0;
          p = s;
          Ie = j;
          e = re;
          e: while (1) {
            pe = Ie;
            Ee = (te + Ne) | 0;
            t: while (1) {
              he = (Ye - p) | 0;
              if (((p + 8) | 0) >>> 0 >= Ye >>> 0) break e;
              ue = p >>> 0 < Ve >>> 0 ? p : Ve;
              i[je >> 2] = 0;
              i[ye >> 2] = 0;
              i[ke >> 2] = 0;
              i[Re >> 2] = 4240;
              ge = p & h;
              le = (d + ge) | 0;
              fe = le;
              l = fe;
              l = a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24);
              fe = (fe + 4) | 0;
              fe = lc(l | 0, a[fe >> 0] | (a[(fe + 1) >> 0] << 8) | (a[(fe + 2) >> 0] << 16) | (a[(fe + 3) >> 0] << 24) | 0, -1124073472, 1979815) | 0;
              fe = bc(fe | 0, de | 0, 47) | 0;
              oe = l & 255;
              se = i[Te >> 2] | 0;
              re = i[_ >> 2] | 0;
              r = (p - re) | 0;
              i[De >> 2] = 0;
              if (r >>> 0 < p >>> 0 ? ((We = r & h), (o[(d + We) >> 0] | 0) == ((l & 255) << 24) >> 24) : 0) {
                r = (ge + he) | 0;
                s = (d + r) | 0;
                r = (d + (r + -4)) | 0;
                ee = 0;
                l = le;
                while (1) {
                  if (l >>> 0 > r >>> 0) break;
                  ce = (d + (We + ee)) | 0;
                  if (
                    (a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0) !=
                    (a[ce >> 0] | (a[(ce + 1) >> 0] << 8) | (a[(ce + 2) >> 0] << 16) | (a[(ce + 3) >> 0] << 24) | 0)
                  )
                    break;
                  ee = (ee + 4) | 0;
                  l = (l + 4) | 0;
                }
                while (1) {
                  if (l >>> 0 >= s >>> 0) break;
                  if ((o[(d + (We + ee)) >> 0] | 0) != (o[l >> 0] | 0)) break;
                  ee = (ee + 1) | 0;
                  l = (l + 1) | 0;
                }
                if (ee >>> 0 > 3) {
                  s = (((ee * 540) | 0) + 3900) | 0;
                  i[je >> 2] = ee;
                  i[Fe >> 2] = re;
                  i[Te >> 2] = s;
                  r = ee;
                  ee = a[(d + (ge + ee)) >> 0] | 0;
                  l = 1;
                } else {
                  r = 0;
                  s = se;
                  ee = oe;
                  l = 0;
                }
              } else {
                r = 0;
                s = se;
                ee = oe;
                l = 0;
              }
              ce = (ge + he) | 0;
              ae = (d + ce) | 0;
              ce = (d + (ce + -4)) | 0;
              Ae = (k + ((fe + 1) << 2)) | 0;
              ie = 0;
              re = (k + (fe << 2)) | 0;
              while (1) {
                re = i[re >> 2] | 0;
                if ((ie | 0) == 4) break;
                oe = (p - re) | 0;
                ne = re & h;
                if (!(((p | 0) == (re | 0) ? 1 : (ee | 0) != (a[(d + (ne + r)) >> 0] | 0)) | (oe >>> 0 > ue >>> 0))) {
                  re = 0;
                  se = le;
                  while (1) {
                    if (se >>> 0 > ce >>> 0) break;
                    at = (d + (ne + re)) | 0;
                    if (
                      (a[se >> 0] | (a[(se + 1) >> 0] << 8) | (a[(se + 2) >> 0] << 16) | (a[(se + 3) >> 0] << 24) | 0) !=
                      (a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0)
                    )
                      break;
                    re = (re + 4) | 0;
                    se = (se + 4) | 0;
                  }
                  while (1) {
                    if (se >>> 0 >= ae >>> 0) break;
                    if ((o[(d + (ne + re)) >> 0] | 0) != (o[se >> 0] | 0)) break;
                    re = (re + 1) | 0;
                    se = (se + 1) | 0;
                  }
                  if (re >>> 0 > 3 ? ((Ke = (((re * 540) | 0) + 3840 + (Pe((_e(oe | 0) | 0) ^ 31, -120) | 0)) | 0), s >>> 0 < Ke >>> 0) : 0) {
                    i[je >> 2] = re;
                    i[Fe >> 2] = oe;
                    i[Te >> 2] = Ke;
                    r = re;
                    s = Ke;
                    ee = a[(d + (ge + re)) >> 0] | 0;
                    l = 1;
                  }
                }
                re = Ae;
                Ae = (Ae + 4) | 0;
                ie = (ie + 1) | 0;
              }
              if (!(l & 1)) {
                if ((i[ve >> 2] | 0) >>> 0 < ((i[Se >> 2] | 0) >>> 7) >>> 0) l = 0;
                else {
                  oe = 0;
                  l = 0;
                  se = ((Pe(a[le >> 0] | (a[(le + 1) >> 0] << 8) | (a[(le + 2) >> 0] << 16) | (a[(le + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((oe | 0) == 1) break;
                    at = n[(21084 + (se << 1)) >> 1] | 0;
                    r = at & 65535;
                    i[Se >> 2] = (i[Se >> 2] | 0) + 1;
                    if (
                      (at << 16) >> 16 != 0
                        ? ((Xe = r & 31), (ze = r >>> 5), (Ze = ((i[(11272 + (Xe << 2)) >> 2] | 0) + (Pe(Xe, ze) | 0)) | 0), Xe >>> 0 <= he >>> 0)
                        : 0
                    ) {
                      ee = (Ze + Xe) | 0;
                      re = (280811 + ee) | 0;
                      ee = (280811 + (ee + -4)) | 0;
                      s = 0;
                      r = (280811 + Ze) | 0;
                      while (1) {
                        if (r >>> 0 > ee >>> 0) break;
                        at = (d + (ge + s)) | 0;
                        if (
                          (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                          (a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0)
                        )
                          break;
                        s = (s + 4) | 0;
                        r = (r + 4) | 0;
                      }
                      while (1) {
                        if (r >>> 0 >= re >>> 0) break;
                        if ((o[(d + (ge + s)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                        s = (s + 1) | 0;
                        r = (r + 1) | 0;
                      }
                      if (
                        !((((s + 10) | 0) >>> 0 <= Xe >>> 0) | ((s | 0) == 0))
                          ? (($e = (ue + ze + 1 + (a[(407930 + (Xe - s)) >> 0] << a[(280786 + Xe) >> 0])) | 0),
                            (et = (((s * 540) | 0) + 3840 + (Pe((_e($e | 0) | 0) ^ 31, -120) | 0)) | 0),
                            et >>> 0 >= (i[Te >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[je >> 2] = s;
                        i[De >> 2] = Xe ^ s;
                        i[Fe >> 2] = $e;
                        i[Te >> 2] = et;
                        i[ve >> 2] = (i[ve >> 2] | 0) + 1;
                        l = 1;
                      }
                    }
                    oe = (oe + 1) | 0;
                    se = (se + 1) | 0;
                  }
                  l = (l & 1) != 0;
                }
                l = l & 1;
              }
              i[(k + ((fe + ((p >>> 3) & 3)) << 2)) >> 2] = p;
              if (l & 1) {
                pe = 0;
                break;
              }
              e = (e + 1) | 0;
              r = (p + 1) | 0;
              if (r >>> 0 <= te >>> 0) {
                p = r;
                continue;
              }
              if (r >>> 0 > Ee >>> 0) {
                l = (p + 17) | 0;
                l = l >>> 0 < Oe >>> 0 ? l : Oe;
                p = r;
                while (1) {
                  if (p >>> 0 >= l >>> 0) continue t;
                  at = (d + (p & h)) | 0;
                  he = at;
                  at = (at + 4) | 0;
                  at =
                    lc(
                      a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24) | 0,
                      a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0,
                      -1124073472,
                      1979815
                    ) | 0;
                  at = bc(at | 0, de | 0, 47) | 0;
                  i[(k + ((at + ((p >>> 3) & 3)) << 2)) >> 2] = p;
                  p = (p + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                l = (p + 9) | 0;
                l = l >>> 0 < Oe >>> 0 ? l : Oe;
                p = r;
                while (1) {
                  if (p >>> 0 >= l >>> 0) continue t;
                  at = (d + (p & h)) | 0;
                  he = at;
                  at = (at + 4) | 0;
                  at =
                    lc(
                      a[he >> 0] | (a[(he + 1) >> 0] << 8) | (a[(he + 2) >> 0] << 16) | (a[(he + 3) >> 0] << 24) | 0,
                      a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0,
                      -1124073472,
                      1979815
                    ) | 0;
                  at = bc(at | 0, de | 0, 47) | 0;
                  i[(k + ((at + ((p >>> 3) & 3)) << 2)) >> 2] = p;
                  p = (p + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              he = (he + -1) | 0;
              if ((i[xe >> 2] | 0) < 5) {
                re = ((i[je >> 2] | 0) + -1) | 0;
                re = re >>> 0 < he >>> 0 ? re : he;
              } else re = 0;
              i[qe >> 2] = re;
              i[Ge >> 2] = 0;
              i[Le >> 2] = 0;
              i[Ue >> 2] = 4240;
              ne = (p + 1) | 0;
              ue = ne >>> 0 < Ve >>> 0 ? ne : Ve;
              ge = ne & h;
              le = (d + ge) | 0;
              fe = le;
              l = fe;
              fe = (fe + 4) | 0;
              fe =
                lc(
                  a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0,
                  a[fe >> 0] | (a[(fe + 1) >> 0] << 8) | (a[(fe + 2) >> 0] << 16) | (a[(fe + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              fe = bc(fe | 0, de | 0, 47) | 0;
              l = o[(d + (ge + re)) >> 0] | 0;
              oe = l & 255;
              te = i[Ce >> 2] | 0;
              se = i[_ >> 2] | 0;
              r = (ne - se) | 0;
              i[me >> 2] = 0;
              if (r >>> 0 < ne >>> 0 ? ((tt = r & h), (l << 24) >> 24 == (o[(d + (tt + re)) >> 0] | 0)) : 0) {
                r = (ge + he) | 0;
                s = (d + r) | 0;
                r = (d + (r + -4)) | 0;
                ee = 0;
                l = le;
                while (1) {
                  if (l >>> 0 > r >>> 0) break;
                  at = (d + (tt + ee)) | 0;
                  if (
                    (a[l >> 0] | (a[(l + 1) >> 0] << 8) | (a[(l + 2) >> 0] << 16) | (a[(l + 3) >> 0] << 24) | 0) !=
                    (a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0)
                  )
                    break;
                  ee = (ee + 4) | 0;
                  l = (l + 4) | 0;
                }
                while (1) {
                  if (l >>> 0 >= s >>> 0) break;
                  if ((o[(d + (tt + ee)) >> 0] | 0) != (o[l >> 0] | 0)) break;
                  ee = (ee + 1) | 0;
                  l = (l + 1) | 0;
                }
                if (ee >>> 0 > 3) {
                  te = (((ee * 540) | 0) + 3900) | 0;
                  i[qe >> 2] = ee;
                  i[Be >> 2] = se;
                  i[Ce >> 2] = te;
                  r = ee;
                  ee = a[(d + (ge + ee)) >> 0] | 0;
                  l = 1;
                } else {
                  r = re;
                  ee = oe;
                  l = 0;
                }
              } else {
                r = re;
                ee = oe;
                l = 0;
              }
              ce = (ge + he) | 0;
              ae = (d + ce) | 0;
              ce = (d + (ce + -4)) | 0;
              Ae = (k + ((fe + 1) << 2)) | 0;
              ie = 0;
              s = (k + (fe << 2)) | 0;
              while (1) {
                s = i[s >> 2] | 0;
                if ((ie | 0) == 4) break;
                se = (ne - s) | 0;
                oe = s & h;
                if (!(((ne | 0) == (s | 0) ? 1 : (ee | 0) != (a[(d + (oe + r)) >> 0] | 0)) | (se >>> 0 > ue >>> 0))) {
                  s = 0;
                  re = le;
                  while (1) {
                    if (re >>> 0 > ce >>> 0) break;
                    at = (d + (oe + s)) | 0;
                    if (
                      (a[re >> 0] | (a[(re + 1) >> 0] << 8) | (a[(re + 2) >> 0] << 16) | (a[(re + 3) >> 0] << 24) | 0) !=
                      (a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    re = (re + 4) | 0;
                  }
                  while (1) {
                    if (re >>> 0 >= ae >>> 0) break;
                    if ((o[(d + (oe + s)) >> 0] | 0) != (o[re >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  if (s >>> 0 > 3 ? ((rt = (((s * 540) | 0) + 3840 + (Pe((_e(se | 0) | 0) ^ 31, -120) | 0)) | 0), te >>> 0 < rt >>> 0) : 0) {
                    i[qe >> 2] = s;
                    i[Be >> 2] = se;
                    i[Ce >> 2] = rt;
                    r = s;
                    te = rt;
                    ee = a[(d + (ge + s)) >> 0] | 0;
                    l = 1;
                  }
                }
                s = Ae;
                Ae = (Ae + 4) | 0;
                ie = (ie + 1) | 0;
              }
              if (!(l & 1)) {
                if ((i[ve >> 2] | 0) >>> 0 < ((i[Se >> 2] | 0) >>> 7) >>> 0) l = 0;
                else {
                  se = 0;
                  l = 0;
                  re = ((Pe(a[le >> 0] | (a[(le + 1) >> 0] << 8) | (a[(le + 2) >> 0] << 16) | (a[(le + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 1) break;
                    at = n[(21084 + (re << 1)) >> 1] | 0;
                    r = at & 65535;
                    i[Se >> 2] = (i[Se >> 2] | 0) + 1;
                    if (
                      (at << 16) >> 16 != 0
                        ? ((st = r & 31), (ot = r >>> 5), (nt = ((i[(11272 + (st << 2)) >> 2] | 0) + (Pe(st, ot) | 0)) | 0), st >>> 0 <= he >>> 0)
                        : 0
                    ) {
                      ee = (nt + st) | 0;
                      s = (280811 + ee) | 0;
                      ee = (280811 + (ee + -4)) | 0;
                      te = 0;
                      r = (280811 + nt) | 0;
                      while (1) {
                        if (r >>> 0 > ee >>> 0) break;
                        at = (d + (ge + te)) | 0;
                        if (
                          (a[r >> 0] | (a[(r + 1) >> 0] << 8) | (a[(r + 2) >> 0] << 16) | (a[(r + 3) >> 0] << 24) | 0) !=
                          (a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0)
                        )
                          break;
                        te = (te + 4) | 0;
                        r = (r + 4) | 0;
                      }
                      while (1) {
                        if (r >>> 0 >= s >>> 0) break;
                        if ((o[(d + (ge + te)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                        te = (te + 1) | 0;
                        r = (r + 1) | 0;
                      }
                      if (
                        !((((te + 10) | 0) >>> 0 <= st >>> 0) | ((te | 0) == 0))
                          ? ((it = (ue + ot + 1 + (a[(407930 + (st - te)) >> 0] << a[(280786 + st) >> 0])) | 0),
                            (At = (((te * 540) | 0) + 3840 + (Pe((_e(it | 0) | 0) ^ 31, -120) | 0)) | 0),
                            At >>> 0 >= (i[Ce >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[qe >> 2] = te;
                        i[me >> 2] = st ^ te;
                        i[Be >> 2] = it;
                        i[Ce >> 2] = At;
                        i[ve >> 2] = (i[ve >> 2] | 0) + 1;
                        l = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    re = (re + 1) | 0;
                  }
                  l = (l & 1) != 0;
                }
                l = l & 1;
              }
              i[(k + ((fe + ((ne >>> 3) & 3)) << 2)) >> 2] = ne;
              if (!(l & 1)) {
                ne = p;
                oe = e;
                break;
              }
              if ((i[Ue >> 2] | 0) >>> 0 < (((i[Re >> 2] | 0) + 700) | 0) >>> 0) {
                ne = p;
                oe = e;
                break;
              }
              e = (e + 1) | 0;
              i[je >> 2] = i[qe >> 2];
              i[(je + 4) >> 2] = i[(qe + 4) >> 2];
              i[(je + 8) >> 2] = i[(qe + 8) >> 2];
              i[(je + 12) >> 2] = i[(qe + 12) >> 2];
              pe = (pe + 1) | 0;
              if (!(((pe | 0) < 4) & (((p + 9) | 0) >>> 0 < Ye >>> 0))) {
                oe = e;
                break;
              } else p = ne;
            }
            p = i[je >> 2] | 0;
            te = (ne + (p << 1) + Me) | 0;
            e = i[ke >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ne >>> 0 < Ve >>> 0 ? ne : Ve) >>> 0) {
                ee = (e + 3) | 0;
                at = i[_ >> 2] | 0;
                l = (ee - at) | 0;
                r = i[we >> 2] | 0;
                ee = (ee - r) | 0;
                if ((e | 0) == (at | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (r | 0)) {
                      do {
                        if (l >>> 0 < 7) e = (158663784 >>> (l << 2)) & 15;
                        else {
                          if (ee >>> 0 < 7) {
                            e = (266017486 >>> (ee << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[Qe >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[be >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[be >> 2] = i[Qe >> 2];
                  i[Qe >> 2] = i[we >> 2];
                  i[we >> 2] = i[_ >> 2];
                  i[_ >> 2] = i[ke >> 2];
                  p = i[je >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            se = (Ie + 16) | 0;
            at = i[ye >> 2] | 0;
            l = p ^ at;
            i[Ie >> 2] = oe;
            i[(Ie + 4) >> 2] = p | (at << 24);
            p = (Ie + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[p >> 1] = e;
              p = 0;
            } else {
              pe = (e + -12) | 0;
              at = (((_e(pe | 0) | 0) ^ 31) + -1) | 0;
              Ee = (pe >>> at) & 1;
              e = ((((at << 1) + 65534) | Ee) + 16) & 65535;
              n[p >> 1] = e;
              p = (at << 24) | (pe - ((Ee | 2) << at));
            }
            i[(Ie + 8) >> 2] = p;
            s = (e << 16) >> 16 == 0;
            re = (Ie + 12) | 0;
            do {
              if (oe >>> 0 >= 6) {
                if (oe >>> 0 < 130) {
                  at = (oe + -2) | 0;
                  ee = (((_e(at | 0) | 0) ^ 31) + -1) | 0;
                  ee = ((ee << 1) + (at >>> ee) + 2) & 65535;
                  break;
                }
                if (oe >>> 0 < 2114) {
                  ee = (((_e((oe + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (oe >>> 0 < 6210) ee = 21;
                else ee = oe >>> 0 < 22594 ? 22 : 23;
              } else ee = oe & 65535;
            } while (0);
            do {
              if (l >>> 0 >= 10) {
                if (l >>> 0 < 134) {
                  at = (l + -6) | 0;
                  e = (((_e(at | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (at >>> e) + 4) & 65535;
                  break;
                }
                if (l >>> 0 < 2118) e = (((_e((l + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (l + 65534) & 65535;
            } while (0);
            p = e & 65535;
            l = ee & 65535;
            r = (p & 7) | ((l << 3) & 56);
            if (s & ((ee & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? r : r | 64) & 65535;
            else e = n[(88156 + (((p >>> 3) + (((l >>> 3) * 3) | 0)) << 1)) >> 1] | (r & 65535);
            n[re >> 1] = e;
            i[$ >> 2] = (i[$ >> 2] | 0) + oe;
            e = (ne + (i[je >> 2] | 0)) | 0;
            e = e >>> 0 < He >>> 0 ? e : He;
            p = (ne + 2) | 0;
            while (1) {
              if (p >>> 0 >= e >>> 0) break;
              at = (d + (p & h)) | 0;
              Ie = at;
              at = (at + 4) | 0;
              at =
                lc(
                  a[Ie >> 0] | (a[(Ie + 1) >> 0] << 8) | (a[(Ie + 2) >> 0] << 16) | (a[(Ie + 3) >> 0] << 24) | 0,
                  a[at >> 0] | (a[(at + 1) >> 0] << 8) | (a[(at + 2) >> 0] << 16) | (a[(at + 3) >> 0] << 24) | 0,
                  -1124073472,
                  1979815
                ) | 0;
              at = bc(at | 0, de | 0, 47) | 0;
              i[(k + ((at + ((p >>> 3) & 3)) << 2)) >> 2] = p;
              p = (p + 1) | 0;
            }
            p = (ne + (i[je >> 2] | 0)) | 0;
            Ie = se;
            e = 0;
          }
          i[M >> 2] = e + he;
          i[q >> 2] = (i[q >> 2] | 0) + ((pe - j) >> 4);
          w = Je;
          return;
        }
        function Ma(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0;
          Ze = w;
          w = (w + 32) | 0;
          Xe = (Ze + 16) | 0;
          ze = Ze;
          We = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          se = i[j >> 2] | 0;
          Ke = (s + r) | 0;
          Je = r >>> 0 > 3 ? (Ke + -3) | 0 : s;
          qe = (k + 4) | 0;
          je = (i[qe >> 2] | 0) < 9 ? 64 : 512;
          re = (je + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 257)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              n[(_ + (((Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1)) >> 1] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(_ + 1081344) >> 0] = 0;
              te = 8;
            }
          } else {
            e = (_ + 1081344) | 0;
            if (!(o[e >> 0] & 1)) te = 8;
            else {
              ac(_ | 0, 0, 32768) | 0;
              o[e >> 0] = 0;
              te = 8;
            }
          }
          if ((te | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            He = (s + -3) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 18;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 32768 + (((l[Ye >> 1] & 15) | (Ve << 4)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
            Ye = (s + -2) | 0;
            Ve = (h + (Ye & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 18;
            He = (_ + (Ve << 1)) | 0;
            i[(_ + 32768 + (((l[He >> 1] & 15) | (Ve << 4)) << 2)) >> 2] = Ye;
            n[He >> 1] = (((n[He >> 1] | 0) + 1) << 16) >> 16;
            He = (s + -1) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 18;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 32768 + (((l[Ye >> 1] & 15) | (Ve << 4)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
          }
          be = (Xe + 4) | 0;
          we = (Xe + 8) | 0;
          ye = (Xe + 12) | 0;
          ke = (Xe + 4) | 0;
          Re = (Xe + 8) | 0;
          Te = (Xe + 12) | 0;
          De = (_ + 1081352) | 0;
          Fe = (_ + 1081348) | 0;
          ve = je << 2;
          Se = (Ke + -4) | 0;
          Ne = (Ke + -3) | 0;
          Oe = (ze + 12) | 0;
          Ue = (ze + 4) | 0;
          Ge = (ze + 8) | 0;
          Le = (ze + 4) | 0;
          Me = (ze + 8) | 0;
          xe = (ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Qe = q;
          e = se;
          e: while (1) {
            me = Qe;
            Be = (re + ve) | 0;
            t: while (1) {
              Ce = (Ke - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Ke >>> 0) break e;
              Ee = k >>> 0 < We >>> 0 ? k : We;
              i[Xe >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 0;
              i[ye >> 2] = 4240;
              Ie = k & p;
              r = i[Xe >> 2] | 0;
              i[Xe >> 2] = 0;
              i[ke >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              ie = 4240;
              d = 0;
              ne = 0;
              while (1) {
                if ((ne | 0) == 4) break;
                oe = ((i[(M + (i[(11372 + (ne << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ne << 2)) >> 2] | 0)) | 0;
                te = (k - oe) | 0;
                do {
                  if (
                    (
                      (!((te >>> 0 >= k >>> 0) | (oe >>> 0 > Ee >>> 0)) ? (($e = te & p), (et = (Ie + r) | 0), et >>> 0 <= p >>> 0) : 0)
                        ? ((tt = ($e + r) | 0), tt >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + et) >> 0] | 0) == (o[(h + tt) >> 0] | 0)
                      : 0
                  ) {
                    se = 0;
                    te = de;
                    while (1) {
                      s = te;
                      if (s >>> 0 > he >>> 0) break;
                      ue = te;
                      ge = (h + ($e + se)) | 0;
                      if (
                        (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0) !=
                        (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0)
                      )
                        break;
                      se = (se + 4) | 0;
                      te = (s + 4) | 0;
                    }
                    while (1) {
                      if (te >>> 0 >= fe >>> 0) break;
                      if ((o[(h + ($e + se)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                      se = (se + 1) | 0;
                      te = (te + 1) | 0;
                    }
                    if (se >>> 0 <= 2 ? !(((se | 0) == 2) & (ne >>> 0 < 2)) : 0) {
                      te = ie;
                      break;
                    }
                    te = (((se * 540) | 0) + (i[(11500 + (ne << 2)) >> 2] | 0)) | 0;
                    if (ie >>> 0 < te >>> 0) {
                      i[Xe >> 2] = se;
                      i[Re >> 2] = oe;
                      i[Te >> 2] = te;
                      r = se;
                      d = 1;
                    } else te = ie;
                  } else te = ie;
                } while (0);
                ie = te;
                ne = (ne + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18;
              le = ue << 4;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              te = ge & 65535;
              ge = (ge & 65535) > 16 ? (te + -16) | 0 : 0;
              r: while (1) {
                ce = (Ie + r) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (te >>> 0 <= ge >>> 0) break r;
                  te = (te + -1) | 0;
                  s = i[(_ + 32768 + ((le | (te & 15)) << 2)) >> 2] | 0;
                  Ae = (k - s) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break r;
                  ne = s & p;
                  if (ae) continue;
                  s = (ne + r) | 0;
                  if (s >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + s) >> 0] | 0)) {
                    oe = 0;
                    s = de;
                  } else continue;
                  while (1) {
                    se = s;
                    if (se >>> 0 > he >>> 0) break;
                    pt = s;
                    ht = (h + (ne + oe)) | 0;
                    if (
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0) !=
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0)
                    )
                      break;
                    oe = (oe + 4) | 0;
                    s = (se + 4) | 0;
                  }
                  while (1) {
                    if (s >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (ne + oe)) >> 0] | 0) != (o[s >> 0] | 0)) break;
                    oe = (oe + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  if (oe >>> 0 <= 3) continue;
                  s = (((oe * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (ie >>> 0 < s >>> 0) break;
                }
                i[Xe >> 2] = oe;
                i[Re >> 2] = Ae;
                i[Te >> 2] = s;
                r = oe;
                ie = s;
                d = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 32768 + ((le | (pt & 15)) << 2)) >> 2] = k;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    pt = n[(21084 + (oe << 1)) >> 1] | 0;
                    te = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((rt = te & 31), (st = te >>> 5), (ot = ((i[(11272 + (rt << 2)) >> 2] | 0) + (Pe(rt, st) | 0)) | 0), rt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      r = (ot + rt) | 0;
                      se = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      s = 0;
                      te = (280811 + ot) | 0;
                      while (1) {
                        if (te >>> 0 > r >>> 0) break;
                        pt = (h + (Ie + s)) | 0;
                        if (
                          (a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        s = (s + 4) | 0;
                        te = (te + 4) | 0;
                      }
                      while (1) {
                        if (te >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ie + s)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                        s = (s + 1) | 0;
                        te = (te + 1) | 0;
                      }
                      if (
                        !((((s + 10) | 0) >>> 0 <= rt >>> 0) | ((s | 0) == 0))
                          ? ((nt = (Ee + st + 1 + (a[(407930 + (rt - s)) >> 0] << a[(280786 + rt) >> 0])) | 0),
                            (it = (((s * 540) | 0) + 3840 + (Pe((_e(nt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            it >>> 0 >= (i[Te >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Xe >> 2] = s;
                        i[ke >> 2] = rt ^ s;
                        i[Re >> 2] = nt;
                        i[Te >> 2] = it;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                me = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              te = (k + 1) | 0;
              if (te >>> 0 <= re >>> 0) {
                k = te;
                continue;
              }
              if (te >>> 0 > Be >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 18;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 32768 + (((l[pt >> 1] & 15) | (ht << 4)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 18;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 32768 + (((l[pt >> 1] & 15) | (ht << 4)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ce = (Ce + -1) | 0;
              if ((i[qe >> 2] | 0) < 5) {
                e = ((i[Xe >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ce >>> 0 ? e : Ce;
              } else e = 0;
              i[ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              Ee = ie >>> 0 < We >>> 0 ? ie : We;
              Ie = ie & p;
              te = i[ze >> 2] | 0;
              i[ze >> 2] = 0;
              i[Le >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              oe = 4240;
              e = 0;
              se = 0;
              while (1) {
                if ((se | 0) == 4) break;
                s = ((i[(M + (i[(11372 + (se << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (se << 2)) >> 2] | 0)) | 0;
                d = (ie - s) | 0;
                do {
                  if (
                    (
                      (!((d >>> 0 >= ie >>> 0) | (s >>> 0 > Ee >>> 0)) ? ((At = d & p), (at = (Ie + te) | 0), at >>> 0 <= p >>> 0) : 0)
                        ? ((ct = (At + te) | 0), ct >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + at) >> 0] | 0) == (o[(h + ct) >> 0] | 0)
                      : 0
                  ) {
                    re = 0;
                    d = de;
                    while (1) {
                      r = d;
                      if (r >>> 0 > he >>> 0) break;
                      ht = d;
                      pt = (h + (At + re)) | 0;
                      if (
                        (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                        (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                      )
                        break;
                      re = (re + 4) | 0;
                      d = (r + 4) | 0;
                    }
                    while (1) {
                      if (d >>> 0 >= fe >>> 0) break;
                      if ((o[(h + (At + re)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                      re = (re + 1) | 0;
                      d = (d + 1) | 0;
                    }
                    if (re >>> 0 <= 2 ? !(((re | 0) == 2) & (se >>> 0 < 2)) : 0) {
                      d = oe;
                      break;
                    }
                    d = (((re * 540) | 0) + (i[(11500 + (se << 2)) >> 2] | 0)) | 0;
                    if (oe >>> 0 < d >>> 0) {
                      i[ze >> 2] = re;
                      i[Me >> 2] = s;
                      i[xe >> 2] = d;
                      te = re;
                      e = 1;
                    } else d = oe;
                  } else d = oe;
                } while (0);
                oe = d;
                se = (se + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18;
              le = ue << 4;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              d = ge & 65535;
              ge = (ge & 65535) > 16 ? (d + -16) | 0 : 0;
              t: while (1) {
                ce = (Ie + te) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (d >>> 0 <= ge >>> 0) break t;
                  d = (d + -1) | 0;
                  r = i[(_ + 32768 + ((le | (d & 15)) << 2)) >> 2] | 0;
                  Ae = (ie - r) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break t;
                  se = r & p;
                  if (ae) continue;
                  r = (se + te) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    s = 0;
                    r = de;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > he >>> 0) break;
                    ht = r;
                    pt = (h + (se + s)) | 0;
                    if (
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (se + s)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  r = (((s * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (oe >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = s;
                i[Me >> 2] = Ae;
                i[xe >> 2] = r;
                te = s;
                oe = r;
                e = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 32768 + ((le | (pt & 15)) << 2)) >> 2] = ie;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  s = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    pt = n[(21084 + (s << 1)) >> 1] | 0;
                    d = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((lt = d & 31), (ut = d >>> 5), (gt = ((i[(11272 + (lt << 2)) >> 2] | 0) + (Pe(lt, ut) | 0)) | 0), lt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      te = (gt + lt) | 0;
                      re = (280811 + te) | 0;
                      te = (280811 + (te + -4)) | 0;
                      r = 0;
                      d = (280811 + gt) | 0;
                      while (1) {
                        if (d >>> 0 > te >>> 0) break;
                        pt = (h + (Ie + r)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        r = (r + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= re >>> 0) break;
                        if ((o[(h + (Ie + r)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        r = (r + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((r + 10) | 0) >>> 0 <= lt >>> 0) | ((r | 0) == 0))
                          ? ((dt = (Ee + ut + 1 + (a[(407930 + (lt - r)) >> 0] << a[(280786 + lt) >> 0])) | 0),
                            (ft = (((r * 540) | 0) + 3840 + (Pe((_e(dt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            ft >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = r;
                        i[Le >> 2] = lt ^ r;
                        i[Me >> 2] = dt;
                        i[xe >> 2] = ft;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[ye >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[Xe >> 2] = i[ze >> 2];
              i[(Xe + 4) >> 2] = i[(ze + 4) >> 2];
              i[(Xe + 8) >> 2] = i[(ze + 8) >> 2];
              i[(Xe + 12) >> 2] = i[(ze + 12) >> 2];
              me = (me + 1) | 0;
              if (!(((me | 0) < 4) & (((k + 5) | 0) >>> 0 < Ke >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[Xe >> 2] | 0;
            re = (ie + (k << 1) + je) | 0;
            e = i[we >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < We >>> 0 ? ie : We) >>> 0) {
                r = (e + 3) | 0;
                pt = i[M >> 2] | 0;
                d = (r - pt) | 0;
                te = i[Ye >> 2] | 0;
                r = (r - te) | 0;
                if ((e | 0) == (pt | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (te | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (r >>> 0 < 7) {
                            e = (266017486 >>> (r << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[we >> 2];
                  k = i[Xe >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Qe + 16) | 0;
            pt = i[be >> 2] | 0;
            d = k ^ pt;
            i[Qe >> 2] = ne;
            i[(Qe + 4) >> 2] = k | (pt << 24);
            k = (Qe + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              Be = (e + -12) | 0;
              pt = (((_e(Be | 0) | 0) ^ 31) + -1) | 0;
              ht = (Be >>> pt) & 1;
              e = ((((pt << 1) + 65534) | ht) + 16) & 65535;
              n[k >> 1] = e;
              k = (pt << 24) | (Be - ((ht | 2) << pt));
            }
            i[(Qe + 8) >> 2] = k;
            s = (e << 16) >> 16 == 0;
            se = (Qe + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  pt = (ne + -2) | 0;
                  r = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  r = ((r << 1) + (pt >>> r) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  r = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) r = 21;
                else r = ne >>> 0 < 22594 ? 22 : 23;
              } else r = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  pt = (d + -6) | 0;
                  e = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (pt >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = r & 65535;
            te = (k & 7) | ((d << 3) & 56);
            if (s & ((r & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? te : te | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (te & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[Xe >> 2] | 0)) | 0;
            e = e >>> 0 < Je >>> 0 ? e : Je;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ht = (h + (k & p)) | 0;
              ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 18;
              pt = (_ + (ht << 1)) | 0;
              i[(_ + 32768 + (((l[pt >> 1] & 15) | (ht << 4)) << 2)) >> 2] = k;
              n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
              k = (k + 1) | 0;
            }
            k = (ie + (i[Xe >> 2] | 0)) | 0;
            Qe = oe;
            e = 0;
          }
          i[j >> 2] = e + Ce;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((me - q) >> 4);
          w = Ze;
          return;
        }
        function Na(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0;
          Ze = w;
          w = (w + 32) | 0;
          Xe = (Ze + 16) | 0;
          ze = Ze;
          We = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          se = i[j >> 2] | 0;
          Ke = (s + r) | 0;
          Je = r >>> 0 > 3 ? (Ke + -3) | 0 : s;
          qe = (k + 4) | 0;
          je = (i[qe >> 2] | 0) < 9 ? 64 : 512;
          re = (je + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 257)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              n[(_ + (((Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1)) >> 1] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(_ + 2129920) >> 0] = 0;
              te = 8;
            }
          } else {
            e = (_ + 2129920) | 0;
            if (!(o[e >> 0] & 1)) te = 8;
            else {
              ac(_ | 0, 0, 32768) | 0;
              o[e >> 0] = 0;
              te = 8;
            }
          }
          if ((te | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            He = (s + -3) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 18;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 32768 + (((l[Ye >> 1] & 31) | (Ve << 5)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
            Ye = (s + -2) | 0;
            Ve = (h + (Ye & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 18;
            He = (_ + (Ve << 1)) | 0;
            i[(_ + 32768 + (((l[He >> 1] & 31) | (Ve << 5)) << 2)) >> 2] = Ye;
            n[He >> 1] = (((n[He >> 1] | 0) + 1) << 16) >> 16;
            He = (s + -1) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 18;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 32768 + (((l[Ye >> 1] & 31) | (Ve << 5)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
          }
          be = (Xe + 4) | 0;
          we = (Xe + 8) | 0;
          ye = (Xe + 12) | 0;
          ke = (Xe + 4) | 0;
          Re = (Xe + 8) | 0;
          Te = (Xe + 12) | 0;
          De = (_ + 2129928) | 0;
          Fe = (_ + 2129924) | 0;
          ve = je << 2;
          Se = (Ke + -4) | 0;
          Ne = (Ke + -3) | 0;
          Oe = (ze + 12) | 0;
          Ue = (ze + 4) | 0;
          Ge = (ze + 8) | 0;
          Le = (ze + 4) | 0;
          Me = (ze + 8) | 0;
          xe = (ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Qe = q;
          e = se;
          e: while (1) {
            me = Qe;
            Be = (re + ve) | 0;
            t: while (1) {
              Ce = (Ke - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Ke >>> 0) break e;
              Ee = k >>> 0 < We >>> 0 ? k : We;
              i[Xe >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 0;
              i[ye >> 2] = 4240;
              Ie = k & p;
              r = i[Xe >> 2] | 0;
              i[Xe >> 2] = 0;
              i[ke >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              ie = 4240;
              d = 0;
              ne = 0;
              while (1) {
                if ((ne | 0) == 4) break;
                oe = ((i[(M + (i[(11372 + (ne << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ne << 2)) >> 2] | 0)) | 0;
                te = (k - oe) | 0;
                do {
                  if (
                    (
                      (!((te >>> 0 >= k >>> 0) | (oe >>> 0 > Ee >>> 0)) ? (($e = te & p), (et = (Ie + r) | 0), et >>> 0 <= p >>> 0) : 0)
                        ? ((tt = ($e + r) | 0), tt >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + et) >> 0] | 0) == (o[(h + tt) >> 0] | 0)
                      : 0
                  ) {
                    se = 0;
                    te = de;
                    while (1) {
                      s = te;
                      if (s >>> 0 > he >>> 0) break;
                      ue = te;
                      ge = (h + ($e + se)) | 0;
                      if (
                        (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0) !=
                        (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0)
                      )
                        break;
                      se = (se + 4) | 0;
                      te = (s + 4) | 0;
                    }
                    while (1) {
                      if (te >>> 0 >= fe >>> 0) break;
                      if ((o[(h + ($e + se)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                      se = (se + 1) | 0;
                      te = (te + 1) | 0;
                    }
                    if (se >>> 0 <= 2 ? !(((se | 0) == 2) & (ne >>> 0 < 2)) : 0) {
                      te = ie;
                      break;
                    }
                    te = (((se * 540) | 0) + (i[(11500 + (ne << 2)) >> 2] | 0)) | 0;
                    if (ie >>> 0 < te >>> 0) {
                      i[Xe >> 2] = se;
                      i[Re >> 2] = oe;
                      i[Te >> 2] = te;
                      r = se;
                      d = 1;
                    } else te = ie;
                  } else te = ie;
                } while (0);
                ie = te;
                ne = (ne + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18;
              le = ue << 5;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              te = ge & 65535;
              ge = (ge & 65535) > 32 ? (te + -32) | 0 : 0;
              r: while (1) {
                ce = (Ie + r) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (te >>> 0 <= ge >>> 0) break r;
                  te = (te + -1) | 0;
                  s = i[(_ + 32768 + ((le | (te & 31)) << 2)) >> 2] | 0;
                  Ae = (k - s) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break r;
                  ne = s & p;
                  if (ae) continue;
                  s = (ne + r) | 0;
                  if (s >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + s) >> 0] | 0)) {
                    oe = 0;
                    s = de;
                  } else continue;
                  while (1) {
                    se = s;
                    if (se >>> 0 > he >>> 0) break;
                    pt = s;
                    ht = (h + (ne + oe)) | 0;
                    if (
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0) !=
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0)
                    )
                      break;
                    oe = (oe + 4) | 0;
                    s = (se + 4) | 0;
                  }
                  while (1) {
                    if (s >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (ne + oe)) >> 0] | 0) != (o[s >> 0] | 0)) break;
                    oe = (oe + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  if (oe >>> 0 <= 3) continue;
                  s = (((oe * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (ie >>> 0 < s >>> 0) break;
                }
                i[Xe >> 2] = oe;
                i[Re >> 2] = Ae;
                i[Te >> 2] = s;
                r = oe;
                ie = s;
                d = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 32768 + ((le | (pt & 31)) << 2)) >> 2] = k;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    pt = n[(21084 + (oe << 1)) >> 1] | 0;
                    te = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((rt = te & 31), (st = te >>> 5), (ot = ((i[(11272 + (rt << 2)) >> 2] | 0) + (Pe(rt, st) | 0)) | 0), rt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      r = (ot + rt) | 0;
                      se = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      s = 0;
                      te = (280811 + ot) | 0;
                      while (1) {
                        if (te >>> 0 > r >>> 0) break;
                        pt = (h + (Ie + s)) | 0;
                        if (
                          (a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        s = (s + 4) | 0;
                        te = (te + 4) | 0;
                      }
                      while (1) {
                        if (te >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ie + s)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                        s = (s + 1) | 0;
                        te = (te + 1) | 0;
                      }
                      if (
                        !((((s + 10) | 0) >>> 0 <= rt >>> 0) | ((s | 0) == 0))
                          ? ((nt = (Ee + st + 1 + (a[(407930 + (rt - s)) >> 0] << a[(280786 + rt) >> 0])) | 0),
                            (it = (((s * 540) | 0) + 3840 + (Pe((_e(nt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            it >>> 0 >= (i[Te >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Xe >> 2] = s;
                        i[ke >> 2] = rt ^ s;
                        i[Re >> 2] = nt;
                        i[Te >> 2] = it;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                me = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              te = (k + 1) | 0;
              if (te >>> 0 <= re >>> 0) {
                k = te;
                continue;
              }
              if (te >>> 0 > Be >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 18;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 32768 + (((l[pt >> 1] & 31) | (ht << 5)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 18;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 32768 + (((l[pt >> 1] & 31) | (ht << 5)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ce = (Ce + -1) | 0;
              if ((i[qe >> 2] | 0) < 5) {
                e = ((i[Xe >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ce >>> 0 ? e : Ce;
              } else e = 0;
              i[ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              Ee = ie >>> 0 < We >>> 0 ? ie : We;
              Ie = ie & p;
              te = i[ze >> 2] | 0;
              i[ze >> 2] = 0;
              i[Le >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              oe = 4240;
              e = 0;
              se = 0;
              while (1) {
                if ((se | 0) == 4) break;
                s = ((i[(M + (i[(11372 + (se << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (se << 2)) >> 2] | 0)) | 0;
                d = (ie - s) | 0;
                do {
                  if (
                    (
                      (!((d >>> 0 >= ie >>> 0) | (s >>> 0 > Ee >>> 0)) ? ((At = d & p), (at = (Ie + te) | 0), at >>> 0 <= p >>> 0) : 0)
                        ? ((ct = (At + te) | 0), ct >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + at) >> 0] | 0) == (o[(h + ct) >> 0] | 0)
                      : 0
                  ) {
                    re = 0;
                    d = de;
                    while (1) {
                      r = d;
                      if (r >>> 0 > he >>> 0) break;
                      ht = d;
                      pt = (h + (At + re)) | 0;
                      if (
                        (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                        (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                      )
                        break;
                      re = (re + 4) | 0;
                      d = (r + 4) | 0;
                    }
                    while (1) {
                      if (d >>> 0 >= fe >>> 0) break;
                      if ((o[(h + (At + re)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                      re = (re + 1) | 0;
                      d = (d + 1) | 0;
                    }
                    if (re >>> 0 <= 2 ? !(((re | 0) == 2) & (se >>> 0 < 2)) : 0) {
                      d = oe;
                      break;
                    }
                    d = (((re * 540) | 0) + (i[(11500 + (se << 2)) >> 2] | 0)) | 0;
                    if (oe >>> 0 < d >>> 0) {
                      i[ze >> 2] = re;
                      i[Me >> 2] = s;
                      i[xe >> 2] = d;
                      te = re;
                      e = 1;
                    } else d = oe;
                  } else d = oe;
                } while (0);
                oe = d;
                se = (se + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18;
              le = ue << 5;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              d = ge & 65535;
              ge = (ge & 65535) > 32 ? (d + -32) | 0 : 0;
              t: while (1) {
                ce = (Ie + te) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (d >>> 0 <= ge >>> 0) break t;
                  d = (d + -1) | 0;
                  r = i[(_ + 32768 + ((le | (d & 31)) << 2)) >> 2] | 0;
                  Ae = (ie - r) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break t;
                  se = r & p;
                  if (ae) continue;
                  r = (se + te) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    s = 0;
                    r = de;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > he >>> 0) break;
                    ht = r;
                    pt = (h + (se + s)) | 0;
                    if (
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (se + s)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  r = (((s * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (oe >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = s;
                i[Me >> 2] = Ae;
                i[xe >> 2] = r;
                te = s;
                oe = r;
                e = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 32768 + ((le | (pt & 31)) << 2)) >> 2] = ie;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  s = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    pt = n[(21084 + (s << 1)) >> 1] | 0;
                    d = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((lt = d & 31), (ut = d >>> 5), (gt = ((i[(11272 + (lt << 2)) >> 2] | 0) + (Pe(lt, ut) | 0)) | 0), lt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      te = (gt + lt) | 0;
                      re = (280811 + te) | 0;
                      te = (280811 + (te + -4)) | 0;
                      r = 0;
                      d = (280811 + gt) | 0;
                      while (1) {
                        if (d >>> 0 > te >>> 0) break;
                        pt = (h + (Ie + r)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        r = (r + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= re >>> 0) break;
                        if ((o[(h + (Ie + r)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        r = (r + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((r + 10) | 0) >>> 0 <= lt >>> 0) | ((r | 0) == 0))
                          ? ((dt = (Ee + ut + 1 + (a[(407930 + (lt - r)) >> 0] << a[(280786 + lt) >> 0])) | 0),
                            (ft = (((r * 540) | 0) + 3840 + (Pe((_e(dt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            ft >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = r;
                        i[Le >> 2] = lt ^ r;
                        i[Me >> 2] = dt;
                        i[xe >> 2] = ft;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[ye >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[Xe >> 2] = i[ze >> 2];
              i[(Xe + 4) >> 2] = i[(ze + 4) >> 2];
              i[(Xe + 8) >> 2] = i[(ze + 8) >> 2];
              i[(Xe + 12) >> 2] = i[(ze + 12) >> 2];
              me = (me + 1) | 0;
              if (!(((me | 0) < 4) & (((k + 5) | 0) >>> 0 < Ke >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[Xe >> 2] | 0;
            re = (ie + (k << 1) + je) | 0;
            e = i[we >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < We >>> 0 ? ie : We) >>> 0) {
                r = (e + 3) | 0;
                pt = i[M >> 2] | 0;
                d = (r - pt) | 0;
                te = i[Ye >> 2] | 0;
                r = (r - te) | 0;
                if ((e | 0) == (pt | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (te | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (r >>> 0 < 7) {
                            e = (266017486 >>> (r << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[we >> 2];
                  k = i[Xe >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Qe + 16) | 0;
            pt = i[be >> 2] | 0;
            d = k ^ pt;
            i[Qe >> 2] = ne;
            i[(Qe + 4) >> 2] = k | (pt << 24);
            k = (Qe + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              Be = (e + -12) | 0;
              pt = (((_e(Be | 0) | 0) ^ 31) + -1) | 0;
              ht = (Be >>> pt) & 1;
              e = ((((pt << 1) + 65534) | ht) + 16) & 65535;
              n[k >> 1] = e;
              k = (pt << 24) | (Be - ((ht | 2) << pt));
            }
            i[(Qe + 8) >> 2] = k;
            s = (e << 16) >> 16 == 0;
            se = (Qe + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  pt = (ne + -2) | 0;
                  r = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  r = ((r << 1) + (pt >>> r) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  r = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) r = 21;
                else r = ne >>> 0 < 22594 ? 22 : 23;
              } else r = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  pt = (d + -6) | 0;
                  e = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (pt >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = r & 65535;
            te = (k & 7) | ((d << 3) & 56);
            if (s & ((r & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? te : te | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (te & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[Xe >> 2] | 0)) | 0;
            e = e >>> 0 < Je >>> 0 ? e : Je;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ht = (h + (k & p)) | 0;
              ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 18;
              pt = (_ + (ht << 1)) | 0;
              i[(_ + 32768 + (((l[pt >> 1] & 31) | (ht << 5)) << 2)) >> 2] = k;
              n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
              k = (k + 1) | 0;
            }
            k = (ie + (i[Xe >> 2] | 0)) | 0;
            Qe = oe;
            e = 0;
          }
          i[j >> 2] = e + Ce;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((me - q) >> 4);
          w = Ze;
          return;
        }
        function Oa(e, r, s, d, h, p, k, _, M, j, q, $, ee) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          p = p | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          var te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0,
            Oe = 0,
            Ue = 0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            $e = 0,
            et = 0,
            tt = 0,
            rt = 0,
            st = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0;
          Ze = w;
          w = (w + 32) | 0;
          Xe = (Ze + 16) | 0;
          ze = Ze;
          We = ((1 << i[(k + 8) >> 2]) + -16) | 0;
          se = i[j >> 2] | 0;
          Ke = (s + r) | 0;
          Je = r >>> 0 > 3 ? (Ke + -3) | 0 : s;
          qe = (k + 4) | 0;
          je = (i[qe >> 2] | 0) < 9 ? 64 : 512;
          re = (je + s) | 0;
          if ((((((s | 0) == 0) ^ 1) | (d ^ 1)) ^ 1) & (r >>> 0 < 513)) {
            e = 0;
            while (1) {
              if ((e | 0) == (r | 0)) break;
              Ye = (h + e) | 0;
              n[(_ + (((Pe(a[Ye >> 0] | (a[(Ye + 1) >> 0] << 8) | (a[(Ye + 2) >> 0] << 16) | (a[(Ye + 3) >> 0] << 24), 506832829) | 0) >>> 17) << 1)) >> 1] = 0;
              e = (e + 1) | 0;
            }
            if (r) {
              o[(_ + 8454144) >> 0] = 0;
              te = 8;
            }
          } else {
            e = (_ + 8454144) | 0;
            if (!(o[e >> 0] & 1)) te = 8;
            else {
              ac(_ | 0, 0, 65536) | 0;
              o[e >> 0] = 0;
              te = 8;
            }
          }
          if ((te | 0) == 8 ? (r >>> 0 > 2) & (s >>> 0 > 2) : 0) {
            He = (s + -3) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[Ye >> 1] & 63) | (Ve << 6)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
            Ye = (s + -2) | 0;
            Ve = (h + (Ye & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            He = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[He >> 1] & 63) | (Ve << 6)) << 2)) >> 2] = Ye;
            n[He >> 1] = (((n[He >> 1] | 0) + 1) << 16) >> 16;
            He = (s + -1) | 0;
            Ve = (h + (He & p)) | 0;
            Ve = (Pe(a[Ve >> 0] | (a[(Ve + 1) >> 0] << 8) | (a[(Ve + 2) >> 0] << 16) | (a[(Ve + 3) >> 0] << 24), 506832829) | 0) >>> 17;
            Ye = (_ + (Ve << 1)) | 0;
            i[(_ + 65536 + (((l[Ye >> 1] & 63) | (Ve << 6)) << 2)) >> 2] = He;
            n[Ye >> 1] = (((n[Ye >> 1] | 0) + 1) << 16) >> 16;
          }
          be = (Xe + 4) | 0;
          we = (Xe + 8) | 0;
          ye = (Xe + 12) | 0;
          ke = (Xe + 4) | 0;
          Re = (Xe + 8) | 0;
          Te = (Xe + 12) | 0;
          De = (_ + 8454152) | 0;
          Fe = (_ + 8454148) | 0;
          ve = je << 2;
          Se = (Ke + -4) | 0;
          Ne = (Ke + -3) | 0;
          Oe = (ze + 12) | 0;
          Ue = (ze + 4) | 0;
          Ge = (ze + 8) | 0;
          Le = (ze + 4) | 0;
          Me = (ze + 8) | 0;
          xe = (ze + 12) | 0;
          He = (M + 8) | 0;
          Ve = (M + 12) | 0;
          Ye = (M + 4) | 0;
          k = s;
          Qe = q;
          e = se;
          e: while (1) {
            me = Qe;
            Be = (re + ve) | 0;
            t: while (1) {
              Ce = (Ke - k) | 0;
              if (((k + 4) | 0) >>> 0 >= Ke >>> 0) break e;
              Ee = k >>> 0 < We >>> 0 ? k : We;
              i[Xe >> 2] = 0;
              i[be >> 2] = 0;
              i[we >> 2] = 0;
              i[ye >> 2] = 4240;
              Ie = k & p;
              r = i[Xe >> 2] | 0;
              i[Xe >> 2] = 0;
              i[ke >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              ie = 4240;
              d = 0;
              ne = 0;
              while (1) {
                if ((ne | 0) == 10) break;
                oe = ((i[(M + (i[(11372 + (ne << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (ne << 2)) >> 2] | 0)) | 0;
                te = (k - oe) | 0;
                do {
                  if (
                    (
                      (!((te >>> 0 >= k >>> 0) | (oe >>> 0 > Ee >>> 0)) ? (($e = te & p), (et = (Ie + r) | 0), et >>> 0 <= p >>> 0) : 0)
                        ? ((tt = ($e + r) | 0), tt >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + et) >> 0] | 0) == (o[(h + tt) >> 0] | 0)
                      : 0
                  ) {
                    se = 0;
                    te = de;
                    while (1) {
                      s = te;
                      if (s >>> 0 > he >>> 0) break;
                      ue = te;
                      ge = (h + ($e + se)) | 0;
                      if (
                        (a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24) | 0) !=
                        (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0)
                      )
                        break;
                      se = (se + 4) | 0;
                      te = (s + 4) | 0;
                    }
                    while (1) {
                      if (te >>> 0 >= fe >>> 0) break;
                      if ((o[(h + ($e + se)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                      se = (se + 1) | 0;
                      te = (te + 1) | 0;
                    }
                    if (se >>> 0 <= 2 ? !(((se | 0) == 2) & (ne >>> 0 < 2)) : 0) {
                      te = ie;
                      break;
                    }
                    te = (((se * 540) | 0) + (i[(11500 + (ne << 2)) >> 2] | 0)) | 0;
                    if (ie >>> 0 < te >>> 0) {
                      i[Xe >> 2] = se;
                      i[Re >> 2] = oe;
                      i[Te >> 2] = te;
                      r = se;
                      d = 1;
                    } else te = ie;
                  } else te = ie;
                } while (0);
                ie = te;
                ne = (ne + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              le = ue << 6;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              te = ge & 65535;
              ge = (ge & 65535) > 64 ? (te + -64) | 0 : 0;
              r: while (1) {
                ce = (Ie + r) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (te >>> 0 <= ge >>> 0) break r;
                  te = (te + -1) | 0;
                  s = i[(_ + 65536 + ((le | (te & 63)) << 2)) >> 2] | 0;
                  Ae = (k - s) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break r;
                  ne = s & p;
                  if (ae) continue;
                  s = (ne + r) | 0;
                  if (s >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + s) >> 0] | 0)) {
                    oe = 0;
                    s = de;
                  } else continue;
                  while (1) {
                    se = s;
                    if (se >>> 0 > he >>> 0) break;
                    pt = s;
                    ht = (h + (ne + oe)) | 0;
                    if (
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0) !=
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0)
                    )
                      break;
                    oe = (oe + 4) | 0;
                    s = (se + 4) | 0;
                  }
                  while (1) {
                    if (s >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (ne + oe)) >> 0] | 0) != (o[s >> 0] | 0)) break;
                    oe = (oe + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  if (oe >>> 0 <= 3) continue;
                  s = (((oe * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (ie >>> 0 < s >>> 0) break;
                }
                i[Xe >> 2] = oe;
                i[Re >> 2] = Ae;
                i[Te >> 2] = s;
                r = oe;
                ie = s;
                d = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 65536 + ((le | (pt & 63)) << 2)) >> 2] = k;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(d & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) d = 0;
                else {
                  ne = 0;
                  d = 0;
                  oe = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((ne | 0) == 2) break;
                    pt = n[(21084 + (oe << 1)) >> 1] | 0;
                    te = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((rt = te & 31), (st = te >>> 5), (ot = ((i[(11272 + (rt << 2)) >> 2] | 0) + (Pe(rt, st) | 0)) | 0), rt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      r = (ot + rt) | 0;
                      se = (280811 + r) | 0;
                      r = (280811 + (r + -4)) | 0;
                      s = 0;
                      te = (280811 + ot) | 0;
                      while (1) {
                        if (te >>> 0 > r >>> 0) break;
                        pt = (h + (Ie + s)) | 0;
                        if (
                          (a[te >> 0] | (a[(te + 1) >> 0] << 8) | (a[(te + 2) >> 0] << 16) | (a[(te + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        s = (s + 4) | 0;
                        te = (te + 4) | 0;
                      }
                      while (1) {
                        if (te >>> 0 >= se >>> 0) break;
                        if ((o[(h + (Ie + s)) >> 0] | 0) != (o[te >> 0] | 0)) break;
                        s = (s + 1) | 0;
                        te = (te + 1) | 0;
                      }
                      if (
                        !((((s + 10) | 0) >>> 0 <= rt >>> 0) | ((s | 0) == 0))
                          ? ((nt = (Ee + st + 1 + (a[(407930 + (rt - s)) >> 0] << a[(280786 + rt) >> 0])) | 0),
                            (it = (((s * 540) | 0) + 3840 + (Pe((_e(nt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            it >>> 0 >= (i[Te >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[Xe >> 2] = s;
                        i[ke >> 2] = rt ^ s;
                        i[Re >> 2] = nt;
                        i[Te >> 2] = it;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        d = 1;
                      }
                    }
                    ne = (ne + 1) | 0;
                    oe = (oe + 1) | 0;
                  }
                  d = (d & 1) != 0;
                }
                d = d & 1;
              }
              if (d & 1) {
                me = 0;
                ne = e;
                break;
              }
              e = (e + 1) | 0;
              te = (k + 1) | 0;
              if (te >>> 0 <= re >>> 0) {
                k = te;
                continue;
              }
              if (te >>> 0 > Be >>> 0) {
                d = (k + 17) | 0;
                d = d >>> 0 < Se >>> 0 ? d : Se;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 65536 + (((l[pt >> 1] & 63) | (ht << 6)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 4) | 0;
                  e = (e + 4) | 0;
                }
              } else {
                d = (k + 9) | 0;
                d = d >>> 0 < Ne >>> 0 ? d : Ne;
                k = te;
                while (1) {
                  if (k >>> 0 >= d >>> 0) continue t;
                  ht = (h + (k & p)) | 0;
                  ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
                  pt = (_ + (ht << 1)) | 0;
                  i[(_ + 65536 + (((l[pt >> 1] & 63) | (ht << 6)) << 2)) >> 2] = k;
                  n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
                  k = (k + 2) | 0;
                  e = (e + 2) | 0;
                }
              }
            }
            while (1) {
              Ce = (Ce + -1) | 0;
              if ((i[qe >> 2] | 0) < 5) {
                e = ((i[Xe >> 2] | 0) + -1) | 0;
                e = e >>> 0 < Ce >>> 0 ? e : Ce;
              } else e = 0;
              i[ze >> 2] = e;
              i[Ue >> 2] = 0;
              i[Ge >> 2] = 0;
              i[Oe >> 2] = 4240;
              ie = (k + 1) | 0;
              Ee = ie >>> 0 < We >>> 0 ? ie : We;
              Ie = ie & p;
              te = i[ze >> 2] | 0;
              i[ze >> 2] = 0;
              i[Le >> 2] = 0;
              pe = (h + Ie) | 0;
              he = (Ie + Ce) | 0;
              fe = (h + he) | 0;
              de = pe;
              he = (h + (he + -4)) | 0;
              oe = 4240;
              e = 0;
              se = 0;
              while (1) {
                if ((se | 0) == 10) break;
                s = ((i[(M + (i[(11372 + (se << 2)) >> 2] << 2)) >> 2] | 0) + (i[(11436 + (se << 2)) >> 2] | 0)) | 0;
                d = (ie - s) | 0;
                do {
                  if (
                    (
                      (!((d >>> 0 >= ie >>> 0) | (s >>> 0 > Ee >>> 0)) ? ((At = d & p), (at = (Ie + te) | 0), at >>> 0 <= p >>> 0) : 0)
                        ? ((ct = (At + te) | 0), ct >>> 0 <= p >>> 0)
                        : 0
                    )
                      ? (o[(h + at) >> 0] | 0) == (o[(h + ct) >> 0] | 0)
                      : 0
                  ) {
                    re = 0;
                    d = de;
                    while (1) {
                      r = d;
                      if (r >>> 0 > he >>> 0) break;
                      ht = d;
                      pt = (h + (At + re)) | 0;
                      if (
                        (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                        (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                      )
                        break;
                      re = (re + 4) | 0;
                      d = (r + 4) | 0;
                    }
                    while (1) {
                      if (d >>> 0 >= fe >>> 0) break;
                      if ((o[(h + (At + re)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                      re = (re + 1) | 0;
                      d = (d + 1) | 0;
                    }
                    if (re >>> 0 <= 2 ? !(((re | 0) == 2) & (se >>> 0 < 2)) : 0) {
                      d = oe;
                      break;
                    }
                    d = (((re * 540) | 0) + (i[(11500 + (se << 2)) >> 2] | 0)) | 0;
                    if (oe >>> 0 < d >>> 0) {
                      i[ze >> 2] = re;
                      i[Me >> 2] = s;
                      i[xe >> 2] = d;
                      te = re;
                      e = 1;
                    } else d = oe;
                  } else d = oe;
                } while (0);
                oe = d;
                se = (se + 1) | 0;
              }
              ue = (Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              le = ue << 6;
              ue = (_ + (ue << 1)) | 0;
              ge = n[ue >> 1] | 0;
              d = ge & 65535;
              ge = (ge & 65535) > 64 ? (d + -64) | 0 : 0;
              t: while (1) {
                ce = (Ie + te) | 0;
                ae = ce >>> 0 > p >>> 0;
                ce = (h + ce) | 0;
                while (1) {
                  if (d >>> 0 <= ge >>> 0) break t;
                  d = (d + -1) | 0;
                  r = i[(_ + 65536 + ((le | (d & 63)) << 2)) >> 2] | 0;
                  Ae = (ie - r) | 0;
                  if (Ae >>> 0 > Ee >>> 0) break t;
                  se = r & p;
                  if (ae) continue;
                  r = (se + te) | 0;
                  if (r >>> 0 > p >>> 0) continue;
                  if ((o[ce >> 0] | 0) == (o[(h + r) >> 0] | 0)) {
                    s = 0;
                    r = de;
                  } else continue;
                  while (1) {
                    re = r;
                    if (re >>> 0 > he >>> 0) break;
                    ht = r;
                    pt = (h + (se + s)) | 0;
                    if (
                      (a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24) | 0) !=
                      (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                    )
                      break;
                    s = (s + 4) | 0;
                    r = (re + 4) | 0;
                  }
                  while (1) {
                    if (r >>> 0 >= fe >>> 0) break;
                    if ((o[(h + (se + s)) >> 0] | 0) != (o[r >> 0] | 0)) break;
                    s = (s + 1) | 0;
                    r = (r + 1) | 0;
                  }
                  if (s >>> 0 <= 3) continue;
                  r = (((s * 540) | 0) + 3840 + (Pe((_e(Ae | 0) | 0) ^ 31, -120) | 0)) | 0;
                  if (oe >>> 0 < r >>> 0) break;
                }
                i[ze >> 2] = s;
                i[Me >> 2] = Ae;
                i[xe >> 2] = r;
                te = s;
                oe = r;
                e = 1;
              }
              pt = n[ue >> 1] | 0;
              i[(_ + 65536 + ((le | (pt & 63)) << 2)) >> 2] = ie;
              n[ue >> 1] = ((pt + 1) << 16) >> 16;
              if (!(e & 1)) {
                if ((i[De >> 2] | 0) >>> 0 < ((i[Fe >> 2] | 0) >>> 7) >>> 0) e = 0;
                else {
                  se = 0;
                  e = 0;
                  s = ((Pe(a[pe >> 0] | (a[(pe + 1) >> 0] << 8) | (a[(pe + 2) >> 0] << 16) | (a[(pe + 3) >> 0] << 24), 506832829) | 0) >>> 18) << 1;
                  while (1) {
                    if ((se | 0) == 2) break;
                    pt = n[(21084 + (s << 1)) >> 1] | 0;
                    d = pt & 65535;
                    i[Fe >> 2] = (i[Fe >> 2] | 0) + 1;
                    if (
                      (pt << 16) >> 16 != 0
                        ? ((lt = d & 31), (ut = d >>> 5), (gt = ((i[(11272 + (lt << 2)) >> 2] | 0) + (Pe(lt, ut) | 0)) | 0), lt >>> 0 <= Ce >>> 0)
                        : 0
                    ) {
                      te = (gt + lt) | 0;
                      re = (280811 + te) | 0;
                      te = (280811 + (te + -4)) | 0;
                      r = 0;
                      d = (280811 + gt) | 0;
                      while (1) {
                        if (d >>> 0 > te >>> 0) break;
                        pt = (h + (Ie + r)) | 0;
                        if (
                          (a[d >> 0] | (a[(d + 1) >> 0] << 8) | (a[(d + 2) >> 0] << 16) | (a[(d + 3) >> 0] << 24) | 0) !=
                          (a[pt >> 0] | (a[(pt + 1) >> 0] << 8) | (a[(pt + 2) >> 0] << 16) | (a[(pt + 3) >> 0] << 24) | 0)
                        )
                          break;
                        r = (r + 4) | 0;
                        d = (d + 4) | 0;
                      }
                      while (1) {
                        if (d >>> 0 >= re >>> 0) break;
                        if ((o[(h + (Ie + r)) >> 0] | 0) != (o[d >> 0] | 0)) break;
                        r = (r + 1) | 0;
                        d = (d + 1) | 0;
                      }
                      if (
                        !((((r + 10) | 0) >>> 0 <= lt >>> 0) | ((r | 0) == 0))
                          ? ((dt = (Ee + ut + 1 + (a[(407930 + (lt - r)) >> 0] << a[(280786 + lt) >> 0])) | 0),
                            (ft = (((r * 540) | 0) + 3840 + (Pe((_e(dt | 0) | 0) ^ 31, -120) | 0)) | 0),
                            ft >>> 0 >= (i[xe >> 2] | 0) >>> 0)
                          : 0
                      ) {
                        i[ze >> 2] = r;
                        i[Le >> 2] = lt ^ r;
                        i[Me >> 2] = dt;
                        i[xe >> 2] = ft;
                        i[De >> 2] = (i[De >> 2] | 0) + 1;
                        e = 1;
                      }
                    }
                    se = (se + 1) | 0;
                    s = (s + 1) | 0;
                  }
                  e = (e & 1) != 0;
                }
                e = e & 1;
              }
              if (!(e & 1)) {
                ie = k;
                break;
              }
              if ((i[Oe >> 2] | 0) >>> 0 < (((i[ye >> 2] | 0) + 700) | 0) >>> 0) {
                ie = k;
                break;
              }
              e = (ne + 1) | 0;
              i[Xe >> 2] = i[ze >> 2];
              i[(Xe + 4) >> 2] = i[(ze + 4) >> 2];
              i[(Xe + 8) >> 2] = i[(ze + 8) >> 2];
              i[(Xe + 12) >> 2] = i[(ze + 12) >> 2];
              me = (me + 1) | 0;
              if (!(((me | 0) < 4) & (((k + 5) | 0) >>> 0 < Ke >>> 0))) {
                ne = e;
                break;
              } else {
                k = ie;
                ne = e;
              }
            }
            k = i[Xe >> 2] | 0;
            re = (ie + (k << 1) + je) | 0;
            e = i[we >> 2] | 0;
            t: do {
              if (e >>> 0 <= (ie >>> 0 < We >>> 0 ? ie : We) >>> 0) {
                r = (e + 3) | 0;
                pt = i[M >> 2] | 0;
                d = (r - pt) | 0;
                te = i[Ye >> 2] | 0;
                r = (r - te) | 0;
                if ((e | 0) == (pt | 0)) e = 0;
                else {
                  r: do {
                    if ((e | 0) != (te | 0)) {
                      do {
                        if (d >>> 0 < 7) e = (158663784 >>> (d << 2)) & 15;
                        else {
                          if (r >>> 0 < 7) {
                            e = (266017486 >>> (r << 2)) & 15;
                            break;
                          }
                          if ((e | 0) == (i[He >> 2] | 0)) {
                            e = 2;
                            break r;
                          }
                          if ((e | 0) == (i[Ve >> 2] | 0)) {
                            e = 3;
                            break r;
                          }
                          e = (e + 15) | 0;
                        }
                      } while (0);
                      if (!e) break t;
                    } else e = 1;
                  } while (0);
                  i[Ve >> 2] = i[He >> 2];
                  i[He >> 2] = i[Ye >> 2];
                  i[Ye >> 2] = i[M >> 2];
                  i[M >> 2] = i[we >> 2];
                  k = i[Xe >> 2] | 0;
                }
              } else e = (e + 15) | 0;
            } while (0);
            oe = (Qe + 16) | 0;
            pt = i[be >> 2] | 0;
            d = k ^ pt;
            i[Qe >> 2] = ne;
            i[(Qe + 4) >> 2] = k | (pt << 24);
            k = (Qe + 14) | 0;
            if (e >>> 0 < 16) {
              e = e & 65535;
              n[k >> 1] = e;
              k = 0;
            } else {
              Be = (e + -12) | 0;
              pt = (((_e(Be | 0) | 0) ^ 31) + -1) | 0;
              ht = (Be >>> pt) & 1;
              e = ((((pt << 1) + 65534) | ht) + 16) & 65535;
              n[k >> 1] = e;
              k = (pt << 24) | (Be - ((ht | 2) << pt));
            }
            i[(Qe + 8) >> 2] = k;
            s = (e << 16) >> 16 == 0;
            se = (Qe + 12) | 0;
            do {
              if (ne >>> 0 >= 6) {
                if (ne >>> 0 < 130) {
                  pt = (ne + -2) | 0;
                  r = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  r = ((r << 1) + (pt >>> r) + 2) & 65535;
                  break;
                }
                if (ne >>> 0 < 2114) {
                  r = (((_e((ne + -66) | 0) | 0) ^ 31) + 10) & 65535;
                  break;
                }
                if (ne >>> 0 < 6210) r = 21;
                else r = ne >>> 0 < 22594 ? 22 : 23;
              } else r = ne & 65535;
            } while (0);
            do {
              if (d >>> 0 >= 10) {
                if (d >>> 0 < 134) {
                  pt = (d + -6) | 0;
                  e = (((_e(pt | 0) | 0) ^ 31) + -1) | 0;
                  e = ((e << 1) + (pt >>> e) + 4) & 65535;
                  break;
                }
                if (d >>> 0 < 2118) e = (((_e((d + -70) | 0) | 0) ^ 31) + 12) & 65535;
                else e = 23;
              } else e = (d + 65534) & 65535;
            } while (0);
            k = e & 65535;
            d = r & 65535;
            te = (k & 7) | ((d << 3) & 56);
            if (s & ((r & 65535) < 8) & ((e & 65535) < 16)) e = ((e & 65535) < 8 ? te : te | 64) & 65535;
            else e = n[(88156 + (((k >>> 3) + (((d >>> 3) * 3) | 0)) << 1)) >> 1] | (te & 65535);
            n[se >> 1] = e;
            i[ee >> 2] = (i[ee >> 2] | 0) + ne;
            e = (ie + (i[Xe >> 2] | 0)) | 0;
            e = e >>> 0 < Je >>> 0 ? e : Je;
            k = (ie + 2) | 0;
            while (1) {
              if (k >>> 0 >= e >>> 0) break;
              ht = (h + (k & p)) | 0;
              ht = (Pe(a[ht >> 0] | (a[(ht + 1) >> 0] << 8) | (a[(ht + 2) >> 0] << 16) | (a[(ht + 3) >> 0] << 24), 506832829) | 0) >>> 17;
              pt = (_ + (ht << 1)) | 0;
              i[(_ + 65536 + (((l[pt >> 1] & 63) | (ht << 6)) << 2)) >> 2] = k;
              n[pt >> 1] = (((n[pt >> 1] | 0) + 1) << 16) >> 16;
              k = (k + 1) | 0;
            }
            k = (ie + (i[Xe >> 2] | 0)) | 0;
            Qe = oe;
            e = 0;
          }
          i[j >> 2] = e + Ce;
          i[$ >> 2] = (i[$ >> 2] | 0) + ((me - q) >> 4);
          w = Ze;
          return;
        }
        function Db(e, r, s, d, k, _, M, j, q, $, ee, te, re, oe, ne, ie, Ae) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          ee = ee | 0;
          te = te | 0;
          re = re | 0;
          oe = oe | 0;
          ne = ne | 0;
          ie = ie | 0;
          Ae = Ae | 0;
          var ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0.0,
            fe = 0.0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0.0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0.0,
            ke = 0.0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0.0,
            Oe = 0,
            Ue = 0.0,
            Ge = 0,
            Le = 0,
            Me = 0,
            xe = 0,
            He = 0,
            Ve = 0,
            Ye = 0,
            je = 0,
            qe = 0,
            Je = 0,
            We = 0,
            Ke = 0,
            Xe = 0,
            ze = 0,
            Ze = 0,
            tt = 0,
            ot = 0,
            nt = 0,
            it = 0,
            At = 0,
            at = 0,
            ct = 0,
            lt = 0,
            ut = 0,
            gt = 0,
            dt = 0,
            ft = 0,
            ht = 0,
            pt = 0;
          ft = w;
          w = (w + 12768) | 0;
          lt = (ft + 7760) | 0;
          it = (ft + 4928) | 0;
          At = (ft + 2096) | 0;
          Qe = (ft + 12504) | 0;
          Be = (ft + 10968) | 0;
          ce = ft;
          ue = (ft + 12248) | 0;
          le = (ft + 10456) | 0;
          Ee = (ft + 11544) | 0;
          pe = (ft + 9048) | 0;
          Ce = (ft + 11480) | 0;
          Ie = (ft + 8920) | 0;
          ct = (ft + 8808) | 0;
          we = (ft + 8804) | 0;
          be = (ft + 8800) | 0;
          if ((k >>> 0 > 0) | (((k | 0) == 0) & (d >>> 0 > 3221225471))) {
            dt = bc(d | 0, k | 0, 30) | 0;
            dt = (d & 1073741823) | ((((dt & 1) ^ 1) << 30) + 1073741824);
          } else dt = d;
          if (!_) {
            s = i[ie >> 2] | 0;
            Ae = (Ae + (s >>> 3)) | 0;
            te = a[Ae >> 0] | 0;
            s = cc(3, 0, (s & 7) | 0) | 0;
            oe = de;
            s = te | s;
            te = Ae;
            o[te >> 0] = s;
            o[(te + 1) >> 0] = s >> 8;
            o[(te + 2) >> 0] = s >> 16;
            o[(te + 3) >> 0] = s >> 24;
            Ae = (Ae + 4) | 0;
            o[Ae >> 0] = oe;
            o[(Ae + 1) >> 0] = oe >> 8;
            o[(Ae + 2) >> 0] = oe >> 16;
            o[(Ae + 3) >> 0] = oe >> 24;
            i[ie >> 2] = ((i[ie >> 2] | 0) + 9) & -8;
            w = ft;
            return;
          }
          if (!(Fb(r, s, d, k, _, ee, te) | 0)) {
            i[ne >> 2] = i[oe >> 2];
            i[(ne + 4) >> 2] = i[(oe + 4) >> 2];
            i[(ne + 8) >> 2] = i[(oe + 8) >> 2];
            i[(ne + 12) >> 2] = i[(oe + 12) >> 2];
            bb(M, r, dt, s, _, ie, Ae);
            w = ft;
            return;
          }
          ut = o[Ae >> 0] | 0;
          gt = i[ie >> 2] | 0;
          at = (j + 4) | 0;
          d = i[at >> 2] | 0;
          if ((d | 0) > 9)
            if ((i[j >> 2] | 0) == 2) {
              ae = 0;
              while (1) {
                if ((ae | 0) == (te | 0)) break;
                do {
                  if (((i[(re + (ae << 4) + 4) >> 2] & 16777215) | 0) != 0 ? (l[(re + (ae << 4) + 12) >> 1] | 0) > 127 : 0) {
                    ee = (re + (ae << 4) + 14) | 0;
                    d = n[ee >> 1] | 0;
                    if ((d & 65535) >= 16) {
                      k = (re + (ae << 4) + 8) | 0;
                      nt = i[k >> 2] | 0;
                      ot = nt >>> 24;
                      d = ((((d & 65535) + -12 - (ot << 1)) << ot) + (nt & 16777215) + 12) | 0;
                      if (d >>> 0 >= 28) {
                        tt = (d + -20) | 0;
                        Ze = (_e(tt | 0) | 0) ^ 31;
                        nt = (Ze + -1) | 0;
                        ot = (tt >>> nt) & 1;
                        Ze = (Ze + -2) | 0;
                        n[ee >> 1] = (((((Ze << 1) + 32766) | ot) << 1) + 28) | (tt & 1);
                        i[k >> 2] = (Ze << 24) | (((tt - ((ot | 2) << nt)) | 0) >>> 1);
                        break;
                      }
                    } else {
                      k = (re + (ae << 4) + 8) | 0;
                      d = d & 65535;
                    }
                    n[ee >> 1] = d;
                    i[k >> 2] = 0;
                  }
                } while (0);
                ae = (ae + 1) | 0;
              }
              d = i[at >> 2] | 0;
              k = 1;
              ee = 12;
              he = 19;
            } else {
              nt = 0;
              ot = 0;
              he = 38;
            }
          else {
            k = 0;
            ee = 0;
            he = 19;
          }
          do {
            if ((he | 0) == 19) {
              if ((d | 0) >= 3) {
                if ((d | 0) >= 4) {
                  nt = k;
                  ot = ee;
                  he = 38;
                  break;
                }
                db(M, _, ie, Ae);
                ac(lt | 0, 0, 1028) | 0;
                p[(lt + 1032) >> 3] = se;
                ac(it | 0, 0, 2820) | 0;
                p[(it + 2824) >> 3] = se;
                ac(At | 0, 0, 2084) | 0;
                p[(At + 2088) >> 3] = se;
                jb(r, dt, s, re, te, lt, it, At);
                d = (Ae + ((i[ie >> 2] | 0) >>> 3)) | 0;
                $ = a[d >> 0] | 0;
                k = d;
                o[k >> 0] = $;
                o[(k + 1) >> 0] = $ >> 8;
                o[(k + 2) >> 0] = $ >> 16;
                o[(k + 3) >> 0] = $ >> 24;
                d = (d + 4) | 0;
                o[d >> 0] = 0;
                o[(d + 1) >> 0] = 0;
                o[(d + 2) >> 0] = 0;
                o[(d + 3) >> 0] = 0;
                i[ie >> 2] = (i[ie >> 2] | 0) + 13;
                d = (e + 8) | 0;
                k = st[i[e >> 2] & 1](i[d >> 2] | 0, 11272) | 0;
                if (!k) $e(1);
                kb(lt, 256, k, Qe, Be, ie, Ae);
                kb(it, 704, k, Ee, pe, ie, Ae);
                kb(At, 64, k, Ce, Ie, ie, Ae);
                rt[i[(e + 4) >> 2] & 1](i[d >> 2] | 0, k);
                lb(r, dt, s, re, te, Qe, Be, Ee, pe, Ce, Ie, ie, Ae);
                if (M) {
                  te = ((i[ie >> 2] | 0) + 7) | 0;
                  i[ie >> 2] = te & -8;
                  o[(Ae + (te >>> 3)) >> 0] = 0;
                }
                break;
              }
              db(M, _, ie, Ae);
              $ = (Ae + ((i[ie >> 2] | 0) >>> 3)) | 0;
              ct = a[$ >> 0] | 0;
              q = $;
              o[q >> 0] = ct;
              o[(q + 1) >> 0] = ct >> 8;
              o[(q + 2) >> 0] = ct >> 16;
              o[(q + 3) >> 0] = ct >> 24;
              $ = ($ + 4) | 0;
              o[$ >> 0] = 0;
              o[($ + 1) >> 0] = 0;
              o[($ + 2) >> 0] = 0;
              o[($ + 3) >> 0] = 0;
              i[ie >> 2] = (i[ie >> 2] | 0) + 13;
              if (te >>> 0 < 129) {
                ac(lt | 0, 0, 1024) | 0;
                ee = 0;
                ae = dt;
                le = 0;
                while (1) {
                  if ((le | 0) == (te | 0)) break;
                  d = i[(re + (le << 4)) >> 2] | 0;
                  k = i[(re + (le << 4) + 4) >> 2] | 0;
                  ce = ae;
                  ue = d;
                  while (1) {
                    if (!ue) break;
                    $ = (lt + ((a[(r + (ce & s)) >> 0] | 0) << 2)) | 0;
                    i[$ >> 2] = (i[$ >> 2] | 0) + 1;
                    ce = (ce + 1) | 0;
                    ue = (ue + -1) | 0;
                  }
                  ee = (ee + d) | 0;
                  ae = (ae + d + (k & 16777215)) | 0;
                  le = (le + 1) | 0;
                }
                $a(e, lt, ee, 8, Qe, Be, ie, Ae);
                lt = i[ie >> 2] | 0;
                q = (Ae + (lt >>> 3)) | 0;
                e = a[q >> 0] | 0;
                lt = cc(372273155, 9593412, (lt & 7) | 0) | 0;
                $ = de;
                lt = e | lt;
                e = q;
                o[e >> 0] = lt;
                o[(e + 1) >> 0] = lt >> 8;
                o[(e + 2) >> 0] = lt >> 16;
                o[(e + 3) >> 0] = lt >> 24;
                q = (q + 4) | 0;
                o[q >> 0] = $;
                o[(q + 1) >> 0] = $ >> 8;
                o[(q + 2) >> 0] = $ >> 16;
                o[(q + 3) >> 0] = $ >> 24;
                q = ((i[ie >> 2] | 0) + 56) | 0;
                i[ie >> 2] = q;
                q = (Ae + (q >>> 3)) | 0;
                $ = a[q >> 0] | 0;
                e = q;
                o[e >> 0] = $;
                o[(e + 1) >> 0] = $ >> 8;
                o[(e + 2) >> 0] = $ >> 16;
                o[(e + 3) >> 0] = $ >> 24;
                q = (q + 4) | 0;
                o[q >> 0] = 0;
                o[(q + 1) >> 0] = 0;
                o[(q + 2) >> 0] = 0;
                o[(q + 3) >> 0] = 0;
                q = ((i[ie >> 2] | 0) + 3) | 0;
                i[ie >> 2] = q;
                e = (Ae + (q >>> 3)) | 0;
                $ = a[e >> 0] | 0;
                q = cc(57269251, 0, (q & 7) | 0) | 0;
                lt = de;
                q = $ | q;
                $ = e;
                o[$ >> 0] = q;
                o[($ + 1) >> 0] = q >> 8;
                o[($ + 2) >> 0] = q >> 16;
                o[($ + 3) >> 0] = q >> 24;
                e = (e + 4) | 0;
                o[e >> 0] = lt;
                o[(e + 1) >> 0] = lt >> 8;
                o[(e + 2) >> 0] = lt >> 16;
                o[(e + 3) >> 0] = lt >> 24;
                i[ie >> 2] = (i[ie >> 2] | 0) + 28;
                lb(r, dt, s, re, te, Qe, Be, 404412, 86620, 405116, 88028, ie, Ae);
              } else {
                ac(it | 0, 0, 1028) | 0;
                p[(it + 1032) >> 3] = se;
                ac(At | 0, 0, 2820) | 0;
                p[(At + 2824) >> 3] = se;
                ac(ce | 0, 0, 2084) | 0;
                p[(ce + 2088) >> 3] = se;
                jb(r, dt, s, re, te, it, At, ce);
                $a(e, it, i[(it + 1024) >> 2] | 0, 8, ue, le, ie, Ae);
                $a(e, At, i[(At + 2816) >> 2] | 0, 10, Ee, pe, ie, Ae);
                $a(e, ce, i[(ce + 2080) >> 2] | 0, 6, Ce, Ie, ie, Ae);
                lb(r, dt, s, re, te, ue, le, Ee, pe, Ce, Ie, ie, Ae);
              }
              if (M) {
                te = ((i[ie >> 2] | 0) + 7) | 0;
                i[ie >> 2] = te & -8;
                o[(Ae + (te >>> 3)) >> 0] = 0;
              }
            }
          } while (0);
          if ((he | 0) == 38) {
            Ve = (ct + 8) | 0;
            Ye = (ct + 12) | 0;
            Ie = (ct + 24) | 0;
            He = (ct + 28) | 0;
            i[ct >> 2] = 0;
            i[(ct + 4) >> 2] = 0;
            i[(ct + 8) >> 2] = 0;
            i[(ct + 12) >> 2] = 0;
            i[(ct + 16) >> 2] = 0;
            i[(ct + 20) >> 2] = 0;
            i[(ct + 24) >> 2] = 0;
            je = (ct + 32) | 0;
            qe = (ct + 36) | 0;
            Ce = (ct + 48) | 0;
            i[He >> 2] = 0;
            i[(He + 4) >> 2] = 0;
            i[(He + 8) >> 2] = 0;
            i[(He + 12) >> 2] = 0;
            i[(He + 16) >> 2] = 0;
            i[Ce >> 2] = 0;
            He = (ct + 52) | 0;
            Je = (ct + 56) | 0;
            We = (ct + 60) | 0;
            Ke = (ct + 72) | 0;
            i[He >> 2] = 0;
            i[(He + 4) >> 2] = 0;
            i[(He + 8) >> 2] = 0;
            i[(He + 12) >> 2] = 0;
            i[(He + 16) >> 2] = 0;
            He = (ct + 76) | 0;
            Xe = (ct + 80) | 0;
            ze = (ct + 88) | 0;
            Ee = (ct + 92) | 0;
            Ze = (ct + 96) | 0;
            Be = (ct + 100) | 0;
            tt = (ct + 104) | 0;
            Qe = (ct + 108) | 0;
            k = (d | 0) < 10;
            ee = Ke;
            ae = (ee + 40) | 0;
            do {
              i[ee >> 2] = 0;
              ee = (ee + 4) | 0;
            } while ((ee | 0) < (ae | 0));
            do {
              if (k) {
                i[we >> 2] = 1;
                i[be >> 2] = 0;
                if (!(((d | 0) < 5) | (_ >>> 0 < 64))) {
                  le = (dt + _) | 0;
                  ee = At;
                  ae = (ee + 36) | 0;
                  do {
                    i[ee >> 2] = 0;
                    ee = (ee + 4) | 0;
                  } while ((ee | 0) < (ae | 0));
                  ce = dt;
                  while (1) {
                    ae = (ce + 64) | 0;
                    if (ae >>> 0 > le >>> 0) break;
                    ee = a[(r + (ce & s)) >> 0] | 0;
                    k = ce;
                    while (1) {
                      k = (k + 1) | 0;
                      if (k >>> 0 >= ae >>> 0) break;
                      xe = a[(r + (k & s)) >> 0] | 0;
                      Me = (At + (((((i[(18900 + ((ee >>> 6) << 2)) >> 2] | 0) * 3) | 0) + (i[(18900 + ((xe >>> 6) << 2)) >> 2] | 0)) << 2)) | 0;
                      i[Me >> 2] = (i[Me >> 2] | 0) + 1;
                      ee = xe;
                    }
                    ce = (ce + 4096) | 0;
                  }
                  i[lt >> 2] = 0;
                  i[(lt + 4) >> 2] = 0;
                  i[(lt + 8) >> 2] = 0;
                  i[it >> 2] = 0;
                  i[(it + 4) >> 2] = 0;
                  i[(it + 8) >> 2] = 0;
                  i[(it + 12) >> 2] = 0;
                  i[(it + 16) >> 2] = 0;
                  i[(it + 20) >> 2] = 0;
                  k = 0;
                  pe = 0;
                  while (1) {
                    if ((k | 0) == 9) break;
                    xe = i[(At + (k << 2)) >> 2] | 0;
                    Me = (lt + (((k >>> 0) % 3 | 0) << 2)) | 0;
                    i[Me >> 2] = (i[Me >> 2] | 0) + xe;
                    Me = (it + ((k >>> 0 > 5 ? (k + -6) | 0 : k) << 2)) | 0;
                    i[Me >> 2] = (i[Me >> 2] | 0) + xe;
                    k = (k + 1) | 0;
                    pe = (pe + xe) | 0;
                  }
                  le = (lt + 12) | 0;
                  ce = lt;
                  me = 0.0;
                  k = 0;
                  while (1) {
                    ae = (ce + 4) | 0;
                    ee = i[ce >> 2] | 0;
                    ue = (k + ee) | 0;
                    fe = +(ee >>> 0);
                    if (ee >>> 0 < 256) ge = +h[(19516 + (ee << 2)) >> 2];
                    else ge = +Xb(fe);
                    me = me - fe * ge;
                    if (ae >>> 0 >= le >>> 0) break;
                    k = i[ae >> 2] | 0;
                    ge = +(k >>> 0);
                    if (k >>> 0 < 256) fe = +h[(19516 + (k << 2)) >> 2];
                    else fe = +Xb(ge);
                    ce = (ce + 8) | 0;
                    me = me - ge * fe;
                    k = (ue + k) | 0;
                  }
                  if (!ue) Ue = me;
                  else {
                    fe = +(ue >>> 0);
                    if (ue >>> 0 < 256) ge = +h[(19516 + (ue << 2)) >> 2];
                    else ge = +Xb(fe);
                    Ue = me + fe * ge;
                  }
                  he = (it + 12) | 0;
                  ce = it;
                  me = 0.0;
                  k = 0;
                  while (1) {
                    ae = (ce + 4) | 0;
                    ee = i[ce >> 2] | 0;
                    le = (k + ee) | 0;
                    fe = +(ee >>> 0);
                    if (ee >>> 0 < 256) ge = +h[(19516 + (ee << 2)) >> 2];
                    else ge = +Xb(fe);
                    me = me - fe * ge;
                    if (ae >>> 0 >= he >>> 0) break;
                    k = i[ae >> 2] | 0;
                    ge = +(k >>> 0);
                    if (k >>> 0 < 256) fe = +h[(19516 + (k << 2)) >> 2];
                    else fe = +Xb(ge);
                    ce = (ce + 8) | 0;
                    me = me - ge * fe;
                    k = (le + k) | 0;
                  }
                  if (!le) Ne = me;
                  else {
                    fe = +(le >>> 0);
                    if (le >>> 0 < 256) ge = +h[(19516 + (le << 2)) >> 2];
                    else ge = +Xb(fe);
                    Ne = me + fe * ge;
                  }
                  ue = (it + 24) | 0;
                  ce = he;
                  me = 0.0;
                  k = 0;
                  while (1) {
                    ae = (ce + 4) | 0;
                    ee = i[ce >> 2] | 0;
                    le = (k + ee) | 0;
                    fe = +(ee >>> 0);
                    if (ee >>> 0 < 256) ge = +h[(19516 + (ee << 2)) >> 2];
                    else ge = +Xb(fe);
                    me = me - fe * ge;
                    if (ae >>> 0 >= ue >>> 0) break;
                    k = i[ae >> 2] | 0;
                    ge = +(k >>> 0);
                    if (k >>> 0 < 256) fe = +h[(19516 + (k << 2)) >> 2];
                    else fe = +Xb(ge);
                    ce = (ce + 8) | 0;
                    me = me - ge * fe;
                    k = (le + k) | 0;
                  }
                  if (!le) ye = me;
                  else {
                    fe = +(le >>> 0);
                    if (le >>> 0 < 256) ge = +h[(19516 + (le << 2)) >> 2];
                    else ge = +Xb(fe);
                    ye = me + fe * ge;
                  }
                  ke = 0.0;
                  ue = 0;
                  while (1) {
                    if ((ue | 0) == 3) break;
                    ee = (ue * 3) | 0;
                    ae = (At + ((ee + 3) << 2)) | 0;
                    ee = (At + (ee << 2)) | 0;
                    me = 0.0;
                    k = 0;
                    while (1) {
                      ce = (ee + 4) | 0;
                      ee = i[ee >> 2] | 0;
                      le = (k + ee) | 0;
                      fe = +(ee >>> 0);
                      if (ee >>> 0 < 256) ge = +h[(19516 + (ee << 2)) >> 2];
                      else ge = +Xb(fe);
                      ge = me - fe * ge;
                      if (ce >>> 0 >= ae >>> 0) break;
                      k = i[ce >> 2] | 0;
                      fe = +(k >>> 0);
                      if (k >>> 0 < 256) me = +h[(19516 + (k << 2)) >> 2];
                      else me = +Xb(fe);
                      ee = (ce + 4) | 0;
                      me = ge - fe * me;
                      k = (le + k) | 0;
                    }
                    if (le) {
                      me = +(le >>> 0);
                      if (le >>> 0 < 256) fe = +h[(19516 + (le << 2)) >> 2];
                      else fe = +Xb(me);
                      ge = ge + me * fe;
                    }
                    ke = ke + ge;
                    ue = (ue + 1) | 0;
                  }
                  if (!pe) et(406445, 406053, 339, 406456);
                  ge = 1.0 / +(pe >>> 0);
                  Ue = Ue * ge;
                  fe = (Ne + ye) * ge;
                  ge = (d | 0) < 7 ? Ue * 10.0 : ke * ge;
                  do {
                    if (!((Ue - fe < 0.2) & (Ue - ge < 0.2)))
                      if (fe - ge < 0.02) {
                        i[we >> 2] = 2;
                        i[be >> 2] = 18916;
                        break;
                      } else {
                        i[we >> 2] = 3;
                        i[be >> 2] = 19172;
                        break;
                      }
                    else i[we >> 2] = 1;
                  } while (0);
                  xe = i[be >> 2] | 0;
                  Fe = xe;
                  if (xe) {
                    xe = i[we >> 2] | 0;
                    d = 0;
                    k = 0;
                    while (1) {
                      if ((k | 0) == (te | 0)) break;
                      d = (d + (i[(re + (k << 4)) >> 2] | 0)) | 0;
                      k = (k + 1) | 0;
                    }
                    ue = ((d >>> 9) + 1) | 0;
                    i[lt >> 2] = 256;
                    i[(lt + 4) >> 2] = xe;
                    he = (256 / (xe >>> 0)) | 0;
                    i[(lt + 8) >> 2] = he;
                    i[(lt + 12) >> 2] = 512;
                    p[(lt + 16) >> 3] = 400.0;
                    i[(lt + 24) >> 2] = 0;
                    i[(lt + 28) >> 2] = ct;
                    i[(lt + 36) >> 2] = Ee;
                    Ge = (lt + 40) | 0;
                    i[Ge >> 2] = 512;
                    Le = (lt + 44) | 0;
                    i[Le >> 2] = 0;
                    Me = (lt + 48) | 0;
                    i[Me >> 2] = 0;
                    i[(lt + 64) >> 2] = 0;
                    he = (he + 1) | 0;
                    he = ue >>> 0 < he >>> 0 ? ue : he;
                    le = (ct + 16) | 0;
                    d = i[le >> 2] | 0;
                    if (d >>> 0 < ue >>> 0) {
                      ce = (d | 0) == 0 ? ue : d;
                      while (1) {
                        if (ce >>> 0 >= ue >>> 0) break;
                        ce = ce << 1;
                      }
                      k = (e + 8) | 0;
                      ee = st[i[e >> 2] & 1](i[k >> 2] | 0, ce) | 0;
                      if (!ee) $e(1);
                      ae = i[le >> 2] | 0;
                      d = (ct + 8) | 0;
                      if (ae) dc(ee | 0, i[d >> 2] | 0, ae | 0) | 0;
                      rt[i[(e + 4) >> 2] & 1](i[k >> 2] | 0, i[d >> 2] | 0);
                      i[d >> 2] = ee;
                      i[le >> 2] = ce;
                    }
                    ce = (ct + 20) | 0;
                    d = i[ce >> 2] | 0;
                    if (d >>> 0 < ue >>> 0) {
                      ae = (d | 0) == 0 ? ue : d;
                      while (1) {
                        if (ae >>> 0 >= ue >>> 0) break;
                        ae = ae << 1;
                      }
                      le = (e + 8) | 0;
                      k = st[i[e >> 2] & 1](i[le >> 2] | 0, ae << 2) | 0;
                      if (!k) $e(1);
                      ee = i[ce >> 2] | 0;
                      d = (ct + 12) | 0;
                      if (ee) dc(k | 0, i[d >> 2] | 0, (ee << 2) | 0) | 0;
                      rt[i[(e + 4) >> 2] & 1](i[le >> 2] | 0, i[d >> 2] | 0);
                      i[d >> 2] = k;
                      i[ce >> 2] = ae;
                      Oe = e;
                    } else {
                      Oe = e;
                      le = (e + 8) | 0;
                    }
                    i[(ct + 4) >> 2] = ue;
                    d = st[i[Oe >> 2] & 1](i[le >> 2] | 0, xe << 4) | 0;
                    if (!d) $e(1);
                    Se = (lt + 60) | 0;
                    i[Se >> 2] = d;
                    if (i[ze >> 2] | 0) et(407776, 406802, 255, 407793);
                    k = Pe(he, xe) | 0;
                    i[Ee >> 2] = k;
                    k = st[i[Oe >> 2] & 1](i[le >> 2] | 0, (k * 1040) | 0) | 0;
                    d = k;
                    if (!k) $e(1);
                    i[ze >> 2] = d;
                    ve = (lt + 32) | 0;
                    i[ve >> 2] = d;
                    d = 0;
                    while (1) {
                      if ((d | 0) == (xe | 0)) break;
                      ac((k + ((d * 1040) | 0)) | 0, 0, 1024) | 0;
                      i[(k + ((d * 1040) | 0) + 1024) >> 2] = 0;
                      p[(k + ((d * 1040) | 0) + 1032) >> 3] = se;
                      d = (d + 1) | 0;
                    }
                    i[(lt + 56) >> 2] = 0;
                    i[(lt + 52) >> 2] = 0;
                    Pb(e, it, te, Ie, Ze, Be);
                    Qb(e, At, te, Ce, tt, Qe);
                    we = (it + 40) | 0;
                    Re = (it + 24) | 0;
                    Te = (it + 36) | 0;
                    De = (it + 32) | 0;
                    Ce = (At + 40) | 0;
                    Be = (At + 24) | 0;
                    Qe = (At + 36) | 0;
                    j = (At + 32) | 0;
                    ee = dt;
                    k = q;
                    d = $;
                    be = 0;
                    while (1) {
                      if ((be | 0) == (te | 0)) break;
                      he = i[(re + (be << 4)) >> 2] | 0;
                      pe = i[(re + (be << 4) + 4) >> 2] | 0;
                      ae = i[(re + (be << 4) + 12) >> 2] | 0;
                      Ee = ae & 65535;
                      Ie = ae >>> 16;
                      ue = i[we >> 2] | 0;
                      ce = i[Re >> 2] | 0;
                      ae = (ce + ((ue * 2832) | 0) + ((ae & 65535) << 2)) | 0;
                      i[ae >> 2] = (i[ae >> 2] | 0) + 1;
                      ue = (ce + ((ue * 2832) | 0) + 2816) | 0;
                      i[ue >> 2] = (i[ue >> 2] | 0) + 1;
                      ue = ((i[Te >> 2] | 0) + 1) | 0;
                      i[Te >> 2] = ue;
                      if ((ue | 0) == (i[De >> 2] | 0)) {
                        Sb(it, 0);
                        ue = ee;
                        ce = he;
                      } else {
                        ue = ee;
                        ce = he;
                      }
                      while (1) {
                        if (!ce) break;
                        ae = o[(r + (ue & s)) >> 0] | 0;
                        d = ((i[Me >> 2] | 0) + (i[(Fe + (((o[(406969 + (k & 255)) >> 0] | o[(406969 + ((d & 255) | 256)) >> 0]) & 255) << 2)) >> 2] | 0)) | 0;
                        ht = i[ve >> 2] | 0;
                        pt = (ht + ((d * 1040) | 0) + ((ae & 255) << 2)) | 0;
                        i[pt >> 2] = (i[pt >> 2] | 0) + 1;
                        d = (ht + ((d * 1040) | 0) + 1024) | 0;
                        i[d >> 2] = (i[d >> 2] | 0) + 1;
                        d = ((i[Le >> 2] | 0) + 1) | 0;
                        i[Le >> 2] = d;
                        if ((d | 0) == (i[Ge >> 2] | 0)) Ub(e, lt, 0);
                        d = k;
                        ue = (ue + 1) | 0;
                        k = ae;
                        ce = (ce + -1) | 0;
                      }
                      pt = pe & 16777215;
                      ee = (ee + he + pt) | 0;
                      do {
                        if (pt) {
                          d = o[(r + ((ee + -2) & s)) >> 0] | 0;
                          k = o[(r + ((ee + -1) & s)) >> 0] | 0;
                          if ((Ee & 65535) <= 127) break;
                          pt = i[Ce >> 2] | 0;
                          ht = i[Be >> 2] | 0;
                          Ie = (ht + ((pt * 2096) | 0) + (Ie << 2)) | 0;
                          i[Ie >> 2] = (i[Ie >> 2] | 0) + 1;
                          pt = (ht + ((pt * 2096) | 0) + 2080) | 0;
                          i[pt >> 2] = (i[pt >> 2] | 0) + 1;
                          pt = ((i[Qe >> 2] | 0) + 1) | 0;
                          i[Qe >> 2] = pt;
                          if ((pt | 0) != (i[j >> 2] | 0)) break;
                          Tb(At, 0);
                        }
                      } while (0);
                      be = (be + 1) | 0;
                    }
                    Ub(e, lt, 1);
                    rt[i[(e + 4) >> 2] & 1](i[le >> 2] | 0, i[Se >> 2] | 0);
                    i[Se >> 2] = 0;
                    Sb(it, 1);
                    Tb(At, 1);
                    if (i[Ke >> 2] | 0) et(406853, 406802, 473, 407737);
                    d = i[ct >> 2] | 0;
                    i[He >> 2] = d << 6;
                    d = st[i[Oe >> 2] & 1](i[le >> 2] | 0, d << 8) | 0;
                    if (!d) $e(1);
                    i[Ke >> 2] = d;
                    ee = 0;
                    while (1) {
                      if (ee >>> 0 >= (i[ct >> 2] | 0) >>> 0) break;
                      d = Pe(ee, xe) | 0;
                      k = ee << 6;
                      ae = 0;
                      while (1) {
                        if ((ae | 0) == 64) break;
                        i[((i[Ke >> 2] | 0) + ((k + ae) << 2)) >> 2] = d + (i[(Fe + (ae << 2)) >> 2] | 0);
                        ae = (ae + 1) | 0;
                      }
                      ee = (ee + 1) | 0;
                    }
                    d = 2;
                    break;
                  }
                }
                d = 0;
                k = 0;
                while (1) {
                  if ((k | 0) == (te | 0)) break;
                  d = (d + (i[(re + (k << 4)) >> 2] | 0)) | 0;
                  k = (k + 1) | 0;
                }
                he = ((d >>> 9) + 1) | 0;
                ue = he >>> 0 < 257 ? he : 257;
                i[lt >> 2] = 256;
                i[(lt + 4) >> 2] = 512;
                p[(lt + 8) >> 3] = 400.0;
                i[(lt + 16) >> 2] = 0;
                pe = (lt + 20) | 0;
                i[pe >> 2] = ct;
                i[(lt + 28) >> 2] = Ee;
                Re = (lt + 32) | 0;
                i[Re >> 2] = 512;
                Te = (lt + 36) | 0;
                i[Te >> 2] = 0;
                De = (lt + 40) | 0;
                i[De >> 2] = 0;
                i[(lt + 72) >> 2] = 0;
                le = (ct + 16) | 0;
                d = i[le >> 2] | 0;
                if (d >>> 0 < he >>> 0) {
                  ce = (d | 0) == 0 ? he : d;
                  while (1) {
                    if (ce >>> 0 >= he >>> 0) break;
                    ce = ce << 1;
                  }
                  k = (e + 8) | 0;
                  ee = st[i[e >> 2] & 1](i[k >> 2] | 0, ce) | 0;
                  if (!ee) $e(1);
                  ae = i[le >> 2] | 0;
                  d = (ct + 8) | 0;
                  if (ae) dc(ee | 0, i[d >> 2] | 0, ae | 0) | 0;
                  rt[i[(e + 4) >> 2] & 1](i[k >> 2] | 0, i[d >> 2] | 0);
                  i[d >> 2] = ee;
                  i[le >> 2] = ce;
                }
                le = (ct + 20) | 0;
                d = i[le >> 2] | 0;
                if (d >>> 0 < he >>> 0) {
                  ce = (d | 0) == 0 ? he : d;
                  while (1) {
                    if (ce >>> 0 >= he >>> 0) break;
                    ce = ce << 1;
                  }
                  k = (e + 8) | 0;
                  ee = st[i[e >> 2] & 1](i[k >> 2] | 0, ce << 2) | 0;
                  if (!ee) $e(1);
                  ae = i[le >> 2] | 0;
                  d = (ct + 12) | 0;
                  if (ae) dc(ee | 0, i[d >> 2] | 0, (ae << 2) | 0) | 0;
                  rt[i[(e + 4) >> 2] & 1](i[k >> 2] | 0, i[d >> 2] | 0);
                  i[d >> 2] = ee;
                  i[le >> 2] = ce;
                }
                i[((i[pe >> 2] | 0) + 4) >> 2] = he;
                if (i[ze >> 2] | 0) et(407776, 407818, 70, 407905);
                i[Ee >> 2] = ue;
                d = st[i[e >> 2] & 1](i[(e + 8) >> 2] | 0, (ue * 1040) | 0) | 0;
                k = d;
                if (!d) $e(1);
                i[ze >> 2] = k;
                we = (lt + 24) | 0;
                i[we >> 2] = k;
                ac(d | 0, 0, 1024) | 0;
                i[(d + 1024) >> 2] = 0;
                p[(d + 1032) >> 3] = se;
                i[(lt + 48) >> 2] = 0;
                i[(lt + 44) >> 2] = 0;
                Pb(e, it, te, Ie, Ze, Be);
                Qb(e, At, te, Ce, tt, Qe);
                le = (it + 40) | 0;
                ue = (it + 24) | 0;
                he = (it + 36) | 0;
                pe = (it + 32) | 0;
                Ee = (At + 40) | 0;
                Ie = (At + 24) | 0;
                Ce = (At + 36) | 0;
                Be = (At + 32) | 0;
                d = dt;
                be = 0;
                while (1) {
                  if ((be | 0) == (te | 0)) break;
                  ee = i[(re + (be << 4)) >> 2] | 0;
                  ae = i[(re + (be << 4) + 4) >> 2] | 0;
                  He = i[(re + (be << 4) + 12) >> 2] | 0;
                  Qe = He & 65535;
                  j = He >>> 16;
                  pt = i[le >> 2] | 0;
                  ht = i[ue >> 2] | 0;
                  He = (ht + ((pt * 2832) | 0) + ((He & 65535) << 2)) | 0;
                  i[He >> 2] = (i[He >> 2] | 0) + 1;
                  pt = (ht + ((pt * 2832) | 0) + 2816) | 0;
                  i[pt >> 2] = (i[pt >> 2] | 0) + 1;
                  pt = ((i[he >> 2] | 0) + 1) | 0;
                  i[he >> 2] = pt;
                  if ((pt | 0) == (i[pe >> 2] | 0)) {
                    Sb(it, 0);
                    k = d;
                    ce = ee;
                  } else {
                    k = d;
                    ce = ee;
                  }
                  while (1) {
                    if (!ce) break;
                    pt = i[De >> 2] | 0;
                    ht = i[we >> 2] | 0;
                    He = (ht + ((pt * 1040) | 0) + ((a[(r + (k & s)) >> 0] | 0) << 2)) | 0;
                    i[He >> 2] = (i[He >> 2] | 0) + 1;
                    pt = (ht + ((pt * 1040) | 0) + 1024) | 0;
                    i[pt >> 2] = (i[pt >> 2] | 0) + 1;
                    pt = ((i[Te >> 2] | 0) + 1) | 0;
                    i[Te >> 2] = pt;
                    if ((pt | 0) == (i[Re >> 2] | 0)) Rb(lt, 0);
                    k = (k + 1) | 0;
                    ce = (ce + -1) | 0;
                  }
                  pt = ae & 16777215;
                  d = (d + ee + pt) | 0;
                  if (
                    ((pt | 0) != 0) & ((Qe & 65535) > 127)
                      ? ((pt = i[Ee >> 2] | 0),
                        (ht = i[Ie >> 2] | 0),
                        (He = (ht + ((pt * 2096) | 0) + (j << 2)) | 0),
                        (i[He >> 2] = (i[He >> 2] | 0) + 1),
                        (pt = (ht + ((pt * 2096) | 0) + 2080) | 0),
                        (i[pt >> 2] = (i[pt >> 2] | 0) + 1),
                        (pt = ((i[Ce >> 2] | 0) + 1) | 0),
                        (i[Ce >> 2] = pt),
                        (pt | 0) == (i[Be >> 2] | 0))
                      : 0
                  )
                    Tb(At, 0);
                  be = (be + 1) | 0;
                }
                Rb(lt, 1);
                Sb(it, 1);
                Tb(At, 1);
                d = 2;
              } else {
                d = Wb(r, dt, s, _) | 0;
                d = d ? 2 : 3;
                Nb(e, r, dt, s, j, q, $, re, te, d, ct);
              }
            } while (0);
            if ((i[at >> 2] | 0) > 3) Ob(ot, nt, ct);
            ab(e, r, dt, _, s, q, $, M, ot, nt, d, re, te, ct, ie, Ae);
            ht = (e + 4) | 0;
            pt = (e + 8) | 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[(ct + 8) >> 2] | 0);
            i[Ve >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[Ye >> 2] | 0);
            i[Ye >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[(ct + 32) >> 2] | 0);
            i[je >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[qe >> 2] | 0);
            i[qe >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[(ct + 56) >> 2] | 0);
            i[Je >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[We >> 2] | 0);
            i[We >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[Ke >> 2] | 0);
            i[Ke >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[Xe >> 2] | 0);
            i[Xe >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[ze >> 2] | 0);
            i[ze >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[Ze >> 2] | 0);
            i[Ze >> 2] = 0;
            rt[i[ht >> 2] & 1](i[pt >> 2] | 0, i[tt >> 2] | 0);
            i[tt >> 2] = 0;
          }
          if (((_ + 4) | 0) >>> 0 >= ((i[ie >> 2] | 0) >>> 3) >>> 0) {
            w = ft;
            return;
          }
          i[ne >> 2] = i[oe >> 2];
          i[(ne + 4) >> 2] = i[(oe + 4) >> 2];
          i[(ne + 8) >> 2] = i[(oe + 8) >> 2];
          i[(ne + 12) >> 2] = i[(oe + 12) >> 2];
          o[Ae >> 0] = ut;
          i[ie >> 2] = gt & 255;
          bb(M, r, dt, s, _, ie, Ae);
          w = ft;
          return;
        }
        function Eb(e) {
          e = e | 0;
          var r = 0,
            s = 0,
            n = 0,
            l = 0,
            d = 0;
          s = (e + 192) | 0;
          n = a[s >> 0] | 0;
          d = (e + 193) | 0;
          l = a[d >> 0] | 0;
          o[s >> 0] = 0;
          o[d >> 0] = 0;
          d = 6 << l;
          s = (e + 5216) | 0;
          r = i[s >> 2] | 0;
          if (!r) {
            r = (e + 5228) | 0;
            i[s >> 2] = r;
          } else r = (r + (i[(e + 5220) >> 2] | 0)) | 0;
          o[r >> 0] = n | d;
          if (((l + 6) | 0) >>> 0 > 8) o[(r + 1) >> 0] = d >>> 8;
          e = (e + 5220) | 0;
          i[e >> 2] = (i[e >> 2] | 0) + (((l + 13) | 0) >>> 3);
          return;
        }
        function Fb(e, r, s, o, n, l, d) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          l = l | 0;
          d = d | 0;
          var p = 0.0,
            k = 0.0,
            _ = 0.0,
            M = 0.0,
            j = 0.0,
            q = 0,
            $ = 0.0,
            ee = 0;
          ee = w;
          w = (w + 1024) | 0;
          q = ee;
          if ((((n >>> 8) + 2) | 0) >>> 0 > d >>> 0 ? ((p = +(n >>> 0)), +(l >>> 0) > p * 0.99) : 0) {
            ac(q | 0, 0, 1024) | 0;
            p = p * 7.92;
            l = ((((n + 12) | 0) >>> 0) / 13) | 0;
            o = s;
            d = 0;
            while (1) {
              if (d >>> 0 >= l >>> 0) break;
              s = (q + ((a[(e + (o & r)) >> 0] | 0) << 2)) | 0;
              i[s >> 2] = (i[s >> 2] | 0) + 1;
              o = (o + 13) | 0;
              d = (d + 1) | 0;
            }
            $ = p / 13.0;
            n = (q + 1024) | 0;
            o = q;
            p = 0.0;
            s = 0;
            while (1) {
              if (o >>> 0 >= n >>> 0) break;
              d = i[o >> 2] | 0;
              k = +(d >>> 0);
              if (d >>> 0 < 256) j = +h[(19516 + (d << 2)) >> 2];
              else j = +Xb(k);
              l = i[(o + 4) >> 2] | 0;
              _ = +(l >>> 0);
              if (l >>> 0 < 256) M = +h[(19516 + (l << 2)) >> 2];
              else M = +Xb(_);
              o = (o + 8) | 0;
              p = p - k * j - _ * M;
              s = (s + d + l) | 0;
            }
            _ = +(s >>> 0);
            if (!s) M = _;
            else {
              if (s >>> 0 < 256) k = +h[(19516 + (s << 2)) >> 2];
              else k = +Xb(_);
              M = _;
              p = p + _ * k;
            }
            if ((p < M ? M : p) > $) {
              q = 0;
              w = ee;
              return q | 0;
            }
          }
          q = 1;
          w = ee;
          return q | 0;
        }
        function Gb(e, r, s, a) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          a = a | 0;
          var l = 0,
            d = 0,
            h = 0,
            p = 0,
            k = 0;
          k = w;
          w = (w + 64) | 0;
          p = k;
          if ((a | 0) >= 16) et(406658, 406674, 26, 406709);
          i[p >> 2] = -1;
          l = 0;
          e: while (1) {
            d = n[(r + (e << 3) + 4) >> 1] | 0;
            if ((d << 16) >> 16 > -1) {
              h = (l + 1) | 0;
              if ((l | 0) >= (a | 0)) {
                l = 0;
                e = 12;
                break;
              }
              i[(p + (h << 2)) >> 2] = n[(r + (e << 3) + 6) >> 1];
              l = h;
              e = (d << 16) >> 16;
              continue;
            }
            o[(s + (n[(r + (e << 3) + 6) >> 1] | 0)) >> 0] = l;
            while (1) {
              if ((l | 0) <= -1) {
                l = 1;
                e = 12;
                break e;
              }
              if ((i[(p + (l << 2)) >> 2] | 0) != -1) break;
              l = (l + -1) | 0;
            }
            h = (p + (l << 2)) | 0;
            e = i[h >> 2] | 0;
            i[h >> 2] = -1;
          }
          if ((e | 0) == 12) {
            w = k;
            return l | 0;
          }
          return 0;
        }
        function Hb(e, r, s, a, l) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          a = a | 0;
          l = l | 0;
          var d = 0,
            h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0;
          ne = w;
          w = (w + 16) | 0;
          re = (ne + 8) | 0;
          se = ne;
          te = 1;
          while (1) {
            d = r;
            ee = 0;
            e: while (1) {
              do {
                if (!d) break e;
                d = (d + -1) | 0;
                h = i[(e + (d << 2)) >> 2] | 0;
              } while ((h | 0) == 0);
              i[(a + (ee << 3)) >> 2] = h >>> 0 > te >>> 0 ? h : te;
              n[(a + (ee << 3) + 4) >> 1] = -1;
              n[(a + (ee << 3) + 6) >> 1] = d;
              ee = (ee + 1) | 0;
            }
            if ((ee | 0) == 1) break;
            e: do {
              if (ee >>> 0 < 13) {
                M = 1;
                while (1) {
                  if (M >>> 0 >= ee >>> 0) break e;
                  _ = (a + (M << 3)) | 0;
                  k = i[_ >> 2] | 0;
                  _ = i[(_ + 4) >> 2] | 0;
                  p = re;
                  i[p >> 2] = k;
                  i[(p + 4) >> 2] = _;
                  p = M;
                  while (1) {
                    d = p;
                    p = (p + -1) | 0;
                    h = (a + (p << 3)) | 0;
                    if (!(Kb(re, h) | 0)) break;
                    j = h;
                    q = i[(j + 4) >> 2] | 0;
                    $ = (a + (d << 3)) | 0;
                    i[$ >> 2] = i[j >> 2];
                    i[($ + 4) >> 2] = q;
                    if (!p) {
                      d = 0;
                      break;
                    }
                  }
                  $ = (a + (d << 3)) | 0;
                  i[$ >> 2] = k;
                  i[($ + 4) >> 2] = _;
                  M = (M + 1) | 0;
                }
              } else {
                j = ee >>> 0 < 57 ? 2 : 0;
                while (1) {
                  if ((j | 0) == 6) break e;
                  d = i[(19428 + (j << 2)) >> 2] | 0;
                  q = d;
                  while (1) {
                    if (q >>> 0 >= ee >>> 0) break;
                    p = (a + (q << 3)) | 0;
                    h = i[p >> 2] | 0;
                    p = i[(p + 4) >> 2] | 0;
                    M = se;
                    i[M >> 2] = h;
                    i[(M + 4) >> 2] = p;
                    M = q;
                    while (1) {
                      if (M >>> 0 < d >>> 0) break;
                      k = (M - d) | 0;
                      _ = (a + (k << 3)) | 0;
                      if (!(Kb(se, _) | 0)) break;
                      ie = _;
                      _ = i[(ie + 4) >> 2] | 0;
                      $ = (a + (M << 3)) | 0;
                      i[$ >> 2] = i[ie >> 2];
                      i[($ + 4) >> 2] = _;
                      M = k;
                    }
                    ie = (a + (M << 3)) | 0;
                    i[ie >> 2] = h;
                    i[(ie + 4) >> 2] = p;
                    q = (q + 1) | 0;
                  }
                  j = (j + 1) | 0;
                }
              }
            } while (0);
            _ = (a + (ee << 3)) | 0;
            i[_ >> 2] = -1;
            i[(_ + 4) >> 2] = -1;
            _ = (ee + 1) | 0;
            $ = (a + (_ << 3)) | 0;
            i[$ >> 2] = -1;
            i[($ + 4) >> 2] = -1;
            $ = ee << 1;
            k = 0;
            d = ee;
            while (1) {
              d = (d + -1) | 0;
              if (!d) break;
              p = i[(a + (k << 3)) >> 2] | 0;
              h = i[(a + (_ << 3)) >> 2] | 0;
              if (p >>> 0 > h >>> 0) {
                q = (_ + 1) | 0;
                h = i[(a + (q << 3)) >> 2] | 0;
                j = k;
                M = _;
              } else {
                j = (k + 1) | 0;
                p = i[(a + (j << 3)) >> 2] | 0;
                q = _;
                M = k;
              }
              if (p >>> 0 > h >>> 0) {
                k = j;
                _ = (q + 1) | 0;
                p = q;
              } else {
                h = p;
                k = (j + 1) | 0;
                _ = q;
                p = j;
              }
              ie = ($ - d) | 0;
              i[(a + (ie << 3)) >> 2] = (i[(a + (M << 3)) >> 2] | 0) + h;
              n[(a + (ie << 3) + 4) >> 1] = M;
              n[(a + (ie << 3) + 6) >> 1] = p;
              ie = (a + ((ie + 1) << 3)) | 0;
              i[ie >> 2] = -1;
              i[(ie + 4) >> 2] = -1;
            }
            if (Gb(($ + -1) | 0, a, l, s) | 0) {
              oe = 36;
              break;
            }
            te = te << 1;
          }
          if ((oe | 0) == 36) {
            w = ne;
            return;
          }
          o[(l + (n[(a + 6) >> 1] | 0)) >> 0] = 1;
          w = ne;
          return;
        }
        function Ib(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var n = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0,
            w = 0;
          n = 0;
          a = 0;
          while (1) {
            if ((a | 0) == (e | 0)) break;
            n = (i[(r + (a << 2)) >> 2] | 0) == 0 ? n : (n + 1) | 0;
            a = (a + 1) | 0;
          }
          if (n >>> 0 < 16) return;
          else p = e;
          while (1) {
            if (!p) {
              w = 55;
              break;
            }
            e = (p + -1) | 0;
            if (!(i[(r + (e << 2)) >> 2] | 0)) p = e;
            else break;
          }
          if ((w | 0) == 55) return;
          a = 0;
          e = 1073741824;
          l = 0;
          while (1) {
            if ((l | 0) == (p | 0)) break;
            n = i[(r + (l << 2)) >> 2] | 0;
            if (n) {
              a = (a + 1) | 0;
              e = e >>> 0 > n >>> 0 ? n : e;
            }
            l = (l + 1) | 0;
          }
          if (a >>> 0 < 5) return;
          e: do {
            if ((e >>> 0 < 4) & (((p - a) | 0) >>> 0 < 6)) {
              e = (p + -1) | 0;
              n = 1;
              while (1) {
                if (n >>> 0 >= e >>> 0) break e;
                if (
                  ((i[(r + ((n + -1) << 2)) >> 2] | 0) != 0 ? ((d = (r + (n << 2)) | 0), (i[d >> 2] | 0) == 0) : 0)
                    ? (i[(r + ((n + 1) << 2)) >> 2] | 0) != 0
                    : 0
                )
                  i[d >> 2] = 1;
                n = (n + 1) | 0;
              }
            }
          } while (0);
          if (a >>> 0 < 28) return;
          ac(s | 0, 0, p | 0) | 0;
          e = 0;
          d = 0;
          n = i[r >> 2] | 0;
          while (1) {
            if (d >>> 0 > p >>> 0) break;
            a = (d | 0) == (p | 0);
            if (!a ? (i[(r + (d << 2)) >> 2] | 0) == (n | 0) : 0) e = (e + 1) | 0;
            else {
              if (!n) {
                if (e >>> 0 > 4) {
                  l = 0;
                  w = 29;
                }
              } else if (e >>> 0 > 6) {
                l = 0;
                w = 29;
              }
              e: do {
                if ((w | 0) == 29)
                  while (1) {
                    w = 0;
                    if ((l | 0) == (e | 0)) break e;
                    o[(s + (d - l + -1)) >> 0] = 1;
                    l = (l + 1) | 0;
                    w = 29;
                  }
              } while (0);
              if (a) e = 1;
              else {
                e = 1;
                n = i[(r + (d << 2)) >> 2] | 0;
              }
            }
            d = (d + 1) | 0;
          }
          d = (p + -2) | 0;
          n = (((((((i[r >> 2] | 0) + (i[(r + 4) >> 2] | 0) + (i[(r + 8) >> 2] | 0)) << 8) >>> 0) / 3) | 0) + 420) | 0;
          h = 0;
          a = 0;
          e = 0;
          while (1) {
            if (h >>> 0 > p >>> 0) break;
            l = (h | 0) == (p | 0);
            do {
              if (!l ? (o[(s + h) >> 0] | 0) == 0 : 0) {
                if ((h | 0) != 0 ? (o[(s + (h + -1)) >> 0] | 0) != 0 : 0) {
                  w = 42;
                  break;
                }
                if ((((i[(r + (h << 2)) >> 2] << 8) - n + 1240) | 0) >>> 0 > 2479) w = 42;
              } else w = 42;
            } while (0);
            do {
              if ((w | 0) == 42) {
                w = 0;
                if (!(a >>> 0 <= 3 ? !((a >>> 0 > 2) & ((e | 0) == 0)) : 0)) w = 44;
                e: do {
                  if ((w | 0) == 44) {
                    w = 0;
                    n = ((((e + (a >>> 1)) | 0) >>> 0) / (a >>> 0)) | 0;
                    e = (e | 0) == 0 ? 0 : (n | 0) == 0 ? 1 : n;
                    n = 0;
                    while (1) {
                      if ((n | 0) == (a | 0)) break e;
                      i[(r + ((h - n + -1) << 2)) >> 2] = e;
                      n = (n + 1) | 0;
                    }
                  }
                } while (0);
                if (h >>> 0 < d >>> 0) {
                  n =
                    (((((((i[(r + (h << 2)) >> 2] | 0) + (i[(r + ((h + 1) << 2)) >> 2] | 0) + (i[(r + ((h + 2) << 2)) >> 2] | 0)) << 8) >>> 0) / 3) | 0) +
                      420) |
                    0;
                  a = 0;
                  e = 0;
                  break;
                }
                if (h >>> 0 < p >>> 0) {
                  n = i[(r + (h << 2)) >> 2] << 8;
                  a = 0;
                  e = 0;
                } else {
                  n = 0;
                  a = 0;
                  e = 0;
                }
              }
            } while (0);
            a = (a + 1) | 0;
            if (!l) {
              e = (e + (i[(r + (h << 2)) >> 2] | 0)) | 0;
              if (a >>> 0 > 3) {
                n = (((((e << 8) + (a >>> 1)) | 0) >>> 0) / (a >>> 0)) | 0;
                n = (a | 0) == 4 ? (n + 120) | 0 : n;
              }
            }
            h = (h + 1) | 0;
          }
          return;
        }
        function Jb(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var d = 0,
            h = 0,
            p = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0;
          j = w;
          w = (w + 64) | 0;
          p = (j + 32) | 0;
          M = j;
          d = p;
          h = (d + 32) | 0;
          do {
            n[d >> 1] = 0;
            d = (d + 2) | 0;
          } while ((d | 0) < (h | 0));
          d = 0;
          while (1) {
            if ((d | 0) == (r | 0)) break;
            _ = (p + ((a[(e + d) >> 0] | 0) << 1)) | 0;
            n[_ >> 1] = (((n[_ >> 1] | 0) + 1) << 16) >> 16;
            d = (d + 1) | 0;
          }
          n[p >> 1] = 0;
          n[M >> 1] = 0;
          d = 0;
          h = 1;
          while (1) {
            if ((h | 0) == 16) {
              _ = 0;
              break;
            }
            _ = (d + (l[(p + ((h + -1) << 1)) >> 1] | 0)) << 1;
            n[(M + (h << 1)) >> 1] = _;
            d = _;
            h = (h + 1) | 0;
          }
          while (1) {
            if ((_ | 0) == (r | 0)) break;
            d = o[(e + _) >> 0] | 0;
            if ((d << 24) >> 24) {
              h = d & 255;
              d = (M + (h << 1)) | 0;
              p = n[d >> 1] | 0;
              n[d >> 1] = ((p + 1) << 16) >> 16;
              d = p;
              p = i[(19452 + ((p & 15) << 2)) >> 2] | 0;
              k = 4;
              while (1) {
                if (k >>> 0 >= h >>> 0) break;
                q = (d & 65535) >>> 4;
                d = q;
                p = (p << 4) | i[(19452 + ((q & 15) << 2)) >> 2];
                k = (k + 4) | 0;
              }
              n[(s + (_ << 1)) >> 1] = p >>> ((0 - h) & 3);
            }
            _ = (_ + 1) | 0;
          }
          w = j;
          return;
        }
        function Kb(e, r) {
          e = e | 0;
          r = r | 0;
          var s = 0,
            o = 0;
          s = i[e >> 2] | 0;
          o = i[r >> 2] | 0;
          if ((s | 0) == (o | 0)) {
            r = (n[(e + 6) >> 1] | 0) > (n[(r + 6) >> 1] | 0);
            return r | 0;
          } else {
            r = s >>> 0 < o >>> 0;
            return r | 0;
          }
          return 0;
        }
        function Lb(e, r) {
          e = e | 0;
          r = r | 0;
          return Yb(r) | 0;
        }
        function Mb(e, r) {
          e = e | 0;
          r = r | 0;
          Zb(r);
          return;
        }
        function Nb(e, r, s, d, h, k, _, M, j, q, $) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          h = h | 0;
          k = k | 0;
          _ = _ | 0;
          M = M | 0;
          j = j | 0;
          q = q | 0;
          $ = $ | 0;
          var ee = 0,
            te = 0,
            re = 0,
            oe = 0.0,
            ne = 0.0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0,
            Qe = 0,
            be = 0,
            we = 0,
            ye = 0,
            ke = 0,
            Re = 0,
            Te = 0,
            De = 0,
            Fe = 0,
            ve = 0,
            Se = 0,
            Ne = 0;
          Ne = w;
          w = (w + 2096) | 0;
          Fe = Ne;
          Za(e, M, j, r, s, d, h, $, ($ + 24) | 0, ($ + 48) | 0);
          Se = (e + 8) | 0;
          ye = st[i[e >> 2] & 1](i[Se >> 2] | 0, i[$ >> 2] << 2) | 0;
          if (!ye) $e(1);
          h = 0;
          while (1) {
            ee = i[$ >> 2] | 0;
            if (h >>> 0 >= ee >>> 0) break;
            i[(ye + (h << 2)) >> 2] = q;
            h = (h + 1) | 0;
          }
          Te = ($ + 48) | 0;
          te = i[Te >> 2] | 0;
          Re = st[i[e >> 2] & 1](i[Se >> 2] | 0, (ee * 66560) | 0) | 0;
          if (!Re) $e(1);
          h = ee << 6;
          q = 0;
          while (1) {
            if ((q | 0) == (h | 0)) break;
            ac((Re + ((q * 1040) | 0)) | 0, 0, 1024) | 0;
            i[(Re + ((q * 1040) | 0) + 1024) >> 2] = 0;
            p[(Re + ((q * 1040) | 0) + 1032) >> 3] = se;
            q = (q + 1) | 0;
          }
          re = ($ + 96) | 0;
          if (i[re >> 2] | 0) et(406774, 406802, 70, 406832);
          ee = i[($ + 24) >> 2] | 0;
          h = ($ + 100) | 0;
          i[h >> 2] = ee;
          ee = st[i[e >> 2] & 1](i[Se >> 2] | 0, (ee * 2832) | 0) | 0;
          if (!ee) $e(1);
          i[re >> 2] = ee;
          h = i[h >> 2] | 0;
          q = 0;
          while (1) {
            if ((q | 0) == (h | 0)) break;
            ac((ee + ((q * 2832) | 0)) | 0, 0, 2816) | 0;
            i[(ee + ((q * 2832) | 0) + 2816) >> 2] = 0;
            p[(ee + ((q * 2832) | 0) + 2824) >> 3] = se;
            q = (q + 1) | 0;
          }
          ve = st[i[e >> 2] & 1](i[Se >> 2] | 0, (te * 8384) | 0) | 0;
          if (!ve) $e(1);
          h = te << 2;
          q = 0;
          while (1) {
            if ((q | 0) == (h | 0)) break;
            ac((ve + ((q * 2096) | 0)) | 0, 0, 2080) | 0;
            i[(ve + ((q * 2096) | 0) + 2080) >> 2] = 0;
            p[(ve + ((q * 2096) | 0) + 2088) >> 3] = se;
            q = (q + 1) | 0;
          }
          h = i[($ + 12) >> 2] | 0;
          if (!h) te = 0;
          else te = i[h >> 2] | 0;
          h = i[($ + 36) >> 2] | 0;
          if (!h) q = 0;
          else q = i[h >> 2] | 0;
          h = i[($ + 60) >> 2] | 0;
          if (!h) h = 0;
          else h = i[h >> 2] | 0;
          be = ($ + 32) | 0;
          we = ($ + 36) | 0;
          Ie = i[re >> 2] | 0;
          Ce = ($ + 8) | 0;
          me = ($ + 12) | 0;
          Be = ($ + 56) | 0;
          Qe = ($ + 60) | 0;
          re = _;
          Ae = 0;
          ee = 0;
          ae = 0;
          ie = 0;
          le = 0;
          ce = 0;
          Ee = 0;
          while (1) {
            if ((Ee | 0) == (j | 0)) break;
            if (!q) {
              ie = (ie + 1) | 0;
              pe = a[((i[be >> 2] | 0) + ie) >> 0] | 0;
              q = i[((i[we >> 2] | 0) + (ie << 2)) >> 2] | 0;
            } else pe = ae;
            fe = (M + (Ee << 4) + 12) | 0;
            de = (Ie + ((pe * 2832) | 0) + ((l[fe >> 1] | 0) << 2)) | 0;
            i[de >> 2] = (i[de >> 2] | 0) + 1;
            de = (Ie + ((pe * 2832) | 0) + 2816) | 0;
            i[de >> 2] = (i[de >> 2] | 0) + 1;
            de = i[(M + (Ee << 4)) >> 2] | 0;
            ge = re;
            he = le;
            _ = te;
            le = s;
            ue = de;
            while (1) {
              if (!ue) break;
              if (!_) {
                ce = (ce + 1) | 0;
                ae = a[((i[Ce >> 2] | 0) + ce) >> 0] | 0;
                te = i[((i[me >> 2] | 0) + (ce << 2)) >> 2] | 0;
              } else {
                ae = he;
                te = _;
              }
              _ = (te + -1) | 0;
              re = ae << 6;
              switch (i[(ye + (ae << 2)) >> 2] | 0) {
                case 0: {
                  te = k & 63;
                  break;
                }
                case 1: {
                  te = (k & 255) >>> 2;
                  break;
                }
                case 2: {
                  te = o[(406969 + (k & 255)) >> 0] | o[(406969 + ((ge & 255) | 256)) >> 0];
                  break;
                }
                case 3: {
                  te = (((a[(407481 + (k & 255)) >> 0] | 0) << 3) + (a[(407481 + (ge & 255)) >> 0] | 0)) & 255;
                  break;
                }
                default:
                  te = 0;
              }
              ge = (re + (te & 255)) | 0;
              he = (r + (le & d)) | 0;
              re = (Re + ((ge * 1040) | 0) + ((a[he >> 0] | 0) << 2)) | 0;
              i[re >> 2] = (i[re >> 2] | 0) + 1;
              ge = (Re + ((ge * 1040) | 0) + 1024) | 0;
              i[ge >> 2] = (i[ge >> 2] | 0) + 1;
              ge = k;
              k = o[he >> 0] | 0;
              he = ae;
              le = (le + 1) | 0;
              ue = (ue + -1) | 0;
            }
            q = (q + -1) | 0;
            ue = i[(M + (Ee << 4) + 4) >> 2] & 16777215;
            s = (s + de + ue) | 0;
            if (ue) {
              le = o[(r + ((s + -2) & d)) >> 0] | 0;
              k = o[(r + ((s + -1) & d)) >> 0] | 0;
              re = n[fe >> 1] | 0;
              if ((re & 65535) > 127) {
                if (!h) {
                  ae = (ee + 1) | 0;
                  Ae = a[((i[Be >> 2] | 0) + ae) >> 0] | 0;
                  h = i[((i[Qe >> 2] | 0) + (ae << 2)) >> 2] | 0;
                } else ae = ee;
                h = (h + -1) | 0;
                te = Ae << 2;
                fe = re & 65535;
                ee = fe & 7;
                switch ((fe >>> 6) | 0) {
                  case 7:
                  case 4:
                  case 2:
                  case 0: {
                    ee = ee >>> 0 < 3 ? ee : 3;
                    break;
                  }
                  default:
                    ee = 3;
                }
                re = (te + ee) | 0;
                te = (ve + ((re * 2096) | 0) + ((l[(M + (Ee << 4) + 14) >> 1] | 0) << 2)) | 0;
                i[te >> 2] = (i[te >> 2] | 0) + 1;
                re = (ve + ((re * 2096) | 0) + 2080) | 0;
                i[re >> 2] = (i[re >> 2] | 0) + 1;
                re = le;
                te = Ae;
                ee = ae;
              } else {
                re = le;
                te = Ae;
              }
            } else {
              re = ge;
              te = Ae;
            }
            Ae = te;
            ae = pe;
            le = he;
            te = _;
            Ee = (Ee + 1) | 0;
          }
          he = (e + 4) | 0;
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, ye);
          ee = ($ + 72) | 0;
          if (i[ee >> 2] | 0) et(406853, 406802, 86, 406832);
          h = i[$ >> 2] | 0;
          q = ($ + 76) | 0;
          i[q >> 2] = h << 6;
          h = st[i[e >> 2] & 1](i[Se >> 2] | 0, h << 8) | 0;
          if (!h) $e(1);
          i[ee >> 2] = h;
          h = ($ + 88) | 0;
          if (i[h >> 2] | 0) et(406882, 406802, 92, 406832);
          s = i[q >> 2] | 0;
          fe = ($ + 92) | 0;
          i[fe >> 2] = s;
          s = st[i[e >> 2] & 1](i[Se >> 2] | 0, (s * 1040) | 0) | 0;
          if (!s) $e(1);
          i[h >> 2] = s;
          de = i[q >> 2] | 0;
          h = i[ee >> 2] | 0;
          le = de << 2;
          _ = st[i[e >> 2] & 1](i[Se >> 2] | 0, le) | 0;
          if (!_) $e(1);
          ue = st[i[e >> 2] & 1](i[Se >> 2] | 0, le) | 0;
          if (!ue) $e(1);
          re = st[i[e >> 2] & 1](i[Se >> 2] | 0, 49176) | 0;
          if (!re) $e(1);
          q = 0;
          while (1) {
            if ((q | 0) == (de | 0)) break;
            i[(_ + (q << 2)) >> 2] = 1;
            q = (q + 1) | 0;
          }
          ge = h;
          h = 0;
          while (1) {
            if ((h | 0) == (de | 0)) break;
            r = (Re + ((h * 1040) | 0)) | 0;
            dc((s + ((h * 1040) | 0)) | 0, r | 0, 1040) | 0;
            p[(s + ((h * 1040) | 0) + 1032) >> 3] = +Wa(r);
            i[(ge + (h << 2)) >> 2] = h;
            h = (h + 1) | 0;
          }
          te = 0;
          q = 0;
          while (1) {
            if (de >>> 0 <= q >>> 0) break;
            h = (de - q) | 0;
            h = h >>> 0 < 64 ? h : 64;
            ee = 0;
            while (1) {
              if ((ee | 0) == (h | 0)) break;
              i[(ue + ((te + ee) << 2)) >> 2] = q + ee;
              ee = (ee + 1) | 0;
            }
            te = (te + (pb(s, _, (ge + (q << 2)) | 0, (ue + (te << 2)) | 0, re, h, h, 256, 2048) | 0)) | 0;
            q = (q + 64) | 0;
          }
          h = te << 6;
          ee = Pe(te >>> 1, te) | 0;
          ee = h >>> 0 < ee >>> 0 ? h : ee;
          h = (ee + 1) | 0;
          do {
            if (h >>> 0 > 2048) {
              q = 2048;
              while (1) {
                if (q >>> 0 >= h >>> 0) break;
                q = q << 1;
              }
              h = st[i[e >> 2] & 1](i[Se >> 2] | 0, (q * 24) | 0) | 0;
              if (!h) $e(1);
              else {
                dc(h | 0, re | 0, 49152) | 0;
                rt[i[he >> 2] & 1](i[Se >> 2] | 0, re);
                ke = h;
                break;
              }
            } else ke = re;
          } while (0);
          ce = pb(s, _, ge, ue, ke, te, de, 256, ee) | 0;
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, ke);
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, _);
          k = (Fe + 1024) | 0;
          ie = (Fe + 1024) | 0;
          ae = 0;
          while (1) {
            if ((ae | 0) == (de | 0)) {
              h = 0;
              break;
            }
            ee = i[((ae | 0) == 0 ? ge : (ge + ((ae + -1) << 2)) | 0) >> 2] | 0;
            h = (Re + ((ae * 1040) | 0)) | 0;
            Ae = (Re + ((ae * 1040) | 0) + 1024) | 0;
            if (!(i[Ae >> 2] | 0)) oe = 0.0;
            else {
              dc(Fe | 0, h | 0, 1040) | 0;
              i[ie >> 2] = (i[ie >> 2] | 0) + (i[(s + ((ee * 1040) | 0) + 1024) >> 2] | 0);
              q = 0;
              while (1) {
                if ((q | 0) == 256) break;
                ke = (Fe + (q << 2)) | 0;
                i[ke >> 2] = (i[ke >> 2] | 0) + (i[(s + ((ee * 1040) | 0) + (q << 2)) >> 2] | 0);
                q = (q + 1) | 0;
              }
              oe = +Wa(Fe);
              oe = oe - +p[(s + ((ee * 1040) | 0) + 1032) >> 3];
            }
            q = ee;
            _ = 0;
            while (1) {
              if ((_ | 0) == (ce | 0)) break;
              re = (ue + (_ << 2)) | 0;
              ee = i[re >> 2] | 0;
              if (!(i[Ae >> 2] | 0)) ne = 0.0;
              else {
                dc(Fe | 0, h | 0, 1040) | 0;
                i[k >> 2] = (i[k >> 2] | 0) + (i[(s + ((ee * 1040) | 0) + 1024) >> 2] | 0);
                te = 0;
                while (1) {
                  if ((te | 0) == 256) break;
                  ke = (Fe + (te << 2)) | 0;
                  i[ke >> 2] = (i[ke >> 2] | 0) + (i[(s + ((ee * 1040) | 0) + (te << 2)) >> 2] | 0);
                  te = (te + 1) | 0;
                }
                ne = +Wa(Fe);
                ne = ne - +p[(s + ((ee * 1040) | 0) + 1032) >> 3];
              }
              if (ne < oe) {
                oe = ne;
                q = i[re >> 2] | 0;
              }
              _ = (_ + 1) | 0;
            }
            i[(ge + (ae << 2)) >> 2] = q;
            ae = (ae + 1) | 0;
          }
          while (1) {
            if ((h | 0) == (ce | 0)) {
              q = 0;
              break;
            }
            ke = i[(ue + (h << 2)) >> 2] | 0;
            ac((s + ((ke * 1040) | 0)) | 0, 0, 1024) | 0;
            i[(s + ((ke * 1040) | 0) + 1024) >> 2] = 0;
            p[(s + ((ke * 1040) | 0) + 1032) >> 3] = se;
            h = (h + 1) | 0;
          }
          while (1) {
            if ((q | 0) == (de | 0)) break;
            h = i[(ge + (q << 2)) >> 2] | 0;
            ee = (s + ((h * 1040) | 0) + 1024) | 0;
            i[ee >> 2] = (i[ee >> 2] | 0) + (i[(Re + ((q * 1040) | 0) + 1024) >> 2] | 0);
            ee = 0;
            while (1) {
              if ((ee | 0) == 256) break;
              ke = (s + ((h * 1040) | 0) + (ee << 2)) | 0;
              i[ke >> 2] = (i[ke >> 2] | 0) + (i[(Re + ((q * 1040) | 0) + (ee << 2)) >> 2] | 0);
              ee = (ee + 1) | 0;
            }
            q = (q + 1) | 0;
          }
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, ue);
          k = st[i[e >> 2] & 1](i[Se >> 2] | 0, le) | 0;
          if (!k) $e(1);
          h = 0;
          while (1) {
            if ((h | 0) == (de | 0)) {
              h = 0;
              ee = 0;
              break;
            }
            i[(k + (h << 2)) >> 2] = -1;
            h = (h + 1) | 0;
          }
          while (1) {
            if ((ee | 0) == (de | 0)) break;
            q = (k + (i[(ge + (ee << 2)) >> 2] << 2)) | 0;
            if ((i[q >> 2] | 0) == -1) {
              i[q >> 2] = h;
              h = (h + 1) | 0;
            }
            ee = (ee + 1) | 0;
          }
          _ = st[i[e >> 2] & 1](i[Se >> 2] | 0, (h * 1040) | 0) | 0;
          if (!_) $e(1);
          te = 0;
          re = 0;
          while (1) {
            if ((re | 0) == (de | 0)) break;
            ee = (ge + (re << 2)) | 0;
            h = i[ee >> 2] | 0;
            q = i[(k + (h << 2)) >> 2] | 0;
            if ((q | 0) == (te | 0)) {
              dc((_ + ((te * 1040) | 0)) | 0, (s + ((h * 1040) | 0)) | 0, 1040) | 0;
              q = i[(k + (i[ee >> 2] << 2)) >> 2] | 0;
              h = (te + 1) | 0;
            } else h = te;
            i[ee >> 2] = q;
            te = h;
            re = (re + 1) | 0;
          }
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, k);
          h = 0;
          while (1) {
            if ((h | 0) == (te | 0)) break;
            dc((s + ((h * 1040) | 0)) | 0, (_ + ((h * 1040) | 0)) | 0, 1040) | 0;
            h = (h + 1) | 0;
          }
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, _);
          i[fe >> 2] = te;
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, Re);
          ee = ($ + 80) | 0;
          if (i[ee >> 2] | 0) et(406910, 406802, 106, 406832);
          h = i[Te >> 2] | 0;
          q = ($ + 84) | 0;
          i[q >> 2] = h << 2;
          h = st[i[e >> 2] & 1](i[Se >> 2] | 0, h << 4) | 0;
          if (!h) $e(1);
          i[ee >> 2] = h;
          h = ($ + 104) | 0;
          if (i[h >> 2] | 0) et(406940, 406802, 112, 406832);
          s = i[q >> 2] | 0;
          fe = ($ + 108) | 0;
          i[fe >> 2] = s;
          s = st[i[e >> 2] & 1](i[Se >> 2] | 0, (s * 2096) | 0) | 0;
          if (!s) $e(1);
          i[h >> 2] = s;
          de = i[q >> 2] | 0;
          h = i[ee >> 2] | 0;
          le = de << 2;
          _ = st[i[e >> 2] & 1](i[Se >> 2] | 0, le) | 0;
          if (!_) $e(1);
          ue = st[i[e >> 2] & 1](i[Se >> 2] | 0, le) | 0;
          if (!ue) $e(1);
          re = st[i[e >> 2] & 1](i[Se >> 2] | 0, 49176) | 0;
          if (!re) $e(1);
          q = 0;
          while (1) {
            if ((q | 0) == (de | 0)) break;
            i[(_ + (q << 2)) >> 2] = 1;
            q = (q + 1) | 0;
          }
          ge = h;
          h = 0;
          while (1) {
            if ((h | 0) == (de | 0)) break;
            $ = (ve + ((h * 2096) | 0)) | 0;
            dc((s + ((h * 2096) | 0)) | 0, $ | 0, 2096) | 0;
            p[(s + ((h * 2096) | 0) + 2088) >> 3] = +Ya($);
            i[(ge + (h << 2)) >> 2] = h;
            h = (h + 1) | 0;
          }
          te = 0;
          q = 0;
          while (1) {
            if (de >>> 0 <= q >>> 0) break;
            h = (de - q) | 0;
            h = h >>> 0 < 64 ? h : 64;
            ee = 0;
            while (1) {
              if ((ee | 0) == (h | 0)) break;
              i[(ue + ((te + ee) << 2)) >> 2] = q + ee;
              ee = (ee + 1) | 0;
            }
            te = (te + (tb(s, _, (ge + (q << 2)) | 0, (ue + (te << 2)) | 0, re, h, h, 256, 2048) | 0)) | 0;
            q = (q + 64) | 0;
          }
          h = te << 6;
          ee = Pe(te >>> 1, te) | 0;
          ee = h >>> 0 < ee >>> 0 ? h : ee;
          h = (ee + 1) | 0;
          do {
            if (h >>> 0 > 2048) {
              q = 2048;
              while (1) {
                if (q >>> 0 >= h >>> 0) break;
                q = q << 1;
              }
              h = st[i[e >> 2] & 1](i[Se >> 2] | 0, (q * 24) | 0) | 0;
              if (!h) $e(1);
              else {
                dc(h | 0, re | 0, 49152) | 0;
                rt[i[he >> 2] & 1](i[Se >> 2] | 0, re);
                De = h;
                break;
              }
            } else De = re;
          } while (0);
          ce = tb(s, _, ge, ue, De, te, de, 256, ee) | 0;
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, De);
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, _);
          k = (Fe + 2080) | 0;
          ie = (Fe + 2080) | 0;
          ae = 0;
          while (1) {
            if ((ae | 0) == (de | 0)) {
              h = 0;
              break;
            }
            ee = i[((ae | 0) == 0 ? ge : (ge + ((ae + -1) << 2)) | 0) >> 2] | 0;
            h = (ve + ((ae * 2096) | 0)) | 0;
            Ae = (ve + ((ae * 2096) | 0) + 2080) | 0;
            if (!(i[Ae >> 2] | 0)) oe = 0.0;
            else {
              dc(Fe | 0, h | 0, 2096) | 0;
              i[ie >> 2] = (i[ie >> 2] | 0) + (i[(s + ((ee * 2096) | 0) + 2080) >> 2] | 0);
              q = 0;
              while (1) {
                if ((q | 0) == 520) break;
                De = (Fe + (q << 2)) | 0;
                i[De >> 2] = (i[De >> 2] | 0) + (i[(s + ((ee * 2096) | 0) + (q << 2)) >> 2] | 0);
                q = (q + 1) | 0;
              }
              oe = +Ya(Fe);
              oe = oe - +p[(s + ((ee * 2096) | 0) + 2088) >> 3];
            }
            q = ee;
            _ = 0;
            while (1) {
              if ((_ | 0) == (ce | 0)) break;
              re = (ue + (_ << 2)) | 0;
              ee = i[re >> 2] | 0;
              if (!(i[Ae >> 2] | 0)) ne = 0.0;
              else {
                dc(Fe | 0, h | 0, 2096) | 0;
                i[k >> 2] = (i[k >> 2] | 0) + (i[(s + ((ee * 2096) | 0) + 2080) >> 2] | 0);
                te = 0;
                while (1) {
                  if ((te | 0) == 520) break;
                  De = (Fe + (te << 2)) | 0;
                  i[De >> 2] = (i[De >> 2] | 0) + (i[(s + ((ee * 2096) | 0) + (te << 2)) >> 2] | 0);
                  te = (te + 1) | 0;
                }
                ne = +Ya(Fe);
                ne = ne - +p[(s + ((ee * 2096) | 0) + 2088) >> 3];
              }
              if (ne < oe) {
                oe = ne;
                q = i[re >> 2] | 0;
              }
              _ = (_ + 1) | 0;
            }
            i[(ge + (ae << 2)) >> 2] = q;
            ae = (ae + 1) | 0;
          }
          while (1) {
            if ((h | 0) == (ce | 0)) {
              q = 0;
              break;
            }
            Fe = i[(ue + (h << 2)) >> 2] | 0;
            ac((s + ((Fe * 2096) | 0)) | 0, 0, 2080) | 0;
            i[(s + ((Fe * 2096) | 0) + 2080) >> 2] = 0;
            p[(s + ((Fe * 2096) | 0) + 2088) >> 3] = se;
            h = (h + 1) | 0;
          }
          while (1) {
            if ((q | 0) == (de | 0)) break;
            h = i[(ge + (q << 2)) >> 2] | 0;
            ee = (s + ((h * 2096) | 0) + 2080) | 0;
            i[ee >> 2] = (i[ee >> 2] | 0) + (i[(ve + ((q * 2096) | 0) + 2080) >> 2] | 0);
            ee = 0;
            while (1) {
              if ((ee | 0) == 520) break;
              Fe = (s + ((h * 2096) | 0) + (ee << 2)) | 0;
              i[Fe >> 2] = (i[Fe >> 2] | 0) + (i[(ve + ((q * 2096) | 0) + (ee << 2)) >> 2] | 0);
              ee = (ee + 1) | 0;
            }
            q = (q + 1) | 0;
          }
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, ue);
          k = st[i[e >> 2] & 1](i[Se >> 2] | 0, le) | 0;
          if (!k) $e(1);
          h = 0;
          while (1) {
            if ((h | 0) == (de | 0)) {
              h = 0;
              ee = 0;
              break;
            }
            i[(k + (h << 2)) >> 2] = -1;
            h = (h + 1) | 0;
          }
          while (1) {
            if ((ee | 0) == (de | 0)) break;
            q = (k + (i[(ge + (ee << 2)) >> 2] << 2)) | 0;
            if ((i[q >> 2] | 0) == -1) {
              i[q >> 2] = h;
              h = (h + 1) | 0;
            }
            ee = (ee + 1) | 0;
          }
          _ = st[i[e >> 2] & 1](i[Se >> 2] | 0, (h * 2096) | 0) | 0;
          if (!_) $e(1);
          te = 0;
          re = 0;
          while (1) {
            if ((re | 0) == (de | 0)) break;
            ee = (ge + (re << 2)) | 0;
            h = i[ee >> 2] | 0;
            q = i[(k + (h << 2)) >> 2] | 0;
            if ((q | 0) == (te | 0)) {
              dc((_ + ((te * 2096) | 0)) | 0, (s + ((h * 2096) | 0)) | 0, 2096) | 0;
              q = i[(k + (i[ee >> 2] << 2)) >> 2] | 0;
              h = (te + 1) | 0;
            } else h = te;
            i[ee >> 2] = q;
            te = h;
            re = (re + 1) | 0;
          }
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, k);
          h = 0;
          while (1) {
            if ((h | 0) == (te | 0)) break;
            dc((s + ((h * 2096) | 0)) | 0, (_ + ((h * 2096) | 0)) | 0, 2096) | 0;
            h = (h + 1) | 0;
          }
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, _);
          i[fe >> 2] = te;
          rt[i[he >> 2] & 1](i[Se >> 2] | 0, ve);
          w = Ne;
          return;
        }
        function Ob(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var o = 0,
            n = 0,
            a = 0,
            l = 0,
            d = 0;
          d = w;
          w = (w + 704) | 0;
          l = d;
          o = (s + 92) | 0;
          n = (s + 88) | 0;
          a = 0;
          while (1) {
            if (a >>> 0 >= (i[o >> 2] | 0) >>> 0) break;
            Ib(256, ((i[n >> 2] | 0) + ((a * 1040) | 0)) | 0, l);
            a = (a + 1) | 0;
          }
          o = (s + 100) | 0;
          n = (s + 96) | 0;
          a = 0;
          while (1) {
            if (a >>> 0 >= (i[o >> 2] | 0) >>> 0) break;
            Ib(704, ((i[n >> 2] | 0) + ((a * 2832) | 0)) | 0, l);
            a = (a + 1) | 0;
          }
          a = (e + 16 + (48 << r)) | 0;
          r = (s + 108) | 0;
          o = (s + 104) | 0;
          n = 0;
          while (1) {
            if (n >>> 0 >= (i[r >> 2] | 0) >>> 0) break;
            Ib(a, ((i[o >> 2] | 0) + ((n * 2096) | 0)) | 0, l);
            n = (n + 1) | 0;
          }
          w = d;
          return;
        }
        function Pb(e, r, s, o, n, a) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          var l = 0,
            d = 0,
            h = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0;
          M = ((s >>> 10) + 1) | 0;
          _ = M >>> 0 < 257 ? M : 257;
          i[r >> 2] = 704;
          i[(r + 4) >> 2] = 1024;
          p[(r + 8) >> 3] = 500.0;
          i[(r + 16) >> 2] = 0;
          j = (r + 20) | 0;
          i[j >> 2] = o;
          i[(r + 28) >> 2] = a;
          i[(r + 32) >> 2] = 1024;
          i[(r + 36) >> 2] = 0;
          i[(r + 40) >> 2] = 0;
          i[(r + 72) >> 2] = 0;
          k = (o + 16) | 0;
          s = i[k >> 2] | 0;
          if (s >>> 0 < M >>> 0) {
            w = (s | 0) == 0 ? M : s;
            while (1) {
              if (w >>> 0 >= M >>> 0) break;
              w = w << 1;
            }
            l = (e + 8) | 0;
            d = st[i[e >> 2] & 1](i[l >> 2] | 0, w) | 0;
            if (!d) $e(1);
            h = i[k >> 2] | 0;
            s = (o + 8) | 0;
            if (h) dc(d | 0, i[s >> 2] | 0, h | 0) | 0;
            rt[i[(e + 4) >> 2] & 1](i[l >> 2] | 0, i[s >> 2] | 0);
            i[s >> 2] = d;
            i[k >> 2] = w;
          }
          k = (o + 20) | 0;
          s = i[k >> 2] | 0;
          if (s >>> 0 < M >>> 0) {
            w = (s | 0) == 0 ? M : s;
            while (1) {
              if (w >>> 0 >= M >>> 0) break;
              w = w << 1;
            }
            l = (e + 8) | 0;
            d = st[i[e >> 2] & 1](i[l >> 2] | 0, w << 2) | 0;
            if (!d) $e(1);
            h = i[k >> 2] | 0;
            s = (o + 12) | 0;
            if (h) dc(d | 0, i[s >> 2] | 0, (h << 2) | 0) | 0;
            rt[i[(e + 4) >> 2] & 1](i[l >> 2] | 0, i[s >> 2] | 0);
            i[s >> 2] = d;
            i[k >> 2] = w;
          }
          i[((i[j >> 2] | 0) + 4) >> 2] = M;
          if (i[n >> 2] | 0) et(407776, 407818, 70, 407880);
          i[a >> 2] = _;
          s = st[i[e >> 2] & 1](i[(e + 8) >> 2] | 0, (_ * 2832) | 0) | 0;
          l = s;
          if (!s) $e(1);
          else {
            i[n >> 2] = l;
            i[(r + 24) >> 2] = l;
            ac(s | 0, 0, 2816) | 0;
            i[(s + 2816) >> 2] = 0;
            p[(s + 2824) >> 3] = se;
            i[(r + 48) >> 2] = 0;
            i[(r + 44) >> 2] = 0;
            return;
          }
        }
        function Qb(e, r, s, o, n, a) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          a = a | 0;
          var l = 0,
            d = 0,
            h = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0;
          M = ((s >>> 9) + 1) | 0;
          _ = M >>> 0 < 257 ? M : 257;
          i[r >> 2] = 64;
          i[(r + 4) >> 2] = 512;
          p[(r + 8) >> 3] = 100.0;
          i[(r + 16) >> 2] = 0;
          j = (r + 20) | 0;
          i[j >> 2] = o;
          i[(r + 28) >> 2] = a;
          i[(r + 32) >> 2] = 512;
          i[(r + 36) >> 2] = 0;
          i[(r + 40) >> 2] = 0;
          i[(r + 72) >> 2] = 0;
          k = (o + 16) | 0;
          s = i[k >> 2] | 0;
          if (s >>> 0 < M >>> 0) {
            w = (s | 0) == 0 ? M : s;
            while (1) {
              if (w >>> 0 >= M >>> 0) break;
              w = w << 1;
            }
            l = (e + 8) | 0;
            d = st[i[e >> 2] & 1](i[l >> 2] | 0, w) | 0;
            if (!d) $e(1);
            h = i[k >> 2] | 0;
            s = (o + 8) | 0;
            if (h) dc(d | 0, i[s >> 2] | 0, h | 0) | 0;
            rt[i[(e + 4) >> 2] & 1](i[l >> 2] | 0, i[s >> 2] | 0);
            i[s >> 2] = d;
            i[k >> 2] = w;
          }
          k = (o + 20) | 0;
          s = i[k >> 2] | 0;
          if (s >>> 0 < M >>> 0) {
            w = (s | 0) == 0 ? M : s;
            while (1) {
              if (w >>> 0 >= M >>> 0) break;
              w = w << 1;
            }
            l = (e + 8) | 0;
            d = st[i[e >> 2] & 1](i[l >> 2] | 0, w << 2) | 0;
            if (!d) $e(1);
            h = i[k >> 2] | 0;
            s = (o + 12) | 0;
            if (h) dc(d | 0, i[s >> 2] | 0, (h << 2) | 0) | 0;
            rt[i[(e + 4) >> 2] & 1](i[l >> 2] | 0, i[s >> 2] | 0);
            i[s >> 2] = d;
            i[k >> 2] = w;
          }
          i[((i[j >> 2] | 0) + 4) >> 2] = M;
          if (i[n >> 2] | 0) et(407776, 407818, 70, 407854);
          i[a >> 2] = _;
          s = st[i[e >> 2] & 1](i[(e + 8) >> 2] | 0, (_ * 2096) | 0) | 0;
          l = s;
          if (!s) $e(1);
          else {
            i[n >> 2] = l;
            i[(r + 24) >> 2] = l;
            ac(s | 0, 0, 2080) | 0;
            i[(s + 2080) >> 2] = 0;
            p[(s + 2088) >> 3] = se;
            i[(r + 48) >> 2] = 0;
            i[(r + 44) >> 2] = 0;
            return;
          }
        }
        function Rb(e, r) {
          e = e | 0;
          r = r | 0;
          var s = 0,
            n = 0.0,
            a = 0.0,
            l = 0.0,
            d = 0.0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0.0,
            ee = 0,
            te = 0,
            re = 0.0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0;
          Ee = w;
          w = (w + 2112) | 0;
          ie = (Ee + 32) | 0;
          ne = (Ee + 16) | 0;
          Ae = Ee;
          fe = i[(e + 20) >> 2] | 0;
          de = (e + 56) | 0;
          s = i[(e + 24) >> 2] | 0;
          pe = (e + 36) | 0;
          he = i[pe >> 2] | 0;
          ue = (e + 4) | 0;
          ce = i[ue >> 2] | 0;
          ce = he >>> 0 > ce >>> 0 ? he : ce;
          i[pe >> 2] = ce;
          he = (e + 16) | 0;
          oe = i[he >> 2] | 0;
          do {
            if (oe) {
              if (ce) {
                ge = (e + 40) | 0;
                te = i[ge >> 2] | 0;
                le = s;
                q = i[e >> 2] | 0;
                s = (le + ((te * 1040) | 0)) | 0;
                M = (le + ((te * 1040) | 0) + (q << 2)) | 0;
                ee = ((q & 1) | 0) == 0;
                if (ee) {
                  n = 0.0;
                  _ = 0;
                } else {
                  l = 0.0;
                  _ = 0;
                  ae = 27;
                }
                while (1) {
                  if ((ae | 0) == 27) {
                    ae = 0;
                    k = i[s >> 2] | 0;
                    n = +(k >>> 0);
                    if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                    else a = +Xb(n);
                    s = (s + 4) | 0;
                    n = l - n * a;
                    _ = (_ + k) | 0;
                  }
                  if (s >>> 0 >= M >>> 0) break;
                  k = i[s >> 2] | 0;
                  a = +(k >>> 0);
                  if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                  else l = +Xb(a);
                  s = (s + 4) | 0;
                  l = n - a * l;
                  _ = (_ + k) | 0;
                  ae = 27;
                }
                d = +(_ >>> 0);
                if (!_) l = d;
                else {
                  if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                  else a = +Xb(d);
                  l = d;
                  n = n + d * a;
                }
                $ = n < l ? l : n;
                j = 0;
                while (1) {
                  if ((j | 0) == 2) break;
                  s = i[(e + 44 + (j << 2)) >> 2] | 0;
                  dc((ie + ((j * 1040) | 0)) | 0, (le + ((te * 1040) | 0)) | 0, 1040) | 0;
                  k = (ie + ((j * 1040) | 0) + 1024) | 0;
                  i[k >> 2] = (i[k >> 2] | 0) + (i[(le + ((s * 1040) | 0) + 1024) >> 2] | 0);
                  k = 0;
                  while (1) {
                    if ((k | 0) == 256) break;
                    M = (ie + ((j * 1040) | 0) + (k << 2)) | 0;
                    i[M >> 2] = (i[M >> 2] | 0) + (i[(le + ((s * 1040) | 0) + (k << 2)) >> 2] | 0);
                    k = (k + 1) | 0;
                  }
                  s = (ie + ((j * 1040) | 0)) | 0;
                  M = (ie + ((j * 1040) | 0) + (q << 2)) | 0;
                  if (ee) {
                    n = 0.0;
                    _ = 0;
                  } else {
                    l = 0.0;
                    _ = 0;
                    ae = 47;
                  }
                  while (1) {
                    if ((ae | 0) == 47) {
                      ae = 0;
                      k = i[s >> 2] | 0;
                      n = +(k >>> 0);
                      if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                      else a = +Xb(n);
                      s = (s + 4) | 0;
                      n = l - n * a;
                      _ = (_ + k) | 0;
                    }
                    if (s >>> 0 >= M >>> 0) break;
                    k = i[s >> 2] | 0;
                    a = +(k >>> 0);
                    if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                    else l = +Xb(a);
                    s = (s + 4) | 0;
                    l = n - a * l;
                    _ = (_ + k) | 0;
                    ae = 47;
                  }
                  d = +(_ >>> 0);
                  if (!_) l = d;
                  else {
                    if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                    else a = +Xb(d);
                    l = d;
                    n = n + d * a;
                  }
                  d = n < l ? l : n;
                  p[(ne + (j << 3)) >> 3] = d;
                  p[(Ae + (j << 3)) >> 3] = d - $ - +p[(e + 56 + (j << 3)) >> 3];
                  j = (j + 1) | 0;
                }
                s = fe;
                n = +p[Ae >> 3];
                if (((i[s >> 2] | 0) >>> 0 < 256 ? ((re = +p[(e + 8) >> 3]), n > re) : 0) ? +p[(Ae + 8) >> 3] > re : 0) {
                  i[((i[(s + 12) >> 2] | 0) + (oe << 2)) >> 2] = ce;
                  o[((i[(s + 8) >> 2] | 0) + (i[he >> 2] | 0)) >> 0] = i[s >> 2];
                  ce = (e + 44) | 0;
                  i[(e + 48) >> 2] = i[ce >> 2];
                  i[ce >> 2] = i[s >> 2] & 255;
                  p[(e + 64) >> 3] = +p[de >> 3];
                  p[de >> 3] = $;
                  i[he >> 2] = (i[he >> 2] | 0) + 1;
                  i[s >> 2] = (i[s >> 2] | 0) + 1;
                  s = ((i[ge >> 2] | 0) + 1) | 0;
                  i[ge >> 2] = s;
                  if (s >>> 0 < (i[i[(e + 28) >> 2] >> 2] | 0) >>> 0) {
                    ac((le + ((s * 1040) | 0)) | 0, 0, 1024) | 0;
                    i[(le + ((s * 1040) | 0) + 1024) >> 2] = 0;
                    p[(le + ((s * 1040) | 0) + 1032) >> 3] = se;
                  }
                  i[pe >> 2] = 0;
                  i[(e + 72) >> 2] = 0;
                  i[(e + 32) >> 2] = i[ue >> 2];
                  break;
                }
                if (+p[(Ae + 8) >> 3] < n + -20.0) {
                  i[((i[(s + 12) >> 2] | 0) + (oe << 2)) >> 2] = ce;
                  oe = i[he >> 2] | 0;
                  Ae = i[(s + 8) >> 2] | 0;
                  o[(Ae + oe) >> 0] = o[(Ae + (oe + -2)) >> 0] | 0;
                  oe = (e + 44) | 0;
                  Ae = i[oe >> 2] | 0;
                  ae = (e + 48) | 0;
                  ce = i[ae >> 2] | 0;
                  i[oe >> 2] = ce;
                  i[ae >> 2] = Ae;
                  dc((le + ((ce * 1040) | 0)) | 0, (ie + 1040) | 0, 1040) | 0;
                  p[(e + 64) >> 3] = +p[de >> 3];
                  p[de >> 3] = +p[(ne + 8) >> 3];
                  i[he >> 2] = (i[he >> 2] | 0) + 1;
                  i[pe >> 2] = 0;
                  pe = i[ge >> 2] | 0;
                  ac((le + ((pe * 1040) | 0)) | 0, 0, 1024) | 0;
                  i[(le + ((pe * 1040) | 0) + 1024) >> 2] = 0;
                  p[(le + ((pe * 1040) | 0) + 1032) >> 3] = se;
                  i[(e + 72) >> 2] = 0;
                  i[(e + 32) >> 2] = i[ue >> 2];
                  break;
                }
                ae = ((i[(s + 12) >> 2] | 0) + ((oe + -1) << 2)) | 0;
                i[ae >> 2] = (i[ae >> 2] | 0) + ce;
                dc((le + (((i[(e + 44) >> 2] | 0) * 1040) | 0)) | 0, ie | 0, 1040) | 0;
                n = +p[ne >> 3];
                p[de >> 3] = n;
                if ((i[s >> 2] | 0) == 1) p[(e + 64) >> 3] = n;
                i[pe >> 2] = 0;
                de = i[ge >> 2] | 0;
                ac((le + ((de * 1040) | 0)) | 0, 0, 1024) | 0;
                i[(le + ((de * 1040) | 0) + 1024) >> 2] = 0;
                p[(le + ((de * 1040) | 0) + 1032) >> 3] = se;
                de = (e + 72) | 0;
                pe = ((i[de >> 2] | 0) + 1) | 0;
                i[de >> 2] = pe;
                if (pe >>> 0 > 1) {
                  pe = (e + 32) | 0;
                  i[pe >> 2] = (i[pe >> 2] | 0) + (i[ue >> 2] | 0);
                }
              }
            } else {
              j = fe;
              i[i[(j + 12) >> 2] >> 2] = ce;
              o[i[(j + 8) >> 2] >> 0] = 0;
              q = s;
              ge = i[e >> 2] | 0;
              M = (q + (ge << 2)) | 0;
              if (!(ge & 1)) {
                n = 0.0;
                _ = 0;
              } else {
                l = 0.0;
                _ = 0;
                ae = 8;
              }
              while (1) {
                if ((ae | 0) == 8) {
                  k = i[s >> 2] | 0;
                  n = +(k >>> 0);
                  if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                  else a = +Xb(n);
                  s = (s + 4) | 0;
                  n = l - n * a;
                  _ = (_ + k) | 0;
                }
                if (s >>> 0 >= M >>> 0) break;
                k = i[s >> 2] | 0;
                a = +(k >>> 0);
                if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                else l = +Xb(a);
                s = (s + 4) | 0;
                l = n - a * l;
                _ = (_ + k) | 0;
                ae = 8;
              }
              d = +(_ >>> 0);
              if (!_) l = d;
              else {
                if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                else a = +Xb(d);
                l = d;
                n = n + d * a;
              }
              re = n < l ? l : n;
              p[de >> 3] = re;
              p[(e + 64) >> 3] = re;
              i[he >> 2] = (i[he >> 2] | 0) + 1;
              i[j >> 2] = (i[j >> 2] | 0) + 1;
              de = (e + 40) | 0;
              s = ((i[de >> 2] | 0) + 1) | 0;
              i[de >> 2] = s;
              if (s >>> 0 < (i[i[(e + 28) >> 2] >> 2] | 0) >>> 0) {
                ac((q + ((s * 1040) | 0)) | 0, 0, 1024) | 0;
                i[(q + ((s * 1040) | 0) + 1024) >> 2] = 0;
                p[(q + ((s * 1040) | 0) + 1032) >> 3] = se;
              }
              i[pe >> 2] = 0;
            }
          } while (0);
          if (!r) {
            w = Ee;
            return;
          }
          r = fe;
          i[i[(e + 28) >> 2] >> 2] = i[r >> 2];
          i[(r + 4) >> 2] = i[he >> 2];
          w = Ee;
          return;
        }
        function Sb(e, r) {
          e = e | 0;
          r = r | 0;
          var s = 0,
            n = 0.0,
            a = 0.0,
            l = 0.0,
            d = 0.0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0.0,
            ee = 0,
            te = 0,
            re = 0.0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0;
          Ee = w;
          w = (w + 5696) | 0;
          ie = (Ee + 32) | 0;
          ne = (Ee + 16) | 0;
          Ae = Ee;
          fe = i[(e + 20) >> 2] | 0;
          de = (e + 56) | 0;
          s = i[(e + 24) >> 2] | 0;
          pe = (e + 36) | 0;
          he = i[pe >> 2] | 0;
          ue = (e + 4) | 0;
          ce = i[ue >> 2] | 0;
          ce = he >>> 0 > ce >>> 0 ? he : ce;
          i[pe >> 2] = ce;
          he = (e + 16) | 0;
          oe = i[he >> 2] | 0;
          do {
            if (oe) {
              if (ce) {
                ge = (e + 40) | 0;
                te = i[ge >> 2] | 0;
                le = s;
                q = i[e >> 2] | 0;
                s = (le + ((te * 2832) | 0)) | 0;
                M = (le + ((te * 2832) | 0) + (q << 2)) | 0;
                ee = ((q & 1) | 0) == 0;
                if (ee) {
                  n = 0.0;
                  _ = 0;
                } else {
                  l = 0.0;
                  _ = 0;
                  ae = 27;
                }
                while (1) {
                  if ((ae | 0) == 27) {
                    ae = 0;
                    k = i[s >> 2] | 0;
                    n = +(k >>> 0);
                    if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                    else a = +Xb(n);
                    s = (s + 4) | 0;
                    n = l - n * a;
                    _ = (_ + k) | 0;
                  }
                  if (s >>> 0 >= M >>> 0) break;
                  k = i[s >> 2] | 0;
                  a = +(k >>> 0);
                  if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                  else l = +Xb(a);
                  s = (s + 4) | 0;
                  l = n - a * l;
                  _ = (_ + k) | 0;
                  ae = 27;
                }
                d = +(_ >>> 0);
                if (!_) l = d;
                else {
                  if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                  else a = +Xb(d);
                  l = d;
                  n = n + d * a;
                }
                $ = n < l ? l : n;
                j = 0;
                while (1) {
                  if ((j | 0) == 2) break;
                  s = i[(e + 44 + (j << 2)) >> 2] | 0;
                  dc((ie + ((j * 2832) | 0)) | 0, (le + ((te * 2832) | 0)) | 0, 2832) | 0;
                  k = (ie + ((j * 2832) | 0) + 2816) | 0;
                  i[k >> 2] = (i[k >> 2] | 0) + (i[(le + ((s * 2832) | 0) + 2816) >> 2] | 0);
                  k = 0;
                  while (1) {
                    if ((k | 0) == 704) break;
                    M = (ie + ((j * 2832) | 0) + (k << 2)) | 0;
                    i[M >> 2] = (i[M >> 2] | 0) + (i[(le + ((s * 2832) | 0) + (k << 2)) >> 2] | 0);
                    k = (k + 1) | 0;
                  }
                  s = (ie + ((j * 2832) | 0)) | 0;
                  M = (ie + ((j * 2832) | 0) + (q << 2)) | 0;
                  if (ee) {
                    n = 0.0;
                    _ = 0;
                  } else {
                    l = 0.0;
                    _ = 0;
                    ae = 47;
                  }
                  while (1) {
                    if ((ae | 0) == 47) {
                      ae = 0;
                      k = i[s >> 2] | 0;
                      n = +(k >>> 0);
                      if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                      else a = +Xb(n);
                      s = (s + 4) | 0;
                      n = l - n * a;
                      _ = (_ + k) | 0;
                    }
                    if (s >>> 0 >= M >>> 0) break;
                    k = i[s >> 2] | 0;
                    a = +(k >>> 0);
                    if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                    else l = +Xb(a);
                    s = (s + 4) | 0;
                    l = n - a * l;
                    _ = (_ + k) | 0;
                    ae = 47;
                  }
                  d = +(_ >>> 0);
                  if (!_) l = d;
                  else {
                    if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                    else a = +Xb(d);
                    l = d;
                    n = n + d * a;
                  }
                  d = n < l ? l : n;
                  p[(ne + (j << 3)) >> 3] = d;
                  p[(Ae + (j << 3)) >> 3] = d - $ - +p[(e + 56 + (j << 3)) >> 3];
                  j = (j + 1) | 0;
                }
                s = fe;
                n = +p[Ae >> 3];
                if (((i[s >> 2] | 0) >>> 0 < 256 ? ((re = +p[(e + 8) >> 3]), n > re) : 0) ? +p[(Ae + 8) >> 3] > re : 0) {
                  i[((i[(s + 12) >> 2] | 0) + (oe << 2)) >> 2] = ce;
                  o[((i[(s + 8) >> 2] | 0) + (i[he >> 2] | 0)) >> 0] = i[s >> 2];
                  ce = (e + 44) | 0;
                  i[(e + 48) >> 2] = i[ce >> 2];
                  i[ce >> 2] = i[s >> 2] & 255;
                  p[(e + 64) >> 3] = +p[de >> 3];
                  p[de >> 3] = $;
                  i[he >> 2] = (i[he >> 2] | 0) + 1;
                  i[s >> 2] = (i[s >> 2] | 0) + 1;
                  s = ((i[ge >> 2] | 0) + 1) | 0;
                  i[ge >> 2] = s;
                  if (s >>> 0 < (i[i[(e + 28) >> 2] >> 2] | 0) >>> 0) {
                    ac((le + ((s * 2832) | 0)) | 0, 0, 2816) | 0;
                    i[(le + ((s * 2832) | 0) + 2816) >> 2] = 0;
                    p[(le + ((s * 2832) | 0) + 2824) >> 3] = se;
                  }
                  i[pe >> 2] = 0;
                  i[(e + 72) >> 2] = 0;
                  i[(e + 32) >> 2] = i[ue >> 2];
                  break;
                }
                if (+p[(Ae + 8) >> 3] < n + -20.0) {
                  i[((i[(s + 12) >> 2] | 0) + (oe << 2)) >> 2] = ce;
                  oe = i[he >> 2] | 0;
                  Ae = i[(s + 8) >> 2] | 0;
                  o[(Ae + oe) >> 0] = o[(Ae + (oe + -2)) >> 0] | 0;
                  oe = (e + 44) | 0;
                  Ae = i[oe >> 2] | 0;
                  ae = (e + 48) | 0;
                  ce = i[ae >> 2] | 0;
                  i[oe >> 2] = ce;
                  i[ae >> 2] = Ae;
                  dc((le + ((ce * 2832) | 0)) | 0, (ie + 2832) | 0, 2832) | 0;
                  p[(e + 64) >> 3] = +p[de >> 3];
                  p[de >> 3] = +p[(ne + 8) >> 3];
                  i[he >> 2] = (i[he >> 2] | 0) + 1;
                  i[pe >> 2] = 0;
                  pe = i[ge >> 2] | 0;
                  ac((le + ((pe * 2832) | 0)) | 0, 0, 2816) | 0;
                  i[(le + ((pe * 2832) | 0) + 2816) >> 2] = 0;
                  p[(le + ((pe * 2832) | 0) + 2824) >> 3] = se;
                  i[(e + 72) >> 2] = 0;
                  i[(e + 32) >> 2] = i[ue >> 2];
                  break;
                }
                ae = ((i[(s + 12) >> 2] | 0) + ((oe + -1) << 2)) | 0;
                i[ae >> 2] = (i[ae >> 2] | 0) + ce;
                dc((le + (((i[(e + 44) >> 2] | 0) * 2832) | 0)) | 0, ie | 0, 2832) | 0;
                n = +p[ne >> 3];
                p[de >> 3] = n;
                if ((i[s >> 2] | 0) == 1) p[(e + 64) >> 3] = n;
                i[pe >> 2] = 0;
                de = i[ge >> 2] | 0;
                ac((le + ((de * 2832) | 0)) | 0, 0, 2816) | 0;
                i[(le + ((de * 2832) | 0) + 2816) >> 2] = 0;
                p[(le + ((de * 2832) | 0) + 2824) >> 3] = se;
                de = (e + 72) | 0;
                pe = ((i[de >> 2] | 0) + 1) | 0;
                i[de >> 2] = pe;
                if (pe >>> 0 > 1) {
                  pe = (e + 32) | 0;
                  i[pe >> 2] = (i[pe >> 2] | 0) + (i[ue >> 2] | 0);
                }
              }
            } else {
              j = fe;
              i[i[(j + 12) >> 2] >> 2] = ce;
              o[i[(j + 8) >> 2] >> 0] = 0;
              q = s;
              ge = i[e >> 2] | 0;
              M = (q + (ge << 2)) | 0;
              if (!(ge & 1)) {
                n = 0.0;
                _ = 0;
              } else {
                l = 0.0;
                _ = 0;
                ae = 8;
              }
              while (1) {
                if ((ae | 0) == 8) {
                  k = i[s >> 2] | 0;
                  n = +(k >>> 0);
                  if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                  else a = +Xb(n);
                  s = (s + 4) | 0;
                  n = l - n * a;
                  _ = (_ + k) | 0;
                }
                if (s >>> 0 >= M >>> 0) break;
                k = i[s >> 2] | 0;
                a = +(k >>> 0);
                if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                else l = +Xb(a);
                s = (s + 4) | 0;
                l = n - a * l;
                _ = (_ + k) | 0;
                ae = 8;
              }
              d = +(_ >>> 0);
              if (!_) l = d;
              else {
                if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                else a = +Xb(d);
                l = d;
                n = n + d * a;
              }
              re = n < l ? l : n;
              p[de >> 3] = re;
              p[(e + 64) >> 3] = re;
              i[he >> 2] = (i[he >> 2] | 0) + 1;
              i[j >> 2] = (i[j >> 2] | 0) + 1;
              de = (e + 40) | 0;
              s = ((i[de >> 2] | 0) + 1) | 0;
              i[de >> 2] = s;
              if (s >>> 0 < (i[i[(e + 28) >> 2] >> 2] | 0) >>> 0) {
                ac((q + ((s * 2832) | 0)) | 0, 0, 2816) | 0;
                i[(q + ((s * 2832) | 0) + 2816) >> 2] = 0;
                p[(q + ((s * 2832) | 0) + 2824) >> 3] = se;
              }
              i[pe >> 2] = 0;
            }
          } while (0);
          if (!r) {
            w = Ee;
            return;
          }
          r = fe;
          i[i[(e + 28) >> 2] >> 2] = i[r >> 2];
          i[(r + 4) >> 2] = i[he >> 2];
          w = Ee;
          return;
        }
        function Tb(e, r) {
          e = e | 0;
          r = r | 0;
          var s = 0,
            n = 0.0,
            a = 0.0,
            l = 0.0,
            d = 0.0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0.0,
            ee = 0,
            te = 0,
            re = 0.0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0;
          Ee = w;
          w = (w + 4224) | 0;
          ie = (Ee + 32) | 0;
          ne = (Ee + 16) | 0;
          Ae = Ee;
          fe = i[(e + 20) >> 2] | 0;
          de = (e + 56) | 0;
          s = i[(e + 24) >> 2] | 0;
          pe = (e + 36) | 0;
          he = i[pe >> 2] | 0;
          ue = (e + 4) | 0;
          ce = i[ue >> 2] | 0;
          ce = he >>> 0 > ce >>> 0 ? he : ce;
          i[pe >> 2] = ce;
          he = (e + 16) | 0;
          oe = i[he >> 2] | 0;
          do {
            if (oe) {
              if (ce) {
                ge = (e + 40) | 0;
                te = i[ge >> 2] | 0;
                le = s;
                q = i[e >> 2] | 0;
                s = (le + ((te * 2096) | 0)) | 0;
                M = (le + ((te * 2096) | 0) + (q << 2)) | 0;
                ee = ((q & 1) | 0) == 0;
                if (ee) {
                  n = 0.0;
                  _ = 0;
                } else {
                  l = 0.0;
                  _ = 0;
                  ae = 27;
                }
                while (1) {
                  if ((ae | 0) == 27) {
                    ae = 0;
                    k = i[s >> 2] | 0;
                    n = +(k >>> 0);
                    if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                    else a = +Xb(n);
                    s = (s + 4) | 0;
                    n = l - n * a;
                    _ = (_ + k) | 0;
                  }
                  if (s >>> 0 >= M >>> 0) break;
                  k = i[s >> 2] | 0;
                  a = +(k >>> 0);
                  if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                  else l = +Xb(a);
                  s = (s + 4) | 0;
                  l = n - a * l;
                  _ = (_ + k) | 0;
                  ae = 27;
                }
                d = +(_ >>> 0);
                if (!_) l = d;
                else {
                  if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                  else a = +Xb(d);
                  l = d;
                  n = n + d * a;
                }
                $ = n < l ? l : n;
                j = 0;
                while (1) {
                  if ((j | 0) == 2) break;
                  s = i[(e + 44 + (j << 2)) >> 2] | 0;
                  dc((ie + ((j * 2096) | 0)) | 0, (le + ((te * 2096) | 0)) | 0, 2096) | 0;
                  k = (ie + ((j * 2096) | 0) + 2080) | 0;
                  i[k >> 2] = (i[k >> 2] | 0) + (i[(le + ((s * 2096) | 0) + 2080) >> 2] | 0);
                  k = 0;
                  while (1) {
                    if ((k | 0) == 520) break;
                    M = (ie + ((j * 2096) | 0) + (k << 2)) | 0;
                    i[M >> 2] = (i[M >> 2] | 0) + (i[(le + ((s * 2096) | 0) + (k << 2)) >> 2] | 0);
                    k = (k + 1) | 0;
                  }
                  s = (ie + ((j * 2096) | 0)) | 0;
                  M = (ie + ((j * 2096) | 0) + (q << 2)) | 0;
                  if (ee) {
                    n = 0.0;
                    _ = 0;
                  } else {
                    l = 0.0;
                    _ = 0;
                    ae = 47;
                  }
                  while (1) {
                    if ((ae | 0) == 47) {
                      ae = 0;
                      k = i[s >> 2] | 0;
                      n = +(k >>> 0);
                      if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                      else a = +Xb(n);
                      s = (s + 4) | 0;
                      n = l - n * a;
                      _ = (_ + k) | 0;
                    }
                    if (s >>> 0 >= M >>> 0) break;
                    k = i[s >> 2] | 0;
                    a = +(k >>> 0);
                    if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                    else l = +Xb(a);
                    s = (s + 4) | 0;
                    l = n - a * l;
                    _ = (_ + k) | 0;
                    ae = 47;
                  }
                  d = +(_ >>> 0);
                  if (!_) l = d;
                  else {
                    if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                    else a = +Xb(d);
                    l = d;
                    n = n + d * a;
                  }
                  d = n < l ? l : n;
                  p[(ne + (j << 3)) >> 3] = d;
                  p[(Ae + (j << 3)) >> 3] = d - $ - +p[(e + 56 + (j << 3)) >> 3];
                  j = (j + 1) | 0;
                }
                s = fe;
                n = +p[Ae >> 3];
                if (((i[s >> 2] | 0) >>> 0 < 256 ? ((re = +p[(e + 8) >> 3]), n > re) : 0) ? +p[(Ae + 8) >> 3] > re : 0) {
                  i[((i[(s + 12) >> 2] | 0) + (oe << 2)) >> 2] = ce;
                  o[((i[(s + 8) >> 2] | 0) + (i[he >> 2] | 0)) >> 0] = i[s >> 2];
                  ce = (e + 44) | 0;
                  i[(e + 48) >> 2] = i[ce >> 2];
                  i[ce >> 2] = i[s >> 2] & 255;
                  p[(e + 64) >> 3] = +p[de >> 3];
                  p[de >> 3] = $;
                  i[he >> 2] = (i[he >> 2] | 0) + 1;
                  i[s >> 2] = (i[s >> 2] | 0) + 1;
                  s = ((i[ge >> 2] | 0) + 1) | 0;
                  i[ge >> 2] = s;
                  if (s >>> 0 < (i[i[(e + 28) >> 2] >> 2] | 0) >>> 0) {
                    ac((le + ((s * 2096) | 0)) | 0, 0, 2080) | 0;
                    i[(le + ((s * 2096) | 0) + 2080) >> 2] = 0;
                    p[(le + ((s * 2096) | 0) + 2088) >> 3] = se;
                  }
                  i[pe >> 2] = 0;
                  i[(e + 72) >> 2] = 0;
                  i[(e + 32) >> 2] = i[ue >> 2];
                  break;
                }
                if (+p[(Ae + 8) >> 3] < n + -20.0) {
                  i[((i[(s + 12) >> 2] | 0) + (oe << 2)) >> 2] = ce;
                  oe = i[he >> 2] | 0;
                  Ae = i[(s + 8) >> 2] | 0;
                  o[(Ae + oe) >> 0] = o[(Ae + (oe + -2)) >> 0] | 0;
                  oe = (e + 44) | 0;
                  Ae = i[oe >> 2] | 0;
                  ae = (e + 48) | 0;
                  ce = i[ae >> 2] | 0;
                  i[oe >> 2] = ce;
                  i[ae >> 2] = Ae;
                  dc((le + ((ce * 2096) | 0)) | 0, (ie + 2096) | 0, 2096) | 0;
                  p[(e + 64) >> 3] = +p[de >> 3];
                  p[de >> 3] = +p[(ne + 8) >> 3];
                  i[he >> 2] = (i[he >> 2] | 0) + 1;
                  i[pe >> 2] = 0;
                  pe = i[ge >> 2] | 0;
                  ac((le + ((pe * 2096) | 0)) | 0, 0, 2080) | 0;
                  i[(le + ((pe * 2096) | 0) + 2080) >> 2] = 0;
                  p[(le + ((pe * 2096) | 0) + 2088) >> 3] = se;
                  i[(e + 72) >> 2] = 0;
                  i[(e + 32) >> 2] = i[ue >> 2];
                  break;
                }
                ae = ((i[(s + 12) >> 2] | 0) + ((oe + -1) << 2)) | 0;
                i[ae >> 2] = (i[ae >> 2] | 0) + ce;
                dc((le + (((i[(e + 44) >> 2] | 0) * 2096) | 0)) | 0, ie | 0, 2096) | 0;
                n = +p[ne >> 3];
                p[de >> 3] = n;
                if ((i[s >> 2] | 0) == 1) p[(e + 64) >> 3] = n;
                i[pe >> 2] = 0;
                de = i[ge >> 2] | 0;
                ac((le + ((de * 2096) | 0)) | 0, 0, 2080) | 0;
                i[(le + ((de * 2096) | 0) + 2080) >> 2] = 0;
                p[(le + ((de * 2096) | 0) + 2088) >> 3] = se;
                de = (e + 72) | 0;
                pe = ((i[de >> 2] | 0) + 1) | 0;
                i[de >> 2] = pe;
                if (pe >>> 0 > 1) {
                  pe = (e + 32) | 0;
                  i[pe >> 2] = (i[pe >> 2] | 0) + (i[ue >> 2] | 0);
                }
              }
            } else {
              j = fe;
              i[i[(j + 12) >> 2] >> 2] = ce;
              o[i[(j + 8) >> 2] >> 0] = 0;
              q = s;
              ge = i[e >> 2] | 0;
              M = (q + (ge << 2)) | 0;
              if (!(ge & 1)) {
                n = 0.0;
                _ = 0;
              } else {
                l = 0.0;
                _ = 0;
                ae = 8;
              }
              while (1) {
                if ((ae | 0) == 8) {
                  k = i[s >> 2] | 0;
                  n = +(k >>> 0);
                  if (k >>> 0 < 256) a = +h[(19516 + (k << 2)) >> 2];
                  else a = +Xb(n);
                  s = (s + 4) | 0;
                  n = l - n * a;
                  _ = (_ + k) | 0;
                }
                if (s >>> 0 >= M >>> 0) break;
                k = i[s >> 2] | 0;
                a = +(k >>> 0);
                if (k >>> 0 < 256) l = +h[(19516 + (k << 2)) >> 2];
                else l = +Xb(a);
                s = (s + 4) | 0;
                l = n - a * l;
                _ = (_ + k) | 0;
                ae = 8;
              }
              d = +(_ >>> 0);
              if (!_) l = d;
              else {
                if (_ >>> 0 < 256) a = +h[(19516 + (_ << 2)) >> 2];
                else a = +Xb(d);
                l = d;
                n = n + d * a;
              }
              re = n < l ? l : n;
              p[de >> 3] = re;
              p[(e + 64) >> 3] = re;
              i[he >> 2] = (i[he >> 2] | 0) + 1;
              i[j >> 2] = (i[j >> 2] | 0) + 1;
              de = (e + 40) | 0;
              s = ((i[de >> 2] | 0) + 1) | 0;
              i[de >> 2] = s;
              if (s >>> 0 < (i[i[(e + 28) >> 2] >> 2] | 0) >>> 0) {
                ac((q + ((s * 2096) | 0)) | 0, 0, 2080) | 0;
                i[(q + ((s * 2096) | 0) + 2080) >> 2] = 0;
                p[(q + ((s * 2096) | 0) + 2088) >> 3] = se;
              }
              i[pe >> 2] = 0;
            }
          } while (0);
          if (!r) {
            w = Ee;
            return;
          }
          r = fe;
          i[i[(e + 28) >> 2] >> 2] = i[r >> 2];
          i[(r + 4) >> 2] = i[he >> 2];
          w = Ee;
          return;
        }
        function Ub(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var n = 0,
            a = 0,
            l = 0,
            d = 0,
            k = 0.0,
            _ = 0.0,
            M = 0.0,
            j = 0.0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            oe = 0,
            ne = 0,
            ie = 0.0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0,
            me = 0,
            Be = 0;
          Be = w;
          w = (w + 16) | 0;
          Ae = Be;
          Ie = i[(r + 28) >> 2] | 0;
          pe = (r + 4) | 0;
          Ce = i[pe >> 2] | 0;
          d = i[(r + 60) >> 2] | 0;
          he = (r + 32) | 0;
          l = i[he >> 2] | 0;
          me = (r + 44) | 0;
          a = i[me >> 2] | 0;
          de = (r + 12) | 0;
          n = i[de >> 2] | 0;
          if (a >>> 0 < n >>> 0) i[me >> 2] = n;
          else n = a;
          Ee = (r + 24) | 0;
          if (i[Ee >> 2] | 0) {
            if (n) {
              le = (e + 8) | 0;
              ue = st[i[e >> 2] & 1](i[le >> 2] | 0, Ce << 3) | 0;
              if (!ue) $e(1);
              ge = st[i[e >> 2] & 1](i[le >> 2] | 0, (Ce * 2080) | 0) | 0;
              if (!ge) $e(1);
              ce = st[i[e >> 2] & 1](i[le >> 2] | 0, Ce << 4) | 0;
              if (!ce) $e(1);
              i[Ae >> 2] = 0;
              i[(Ae + 4) >> 2] = 0;
              i[(Ae + 8) >> 2] = 0;
              i[(Ae + 12) >> 2] = 0;
              ae = (r + 48) | 0;
              ne = 0;
              while (1) {
                if ((ne | 0) == (Ce | 0)) break;
                ee = ((i[ae >> 2] | 0) + ne) | 0;
                oe = i[r >> 2] | 0;
                n = (l + ((ee * 1040) | 0)) | 0;
                $ = (l + ((ee * 1040) | 0) + (oe << 2)) | 0;
                if (!(oe & 1)) {
                  k = 0.0;
                  q = 0;
                } else {
                  M = 0.0;
                  q = 0;
                  fe = 42;
                }
                while (1) {
                  if ((fe | 0) == 42) {
                    fe = 0;
                    a = i[n >> 2] | 0;
                    k = +(a >>> 0);
                    if (a >>> 0 < 256) _ = +h[(19516 + (a << 2)) >> 2];
                    else _ = +Xb(k);
                    n = (n + 4) | 0;
                    k = M - k * _;
                    q = (q + a) | 0;
                  }
                  if (n >>> 0 >= $ >>> 0) break;
                  a = i[n >> 2] | 0;
                  _ = +(a >>> 0);
                  if (a >>> 0 < 256) M = +h[(19516 + (a << 2)) >> 2];
                  else M = +Xb(_);
                  n = (n + 4) | 0;
                  M = k - _ * M;
                  q = (q + a) | 0;
                  fe = 42;
                }
                M = +(q >>> 0);
                if (!q) j = M;
                else {
                  if (q >>> 0 < 256) _ = +h[(19516 + (q << 2)) >> 2];
                  else _ = +Xb(M);
                  j = M;
                  k = k + M * _;
                }
                oe = (ue + (ne << 3)) | 0;
                p[oe >> 3] = k < j ? j : k;
                ee = (l + ((ee * 1040) | 0)) | 0;
                re = 0;
                while (1) {
                  if ((re | 0) == 2) break;
                  te = ((Pe(re, Ce) | 0) + ne) | 0;
                  n = ((i[(r + 52 + (re << 2)) >> 2] | 0) + ne) | 0;
                  dc((ge + ((te * 1040) | 0)) | 0, ee | 0, 1040) | 0;
                  a = (ge + ((te * 1040) | 0) + 1024) | 0;
                  i[a >> 2] = (i[a >> 2] | 0) + (i[(l + ((n * 1040) | 0) + 1024) >> 2] | 0);
                  a = 0;
                  while (1) {
                    if ((a | 0) == 256) break;
                    $ = (ge + ((te * 1040) | 0) + (a << 2)) | 0;
                    i[$ >> 2] = (i[$ >> 2] | 0) + (i[(l + ((n * 1040) | 0) + (a << 2)) >> 2] | 0);
                    a = (a + 1) | 0;
                  }
                  q = i[r >> 2] | 0;
                  n = (ge + ((te * 1040) | 0)) | 0;
                  $ = (ge + ((te * 1040) | 0) + (q << 2)) | 0;
                  if (!(q & 1)) {
                    k = 0.0;
                    q = 0;
                  } else {
                    M = 0.0;
                    q = 0;
                    fe = 62;
                  }
                  while (1) {
                    if ((fe | 0) == 62) {
                      fe = 0;
                      a = i[n >> 2] | 0;
                      k = +(a >>> 0);
                      if (a >>> 0 < 256) _ = +h[(19516 + (a << 2)) >> 2];
                      else _ = +Xb(k);
                      n = (n + 4) | 0;
                      k = M - k * _;
                      q = (q + a) | 0;
                    }
                    if (n >>> 0 >= $ >>> 0) break;
                    a = i[n >> 2] | 0;
                    _ = +(a >>> 0);
                    if (a >>> 0 < 256) M = +h[(19516 + (a << 2)) >> 2];
                    else M = +Xb(_);
                    n = (n + 4) | 0;
                    M = k - _ * M;
                    q = (q + a) | 0;
                    fe = 62;
                  }
                  j = +(q >>> 0);
                  if (!q) M = j;
                  else {
                    if (q >>> 0 < 256) _ = +h[(19516 + (q << 2)) >> 2];
                    else _ = +Xb(j);
                    M = j;
                    k = k + j * _;
                  }
                  j = k < M ? M : k;
                  p[(ce + (te << 3)) >> 3] = j;
                  $ = (Ae + (re << 3)) | 0;
                  p[$ >> 3] = +p[$ >> 3] + (j - +p[oe >> 3] - +p[(d + (te << 3)) >> 3]);
                  re = (re + 1) | 0;
                }
                ne = (ne + 1) | 0;
              }
              q = Ie;
              k = +p[Ae >> 3];
              if (((i[q >> 2] | 0) >>> 0 < (i[(r + 8) >> 2] | 0) >>> 0 ? ((ie = +p[(r + 16) >> 3]), k > ie) : 0) ? +p[(Ae + 8) >> 3] > ie : 0) {
                i[((i[(q + 12) >> 2] | 0) + (i[Ee >> 2] << 2)) >> 2] = i[me >> 2];
                o[((i[(q + 8) >> 2] | 0) + (i[Ee >> 2] | 0)) >> 0] = i[q >> 2];
                n = (r + 52) | 0;
                i[(r + 56) >> 2] = i[n >> 2];
                i[n >> 2] = Pe(i[q >> 2] | 0, Ce) | 0;
                n = 0;
                while (1) {
                  if ((n | 0) == (Ce | 0)) break;
                  Ae = (d + (n << 3)) | 0;
                  p[(d + ((Ce + n) << 3)) >> 3] = +p[Ae >> 3];
                  p[Ae >> 3] = +p[(ue + (n << 3)) >> 3];
                  n = (n + 1) | 0;
                }
                i[Ee >> 2] = (i[Ee >> 2] | 0) + 1;
                i[q >> 2] = (i[q >> 2] | 0) + 1;
                d = ((i[ae >> 2] | 0) + Ce) | 0;
                i[ae >> 2] = d;
                e: do {
                  if (d >>> 0 < (i[i[(r + 36) >> 2] >> 2] | 0) >>> 0) {
                    l = i[he >> 2] | 0;
                    n = i[pe >> 2] | 0;
                    a = 0;
                    while (1) {
                      if ((a | 0) == (n | 0)) break e;
                      pe = (d + a) | 0;
                      ac((l + ((pe * 1040) | 0)) | 0, 0, 1024) | 0;
                      i[(l + ((pe * 1040) | 0) + 1024) >> 2] = 0;
                      p[(l + ((pe * 1040) | 0) + 1032) >> 3] = se;
                      a = (a + 1) | 0;
                    }
                  }
                } while (0);
                i[me >> 2] = 0;
                i[(r + 64) >> 2] = 0;
                i[(r + 40) >> 2] = i[de >> 2];
              } else fe = 84;
              do {
                if ((fe | 0) == 84) {
                  n = i[me >> 2] | 0;
                  a = i[Ee >> 2] | 0;
                  if (+p[(Ae + 8) >> 3] < k + -20.0) {
                    i[((i[(q + 12) >> 2] | 0) + (a << 2)) >> 2] = n;
                    n = i[Ee >> 2] | 0;
                    pe = i[(q + 8) >> 2] | 0;
                    o[(pe + n) >> 0] = o[(pe + (n + -2)) >> 0] | 0;
                    n = (r + 52) | 0;
                    pe = i[n >> 2] | 0;
                    a = (r + 56) | 0;
                    i[n >> 2] = i[a >> 2];
                    i[a >> 2] = pe;
                    a = 0;
                    while (1) {
                      if ((a | 0) == (Ce | 0)) break;
                      he = (Ce + a) | 0;
                      dc((l + (((((i[n >> 2] | 0) + a) | 0) * 1040) | 0)) | 0, (ge + ((he * 1040) | 0)) | 0, 1040) | 0;
                      pe = (d + (a << 3)) | 0;
                      p[(d + (he << 3)) >> 3] = +p[pe >> 3];
                      p[pe >> 3] = +p[(ce + (he << 3)) >> 3];
                      pe = ((i[ae >> 2] | 0) + a) | 0;
                      ac((l + ((pe * 1040) | 0)) | 0, 0, 1024) | 0;
                      i[(l + ((pe * 1040) | 0) + 1024) >> 2] = 0;
                      p[(l + ((pe * 1040) | 0) + 1032) >> 3] = se;
                      a = (a + 1) | 0;
                    }
                    i[Ee >> 2] = (i[Ee >> 2] | 0) + 1;
                    i[me >> 2] = 0;
                    i[(r + 64) >> 2] = 0;
                    i[(r + 40) >> 2] = i[de >> 2];
                    break;
                  }
                  a = ((i[(q + 12) >> 2] | 0) + ((a + -1) << 2)) | 0;
                  i[a >> 2] = (i[a >> 2] | 0) + n;
                  n = (r + 52) | 0;
                  a = 0;
                  while (1) {
                    if ((a | 0) == (Ce | 0)) break;
                    dc((l + (((((i[n >> 2] | 0) + a) | 0) * 1040) | 0)) | 0, (ge + ((a * 1040) | 0)) | 0, 1040) | 0;
                    k = +p[(ce + (a << 3)) >> 3];
                    p[(d + (a << 3)) >> 3] = k;
                    if ((i[q >> 2] | 0) == 1) p[(d + ((Ce + a) << 3)) >> 3] = k;
                    pe = ((i[ae >> 2] | 0) + a) | 0;
                    ac((l + ((pe * 1040) | 0)) | 0, 0, 1024) | 0;
                    i[(l + ((pe * 1040) | 0) + 1024) >> 2] = 0;
                    p[(l + ((pe * 1040) | 0) + 1032) >> 3] = se;
                    a = (a + 1) | 0;
                  }
                  i[me >> 2] = 0;
                  pe = (r + 64) | 0;
                  me = ((i[pe >> 2] | 0) + 1) | 0;
                  i[pe >> 2] = me;
                  if (me >>> 0 > 1) {
                    me = (r + 40) | 0;
                    i[me >> 2] = (i[me >> 2] | 0) + (i[de >> 2] | 0);
                  }
                }
              } while (0);
              me = (e + 4) | 0;
              rt[i[me >> 2] & 1](i[le >> 2] | 0, ce);
              rt[i[me >> 2] & 1](i[le >> 2] | 0, ge);
              rt[i[me >> 2] & 1](i[le >> 2] | 0, ue);
            }
          } else {
            te = Ie;
            i[i[(te + 12) >> 2] >> 2] = n;
            o[i[(te + 8) >> 2] >> 0] = 0;
            ee = l;
            $ = 0;
            while (1) {
              if (($ | 0) == (Ce | 0)) break;
              e = i[r >> 2] | 0;
              n = (ee + (($ * 1040) | 0)) | 0;
              q = (ee + (($ * 1040) | 0) + (e << 2)) | 0;
              if (!(e & 1)) {
                k = 0.0;
                l = 0;
              } else {
                M = 0.0;
                l = 0;
                fe = 12;
              }
              while (1) {
                if ((fe | 0) == 12) {
                  fe = 0;
                  a = i[n >> 2] | 0;
                  k = +(a >>> 0);
                  if (a >>> 0 < 256) _ = +h[(19516 + (a << 2)) >> 2];
                  else _ = +Xb(k);
                  n = (n + 4) | 0;
                  k = M - k * _;
                  l = (l + a) | 0;
                }
                if (n >>> 0 >= q >>> 0) break;
                a = i[n >> 2] | 0;
                _ = +(a >>> 0);
                if (a >>> 0 < 256) M = +h[(19516 + (a << 2)) >> 2];
                else M = +Xb(_);
                n = (n + 4) | 0;
                M = k - _ * M;
                l = (l + a) | 0;
                fe = 12;
              }
              j = +(l >>> 0);
              if (!l) M = j;
              else {
                if (l >>> 0 < 256) _ = +h[(19516 + (l << 2)) >> 2];
                else _ = +Xb(j);
                M = j;
                k = k + j * _;
              }
              ie = k < M ? M : k;
              p[(d + ($ << 3)) >> 3] = ie;
              p[(d + ((Ce + $) << 3)) >> 3] = ie;
              $ = ($ + 1) | 0;
            }
            i[Ee >> 2] = (i[Ee >> 2] | 0) + 1;
            i[te >> 2] = (i[te >> 2] | 0) + 1;
            fe = (r + 48) | 0;
            d = ((i[fe >> 2] | 0) + Ce) | 0;
            i[fe >> 2] = d;
            e: do {
              if (d >>> 0 < (i[i[(r + 36) >> 2] >> 2] | 0) >>> 0) {
                l = i[he >> 2] | 0;
                n = i[pe >> 2] | 0;
                a = 0;
                while (1) {
                  if ((a | 0) == (n | 0)) break e;
                  pe = (d + a) | 0;
                  ac((l + ((pe * 1040) | 0)) | 0, 0, 1024) | 0;
                  i[(l + ((pe * 1040) | 0) + 1024) >> 2] = 0;
                  p[(l + ((pe * 1040) | 0) + 1032) >> 3] = se;
                  a = (a + 1) | 0;
                }
              }
            } while (0);
            i[me >> 2] = 0;
          }
          if (!s) {
            w = Be;
            return;
          }
          s = Ie;
          me = Pe(i[s >> 2] | 0, Ce) | 0;
          i[i[(r + 36) >> 2] >> 2] = me;
          i[(s + 4) >> 2] = i[Ee >> 2];
          w = Be;
          return;
        }
        function Vb(e, r, s, d) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          d = d | 0;
          var h = 0,
            p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0;
          se = e;
          p = n[(88430 + (((Pe(a[e >> 0] | (a[(e + 1) >> 0] << 8) | (a[(e + 2) >> 0] << 16) | (a[(e + 3) >> 0] << 24), 506832829) | 0) >>> 17) << 1)) >> 1] | 0;
          ue = (e + 1) | 0;
          ce = ue;
          w = ((p << 16) >> 16 == 0) & 1;
          h = 0;
          p = p & 65535;
          e: while (1) {
            if ((w << 24) >> 24) break;
            oe = (p + 1) | 0;
            k = (153966 + (p << 2)) | 0;
            k = l[k >> 1] | (l[(k + 2) >> 1] << 16);
            p = (k >>> 8) & 255;
            ee = k >>> 16;
            te = k & 127;
            re = a[(280786 + te) >> 0] | 0;
            $ = 1 << re;
            w = (k & 255) >>> 7;
            if ((p << 24) >> 24) {
              $ = (p << 24) >> 24 != 10;
              if (te >>> 0 > s >>> 0) {
                ae = h;
                p = oe;
                h = ae;
                continue;
              }
              q = ((i[(11272 + (te << 2)) >> 2] | 0) + (Pe(te, k >>> 16) | 0)) | 0;
              p = (280811 + q) | 0;
              t: do {
                switch ((((k >>> 8) & 255) << 24) >> 24) {
                  case 0: {
                    j = (e + te) | 0;
                    k = (e + (te + -4)) | 0;
                    M = 0;
                    p = se;
                    while (1) {
                      _ = p;
                      if (_ >>> 0 > k >>> 0) break;
                      Ae = p;
                      ae = (280811 + (q + M)) | 0;
                      if (
                        (a[Ae >> 0] | (a[(Ae + 1) >> 0] << 8) | (a[(Ae + 2) >> 0] << 16) | (a[(Ae + 3) >> 0] << 24) | 0) !=
                        (a[ae >> 0] | (a[(ae + 1) >> 0] << 8) | (a[(ae + 2) >> 0] << 16) | (a[(ae + 3) >> 0] << 24) | 0)
                      )
                        break;
                      M = (M + 4) | 0;
                      p = (_ + 4) | 0;
                    }
                    while (1) {
                      if (p >>> 0 >= j >>> 0) break;
                      if ((o[(280811 + (q + M)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                      M = (M + 1) | 0;
                      p = (p + 1) | 0;
                    }
                    if ((M | 0) != (te | 0)) {
                      ae = h;
                      p = oe;
                      h = ae;
                      continue e;
                    }
                    break;
                  }
                  case 10: {
                    p = o[p >> 0] | 0;
                    if (!(((p & 255) > 96) & ((p & 255) < 123))) {
                      ae = h;
                      p = oe;
                      h = ae;
                      continue e;
                    }
                    if ((((p & 255) ^ 32) | 0) != (a[e >> 0] | 0)) {
                      ae = h;
                      p = oe;
                      h = ae;
                      continue e;
                    }
                    j = (q + 1) | 0;
                    q = (e + te) | 0;
                    k = (e + (te + -4)) | 0;
                    M = 0;
                    p = ce;
                    while (1) {
                      _ = p;
                      if (_ >>> 0 > k >>> 0) break;
                      Ae = p;
                      ae = (280811 + (j + M)) | 0;
                      if (
                        (a[Ae >> 0] | (a[(Ae + 1) >> 0] << 8) | (a[(Ae + 2) >> 0] << 16) | (a[(Ae + 3) >> 0] << 24) | 0) !=
                        (a[ae >> 0] | (a[(ae + 1) >> 0] << 8) | (a[(ae + 2) >> 0] << 16) | (a[(ae + 3) >> 0] << 24) | 0)
                      )
                        break;
                      M = (M + 4) | 0;
                      p = (_ + 4) | 0;
                    }
                    while (1) {
                      if (p >>> 0 >= q >>> 0) break;
                      if ((o[(280811 + (j + M)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                      M = (M + 1) | 0;
                      p = (p + 1) | 0;
                    }
                    if ((M | 0) != ((te + -1) | 0)) {
                      ae = h;
                      p = oe;
                      h = ae;
                      continue e;
                    }
                    break;
                  }
                  default: {
                    k = 0;
                    while (1) {
                      if (k >>> 0 >= te >>> 0) break t;
                      p = o[(280811 + (q + k)) >> 0] | 0;
                      if (((p & 255) > 96) & ((p & 255) < 123)) {
                        if ((((p & 255) ^ 32) | 0) != (a[(e + k) >> 0] | 0)) {
                          ae = h;
                          p = oe;
                          h = ae;
                          continue e;
                        }
                      } else if ((p << 24) >> 24 != (o[(e + k) >> 0] | 0)) {
                        ae = h;
                        p = oe;
                        h = ae;
                        continue e;
                      }
                      k = (k + 1) | 0;
                    }
                  }
                }
              } while (0);
              ae = (((ee + (($ ? 44 : 9) << re)) << 5) + te) | 0;
              h = (d + (te << 2)) | 0;
              Ae = i[h >> 2] | 0;
              i[h >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
              h = (te + 1) | 0;
              if (h >>> 0 >= s >>> 0) {
                h = 1;
                p = oe;
                continue;
              }
              switch (o[(e + te) >> 0] | 0) {
                case 32: {
                  p = (((ee + (((($ & 1) << 6) | 4) << re)) << 5) + te) | 0;
                  h = (d + (h << 2)) | 0;
                  ae = i[h >> 2] | 0;
                  i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                  h = 1;
                  p = oe;
                  continue e;
                }
                case 34: {
                  Ae = (((ee + (($ ? 87 : 66) << re)) << 5) + te) | 0;
                  ae = (d + (h << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 1)) >> 0] | 0) != 62) {
                    h = 1;
                    p = oe;
                    continue e;
                  }
                  p = (((ee + (($ ? 97 : 69) << re)) << 5) + te) | 0;
                  h = (d + ((te + 2) << 2)) | 0;
                  ae = i[h >> 2] | 0;
                  i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                  h = 1;
                  p = oe;
                  continue e;
                }
                case 46: {
                  Ae = (((ee + (($ ? 101 : 79) << re)) << 5) + te) | 0;
                  ae = (d + (h << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 1)) >> 0] | 0) != 32) {
                    h = 1;
                    p = oe;
                    continue e;
                  }
                  p = (((ee + (($ ? 114 : 88) << re)) << 5) + te) | 0;
                  h = (d + ((te + 2) << 2)) | 0;
                  ae = i[h >> 2] | 0;
                  i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                  h = 1;
                  p = oe;
                  continue e;
                }
                case 44: {
                  Ae = (((ee + (($ ? 112 : 99) << re)) << 5) + te) | 0;
                  ae = (d + (h << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 1)) >> 0] | 0) != 32) {
                    h = 1;
                    p = oe;
                    continue e;
                  }
                  p = (((ee + (($ ? 107 : 58) << re)) << 5) + te) | 0;
                  h = (d + ((te + 2) << 2)) | 0;
                  ae = i[h >> 2] | 0;
                  i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                  h = 1;
                  p = oe;
                  continue e;
                }
                case 39: {
                  p = (((ee + (($ ? 94 : 74) << re)) << 5) + te) | 0;
                  h = (d + (h << 2)) | 0;
                  ae = i[h >> 2] | 0;
                  i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                  h = 1;
                  p = oe;
                  continue e;
                }
                case 40: {
                  p = (((ee + (($ ? 113 : 78) << re)) << 5) + te) | 0;
                  h = (d + (h << 2)) | 0;
                  ae = i[h >> 2] | 0;
                  i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                  h = 1;
                  p = oe;
                  continue e;
                }
                case 61:
                  switch (o[(e + (te + 1)) >> 0] | 0) {
                    case 34: {
                      p = (((ee + ((($ & 1) | 104) << re)) << 5) + te) | 0;
                      h = (d + ((te + 2) << 2)) | 0;
                      ae = i[h >> 2] | 0;
                      i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                      h = 1;
                      p = oe;
                      continue e;
                    }
                    case 39: {
                      p = (((ee + (((($ & 1) << 3) + 108) << re)) << 5) + te) | 0;
                      h = (d + ((te + 2) << 2)) | 0;
                      ae = i[h >> 2] | 0;
                      i[h >> 2] = ae >>> 0 < p >>> 0 ? ae : p;
                      h = 1;
                      p = oe;
                      continue e;
                    }
                    default: {
                      h = 1;
                      p = oe;
                      continue e;
                    }
                  }
                default: {
                  h = 1;
                  p = oe;
                  continue e;
                }
              }
            }
            j = ((i[(11272 + (te << 2)) >> 2] | 0) + (Pe(te, ee) | 0)) | 0;
            k = te >>> 0 < s >>> 0 ? te : s;
            q = (e + k) | 0;
            k = (e + (k + -4)) | 0;
            M = 0;
            p = se;
            while (1) {
              _ = p;
              if (_ >>> 0 > k >>> 0) break;
              Ae = p;
              ae = (280811 + (j + M)) | 0;
              if (
                (a[Ae >> 0] | (a[(Ae + 1) >> 0] << 8) | (a[(Ae + 2) >> 0] << 16) | (a[(Ae + 3) >> 0] << 24) | 0) !=
                (a[ae >> 0] | (a[(ae + 1) >> 0] << 8) | (a[(ae + 2) >> 0] << 16) | (a[(ae + 3) >> 0] << 24) | 0)
              )
                break;
              M = (M + 4) | 0;
              p = (_ + 4) | 0;
            }
            while (1) {
              if (p >>> 0 >= q >>> 0) break;
              if ((o[(280811 + (j + M)) >> 0] | 0) != (o[p >> 0] | 0)) break;
              M = (M + 1) | 0;
              p = (p + 1) | 0;
            }
            if ((M | 0) == (te | 0)) {
              ae = ((ee << 5) + te) | 0;
              h = (d + (te << 2)) | 0;
              Ae = i[h >> 2] | 0;
              i[h >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
              h = 1;
            }
            p = (te + -1) | 0;
            if (M >>> 0 >= p >>> 0) {
              Ae = (((ee + (12 << re)) << 5) + te) | 0;
              ae = (d + (p << 2)) | 0;
              ie = i[ae >> 2] | 0;
              i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
              ae = (te + 2) | 0;
              if (
                (((ae >>> 0 < s >>> 0 ? (o[(e + p) >> 0] | 0) == 105 : 0) ? (o[(e + te) >> 0] | 0) == 110 : 0) ? (o[(e + (te + 1)) >> 0] | 0) == 103 : 0)
                  ? (o[(e + ae) >> 0] | 0) == 32
                  : 0
              ) {
                ae = (((ee + (49 << re)) << 5) + te) | 0;
                h = (d + ((te + 3) << 2)) | 0;
                Ae = i[h >> 2] | 0;
                i[h >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                h = 1;
              } else h = 1;
            }
            if (te >>> 0 > 9) {
              p = (te + -9) | 0;
              p = p >>> 0 < r >>> 0 ? r : p;
            } else p = r;
            k = (te + -2) | 0;
            k = M >>> 0 < k >>> 0 ? M : k;
            while (1) {
              if (p >>> 0 > k >>> 0) break;
              ae = (((ee + (a[(407930 + (te - p)) >> 0] << re)) << 5) + te) | 0;
              h = (d + (p << 2)) | 0;
              Ae = i[h >> 2] | 0;
              i[h >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
              h = 1;
              p = (p + 1) | 0;
            }
            if (M >>> 0 < te >>> 0) {
              p = oe;
              continue;
            }
            p = (te + 6) | 0;
            if (p >>> 0 >= s >>> 0) {
              p = oe;
              continue;
            }
            do {
              switch (o[(e + te) >> 0] | 0) {
                case 32: {
                  Ae = (((ee + $) << 5) + te) | 0;
                  ae = (d + ((te + 1) << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  switch (o[(e + (te + 1)) >> 0] | 0) {
                    case 97:
                      switch (o[(e + (te + 2)) >> 0] | 0) {
                        case 32: {
                          ae = (((ee + (28 << re)) << 5) + te) | 0;
                          p = (d + ((te + 3) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        case 115: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (46 << re)) << 5) + te) | 0;
                          p = (d + ((te + 4) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        case 116: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (60 << re)) << 5) + te) | 0;
                          p = (d + ((te + 4) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        case 110: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 100) {
                            p = oe;
                            continue e;
                          }
                          if ((o[(e + (te + 4)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (10 << re)) << 5) + te) | 0;
                          p = (d + ((te + 5) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        default: {
                          p = oe;
                          continue e;
                        }
                      }
                    case 98: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 121) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (38 << re)) << 5) + te) | 0;
                      p = (d + ((te + 4) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 105:
                      switch (o[(e + (te + 2)) >> 0] | 0) {
                        case 110: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + ($ << 4)) << 5) + te) | 0;
                          p = (d + ((te + 4) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        case 115: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (47 << re)) << 5) + te) | 0;
                          p = (d + ((te + 4) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        default: {
                          p = oe;
                          continue e;
                        }
                      }
                    case 102: {
                      switch (o[(e + (te + 2)) >> 0] | 0) {
                        case 111: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 114) {
                            p = oe;
                            continue e;
                          }
                          if ((o[(e + (te + 4)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (25 << re)) << 5) + te) | 0;
                          p = (d + ((te + 5) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        case 114:
                          break;
                        default: {
                          p = oe;
                          continue e;
                        }
                      }
                      if ((o[(e + (te + 3)) >> 0] | 0) != 111) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 4)) >> 0] | 0) != 109) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 5)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (37 << re)) << 5) + te) | 0;
                      p = (d + (p << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 111:
                      switch (o[(e + (te + 2)) >> 0] | 0) {
                        case 102: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + ($ << 3)) << 5) + te) | 0;
                          p = (d + ((te + 4) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        case 110: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (45 << re)) << 5) + te) | 0;
                          p = (d + ((te + 4) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        default: {
                          p = oe;
                          continue e;
                        }
                      }
                    case 110: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 111) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 3)) >> 0] | 0) != 116) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 4)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (80 << re)) << 5) + te) | 0;
                      p = (d + ((te + 5) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 116: {
                      switch (o[(e + (te + 2)) >> 0] | 0) {
                        case 104:
                          break;
                        case 111: {
                          if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (17 << re)) << 5) + te) | 0;
                          p = (d + ((te + 4) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        default: {
                          p = oe;
                          continue e;
                        }
                      }
                      switch (o[(e + (te + 3)) >> 0] | 0) {
                        case 101: {
                          if ((o[(e + (te + 4)) >> 0] | 0) != 32) {
                            p = oe;
                            continue e;
                          }
                          ae = (((ee + (5 << re)) << 5) + te) | 0;
                          p = (d + ((te + 5) << 2)) | 0;
                          Ae = i[p >> 2] | 0;
                          i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                          p = oe;
                          continue e;
                        }
                        case 97:
                          break;
                        default: {
                          p = oe;
                          continue e;
                        }
                      }
                      if ((o[(e + (te + 4)) >> 0] | 0) != 116) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 5)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (29 << re)) << 5) + te) | 0;
                      p = (d + (p << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 119: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 105) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 3)) >> 0] | 0) != 116) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 4)) >> 0] | 0) != 104) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 5)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (35 << re)) << 5) + te) | 0;
                      p = (d + (p << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    default: {
                      p = oe;
                      continue e;
                    }
                  }
                }
                case 34: {
                  Ae = (((ee + (19 << re)) << 5) + te) | 0;
                  ae = (d + ((te + 1) << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 1)) >> 0] | 0) != 62) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (21 << re)) << 5) + te) | 0;
                  p = (d + ((te + 2) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 46: {
                  Ae = (((ee + (20 << re)) << 5) + te) | 0;
                  ae = (d + ((te + 1) << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 1)) >> 0] | 0) != 32) {
                    p = oe;
                    continue e;
                  }
                  Ae = (((ee + (31 << re)) << 5) + te) | 0;
                  ae = (d + ((te + 2) << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 2)) >> 0] | 0) != 84) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 3)) >> 0] | 0) != 104) {
                    p = oe;
                    continue e;
                  }
                  switch (o[(e + (te + 4)) >> 0] | 0) {
                    case 101: {
                      if ((o[(e + (te + 5)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (43 << re)) << 5) + te) | 0;
                      p = (d + (p << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 105:
                      break;
                    default: {
                      p = oe;
                      continue e;
                    }
                  }
                  if ((o[(e + (te + 5)) >> 0] | 0) != 115) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 6)) >> 0] | 0) != 32) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (75 << re)) << 5) + te) | 0;
                  p = (d + ((te + 7) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 44: {
                  Ae = (((ee + (76 << re)) << 5) + te) | 0;
                  ae = (d + ((te + 1) << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 1)) >> 0] | 0) != 32) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (14 << re)) << 5) + te) | 0;
                  p = (d + ((te + 2) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 10: {
                  Ae = (((ee + (22 << re)) << 5) + te) | 0;
                  ae = (d + ((te + 1) << 2)) | 0;
                  ie = i[ae >> 2] | 0;
                  i[ae >> 2] = ie >>> 0 < Ae >>> 0 ? ie : Ae;
                  if ((o[(e + (te + 1)) >> 0] | 0) != 9) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (50 << re)) << 5) + te) | 0;
                  p = (d + ((te + 2) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 93: {
                  ae = (((ee + (24 << re)) << 5) + te) | 0;
                  p = (d + ((te + 1) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 39: {
                  ae = (((ee + (36 << re)) << 5) + te) | 0;
                  p = (d + ((te + 1) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 58: {
                  ae = (((ee + (51 << re)) << 5) + te) | 0;
                  p = (d + ((te + 1) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 40: {
                  ae = (((ee + (57 << re)) << 5) + te) | 0;
                  p = (d + ((te + 1) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 61:
                  switch (o[(e + (te + 1)) >> 0] | 0) {
                    case 34: {
                      ae = (((ee + (70 << re)) << 5) + te) | 0;
                      p = (d + ((te + 2) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 39: {
                      ae = (((ee + (86 << re)) << 5) + te) | 0;
                      p = (d + ((te + 2) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    default: {
                      p = oe;
                      continue e;
                    }
                  }
                case 97: {
                  if ((o[(e + (te + 1)) >> 0] | 0) != 108) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (84 << re)) << 5) + te) | 0;
                  p = (d + ((te + 3) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 101:
                  switch (o[(e + (te + 1)) >> 0] | 0) {
                    case 100: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (53 << re)) << 5) + te) | 0;
                      p = (d + ((te + 3) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 114: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (82 << re)) << 5) + te) | 0;
                      p = (d + ((te + 3) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 115: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 116) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (95 << re)) << 5) + te) | 0;
                      p = (d + ((te + 4) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    default: {
                      p = oe;
                      continue e;
                    }
                  }
                case 102: {
                  if ((o[(e + (te + 1)) >> 0] | 0) != 117) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 2)) >> 0] | 0) != 108) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (90 << re)) << 5) + te) | 0;
                  p = (d + ((te + 4) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 105:
                  switch (o[(e + (te + 1)) >> 0] | 0) {
                    case 118: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 101) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (92 << re)) << 5) + te) | 0;
                      p = (d + ((te + 4) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    case 122: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 101) {
                        p = oe;
                        continue e;
                      }
                      if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (100 << re)) << 5) + te) | 0;
                      p = (d + ((te + 4) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    default: {
                      p = oe;
                      continue e;
                    }
                  }
                case 108: {
                  switch (o[(e + (te + 1)) >> 0] | 0) {
                    case 101:
                      break;
                    case 121: {
                      if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                        p = oe;
                        continue e;
                      }
                      ae = (((ee + (61 << re)) << 5) + te) | 0;
                      p = (d + ((te + 3) << 2)) | 0;
                      Ae = i[p >> 2] | 0;
                      i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                      p = oe;
                      continue e;
                    }
                    default: {
                      p = oe;
                      continue e;
                    }
                  }
                  if ((o[(e + (te + 2)) >> 0] | 0) != 115) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 3)) >> 0] | 0) != 115) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 4)) >> 0] | 0) != 32) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (93 << re)) << 5) + te) | 0;
                  p = (d + ((te + 5) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                case 111: {
                  if ((o[(e + (te + 1)) >> 0] | 0) != 117) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 2)) >> 0] | 0) != 115) {
                    p = oe;
                    continue e;
                  }
                  if ((o[(e + (te + 3)) >> 0] | 0) != 32) {
                    p = oe;
                    continue e;
                  }
                  ae = (((ee + (106 << re)) << 5) + te) | 0;
                  p = (d + ((te + 4) << 2)) | 0;
                  Ae = i[p >> 2] | 0;
                  i[p >> 2] = Ae >>> 0 < ae >>> 0 ? Ae : ae;
                  p = oe;
                  continue e;
                }
                default: {
                  p = oe;
                  continue e;
                }
              }
            } while (0);
          }
          if (s >>> 0 <= 4) {
            s = h;
            s = s & 1;
            s = (s << 24) >> 24 != 0;
            return s | 0;
          }
          ae = o[e >> 0] | 0;
          oe = (ae << 24) >> 24 == 32;
          e: do {
            switch ((ae << 24) >> 24) {
              case 32:
              case 46: {
                p =
                  n[
                    (88430 + (((Pe(a[ue >> 0] | (a[(ue + 1) >> 0] << 8) | (a[(ue + 2) >> 0] << 16) | (a[(ue + 3) >> 0] << 24), 506832829) | 0) >>> 17) << 1)) >>
                      1
                  ] | 0;
                r = (s + -1) | 0;
                ne = oe ? 6 : 32;
                ie = oe ? 2 : 77;
                Ae = oe ? 89 : 67;
                ae = (e + 2) | 0;
                w = ((p << 16) >> 16 == 0) & 1;
                p = p & 65535;
                t: while (1) {
                  if ((w << 24) >> 24) break e;
                  se = (p + 1) | 0;
                  k = (153966 + (p << 2)) | 0;
                  k = l[k >> 1] | (l[(k + 2) >> 1] << 16);
                  p = (k >>> 8) & 255;
                  ee = k >>> 16;
                  te = k & 127;
                  re = a[(280786 + te) >> 0] | 0;
                  w = (k & 255) >>> 7;
                  if (!((p << 24) >> 24)) {
                    if (te >>> 0 > r >>> 0) {
                      re = h;
                      p = se;
                      h = re;
                      continue;
                    }
                    j = ((i[(11272 + (te << 2)) >> 2] | 0) + (Pe(te, k >>> 16) | 0)) | 0;
                    q = (e + (te + 1)) | 0;
                    k = (e + (te + -3)) | 0;
                    M = 0;
                    p = ce;
                    while (1) {
                      _ = p;
                      if (_ >>> 0 > k >>> 0) break;
                      ge = p;
                      $ = (280811 + (j + M)) | 0;
                      if (
                        (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0) !=
                        (a[$ >> 0] | (a[($ + 1) >> 0] << 8) | (a[($ + 2) >> 0] << 16) | (a[($ + 3) >> 0] << 24) | 0)
                      )
                        break;
                      M = (M + 4) | 0;
                      p = (_ + 4) | 0;
                    }
                    while (1) {
                      if (p >>> 0 >= q >>> 0) break;
                      if ((o[(280811 + (j + M)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                      M = (M + 1) | 0;
                      p = (p + 1) | 0;
                    }
                    if ((M | 0) != (te | 0)) {
                      ge = h;
                      p = se;
                      h = ge;
                      continue;
                    }
                    h = (te + 1) | 0;
                    ge = (((ee + (ne << re)) << 5) + te) | 0;
                    p = (d + (h << 2)) | 0;
                    $ = i[p >> 2] | 0;
                    i[p >> 2] = $ >>> 0 < ge >>> 0 ? $ : ge;
                    p = (te + 2) | 0;
                    if (p >>> 0 >= s >>> 0) {
                      h = 1;
                      p = se;
                      continue;
                    }
                    h = o[(e + h) >> 0] | 0;
                    switch ((h << 24) >> 24) {
                      case 32: {
                        ge = (((ee + (ie << re)) << 5) + te) | 0;
                        h = (d + (p << 2)) | 0;
                        p = i[h >> 2] | 0;
                        i[h >> 2] = p >>> 0 < ge >>> 0 ? p : ge;
                        h = 1;
                        p = se;
                        continue t;
                      }
                      case 40: {
                        ge = (((ee + (Ae << re)) << 5) + te) | 0;
                        h = (d + (p << 2)) | 0;
                        p = i[h >> 2] | 0;
                        i[h >> 2] = p >>> 0 < ge >>> 0 ? p : ge;
                        h = 1;
                        p = se;
                        continue t;
                      }
                      default: {
                        if (!oe) {
                          h = 1;
                          p = se;
                          continue t;
                        }
                        switch ((h << 24) >> 24) {
                          case 44: {
                            $ = (((ee + (103 << re)) << 5) + te) | 0;
                            ge = (d + (p << 2)) | 0;
                            q = i[ge >> 2] | 0;
                            i[ge >> 2] = q >>> 0 < $ >>> 0 ? q : $;
                            if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                              h = 1;
                              p = se;
                              continue t;
                            }
                            p = (((ee + (33 << re)) << 5) + te) | 0;
                            h = (d + ((te + 3) << 2)) | 0;
                            ge = i[h >> 2] | 0;
                            i[h >> 2] = ge >>> 0 < p >>> 0 ? ge : p;
                            h = 1;
                            p = se;
                            continue t;
                          }
                          case 46: {
                            $ = (((ee + (71 << re)) << 5) + te) | 0;
                            ge = (d + (p << 2)) | 0;
                            q = i[ge >> 2] | 0;
                            i[ge >> 2] = q >>> 0 < $ >>> 0 ? q : $;
                            if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                              h = 1;
                              p = se;
                              continue t;
                            }
                            p = (((ee + (52 << re)) << 5) + te) | 0;
                            h = (d + ((te + 3) << 2)) | 0;
                            ge = i[h >> 2] | 0;
                            i[h >> 2] = ge >>> 0 < p >>> 0 ? ge : p;
                            h = 1;
                            p = se;
                            continue t;
                          }
                          case 61:
                            switch (o[(e + (te + 2)) >> 0] | 0) {
                              case 34: {
                                p = (((ee + (81 << re)) << 5) + te) | 0;
                                h = (d + ((te + 3) << 2)) | 0;
                                ge = i[h >> 2] | 0;
                                i[h >> 2] = ge >>> 0 < p >>> 0 ? ge : p;
                                h = 1;
                                p = se;
                                continue t;
                              }
                              case 39: {
                                p = (((ee + (98 << re)) << 5) + te) | 0;
                                h = (d + ((te + 3) << 2)) | 0;
                                ge = i[h >> 2] | 0;
                                i[h >> 2] = ge >>> 0 < p >>> 0 ? ge : p;
                                h = 1;
                                p = se;
                                continue t;
                              }
                              default: {
                                h = 1;
                                p = se;
                                continue t;
                              }
                            }
                          default: {
                            h = 1;
                            p = se;
                            continue t;
                          }
                        }
                      }
                    }
                  }
                  if (!oe) {
                    ge = h;
                    p = se;
                    h = ge;
                    continue;
                  }
                  $ = (p << 24) >> 24 != 10;
                  if (te >>> 0 > r >>> 0) {
                    ge = h;
                    p = se;
                    h = ge;
                    continue;
                  }
                  q = ((i[(11272 + (te << 2)) >> 2] | 0) + (Pe(te, k >>> 16) | 0)) | 0;
                  p = (280811 + q) | 0;
                  r: do {
                    switch ((((k >>> 8) & 255) << 24) >> 24) {
                      case 0: {
                        j = (e + (te + 1)) | 0;
                        k = (e + (te + -3)) | 0;
                        M = 0;
                        p = ce;
                        while (1) {
                          _ = p;
                          if (_ >>> 0 > k >>> 0) break;
                          de = p;
                          ge = (280811 + (q + M)) | 0;
                          if (
                            (a[de >> 0] | (a[(de + 1) >> 0] << 8) | (a[(de + 2) >> 0] << 16) | (a[(de + 3) >> 0] << 24) | 0) !=
                            (a[ge >> 0] | (a[(ge + 1) >> 0] << 8) | (a[(ge + 2) >> 0] << 16) | (a[(ge + 3) >> 0] << 24) | 0)
                          )
                            break;
                          M = (M + 4) | 0;
                          p = (_ + 4) | 0;
                        }
                        while (1) {
                          if (p >>> 0 >= j >>> 0) break;
                          if ((o[(280811 + (q + M)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                          M = (M + 1) | 0;
                          p = (p + 1) | 0;
                        }
                        if ((M | 0) != (te | 0)) {
                          de = h;
                          p = se;
                          h = de;
                          continue t;
                        }
                        break;
                      }
                      case 10: {
                        p = o[p >> 0] | 0;
                        if (!(((p & 255) > 96) & ((p & 255) < 123))) {
                          de = h;
                          p = se;
                          h = de;
                          continue t;
                        }
                        if ((((p & 255) ^ 32) | 0) != (a[ue >> 0] | 0)) {
                          de = h;
                          p = se;
                          h = de;
                          continue t;
                        }
                        M = (q + 1) | 0;
                        j = (e + (te + 1)) | 0;
                        k = (e + (te + -3)) | 0;
                        _ = 0;
                        p = ae;
                        while (1) {
                          if (p >>> 0 > k >>> 0) break;
                          de = (280811 + (M + _)) | 0;
                          if (
                            (a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24) | 0) !=
                            (a[de >> 0] | (a[(de + 1) >> 0] << 8) | (a[(de + 2) >> 0] << 16) | (a[(de + 3) >> 0] << 24) | 0)
                          )
                            break;
                          _ = (_ + 4) | 0;
                          p = (p + 4) | 0;
                        }
                        while (1) {
                          if (p >>> 0 >= j >>> 0) break;
                          if ((o[(280811 + (M + _)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                          _ = (_ + 1) | 0;
                          p = (p + 1) | 0;
                        }
                        if ((_ | 0) != ((te + -1) | 0)) {
                          de = h;
                          p = se;
                          h = de;
                          continue t;
                        }
                        break;
                      }
                      default: {
                        k = 0;
                        while (1) {
                          if (k >>> 0 >= te >>> 0) break r;
                          p = o[(280811 + (q + k)) >> 0] | 0;
                          if (((p & 255) > 96) & ((p & 255) < 123)) {
                            if ((((p & 255) ^ 32) | 0) != (a[(e + (k + 1)) >> 0] | 0)) {
                              de = h;
                              p = se;
                              h = de;
                              continue t;
                            }
                          } else if ((p << 24) >> 24 != (o[(e + (k + 1)) >> 0] | 0)) {
                            de = h;
                            p = se;
                            h = de;
                            continue t;
                          }
                          k = (k + 1) | 0;
                        }
                      }
                    }
                  } while (0);
                  h = (te + 1) | 0;
                  de = (((ee + (($ ? 85 : 30) << re)) << 5) + te) | 0;
                  p = (d + (h << 2)) | 0;
                  ge = i[p >> 2] | 0;
                  i[p >> 2] = ge >>> 0 < de >>> 0 ? ge : de;
                  p = (te + 2) | 0;
                  if (p >>> 0 >= s >>> 0) {
                    h = 1;
                    p = se;
                    continue;
                  }
                  switch (o[(e + h) >> 0] | 0) {
                    case 32: {
                      de = (((ee + (($ ? 83 : 15) << re)) << 5) + te) | 0;
                      h = (d + (p << 2)) | 0;
                      p = i[h >> 2] | 0;
                      i[h >> 2] = p >>> 0 < de >>> 0 ? p : de;
                      h = 1;
                      p = se;
                      continue t;
                    }
                    case 44: {
                      if (!$) {
                        ge = (((ee + (109 << re)) << 5) + te) | 0;
                        de = (d + (p << 2)) | 0;
                        q = i[de >> 2] | 0;
                        i[de >> 2] = q >>> 0 < ge >>> 0 ? q : ge;
                      }
                      if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                        h = 1;
                        p = se;
                        continue t;
                      }
                      p = (((ee + (($ ? 111 : 65) << re)) << 5) + te) | 0;
                      h = (d + ((te + 3) << 2)) | 0;
                      de = i[h >> 2] | 0;
                      i[h >> 2] = de >>> 0 < p >>> 0 ? de : p;
                      h = 1;
                      p = se;
                      continue t;
                    }
                    case 46: {
                      ge = (((ee + (($ ? 115 : 96) << re)) << 5) + te) | 0;
                      de = (d + (p << 2)) | 0;
                      q = i[de >> 2] | 0;
                      i[de >> 2] = q >>> 0 < ge >>> 0 ? q : ge;
                      if ((o[(e + (te + 2)) >> 0] | 0) != 32) {
                        h = 1;
                        p = se;
                        continue t;
                      }
                      p = (((ee + (($ ? 117 : 91) << re)) << 5) + te) | 0;
                      h = (d + ((te + 3) << 2)) | 0;
                      de = i[h >> 2] | 0;
                      i[h >> 2] = de >>> 0 < p >>> 0 ? de : p;
                      h = 1;
                      p = se;
                      continue t;
                    }
                    case 61:
                      switch (o[(e + (te + 2)) >> 0] | 0) {
                        case 34: {
                          p = (((ee + ((((($ & 1) << 3) ^ 8) + 110) << re)) << 5) + te) | 0;
                          h = (d + ((te + 3) << 2)) | 0;
                          de = i[h >> 2] | 0;
                          i[h >> 2] = de >>> 0 < p >>> 0 ? de : p;
                          h = 1;
                          p = se;
                          continue t;
                        }
                        case 39: {
                          p = (((ee + ((120 - ($ & 1)) << re)) << 5) + te) | 0;
                          h = (d + ((te + 3) << 2)) | 0;
                          de = i[h >> 2] | 0;
                          i[h >> 2] = de >>> 0 < p >>> 0 ? de : p;
                          h = 1;
                          p = se;
                          continue t;
                        }
                        default: {
                          h = 1;
                          p = se;
                          continue t;
                        }
                      }
                    default: {
                      h = 1;
                      p = se;
                      continue t;
                    }
                  }
                }
              }
              default: {
              }
            }
          } while (0);
          if (s >>> 0 <= 5) {
            de = h;
            de = de & 1;
            de = (de << 24) >> 24 != 0;
            return de | 0;
          }
          p = o[ue >> 0] | 0;
          w = o[e >> 0] | 0;
          e: do {
            if ((p << 24) >> 24 == 32) {
              switch ((w << 24) >> 24) {
                case 44:
                case 115:
                case 101: {
                  le = 241;
                  break e;
                }
                case -62:
                  break;
                default:
                  break e;
              }
              if ((p << 24) >> 24 == -96) le = 241;
            } else if (((w << 24) >> 24 == -62) & ((p << 24) >> 24 == -96)) le = 241;
          } while (0);
          e: do {
            if ((le | 0) == 241) {
              re = (e + 2) | 0;
              p =
                n[
                  (88430 + (((Pe(a[re >> 0] | (a[(re + 1) >> 0] << 8) | (a[(re + 2) >> 0] << 16) | (a[(re + 3) >> 0] << 24), 506832829) | 0) >>> 17) << 1)) >> 1
                ] | 0;
              se = (s + -2) | 0;
              w = ((p << 16) >> 16 == 0) & 1;
              p = p & 65535;
              while (1) {
                if ((w << 24) >> 24) break e;
                te = (p + 1) | 0;
                p = (153966 + (p << 2)) | 0;
                p = l[p >> 1] | (l[(p + 2) >> 1] << 16);
                q = p >>> 16;
                $ = p & 127;
                ee = a[(280786 + $) >> 0] | 0;
                w = (p & 255) >>> 7;
                if ((((p & 65280) | 0) != 0) | ($ >>> 0 > se >>> 0)) {
                  de = h;
                  p = te;
                  h = de;
                  continue;
                }
                M = ((i[(11272 + ($ << 2)) >> 2] | 0) + (Pe($, p >>> 16) | 0)) | 0;
                j = (e + ($ + 2)) | 0;
                k = (e + ($ + -2)) | 0;
                _ = 0;
                p = re;
                while (1) {
                  if (p >>> 0 > k >>> 0) break;
                  de = (280811 + (M + _)) | 0;
                  if (
                    (a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24) | 0) !=
                    (a[de >> 0] | (a[(de + 1) >> 0] << 8) | (a[(de + 2) >> 0] << 16) | (a[(de + 3) >> 0] << 24) | 0)
                  )
                    break;
                  _ = (_ + 4) | 0;
                  p = (p + 4) | 0;
                }
                while (1) {
                  if (p >>> 0 >= j >>> 0) break;
                  if ((o[(280811 + (M + _)) >> 0] | 0) != (o[p >> 0] | 0)) break;
                  _ = (_ + 1) | 0;
                  p = (p + 1) | 0;
                }
                if ((_ | 0) != ($ | 0)) {
                  de = h;
                  p = te;
                  h = de;
                  continue;
                }
                p = o[e >> 0] | 0;
                if ((p << 24) >> 24 == -62) {
                  p = (((q + (102 << ee)) << 5) + $) | 0;
                  h = (d + (($ + 2) << 2)) | 0;
                  de = i[h >> 2] | 0;
                  i[h >> 2] = de >>> 0 < p >>> 0 ? de : p;
                  h = 1;
                  p = te;
                  continue;
                }
                k = ($ + 2) | 0;
                if (k >>> 0 >= s >>> 0) {
                  de = h;
                  p = te;
                  h = de;
                  continue;
                }
                if ((o[(e + k) >> 0] | 0) != 32) {
                  de = h;
                  p = te;
                  h = de;
                  continue;
                }
                p = (((q + (((p << 24) >> 24 == 101 ? 18 : (p << 24) >> 24 == 115 ? 7 : 13) << ee)) << 5) + $) | 0;
                h = (d + (($ + 3) << 2)) | 0;
                de = i[h >> 2] | 0;
                i[h >> 2] = de >>> 0 < p >>> 0 ? de : p;
                h = 1;
                p = te;
              }
            }
          } while (0);
          if (s >>> 0 <= 8) {
            de = h;
            de = de & 1;
            de = (de << 24) >> 24 != 0;
            return de | 0;
          }
          switch (o[e >> 0] | 0) {
            case 32: {
              if ((o[ue >> 0] | 0) != 116) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              if ((o[(e + 2) >> 0] | 0) != 104) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              if ((o[(e + 3) >> 0] | 0) != 101) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              if ((o[(e + 4) >> 0] | 0) != 32) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              break;
            }
            case 46: {
              if ((o[ue >> 0] | 0) != 99) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              if ((o[(e + 2) >> 0] | 0) != 111) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              if ((o[(e + 3) >> 0] | 0) != 109) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              if ((o[(e + 4) >> 0] | 0) != 47) {
                de = h;
                de = de & 1;
                de = (de << 24) >> 24 != 0;
                return de | 0;
              }
              break;
            }
            default: {
              de = h;
              de = de & 1;
              de = (de << 24) >> 24 != 0;
              return de | 0;
            }
          }
          re = (e + 5) | 0;
          p =
            n[(88430 + (((Pe(a[re >> 0] | (a[(re + 1) >> 0] << 8) | (a[(re + 2) >> 0] << 16) | (a[(re + 3) >> 0] << 24), 506832829) | 0) >>> 17) << 1)) >> 1] |
            0;
          se = (s + -5) | 0;
          w = ((p << 16) >> 16 == 0) & 1;
          p = p & 65535;
          while (1) {
            if ((w << 24) >> 24) break;
            te = (p + 1) | 0;
            p = (153966 + (p << 2)) | 0;
            p = l[p >> 1] | (l[(p + 2) >> 1] << 16);
            q = p >>> 16;
            $ = p & 127;
            ee = a[(280786 + $) >> 0] | 0;
            w = (p & 255) >>> 7;
            if ((((p & 65280) | 0) != 0) | ($ >>> 0 > se >>> 0)) {
              de = h;
              p = te;
              h = de;
              continue;
            }
            M = ((i[(11272 + ($ << 2)) >> 2] | 0) + (Pe($, p >>> 16) | 0)) | 0;
            j = (e + ($ + 5)) | 0;
            k = (e + ($ + 1)) | 0;
            _ = 0;
            p = re;
            while (1) {
              if (p >>> 0 > k >>> 0) break;
              de = (280811 + (M + _)) | 0;
              if (
                (a[p >> 0] | (a[(p + 1) >> 0] << 8) | (a[(p + 2) >> 0] << 16) | (a[(p + 3) >> 0] << 24) | 0) !=
                (a[de >> 0] | (a[(de + 1) >> 0] << 8) | (a[(de + 2) >> 0] << 16) | (a[(de + 3) >> 0] << 24) | 0)
              )
                break;
              _ = (_ + 4) | 0;
              p = (p + 4) | 0;
            }
            while (1) {
              if (p >>> 0 >= j >>> 0) break;
              if ((o[(280811 + (M + _)) >> 0] | 0) != (o[p >> 0] | 0)) break;
              _ = (_ + 1) | 0;
              p = (p + 1) | 0;
            }
            if ((_ | 0) != ($ | 0)) {
              de = h;
              p = te;
              h = de;
              continue;
            }
            h = ($ + 5) | 0;
            ge = (((q + (((o[e >> 0] | 0) == 32 ? 41 : 72) << ee)) << 5) + $) | 0;
            de = (d + (h << 2)) | 0;
            ue = i[de >> 2] | 0;
            i[de >> 2] = ue >>> 0 < ge >>> 0 ? ue : ge;
            if (h >>> 0 >= s >>> 0) {
              h = 1;
              p = te;
              continue;
            }
            if (!(((o[e >> 0] | 0) == 32) & ((($ + 8) | 0) >>> 0 < s >>> 0))) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + h) >> 0] | 0) != 32) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + ($ + 6)) >> 0] | 0) != 111) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + ($ + 7)) >> 0] | 0) != 102) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + ($ + 8)) >> 0] | 0) != 32) {
              h = 1;
              p = te;
              continue;
            }
            ge = (((q + (62 << ee)) << 5) + $) | 0;
            de = (d + (($ + 9) << 2)) | 0;
            ue = i[de >> 2] | 0;
            i[de >> 2] = ue >>> 0 < ge >>> 0 ? ue : ge;
            if ((($ + 12) | 0) >>> 0 >= s >>> 0) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + ($ + 9)) >> 0] | 0) != 116) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + ($ + 10)) >> 0] | 0) != 104) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + ($ + 11)) >> 0] | 0) != 101) {
              h = 1;
              p = te;
              continue;
            }
            if ((o[(e + ($ + 12)) >> 0] | 0) != 32) {
              h = 1;
              p = te;
              continue;
            }
            p = (((q + (73 << ee)) << 5) + $) | 0;
            h = (d + (($ + 13) << 2)) | 0;
            de = i[h >> 2] | 0;
            i[h >> 2] = de >>> 0 < p >>> 0 ? de : p;
            h = 1;
            p = te;
          }
          de = h & 1;
          de = (de << 24) >> 24 != 0;
          return de | 0;
        }
        function Wb(e, r, s, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          n = n | 0;
          var i = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0;
          i = 0;
          $ = 0;
          e: while (1) {
            t: do {
              if (i >>> 0 >= n >>> 0) break e;
              a = (i + r) & s;
              l = (n - i) | 0;
              d = o[(e + a) >> 0] | 0;
              if (!(((d << 24) >> 24 <= -1) | ((d << 24) >> 24 == 0))) {
                a = 1;
                ee = 20;
                break;
              }
              do {
                if (l >>> 0 > 1) {
                  if (
                    (((d & -32) << 24) >> 24 == -64 ? ((h = o[(e + (a + 1)) >> 0] | 0), ((h & -64) << 24) >> 24 == -128) : 0)
                      ? ((p = (((d & 255) << 6) & 1984) | (h & 63)), p >>> 0 > 127)
                      : 0
                  ) {
                    l = 2;
                    a = p;
                    break;
                  }
                  if (l >>> 0 > 2) {
                    if (
                      (
                        (((d & -16) << 24) >> 24 == -32 ? ((w = o[(e + (a + 1)) >> 0] | 0), ((w & -64) << 24) >> 24 == -128) : 0)
                          ? ((k = o[(e + (a + 2)) >> 0] | 0), ((k & -64) << 24) >> 24 == -128)
                          : 0
                      )
                        ? ((_ = (((d & 255) << 12) & 61440) | (((w & 255) << 6) & 4032) | (k & 63)), _ >>> 0 > 2047)
                        : 0
                    ) {
                      l = 3;
                      a = _;
                      break;
                    }
                    if (
                      (
                        (
                          ((l >>> 0 > 3) & (((d & -8) << 24) >> 24 == -16) ? ((M = o[(e + (a + 1)) >> 0] | 0), ((M & -64) << 24) >> 24 == -128) : 0)
                            ? ((j = o[(e + (a + 2)) >> 0] | 0), ((j & -64) << 24) >> 24 == -128)
                            : 0
                        )
                          ? ((q = o[(e + (a + 3)) >> 0] | 0), ((q & -64) << 24) >> 24 == -128)
                          : 0
                      )
                        ? ((ee = (((d & 255) << 18) & 1835008) | (((M & 255) << 12) & 258048) | (((j & 255) << 6) & 4032) | (q & 63)),
                          (ee >>> 0 > 65535) & (ee >>> 0 < 1114112))
                        : 0
                    ) {
                      a = 4;
                      ee = 20;
                      break t;
                    } else ee = 19;
                  } else ee = 19;
                } else ee = 19;
              } while (0);
              if ((ee | 0) == 19) {
                ee = 0;
                l = 1;
                a = (d & 255) | 1114112;
              }
              i = (i + l) | 0;
            } while ((a | 0) >= 1114112);
            if ((ee | 0) == 20) {
              ee = 0;
              l = a;
              i = (i + a) | 0;
            }
            $ = ($ + l) | 0;
          }
          return (+($ >>> 0) > +(n >>> 0) * 0.75) | 0;
        }
        function Xb(e) {
          e = +e;
          var r = 0,
            s = 0,
            o = 0,
            n = 0,
            a = 0.0,
            l = 0.0,
            d = 0.0,
            h = 0.0,
            w = 0.0;
          p[_ >> 3] = e;
          s = i[_ >> 2] | 0;
          r = i[(_ + 4) >> 2] | 0;
          o = (r | 0) < 0;
          do {
            if (o | (r >>> 0 < 1048576)) {
              if (((s | 0) == 0) & (((r & 2147483647) | 0) == 0)) {
                e = -1.0 / (e * e);
                break;
              }
              if (o) {
                e = (e - e) / 0.0;
                break;
              } else {
                p[_ >> 3] = e * 18014398509481984.0;
                r = i[(_ + 4) >> 2] | 0;
                o = i[_ >> 2] | 0;
                s = -1077;
                n = 9;
                break;
              }
            } else if (r >>> 0 <= 2146435071)
              if (((s | 0) == 0) & (0 == 0) & ((r | 0) == 1072693248)) e = 0.0;
              else {
                o = s;
                s = -1023;
                n = 9;
              }
          } while (0);
          if ((n | 0) == 9) {
            n = (r + 614242) | 0;
            i[_ >> 2] = o;
            i[(_ + 4) >> 2] = (n & 1048575) + 1072079006;
            h = +p[_ >> 3] + -1.0;
            e = h * (h * 0.5);
            w = h / (h + 2.0);
            l = w * w;
            d = l * l;
            p[_ >> 3] = h - e;
            o = i[(_ + 4) >> 2] | 0;
            i[_ >> 2] = 0;
            i[(_ + 4) >> 2] = o;
            a = +p[_ >> 3];
            e =
              w *
                (e +
                  (d * (d * (d * 0.15313837699209373 + 0.22222198432149784) + 0.3999999999940942) +
                    l * (d * (d * (d * 0.14798198605116586 + 0.1818357216161805) + 0.2857142874366239) + 0.6666666666666735))) +
              (h - a - e);
            h = a * 1.4426950407214463;
            d = +((s + (n >>> 20)) | 0);
            l = d + h;
            e = l + (h + (d - l) + (e * 1.4426950407214463 + (a + e) * 1.6751713164886512e-10));
          }
          return +e;
        }
        function Yb(e) {
          e = e | 0;
          var r = 0,
            s = 0,
            o = 0,
            n = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0,
            se = 0,
            oe = 0,
            ne = 0,
            ie = 0,
            Ae = 0,
            ae = 0,
            ce = 0,
            le = 0,
            ue = 0,
            ge = 0,
            de = 0,
            fe = 0,
            he = 0,
            pe = 0,
            Ee = 0,
            Ie = 0,
            Ce = 0;
          do {
            if (e >>> 0 < 245) {
              M = e >>> 0 < 11 ? 16 : (e + 11) & -8;
              e = M >>> 3;
              d = i[5147] | 0;
              r = d >>> e;
              if (r & 3) {
                r = (((r & 1) ^ 1) + e) | 0;
                o = r << 1;
                s = (20628 + (o << 2)) | 0;
                o = (20628 + ((o + 2) << 2)) | 0;
                n = i[o >> 2] | 0;
                a = (n + 8) | 0;
                l = i[a >> 2] | 0;
                do {
                  if ((s | 0) != (l | 0)) {
                    if (l >>> 0 < (i[5151] | 0) >>> 0) qe();
                    e = (l + 12) | 0;
                    if ((i[e >> 2] | 0) == (n | 0)) {
                      i[e >> 2] = s;
                      i[o >> 2] = l;
                      break;
                    } else qe();
                  } else i[5147] = d & ~(1 << r);
                } while (0);
                Ce = r << 3;
                i[(n + 4) >> 2] = Ce | 3;
                Ce = (n + (Ce | 4)) | 0;
                i[Ce >> 2] = i[Ce >> 2] | 1;
                Ce = a;
                return Ce | 0;
              }
              l = i[5149] | 0;
              if (M >>> 0 > l >>> 0) {
                if (r) {
                  o = 2 << e;
                  o = (r << e) & (o | (0 - o));
                  o = ((o & (0 - o)) + -1) | 0;
                  h = (o >>> 12) & 16;
                  o = o >>> h;
                  n = (o >>> 5) & 8;
                  o = o >>> n;
                  a = (o >>> 2) & 4;
                  o = o >>> a;
                  s = (o >>> 1) & 2;
                  o = o >>> s;
                  r = (o >>> 1) & 1;
                  r = ((n | h | a | s | r) + (o >>> r)) | 0;
                  o = r << 1;
                  s = (20628 + (o << 2)) | 0;
                  o = (20628 + ((o + 2) << 2)) | 0;
                  a = i[o >> 2] | 0;
                  h = (a + 8) | 0;
                  n = i[h >> 2] | 0;
                  do {
                    if ((s | 0) != (n | 0)) {
                      if (n >>> 0 < (i[5151] | 0) >>> 0) qe();
                      e = (n + 12) | 0;
                      if ((i[e >> 2] | 0) == (a | 0)) {
                        i[e >> 2] = s;
                        i[o >> 2] = n;
                        p = i[5149] | 0;
                        break;
                      } else qe();
                    } else {
                      i[5147] = d & ~(1 << r);
                      p = l;
                    }
                  } while (0);
                  Ce = r << 3;
                  l = (Ce - M) | 0;
                  i[(a + 4) >> 2] = M | 3;
                  d = (a + M) | 0;
                  i[(a + (M | 4)) >> 2] = l | 1;
                  i[(a + Ce) >> 2] = l;
                  if (p) {
                    n = i[5152] | 0;
                    s = p >>> 3;
                    e = s << 1;
                    o = (20628 + (e << 2)) | 0;
                    r = i[5147] | 0;
                    s = 1 << s;
                    if (r & s) {
                      r = (20628 + ((e + 2) << 2)) | 0;
                      e = i[r >> 2] | 0;
                      if (e >>> 0 < (i[5151] | 0) >>> 0) qe();
                      else {
                        w = r;
                        k = e;
                      }
                    } else {
                      i[5147] = r | s;
                      w = (20628 + ((e + 2) << 2)) | 0;
                      k = o;
                    }
                    i[w >> 2] = n;
                    i[(k + 12) >> 2] = n;
                    i[(n + 8) >> 2] = k;
                    i[(n + 12) >> 2] = o;
                  }
                  i[5149] = l;
                  i[5152] = d;
                  Ce = h;
                  return Ce | 0;
                }
                e = i[5148] | 0;
                if (e) {
                  d = ((e & (0 - e)) + -1) | 0;
                  Ie = (d >>> 12) & 16;
                  d = d >>> Ie;
                  Ee = (d >>> 5) & 8;
                  d = d >>> Ee;
                  Ce = (d >>> 2) & 4;
                  d = d >>> Ce;
                  r = (d >>> 1) & 2;
                  d = d >>> r;
                  h = (d >>> 1) & 1;
                  h = i[(20892 + (((Ee | Ie | Ce | r | h) + (d >>> h)) << 2)) >> 2] | 0;
                  d = ((i[(h + 4) >> 2] & -8) - M) | 0;
                  r = h;
                  while (1) {
                    e = i[(r + 16) >> 2] | 0;
                    if (!e) {
                      e = i[(r + 20) >> 2] | 0;
                      if (!e) break;
                    }
                    r = ((i[(e + 4) >> 2] & -8) - M) | 0;
                    Ce = r >>> 0 < d >>> 0;
                    d = Ce ? r : d;
                    r = e;
                    h = Ce ? e : h;
                  }
                  n = i[5151] | 0;
                  if (h >>> 0 < n >>> 0) qe();
                  l = (h + M) | 0;
                  if (h >>> 0 >= l >>> 0) qe();
                  a = i[(h + 24) >> 2] | 0;
                  s = i[(h + 12) >> 2] | 0;
                  do {
                    if ((s | 0) == (h | 0)) {
                      r = (h + 20) | 0;
                      e = i[r >> 2] | 0;
                      if (!e) {
                        r = (h + 16) | 0;
                        e = i[r >> 2] | 0;
                        if (!e) {
                          _ = 0;
                          break;
                        }
                      }
                      while (1) {
                        s = (e + 20) | 0;
                        o = i[s >> 2] | 0;
                        if (o) {
                          e = o;
                          r = s;
                          continue;
                        }
                        s = (e + 16) | 0;
                        o = i[s >> 2] | 0;
                        if (!o) break;
                        else {
                          e = o;
                          r = s;
                        }
                      }
                      if (r >>> 0 < n >>> 0) qe();
                      else {
                        i[r >> 2] = 0;
                        _ = e;
                        break;
                      }
                    } else {
                      o = i[(h + 8) >> 2] | 0;
                      if (o >>> 0 < n >>> 0) qe();
                      e = (o + 12) | 0;
                      if ((i[e >> 2] | 0) != (h | 0)) qe();
                      r = (s + 8) | 0;
                      if ((i[r >> 2] | 0) == (h | 0)) {
                        i[e >> 2] = s;
                        i[r >> 2] = o;
                        _ = s;
                        break;
                      } else qe();
                    }
                  } while (0);
                  do {
                    if (a) {
                      e = i[(h + 28) >> 2] | 0;
                      r = (20892 + (e << 2)) | 0;
                      if ((h | 0) == (i[r >> 2] | 0)) {
                        i[r >> 2] = _;
                        if (!_) {
                          i[5148] = i[5148] & ~(1 << e);
                          break;
                        }
                      } else {
                        if (a >>> 0 < (i[5151] | 0) >>> 0) qe();
                        e = (a + 16) | 0;
                        if ((i[e >> 2] | 0) == (h | 0)) i[e >> 2] = _;
                        else i[(a + 20) >> 2] = _;
                        if (!_) break;
                      }
                      r = i[5151] | 0;
                      if (_ >>> 0 < r >>> 0) qe();
                      i[(_ + 24) >> 2] = a;
                      e = i[(h + 16) >> 2] | 0;
                      do {
                        if (e)
                          if (e >>> 0 < r >>> 0) qe();
                          else {
                            i[(_ + 16) >> 2] = e;
                            i[(e + 24) >> 2] = _;
                            break;
                          }
                      } while (0);
                      e = i[(h + 20) >> 2] | 0;
                      if (e)
                        if (e >>> 0 < (i[5151] | 0) >>> 0) qe();
                        else {
                          i[(_ + 20) >> 2] = e;
                          i[(e + 24) >> 2] = _;
                          break;
                        }
                    }
                  } while (0);
                  if (d >>> 0 < 16) {
                    Ce = (d + M) | 0;
                    i[(h + 4) >> 2] = Ce | 3;
                    Ce = (h + (Ce + 4)) | 0;
                    i[Ce >> 2] = i[Ce >> 2] | 1;
                  } else {
                    i[(h + 4) >> 2] = M | 3;
                    i[(h + (M | 4)) >> 2] = d | 1;
                    i[(h + (d + M)) >> 2] = d;
                    e = i[5149] | 0;
                    if (e) {
                      n = i[5152] | 0;
                      s = e >>> 3;
                      e = s << 1;
                      o = (20628 + (e << 2)) | 0;
                      r = i[5147] | 0;
                      s = 1 << s;
                      if (r & s) {
                        e = (20628 + ((e + 2) << 2)) | 0;
                        r = i[e >> 2] | 0;
                        if (r >>> 0 < (i[5151] | 0) >>> 0) qe();
                        else {
                          j = e;
                          q = r;
                        }
                      } else {
                        i[5147] = r | s;
                        j = (20628 + ((e + 2) << 2)) | 0;
                        q = o;
                      }
                      i[j >> 2] = n;
                      i[(q + 12) >> 2] = n;
                      i[(n + 8) >> 2] = q;
                      i[(n + 12) >> 2] = o;
                    }
                    i[5149] = d;
                    i[5152] = l;
                  }
                  Ce = (h + 8) | 0;
                  return Ce | 0;
                }
              }
            } else if (e >>> 0 <= 4294967231) {
              e = (e + 11) | 0;
              M = e & -8;
              h = i[5148] | 0;
              if (h) {
                r = (0 - M) | 0;
                e = e >>> 8;
                if (e)
                  if (M >>> 0 > 16777215) d = 31;
                  else {
                    q = (((e + 1048320) | 0) >>> 16) & 8;
                    ne = e << q;
                    j = (((ne + 520192) | 0) >>> 16) & 4;
                    ne = ne << j;
                    d = (((ne + 245760) | 0) >>> 16) & 2;
                    d = (14 - (j | q | d) + ((ne << d) >>> 15)) | 0;
                    d = ((M >>> ((d + 7) | 0)) & 1) | (d << 1);
                  }
                else d = 0;
                e = i[(20892 + (d << 2)) >> 2] | 0;
                e: do {
                  if (!e) {
                    s = 0;
                    e = 0;
                    ne = 86;
                  } else {
                    n = r;
                    s = 0;
                    a = M << ((d | 0) == 31 ? 0 : (25 - (d >>> 1)) | 0);
                    l = e;
                    e = 0;
                    while (1) {
                      o = i[(l + 4) >> 2] & -8;
                      r = (o - M) | 0;
                      if (r >>> 0 < n >>> 0)
                        if ((o | 0) == (M | 0)) {
                          o = l;
                          e = l;
                          ne = 90;
                          break e;
                        } else e = l;
                      else r = n;
                      ne = i[(l + 20) >> 2] | 0;
                      l = i[(l + 16 + ((a >>> 31) << 2)) >> 2] | 0;
                      s = ((ne | 0) == 0) | ((ne | 0) == (l | 0)) ? s : ne;
                      if (!l) {
                        ne = 86;
                        break;
                      } else {
                        n = r;
                        a = a << 1;
                      }
                    }
                  }
                } while (0);
                if ((ne | 0) == 86) {
                  if (((s | 0) == 0) & ((e | 0) == 0)) {
                    e = 2 << d;
                    e = h & (e | (0 - e));
                    if (!e) break;
                    e = ((e & (0 - e)) + -1) | 0;
                    _ = (e >>> 12) & 16;
                    e = e >>> _;
                    k = (e >>> 5) & 8;
                    e = e >>> k;
                    j = (e >>> 2) & 4;
                    e = e >>> j;
                    q = (e >>> 1) & 2;
                    e = e >>> q;
                    s = (e >>> 1) & 1;
                    s = i[(20892 + (((k | _ | j | q | s) + (e >>> s)) << 2)) >> 2] | 0;
                    e = 0;
                  }
                  if (!s) {
                    d = r;
                    h = e;
                  } else {
                    o = s;
                    ne = 90;
                  }
                }
                if ((ne | 0) == 90)
                  while (1) {
                    ne = 0;
                    q = ((i[(o + 4) >> 2] & -8) - M) | 0;
                    s = q >>> 0 < r >>> 0;
                    r = s ? q : r;
                    e = s ? o : e;
                    s = i[(o + 16) >> 2] | 0;
                    if (s) {
                      o = s;
                      ne = 90;
                      continue;
                    }
                    o = i[(o + 20) >> 2] | 0;
                    if (!o) {
                      d = r;
                      h = e;
                      break;
                    } else ne = 90;
                  }
                if ((h | 0) != 0 ? d >>> 0 < (((i[5149] | 0) - M) | 0) >>> 0 : 0) {
                  n = i[5151] | 0;
                  if (h >>> 0 < n >>> 0) qe();
                  l = (h + M) | 0;
                  if (h >>> 0 >= l >>> 0) qe();
                  a = i[(h + 24) >> 2] | 0;
                  s = i[(h + 12) >> 2] | 0;
                  do {
                    if ((s | 0) == (h | 0)) {
                      r = (h + 20) | 0;
                      e = i[r >> 2] | 0;
                      if (!e) {
                        r = (h + 16) | 0;
                        e = i[r >> 2] | 0;
                        if (!e) {
                          ee = 0;
                          break;
                        }
                      }
                      while (1) {
                        s = (e + 20) | 0;
                        o = i[s >> 2] | 0;
                        if (o) {
                          e = o;
                          r = s;
                          continue;
                        }
                        s = (e + 16) | 0;
                        o = i[s >> 2] | 0;
                        if (!o) break;
                        else {
                          e = o;
                          r = s;
                        }
                      }
                      if (r >>> 0 < n >>> 0) qe();
                      else {
                        i[r >> 2] = 0;
                        ee = e;
                        break;
                      }
                    } else {
                      o = i[(h + 8) >> 2] | 0;
                      if (o >>> 0 < n >>> 0) qe();
                      e = (o + 12) | 0;
                      if ((i[e >> 2] | 0) != (h | 0)) qe();
                      r = (s + 8) | 0;
                      if ((i[r >> 2] | 0) == (h | 0)) {
                        i[e >> 2] = s;
                        i[r >> 2] = o;
                        ee = s;
                        break;
                      } else qe();
                    }
                  } while (0);
                  do {
                    if (a) {
                      e = i[(h + 28) >> 2] | 0;
                      r = (20892 + (e << 2)) | 0;
                      if ((h | 0) == (i[r >> 2] | 0)) {
                        i[r >> 2] = ee;
                        if (!ee) {
                          i[5148] = i[5148] & ~(1 << e);
                          break;
                        }
                      } else {
                        if (a >>> 0 < (i[5151] | 0) >>> 0) qe();
                        e = (a + 16) | 0;
                        if ((i[e >> 2] | 0) == (h | 0)) i[e >> 2] = ee;
                        else i[(a + 20) >> 2] = ee;
                        if (!ee) break;
                      }
                      r = i[5151] | 0;
                      if (ee >>> 0 < r >>> 0) qe();
                      i[(ee + 24) >> 2] = a;
                      e = i[(h + 16) >> 2] | 0;
                      do {
                        if (e)
                          if (e >>> 0 < r >>> 0) qe();
                          else {
                            i[(ee + 16) >> 2] = e;
                            i[(e + 24) >> 2] = ee;
                            break;
                          }
                      } while (0);
                      e = i[(h + 20) >> 2] | 0;
                      if (e)
                        if (e >>> 0 < (i[5151] | 0) >>> 0) qe();
                        else {
                          i[(ee + 20) >> 2] = e;
                          i[(e + 24) >> 2] = ee;
                          break;
                        }
                    }
                  } while (0);
                  e: do {
                    if (d >>> 0 >= 16) {
                      i[(h + 4) >> 2] = M | 3;
                      i[(h + (M | 4)) >> 2] = d | 1;
                      i[(h + (d + M)) >> 2] = d;
                      e = d >>> 3;
                      if (d >>> 0 < 256) {
                        r = e << 1;
                        o = (20628 + (r << 2)) | 0;
                        s = i[5147] | 0;
                        e = 1 << e;
                        if (s & e) {
                          e = (20628 + ((r + 2) << 2)) | 0;
                          r = i[e >> 2] | 0;
                          if (r >>> 0 < (i[5151] | 0) >>> 0) qe();
                          else {
                            te = e;
                            re = r;
                          }
                        } else {
                          i[5147] = s | e;
                          te = (20628 + ((r + 2) << 2)) | 0;
                          re = o;
                        }
                        i[te >> 2] = l;
                        i[(re + 12) >> 2] = l;
                        i[(h + (M + 8)) >> 2] = re;
                        i[(h + (M + 12)) >> 2] = o;
                        break;
                      }
                      e = d >>> 8;
                      if (e)
                        if (d >>> 0 > 16777215) o = 31;
                        else {
                          Ie = (((e + 1048320) | 0) >>> 16) & 8;
                          Ce = e << Ie;
                          Ee = (((Ce + 520192) | 0) >>> 16) & 4;
                          Ce = Ce << Ee;
                          o = (((Ce + 245760) | 0) >>> 16) & 2;
                          o = (14 - (Ee | Ie | o) + ((Ce << o) >>> 15)) | 0;
                          o = ((d >>> ((o + 7) | 0)) & 1) | (o << 1);
                        }
                      else o = 0;
                      e = (20892 + (o << 2)) | 0;
                      i[(h + (M + 28)) >> 2] = o;
                      i[(h + (M + 20)) >> 2] = 0;
                      i[(h + (M + 16)) >> 2] = 0;
                      r = i[5148] | 0;
                      s = 1 << o;
                      if (!(r & s)) {
                        i[5148] = r | s;
                        i[e >> 2] = l;
                        i[(h + (M + 24)) >> 2] = e;
                        i[(h + (M + 12)) >> 2] = l;
                        i[(h + (M + 8)) >> 2] = l;
                        break;
                      }
                      e = i[e >> 2] | 0;
                      t: do {
                        if (((i[(e + 4) >> 2] & -8) | 0) != (d | 0)) {
                          o = d << ((o | 0) == 31 ? 0 : (25 - (o >>> 1)) | 0);
                          while (1) {
                            s = (e + 16 + ((o >>> 31) << 2)) | 0;
                            r = i[s >> 2] | 0;
                            if (!r) break;
                            if (((i[(r + 4) >> 2] & -8) | 0) == (d | 0)) {
                              oe = r;
                              break t;
                            } else {
                              o = o << 1;
                              e = r;
                            }
                          }
                          if (s >>> 0 < (i[5151] | 0) >>> 0) qe();
                          else {
                            i[s >> 2] = l;
                            i[(h + (M + 24)) >> 2] = e;
                            i[(h + (M + 12)) >> 2] = l;
                            i[(h + (M + 8)) >> 2] = l;
                            break e;
                          }
                        } else oe = e;
                      } while (0);
                      e = (oe + 8) | 0;
                      r = i[e >> 2] | 0;
                      Ce = i[5151] | 0;
                      if ((r >>> 0 >= Ce >>> 0) & (oe >>> 0 >= Ce >>> 0)) {
                        i[(r + 12) >> 2] = l;
                        i[e >> 2] = l;
                        i[(h + (M + 8)) >> 2] = r;
                        i[(h + (M + 12)) >> 2] = oe;
                        i[(h + (M + 24)) >> 2] = 0;
                        break;
                      } else qe();
                    } else {
                      Ce = (d + M) | 0;
                      i[(h + 4) >> 2] = Ce | 3;
                      Ce = (h + (Ce + 4)) | 0;
                      i[Ce >> 2] = i[Ce >> 2] | 1;
                    }
                  } while (0);
                  Ce = (h + 8) | 0;
                  return Ce | 0;
                }
              }
            } else M = -1;
          } while (0);
          s = i[5149] | 0;
          if (s >>> 0 >= M >>> 0) {
            e = (s - M) | 0;
            r = i[5152] | 0;
            if (e >>> 0 > 15) {
              i[5152] = r + M;
              i[5149] = e;
              i[(r + (M + 4)) >> 2] = e | 1;
              i[(r + s) >> 2] = e;
              i[(r + 4) >> 2] = M | 3;
            } else {
              i[5149] = 0;
              i[5152] = 0;
              i[(r + 4) >> 2] = s | 3;
              Ce = (r + (s + 4)) | 0;
              i[Ce >> 2] = i[Ce >> 2] | 1;
            }
            Ce = (r + 8) | 0;
            return Ce | 0;
          }
          e = i[5150] | 0;
          if (e >>> 0 > M >>> 0) {
            Ie = (e - M) | 0;
            i[5150] = Ie;
            Ce = i[5153] | 0;
            i[5153] = Ce + M;
            i[(Ce + (M + 4)) >> 2] = Ie | 1;
            i[(Ce + 4) >> 2] = M | 3;
            Ce = (Ce + 8) | 0;
            return Ce | 0;
          }
          do {
            if (!(i[5265] | 0)) {
              e = We(30) | 0;
              if (!((e + -1) & e)) {
                i[5267] = e;
                i[5266] = e;
                i[5268] = -1;
                i[5269] = -1;
                i[5270] = 0;
                i[5258] = 0;
                i[5265] = ((Xe(0) | 0) & -16) ^ 1431655768;
                break;
              } else qe();
            }
          } while (0);
          a = (M + 48) | 0;
          n = i[5267] | 0;
          l = (M + 47) | 0;
          o = (n + l) | 0;
          n = (0 - n) | 0;
          d = o & n;
          if (d >>> 0 <= M >>> 0) {
            Ce = 0;
            return Ce | 0;
          }
          e = i[5257] | 0;
          if ((e | 0) != 0 ? ((re = i[5255] | 0), (oe = (re + d) | 0), (oe >>> 0 <= re >>> 0) | (oe >>> 0 > e >>> 0)) : 0) {
            Ce = 0;
            return Ce | 0;
          }
          e: do {
            if (!(i[5258] & 4)) {
              s = i[5153] | 0;
              t: do {
                if (s) {
                  e = 21036;
                  while (1) {
                    r = i[e >> 2] | 0;
                    if (r >>> 0 <= s >>> 0 ? (($ = (e + 4) | 0), ((r + (i[$ >> 2] | 0)) | 0) >>> 0 > s >>> 0) : 0) break;
                    e = i[(e + 8) >> 2] | 0;
                    if (!e) {
                      ne = 174;
                      break t;
                    }
                  }
                  r = (o - (i[5150] | 0)) & n;
                  if (r >>> 0 < 2147483647) {
                    s = Ke(r | 0) | 0;
                    oe = (s | 0) == (((i[e >> 2] | 0) + (i[$ >> 2] | 0)) | 0);
                    e = oe ? r : 0;
                    if (oe) {
                      if ((s | 0) != (-1 | 0)) {
                        $ = s;
                        q = e;
                        ne = 194;
                        break e;
                      }
                    } else ne = 184;
                  } else e = 0;
                } else ne = 174;
              } while (0);
              do {
                if ((ne | 0) == 174) {
                  o = Ke(0) | 0;
                  if ((o | 0) != (-1 | 0)) {
                    e = o;
                    r = i[5266] | 0;
                    s = (r + -1) | 0;
                    if (!(s & e)) r = d;
                    else r = (d - e + ((s + e) & (0 - r))) | 0;
                    e = i[5255] | 0;
                    s = (e + r) | 0;
                    if ((r >>> 0 > M >>> 0) & (r >>> 0 < 2147483647)) {
                      oe = i[5257] | 0;
                      if ((oe | 0) != 0 ? (s >>> 0 <= e >>> 0) | (s >>> 0 > oe >>> 0) : 0) {
                        e = 0;
                        break;
                      }
                      s = Ke(r | 0) | 0;
                      ne = (s | 0) == (o | 0);
                      e = ne ? r : 0;
                      if (ne) {
                        $ = o;
                        q = e;
                        ne = 194;
                        break e;
                      } else ne = 184;
                    } else e = 0;
                  } else e = 0;
                }
              } while (0);
              t: do {
                if ((ne | 0) == 184) {
                  o = (0 - r) | 0;
                  do {
                    if (
                      (a >>> 0 > r >>> 0) & ((r >>> 0 < 2147483647) & ((s | 0) != (-1 | 0)))
                        ? ((se = i[5267] | 0), (se = (l - r + se) & (0 - se)), se >>> 0 < 2147483647)
                        : 0
                    )
                      if ((Ke(se | 0) | 0) == (-1 | 0)) {
                        Ke(o | 0) | 0;
                        break t;
                      } else {
                        r = (se + r) | 0;
                        break;
                      }
                  } while (0);
                  if ((s | 0) != (-1 | 0)) {
                    $ = s;
                    q = r;
                    ne = 194;
                    break e;
                  }
                }
              } while (0);
              i[5258] = i[5258] | 4;
              ne = 191;
            } else {
              e = 0;
              ne = 191;
            }
          } while (0);
          if (
            (
              ((ne | 0) == 191 ? d >>> 0 < 2147483647 : 0)
                ? ((ie = Ke(d | 0) | 0), (Ae = Ke(0) | 0), (ie >>> 0 < Ae >>> 0) & (((ie | 0) != (-1 | 0)) & ((Ae | 0) != (-1 | 0))))
                : 0
            )
              ? ((ae = (Ae - ie) | 0), (ce = ae >>> 0 > ((M + 40) | 0) >>> 0), ce)
              : 0
          ) {
            $ = ie;
            q = ce ? ae : e;
            ne = 194;
          }
          if ((ne | 0) == 194) {
            e = ((i[5255] | 0) + q) | 0;
            i[5255] = e;
            if (e >>> 0 > (i[5256] | 0) >>> 0) i[5256] = e;
            l = i[5153] | 0;
            e: do {
              if (l) {
                n = 21036;
                while (1) {
                  e = i[n >> 2] | 0;
                  r = (n + 4) | 0;
                  s = i[r >> 2] | 0;
                  if (($ | 0) == ((e + s) | 0)) {
                    ne = 204;
                    break;
                  }
                  o = i[(n + 8) >> 2] | 0;
                  if (!o) break;
                  else n = o;
                }
                if (((ne | 0) == 204 ? ((i[(n + 12) >> 2] & 8) | 0) == 0 : 0) ? (l >>> 0 < $ >>> 0) & (l >>> 0 >= e >>> 0) : 0) {
                  i[r >> 2] = s + q;
                  Ce = ((i[5150] | 0) + q) | 0;
                  Ie = (l + 8) | 0;
                  Ie = ((Ie & 7) | 0) == 0 ? 0 : (0 - Ie) & 7;
                  Ee = (Ce - Ie) | 0;
                  i[5153] = l + Ie;
                  i[5150] = Ee;
                  i[(l + (Ie + 4)) >> 2] = Ee | 1;
                  i[(l + (Ce + 4)) >> 2] = 40;
                  i[5154] = i[5269];
                  break;
                }
                e = i[5151] | 0;
                if ($ >>> 0 < e >>> 0) {
                  i[5151] = $;
                  h = $;
                } else h = e;
                r = ($ + q) | 0;
                e = 21036;
                while (1) {
                  if ((i[e >> 2] | 0) == (r | 0)) {
                    ne = 212;
                    break;
                  }
                  e = i[(e + 8) >> 2] | 0;
                  if (!e) {
                    r = 21036;
                    break;
                  }
                }
                if ((ne | 0) == 212)
                  if (!(i[(e + 12) >> 2] & 8)) {
                    i[e >> 2] = $;
                    _ = (e + 4) | 0;
                    i[_ >> 2] = (i[_ >> 2] | 0) + q;
                    _ = ($ + 8) | 0;
                    _ = ((_ & 7) | 0) == 0 ? 0 : (0 - _) & 7;
                    p = ($ + (q + 8)) | 0;
                    p = ((p & 7) | 0) == 0 ? 0 : (0 - p) & 7;
                    e = ($ + (p + q)) | 0;
                    k = (_ + M) | 0;
                    j = ($ + k) | 0;
                    w = (e - ($ + _) - M) | 0;
                    i[($ + (_ + 4)) >> 2] = M | 3;
                    t: do {
                      if ((e | 0) != (l | 0)) {
                        if ((e | 0) == (i[5152] | 0)) {
                          Ce = ((i[5149] | 0) + w) | 0;
                          i[5149] = Ce;
                          i[5152] = j;
                          i[($ + (k + 4)) >> 2] = Ce | 1;
                          i[($ + (Ce + k)) >> 2] = Ce;
                          break;
                        }
                        l = (q + 4) | 0;
                        r = i[($ + (l + p)) >> 2] | 0;
                        if (((r & 3) | 0) == 1) {
                          d = r & -8;
                          n = r >>> 3;
                          r: do {
                            if (r >>> 0 >= 256) {
                              a = i[($ + ((p | 24) + q)) >> 2] | 0;
                              o = i[($ + (q + 12 + p)) >> 2] | 0;
                              do {
                                if ((o | 0) == (e | 0)) {
                                  s = p | 16;
                                  o = ($ + (l + s)) | 0;
                                  r = i[o >> 2] | 0;
                                  if (!r) {
                                    s = ($ + (s + q)) | 0;
                                    r = i[s >> 2] | 0;
                                    if (!r) {
                                      pe = 0;
                                      break;
                                    }
                                  } else s = o;
                                  while (1) {
                                    o = (r + 20) | 0;
                                    n = i[o >> 2] | 0;
                                    if (n) {
                                      r = n;
                                      s = o;
                                      continue;
                                    }
                                    o = (r + 16) | 0;
                                    n = i[o >> 2] | 0;
                                    if (!n) break;
                                    else {
                                      r = n;
                                      s = o;
                                    }
                                  }
                                  if (s >>> 0 < h >>> 0) qe();
                                  else {
                                    i[s >> 2] = 0;
                                    pe = r;
                                    break;
                                  }
                                } else {
                                  n = i[($ + ((p | 8) + q)) >> 2] | 0;
                                  if (n >>> 0 < h >>> 0) qe();
                                  r = (n + 12) | 0;
                                  if ((i[r >> 2] | 0) != (e | 0)) qe();
                                  s = (o + 8) | 0;
                                  if ((i[s >> 2] | 0) == (e | 0)) {
                                    i[r >> 2] = o;
                                    i[s >> 2] = n;
                                    pe = o;
                                    break;
                                  } else qe();
                                }
                              } while (0);
                              if (!a) break;
                              r = i[($ + (q + 28 + p)) >> 2] | 0;
                              s = (20892 + (r << 2)) | 0;
                              do {
                                if ((e | 0) != (i[s >> 2] | 0)) {
                                  if (a >>> 0 < (i[5151] | 0) >>> 0) qe();
                                  r = (a + 16) | 0;
                                  if ((i[r >> 2] | 0) == (e | 0)) i[r >> 2] = pe;
                                  else i[(a + 20) >> 2] = pe;
                                  if (!pe) break r;
                                } else {
                                  i[s >> 2] = pe;
                                  if (pe) break;
                                  i[5148] = i[5148] & ~(1 << r);
                                  break r;
                                }
                              } while (0);
                              s = i[5151] | 0;
                              if (pe >>> 0 < s >>> 0) qe();
                              i[(pe + 24) >> 2] = a;
                              e = p | 16;
                              r = i[($ + (e + q)) >> 2] | 0;
                              do {
                                if (r)
                                  if (r >>> 0 < s >>> 0) qe();
                                  else {
                                    i[(pe + 16) >> 2] = r;
                                    i[(r + 24) >> 2] = pe;
                                    break;
                                  }
                              } while (0);
                              e = i[($ + (l + e)) >> 2] | 0;
                              if (!e) break;
                              if (e >>> 0 < (i[5151] | 0) >>> 0) qe();
                              else {
                                i[(pe + 20) >> 2] = e;
                                i[(e + 24) >> 2] = pe;
                                break;
                              }
                            } else {
                              s = i[($ + ((p | 8) + q)) >> 2] | 0;
                              o = i[($ + (q + 12 + p)) >> 2] | 0;
                              r = (20628 + ((n << 1) << 2)) | 0;
                              do {
                                if ((s | 0) != (r | 0)) {
                                  if (s >>> 0 < h >>> 0) qe();
                                  if ((i[(s + 12) >> 2] | 0) == (e | 0)) break;
                                  qe();
                                }
                              } while (0);
                              if ((o | 0) == (s | 0)) {
                                i[5147] = i[5147] & ~(1 << n);
                                break;
                              }
                              do {
                                if ((o | 0) == (r | 0)) ge = (o + 8) | 0;
                                else {
                                  if (o >>> 0 < h >>> 0) qe();
                                  r = (o + 8) | 0;
                                  if ((i[r >> 2] | 0) == (e | 0)) {
                                    ge = r;
                                    break;
                                  }
                                  qe();
                                }
                              } while (0);
                              i[(s + 12) >> 2] = o;
                              i[ge >> 2] = s;
                            }
                          } while (0);
                          e = ($ + ((d | p) + q)) | 0;
                          n = (d + w) | 0;
                        } else n = w;
                        e = (e + 4) | 0;
                        i[e >> 2] = i[e >> 2] & -2;
                        i[($ + (k + 4)) >> 2] = n | 1;
                        i[($ + (n + k)) >> 2] = n;
                        e = n >>> 3;
                        if (n >>> 0 < 256) {
                          r = e << 1;
                          o = (20628 + (r << 2)) | 0;
                          s = i[5147] | 0;
                          e = 1 << e;
                          do {
                            if (!(s & e)) {
                              i[5147] = s | e;
                              Ee = (20628 + ((r + 2) << 2)) | 0;
                              Ie = o;
                            } else {
                              e = (20628 + ((r + 2) << 2)) | 0;
                              r = i[e >> 2] | 0;
                              if (r >>> 0 >= (i[5151] | 0) >>> 0) {
                                Ee = e;
                                Ie = r;
                                break;
                              }
                              qe();
                            }
                          } while (0);
                          i[Ee >> 2] = j;
                          i[(Ie + 12) >> 2] = j;
                          i[($ + (k + 8)) >> 2] = Ie;
                          i[($ + (k + 12)) >> 2] = o;
                          break;
                        }
                        e = n >>> 8;
                        do {
                          if (!e) o = 0;
                          else {
                            if (n >>> 0 > 16777215) {
                              o = 31;
                              break;
                            }
                            Ee = (((e + 1048320) | 0) >>> 16) & 8;
                            Ie = e << Ee;
                            pe = (((Ie + 520192) | 0) >>> 16) & 4;
                            Ie = Ie << pe;
                            o = (((Ie + 245760) | 0) >>> 16) & 2;
                            o = (14 - (pe | Ee | o) + ((Ie << o) >>> 15)) | 0;
                            o = ((n >>> ((o + 7) | 0)) & 1) | (o << 1);
                          }
                        } while (0);
                        e = (20892 + (o << 2)) | 0;
                        i[($ + (k + 28)) >> 2] = o;
                        i[($ + (k + 20)) >> 2] = 0;
                        i[($ + (k + 16)) >> 2] = 0;
                        r = i[5148] | 0;
                        s = 1 << o;
                        if (!(r & s)) {
                          i[5148] = r | s;
                          i[e >> 2] = j;
                          i[($ + (k + 24)) >> 2] = e;
                          i[($ + (k + 12)) >> 2] = j;
                          i[($ + (k + 8)) >> 2] = j;
                          break;
                        }
                        e = i[e >> 2] | 0;
                        r: do {
                          if (((i[(e + 4) >> 2] & -8) | 0) != (n | 0)) {
                            o = n << ((o | 0) == 31 ? 0 : (25 - (o >>> 1)) | 0);
                            while (1) {
                              s = (e + 16 + ((o >>> 31) << 2)) | 0;
                              r = i[s >> 2] | 0;
                              if (!r) break;
                              if (((i[(r + 4) >> 2] & -8) | 0) == (n | 0)) {
                                Ce = r;
                                break r;
                              } else {
                                o = o << 1;
                                e = r;
                              }
                            }
                            if (s >>> 0 < (i[5151] | 0) >>> 0) qe();
                            else {
                              i[s >> 2] = j;
                              i[($ + (k + 24)) >> 2] = e;
                              i[($ + (k + 12)) >> 2] = j;
                              i[($ + (k + 8)) >> 2] = j;
                              break t;
                            }
                          } else Ce = e;
                        } while (0);
                        e = (Ce + 8) | 0;
                        r = i[e >> 2] | 0;
                        Ie = i[5151] | 0;
                        if ((r >>> 0 >= Ie >>> 0) & (Ce >>> 0 >= Ie >>> 0)) {
                          i[(r + 12) >> 2] = j;
                          i[e >> 2] = j;
                          i[($ + (k + 8)) >> 2] = r;
                          i[($ + (k + 12)) >> 2] = Ce;
                          i[($ + (k + 24)) >> 2] = 0;
                          break;
                        } else qe();
                      } else {
                        Ce = ((i[5150] | 0) + w) | 0;
                        i[5150] = Ce;
                        i[5153] = j;
                        i[($ + (k + 4)) >> 2] = Ce | 1;
                      }
                    } while (0);
                    Ce = ($ + (_ | 8)) | 0;
                    return Ce | 0;
                  } else r = 21036;
                while (1) {
                  e = i[r >> 2] | 0;
                  if (e >>> 0 <= l >>> 0 ? ((le = i[(r + 4) >> 2] | 0), (ue = (e + le) | 0), ue >>> 0 > l >>> 0) : 0) break;
                  r = i[(r + 8) >> 2] | 0;
                }
                r = (e + (le + -39)) | 0;
                r = (e + (le + -47 + (((r & 7) | 0) == 0 ? 0 : (0 - r) & 7))) | 0;
                n = (l + 16) | 0;
                r = r >>> 0 < n >>> 0 ? l : r;
                e = (r + 8) | 0;
                s = ($ + 8) | 0;
                s = ((s & 7) | 0) == 0 ? 0 : (0 - s) & 7;
                Ce = (q + -40 - s) | 0;
                i[5153] = $ + s;
                i[5150] = Ce;
                i[($ + (s + 4)) >> 2] = Ce | 1;
                i[($ + (q + -36)) >> 2] = 40;
                i[5154] = i[5269];
                s = (r + 4) | 0;
                i[s >> 2] = 27;
                i[e >> 2] = i[5259];
                i[(e + 4) >> 2] = i[5260];
                i[(e + 8) >> 2] = i[5261];
                i[(e + 12) >> 2] = i[5262];
                i[5259] = $;
                i[5260] = q;
                i[5262] = 0;
                i[5261] = e;
                e = (r + 28) | 0;
                i[e >> 2] = 7;
                if (((r + 32) | 0) >>> 0 < ue >>> 0)
                  do {
                    Ce = e;
                    e = (e + 4) | 0;
                    i[e >> 2] = 7;
                  } while (((Ce + 8) | 0) >>> 0 < ue >>> 0);
                if ((r | 0) != (l | 0)) {
                  a = (r - l) | 0;
                  i[s >> 2] = i[s >> 2] & -2;
                  i[(l + 4) >> 2] = a | 1;
                  i[r >> 2] = a;
                  e = a >>> 3;
                  if (a >>> 0 < 256) {
                    r = e << 1;
                    o = (20628 + (r << 2)) | 0;
                    s = i[5147] | 0;
                    e = 1 << e;
                    if (s & e) {
                      e = (20628 + ((r + 2) << 2)) | 0;
                      r = i[e >> 2] | 0;
                      if (r >>> 0 < (i[5151] | 0) >>> 0) qe();
                      else {
                        de = e;
                        fe = r;
                      }
                    } else {
                      i[5147] = s | e;
                      de = (20628 + ((r + 2) << 2)) | 0;
                      fe = o;
                    }
                    i[de >> 2] = l;
                    i[(fe + 12) >> 2] = l;
                    i[(l + 8) >> 2] = fe;
                    i[(l + 12) >> 2] = o;
                    break;
                  }
                  e = a >>> 8;
                  if (e)
                    if (a >>> 0 > 16777215) o = 31;
                    else {
                      Ie = (((e + 1048320) | 0) >>> 16) & 8;
                      Ce = e << Ie;
                      Ee = (((Ce + 520192) | 0) >>> 16) & 4;
                      Ce = Ce << Ee;
                      o = (((Ce + 245760) | 0) >>> 16) & 2;
                      o = (14 - (Ee | Ie | o) + ((Ce << o) >>> 15)) | 0;
                      o = ((a >>> ((o + 7) | 0)) & 1) | (o << 1);
                    }
                  else o = 0;
                  s = (20892 + (o << 2)) | 0;
                  i[(l + 28) >> 2] = o;
                  i[(l + 20) >> 2] = 0;
                  i[n >> 2] = 0;
                  e = i[5148] | 0;
                  r = 1 << o;
                  if (!(e & r)) {
                    i[5148] = e | r;
                    i[s >> 2] = l;
                    i[(l + 24) >> 2] = s;
                    i[(l + 12) >> 2] = l;
                    i[(l + 8) >> 2] = l;
                    break;
                  }
                  e = i[s >> 2] | 0;
                  t: do {
                    if (((i[(e + 4) >> 2] & -8) | 0) != (a | 0)) {
                      o = a << ((o | 0) == 31 ? 0 : (25 - (o >>> 1)) | 0);
                      while (1) {
                        s = (e + 16 + ((o >>> 31) << 2)) | 0;
                        r = i[s >> 2] | 0;
                        if (!r) break;
                        if (((i[(r + 4) >> 2] & -8) | 0) == (a | 0)) {
                          he = r;
                          break t;
                        } else {
                          o = o << 1;
                          e = r;
                        }
                      }
                      if (s >>> 0 < (i[5151] | 0) >>> 0) qe();
                      else {
                        i[s >> 2] = l;
                        i[(l + 24) >> 2] = e;
                        i[(l + 12) >> 2] = l;
                        i[(l + 8) >> 2] = l;
                        break e;
                      }
                    } else he = e;
                  } while (0);
                  e = (he + 8) | 0;
                  r = i[e >> 2] | 0;
                  Ce = i[5151] | 0;
                  if ((r >>> 0 >= Ce >>> 0) & (he >>> 0 >= Ce >>> 0)) {
                    i[(r + 12) >> 2] = l;
                    i[e >> 2] = l;
                    i[(l + 8) >> 2] = r;
                    i[(l + 12) >> 2] = he;
                    i[(l + 24) >> 2] = 0;
                    break;
                  } else qe();
                }
              } else {
                Ce = i[5151] | 0;
                if (((Ce | 0) == 0) | ($ >>> 0 < Ce >>> 0)) i[5151] = $;
                i[5259] = $;
                i[5260] = q;
                i[5262] = 0;
                i[5156] = i[5265];
                i[5155] = -1;
                e = 0;
                do {
                  Ce = e << 1;
                  Ie = (20628 + (Ce << 2)) | 0;
                  i[(20628 + ((Ce + 3) << 2)) >> 2] = Ie;
                  i[(20628 + ((Ce + 2) << 2)) >> 2] = Ie;
                  e = (e + 1) | 0;
                } while ((e | 0) != 32);
                Ce = ($ + 8) | 0;
                Ce = ((Ce & 7) | 0) == 0 ? 0 : (0 - Ce) & 7;
                Ie = (q + -40 - Ce) | 0;
                i[5153] = $ + Ce;
                i[5150] = Ie;
                i[($ + (Ce + 4)) >> 2] = Ie | 1;
                i[($ + (q + -36)) >> 2] = 40;
                i[5154] = i[5269];
              }
            } while (0);
            e = i[5150] | 0;
            if (e >>> 0 > M >>> 0) {
              Ie = (e - M) | 0;
              i[5150] = Ie;
              Ce = i[5153] | 0;
              i[5153] = Ce + M;
              i[(Ce + (M + 4)) >> 2] = Ie | 1;
              i[(Ce + 4) >> 2] = M | 3;
              Ce = (Ce + 8) | 0;
              return Ce | 0;
            }
          }
          if (!(i[5135] | 0)) e = 20584;
          else e = i[((je() | 0) + 60) >> 2] | 0;
          i[e >> 2] = 12;
          Ce = 0;
          return Ce | 0;
        }
        function Zb(e) {
          e = e | 0;
          var r = 0,
            s = 0,
            o = 0,
            n = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0,
            q = 0,
            $ = 0,
            ee = 0,
            te = 0,
            re = 0;
          if (!e) return;
          r = (e + -8) | 0;
          d = i[5151] | 0;
          if (r >>> 0 < d >>> 0) qe();
          s = i[(e + -4) >> 2] | 0;
          o = s & 3;
          if ((o | 0) == 1) qe();
          M = s & -8;
          q = (e + (M + -8)) | 0;
          do {
            if (!(s & 1)) {
              r = i[r >> 2] | 0;
              if (!o) return;
              h = (-8 - r) | 0;
              w = (e + h) | 0;
              k = (r + M) | 0;
              if (w >>> 0 < d >>> 0) qe();
              if ((w | 0) == (i[5152] | 0)) {
                r = (e + (M + -4)) | 0;
                s = i[r >> 2] | 0;
                if (((s & 3) | 0) != 3) {
                  re = w;
                  a = k;
                  break;
                }
                i[5149] = k;
                i[r >> 2] = s & -2;
                i[(e + (h + 4)) >> 2] = k | 1;
                i[q >> 2] = k;
                return;
              }
              n = r >>> 3;
              if (r >>> 0 < 256) {
                o = i[(e + (h + 8)) >> 2] | 0;
                s = i[(e + (h + 12)) >> 2] | 0;
                r = (20628 + ((n << 1) << 2)) | 0;
                if ((o | 0) != (r | 0)) {
                  if (o >>> 0 < d >>> 0) qe();
                  if ((i[(o + 12) >> 2] | 0) != (w | 0)) qe();
                }
                if ((s | 0) == (o | 0)) {
                  i[5147] = i[5147] & ~(1 << n);
                  re = w;
                  a = k;
                  break;
                }
                if ((s | 0) != (r | 0)) {
                  if (s >>> 0 < d >>> 0) qe();
                  r = (s + 8) | 0;
                  if ((i[r >> 2] | 0) == (w | 0)) l = r;
                  else qe();
                } else l = (s + 8) | 0;
                i[(o + 12) >> 2] = s;
                i[l >> 2] = o;
                re = w;
                a = k;
                break;
              }
              l = i[(e + (h + 24)) >> 2] | 0;
              o = i[(e + (h + 12)) >> 2] | 0;
              do {
                if ((o | 0) == (w | 0)) {
                  s = (e + (h + 20)) | 0;
                  r = i[s >> 2] | 0;
                  if (!r) {
                    s = (e + (h + 16)) | 0;
                    r = i[s >> 2] | 0;
                    if (!r) {
                      p = 0;
                      break;
                    }
                  }
                  while (1) {
                    o = (r + 20) | 0;
                    n = i[o >> 2] | 0;
                    if (n) {
                      r = n;
                      s = o;
                      continue;
                    }
                    o = (r + 16) | 0;
                    n = i[o >> 2] | 0;
                    if (!n) break;
                    else {
                      r = n;
                      s = o;
                    }
                  }
                  if (s >>> 0 < d >>> 0) qe();
                  else {
                    i[s >> 2] = 0;
                    p = r;
                    break;
                  }
                } else {
                  n = i[(e + (h + 8)) >> 2] | 0;
                  if (n >>> 0 < d >>> 0) qe();
                  r = (n + 12) | 0;
                  if ((i[r >> 2] | 0) != (w | 0)) qe();
                  s = (o + 8) | 0;
                  if ((i[s >> 2] | 0) == (w | 0)) {
                    i[r >> 2] = o;
                    i[s >> 2] = n;
                    p = o;
                    break;
                  } else qe();
                }
              } while (0);
              if (l) {
                r = i[(e + (h + 28)) >> 2] | 0;
                s = (20892 + (r << 2)) | 0;
                if ((w | 0) == (i[s >> 2] | 0)) {
                  i[s >> 2] = p;
                  if (!p) {
                    i[5148] = i[5148] & ~(1 << r);
                    re = w;
                    a = k;
                    break;
                  }
                } else {
                  if (l >>> 0 < (i[5151] | 0) >>> 0) qe();
                  r = (l + 16) | 0;
                  if ((i[r >> 2] | 0) == (w | 0)) i[r >> 2] = p;
                  else i[(l + 20) >> 2] = p;
                  if (!p) {
                    re = w;
                    a = k;
                    break;
                  }
                }
                s = i[5151] | 0;
                if (p >>> 0 < s >>> 0) qe();
                i[(p + 24) >> 2] = l;
                r = i[(e + (h + 16)) >> 2] | 0;
                do {
                  if (r)
                    if (r >>> 0 < s >>> 0) qe();
                    else {
                      i[(p + 16) >> 2] = r;
                      i[(r + 24) >> 2] = p;
                      break;
                    }
                } while (0);
                r = i[(e + (h + 20)) >> 2] | 0;
                if (r)
                  if (r >>> 0 < (i[5151] | 0) >>> 0) qe();
                  else {
                    i[(p + 20) >> 2] = r;
                    i[(r + 24) >> 2] = p;
                    re = w;
                    a = k;
                    break;
                  }
                else {
                  re = w;
                  a = k;
                }
              } else {
                re = w;
                a = k;
              }
            } else {
              re = r;
              a = M;
            }
          } while (0);
          if (re >>> 0 >= q >>> 0) qe();
          r = (e + (M + -4)) | 0;
          s = i[r >> 2] | 0;
          if (!(s & 1)) qe();
          if (!(s & 2)) {
            if ((q | 0) == (i[5153] | 0)) {
              te = ((i[5150] | 0) + a) | 0;
              i[5150] = te;
              i[5153] = re;
              i[(re + 4) >> 2] = te | 1;
              if ((re | 0) != (i[5152] | 0)) return;
              i[5152] = 0;
              i[5149] = 0;
              return;
            }
            if ((q | 0) == (i[5152] | 0)) {
              te = ((i[5149] | 0) + a) | 0;
              i[5149] = te;
              i[5152] = re;
              i[(re + 4) >> 2] = te | 1;
              i[(re + te) >> 2] = te;
              return;
            }
            a = ((s & -8) + a) | 0;
            n = s >>> 3;
            do {
              if (s >>> 0 >= 256) {
                l = i[(e + (M + 16)) >> 2] | 0;
                r = i[(e + (M | 4)) >> 2] | 0;
                do {
                  if ((r | 0) == (q | 0)) {
                    s = (e + (M + 12)) | 0;
                    r = i[s >> 2] | 0;
                    if (!r) {
                      s = (e + (M + 8)) | 0;
                      r = i[s >> 2] | 0;
                      if (!r) {
                        j = 0;
                        break;
                      }
                    }
                    while (1) {
                      o = (r + 20) | 0;
                      n = i[o >> 2] | 0;
                      if (n) {
                        r = n;
                        s = o;
                        continue;
                      }
                      o = (r + 16) | 0;
                      n = i[o >> 2] | 0;
                      if (!n) break;
                      else {
                        r = n;
                        s = o;
                      }
                    }
                    if (s >>> 0 < (i[5151] | 0) >>> 0) qe();
                    else {
                      i[s >> 2] = 0;
                      j = r;
                      break;
                    }
                  } else {
                    s = i[(e + M) >> 2] | 0;
                    if (s >>> 0 < (i[5151] | 0) >>> 0) qe();
                    o = (s + 12) | 0;
                    if ((i[o >> 2] | 0) != (q | 0)) qe();
                    n = (r + 8) | 0;
                    if ((i[n >> 2] | 0) == (q | 0)) {
                      i[o >> 2] = r;
                      i[n >> 2] = s;
                      j = r;
                      break;
                    } else qe();
                  }
                } while (0);
                if (l) {
                  r = i[(e + (M + 20)) >> 2] | 0;
                  s = (20892 + (r << 2)) | 0;
                  if ((q | 0) == (i[s >> 2] | 0)) {
                    i[s >> 2] = j;
                    if (!j) {
                      i[5148] = i[5148] & ~(1 << r);
                      break;
                    }
                  } else {
                    if (l >>> 0 < (i[5151] | 0) >>> 0) qe();
                    r = (l + 16) | 0;
                    if ((i[r >> 2] | 0) == (q | 0)) i[r >> 2] = j;
                    else i[(l + 20) >> 2] = j;
                    if (!j) break;
                  }
                  s = i[5151] | 0;
                  if (j >>> 0 < s >>> 0) qe();
                  i[(j + 24) >> 2] = l;
                  r = i[(e + (M + 8)) >> 2] | 0;
                  do {
                    if (r)
                      if (r >>> 0 < s >>> 0) qe();
                      else {
                        i[(j + 16) >> 2] = r;
                        i[(r + 24) >> 2] = j;
                        break;
                      }
                  } while (0);
                  r = i[(e + (M + 12)) >> 2] | 0;
                  if (r)
                    if (r >>> 0 < (i[5151] | 0) >>> 0) qe();
                    else {
                      i[(j + 20) >> 2] = r;
                      i[(r + 24) >> 2] = j;
                      break;
                    }
                }
              } else {
                o = i[(e + M) >> 2] | 0;
                s = i[(e + (M | 4)) >> 2] | 0;
                r = (20628 + ((n << 1) << 2)) | 0;
                if ((o | 0) != (r | 0)) {
                  if (o >>> 0 < (i[5151] | 0) >>> 0) qe();
                  if ((i[(o + 12) >> 2] | 0) != (q | 0)) qe();
                }
                if ((s | 0) == (o | 0)) {
                  i[5147] = i[5147] & ~(1 << n);
                  break;
                }
                if ((s | 0) != (r | 0)) {
                  if (s >>> 0 < (i[5151] | 0) >>> 0) qe();
                  r = (s + 8) | 0;
                  if ((i[r >> 2] | 0) == (q | 0)) _ = r;
                  else qe();
                } else _ = (s + 8) | 0;
                i[(o + 12) >> 2] = s;
                i[_ >> 2] = o;
              }
            } while (0);
            i[(re + 4) >> 2] = a | 1;
            i[(re + a) >> 2] = a;
            if ((re | 0) == (i[5152] | 0)) {
              i[5149] = a;
              return;
            }
          } else {
            i[r >> 2] = s & -2;
            i[(re + 4) >> 2] = a | 1;
            i[(re + a) >> 2] = a;
          }
          r = a >>> 3;
          if (a >>> 0 < 256) {
            s = r << 1;
            n = (20628 + (s << 2)) | 0;
            o = i[5147] | 0;
            r = 1 << r;
            if (o & r) {
              r = (20628 + ((s + 2) << 2)) | 0;
              s = i[r >> 2] | 0;
              if (s >>> 0 < (i[5151] | 0) >>> 0) qe();
              else {
                $ = r;
                ee = s;
              }
            } else {
              i[5147] = o | r;
              $ = (20628 + ((s + 2) << 2)) | 0;
              ee = n;
            }
            i[$ >> 2] = re;
            i[(ee + 12) >> 2] = re;
            i[(re + 8) >> 2] = ee;
            i[(re + 12) >> 2] = n;
            return;
          }
          r = a >>> 8;
          if (r)
            if (a >>> 0 > 16777215) n = 31;
            else {
              $ = (((r + 1048320) | 0) >>> 16) & 8;
              ee = r << $;
              q = (((ee + 520192) | 0) >>> 16) & 4;
              ee = ee << q;
              n = (((ee + 245760) | 0) >>> 16) & 2;
              n = (14 - (q | $ | n) + ((ee << n) >>> 15)) | 0;
              n = ((a >>> ((n + 7) | 0)) & 1) | (n << 1);
            }
          else n = 0;
          r = (20892 + (n << 2)) | 0;
          i[(re + 28) >> 2] = n;
          i[(re + 20) >> 2] = 0;
          i[(re + 16) >> 2] = 0;
          s = i[5148] | 0;
          o = 1 << n;
          e: do {
            if (s & o) {
              r = i[r >> 2] | 0;
              t: do {
                if (((i[(r + 4) >> 2] & -8) | 0) != (a | 0)) {
                  n = a << ((n | 0) == 31 ? 0 : (25 - (n >>> 1)) | 0);
                  while (1) {
                    o = (r + 16 + ((n >>> 31) << 2)) | 0;
                    s = i[o >> 2] | 0;
                    if (!s) break;
                    if (((i[(s + 4) >> 2] & -8) | 0) == (a | 0)) {
                      te = s;
                      break t;
                    } else {
                      n = n << 1;
                      r = s;
                    }
                  }
                  if (o >>> 0 < (i[5151] | 0) >>> 0) qe();
                  else {
                    i[o >> 2] = re;
                    i[(re + 24) >> 2] = r;
                    i[(re + 12) >> 2] = re;
                    i[(re + 8) >> 2] = re;
                    break e;
                  }
                } else te = r;
              } while (0);
              r = (te + 8) | 0;
              s = i[r >> 2] | 0;
              ee = i[5151] | 0;
              if ((s >>> 0 >= ee >>> 0) & (te >>> 0 >= ee >>> 0)) {
                i[(s + 12) >> 2] = re;
                i[r >> 2] = re;
                i[(re + 8) >> 2] = s;
                i[(re + 12) >> 2] = te;
                i[(re + 24) >> 2] = 0;
                break;
              } else qe();
            } else {
              i[5148] = s | o;
              i[r >> 2] = re;
              i[(re + 24) >> 2] = r;
              i[(re + 12) >> 2] = re;
              i[(re + 8) >> 2] = re;
            }
          } while (0);
          re = ((i[5155] | 0) + -1) | 0;
          i[5155] = re;
          if (!re) r = 21044;
          else return;
          while (1) {
            r = i[r >> 2] | 0;
            if (!r) break;
            else r = (r + 8) | 0;
          }
          i[5155] = -1;
          return;
        }
        function _b() {}
        function $b(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          o = (r - o - ((s >>> 0 > e >>> 0) | 0)) >>> 0;
          return ((de = o), ((e - s) >>> 0) | 0) | 0;
        }
        function ac(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var n = 0,
            a = 0,
            l = 0,
            d = 0;
          n = (e + s) | 0;
          if ((s | 0) >= 20) {
            r = r & 255;
            l = e & 3;
            d = r | (r << 8) | (r << 16) | (r << 24);
            a = n & ~3;
            if (l) {
              l = (e + 4 - l) | 0;
              while ((e | 0) < (l | 0)) {
                o[e >> 0] = r;
                e = (e + 1) | 0;
              }
            }
            while ((e | 0) < (a | 0)) {
              i[e >> 2] = d;
              e = (e + 4) | 0;
            }
          }
          while ((e | 0) < (n | 0)) {
            o[e >> 0] = r;
            e = (e + 1) | 0;
          }
          return (e - s) | 0;
        }
        function bc(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          if ((s | 0) < 32) {
            de = r >>> s;
            return (e >>> s) | ((r & ((1 << s) - 1)) << (32 - s));
          }
          de = 0;
          return (r >>> (s - 32)) | 0;
        }
        function cc(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          if ((s | 0) < 32) {
            de = (r << s) | ((e & (((1 << s) - 1) << (32 - s))) >>> (32 - s));
            return e << s;
          }
          de = e << (s - 32);
          return 0;
        }
        function dc(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var n = 0;
          if ((s | 0) >= 4096) return ze(e | 0, r | 0, s | 0) | 0;
          n = e | 0;
          if ((e & 3) == (r & 3)) {
            while (e & 3) {
              if (!s) return n | 0;
              o[e >> 0] = o[r >> 0] | 0;
              e = (e + 1) | 0;
              r = (r + 1) | 0;
              s = (s - 1) | 0;
            }
            while ((s | 0) >= 4) {
              i[e >> 2] = i[r >> 2];
              e = (e + 4) | 0;
              r = (r + 4) | 0;
              s = (s - 4) | 0;
            }
          }
          while ((s | 0) > 0) {
            o[e >> 0] = o[r >> 0] | 0;
            e = (e + 1) | 0;
            r = (r + 1) | 0;
            s = (s - 1) | 0;
          }
          return n | 0;
        }
        function ec(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          s = (e + s) >>> 0;
          return ((de = (r + o + ((s >>> 0 < e >>> 0) | 0)) >>> 0), s | 0) | 0;
        }
        function fc(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          var n = 0;
          if (((r | 0) < (e | 0)) & ((e | 0) < ((r + s) | 0))) {
            n = e;
            r = (r + s) | 0;
            e = (e + s) | 0;
            while ((s | 0) > 0) {
              e = (e - 1) | 0;
              r = (r - 1) | 0;
              s = (s - 1) | 0;
              o[e >> 0] = o[r >> 0] | 0;
            }
            e = n;
          } else dc(e, r, s) | 0;
          return e | 0;
        }
        function gc(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          if ((s | 0) < 32) {
            de = r >> s;
            return (e >>> s) | ((r & ((1 << s) - 1)) << (32 - s));
          }
          de = (r | 0) < 0 ? -1 : 0;
          return (r >> (s - 32)) | 0;
        }
        function hc(e) {
          e = e | 0;
          var r = 0;
          r = o[(j + (e & 255)) >> 0] | 0;
          if ((r | 0) < 8) return r | 0;
          r = o[(j + ((e >> 8) & 255)) >> 0] | 0;
          if ((r | 0) < 8) return (r + 8) | 0;
          r = o[(j + ((e >> 16) & 255)) >> 0] | 0;
          if ((r | 0) < 8) return (r + 16) | 0;
          return ((o[(j + (e >>> 24)) >> 0] | 0) + 24) | 0;
        }
        function ic(e, r) {
          e = e | 0;
          r = r | 0;
          var s = 0,
            o = 0,
            n = 0,
            i = 0;
          i = e & 65535;
          n = r & 65535;
          s = Pe(n, i) | 0;
          o = e >>> 16;
          e = ((s >>> 16) + (Pe(n, o) | 0)) | 0;
          n = r >>> 16;
          r = Pe(n, i) | 0;
          return ((de = ((e >>> 16) + (Pe(n, o) | 0) + ((((e & 65535) + r) | 0) >>> 16)) | 0), ((e + r) << 16) | (s & 65535) | 0) | 0;
        }
        function jc(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          var n = 0,
            i = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0;
          h = (r >> 31) | (((r | 0) < 0 ? -1 : 0) << 1);
          d = (((r | 0) < 0 ? -1 : 0) >> 31) | (((r | 0) < 0 ? -1 : 0) << 1);
          i = (o >> 31) | (((o | 0) < 0 ? -1 : 0) << 1);
          n = (((o | 0) < 0 ? -1 : 0) >> 31) | (((o | 0) < 0 ? -1 : 0) << 1);
          l = $b(h ^ e, d ^ r, h, d) | 0;
          a = de;
          e = i ^ h;
          r = n ^ d;
          return $b((oc(l, a, $b(i ^ s, n ^ o, i, n) | 0, de, 0) | 0) ^ e, de ^ r, e, r) | 0;
        }
        function kc(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          var n = 0,
            a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0;
          n = w;
          w = (w + 16) | 0;
          d = n | 0;
          l = (r >> 31) | (((r | 0) < 0 ? -1 : 0) << 1);
          a = (((r | 0) < 0 ? -1 : 0) >> 31) | (((r | 0) < 0 ? -1 : 0) << 1);
          p = (o >> 31) | (((o | 0) < 0 ? -1 : 0) << 1);
          h = (((o | 0) < 0 ? -1 : 0) >> 31) | (((o | 0) < 0 ? -1 : 0) << 1);
          e = $b(l ^ e, a ^ r, l, a) | 0;
          r = de;
          oc(e, r, $b(p ^ s, h ^ o, p, h) | 0, de, d) | 0;
          o = $b(i[d >> 2] ^ l, i[(d + 4) >> 2] ^ a, l, a) | 0;
          s = de;
          w = n;
          return ((de = s), o) | 0;
        }
        function lc(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          var n = 0,
            i = 0;
          n = e;
          i = s;
          s = ic(n, i) | 0;
          e = de;
          return ((de = ((Pe(r, i) | 0) + (Pe(o, n) | 0) + e) | (e & 0)), s | 0 | 0) | 0;
        }
        function mc(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          return oc(e, r, s, o, 0) | 0;
        }
        function nc(e, r, s, o) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          var n = 0,
            a = 0;
          a = w;
          w = (w + 16) | 0;
          n = a | 0;
          oc(e, r, s, o, n) | 0;
          w = a;
          return ((de = i[(n + 4) >> 2] | 0), i[n >> 2] | 0) | 0;
        }
        function oc(e, r, s, o, n) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          o = o | 0;
          n = n | 0;
          var a = 0,
            l = 0,
            d = 0,
            h = 0,
            p = 0,
            w = 0,
            k = 0,
            _ = 0,
            M = 0,
            j = 0;
          w = e;
          h = r;
          p = h;
          l = s;
          _ = o;
          d = _;
          if (!p) {
            a = (n | 0) != 0;
            if (!d) {
              if (a) {
                i[n >> 2] = (w >>> 0) % (l >>> 0);
                i[(n + 4) >> 2] = 0;
              }
              _ = 0;
              n = ((w >>> 0) / (l >>> 0)) >>> 0;
              return ((de = _), n) | 0;
            } else {
              if (!a) {
                _ = 0;
                n = 0;
                return ((de = _), n) | 0;
              }
              i[n >> 2] = e | 0;
              i[(n + 4) >> 2] = r & 0;
              _ = 0;
              n = 0;
              return ((de = _), n) | 0;
            }
          }
          a = (d | 0) == 0;
          do {
            if (l) {
              if (!a) {
                a = ((_e(d | 0) | 0) - (_e(p | 0) | 0)) | 0;
                if (a >>> 0 <= 31) {
                  k = (a + 1) | 0;
                  d = (31 - a) | 0;
                  r = (a - 31) >> 31;
                  l = k;
                  e = ((w >>> (k >>> 0)) & r) | (p << d);
                  r = (p >>> (k >>> 0)) & r;
                  a = 0;
                  d = w << d;
                  break;
                }
                if (!n) {
                  _ = 0;
                  n = 0;
                  return ((de = _), n) | 0;
                }
                i[n >> 2] = e | 0;
                i[(n + 4) >> 2] = h | (r & 0);
                _ = 0;
                n = 0;
                return ((de = _), n) | 0;
              }
              a = (l - 1) | 0;
              if (a & l) {
                d = ((_e(l | 0) | 0) + 33 - (_e(p | 0) | 0)) | 0;
                j = (64 - d) | 0;
                k = (32 - d) | 0;
                h = k >> 31;
                M = (d - 32) | 0;
                r = M >> 31;
                l = d;
                e = (((k - 1) >> 31) & (p >>> (M >>> 0))) | (((p << k) | (w >>> (d >>> 0))) & r);
                r = r & (p >>> (d >>> 0));
                a = (w << j) & h;
                d = (((p << j) | (w >>> (M >>> 0))) & h) | ((w << k) & ((d - 33) >> 31));
                break;
              }
              if (n) {
                i[n >> 2] = a & w;
                i[(n + 4) >> 2] = 0;
              }
              if ((l | 0) == 1) {
                M = h | (r & 0);
                j = e | 0 | 0;
                return ((de = M), j) | 0;
              } else {
                j = hc(l | 0) | 0;
                M = (p >>> (j >>> 0)) | 0;
                j = (p << (32 - j)) | (w >>> (j >>> 0)) | 0;
                return ((de = M), j) | 0;
              }
            } else {
              if (a) {
                if (n) {
                  i[n >> 2] = (p >>> 0) % (l >>> 0);
                  i[(n + 4) >> 2] = 0;
                }
                M = 0;
                j = ((p >>> 0) / (l >>> 0)) >>> 0;
                return ((de = M), j) | 0;
              }
              if (!w) {
                if (n) {
                  i[n >> 2] = 0;
                  i[(n + 4) >> 2] = (p >>> 0) % (d >>> 0);
                }
                M = 0;
                j = ((p >>> 0) / (d >>> 0)) >>> 0;
                return ((de = M), j) | 0;
              }
              a = (d - 1) | 0;
              if (!(a & d)) {
                if (n) {
                  i[n >> 2] = e | 0;
                  i[(n + 4) >> 2] = (a & p) | (r & 0);
                }
                M = 0;
                j = p >>> ((hc(d | 0) | 0) >>> 0);
                return ((de = M), j) | 0;
              }
              a = ((_e(d | 0) | 0) - (_e(p | 0) | 0)) | 0;
              if (a >>> 0 <= 30) {
                r = (a + 1) | 0;
                d = (31 - a) | 0;
                l = r;
                e = (p << d) | (w >>> (r >>> 0));
                r = p >>> (r >>> 0);
                a = 0;
                d = w << d;
                break;
              }
              if (!n) {
                M = 0;
                j = 0;
                return ((de = M), j) | 0;
              }
              i[n >> 2] = e | 0;
              i[(n + 4) >> 2] = h | (r & 0);
              M = 0;
              j = 0;
              return ((de = M), j) | 0;
            }
          } while (0);
          if (!l) {
            p = d;
            h = 0;
            d = 0;
          } else {
            k = s | 0 | 0;
            w = _ | (o & 0);
            p = ec(k | 0, w | 0, -1, -1) | 0;
            s = de;
            h = d;
            d = 0;
            do {
              o = h;
              h = (a >>> 31) | (h << 1);
              a = d | (a << 1);
              o = (e << 1) | (o >>> 31) | 0;
              _ = (e >>> 31) | (r << 1) | 0;
              $b(p, s, o, _) | 0;
              j = de;
              M = (j >> 31) | (((j | 0) < 0 ? -1 : 0) << 1);
              d = M & 1;
              e = $b(o, _, M & k, ((((j | 0) < 0 ? -1 : 0) >> 31) | (((j | 0) < 0 ? -1 : 0) << 1)) & w) | 0;
              r = de;
              l = (l - 1) | 0;
            } while ((l | 0) != 0);
            p = h;
            h = 0;
          }
          l = 0;
          if (n) {
            i[n >> 2] = e;
            i[(n + 4) >> 2] = r;
          }
          M = ((a | 0) >>> 31) | ((p | l) << 1) | (((l << 1) | (a >>> 31)) & 0) | h;
          j = (((a << 1) | (0 >>> 31)) & -2) | d;
          return ((de = M), j) | 0;
        }
        function pc(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          rt[e & 1](r | 0, s | 0);
        }
        function qc(e, r, s) {
          e = e | 0;
          r = r | 0;
          s = s | 0;
          return st[e & 1](r | 0, s | 0) | 0;
        }
        function rc(e, r) {
          e = e | 0;
          r = r | 0;
          Me(0);
        }
        function sc(e, r) {
          e = e | 0;
          r = r | 0;
          Me(1);
          return 0;
        }
        var rt = [rc, Mb];
        var st = [sc, Lb];
        return {
          _i64Subtract: $b,
          _free: Zb,
          _i64Add: ec,
          _memmove: fc,
          _memset: ac,
          _malloc: Yb,
          _encode: Ca,
          _memcpy: dc,
          _bitshift64Lshr: bc,
          _bitshift64Shl: cc,
          runPostSets: _b,
          stackAlloc: ta,
          stackSave: ua,
          stackRestore: va,
          establishStackSpace: wa,
          setThrew: xa,
          setTempRet0: Aa,
          getTempRet0: Ba,
          dynCall_vii: pc,
          dynCall_iii: qc,
        };
      })(b.I, b.J, buffer),
      Ja = (b._i64Subtract = Y._i64Subtract),
      pa = (b._free = Y._free);
    b.runPostSets = Y.runPostSets;
    var Pa = (b._i64Add = Y._i64Add),
      Qa = (b._memmove = Y._memmove),
      La = (b._memset = Y._memset),
      ia = (b._malloc = Y._malloc);
    b._encode = Y._encode;
    var Oa = (b._memcpy = Y._memcpy),
      Ma = (b._bitshift64Lshr = Y._bitshift64Lshr),
      Na = (b._bitshift64Shl = Y._bitshift64Shl);
    b.dynCall_vii = Y.dynCall_vii;
    b.dynCall_iii = Y.dynCall_iii;
    A.n = Y.stackAlloc;
    A.G = Y.stackSave;
    A.F = Y.stackRestore;
    A.W = Y.establishStackSpace;
    A.P = Y.setTempRet0;
    A.N = Y.getTempRet0;
    if (W)
      if (("function" === typeof b.locateFile ? (W = b.locateFile(W)) : b.memoryInitializerPrefixURL && (W = b.memoryInitializerPrefixURL + W), v || x)) {
        var Ta = b.readBinary(W);
        P.set(Ta, A.C);
      } else {
        var Va = function () {
          Browser.T(W, Ua, function () {
            throw "could not load memory initializer " + W;
          });
        };
        U++;
        b.monitorRunDependencies && b.monitorRunDependencies(U);
        var Ua = function (e) {
            e.byteLength && (e = new Uint8Array(e));
            P.set(e, A.C);
            U--;
            b.monitorRunDependencies && b.monitorRunDependencies(U);
            0 == U && (null !== Ha && (clearInterval(Ha), (Ha = null)), V && ((e = V), (V = null), e()));
          },
          Z = b.memoryInitializerRequest;
        if (Z) {
          var Wa = function () {
            200 !== Z.status && 0 !== Z.status
              ? (console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: " + Z.status + ", retrying " + W), Va())
              : Ua(Z.response);
          };
          Z.response ? setTimeout(Wa, 0) : Z.addEventListener("load", Wa);
        } else Va();
      }
    function y(e) {
      this.name = "ExitStatus";
      this.message = "Program terminated with exit(" + e + ")";
      this.status = e;
    }
    y.prototype = Error();
    y.prototype.constructor = y;
    var Xa = null,
      V = function Ya() {
        b.calledRun || Za();
        b.calledRun || (V = Ya);
      };
    b.callMain = b.U = function (e) {
      function c() {
        for (var e = 0; 3 > e; e++) s.push(0);
      }
      assert(0 == U, "cannot call main when async dependencies remain! (listen on __ATMAIN__)");
      assert(0 == Aa.length, "cannot call main when preRun functions remain to be called");
      e = e || [];
      T || ((T = !0), S(Ba));
      var r = e.length + 1,
        s = [O(Ga(b.thisProgram), "i8", 0)];
      c();
      for (var o = 0; o < r - 1; o += 1) (s.push(O(Ga(e[o]), "i8", 0)), c());
      s.push(0);
      s = O(s, "i32", 0);
      try {
        var n = b._main(r, s, 0);
        $a(n, !0);
      } catch (e) {
        if (!(e instanceof y))
          if ("SimulateInfiniteLoop" == e) b.noExitRuntime = !0;
          else throw (e && "object" === typeof e && e.stack && b.A("exception thrown: " + [e, e.stack]), e);
      } finally {
      }
    };
    function Za(e) {
      function c() {
        if (!b.calledRun && ((b.calledRun = !0), !F)) {
          T || ((T = !0), S(Ba));
          S(Ca);
          if (b.onRuntimeInitialized) b.onRuntimeInitialized();
          b._main && ab && b.callMain(e);
          if (b.postRun)
            for ("function" == typeof b.postRun && (b.postRun = [b.postRun]); b.postRun.length; ) {
              var r = b.postRun.shift();
              Ea.unshift(r);
            }
          S(Ea);
        }
      }
      e = e || b.arguments;
      null === Xa && (Xa = Date.now());
      if (!(0 < U)) {
        if (b.preRun) for ("function" == typeof b.preRun && (b.preRun = [b.preRun]); b.preRun.length; ) Fa();
        S(Aa);
        0 < U ||
          b.calledRun ||
          (b.setStatus
            ? (b.setStatus("Running..."),
              setTimeout(function () {
                setTimeout(function () {
                  b.setStatus("");
                }, 1);
                c();
              }, 1))
            : c());
      }
    }
    b.run = b.run = Za;
    function $a(e, r) {
      if (!r || !b.noExitRuntime) {
        if (!b.noExitRuntime && ((F = !0), (z = void 0), S(Da), b.onExit)) b.onExit(e);
        v
          ? (process.stdout.once("drain", function () {
              process.exit(e);
            }),
            console.log(" "),
            setTimeout(function () {
              process.exit(e);
            }, 500))
          : x && "function" === typeof quit && quit(e);
        throw new y(e);
      }
    }
    b.exit = b.exit = $a;
    var bb = [];
    function E(e) {
      void 0 !== e ? (b.print(e), b.A(e), (e = JSON.stringify(e))) : (e = "");
      F = !0;
      var r = "abort(" + e + ") at " + qa() + "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
      bb &&
        bb.forEach(function (s) {
          r = s(r, e);
        });
      throw r;
    }
    b.abort = b.abort = E;
    if (b.preInit) for ("function" == typeof b.preInit && (b.preInit = [b.preInit]); 0 < b.preInit.length; ) b.preInit.pop()();
    var ab = !0;
    b.noInitialRun && (ab = !1);
    Za();
  },
  466: (e) => {
    e.exports =
      "";
  },
  7786: (e, r, s) => {
    var o = s(8333);
    e.exports = function (e, r) {
      var s = 11;
      var n = 0;
      var i = 22;
      if (typeof r === "boolean") {
        n = r ? 0 : 1;
      } else if (typeof r === "object") {
        s = r.quality || 11;
        n = r.mode || 0;
        i = r.lgwin || 22;
      }
      var a = o._malloc(e.length);
      o.HEAPU8.set(e, a);
      var l = o._malloc(e.length + 1024);
      var d = o._encode(s, i, n, e.length, a, e.length, l);
      var h = null;
      if (d !== -1) {
        h = new Uint8Array(d);
        h.set(o.HEAPU8.subarray(l, l + d));
      }
      o._free(a);
      o._free(l);
      return h;
    };
  },
  6964: (e) => {
    var r = 4096;
    var s = 2 * r + 32;
    var o = 2 * r - 1;
    var n = new Uint32Array([
      0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215,
    ]);
    function BrotliBitReader(e) {
      this.buf_ = new Uint8Array(s);
      this.input_ = e;
      this.reset();
    }
    BrotliBitReader.READ_SIZE = r;
    BrotliBitReader.IBUF_MASK = o;
    BrotliBitReader.prototype.reset = function () {
      this.buf_ptr_ = 0;
      this.val_ = 0;
      this.pos_ = 0;
      this.bit_pos_ = 0;
      this.bit_end_pos_ = 0;
      this.eos_ = 0;
      this.readMoreInput();
      for (var e = 0; e < 4; e++) {
        this.val_ |= this.buf_[this.pos_] << (8 * e);
        ++this.pos_;
      }
      return this.bit_end_pos_ > 0;
    };
    BrotliBitReader.prototype.readMoreInput = function () {
      if (this.bit_end_pos_ > 256) {
        return;
      } else if (this.eos_) {
        if (this.bit_pos_ > this.bit_end_pos_) throw new Error("Unexpected end of input " + this.bit_pos_ + " " + this.bit_end_pos_);
      } else {
        var e = this.buf_ptr_;
        var s = this.input_.read(this.buf_, e, r);
        if (s < 0) {
          throw new Error("Unexpected end of input");
        }
        if (s < r) {
          this.eos_ = 1;
          for (var o = 0; o < 32; o++) this.buf_[e + s + o] = 0;
        }
        if (e === 0) {
          for (var o = 0; o < 32; o++) this.buf_[(r << 1) + o] = this.buf_[o];
          this.buf_ptr_ = r;
        } else {
          this.buf_ptr_ = 0;
        }
        this.bit_end_pos_ += s << 3;
      }
    };
    BrotliBitReader.prototype.fillBitWindow = function () {
      while (this.bit_pos_ >= 8) {
        this.val_ >>>= 8;
        this.val_ |= this.buf_[this.pos_ & o] << 24;
        ++this.pos_;
        this.bit_pos_ = (this.bit_pos_ - 8) >>> 0;
        this.bit_end_pos_ = (this.bit_end_pos_ - 8) >>> 0;
      }
    };
    BrotliBitReader.prototype.readBits = function (e) {
      if (32 - this.bit_pos_ < e) {
        this.fillBitWindow();
      }
      var r = (this.val_ >>> this.bit_pos_) & n[e];
      this.bit_pos_ += e;
      return r;
    };
    e.exports = BrotliBitReader;
  },
  2464: (e, r) => {
    var s = 0;
    var o = 1;
    var n = 2;
    var i = 3;
    r.lookup = new Uint8Array([
      0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36,
      12, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12, 12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52,
      48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12, 12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60,
      24, 12, 28, 12, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
      1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
      2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
      2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
      3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
      2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
      3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
      3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
      4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
      5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 16,
      16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
      16, 16, 16, 16, 16, 16, 16, 16, 16, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
      24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 32, 32, 32,
      32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
      32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
      40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 48, 48, 48, 48, 48,
      48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
      30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5,
      6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
      45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
      22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
      60, 61, 62, 63, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
      37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3,
      3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14,
      15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24,
      24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31, 32, 32, 32, 32, 33, 33, 33, 33,
      34, 34, 34, 34, 35, 35, 35, 35, 36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43,
      43, 43, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47, 48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51, 52, 52, 52, 52,
      53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55, 56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59, 60, 60, 60, 60, 61, 61, 61, 61, 62, 62,
      62, 62, 63, 63, 63, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0,
    ]);
    r.lookupOffsets = new Uint16Array([1024, 1536, 1280, 1536, 0, 256, 768, 512]);
  },
  6949: (e, r, s) => {
    var o;
    var n = s(826).z;
    var i = s(826).y;
    var a = s(6964);
    var l = s(9251);
    var d = s(850).z;
    var h = s(850).u;
    var p = s(2464);
    var w = s(680);
    var k = s(2795);
    var _ = 8;
    var M = 16;
    var j = 256;
    var q = 704;
    var $ = 26;
    var ee = 6;
    var te = 2;
    var re = 8;
    var se = 255;
    var oe = 1080;
    var ne = 18;
    var ie = new Uint8Array([1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15]);
    var Ae = 16;
    var ae = new Uint8Array([3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2]);
    var ce = new Int8Array([0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3]);
    var le = new Uint16Array([256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822, 854, 886, 920, 952, 984, 1016, 1048, 1080]);
    function DecodeWindowBits(e) {
      var r;
      if (e.readBits(1) === 0) {
        return 16;
      }
      r = e.readBits(3);
      if (r > 0) {
        return 17 + r;
      }
      r = e.readBits(3);
      if (r > 0) {
        return 8 + r;
      }
      return 17;
    }
    function DecodeVarLenUint8(e) {
      if (e.readBits(1)) {
        var r = e.readBits(3);
        if (r === 0) {
          return 1;
        } else {
          return e.readBits(r) + (1 << r);
        }
      }
      return 0;
    }
    function MetaBlockLength() {
      this.meta_block_length = 0;
      this.input_end = 0;
      this.is_uncompressed = 0;
      this.is_metadata = false;
    }
    function DecodeMetaBlockLength(e) {
      var r = new MetaBlockLength();
      var s;
      var o;
      var n;
      r.input_end = e.readBits(1);
      if (r.input_end && e.readBits(1)) {
        return r;
      }
      s = e.readBits(2) + 4;
      if (s === 7) {
        r.is_metadata = true;
        if (e.readBits(1) !== 0) throw new Error("Invalid reserved bit");
        o = e.readBits(2);
        if (o === 0) return r;
        for (n = 0; n < o; n++) {
          var i = e.readBits(8);
          if (n + 1 === o && o > 1 && i === 0) throw new Error("Invalid size byte");
          r.meta_block_length |= i << (n * 8);
        }
      } else {
        for (n = 0; n < s; ++n) {
          var a = e.readBits(4);
          if (n + 1 === s && s > 4 && a === 0) throw new Error("Invalid size nibble");
          r.meta_block_length |= a << (n * 4);
        }
      }
      ++r.meta_block_length;
      if (!r.input_end && !r.is_metadata) {
        r.is_uncompressed = e.readBits(1);
      }
      return r;
    }
    function ReadSymbol(e, r, s) {
      var o = r;
      var n;
      s.fillBitWindow();
      r += (s.val_ >>> s.bit_pos_) & se;
      n = e[r].bits - re;
      if (n > 0) {
        s.bit_pos_ += re;
        r += e[r].value;
        r += (s.val_ >>> s.bit_pos_) & ((1 << n) - 1);
      }
      s.bit_pos_ += e[r].bits;
      return e[r].value;
    }
    function ReadHuffmanCodeLengths(e, r, s, o) {
      var n = 0;
      var i = _;
      var a = 0;
      var l = 0;
      var p = 32768;
      var w = [];
      for (var k = 0; k < 32; k++) w.push(new d(0, 0));
      h(w, 0, 5, e, ne);
      while (n < r && p > 0) {
        var j = 0;
        var q;
        o.readMoreInput();
        o.fillBitWindow();
        j += (o.val_ >>> o.bit_pos_) & 31;
        o.bit_pos_ += w[j].bits;
        q = w[j].value & 255;
        if (q < M) {
          a = 0;
          s[n++] = q;
          if (q !== 0) {
            i = q;
            p -= 32768 >> q;
          }
        } else {
          var $ = q - 14;
          var ee;
          var te;
          var re = 0;
          if (q === M) {
            re = i;
          }
          if (l !== re) {
            a = 0;
            l = re;
          }
          ee = a;
          if (a > 0) {
            a -= 2;
            a <<= $;
          }
          a += o.readBits($) + 3;
          te = a - ee;
          if (n + te > r) {
            throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");
          }
          for (var se = 0; se < te; se++) s[n + se] = l;
          n += te;
          if (l !== 0) {
            p -= te << (15 - l);
          }
        }
      }
      if (p !== 0) {
        throw new Error("[ReadHuffmanCodeLengths] space = " + p);
      }
      for (; n < r; n++) s[n] = 0;
    }
    function ReadHuffmanCode(e, r, s, o) {
      var n = 0;
      var i;
      var a = new Uint8Array(e);
      o.readMoreInput();
      i = o.readBits(2);
      if (i === 1) {
        var l;
        var p = e - 1;
        var w = 0;
        var k = new Int32Array(4);
        var _ = o.readBits(2) + 1;
        while (p) {
          p >>= 1;
          ++w;
        }
        for (l = 0; l < _; ++l) {
          k[l] = o.readBits(w) % e;
          a[k[l]] = 2;
        }
        a[k[0]] = 1;
        switch (_) {
          case 1:
            break;
          case 3:
            if (k[0] === k[1] || k[0] === k[2] || k[1] === k[2]) {
              throw new Error("[ReadHuffmanCode] invalid symbols");
            }
            break;
          case 2:
            if (k[0] === k[1]) {
              throw new Error("[ReadHuffmanCode] invalid symbols");
            }
            a[k[1]] = 1;
            break;
          case 4:
            if (k[0] === k[1] || k[0] === k[2] || k[0] === k[3] || k[1] === k[2] || k[1] === k[3] || k[2] === k[3]) {
              throw new Error("[ReadHuffmanCode] invalid symbols");
            }
            if (o.readBits(1)) {
              a[k[2]] = 3;
              a[k[3]] = 3;
            } else {
              a[k[0]] = 2;
            }
            break;
        }
      } else {
        var l;
        var M = new Uint8Array(ne);
        var j = 32;
        var q = 0;
        var $ = [
          new d(2, 0),
          new d(2, 4),
          new d(2, 3),
          new d(3, 2),
          new d(2, 0),
          new d(2, 4),
          new d(2, 3),
          new d(4, 1),
          new d(2, 0),
          new d(2, 4),
          new d(2, 3),
          new d(3, 2),
          new d(2, 0),
          new d(2, 4),
          new d(2, 3),
          new d(4, 5),
        ];
        for (l = i; l < ne && j > 0; ++l) {
          var ee = ie[l];
          var te = 0;
          var se;
          o.fillBitWindow();
          te += (o.val_ >>> o.bit_pos_) & 15;
          o.bit_pos_ += $[te].bits;
          se = $[te].value;
          M[ee] = se;
          if (se !== 0) {
            j -= 32 >> se;
            ++q;
          }
        }
        if (!(q === 1 || j === 0)) throw new Error("[ReadHuffmanCode] invalid num_codes or space");
        ReadHuffmanCodeLengths(M, e, a, o);
      }
      n = h(r, s, re, a, e);
      if (n === 0) {
        throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
      }
      return n;
    }
    function ReadBlockLength(e, r, s) {
      var o;
      var n;
      o = ReadSymbol(e, r, s);
      n = w.kBlockLengthPrefixCode[o].nbits;
      return w.kBlockLengthPrefixCode[o].offset + s.readBits(n);
    }
    function TranslateShortCodes(e, r, s) {
      var o;
      if (e < Ae) {
        s += ae[e];
        s &= 3;
        o = r[s] + ce[e];
      } else {
        o = e - Ae + 1;
      }
      return o;
    }
    function MoveToFront(e, r) {
      var s = e[r];
      var o = r;
      for (; o; --o) e[o] = e[o - 1];
      e[0] = s;
    }
    function InverseMoveToFrontTransform(e, r) {
      var s = new Uint8Array(256);
      var o;
      for (o = 0; o < 256; ++o) {
        s[o] = o;
      }
      for (o = 0; o < r; ++o) {
        var n = e[o];
        e[o] = s[n];
        if (n) MoveToFront(s, n);
      }
    }
    function HuffmanTreeGroup(e, r) {
      this.alphabet_size = e;
      this.num_htrees = r;
      this.codes = new Array(r + r * le[(e + 31) >>> 5]);
      this.htrees = new Uint32Array(r);
    }
    HuffmanTreeGroup.prototype.decode = function (e) {
      var r;
      var s;
      var o = 0;
      for (r = 0; r < this.num_htrees; ++r) {
        this.htrees[r] = o;
        s = ReadHuffmanCode(this.alphabet_size, this.codes, o, e);
        o += s;
      }
    };
    function DecodeContextMap(e, r) {
      var s = { num_htrees: null, context_map: null };
      var o;
      var n = 0;
      var i;
      var a;
      r.readMoreInput();
      var l = (s.num_htrees = DecodeVarLenUint8(r) + 1);
      var h = (s.context_map = new Uint8Array(e));
      if (l <= 1) {
        return s;
      }
      o = r.readBits(1);
      if (o) {
        n = r.readBits(4) + 1;
      }
      i = [];
      for (a = 0; a < oe; a++) {
        i[a] = new d(0, 0);
      }
      ReadHuffmanCode(l + n, i, 0, r);
      for (a = 0; a < e; ) {
        var p;
        r.readMoreInput();
        p = ReadSymbol(i, 0, r);
        if (p === 0) {
          h[a] = 0;
          ++a;
        } else if (p <= n) {
          var w = 1 + (1 << p) + r.readBits(p);
          while (--w) {
            if (a >= e) {
              throw new Error("[DecodeContextMap] i >= context_map_size");
            }
            h[a] = 0;
            ++a;
          }
        } else {
          h[a] = p - n;
          ++a;
        }
      }
      if (r.readBits(1)) {
        InverseMoveToFrontTransform(h, e);
      }
      return s;
    }
    function DecodeBlockType(e, r, s, o, n, i, a) {
      var l = s * 2;
      var d = s;
      var h = ReadSymbol(r, s * oe, a);
      var p;
      if (h === 0) {
        p = n[l + (i[d] & 1)];
      } else if (h === 1) {
        p = n[l + ((i[d] - 1) & 1)] + 1;
      } else {
        p = h - 2;
      }
      if (p >= e) {
        p -= e;
      }
      o[s] = p;
      n[l + (i[d] & 1)] = p;
      ++i[d];
    }
    function CopyUncompressedBlockToOutput(e, r, s, o, n, i) {
      var l = n + 1;
      var d = s & n;
      var h = i.pos_ & a.IBUF_MASK;
      var p;
      if (r < 8 || i.bit_pos_ + (r << 3) < i.bit_end_pos_) {
        while (r-- > 0) {
          i.readMoreInput();
          o[d++] = i.readBits(8);
          if (d === l) {
            e.write(o, l);
            d = 0;
          }
        }
        return;
      }
      if (i.bit_end_pos_ < 32) {
        throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");
      }
      while (i.bit_pos_ < 32) {
        o[d] = i.val_ >>> i.bit_pos_;
        i.bit_pos_ += 8;
        ++d;
        --r;
      }
      p = (i.bit_end_pos_ - i.bit_pos_) >> 3;
      if (h + p > a.IBUF_MASK) {
        var w = a.IBUF_MASK + 1 - h;
        for (var k = 0; k < w; k++) o[d + k] = i.buf_[h + k];
        p -= w;
        d += w;
        r -= w;
        h = 0;
      }
      for (var k = 0; k < p; k++) o[d + k] = i.buf_[h + k];
      d += p;
      r -= p;
      if (d >= l) {
        e.write(o, l);
        d -= l;
        for (var k = 0; k < d; k++) o[k] = o[l + k];
      }
      while (d + r >= l) {
        p = l - d;
        if (i.input_.read(o, d, p) < p) {
          throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
        }
        e.write(o, l);
        r -= p;
        d = 0;
      }
      if (i.input_.read(o, d, r) < r) {
        throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
      }
      i.reset();
    }
    function JumpToByteBoundary(e) {
      var r = (e.bit_pos_ + 7) & ~7;
      var s = e.readBits(r - e.bit_pos_);
      return s == 0;
    }
    function BrotliDecompressedSize(e) {
      var r = new n(e);
      var s = new a(r);
      DecodeWindowBits(s);
      var o = DecodeMetaBlockLength(s);
      return o.meta_block_length;
    }
    o = BrotliDecompressedSize;
    function BrotliDecompressBuffer(e, r) {
      var s = new n(e);
      if (r == null) {
        r = BrotliDecompressedSize(e);
      }
      var o = new Uint8Array(r);
      var a = new i(o);
      BrotliDecompress(s, a);
      if (a.pos < a.buffer.length) {
        a.buffer = a.buffer.subarray(0, a.pos);
      }
      return a.buffer;
    }
    r.BrotliDecompressBuffer = BrotliDecompressBuffer;
    function BrotliDecompress(e, r) {
      var s;
      var o = 0;
      var n = 0;
      var i = 0;
      var h;
      var _ = 0;
      var M;
      var re;
      var se;
      var ne;
      var ie = [16, 15, 11, 4];
      var ae = 0;
      var ce = 0;
      var le = 0;
      var ue = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];
      var ge;
      var de;
      var fe;
      var he = 128 + a.READ_SIZE;
      fe = new a(e);
      i = DecodeWindowBits(fe);
      h = (1 << i) - 16;
      M = 1 << i;
      re = M - 1;
      se = new Uint8Array(M + he + l.maxDictionaryWordLength);
      ne = M;
      ge = [];
      de = [];
      for (var pe = 0; pe < 3 * oe; pe++) {
        ge[pe] = new d(0, 0);
        de[pe] = new d(0, 0);
      }
      while (!n) {
        var Ee = 0;
        var Ie;
        var Ce = [1 << 28, 1 << 28, 1 << 28];
        var me = [0];
        var Be = [1, 1, 1];
        var Qe = [0, 1, 0, 1, 0, 1];
        var be = [0];
        var we;
        var ye;
        var ke;
        var Re;
        var Te = null;
        var De = null;
        var Fe;
        var ve = null;
        var Se;
        var Ne = 0;
        var Oe = null;
        var Ue = 0;
        var Ge = 0;
        var Pe = null;
        var Le = 0;
        var _e = 0;
        var Me = 0;
        var xe;
        var He;
        for (s = 0; s < 3; ++s) {
          ue[s].codes = null;
          ue[s].htrees = null;
        }
        fe.readMoreInput();
        var Ve = DecodeMetaBlockLength(fe);
        Ee = Ve.meta_block_length;
        if (o + Ee > r.buffer.length) {
          var Ye = new Uint8Array(o + Ee);
          Ye.set(r.buffer);
          r.buffer = Ye;
        }
        n = Ve.input_end;
        Ie = Ve.is_uncompressed;
        if (Ve.is_metadata) {
          JumpToByteBoundary(fe);
          for (; Ee > 0; --Ee) {
            fe.readMoreInput();
            fe.readBits(8);
          }
          continue;
        }
        if (Ee === 0) {
          continue;
        }
        if (Ie) {
          fe.bit_pos_ = (fe.bit_pos_ + 7) & ~7;
          CopyUncompressedBlockToOutput(r, Ee, o, se, re, fe);
          o += Ee;
          continue;
        }
        for (s = 0; s < 3; ++s) {
          Be[s] = DecodeVarLenUint8(fe) + 1;
          if (Be[s] >= 2) {
            ReadHuffmanCode(Be[s] + 2, ge, s * oe, fe);
            ReadHuffmanCode($, de, s * oe, fe);
            Ce[s] = ReadBlockLength(de, s * oe, fe);
            be[s] = 1;
          }
        }
        fe.readMoreInput();
        we = fe.readBits(2);
        ye = Ae + (fe.readBits(4) << we);
        ke = (1 << we) - 1;
        Re = ye + (48 << we);
        De = new Uint8Array(Be[0]);
        for (s = 0; s < Be[0]; ++s) {
          fe.readMoreInput();
          De[s] = fe.readBits(2) << 1;
        }
        var je = DecodeContextMap(Be[0] << ee, fe);
        Fe = je.num_htrees;
        Te = je.context_map;
        var qe = DecodeContextMap(Be[2] << te, fe);
        Se = qe.num_htrees;
        ve = qe.context_map;
        ue[0] = new HuffmanTreeGroup(j, Fe);
        ue[1] = new HuffmanTreeGroup(q, Be[1]);
        ue[2] = new HuffmanTreeGroup(Re, Se);
        for (s = 0; s < 3; ++s) {
          ue[s].decode(fe);
        }
        Oe = 0;
        Pe = 0;
        xe = De[me[0]];
        _e = p.lookupOffsets[xe];
        Me = p.lookupOffsets[xe + 1];
        He = ue[1].htrees[0];
        while (Ee > 0) {
          var Je;
          var We;
          var Ke;
          var Xe;
          var ze;
          var Ze;
          var $e;
          var et;
          var tt;
          var rt;
          var st;
          fe.readMoreInput();
          if (Ce[1] === 0) {
            DecodeBlockType(Be[1], ge, 1, me, Qe, be, fe);
            Ce[1] = ReadBlockLength(de, oe, fe);
            He = ue[1].htrees[me[1]];
          }
          --Ce[1];
          Je = ReadSymbol(ue[1].codes, He, fe);
          We = Je >> 6;
          if (We >= 2) {
            We -= 2;
            $e = -1;
          } else {
            $e = 0;
          }
          Ke = w.kInsertRangeLut[We] + ((Je >> 3) & 7);
          Xe = w.kCopyRangeLut[We] + (Je & 7);
          ze = w.kInsertLengthPrefixCode[Ke].offset + fe.readBits(w.kInsertLengthPrefixCode[Ke].nbits);
          Ze = w.kCopyLengthPrefixCode[Xe].offset + fe.readBits(w.kCopyLengthPrefixCode[Xe].nbits);
          ce = se[(o - 1) & re];
          le = se[(o - 2) & re];
          for (rt = 0; rt < ze; ++rt) {
            fe.readMoreInput();
            if (Ce[0] === 0) {
              DecodeBlockType(Be[0], ge, 0, me, Qe, be, fe);
              Ce[0] = ReadBlockLength(de, 0, fe);
              Ne = me[0] << ee;
              Oe = Ne;
              xe = De[me[0]];
              _e = p.lookupOffsets[xe];
              Me = p.lookupOffsets[xe + 1];
            }
            tt = p.lookup[_e + ce] | p.lookup[Me + le];
            Ue = Te[Oe + tt];
            --Ce[0];
            le = ce;
            ce = ReadSymbol(ue[0].codes, ue[0].htrees[Ue], fe);
            se[o & re] = ce;
            if ((o & re) === re) {
              r.write(se, M);
            }
            ++o;
          }
          Ee -= ze;
          if (Ee <= 0) break;
          if ($e < 0) {
            var tt;
            fe.readMoreInput();
            if (Ce[2] === 0) {
              DecodeBlockType(Be[2], ge, 2, me, Qe, be, fe);
              Ce[2] = ReadBlockLength(de, 2 * oe, fe);
              Ge = me[2] << te;
              Pe = Ge;
            }
            --Ce[2];
            tt = (Ze > 4 ? 3 : Ze - 2) & 255;
            Le = ve[Pe + tt];
            $e = ReadSymbol(ue[2].codes, ue[2].htrees[Le], fe);
            if ($e >= ye) {
              var ot;
              var nt;
              var it;
              $e -= ye;
              nt = $e & ke;
              $e >>= we;
              ot = ($e >> 1) + 1;
              it = ((2 + ($e & 1)) << ot) - 4;
              $e = ye + ((it + fe.readBits(ot)) << we) + nt;
            }
          }
          et = TranslateShortCodes($e, ie, ae);
          if (et < 0) {
            throw new Error("[BrotliDecompress] invalid distance");
          }
          if (o < h && _ !== h) {
            _ = o;
          } else {
            _ = h;
          }
          st = o & re;
          if (et > _) {
            if (Ze >= l.minDictionaryWordLength && Ze <= l.maxDictionaryWordLength) {
              var it = l.offsetsByLength[Ze];
              var At = et - _ - 1;
              var at = l.sizeBitsByLength[Ze];
              var ct = (1 << at) - 1;
              var lt = At & ct;
              var ut = At >> at;
              it += lt * Ze;
              if (ut < k.kNumTransforms) {
                var gt = k.transformDictionaryWord(se, st, it, Ze, ut);
                st += gt;
                o += gt;
                Ee -= gt;
                if (st >= ne) {
                  r.write(se, M);
                  for (var dt = 0; dt < st - ne; dt++) se[dt] = se[ne + dt];
                }
              } else {
                throw new Error("Invalid backward reference. pos: " + o + " distance: " + et + " len: " + Ze + " bytes left: " + Ee);
              }
            } else {
              throw new Error("Invalid backward reference. pos: " + o + " distance: " + et + " len: " + Ze + " bytes left: " + Ee);
            }
          } else {
            if ($e > 0) {
              ie[ae & 3] = et;
              ++ae;
            }
            if (Ze > Ee) {
              throw new Error("Invalid backward reference. pos: " + o + " distance: " + et + " len: " + Ze + " bytes left: " + Ee);
            }
            for (rt = 0; rt < Ze; ++rt) {
              se[o & re] = se[(o - et) & re];
              if ((o & re) === re) {
                r.write(se, M);
              }
              ++o;
              --Ee;
            }
          }
          ce = se[(o - 1) & re];
          le = se[(o - 2) & re];
        }
        o &= 1073741823;
      }
      r.write(se, o & re);
    }
    o = BrotliDecompress;
    l.init();
  },
  5088: (e, r) => {
    r.dictionary = new Uint8Array([
      116, 105, 109, 101, 100, 111, 119, 110, 108, 105, 102, 101, 108, 101, 102, 116, 98, 97, 99, 107, 99, 111, 100, 101, 100, 97, 116, 97, 115, 104, 111, 119,
      111, 110, 108, 121, 115, 105, 116, 101, 99, 105, 116, 121, 111, 112, 101, 110, 106, 117, 115, 116, 108, 105, 107, 101, 102, 114, 101, 101, 119, 111, 114,
      107, 116, 101, 120, 116, 121, 101, 97, 114, 111, 118, 101, 114, 98, 111, 100, 121, 108, 111, 118, 101, 102, 111, 114, 109, 98, 111, 111, 107, 112, 108,
      97, 121, 108, 105, 118, 101, 108, 105, 110, 101, 104, 101, 108, 112, 104, 111, 109, 101, 115, 105, 100, 101, 109, 111, 114, 101, 119, 111, 114, 100, 108,
      111, 110, 103, 116, 104, 101, 109, 118, 105, 101, 119, 102, 105, 110, 100, 112, 97, 103, 101, 100, 97, 121, 115, 102, 117, 108, 108, 104, 101, 97, 100,
      116, 101, 114, 109, 101, 97, 99, 104, 97, 114, 101, 97, 102, 114, 111, 109, 116, 114, 117, 101, 109, 97, 114, 107, 97, 98, 108, 101, 117, 112, 111, 110,
      104, 105, 103, 104, 100, 97, 116, 101, 108, 97, 110, 100, 110, 101, 119, 115, 101, 118, 101, 110, 110, 101, 120, 116, 99, 97, 115, 101, 98, 111, 116, 104,
      112, 111, 115, 116, 117, 115, 101, 100, 109, 97, 100, 101, 104, 97, 110, 100, 104, 101, 114, 101, 119, 104, 97, 116, 110, 97, 109, 101, 76, 105, 110, 107,
      98, 108, 111, 103, 115, 105, 122, 101, 98, 97, 115, 101, 104, 101, 108, 100, 109, 97, 107, 101, 109, 97, 105, 110, 117, 115, 101, 114, 39, 41, 32, 43,
      104, 111, 108, 100, 101, 110, 100, 115, 119, 105, 116, 104, 78, 101, 119, 115, 114, 101, 97, 100, 119, 101, 114, 101, 115, 105, 103, 110, 116, 97, 107,
      101, 104, 97, 118, 101, 103, 97, 109, 101, 115, 101, 101, 110, 99, 97, 108, 108, 112, 97, 116, 104, 119, 101, 108, 108, 112, 108, 117, 115, 109, 101, 110,
      117, 102, 105, 108, 109, 112, 97, 114, 116, 106, 111, 105, 110, 116, 104, 105, 115, 108, 105, 115, 116, 103, 111, 111, 100, 110, 101, 101, 100, 119, 97,
      121, 115, 119, 101, 115, 116, 106, 111, 98, 115, 109, 105, 110, 100, 97, 108, 115, 111, 108, 111, 103, 111, 114, 105, 99, 104, 117, 115, 101, 115, 108,
      97, 115, 116, 116, 101, 97, 109, 97, 114, 109, 121, 102, 111, 111, 100, 107, 105, 110, 103, 119, 105, 108, 108, 101, 97, 115, 116, 119, 97, 114, 100, 98,
      101, 115, 116, 102, 105, 114, 101, 80, 97, 103, 101, 107, 110, 111, 119, 97, 119, 97, 121, 46, 112, 110, 103, 109, 111, 118, 101, 116, 104, 97, 110, 108,
      111, 97, 100, 103, 105, 118, 101, 115, 101, 108, 102, 110, 111, 116, 101, 109, 117, 99, 104, 102, 101, 101, 100, 109, 97, 110, 121, 114, 111, 99, 107,
      105, 99, 111, 110, 111, 110, 99, 101, 108, 111, 111, 107, 104, 105, 100, 101, 100, 105, 101, 100, 72, 111, 109, 101, 114, 117, 108, 101, 104, 111, 115,
      116, 97, 106, 97, 120, 105, 110, 102, 111, 99, 108, 117, 98, 108, 97, 119, 115, 108, 101, 115, 115, 104, 97, 108, 102, 115, 111, 109, 101, 115, 117, 99,
      104, 122, 111, 110, 101, 49, 48, 48, 37, 111, 110, 101, 115, 99, 97, 114, 101, 84, 105, 109, 101, 114, 97, 99, 101, 98, 108, 117, 101, 102, 111, 117, 114,
      119, 101, 101, 107, 102, 97, 99, 101, 104, 111, 112, 101, 103, 97, 118, 101, 104, 97, 114, 100, 108, 111, 115, 116, 119, 104, 101, 110, 112, 97, 114, 107,
      107, 101, 112, 116, 112, 97, 115, 115, 115, 104, 105, 112, 114, 111, 111, 109, 72, 84, 77, 76, 112, 108, 97, 110, 84, 121, 112, 101, 100, 111, 110, 101,
      115, 97, 118, 101, 107, 101, 101, 112, 102, 108, 97, 103, 108, 105, 110, 107, 115, 111, 108, 100, 102, 105, 118, 101, 116, 111, 111, 107, 114, 97, 116,
      101, 116, 111, 119, 110, 106, 117, 109, 112, 116, 104, 117, 115, 100, 97, 114, 107, 99, 97, 114, 100, 102, 105, 108, 101, 102, 101, 97, 114, 115, 116, 97,
      121, 107, 105, 108, 108, 116, 104, 97, 116, 102, 97, 108, 108, 97, 117, 116, 111, 101, 118, 101, 114, 46, 99, 111, 109, 116, 97, 108, 107, 115, 104, 111,
      112, 118, 111, 116, 101, 100, 101, 101, 112, 109, 111, 100, 101, 114, 101, 115, 116, 116, 117, 114, 110, 98, 111, 114, 110, 98, 97, 110, 100, 102, 101,
      108, 108, 114, 111, 115, 101, 117, 114, 108, 40, 115, 107, 105, 110, 114, 111, 108, 101, 99, 111, 109, 101, 97, 99, 116, 115, 97, 103, 101, 115, 109, 101,
      101, 116, 103, 111, 108, 100, 46, 106, 112, 103, 105, 116, 101, 109, 118, 97, 114, 121, 102, 101, 108, 116, 116, 104, 101, 110, 115, 101, 110, 100, 100,
      114, 111, 112, 86, 105, 101, 119, 99, 111, 112, 121, 49, 46, 48, 34, 60, 47, 97, 62, 115, 116, 111, 112, 101, 108, 115, 101, 108, 105, 101, 115, 116, 111,
      117, 114, 112, 97, 99, 107, 46, 103, 105, 102, 112, 97, 115, 116, 99, 115, 115, 63, 103, 114, 97, 121, 109, 101, 97, 110, 38, 103, 116, 59, 114, 105, 100,
      101, 115, 104, 111, 116, 108, 97, 116, 101, 115, 97, 105, 100, 114, 111, 97, 100, 118, 97, 114, 32, 102, 101, 101, 108, 106, 111, 104, 110, 114, 105, 99,
      107, 112, 111, 114, 116, 102, 97, 115, 116, 39, 85, 65, 45, 100, 101, 97, 100, 60, 47, 98, 62, 112, 111, 111, 114, 98, 105, 108, 108, 116, 121, 112, 101,
      85, 46, 83, 46, 119, 111, 111, 100, 109, 117, 115, 116, 50, 112, 120, 59, 73, 110, 102, 111, 114, 97, 110, 107, 119, 105, 100, 101, 119, 97, 110, 116,
      119, 97, 108, 108, 108, 101, 97, 100, 91, 48, 93, 59, 112, 97, 117, 108, 119, 97, 118, 101, 115, 117, 114, 101, 36, 40, 39, 35, 119, 97, 105, 116, 109,
      97, 115, 115, 97, 114, 109, 115, 103, 111, 101, 115, 103, 97, 105, 110, 108, 97, 110, 103, 112, 97, 105, 100, 33, 45, 45, 32, 108, 111, 99, 107, 117, 110,
      105, 116, 114, 111, 111, 116, 119, 97, 108, 107, 102, 105, 114, 109, 119, 105, 102, 101, 120, 109, 108, 34, 115, 111, 110, 103, 116, 101, 115, 116, 50,
      48, 112, 120, 107, 105, 110, 100, 114, 111, 119, 115, 116, 111, 111, 108, 102, 111, 110, 116, 109, 97, 105, 108, 115, 97, 102, 101, 115, 116, 97, 114,
      109, 97, 112, 115, 99, 111, 114, 101, 114, 97, 105, 110, 102, 108, 111, 119, 98, 97, 98, 121, 115, 112, 97, 110, 115, 97, 121, 115, 52, 112, 120, 59, 54,
      112, 120, 59, 97, 114, 116, 115, 102, 111, 111, 116, 114, 101, 97, 108, 119, 105, 107, 105, 104, 101, 97, 116, 115, 116, 101, 112, 116, 114, 105, 112,
      111, 114, 103, 47, 108, 97, 107, 101, 119, 101, 97, 107, 116, 111, 108, 100, 70, 111, 114, 109, 99, 97, 115, 116, 102, 97, 110, 115, 98, 97, 110, 107,
      118, 101, 114, 121, 114, 117, 110, 115, 106, 117, 108, 121, 116, 97, 115, 107, 49, 112, 120, 59, 103, 111, 97, 108, 103, 114, 101, 119, 115, 108, 111,
      119, 101, 100, 103, 101, 105, 100, 61, 34, 115, 101, 116, 115, 53, 112, 120, 59, 46, 106, 115, 63, 52, 48, 112, 120, 105, 102, 32, 40, 115, 111, 111, 110,
      115, 101, 97, 116, 110, 111, 110, 101, 116, 117, 98, 101, 122, 101, 114, 111, 115, 101, 110, 116, 114, 101, 101, 100, 102, 97, 99, 116, 105, 110, 116,
      111, 103, 105, 102, 116, 104, 97, 114, 109, 49, 56, 112, 120, 99, 97, 109, 101, 104, 105, 108, 108, 98, 111, 108, 100, 122, 111, 111, 109, 118, 111, 105,
      100, 101, 97, 115, 121, 114, 105, 110, 103, 102, 105, 108, 108, 112, 101, 97, 107, 105, 110, 105, 116, 99, 111, 115, 116, 51, 112, 120, 59, 106, 97, 99,
      107, 116, 97, 103, 115, 98, 105, 116, 115, 114, 111, 108, 108, 101, 100, 105, 116, 107, 110, 101, 119, 110, 101, 97, 114, 60, 33, 45, 45, 103, 114, 111,
      119, 74, 83, 79, 78, 100, 117, 116, 121, 78, 97, 109, 101, 115, 97, 108, 101, 121, 111, 117, 32, 108, 111, 116, 115, 112, 97, 105, 110, 106, 97, 122, 122,
      99, 111, 108, 100, 101, 121, 101, 115, 102, 105, 115, 104, 119, 119, 119, 46, 114, 105, 115, 107, 116, 97, 98, 115, 112, 114, 101, 118, 49, 48, 112, 120,
      114, 105, 115, 101, 50, 53, 112, 120, 66, 108, 117, 101, 100, 105, 110, 103, 51, 48, 48, 44, 98, 97, 108, 108, 102, 111, 114, 100, 101, 97, 114, 110, 119,
      105, 108, 100, 98, 111, 120, 46, 102, 97, 105, 114, 108, 97, 99, 107, 118, 101, 114, 115, 112, 97, 105, 114, 106, 117, 110, 101, 116, 101, 99, 104, 105,
      102, 40, 33, 112, 105, 99, 107, 101, 118, 105, 108, 36, 40, 34, 35, 119, 97, 114, 109, 108, 111, 114, 100, 100, 111, 101, 115, 112, 117, 108, 108, 44, 48,
      48, 48, 105, 100, 101, 97, 100, 114, 97, 119, 104, 117, 103, 101, 115, 112, 111, 116, 102, 117, 110, 100, 98, 117, 114, 110, 104, 114, 101, 102, 99, 101,
      108, 108, 107, 101, 121, 115, 116, 105, 99, 107, 104, 111, 117, 114, 108, 111, 115, 115, 102, 117, 101, 108, 49, 50, 112, 120, 115, 117, 105, 116, 100,
      101, 97, 108, 82, 83, 83, 34, 97, 103, 101, 100, 103, 114, 101, 121, 71, 69, 84, 34, 101, 97, 115, 101, 97, 105, 109, 115, 103, 105, 114, 108, 97, 105,
      100, 115, 56, 112, 120, 59, 110, 97, 118, 121, 103, 114, 105, 100, 116, 105, 112, 115, 35, 57, 57, 57, 119, 97, 114, 115, 108, 97, 100, 121, 99, 97, 114,
      115, 41, 59, 32, 125, 112, 104, 112, 63, 104, 101, 108, 108, 116, 97, 108, 108, 119, 104, 111, 109, 122, 104, 58, 229, 42, 47, 13, 10, 32, 49, 48, 48,
      104, 97, 108, 108, 46, 10, 10, 65, 55, 112, 120, 59, 112, 117, 115, 104, 99, 104, 97, 116, 48, 112, 120, 59, 99, 114, 101, 119, 42, 47, 60, 47, 104, 97,
      115, 104, 55, 53, 112, 120, 102, 108, 97, 116, 114, 97, 114, 101, 32, 38, 38, 32, 116, 101, 108, 108, 99, 97, 109, 112, 111, 110, 116, 111, 108, 97, 105,
      100, 109, 105, 115, 115, 115, 107, 105, 112, 116, 101, 110, 116, 102, 105, 110, 101, 109, 97, 108, 101, 103, 101, 116, 115, 112, 108, 111, 116, 52, 48,
      48, 44, 13, 10, 13, 10, 99, 111, 111, 108, 102, 101, 101, 116, 46, 112, 104, 112, 60, 98, 114, 62, 101, 114, 105, 99, 109, 111, 115, 116, 103, 117, 105,
      100, 98, 101, 108, 108, 100, 101, 115, 99, 104, 97, 105, 114, 109, 97, 116, 104, 97, 116, 111, 109, 47, 105, 109, 103, 38, 35, 56, 50, 108, 117, 99, 107,
      99, 101, 110, 116, 48, 48, 48, 59, 116, 105, 110, 121, 103, 111, 110, 101, 104, 116, 109, 108, 115, 101, 108, 108, 100, 114, 117, 103, 70, 82, 69, 69,
      110, 111, 100, 101, 110, 105, 99, 107, 63, 105, 100, 61, 108, 111, 115, 101, 110, 117, 108, 108, 118, 97, 115, 116, 119, 105, 110, 100, 82, 83, 83, 32,
      119, 101, 97, 114, 114, 101, 108, 121, 98, 101, 101, 110, 115, 97, 109, 101, 100, 117, 107, 101, 110, 97, 115, 97, 99, 97, 112, 101, 119, 105, 115, 104,
      103, 117, 108, 102, 84, 50, 51, 58, 104, 105, 116, 115, 115, 108, 111, 116, 103, 97, 116, 101, 107, 105, 99, 107, 98, 108, 117, 114, 116, 104, 101, 121,
      49, 53, 112, 120, 39, 39, 41, 59, 41, 59, 34, 62, 109, 115, 105, 101, 119, 105, 110, 115, 98, 105, 114, 100, 115, 111, 114, 116, 98, 101, 116, 97, 115,
      101, 101, 107, 84, 49, 56, 58, 111, 114, 100, 115, 116, 114, 101, 101, 109, 97, 108, 108, 54, 48, 112, 120, 102, 97, 114, 109, 226, 128, 153, 115, 98,
      111, 121, 115, 91, 48, 93, 46, 39, 41, 59, 34, 80, 79, 83, 84, 98, 101, 97, 114, 107, 105, 100, 115, 41, 59, 125, 125, 109, 97, 114, 121, 116, 101, 110,
      100, 40, 85, 75, 41, 113, 117, 97, 100, 122, 104, 58, 230, 45, 115, 105, 122, 45, 45, 45, 45, 112, 114, 111, 112, 39, 41, 59, 13, 108, 105, 102, 116, 84,
      49, 57, 58, 118, 105, 99, 101, 97, 110, 100, 121, 100, 101, 98, 116, 62, 82, 83, 83, 112, 111, 111, 108, 110, 101, 99, 107, 98, 108, 111, 119, 84, 49, 54,
      58, 100, 111, 111, 114, 101, 118, 97, 108, 84, 49, 55, 58, 108, 101, 116, 115, 102, 97, 105, 108, 111, 114, 97, 108, 112, 111, 108, 108, 110, 111, 118,
      97, 99, 111, 108, 115, 103, 101, 110, 101, 32, 226, 128, 148, 115, 111, 102, 116, 114, 111, 109, 101, 116, 105, 108, 108, 114, 111, 115, 115, 60, 104, 51,
      62, 112, 111, 117, 114, 102, 97, 100, 101, 112, 105, 110, 107, 60, 116, 114, 62, 109, 105, 110, 105, 41, 124, 33, 40, 109, 105, 110, 101, 122, 104, 58,
      232, 98, 97, 114, 115, 104, 101, 97, 114, 48, 48, 41, 59, 109, 105, 108, 107, 32, 45, 45, 62, 105, 114, 111, 110, 102, 114, 101, 100, 100, 105, 115, 107,
      119, 101, 110, 116, 115, 111, 105, 108, 112, 117, 116, 115, 47, 106, 115, 47, 104, 111, 108, 121, 84, 50, 50, 58, 73, 83, 66, 78, 84, 50, 48, 58, 97, 100,
      97, 109, 115, 101, 101, 115, 60, 104, 50, 62, 106, 115, 111, 110, 39, 44, 32, 39, 99, 111, 110, 116, 84, 50, 49, 58, 32, 82, 83, 83, 108, 111, 111, 112,
      97, 115, 105, 97, 109, 111, 111, 110, 60, 47, 112, 62, 115, 111, 117, 108, 76, 73, 78, 69, 102, 111, 114, 116, 99, 97, 114, 116, 84, 49, 52, 58, 60, 104,
      49, 62, 56, 48, 112, 120, 33, 45, 45, 60, 57, 112, 120, 59, 84, 48, 52, 58, 109, 105, 107, 101, 58, 52, 54, 90, 110, 105, 99, 101, 105, 110, 99, 104, 89,
      111, 114, 107, 114, 105, 99, 101, 122, 104, 58, 228, 39, 41, 41, 59, 112, 117, 114, 101, 109, 97, 103, 101, 112, 97, 114, 97, 116, 111, 110, 101, 98, 111,
      110, 100, 58, 51, 55, 90, 95, 111, 102, 95, 39, 93, 41, 59, 48, 48, 48, 44, 122, 104, 58, 231, 116, 97, 110, 107, 121, 97, 114, 100, 98, 111, 119, 108,
      98, 117, 115, 104, 58, 53, 54, 90, 74, 97, 118, 97, 51, 48, 112, 120, 10, 124, 125, 10, 37, 67, 51, 37, 58, 51, 52, 90, 106, 101, 102, 102, 69, 88, 80,
      73, 99, 97, 115, 104, 118, 105, 115, 97, 103, 111, 108, 102, 115, 110, 111, 119, 122, 104, 58, 233, 113, 117, 101, 114, 46, 99, 115, 115, 115, 105, 99,
      107, 109, 101, 97, 116, 109, 105, 110, 46, 98, 105, 110, 100, 100, 101, 108, 108, 104, 105, 114, 101, 112, 105, 99, 115, 114, 101, 110, 116, 58, 51, 54,
      90, 72, 84, 84, 80, 45, 50, 48, 49, 102, 111, 116, 111, 119, 111, 108, 102, 69, 78, 68, 32, 120, 98, 111, 120, 58, 53, 52, 90, 66, 79, 68, 89, 100, 105,
      99, 107, 59, 10, 125, 10, 101, 120, 105, 116, 58, 51, 53, 90, 118, 97, 114, 115, 98, 101, 97, 116, 39, 125, 41, 59, 100, 105, 101, 116, 57, 57, 57, 59,
      97, 110, 110, 101, 125, 125, 60, 47, 91, 105, 93, 46, 76, 97, 110, 103, 107, 109, 194, 178, 119, 105, 114, 101, 116, 111, 121, 115, 97, 100, 100, 115,
      115, 101, 97, 108, 97, 108, 101, 120, 59, 10, 9, 125, 101, 99, 104, 111, 110, 105, 110, 101, 46, 111, 114, 103, 48, 48, 53, 41, 116, 111, 110, 121, 106,
      101, 119, 115, 115, 97, 110, 100, 108, 101, 103, 115, 114, 111, 111, 102, 48, 48, 48, 41, 32, 50, 48, 48, 119, 105, 110, 101, 103, 101, 97, 114, 100, 111,
      103, 115, 98, 111, 111, 116, 103, 97, 114, 121, 99, 117, 116, 115, 116, 121, 108, 101, 116, 101, 109, 112, 116, 105, 111, 110, 46, 120, 109, 108, 99, 111,
      99, 107, 103, 97, 110, 103, 36, 40, 39, 46, 53, 48, 112, 120, 80, 104, 46, 68, 109, 105, 115, 99, 97, 108, 97, 110, 108, 111, 97, 110, 100, 101, 115, 107,
      109, 105, 108, 101, 114, 121, 97, 110, 117, 110, 105, 120, 100, 105, 115, 99, 41, 59, 125, 10, 100, 117, 115, 116, 99, 108, 105, 112, 41, 46, 10, 10, 55,
      48, 112, 120, 45, 50, 48, 48, 68, 86, 68, 115, 55, 93, 62, 60, 116, 97, 112, 101, 100, 101, 109, 111, 105, 43, 43, 41, 119, 97, 103, 101, 101, 117, 114,
      111, 112, 104, 105, 108, 111, 112, 116, 115, 104, 111, 108, 101, 70, 65, 81, 115, 97, 115, 105, 110, 45, 50, 54, 84, 108, 97, 98, 115, 112, 101, 116, 115,
      85, 82, 76, 32, 98, 117, 108, 107, 99, 111, 111, 107, 59, 125, 13, 10, 72, 69, 65, 68, 91, 48, 93, 41, 97, 98, 98, 114, 106, 117, 97, 110, 40, 49, 57, 56,
      108, 101, 115, 104, 116, 119, 105, 110, 60, 47, 105, 62, 115, 111, 110, 121, 103, 117, 121, 115, 102, 117, 99, 107, 112, 105, 112, 101, 124, 45, 10, 33,
      48, 48, 50, 41, 110, 100, 111, 119, 91, 49, 93, 59, 91, 93, 59, 10, 76, 111, 103, 32, 115, 97, 108, 116, 13, 10, 9, 9, 98, 97, 110, 103, 116, 114, 105,
      109, 98, 97, 116, 104, 41, 123, 13, 10, 48, 48, 112, 120, 10, 125, 41, 59, 107, 111, 58, 236, 102, 101, 101, 115, 97, 100, 62, 13, 115, 58, 47, 47, 32,
      91, 93, 59, 116, 111, 108, 108, 112, 108, 117, 103, 40, 41, 123, 10, 123, 13, 10, 32, 46, 106, 115, 39, 50, 48, 48, 112, 100, 117, 97, 108, 98, 111, 97,
      116, 46, 74, 80, 71, 41, 59, 10, 125, 113, 117, 111, 116, 41, 59, 10, 10, 39, 41, 59, 10, 13, 10, 125, 13, 50, 48, 49, 52, 50, 48, 49, 53, 50, 48, 49, 54,
      50, 48, 49, 55, 50, 48, 49, 56, 50, 48, 49, 57, 50, 48, 50, 48, 50, 48, 50, 49, 50, 48, 50, 50, 50, 48, 50, 51, 50, 48, 50, 52, 50, 48, 50, 53, 50, 48,
      50, 54, 50, 48, 50, 55, 50, 48, 50, 56, 50, 48, 50, 57, 50, 48, 51, 48, 50, 48, 51, 49, 50, 48, 51, 50, 50, 48, 51, 51, 50, 48, 51, 52, 50, 48, 51, 53,
      50, 48, 51, 54, 50, 48, 51, 55, 50, 48, 49, 51, 50, 48, 49, 50, 50, 48, 49, 49, 50, 48, 49, 48, 50, 48, 48, 57, 50, 48, 48, 56, 50, 48, 48, 55, 50, 48,
      48, 54, 50, 48, 48, 53, 50, 48, 48, 52, 50, 48, 48, 51, 50, 48, 48, 50, 50, 48, 48, 49, 50, 48, 48, 48, 49, 57, 57, 57, 49, 57, 57, 56, 49, 57, 57, 55,
      49, 57, 57, 54, 49, 57, 57, 53, 49, 57, 57, 52, 49, 57, 57, 51, 49, 57, 57, 50, 49, 57, 57, 49, 49, 57, 57, 48, 49, 57, 56, 57, 49, 57, 56, 56, 49, 57,
      56, 55, 49, 57, 56, 54, 49, 57, 56, 53, 49, 57, 56, 52, 49, 57, 56, 51, 49, 57, 56, 50, 49, 57, 56, 49, 49, 57, 56, 48, 49, 57, 55, 57, 49, 57, 55, 56,
      49, 57, 55, 55, 49, 57, 55, 54, 49, 57, 55, 53, 49, 57, 55, 52, 49, 57, 55, 51, 49, 57, 55, 50, 49, 57, 55, 49, 49, 57, 55, 48, 49, 57, 54, 57, 49, 57,
      54, 56, 49, 57, 54, 55, 49, 57, 54, 54, 49, 57, 54, 53, 49, 57, 54, 52, 49, 57, 54, 51, 49, 57, 54, 50, 49, 57, 54, 49, 49, 57, 54, 48, 49, 57, 53, 57,
      49, 57, 53, 56, 49, 57, 53, 55, 49, 57, 53, 54, 49, 57, 53, 53, 49, 57, 53, 52, 49, 57, 53, 51, 49, 57, 53, 50, 49, 57, 53, 49, 49, 57, 53, 48, 49, 48,
      48, 48, 49, 48, 50, 52, 49, 51, 57, 52, 48, 48, 48, 48, 57, 57, 57, 57, 99, 111, 109, 111, 109, 195, 161, 115, 101, 115, 116, 101, 101, 115, 116, 97, 112,
      101, 114, 111, 116, 111, 100, 111, 104, 97, 99, 101, 99, 97, 100, 97, 97, 195, 177, 111, 98, 105, 101, 110, 100, 195, 173, 97, 97, 115, 195, 173, 118,
      105, 100, 97, 99, 97, 115, 111, 111, 116, 114, 111, 102, 111, 114, 111, 115, 111, 108, 111, 111, 116, 114, 97, 99, 117, 97, 108, 100, 105, 106, 111, 115,
      105, 100, 111, 103, 114, 97, 110, 116, 105, 112, 111, 116, 101, 109, 97, 100, 101, 98, 101, 97, 108, 103, 111, 113, 117, 195, 169, 101, 115, 116, 111,
      110, 97, 100, 97, 116, 114, 101, 115, 112, 111, 99, 111, 99, 97, 115, 97, 98, 97, 106, 111, 116, 111, 100, 97, 115, 105, 110, 111, 97, 103, 117, 97, 112,
      117, 101, 115, 117, 110, 111, 115, 97, 110, 116, 101, 100, 105, 99, 101, 108, 117, 105, 115, 101, 108, 108, 97, 109, 97, 121, 111, 122, 111, 110, 97, 97,
      109, 111, 114, 112, 105, 115, 111, 111, 98, 114, 97, 99, 108, 105, 99, 101, 108, 108, 111, 100, 105, 111, 115, 104, 111, 114, 97, 99, 97, 115, 105, 208,
      183, 208, 176, 208, 189, 208, 176, 208, 190, 208, 188, 209, 128, 208, 176, 209, 128, 209, 131, 209, 130, 208, 176, 208, 189, 208, 181, 208, 191, 208, 190,
      208, 190, 209, 130, 208, 184, 208, 183, 208, 189, 208, 190, 208, 180, 208, 190, 209, 130, 208, 190, 208, 182, 208, 181, 208, 190, 208, 189, 208, 184, 209,
      133, 208, 157, 208, 176, 208, 181, 208, 181, 208, 177, 209, 139, 208, 188, 209, 139, 208, 146, 209, 139, 209, 129, 208, 190, 208, 178, 209, 139, 208, 178,
      208, 190, 208, 157, 208, 190, 208, 190, 208, 177, 208, 159, 208, 190, 208, 187, 208, 184, 208, 189, 208, 184, 208, 160, 208, 164, 208, 157, 208, 181, 208,
      156, 209, 139, 209, 130, 209, 139, 208, 158, 208, 189, 208, 184, 208, 188, 208, 180, 208, 176, 208, 151, 208, 176, 208, 148, 208, 176, 208, 157, 209, 131,
      208, 158, 208, 177, 209, 130, 208, 181, 208, 152, 208, 183, 208, 181, 208, 185, 208, 189, 209, 131, 208, 188, 208, 188, 208, 162, 209, 139, 209, 131, 208,
      182, 217, 129, 217, 138, 216, 163, 217, 134, 217, 133, 216, 167, 217, 133, 216, 185, 217, 131, 217, 132, 216, 163, 217, 136, 216, 177, 216, 175, 217, 138,
      216, 167, 217, 129, 217, 137, 217, 135, 217, 136, 217, 132, 217, 133, 217, 132, 217, 131, 216, 167, 217, 136, 217, 132, 217, 135, 216, 168, 216, 179, 216,
      167, 217, 132, 216, 165, 217, 134, 217, 135, 217, 138, 216, 163, 217, 138, 217, 130, 216, 175, 217, 135, 217, 132, 216, 171, 217, 133, 216, 168, 217, 135,
      217, 132, 217, 136, 217, 132, 217, 138, 216, 168, 217, 132, 216, 167, 217, 138, 216, 168, 217, 131, 216, 180, 217, 138, 216, 167, 217, 133, 216, 163, 217,
      133, 217, 134, 216, 170, 216, 168, 217, 138, 217, 132, 217, 134, 216, 173, 216, 168, 217, 135, 217, 133, 217, 133, 216, 180, 217, 136, 216, 180, 102, 105,
      114, 115, 116, 118, 105, 100, 101, 111, 108, 105, 103, 104, 116, 119, 111, 114, 108, 100, 109, 101, 100, 105, 97, 119, 104, 105, 116, 101, 99, 108, 111,
      115, 101, 98, 108, 97, 99, 107, 114, 105, 103, 104, 116, 115, 109, 97, 108, 108, 98, 111, 111, 107, 115, 112, 108, 97, 99, 101, 109, 117, 115, 105, 99,
      102, 105, 101, 108, 100, 111, 114, 100, 101, 114, 112, 111, 105, 110, 116, 118, 97, 108, 117, 101, 108, 101, 118, 101, 108, 116, 97, 98, 108, 101, 98,
      111, 97, 114, 100, 104, 111, 117, 115, 101, 103, 114, 111, 117, 112, 119, 111, 114, 107, 115, 121, 101, 97, 114, 115, 115, 116, 97, 116, 101, 116, 111,
      100, 97, 121, 119, 97, 116, 101, 114, 115, 116, 97, 114, 116, 115, 116, 121, 108, 101, 100, 101, 97, 116, 104, 112, 111, 119, 101, 114, 112, 104, 111,
      110, 101, 110, 105, 103, 104, 116, 101, 114, 114, 111, 114, 105, 110, 112, 117, 116, 97, 98, 111, 117, 116, 116, 101, 114, 109, 115, 116, 105, 116, 108,
      101, 116, 111, 111, 108, 115, 101, 118, 101, 110, 116, 108, 111, 99, 97, 108, 116, 105, 109, 101, 115, 108, 97, 114, 103, 101, 119, 111, 114, 100, 115,
      103, 97, 109, 101, 115, 115, 104, 111, 114, 116, 115, 112, 97, 99, 101, 102, 111, 99, 117, 115, 99, 108, 101, 97, 114, 109, 111, 100, 101, 108, 98, 108,
      111, 99, 107, 103, 117, 105, 100, 101, 114, 97, 100, 105, 111, 115, 104, 97, 114, 101, 119, 111, 109, 101, 110, 97, 103, 97, 105, 110, 109, 111, 110, 101,
      121, 105, 109, 97, 103, 101, 110, 97, 109, 101, 115, 121, 111, 117, 110, 103, 108, 105, 110, 101, 115, 108, 97, 116, 101, 114, 99, 111, 108, 111, 114,
      103, 114, 101, 101, 110, 102, 114, 111, 110, 116, 38, 97, 109, 112, 59, 119, 97, 116, 99, 104, 102, 111, 114, 99, 101, 112, 114, 105, 99, 101, 114, 117,
      108, 101, 115, 98, 101, 103, 105, 110, 97, 102, 116, 101, 114, 118, 105, 115, 105, 116, 105, 115, 115, 117, 101, 97, 114, 101, 97, 115, 98, 101, 108, 111,
      119, 105, 110, 100, 101, 120, 116, 111, 116, 97, 108, 104, 111, 117, 114, 115, 108, 97, 98, 101, 108, 112, 114, 105, 110, 116, 112, 114, 101, 115, 115,
      98, 117, 105, 108, 116, 108, 105, 110, 107, 115, 115, 112, 101, 101, 100, 115, 116, 117, 100, 121, 116, 114, 97, 100, 101, 102, 111, 117, 110, 100, 115,
      101, 110, 115, 101, 117, 110, 100, 101, 114, 115, 104, 111, 119, 110, 102, 111, 114, 109, 115, 114, 97, 110, 103, 101, 97, 100, 100, 101, 100, 115, 116,
      105, 108, 108, 109, 111, 118, 101, 100, 116, 97, 107, 101, 110, 97, 98, 111, 118, 101, 102, 108, 97, 115, 104, 102, 105, 120, 101, 100, 111, 102, 116,
      101, 110, 111, 116, 104, 101, 114, 118, 105, 101, 119, 115, 99, 104, 101, 99, 107, 108, 101, 103, 97, 108, 114, 105, 118, 101, 114, 105, 116, 101, 109,
      115, 113, 117, 105, 99, 107, 115, 104, 97, 112, 101, 104, 117, 109, 97, 110, 101, 120, 105, 115, 116, 103, 111, 105, 110, 103, 109, 111, 118, 105, 101,
      116, 104, 105, 114, 100, 98, 97, 115, 105, 99, 112, 101, 97, 99, 101, 115, 116, 97, 103, 101, 119, 105, 100, 116, 104, 108, 111, 103, 105, 110, 105, 100,
      101, 97, 115, 119, 114, 111, 116, 101, 112, 97, 103, 101, 115, 117, 115, 101, 114, 115, 100, 114, 105, 118, 101, 115, 116, 111, 114, 101, 98, 114, 101,
      97, 107, 115, 111, 117, 116, 104, 118, 111, 105, 99, 101, 115, 105, 116, 101, 115, 109, 111, 110, 116, 104, 119, 104, 101, 114, 101, 98, 117, 105, 108,
      100, 119, 104, 105, 99, 104, 101, 97, 114, 116, 104, 102, 111, 114, 117, 109, 116, 104, 114, 101, 101, 115, 112, 111, 114, 116, 112, 97, 114, 116, 121,
      67, 108, 105, 99, 107, 108, 111, 119, 101, 114, 108, 105, 118, 101, 115, 99, 108, 97, 115, 115, 108, 97, 121, 101, 114, 101, 110, 116, 114, 121, 115, 116,
      111, 114, 121, 117, 115, 97, 103, 101, 115, 111, 117, 110, 100, 99, 111, 117, 114, 116, 121, 111, 117, 114, 32, 98, 105, 114, 116, 104, 112, 111, 112,
      117, 112, 116, 121, 112, 101, 115, 97, 112, 112, 108, 121, 73, 109, 97, 103, 101, 98, 101, 105, 110, 103, 117, 112, 112, 101, 114, 110, 111, 116, 101,
      115, 101, 118, 101, 114, 121, 115, 104, 111, 119, 115, 109, 101, 97, 110, 115, 101, 120, 116, 114, 97, 109, 97, 116, 99, 104, 116, 114, 97, 99, 107, 107,
      110, 111, 119, 110, 101, 97, 114, 108, 121, 98, 101, 103, 97, 110, 115, 117, 112, 101, 114, 112, 97, 112, 101, 114, 110, 111, 114, 116, 104, 108, 101, 97,
      114, 110, 103, 105, 118, 101, 110, 110, 97, 109, 101, 100, 101, 110, 100, 101, 100, 84, 101, 114, 109, 115, 112, 97, 114, 116, 115, 71, 114, 111, 117,
      112, 98, 114, 97, 110, 100, 117, 115, 105, 110, 103, 119, 111, 109, 97, 110, 102, 97, 108, 115, 101, 114, 101, 97, 100, 121, 97, 117, 100, 105, 111, 116,
      97, 107, 101, 115, 119, 104, 105, 108, 101, 46, 99, 111, 109, 47, 108, 105, 118, 101, 100, 99, 97, 115, 101, 115, 100, 97, 105, 108, 121, 99, 104, 105,
      108, 100, 103, 114, 101, 97, 116, 106, 117, 100, 103, 101, 116, 104, 111, 115, 101, 117, 110, 105, 116, 115, 110, 101, 118, 101, 114, 98, 114, 111, 97,
      100, 99, 111, 97, 115, 116, 99, 111, 118, 101, 114, 97, 112, 112, 108, 101, 102, 105, 108, 101, 115, 99, 121, 99, 108, 101, 115, 99, 101, 110, 101, 112,
      108, 97, 110, 115, 99, 108, 105, 99, 107, 119, 114, 105, 116, 101, 113, 117, 101, 101, 110, 112, 105, 101, 99, 101, 101, 109, 97, 105, 108, 102, 114, 97,
      109, 101, 111, 108, 100, 101, 114, 112, 104, 111, 116, 111, 108, 105, 109, 105, 116, 99, 97, 99, 104, 101, 99, 105, 118, 105, 108, 115, 99, 97, 108, 101,
      101, 110, 116, 101, 114, 116, 104, 101, 109, 101, 116, 104, 101, 114, 101, 116, 111, 117, 99, 104, 98, 111, 117, 110, 100, 114, 111, 121, 97, 108, 97,
      115, 107, 101, 100, 119, 104, 111, 108, 101, 115, 105, 110, 99, 101, 115, 116, 111, 99, 107, 32, 110, 97, 109, 101, 102, 97, 105, 116, 104, 104, 101, 97,
      114, 116, 101, 109, 112, 116, 121, 111, 102, 102, 101, 114, 115, 99, 111, 112, 101, 111, 119, 110, 101, 100, 109, 105, 103, 104, 116, 97, 108, 98, 117,
      109, 116, 104, 105, 110, 107, 98, 108, 111, 111, 100, 97, 114, 114, 97, 121, 109, 97, 106, 111, 114, 116, 114, 117, 115, 116, 99, 97, 110, 111, 110, 117,
      110, 105, 111, 110, 99, 111, 117, 110, 116, 118, 97, 108, 105, 100, 115, 116, 111, 110, 101, 83, 116, 121, 108, 101, 76, 111, 103, 105, 110, 104, 97, 112,
      112, 121, 111, 99, 99, 117, 114, 108, 101, 102, 116, 58, 102, 114, 101, 115, 104, 113, 117, 105, 116, 101, 102, 105, 108, 109, 115, 103, 114, 97, 100,
      101, 110, 101, 101, 100, 115, 117, 114, 98, 97, 110, 102, 105, 103, 104, 116, 98, 97, 115, 105, 115, 104, 111, 118, 101, 114, 97, 117, 116, 111, 59, 114,
      111, 117, 116, 101, 46, 104, 116, 109, 108, 109, 105, 120, 101, 100, 102, 105, 110, 97, 108, 89, 111, 117, 114, 32, 115, 108, 105, 100, 101, 116, 111,
      112, 105, 99, 98, 114, 111, 119, 110, 97, 108, 111, 110, 101, 100, 114, 97, 119, 110, 115, 112, 108, 105, 116, 114, 101, 97, 99, 104, 82, 105, 103, 104,
      116, 100, 97, 116, 101, 115, 109, 97, 114, 99, 104, 113, 117, 111, 116, 101, 103, 111, 111, 100, 115, 76, 105, 110, 107, 115, 100, 111, 117, 98, 116, 97,
      115, 121, 110, 99, 116, 104, 117, 109, 98, 97, 108, 108, 111, 119, 99, 104, 105, 101, 102, 121, 111, 117, 116, 104, 110, 111, 118, 101, 108, 49, 48, 112,
      120, 59, 115, 101, 114, 118, 101, 117, 110, 116, 105, 108, 104, 97, 110, 100, 115, 67, 104, 101, 99, 107, 83, 112, 97, 99, 101, 113, 117, 101, 114, 121,
      106, 97, 109, 101, 115, 101, 113, 117, 97, 108, 116, 119, 105, 99, 101, 48, 44, 48, 48, 48, 83, 116, 97, 114, 116, 112, 97, 110, 101, 108, 115, 111, 110,
      103, 115, 114, 111, 117, 110, 100, 101, 105, 103, 104, 116, 115, 104, 105, 102, 116, 119, 111, 114, 116, 104, 112, 111, 115, 116, 115, 108, 101, 97, 100,
      115, 119, 101, 101, 107, 115, 97, 118, 111, 105, 100, 116, 104, 101, 115, 101, 109, 105, 108, 101, 115, 112, 108, 97, 110, 101, 115, 109, 97, 114, 116,
      97, 108, 112, 104, 97, 112, 108, 97, 110, 116, 109, 97, 114, 107, 115, 114, 97, 116, 101, 115, 112, 108, 97, 121, 115, 99, 108, 97, 105, 109, 115, 97,
      108, 101, 115, 116, 101, 120, 116, 115, 115, 116, 97, 114, 115, 119, 114, 111, 110, 103, 60, 47, 104, 51, 62, 116, 104, 105, 110, 103, 46, 111, 114, 103,
      47, 109, 117, 108, 116, 105, 104, 101, 97, 114, 100, 80, 111, 119, 101, 114, 115, 116, 97, 110, 100, 116, 111, 107, 101, 110, 115, 111, 108, 105, 100, 40,
      116, 104, 105, 115, 98, 114, 105, 110, 103, 115, 104, 105, 112, 115, 115, 116, 97, 102, 102, 116, 114, 105, 101, 100, 99, 97, 108, 108, 115, 102, 117,
      108, 108, 121, 102, 97, 99, 116, 115, 97, 103, 101, 110, 116, 84, 104, 105, 115, 32, 47, 47, 45, 45, 62, 97, 100, 109, 105, 110, 101, 103, 121, 112, 116,
      69, 118, 101, 110, 116, 49, 53, 112, 120, 59, 69, 109, 97, 105, 108, 116, 114, 117, 101, 34, 99, 114, 111, 115, 115, 115, 112, 101, 110, 116, 98, 108,
      111, 103, 115, 98, 111, 120, 34, 62, 110, 111, 116, 101, 100, 108, 101, 97, 118, 101, 99, 104, 105, 110, 97, 115, 105, 122, 101, 115, 103, 117, 101, 115,
      116, 60, 47, 104, 52, 62, 114, 111, 98, 111, 116, 104, 101, 97, 118, 121, 116, 114, 117, 101, 44, 115, 101, 118, 101, 110, 103, 114, 97, 110, 100, 99,
      114, 105, 109, 101, 115, 105, 103, 110, 115, 97, 119, 97, 114, 101, 100, 97, 110, 99, 101, 112, 104, 97, 115, 101, 62, 60, 33, 45, 45, 101, 110, 95, 85,
      83, 38, 35, 51, 57, 59, 50, 48, 48, 112, 120, 95, 110, 97, 109, 101, 108, 97, 116, 105, 110, 101, 110, 106, 111, 121, 97, 106, 97, 120, 46, 97, 116, 105,
      111, 110, 115, 109, 105, 116, 104, 85, 46, 83, 46, 32, 104, 111, 108, 100, 115, 112, 101, 116, 101, 114, 105, 110, 100, 105, 97, 110, 97, 118, 34, 62, 99,
      104, 97, 105, 110, 115, 99, 111, 114, 101, 99, 111, 109, 101, 115, 100, 111, 105, 110, 103, 112, 114, 105, 111, 114, 83, 104, 97, 114, 101, 49, 57, 57,
      48, 115, 114, 111, 109, 97, 110, 108, 105, 115, 116, 115, 106, 97, 112, 97, 110, 102, 97, 108, 108, 115, 116, 114, 105, 97, 108, 111, 119, 110, 101, 114,
      97, 103, 114, 101, 101, 60, 47, 104, 50, 62, 97, 98, 117, 115, 101, 97, 108, 101, 114, 116, 111, 112, 101, 114, 97, 34, 45, 47, 47, 87, 99, 97, 114, 100,
      115, 104, 105, 108, 108, 115, 116, 101, 97, 109, 115, 80, 104, 111, 116, 111, 116, 114, 117, 116, 104, 99, 108, 101, 97, 110, 46, 112, 104, 112, 63, 115,
      97, 105, 110, 116, 109, 101, 116, 97, 108, 108, 111, 117, 105, 115, 109, 101, 97, 110, 116, 112, 114, 111, 111, 102, 98, 114, 105, 101, 102, 114, 111,
      119, 34, 62, 103, 101, 110, 114, 101, 116, 114, 117, 99, 107, 108, 111, 111, 107, 115, 86, 97, 108, 117, 101, 70, 114, 97, 109, 101, 46, 110, 101, 116,
      47, 45, 45, 62, 10, 60, 116, 114, 121, 32, 123, 10, 118, 97, 114, 32, 109, 97, 107, 101, 115, 99, 111, 115, 116, 115, 112, 108, 97, 105, 110, 97, 100,
      117, 108, 116, 113, 117, 101, 115, 116, 116, 114, 97, 105, 110, 108, 97, 98, 111, 114, 104, 101, 108, 112, 115, 99, 97, 117, 115, 101, 109, 97, 103, 105,
      99, 109, 111, 116, 111, 114, 116, 104, 101, 105, 114, 50, 53, 48, 112, 120, 108, 101, 97, 115, 116, 115, 116, 101, 112, 115, 67, 111, 117, 110, 116, 99,
      111, 117, 108, 100, 103, 108, 97, 115, 115, 115, 105, 100, 101, 115, 102, 117, 110, 100, 115, 104, 111, 116, 101, 108, 97, 119, 97, 114, 100, 109, 111,
      117, 116, 104, 109, 111, 118, 101, 115, 112, 97, 114, 105, 115, 103, 105, 118, 101, 115, 100, 117, 116, 99, 104, 116, 101, 120, 97, 115, 102, 114, 117,
      105, 116, 110, 117, 108, 108, 44, 124, 124, 91, 93, 59, 116, 111, 112, 34, 62, 10, 60, 33, 45, 45, 80, 79, 83, 84, 34, 111, 99, 101, 97, 110, 60, 98, 114,
      47, 62, 102, 108, 111, 111, 114, 115, 112, 101, 97, 107, 100, 101, 112, 116, 104, 32, 115, 105, 122, 101, 98, 97, 110, 107, 115, 99, 97, 116, 99, 104, 99,
      104, 97, 114, 116, 50, 48, 112, 120, 59, 97, 108, 105, 103, 110, 100, 101, 97, 108, 115, 119, 111, 117, 108, 100, 53, 48, 112, 120, 59, 117, 114, 108, 61,
      34, 112, 97, 114, 107, 115, 109, 111, 117, 115, 101, 77, 111, 115, 116, 32, 46, 46, 46, 60, 47, 97, 109, 111, 110, 103, 98, 114, 97, 105, 110, 98, 111,
      100, 121, 32, 110, 111, 110, 101, 59, 98, 97, 115, 101, 100, 99, 97, 114, 114, 121, 100, 114, 97, 102, 116, 114, 101, 102, 101, 114, 112, 97, 103, 101,
      95, 104, 111, 109, 101, 46, 109, 101, 116, 101, 114, 100, 101, 108, 97, 121, 100, 114, 101, 97, 109, 112, 114, 111, 118, 101, 106, 111, 105, 110, 116, 60,
      47, 116, 114, 62, 100, 114, 117, 103, 115, 60, 33, 45, 45, 32, 97, 112, 114, 105, 108, 105, 100, 101, 97, 108, 97, 108, 108, 101, 110, 101, 120, 97, 99,
      116, 102, 111, 114, 116, 104, 99, 111, 100, 101, 115, 108, 111, 103, 105, 99, 86, 105, 101, 119, 32, 115, 101, 101, 109, 115, 98, 108, 97, 110, 107, 112,
      111, 114, 116, 115, 32, 40, 50, 48, 48, 115, 97, 118, 101, 100, 95, 108, 105, 110, 107, 103, 111, 97, 108, 115, 103, 114, 97, 110, 116, 103, 114, 101,
      101, 107, 104, 111, 109, 101, 115, 114, 105, 110, 103, 115, 114, 97, 116, 101, 100, 51, 48, 112, 120, 59, 119, 104, 111, 115, 101, 112, 97, 114, 115, 101,
      40, 41, 59, 34, 32, 66, 108, 111, 99, 107, 108, 105, 110, 117, 120, 106, 111, 110, 101, 115, 112, 105, 120, 101, 108, 39, 41, 59, 34, 62, 41, 59, 105,
      102, 40, 45, 108, 101, 102, 116, 100, 97, 118, 105, 100, 104, 111, 114, 115, 101, 70, 111, 99, 117, 115, 114, 97, 105, 115, 101, 98, 111, 120, 101, 115,
      84, 114, 97, 99, 107, 101, 109, 101, 110, 116, 60, 47, 101, 109, 62, 98, 97, 114, 34, 62, 46, 115, 114, 99, 61, 116, 111, 119, 101, 114, 97, 108, 116, 61,
      34, 99, 97, 98, 108, 101, 104, 101, 110, 114, 121, 50, 52, 112, 120, 59, 115, 101, 116, 117, 112, 105, 116, 97, 108, 121, 115, 104, 97, 114, 112, 109,
      105, 110, 111, 114, 116, 97, 115, 116, 101, 119, 97, 110, 116, 115, 116, 104, 105, 115, 46, 114, 101, 115, 101, 116, 119, 104, 101, 101, 108, 103, 105,
      114, 108, 115, 47, 99, 115, 115, 47, 49, 48, 48, 37, 59, 99, 108, 117, 98, 115, 115, 116, 117, 102, 102, 98, 105, 98, 108, 101, 118, 111, 116, 101, 115,
      32, 49, 48, 48, 48, 107, 111, 114, 101, 97, 125, 41, 59, 13, 10, 98, 97, 110, 100, 115, 113, 117, 101, 117, 101, 61, 32, 123, 125, 59, 56, 48, 112, 120,
      59, 99, 107, 105, 110, 103, 123, 13, 10, 9, 9, 97, 104, 101, 97, 100, 99, 108, 111, 99, 107, 105, 114, 105, 115, 104, 108, 105, 107, 101, 32, 114, 97,
      116, 105, 111, 115, 116, 97, 116, 115, 70, 111, 114, 109, 34, 121, 97, 104, 111, 111, 41, 91, 48, 93, 59, 65, 98, 111, 117, 116, 102, 105, 110, 100, 115,
      60, 47, 104, 49, 62, 100, 101, 98, 117, 103, 116, 97, 115, 107, 115, 85, 82, 76, 32, 61, 99, 101, 108, 108, 115, 125, 41, 40, 41, 59, 49, 50, 112, 120,
      59, 112, 114, 105, 109, 101, 116, 101, 108, 108, 115, 116, 117, 114, 110, 115, 48, 120, 54, 48, 48, 46, 106, 112, 103, 34, 115, 112, 97, 105, 110, 98,
      101, 97, 99, 104, 116, 97, 120, 101, 115, 109, 105, 99, 114, 111, 97, 110, 103, 101, 108, 45, 45, 62, 60, 47, 103, 105, 102, 116, 115, 115, 116, 101, 118,
      101, 45, 108, 105, 110, 107, 98, 111, 100, 121, 46, 125, 41, 59, 10, 9, 109, 111, 117, 110, 116, 32, 40, 49, 57, 57, 70, 65, 81, 60, 47, 114, 111, 103,
      101, 114, 102, 114, 97, 110, 107, 67, 108, 97, 115, 115, 50, 56, 112, 120, 59, 102, 101, 101, 100, 115, 60, 104, 49, 62, 60, 115, 99, 111, 116, 116, 116,
      101, 115, 116, 115, 50, 50, 112, 120, 59, 100, 114, 105, 110, 107, 41, 32, 124, 124, 32, 108, 101, 119, 105, 115, 115, 104, 97, 108, 108, 35, 48, 51, 57,
      59, 32, 102, 111, 114, 32, 108, 111, 118, 101, 100, 119, 97, 115, 116, 101, 48, 48, 112, 120, 59, 106, 97, 58, 227, 130, 115, 105, 109, 111, 110, 60, 102,
      111, 110, 116, 114, 101, 112, 108, 121, 109, 101, 101, 116, 115, 117, 110, 116, 101, 114, 99, 104, 101, 97, 112, 116, 105, 103, 104, 116, 66, 114, 97,
      110, 100, 41, 32, 33, 61, 32, 100, 114, 101, 115, 115, 99, 108, 105, 112, 115, 114, 111, 111, 109, 115, 111, 110, 107, 101, 121, 109, 111, 98, 105, 108,
      109, 97, 105, 110, 46, 78, 97, 109, 101, 32, 112, 108, 97, 116, 101, 102, 117, 110, 110, 121, 116, 114, 101, 101, 115, 99, 111, 109, 47, 34, 49, 46, 106,
      112, 103, 119, 109, 111, 100, 101, 112, 97, 114, 97, 109, 83, 84, 65, 82, 84, 108, 101, 102, 116, 32, 105, 100, 100, 101, 110, 44, 32, 50, 48, 49, 41, 59,
      10, 125, 10, 102, 111, 114, 109, 46, 118, 105, 114, 117, 115, 99, 104, 97, 105, 114, 116, 114, 97, 110, 115, 119, 111, 114, 115, 116, 80, 97, 103, 101,
      115, 105, 116, 105, 111, 110, 112, 97, 116, 99, 104, 60, 33, 45, 45, 10, 111, 45, 99, 97, 99, 102, 105, 114, 109, 115, 116, 111, 117, 114, 115, 44, 48,
      48, 48, 32, 97, 115, 105, 97, 110, 105, 43, 43, 41, 123, 97, 100, 111, 98, 101, 39, 41, 91, 48, 93, 105, 100, 61, 49, 48, 98, 111, 116, 104, 59, 109, 101,
      110, 117, 32, 46, 50, 46, 109, 105, 46, 112, 110, 103, 34, 107, 101, 118, 105, 110, 99, 111, 97, 99, 104, 67, 104, 105, 108, 100, 98, 114, 117, 99, 101,
      50, 46, 106, 112, 103, 85, 82, 76, 41, 43, 46, 106, 112, 103, 124, 115, 117, 105, 116, 101, 115, 108, 105, 99, 101, 104, 97, 114, 114, 121, 49, 50, 48,
      34, 32, 115, 119, 101, 101, 116, 116, 114, 62, 13, 10, 110, 97, 109, 101, 61, 100, 105, 101, 103, 111, 112, 97, 103, 101, 32, 115, 119, 105, 115, 115, 45,
      45, 62, 10, 10, 35, 102, 102, 102, 59, 34, 62, 76, 111, 103, 46, 99, 111, 109, 34, 116, 114, 101, 97, 116, 115, 104, 101, 101, 116, 41, 32, 38, 38, 32,
      49, 52, 112, 120, 59, 115, 108, 101, 101, 112, 110, 116, 101, 110, 116, 102, 105, 108, 101, 100, 106, 97, 58, 227, 131, 105, 100, 61, 34, 99, 78, 97, 109,
      101, 34, 119, 111, 114, 115, 101, 115, 104, 111, 116, 115, 45, 98, 111, 120, 45, 100, 101, 108, 116, 97, 10, 38, 108, 116, 59, 98, 101, 97, 114, 115, 58,
      52, 56, 90, 60, 100, 97, 116, 97, 45, 114, 117, 114, 97, 108, 60, 47, 97, 62, 32, 115, 112, 101, 110, 100, 98, 97, 107, 101, 114, 115, 104, 111, 112, 115,
      61, 32, 34, 34, 59, 112, 104, 112, 34, 62, 99, 116, 105, 111, 110, 49, 51, 112, 120, 59, 98, 114, 105, 97, 110, 104, 101, 108, 108, 111, 115, 105, 122,
      101, 61, 111, 61, 37, 50, 70, 32, 106, 111, 105, 110, 109, 97, 121, 98, 101, 60, 105, 109, 103, 32, 105, 109, 103, 34, 62, 44, 32, 102, 106, 115, 105,
      109, 103, 34, 32, 34, 41, 91, 48, 93, 77, 84, 111, 112, 66, 84, 121, 112, 101, 34, 110, 101, 119, 108, 121, 68, 97, 110, 115, 107, 99, 122, 101, 99, 104,
      116, 114, 97, 105, 108, 107, 110, 111, 119, 115, 60, 47, 104, 53, 62, 102, 97, 113, 34, 62, 122, 104, 45, 99, 110, 49, 48, 41, 59, 10, 45, 49, 34, 41, 59,
      116, 121, 112, 101, 61, 98, 108, 117, 101, 115, 116, 114, 117, 108, 121, 100, 97, 118, 105, 115, 46, 106, 115, 39, 59, 62, 13, 10, 60, 33, 115, 116, 101,
      101, 108, 32, 121, 111, 117, 32, 104, 50, 62, 13, 10, 102, 111, 114, 109, 32, 106, 101, 115, 117, 115, 49, 48, 48, 37, 32, 109, 101, 110, 117, 46, 13, 10,
      9, 13, 10, 119, 97, 108, 101, 115, 114, 105, 115, 107, 115, 117, 109, 101, 110, 116, 100, 100, 105, 110, 103, 98, 45, 108, 105, 107, 116, 101, 97, 99,
      104, 103, 105, 102, 34, 32, 118, 101, 103, 97, 115, 100, 97, 110, 115, 107, 101, 101, 115, 116, 105, 115, 104, 113, 105, 112, 115, 117, 111, 109, 105,
      115, 111, 98, 114, 101, 100, 101, 115, 100, 101, 101, 110, 116, 114, 101, 116, 111, 100, 111, 115, 112, 117, 101, 100, 101, 97, 195, 177, 111, 115, 101,
      115, 116, 195, 161, 116, 105, 101, 110, 101, 104, 97, 115, 116, 97, 111, 116, 114, 111, 115, 112, 97, 114, 116, 101, 100, 111, 110, 100, 101, 110, 117,
      101, 118, 111, 104, 97, 99, 101, 114, 102, 111, 114, 109, 97, 109, 105, 115, 109, 111, 109, 101, 106, 111, 114, 109, 117, 110, 100, 111, 97, 113, 117,
      195, 173, 100, 195, 173, 97, 115, 115, 195, 179, 108, 111, 97, 121, 117, 100, 97, 102, 101, 99, 104, 97, 116, 111, 100, 97, 115, 116, 97, 110, 116, 111,
      109, 101, 110, 111, 115, 100, 97, 116, 111, 115, 111, 116, 114, 97, 115, 115, 105, 116, 105, 111, 109, 117, 99, 104, 111, 97, 104, 111, 114, 97, 108, 117,
      103, 97, 114, 109, 97, 121, 111, 114, 101, 115, 116, 111, 115, 104, 111, 114, 97, 115, 116, 101, 110, 101, 114, 97, 110, 116, 101, 115, 102, 111, 116,
      111, 115, 101, 115, 116, 97, 115, 112, 97, 195, 173, 115, 110, 117, 101, 118, 97, 115, 97, 108, 117, 100, 102, 111, 114, 111, 115, 109, 101, 100, 105,
      111, 113, 117, 105, 101, 110, 109, 101, 115, 101, 115, 112, 111, 100, 101, 114, 99, 104, 105, 108, 101, 115, 101, 114, 195, 161, 118, 101, 99, 101, 115,
      100, 101, 99, 105, 114, 106, 111, 115, 195, 169, 101, 115, 116, 97, 114, 118, 101, 110, 116, 97, 103, 114, 117, 112, 111, 104, 101, 99, 104, 111, 101,
      108, 108, 111, 115, 116, 101, 110, 103, 111, 97, 109, 105, 103, 111, 99, 111, 115, 97, 115, 110, 105, 118, 101, 108, 103, 101, 110, 116, 101, 109, 105,
      115, 109, 97, 97, 105, 114, 101, 115, 106, 117, 108, 105, 111, 116, 101, 109, 97, 115, 104, 97, 99, 105, 97, 102, 97, 118, 111, 114, 106, 117, 110, 105,
      111, 108, 105, 98, 114, 101, 112, 117, 110, 116, 111, 98, 117, 101, 110, 111, 97, 117, 116, 111, 114, 97, 98, 114, 105, 108, 98, 117, 101, 110, 97, 116,
      101, 120, 116, 111, 109, 97, 114, 122, 111, 115, 97, 98, 101, 114, 108, 105, 115, 116, 97, 108, 117, 101, 103, 111, 99, 195, 179, 109, 111, 101, 110, 101,
      114, 111, 106, 117, 101, 103, 111, 112, 101, 114, 195, 186, 104, 97, 98, 101, 114, 101, 115, 116, 111, 121, 110, 117, 110, 99, 97, 109, 117, 106, 101,
      114, 118, 97, 108, 111, 114, 102, 117, 101, 114, 97, 108, 105, 98, 114, 111, 103, 117, 115, 116, 97, 105, 103, 117, 97, 108, 118, 111, 116, 111, 115, 99,
      97, 115, 111, 115, 103, 117, 195, 173, 97, 112, 117, 101, 100, 111, 115, 111, 109, 111, 115, 97, 118, 105, 115, 111, 117, 115, 116, 101, 100, 100, 101,
      98, 101, 110, 110, 111, 99, 104, 101, 98, 117, 115, 99, 97, 102, 97, 108, 116, 97, 101, 117, 114, 111, 115, 115, 101, 114, 105, 101, 100, 105, 99, 104,
      111, 99, 117, 114, 115, 111, 99, 108, 97, 118, 101, 99, 97, 115, 97, 115, 108, 101, 195, 179, 110, 112, 108, 97, 122, 111, 108, 97, 114, 103, 111, 111,
      98, 114, 97, 115, 118, 105, 115, 116, 97, 97, 112, 111, 121, 111, 106, 117, 110, 116, 111, 116, 114, 97, 116, 97, 118, 105, 115, 116, 111, 99, 114, 101,
      97, 114, 99, 97, 109, 112, 111, 104, 101, 109, 111, 115, 99, 105, 110, 99, 111, 99, 97, 114, 103, 111, 112, 105, 115, 111, 115, 111, 114, 100, 101, 110,
      104, 97, 99, 101, 110, 195, 161, 114, 101, 97, 100, 105, 115, 99, 111, 112, 101, 100, 114, 111, 99, 101, 114, 99, 97, 112, 117, 101, 100, 97, 112, 97,
      112, 101, 108, 109, 101, 110, 111, 114, 195, 186, 116, 105, 108, 99, 108, 97, 114, 111, 106, 111, 114, 103, 101, 99, 97, 108, 108, 101, 112, 111, 110,
      101, 114, 116, 97, 114, 100, 101, 110, 97, 100, 105, 101, 109, 97, 114, 99, 97, 115, 105, 103, 117, 101, 101, 108, 108, 97, 115, 115, 105, 103, 108, 111,
      99, 111, 99, 104, 101, 109, 111, 116, 111, 115, 109, 97, 100, 114, 101, 99, 108, 97, 115, 101, 114, 101, 115, 116, 111, 110, 105, 195, 177, 111, 113, 117,
      101, 100, 97, 112, 97, 115, 97, 114, 98, 97, 110, 99, 111, 104, 105, 106, 111, 115, 118, 105, 97, 106, 101, 112, 97, 98, 108, 111, 195, 169, 115, 116,
      101, 118, 105, 101, 110, 101, 114, 101, 105, 110, 111, 100, 101, 106, 97, 114, 102, 111, 110, 100, 111, 99, 97, 110, 97, 108, 110, 111, 114, 116, 101,
      108, 101, 116, 114, 97, 99, 97, 117, 115, 97, 116, 111, 109, 97, 114, 109, 97, 110, 111, 115, 108, 117, 110, 101, 115, 97, 117, 116, 111, 115, 118, 105,
      108, 108, 97, 118, 101, 110, 100, 111, 112, 101, 115, 97, 114, 116, 105, 112, 111, 115, 116, 101, 110, 103, 97, 109, 97, 114, 99, 111, 108, 108, 101, 118,
      97, 112, 97, 100, 114, 101, 117, 110, 105, 100, 111, 118, 97, 109, 111, 115, 122, 111, 110, 97, 115, 97, 109, 98, 111, 115, 98, 97, 110, 100, 97, 109, 97,
      114, 105, 97, 97, 98, 117, 115, 111, 109, 117, 99, 104, 97, 115, 117, 98, 105, 114, 114, 105, 111, 106, 97, 118, 105, 118, 105, 114, 103, 114, 97, 100,
      111, 99, 104, 105, 99, 97, 97, 108, 108, 195, 173, 106, 111, 118, 101, 110, 100, 105, 99, 104, 97, 101, 115, 116, 97, 110, 116, 97, 108, 101, 115, 115,
      97, 108, 105, 114, 115, 117, 101, 108, 111, 112, 101, 115, 111, 115, 102, 105, 110, 101, 115, 108, 108, 97, 109, 97, 98, 117, 115, 99, 111, 195, 169, 115,
      116, 97, 108, 108, 101, 103, 97, 110, 101, 103, 114, 111, 112, 108, 97, 122, 97, 104, 117, 109, 111, 114, 112, 97, 103, 97, 114, 106, 117, 110, 116, 97,
      100, 111, 98, 108, 101, 105, 115, 108, 97, 115, 98, 111, 108, 115, 97, 98, 97, 195, 177, 111, 104, 97, 98, 108, 97, 108, 117, 99, 104, 97, 195, 129, 114,
      101, 97, 100, 105, 99, 101, 110, 106, 117, 103, 97, 114, 110, 111, 116, 97, 115, 118, 97, 108, 108, 101, 97, 108, 108, 195, 161, 99, 97, 114, 103, 97,
      100, 111, 108, 111, 114, 97, 98, 97, 106, 111, 101, 115, 116, 195, 169, 103, 117, 115, 116, 111, 109, 101, 110, 116, 101, 109, 97, 114, 105, 111, 102,
      105, 114, 109, 97, 99, 111, 115, 116, 111, 102, 105, 99, 104, 97, 112, 108, 97, 116, 97, 104, 111, 103, 97, 114, 97, 114, 116, 101, 115, 108, 101, 121,
      101, 115, 97, 113, 117, 101, 108, 109, 117, 115, 101, 111, 98, 97, 115, 101, 115, 112, 111, 99, 111, 115, 109, 105, 116, 97, 100, 99, 105, 101, 108, 111,
      99, 104, 105, 99, 111, 109, 105, 101, 100, 111, 103, 97, 110, 97, 114, 115, 97, 110, 116, 111, 101, 116, 97, 112, 97, 100, 101, 98, 101, 115, 112, 108,
      97, 121, 97, 114, 101, 100, 101, 115, 115, 105, 101, 116, 101, 99, 111, 114, 116, 101, 99, 111, 114, 101, 97, 100, 117, 100, 97, 115, 100, 101, 115, 101,
      111, 118, 105, 101, 106, 111, 100, 101, 115, 101, 97, 97, 103, 117, 97, 115, 38, 113, 117, 111, 116, 59, 100, 111, 109, 97, 105, 110, 99, 111, 109, 109,
      111, 110, 115, 116, 97, 116, 117, 115, 101, 118, 101, 110, 116, 115, 109, 97, 115, 116, 101, 114, 115, 121, 115, 116, 101, 109, 97, 99, 116, 105, 111,
      110, 98, 97, 110, 110, 101, 114, 114, 101, 109, 111, 118, 101, 115, 99, 114, 111, 108, 108, 117, 112, 100, 97, 116, 101, 103, 108, 111, 98, 97, 108, 109,
      101, 100, 105, 117, 109, 102, 105, 108, 116, 101, 114, 110, 117, 109, 98, 101, 114, 99, 104, 97, 110, 103, 101, 114, 101, 115, 117, 108, 116, 112, 117,
      98, 108, 105, 99, 115, 99, 114, 101, 101, 110, 99, 104, 111, 111, 115, 101, 110, 111, 114, 109, 97, 108, 116, 114, 97, 118, 101, 108, 105, 115, 115, 117,
      101, 115, 115, 111, 117, 114, 99, 101, 116, 97, 114, 103, 101, 116, 115, 112, 114, 105, 110, 103, 109, 111, 100, 117, 108, 101, 109, 111, 98, 105, 108,
      101, 115, 119, 105, 116, 99, 104, 112, 104, 111, 116, 111, 115, 98, 111, 114, 100, 101, 114, 114, 101, 103, 105, 111, 110, 105, 116, 115, 101, 108, 102,
      115, 111, 99, 105, 97, 108, 97, 99, 116, 105, 118, 101, 99, 111, 108, 117, 109, 110, 114, 101, 99, 111, 114, 100, 102, 111, 108, 108, 111, 119, 116, 105,
      116, 108, 101, 62, 101, 105, 116, 104, 101, 114, 108, 101, 110, 103, 116, 104, 102, 97, 109, 105, 108, 121, 102, 114, 105, 101, 110, 100, 108, 97, 121,
      111, 117, 116, 97, 117, 116, 104, 111, 114, 99, 114, 101, 97, 116, 101, 114, 101, 118, 105, 101, 119, 115, 117, 109, 109, 101, 114, 115, 101, 114, 118,
      101, 114, 112, 108, 97, 121, 101, 100, 112, 108, 97, 121, 101, 114, 101, 120, 112, 97, 110, 100, 112, 111, 108, 105, 99, 121, 102, 111, 114, 109, 97, 116,
      100, 111, 117, 98, 108, 101, 112, 111, 105, 110, 116, 115, 115, 101, 114, 105, 101, 115, 112, 101, 114, 115, 111, 110, 108, 105, 118, 105, 110, 103, 100,
      101, 115, 105, 103, 110, 109, 111, 110, 116, 104, 115, 102, 111, 114, 99, 101, 115, 117, 110, 105, 113, 117, 101, 119, 101, 105, 103, 104, 116, 112, 101,
      111, 112, 108, 101, 101, 110, 101, 114, 103, 121, 110, 97, 116, 117, 114, 101, 115, 101, 97, 114, 99, 104, 102, 105, 103, 117, 114, 101, 104, 97, 118,
      105, 110, 103, 99, 117, 115, 116, 111, 109, 111, 102, 102, 115, 101, 116, 108, 101, 116, 116, 101, 114, 119, 105, 110, 100, 111, 119, 115, 117, 98, 109,
      105, 116, 114, 101, 110, 100, 101, 114, 103, 114, 111, 117, 112, 115, 117, 112, 108, 111, 97, 100, 104, 101, 97, 108, 116, 104, 109, 101, 116, 104, 111,
      100, 118, 105, 100, 101, 111, 115, 115, 99, 104, 111, 111, 108, 102, 117, 116, 117, 114, 101, 115, 104, 97, 100, 111, 119, 100, 101, 98, 97, 116, 101,
      118, 97, 108, 117, 101, 115, 79, 98, 106, 101, 99, 116, 111, 116, 104, 101, 114, 115, 114, 105, 103, 104, 116, 115, 108, 101, 97, 103, 117, 101, 99, 104,
      114, 111, 109, 101, 115, 105, 109, 112, 108, 101, 110, 111, 116, 105, 99, 101, 115, 104, 97, 114, 101, 100, 101, 110, 100, 105, 110, 103, 115, 101, 97,
      115, 111, 110, 114, 101, 112, 111, 114, 116, 111, 110, 108, 105, 110, 101, 115, 113, 117, 97, 114, 101, 98, 117, 116, 116, 111, 110, 105, 109, 97, 103,
      101, 115, 101, 110, 97, 98, 108, 101, 109, 111, 118, 105, 110, 103, 108, 97, 116, 101, 115, 116, 119, 105, 110, 116, 101, 114, 70, 114, 97, 110, 99, 101,
      112, 101, 114, 105, 111, 100, 115, 116, 114, 111, 110, 103, 114, 101, 112, 101, 97, 116, 76, 111, 110, 100, 111, 110, 100, 101, 116, 97, 105, 108, 102,
      111, 114, 109, 101, 100, 100, 101, 109, 97, 110, 100, 115, 101, 99, 117, 114, 101, 112, 97, 115, 115, 101, 100, 116, 111, 103, 103, 108, 101, 112, 108,
      97, 99, 101, 115, 100, 101, 118, 105, 99, 101, 115, 116, 97, 116, 105, 99, 99, 105, 116, 105, 101, 115, 115, 116, 114, 101, 97, 109, 121, 101, 108, 108,
      111, 119, 97, 116, 116, 97, 99, 107, 115, 116, 114, 101, 101, 116, 102, 108, 105, 103, 104, 116, 104, 105, 100, 100, 101, 110, 105, 110, 102, 111, 34, 62,
      111, 112, 101, 110, 101, 100, 117, 115, 101, 102, 117, 108, 118, 97, 108, 108, 101, 121, 99, 97, 117, 115, 101, 115, 108, 101, 97, 100, 101, 114, 115,
      101, 99, 114, 101, 116, 115, 101, 99, 111, 110, 100, 100, 97, 109, 97, 103, 101, 115, 112, 111, 114, 116, 115, 101, 120, 99, 101, 112, 116, 114, 97, 116,
      105, 110, 103, 115, 105, 103, 110, 101, 100, 116, 104, 105, 110, 103, 115, 101, 102, 102, 101, 99, 116, 102, 105, 101, 108, 100, 115, 115, 116, 97, 116,
      101, 115, 111, 102, 102, 105, 99, 101, 118, 105, 115, 117, 97, 108, 101, 100, 105, 116, 111, 114, 118, 111, 108, 117, 109, 101, 82, 101, 112, 111, 114,
      116, 109, 117, 115, 101, 117, 109, 109, 111, 118, 105, 101, 115, 112, 97, 114, 101, 110, 116, 97, 99, 99, 101, 115, 115, 109, 111, 115, 116, 108, 121,
      109, 111, 116, 104, 101, 114, 34, 32, 105, 100, 61, 34, 109, 97, 114, 107, 101, 116, 103, 114, 111, 117, 110, 100, 99, 104, 97, 110, 99, 101, 115, 117,
      114, 118, 101, 121, 98, 101, 102, 111, 114, 101, 115, 121, 109, 98, 111, 108, 109, 111, 109, 101, 110, 116, 115, 112, 101, 101, 99, 104, 109, 111, 116,
      105, 111, 110, 105, 110, 115, 105, 100, 101, 109, 97, 116, 116, 101, 114, 67, 101, 110, 116, 101, 114, 111, 98, 106, 101, 99, 116, 101, 120, 105, 115,
      116, 115, 109, 105, 100, 100, 108, 101, 69, 117, 114, 111, 112, 101, 103, 114, 111, 119, 116, 104, 108, 101, 103, 97, 99, 121, 109, 97, 110, 110, 101,
      114, 101, 110, 111, 117, 103, 104, 99, 97, 114, 101, 101, 114, 97, 110, 115, 119, 101, 114, 111, 114, 105, 103, 105, 110, 112, 111, 114, 116, 97, 108, 99,
      108, 105, 101, 110, 116, 115, 101, 108, 101, 99, 116, 114, 97, 110, 100, 111, 109, 99, 108, 111, 115, 101, 100, 116, 111, 112, 105, 99, 115, 99, 111, 109,
      105, 110, 103, 102, 97, 116, 104, 101, 114, 111, 112, 116, 105, 111, 110, 115, 105, 109, 112, 108, 121, 114, 97, 105, 115, 101, 100, 101, 115, 99, 97,
      112, 101, 99, 104, 111, 115, 101, 110, 99, 104, 117, 114, 99, 104, 100, 101, 102, 105, 110, 101, 114, 101, 97, 115, 111, 110, 99, 111, 114, 110, 101, 114,
      111, 117, 116, 112, 117, 116, 109, 101, 109, 111, 114, 121, 105, 102, 114, 97, 109, 101, 112, 111, 108, 105, 99, 101, 109, 111, 100, 101, 108, 115, 78,
      117, 109, 98, 101, 114, 100, 117, 114, 105, 110, 103, 111, 102, 102, 101, 114, 115, 115, 116, 121, 108, 101, 115, 107, 105, 108, 108, 101, 100, 108, 105,
      115, 116, 101, 100, 99, 97, 108, 108, 101, 100, 115, 105, 108, 118, 101, 114, 109, 97, 114, 103, 105, 110, 100, 101, 108, 101, 116, 101, 98, 101, 116,
      116, 101, 114, 98, 114, 111, 119, 115, 101, 108, 105, 109, 105, 116, 115, 71, 108, 111, 98, 97, 108, 115, 105, 110, 103, 108, 101, 119, 105, 100, 103,
      101, 116, 99, 101, 110, 116, 101, 114, 98, 117, 100, 103, 101, 116, 110, 111, 119, 114, 97, 112, 99, 114, 101, 100, 105, 116, 99, 108, 97, 105, 109, 115,
      101, 110, 103, 105, 110, 101, 115, 97, 102, 101, 116, 121, 99, 104, 111, 105, 99, 101, 115, 112, 105, 114, 105, 116, 45, 115, 116, 121, 108, 101, 115,
      112, 114, 101, 97, 100, 109, 97, 107, 105, 110, 103, 110, 101, 101, 100, 101, 100, 114, 117, 115, 115, 105, 97, 112, 108, 101, 97, 115, 101, 101, 120,
      116, 101, 110, 116, 83, 99, 114, 105, 112, 116, 98, 114, 111, 107, 101, 110, 97, 108, 108, 111, 119, 115, 99, 104, 97, 114, 103, 101, 100, 105, 118, 105,
      100, 101, 102, 97, 99, 116, 111, 114, 109, 101, 109, 98, 101, 114, 45, 98, 97, 115, 101, 100, 116, 104, 101, 111, 114, 121, 99, 111, 110, 102, 105, 103,
      97, 114, 111, 117, 110, 100, 119, 111, 114, 107, 101, 100, 104, 101, 108, 112, 101, 100, 67, 104, 117, 114, 99, 104, 105, 109, 112, 97, 99, 116, 115, 104,
      111, 117, 108, 100, 97, 108, 119, 97, 121, 115, 108, 111, 103, 111, 34, 32, 98, 111, 116, 116, 111, 109, 108, 105, 115, 116, 34, 62, 41, 123, 118, 97,
      114, 32, 112, 114, 101, 102, 105, 120, 111, 114, 97, 110, 103, 101, 72, 101, 97, 100, 101, 114, 46, 112, 117, 115, 104, 40, 99, 111, 117, 112, 108, 101,
      103, 97, 114, 100, 101, 110, 98, 114, 105, 100, 103, 101, 108, 97, 117, 110, 99, 104, 82, 101, 118, 105, 101, 119, 116, 97, 107, 105, 110, 103, 118, 105,
      115, 105, 111, 110, 108, 105, 116, 116, 108, 101, 100, 97, 116, 105, 110, 103, 66, 117, 116, 116, 111, 110, 98, 101, 97, 117, 116, 121, 116, 104, 101,
      109, 101, 115, 102, 111, 114, 103, 111, 116, 83, 101, 97, 114, 99, 104, 97, 110, 99, 104, 111, 114, 97, 108, 109, 111, 115, 116, 108, 111, 97, 100, 101,
      100, 67, 104, 97, 110, 103, 101, 114, 101, 116, 117, 114, 110, 115, 116, 114, 105, 110, 103, 114, 101, 108, 111, 97, 100, 77, 111, 98, 105, 108, 101, 105,
      110, 99, 111, 109, 101, 115, 117, 112, 112, 108, 121, 83, 111, 117, 114, 99, 101, 111, 114, 100, 101, 114, 115, 118, 105, 101, 119, 101, 100, 38, 110, 98,
      115, 112, 59, 99, 111, 117, 114, 115, 101, 65, 98, 111, 117, 116, 32, 105, 115, 108, 97, 110, 100, 60, 104, 116, 109, 108, 32, 99, 111, 111, 107, 105,
      101, 110, 97, 109, 101, 61, 34, 97, 109, 97, 122, 111, 110, 109, 111, 100, 101, 114, 110, 97, 100, 118, 105, 99, 101, 105, 110, 60, 47, 97, 62, 58, 32,
      84, 104, 101, 32, 100, 105, 97, 108, 111, 103, 104, 111, 117, 115, 101, 115, 66, 69, 71, 73, 78, 32, 77, 101, 120, 105, 99, 111, 115, 116, 97, 114, 116,
      115, 99, 101, 110, 116, 114, 101, 104, 101, 105, 103, 104, 116, 97, 100, 100, 105, 110, 103, 73, 115, 108, 97, 110, 100, 97, 115, 115, 101, 116, 115, 69,
      109, 112, 105, 114, 101, 83, 99, 104, 111, 111, 108, 101, 102, 102, 111, 114, 116, 100, 105, 114, 101, 99, 116, 110, 101, 97, 114, 108, 121, 109, 97, 110,
      117, 97, 108, 83, 101, 108, 101, 99, 116, 46, 10, 10, 79, 110, 101, 106, 111, 105, 110, 101, 100, 109, 101, 110, 117, 34, 62, 80, 104, 105, 108, 105, 112,
      97, 119, 97, 114, 100, 115, 104, 97, 110, 100, 108, 101, 105, 109, 112, 111, 114, 116, 79, 102, 102, 105, 99, 101, 114, 101, 103, 97, 114, 100, 115, 107,
      105, 108, 108, 115, 110, 97, 116, 105, 111, 110, 83, 112, 111, 114, 116, 115, 100, 101, 103, 114, 101, 101, 119, 101, 101, 107, 108, 121, 32, 40, 101, 46,
      103, 46, 98, 101, 104, 105, 110, 100, 100, 111, 99, 116, 111, 114, 108, 111, 103, 103, 101, 100, 117, 110, 105, 116, 101, 100, 60, 47, 98, 62, 60, 47, 98,
      101, 103, 105, 110, 115, 112, 108, 97, 110, 116, 115, 97, 115, 115, 105, 115, 116, 97, 114, 116, 105, 115, 116, 105, 115, 115, 117, 101, 100, 51, 48, 48,
      112, 120, 124, 99, 97, 110, 97, 100, 97, 97, 103, 101, 110, 99, 121, 115, 99, 104, 101, 109, 101, 114, 101, 109, 97, 105, 110, 66, 114, 97, 122, 105, 108,
      115, 97, 109, 112, 108, 101, 108, 111, 103, 111, 34, 62, 98, 101, 121, 111, 110, 100, 45, 115, 99, 97, 108, 101, 97, 99, 99, 101, 112, 116, 115, 101, 114,
      118, 101, 100, 109, 97, 114, 105, 110, 101, 70, 111, 111, 116, 101, 114, 99, 97, 109, 101, 114, 97, 60, 47, 104, 49, 62, 10, 95, 102, 111, 114, 109, 34,
      108, 101, 97, 118, 101, 115, 115, 116, 114, 101, 115, 115, 34, 32, 47, 62, 13, 10, 46, 103, 105, 102, 34, 32, 111, 110, 108, 111, 97, 100, 108, 111, 97,
      100, 101, 114, 79, 120, 102, 111, 114, 100, 115, 105, 115, 116, 101, 114, 115, 117, 114, 118, 105, 118, 108, 105, 115, 116, 101, 110, 102, 101, 109, 97,
      108, 101, 68, 101, 115, 105, 103, 110, 115, 105, 122, 101, 61, 34, 97, 112, 112, 101, 97, 108, 116, 101, 120, 116, 34, 62, 108, 101, 118, 101, 108, 115,
      116, 104, 97, 110, 107, 115, 104, 105, 103, 104, 101, 114, 102, 111, 114, 99, 101, 100, 97, 110, 105, 109, 97, 108, 97, 110, 121, 111, 110, 101, 65, 102,
      114, 105, 99, 97, 97, 103, 114, 101, 101, 100, 114, 101, 99, 101, 110, 116, 80, 101, 111, 112, 108, 101, 60, 98, 114, 32, 47, 62, 119, 111, 110, 100, 101,
      114, 112, 114, 105, 99, 101, 115, 116, 117, 114, 110, 101, 100, 124, 124, 32, 123, 125, 59, 109, 97, 105, 110, 34, 62, 105, 110, 108, 105, 110, 101, 115,
      117, 110, 100, 97, 121, 119, 114, 97, 112, 34, 62, 102, 97, 105, 108, 101, 100, 99, 101, 110, 115, 117, 115, 109, 105, 110, 117, 116, 101, 98, 101, 97,
      99, 111, 110, 113, 117, 111, 116, 101, 115, 49, 53, 48, 112, 120, 124, 101, 115, 116, 97, 116, 101, 114, 101, 109, 111, 116, 101, 101, 109, 97, 105, 108,
      34, 108, 105, 110, 107, 101, 100, 114, 105, 103, 104, 116, 59, 115, 105, 103, 110, 97, 108, 102, 111, 114, 109, 97, 108, 49, 46, 104, 116, 109, 108, 115,
      105, 103, 110, 117, 112, 112, 114, 105, 110, 99, 101, 102, 108, 111, 97, 116, 58, 46, 112, 110, 103, 34, 32, 102, 111, 114, 117, 109, 46, 65, 99, 99, 101,
      115, 115, 112, 97, 112, 101, 114, 115, 115, 111, 117, 110, 100, 115, 101, 120, 116, 101, 110, 100, 72, 101, 105, 103, 104, 116, 115, 108, 105, 100, 101,
      114, 85, 84, 70, 45, 56, 34, 38, 97, 109, 112, 59, 32, 66, 101, 102, 111, 114, 101, 46, 32, 87, 105, 116, 104, 115, 116, 117, 100, 105, 111, 111, 119,
      110, 101, 114, 115, 109, 97, 110, 97, 103, 101, 112, 114, 111, 102, 105, 116, 106, 81, 117, 101, 114, 121, 97, 110, 110, 117, 97, 108, 112, 97, 114, 97,
      109, 115, 98, 111, 117, 103, 104, 116, 102, 97, 109, 111, 117, 115, 103, 111, 111, 103, 108, 101, 108, 111, 110, 103, 101, 114, 105, 43, 43, 41, 32, 123,
      105, 115, 114, 97, 101, 108, 115, 97, 121, 105, 110, 103, 100, 101, 99, 105, 100, 101, 104, 111, 109, 101, 34, 62, 104, 101, 97, 100, 101, 114, 101, 110,
      115, 117, 114, 101, 98, 114, 97, 110, 99, 104, 112, 105, 101, 99, 101, 115, 98, 108, 111, 99, 107, 59, 115, 116, 97, 116, 101, 100, 116, 111, 112, 34, 62,
      60, 114, 97, 99, 105, 110, 103, 114, 101, 115, 105, 122, 101, 45, 45, 38, 103, 116, 59, 112, 97, 99, 105, 116, 121, 115, 101, 120, 117, 97, 108, 98, 117,
      114, 101, 97, 117, 46, 106, 112, 103, 34, 32, 49, 48, 44, 48, 48, 48, 111, 98, 116, 97, 105, 110, 116, 105, 116, 108, 101, 115, 97, 109, 111, 117, 110,
      116, 44, 32, 73, 110, 99, 46, 99, 111, 109, 101, 100, 121, 109, 101, 110, 117, 34, 32, 108, 121, 114, 105, 99, 115, 116, 111, 100, 97, 121, 46, 105, 110,
      100, 101, 101, 100, 99, 111, 117, 110, 116, 121, 95, 108, 111, 103, 111, 46, 70, 97, 109, 105, 108, 121, 108, 111, 111, 107, 101, 100, 77, 97, 114, 107,
      101, 116, 108, 115, 101, 32, 105, 102, 80, 108, 97, 121, 101, 114, 116, 117, 114, 107, 101, 121, 41, 59, 118, 97, 114, 32, 102, 111, 114, 101, 115, 116,
      103, 105, 118, 105, 110, 103, 101, 114, 114, 111, 114, 115, 68, 111, 109, 97, 105, 110, 125, 101, 108, 115, 101, 123, 105, 110, 115, 101, 114, 116, 66,
      108, 111, 103, 60, 47, 102, 111, 111, 116, 101, 114, 108, 111, 103, 105, 110, 46, 102, 97, 115, 116, 101, 114, 97, 103, 101, 110, 116, 115, 60, 98, 111,
      100, 121, 32, 49, 48, 112, 120, 32, 48, 112, 114, 97, 103, 109, 97, 102, 114, 105, 100, 97, 121, 106, 117, 110, 105, 111, 114, 100, 111, 108, 108, 97,
      114, 112, 108, 97, 99, 101, 100, 99, 111, 118, 101, 114, 115, 112, 108, 117, 103, 105, 110, 53, 44, 48, 48, 48, 32, 112, 97, 103, 101, 34, 62, 98, 111,
      115, 116, 111, 110, 46, 116, 101, 115, 116, 40, 97, 118, 97, 116, 97, 114, 116, 101, 115, 116, 101, 100, 95, 99, 111, 117, 110, 116, 102, 111, 114, 117,
      109, 115, 115, 99, 104, 101, 109, 97, 105, 110, 100, 101, 120, 44, 102, 105, 108, 108, 101, 100, 115, 104, 97, 114, 101, 115, 114, 101, 97, 100, 101, 114,
      97, 108, 101, 114, 116, 40, 97, 112, 112, 101, 97, 114, 83, 117, 98, 109, 105, 116, 108, 105, 110, 101, 34, 62, 98, 111, 100, 121, 34, 62, 10, 42, 32, 84,
      104, 101, 84, 104, 111, 117, 103, 104, 115, 101, 101, 105, 110, 103, 106, 101, 114, 115, 101, 121, 78, 101, 119, 115, 60, 47, 118, 101, 114, 105, 102,
      121, 101, 120, 112, 101, 114, 116, 105, 110, 106, 117, 114, 121, 119, 105, 100, 116, 104, 61, 67, 111, 111, 107, 105, 101, 83, 84, 65, 82, 84, 32, 97, 99,
      114, 111, 115, 115, 95, 105, 109, 97, 103, 101, 116, 104, 114, 101, 97, 100, 110, 97, 116, 105, 118, 101, 112, 111, 99, 107, 101, 116, 98, 111, 120, 34,
      62, 10, 83, 121, 115, 116, 101, 109, 32, 68, 97, 118, 105, 100, 99, 97, 110, 99, 101, 114, 116, 97, 98, 108, 101, 115, 112, 114, 111, 118, 101, 100, 65,
      112, 114, 105, 108, 32, 114, 101, 97, 108, 108, 121, 100, 114, 105, 118, 101, 114, 105, 116, 101, 109, 34, 62, 109, 111, 114, 101, 34, 62, 98, 111, 97,
      114, 100, 115, 99, 111, 108, 111, 114, 115, 99, 97, 109, 112, 117, 115, 102, 105, 114, 115, 116, 32, 124, 124, 32, 91, 93, 59, 109, 101, 100, 105, 97, 46,
      103, 117, 105, 116, 97, 114, 102, 105, 110, 105, 115, 104, 119, 105, 100, 116, 104, 58, 115, 104, 111, 119, 101, 100, 79, 116, 104, 101, 114, 32, 46, 112,
      104, 112, 34, 32, 97, 115, 115, 117, 109, 101, 108, 97, 121, 101, 114, 115, 119, 105, 108, 115, 111, 110, 115, 116, 111, 114, 101, 115, 114, 101, 108,
      105, 101, 102, 115, 119, 101, 100, 101, 110, 67, 117, 115, 116, 111, 109, 101, 97, 115, 105, 108, 121, 32, 121, 111, 117, 114, 32, 83, 116, 114, 105, 110,
      103, 10, 10, 87, 104, 105, 108, 116, 97, 121, 108, 111, 114, 99, 108, 101, 97, 114, 58, 114, 101, 115, 111, 114, 116, 102, 114, 101, 110, 99, 104, 116,
      104, 111, 117, 103, 104, 34, 41, 32, 43, 32, 34, 60, 98, 111, 100, 121, 62, 98, 117, 121, 105, 110, 103, 98, 114, 97, 110, 100, 115, 77, 101, 109, 98,
      101, 114, 110, 97, 109, 101, 34, 62, 111, 112, 112, 105, 110, 103, 115, 101, 99, 116, 111, 114, 53, 112, 120, 59, 34, 62, 118, 115, 112, 97, 99, 101, 112,
      111, 115, 116, 101, 114, 109, 97, 106, 111, 114, 32, 99, 111, 102, 102, 101, 101, 109, 97, 114, 116, 105, 110, 109, 97, 116, 117, 114, 101, 104, 97, 112,
      112, 101, 110, 60, 47, 110, 97, 118, 62, 107, 97, 110, 115, 97, 115, 108, 105, 110, 107, 34, 62, 73, 109, 97, 103, 101, 115, 61, 102, 97, 108, 115, 101,
      119, 104, 105, 108, 101, 32, 104, 115, 112, 97, 99, 101, 48, 38, 97, 109, 112, 59, 32, 10, 10, 73, 110, 32, 32, 112, 111, 119, 101, 114, 80, 111, 108,
      115, 107, 105, 45, 99, 111, 108, 111, 114, 106, 111, 114, 100, 97, 110, 66, 111, 116, 116, 111, 109, 83, 116, 97, 114, 116, 32, 45, 99, 111, 117, 110,
      116, 50, 46, 104, 116, 109, 108, 110, 101, 119, 115, 34, 62, 48, 49, 46, 106, 112, 103, 79, 110, 108, 105, 110, 101, 45, 114, 105, 103, 104, 116, 109,
      105, 108, 108, 101, 114, 115, 101, 110, 105, 111, 114, 73, 83, 66, 78, 32, 48, 48, 44, 48, 48, 48, 32, 103, 117, 105, 100, 101, 115, 118, 97, 108, 117,
      101, 41, 101, 99, 116, 105, 111, 110, 114, 101, 112, 97, 105, 114, 46, 120, 109, 108, 34, 32, 32, 114, 105, 103, 104, 116, 115, 46, 104, 116, 109, 108,
      45, 98, 108, 111, 99, 107, 114, 101, 103, 69, 120, 112, 58, 104, 111, 118, 101, 114, 119, 105, 116, 104, 105, 110, 118, 105, 114, 103, 105, 110, 112, 104,
      111, 110, 101, 115, 60, 47, 116, 114, 62, 13, 117, 115, 105, 110, 103, 32, 10, 9, 118, 97, 114, 32, 62, 39, 41, 59, 10, 9, 60, 47, 116, 100, 62, 10, 60,
      47, 116, 114, 62, 10, 98, 97, 104, 97, 115, 97, 98, 114, 97, 115, 105, 108, 103, 97, 108, 101, 103, 111, 109, 97, 103, 121, 97, 114, 112, 111, 108, 115,
      107, 105, 115, 114, 112, 115, 107, 105, 216, 177, 216, 175, 217, 136, 228, 184, 173, 230, 150, 135, 231, 174, 128, 228, 189, 147, 231, 185, 129, 233, 171,
      148, 228, 191, 161, 230, 129, 175, 228, 184, 173, 229, 155, 189, 230, 136, 145, 228, 187, 172, 228, 184, 128, 228, 184, 170, 229, 133, 172, 229, 143, 184,
      231, 174, 161, 231, 144, 134, 232, 174, 186, 229, 157, 155, 229, 143, 175, 228, 187, 165, 230, 156, 141, 229, 138, 161, 230, 151, 182, 233, 151, 180, 228,
      184, 170, 228, 186, 186, 228, 186, 167, 229, 147, 129, 232, 135, 170, 229, 183, 177, 228, 188, 129, 228, 184, 154, 230, 159, 165, 231, 156, 139, 229, 183,
      165, 228, 189, 156, 232, 129, 148, 231, 179, 187, 230, 178, 161, 230, 156, 137, 231, 189, 145, 231, 171, 153, 230, 137, 128, 230, 156, 137, 232, 175, 132,
      232, 174, 186, 228, 184, 173, 229, 191, 131, 230, 150, 135, 231, 171, 160, 231, 148, 168, 230, 136, 183, 233, 166, 150, 233, 161, 181, 228, 189, 156, 232,
      128, 133, 230, 138, 128, 230, 156, 175, 233, 151, 174, 233, 162, 152, 231, 155, 184, 229, 133, 179, 228, 184, 139, 232, 189, 189, 230, 144, 156, 231, 180,
      162, 228, 189, 191, 231, 148, 168, 232, 189, 175, 228, 187, 182, 229, 156, 168, 231, 186, 191, 228, 184, 187, 233, 162, 152, 232, 181, 132, 230, 150, 153,
      232, 167, 134, 233, 162, 145, 229, 155, 158, 229, 164, 141, 230, 179, 168, 229, 134, 140, 231, 189, 145, 231, 187, 156, 230, 148, 182, 232, 151, 143, 229,
      134, 133, 229, 174, 185, 230, 142, 168, 232, 141, 144, 229, 184, 130, 229, 156, 186, 230, 182, 136, 230, 129, 175, 231, 169, 186, 233, 151, 180, 229, 143,
      145, 229, 184, 131, 228, 187, 128, 228, 185, 136, 229, 165, 189, 229, 143, 139, 231, 148, 159, 230, 180, 187, 229, 155, 190, 231, 137, 135, 229, 143, 145,
      229, 177, 149, 229, 166, 130, 230, 158, 156, 230, 137, 139, 230, 156, 186, 230, 150, 176, 233, 151, 187, 230, 156, 128, 230, 150, 176, 230, 150, 185, 229,
      188, 143, 229, 140, 151, 228, 186, 172, 230, 143, 144, 228, 190, 155, 229, 133, 179, 228, 186, 142, 230, 155, 180, 229, 164, 154, 232, 191, 153, 228, 184,
      170, 231, 179, 187, 231, 187, 159, 231, 159, 165, 233, 129, 147, 230, 184, 184, 230, 136, 143, 229, 185, 191, 229, 145, 138, 229, 133, 182, 228, 187, 150,
      229, 143, 145, 232, 161, 168, 229, 174, 137, 229, 133, 168, 231, 172, 172, 228, 184, 128, 228, 188, 154, 229, 145, 152, 232, 191, 155, 232, 161, 140, 231,
      130, 185, 229, 135, 187, 231, 137, 136, 230, 157, 131, 231, 148, 181, 229, 173, 144, 228, 184, 150, 231, 149, 140, 232, 174, 190, 232, 174, 161, 229, 133,
      141, 232, 180, 185, 230, 149, 153, 232, 130, 178, 229, 138, 160, 229, 133, 165, 230, 180, 187, 229, 138, 168, 228, 187, 150, 228, 187, 172, 229, 149, 134,
      229, 147, 129, 229, 141, 154, 229, 174, 162, 231, 142, 176, 229, 156, 168, 228, 184, 138, 230, 181, 183, 229, 166, 130, 228, 189, 149, 229, 183, 178, 231,
      187, 143, 231, 149, 153, 232, 168, 128, 232, 175, 166, 231, 187, 134, 231, 164, 190, 229, 140, 186, 231, 153, 187, 229, 189, 149, 230, 156, 172, 231, 171,
      153, 233, 156, 128, 232, 166, 129, 228, 187, 183, 230, 160, 188, 230, 148, 175, 230, 140, 129, 229, 155, 189, 233, 153, 133, 233, 147, 190, 230, 142, 165,
      229, 155, 189, 229, 174, 182, 229, 187, 186, 232, 174, 190, 230, 156, 139, 229, 143, 139, 233, 152, 133, 232, 175, 187, 230, 179, 149, 229, 190, 139, 228,
      189, 141, 231, 189, 174, 231, 187, 143, 230, 181, 142, 233, 128, 137, 230, 139, 169, 232, 191, 153, 230, 160, 183, 229, 189, 147, 229, 137, 141, 229, 136,
      134, 231, 177, 187, 230, 142, 146, 232, 161, 140, 229, 155, 160, 228, 184, 186, 228, 186, 164, 230, 152, 147, 230, 156, 128, 229, 144, 142, 233, 159, 179,
      228, 185, 144, 228, 184, 141, 232, 131, 189, 233, 128, 154, 232, 191, 135, 232, 161, 140, 228, 184, 154, 231, 167, 145, 230, 138, 128, 229, 143, 175, 232,
      131, 189, 232, 174, 190, 229, 164, 135, 229, 144, 136, 228, 189, 156, 229, 164, 167, 229, 174, 182, 231, 164, 190, 228, 188, 154, 231, 160, 148, 231, 169,
      182, 228, 184, 147, 228, 184, 154, 229, 133, 168, 233, 131, 168, 233, 161, 185, 231, 155, 174, 232, 191, 153, 233, 135, 140, 232, 191, 152, 230, 152, 175,
      229, 188, 128, 229, 167, 139, 230, 131, 133, 229, 134, 181, 231, 148, 181, 232, 132, 145, 230, 150, 135, 228, 187, 182, 229, 147, 129, 231, 137, 140, 229,
      184, 174, 229, 138, 169, 230, 150, 135, 229, 140, 150, 232, 181, 132, 230, 186, 144, 229, 164, 167, 229, 173, 166, 229, 173, 166, 228, 185, 160, 229, 156,
      176, 229, 157, 128, 230, 181, 143, 232, 167, 136, 230, 138, 149, 232, 181, 132, 229, 183, 165, 231, 168, 139, 232, 166, 129, 230, 177, 130, 230, 128, 142,
      228, 185, 136, 230, 151, 182, 229, 128, 153, 229, 138, 159, 232, 131, 189, 228, 184, 187, 232, 166, 129, 231, 155, 174, 229, 137, 141, 232, 181, 132, 232,
      174, 175, 229, 159, 142, 229, 184, 130, 230, 150, 185, 230, 179, 149, 231, 148, 181, 229, 189, 177, 230, 139, 155, 232, 129, 152, 229, 163, 176, 230, 152,
      142, 228, 187, 187, 228, 189, 149, 229, 129, 165, 229, 186, 183, 230, 149, 176, 230, 141, 174, 231, 190, 142, 229, 155, 189, 230, 177, 189, 232, 189, 166,
      228, 187, 139, 231, 187, 141, 228, 189, 134, 230, 152, 175, 228, 186, 164, 230, 181, 129, 231, 148, 159, 228, 186, 167, 230, 137, 128, 228, 187, 165, 231,
      148, 181, 232, 175, 157, 230, 152, 190, 231, 164, 186, 228, 184, 128, 228, 186, 155, 229, 141, 149, 228, 189, 141, 228, 186, 186, 229, 145, 152, 229, 136,
      134, 230, 158, 144, 229, 156, 176, 229, 155, 190, 230, 151, 133, 230, 184, 184, 229, 183, 165, 229, 133, 183, 229, 173, 166, 231, 148, 159, 231, 179, 187,
      229, 136, 151, 231, 189, 145, 229, 143, 139, 229, 184, 150, 229, 173, 144, 229, 175, 134, 231, 160, 129, 233, 162, 145, 233, 129, 147, 230, 142, 167, 229,
      136, 182, 229, 156, 176, 229, 140, 186, 229, 159, 186, 230, 156, 172, 229, 133, 168, 229, 155, 189, 231, 189, 145, 228, 184, 138, 233, 135, 141, 232, 166,
      129, 231, 172, 172, 228, 186, 140, 229, 150, 156, 230, 172, 162, 232, 191, 155, 229, 133, 165, 229, 143, 139, 230, 131, 133, 232, 191, 153, 228, 186, 155,
      232, 128, 131, 232, 175, 149, 229, 143, 145, 231, 142, 176, 229, 159, 185, 232, 174, 173, 228, 187, 165, 228, 184, 138, 230, 148, 191, 229, 186, 156, 230,
      136, 144, 228, 184, 186, 231, 142, 175, 229, 162, 131, 233, 166, 153, 230, 184, 175, 229, 144, 140, 230, 151, 182, 229, 168, 177, 228, 185, 144, 229, 143,
      145, 233, 128, 129, 228, 184, 128, 229, 174, 154, 229, 188, 128, 229, 143, 145, 228, 189, 156, 229, 147, 129, 230, 160, 135, 229, 135, 134, 230, 172, 162,
      232, 191, 142, 232, 167, 163, 229, 134, 179, 229, 156, 176, 230, 150, 185, 228, 184, 128, 228, 184, 139, 228, 187, 165, 229, 143, 138, 232, 180, 163, 228,
      187, 187, 230, 136, 150, 232, 128, 133, 229, 174, 162, 230, 136, 183, 228, 187, 163, 232, 161, 168, 231, 167, 175, 229, 136, 134, 229, 165, 179, 228, 186,
      186, 230, 149, 176, 231, 160, 129, 233, 148, 128, 229, 148, 174, 229, 135, 186, 231, 142, 176, 231, 166, 187, 231, 186, 191, 229, 186, 148, 231, 148, 168,
      229, 136, 151, 232, 161, 168, 228, 184, 141, 229, 144, 140, 231, 188, 150, 232, 190, 145, 231, 187, 159, 232, 174, 161, 230, 159, 165, 232, 175, 162, 228,
      184, 141, 232, 166, 129, 230, 156, 137, 229, 133, 179, 230, 156, 186, 230, 158, 132, 229, 190, 136, 229, 164, 154, 230, 146, 173, 230, 148, 190, 231, 187,
      132, 231, 187, 135, 230, 148, 191, 231, 173, 150, 231, 155, 180, 230, 142, 165, 232, 131, 189, 229, 138, 155, 230, 157, 165, 230, 186, 144, 230, 153, 130,
      233, 150, 147, 231, 156, 139, 229, 136, 176, 231, 131, 173, 233, 151, 168, 229, 133, 179, 233, 148, 174, 228, 184, 147, 229, 140, 186, 233, 157, 158, 229,
      184, 184, 232, 139, 177, 232, 175, 173, 231, 153, 190, 229, 186, 166, 229, 184, 140, 230, 156, 155, 231, 190, 142, 229, 165, 179, 230, 175, 148, 232, 190,
      131, 231, 159, 165, 232, 175, 134, 232, 167, 132, 229, 174, 154, 229, 187, 186, 232, 174, 174, 233, 131, 168, 233, 151, 168, 230, 132, 143, 232, 167, 129,
      231, 178, 190, 229, 189, 169, 230, 151, 165, 230, 156, 172, 230, 143, 144, 233, 171, 152, 229, 143, 145, 232, 168, 128, 230, 150, 185, 233, 157, 162, 229,
      159, 186, 233, 135, 145, 229, 164, 132, 231, 144, 134, 230, 157, 131, 233, 153, 144, 229, 189, 177, 231, 137, 135, 233, 147, 182, 232, 161, 140, 232, 191,
      152, 230, 156, 137, 229, 136, 134, 228, 186, 171, 231, 137, 169, 229, 147, 129, 231, 187, 143, 232, 144, 165, 230, 183, 187, 229, 138, 160, 228, 184, 147,
      229, 174, 182, 232, 191, 153, 231, 167, 141, 232, 175, 157, 233, 162, 152, 232, 181, 183, 230, 157, 165, 228, 184, 154, 229, 138, 161, 229, 133, 172, 229,
      145, 138, 232, 174, 176, 229, 189, 149, 231, 174, 128, 228, 187, 139, 232, 180, 168, 233, 135, 143, 231, 148, 183, 228, 186, 186, 229, 189, 177, 229, 147,
      141, 229, 188, 149, 231, 148, 168, 230, 138, 165, 229, 145, 138, 233, 131, 168, 229, 136, 134, 229, 191, 171, 233, 128, 159, 229, 146, 168, 232, 175, 162,
      230, 151, 182, 229, 176, 154, 230, 179, 168, 230, 132, 143, 231, 148, 179, 232, 175, 183, 229, 173, 166, 230, 160, 161, 229, 186, 148, 232, 175, 165, 229,
      142, 134, 229, 143, 178, 229, 143, 170, 230, 152, 175, 232, 191, 148, 229, 155, 158, 232, 180, 173, 228, 185, 176, 229, 144, 141, 231, 167, 176, 228, 184,
      186, 228, 186, 134, 230, 136, 144, 229, 138, 159, 232, 175, 180, 230, 152, 142, 228, 190, 155, 229, 186, 148, 229, 173, 169, 229, 173, 144, 228, 184, 147,
      233, 162, 152, 231, 168, 139, 229, 186, 143, 228, 184, 128, 232, 136, 172, 230, 156, 131, 229, 147, 161, 229, 143, 170, 230, 156, 137, 229, 133, 182, 229,
      174, 131, 228, 191, 157, 230, 138, 164, 232, 128, 140, 228, 184, 148, 228, 187, 138, 229, 164, 169, 231, 170, 151, 229, 143, 163, 229, 138, 168, 230, 128,
      129, 231, 138, 182, 230, 128, 129, 231, 137, 185, 229, 136, 171, 232, 174, 164, 228, 184, 186, 229, 191, 133, 233, 161, 187, 230, 155, 180, 230, 150, 176,
      229, 176, 143, 232, 175, 180, 230, 136, 145, 229, 128, 145, 228, 189, 156, 228, 184, 186, 229, 170, 146, 228, 189, 147, 229, 140, 133, 230, 139, 172, 233,
      130, 163, 228, 185, 136, 228, 184, 128, 230, 160, 183, 229, 155, 189, 229, 134, 133, 230, 152, 175, 229, 144, 166, 230, 160, 185, 230, 141, 174, 231, 148,
      181, 232, 167, 134, 229, 173, 166, 233, 153, 162, 229, 133, 183, 230, 156, 137, 232, 191, 135, 231, 168, 139, 231, 148, 177, 228, 186, 142, 228, 186, 186,
      230, 137, 141, 229, 135, 186, 230, 157, 165, 228, 184, 141, 232, 191, 135, 230, 173, 163, 229, 156, 168, 230, 152, 142, 230, 152, 159, 230, 149, 133, 228,
      186, 139, 229, 133, 179, 231, 179, 187, 230, 160, 135, 233, 162, 152, 229, 149, 134, 229, 138, 161, 232, 190, 147, 229, 133, 165, 228, 184, 128, 231, 155,
      180, 229, 159, 186, 231, 161, 128, 230, 149, 153, 229, 173, 166, 228, 186, 134, 232, 167, 163, 229, 187, 186, 231, 173, 145, 231, 187, 147, 230, 158, 156,
      229, 133, 168, 231, 144, 131, 233, 128, 154, 231, 159, 165, 232, 174, 161, 229, 136, 146, 229, 175, 185, 228, 186, 142, 232, 137, 186, 230, 156, 175, 231,
      155, 184, 229, 134, 140, 229, 143, 145, 231, 148, 159, 231, 156, 159, 231, 154, 132, 229, 187, 186, 231, 171, 139, 231, 173, 137, 231, 186, 167, 231, 177,
      187, 229, 158, 139, 231, 187, 143, 233, 170, 140, 229, 174, 158, 231, 142, 176, 229, 136, 182, 228, 189, 156, 230, 157, 165, 232, 135, 170, 230, 160, 135,
      231, 173, 190, 228, 187, 165, 228, 184, 139, 229, 142, 159, 229, 136, 155, 230, 151, 160, 230, 179, 149, 229, 133, 182, 228, 184, 173, 229, 128, 139, 228,
      186, 186, 228, 184, 128, 229, 136, 135, 230, 140, 135, 229, 141, 151, 229, 133, 179, 233, 151, 173, 233, 155, 134, 229, 155, 162, 231, 172, 172, 228, 184,
      137, 229, 133, 179, 230, 179, 168, 229, 155, 160, 230, 173, 164, 231, 133, 167, 231, 137, 135, 230, 183, 177, 229, 156, 179, 229, 149, 134, 228, 184, 154,
      229, 185, 191, 229, 183, 158, 230, 151, 165, 230, 156, 159, 233, 171, 152, 231, 186, 167, 230, 156, 128, 232, 191, 145, 231, 187, 188, 229, 144, 136, 232,
      161, 168, 231, 164, 186, 228, 184, 147, 232, 190, 145, 232, 161, 140, 228, 184, 186, 228, 186, 164, 233, 128, 154, 232, 175, 132, 228, 187, 183, 232, 167,
      137, 229, 190, 151, 231, 178, 190, 229, 141, 142, 229, 174, 182, 229, 186, 173, 229, 174, 140, 230, 136, 144, 230, 132, 159, 232, 167, 137, 229, 174, 137,
      232, 163, 133, 229, 190, 151, 229, 136, 176, 233, 130, 174, 228, 187, 182, 229, 136, 182, 229, 186, 166, 233, 163, 159, 229, 147, 129, 232, 153, 189, 231,
      132, 182, 232, 189, 172, 232, 189, 189, 230, 138, 165, 228, 187, 183, 232, 174, 176, 232, 128, 133, 230, 150, 185, 230, 161, 136, 232, 161, 140, 230, 148,
      191, 228, 186, 186, 230, 176, 145, 231, 148, 168, 229, 147, 129, 228, 184, 156, 232, 165, 191, 230, 143, 144, 229, 135, 186, 233, 133, 146, 229, 186, 151,
      231, 132, 182, 229, 144, 142, 228, 187, 152, 230, 172, 190, 231, 131, 173, 231, 130, 185, 228, 187, 165, 229, 137, 141, 229, 174, 140, 229, 133, 168, 229,
      143, 145, 229, 184, 150, 232, 174, 190, 231, 189, 174, 233, 162, 134, 229, 175, 188, 229, 183, 165, 228, 184, 154, 229, 140, 187, 233, 153, 162, 231, 156,
      139, 231, 156, 139, 231, 187, 143, 229, 133, 184, 229, 142, 159, 229, 155, 160, 229, 185, 179, 229, 143, 176, 229, 144, 132, 231, 167, 141, 229, 162, 158,
      229, 138, 160, 230, 157, 144, 230, 150, 153, 230, 150, 176, 229, 162, 158, 228, 185, 139, 229, 144, 142, 232, 129, 140, 228, 184, 154, 230, 149, 136, 230,
      158, 156, 228, 187, 138, 229, 185, 180, 232, 174, 186, 230, 150, 135, 230, 136, 145, 229, 155, 189, 229, 145, 138, 232, 175, 137, 231, 137, 136, 228, 184,
      187, 228, 191, 174, 230, 148, 185, 229, 143, 130, 228, 184, 142, 230, 137, 147, 229, 141, 176, 229, 191, 171, 228, 185, 144, 230, 156, 186, 230, 162, 176,
      232, 167, 130, 231, 130, 185, 229, 173, 152, 229, 156, 168, 231, 178, 190, 231, 165, 158, 232, 142, 183, 229, 190, 151, 229, 136, 169, 231, 148, 168, 231,
      187, 167, 231, 187, 173, 228, 189, 160, 228, 187, 172, 232, 191, 153, 228, 185, 136, 230, 168, 161, 229, 188, 143, 232, 175, 173, 232, 168, 128, 232, 131,
      189, 229, 164, 159, 233, 155, 133, 232, 153, 142, 230, 147, 141, 228, 189, 156, 233, 163, 142, 230, 160, 188, 228, 184, 128, 232, 181, 183, 231, 167, 145,
      229, 173, 166, 228, 189, 147, 232, 130, 178, 231, 159, 173, 228, 191, 161, 230, 157, 161, 228, 187, 182, 230, 178, 187, 231, 150, 151, 232, 191, 144, 229,
      138, 168, 228, 186, 167, 228, 184, 154, 228, 188, 154, 232, 174, 174, 229, 175, 188, 232, 136, 170, 229, 133, 136, 231, 148, 159, 232, 129, 148, 231, 155,
      159, 229, 143, 175, 230, 152, 175, 229, 149, 143, 233, 161, 140, 231, 187, 147, 230, 158, 132, 228, 189, 156, 231, 148, 168, 232, 176, 131, 230, 159, 165,
      232, 179, 135, 230, 150, 153, 232, 135, 170, 229, 138, 168, 232, 180, 159, 232, 180, 163, 229, 134, 156, 228, 184, 154, 232, 174, 191, 233, 151, 174, 229,
      174, 158, 230, 150, 189, 230, 142, 165, 229, 143, 151, 232, 174, 168, 232, 174, 186, 233, 130, 163, 228, 184, 170, 229, 143, 141, 233, 166, 136, 229, 138,
      160, 229, 188, 186, 229, 165, 179, 230, 128, 167, 232, 140, 131, 229, 155, 180, 230, 156, 141, 229, 139, 153, 228, 188, 145, 233, 151, 178, 228, 187, 138,
      230, 151, 165, 229, 174, 162, 230, 156, 141, 232, 167, 128, 231, 156, 139, 229, 143, 130, 229, 138, 160, 231, 154, 132, 232, 175, 157, 228, 184, 128, 231,
      130, 185, 228, 191, 157, 232, 175, 129, 229, 155, 190, 228, 185, 166, 230, 156, 137, 230, 149, 136, 230, 181, 139, 232, 175, 149, 231, 167, 187, 229, 138,
      168, 230, 137, 141, 232, 131, 189, 229, 134, 179, 229, 174, 154, 232, 130, 161, 231, 165, 168, 228, 184, 141, 230, 150, 173, 233, 156, 128, 230, 177, 130,
      228, 184, 141, 229, 190, 151, 229, 138, 158, 230, 179, 149, 228, 185, 139, 233, 151, 180, 233, 135, 135, 231, 148, 168, 232, 144, 165, 233, 148, 128, 230,
      138, 149, 232, 175, 137, 231, 155, 174, 230, 160, 135, 231, 136, 177, 230, 131, 133, 230, 145, 132, 229, 189, 177, 230, 156, 137, 228, 186, 155, 232, 164,
      135, 232, 163, 189, 230, 150, 135, 229, 173, 166, 230, 156, 186, 228, 188, 154, 230, 149, 176, 229, 173, 151, 232, 163, 133, 228, 191, 174, 232, 180, 173,
      231, 137, 169, 229, 134, 156, 230, 157, 145, 229, 133, 168, 233, 157, 162, 231, 178, 190, 229, 147, 129, 229, 133, 182, 229, 174, 158, 228, 186, 139, 230,
      131, 133, 230, 176, 180, 229, 185, 179, 230, 143, 144, 231, 164, 186, 228, 184, 138, 229, 184, 130, 232, 176, 162, 232, 176, 162, 230, 153, 174, 233, 128,
      154, 230, 149, 153, 229, 184, 136, 228, 184, 138, 228, 188, 160, 231, 177, 187, 229, 136, 171, 230, 173, 140, 230, 155, 178, 230, 139, 165, 230, 156, 137,
      229, 136, 155, 230, 150, 176, 233, 133, 141, 228, 187, 182, 229, 143, 170, 232, 166, 129, 230, 151, 182, 228, 187, 163, 232, 179, 135, 232, 168, 138, 232,
      190, 190, 229, 136, 176, 228, 186, 186, 231, 148, 159, 232, 174, 162, 233, 152, 133, 232, 128, 129, 229, 184, 136, 229, 177, 149, 231, 164, 186, 229, 191,
      131, 231, 144, 134, 232, 180, 180, 229, 173, 144, 231, 182, 178, 231, 171, 153, 228, 184, 187, 233, 161, 140, 232, 135, 170, 231, 132, 182, 231, 186, 167,
      229, 136, 171, 231, 174, 128, 229, 141, 149, 230, 148, 185, 233, 157, 169, 233, 130, 163, 228, 186, 155, 230, 157, 165, 232, 175, 180, 230, 137, 147, 229,
      188, 128, 228, 187, 163, 231, 160, 129, 229, 136, 160, 233, 153, 164, 232, 175, 129, 229, 136, 184, 232, 138, 130, 231, 155, 174, 233, 135, 141, 231, 130,
      185, 230, 172, 161, 230, 149, 184, 229, 164, 154, 229, 176, 145, 232, 167, 132, 229, 136, 146, 232, 181, 132, 233, 135, 145, 230, 137, 190, 229, 136, 176,
      228, 187, 165, 229, 144, 142, 229, 164, 167, 229, 133, 168, 228, 184, 187, 233, 161, 181, 230, 156, 128, 228, 189, 179, 229, 155, 158, 231, 173, 148, 229,
      164, 169, 228, 184, 139, 228, 191, 157, 233, 154, 156, 231, 142, 176, 228, 187, 163, 230, 163, 128, 230, 159, 165, 230, 138, 149, 231, 165, 168, 229, 176,
      143, 230, 151, 182, 230, 178, 146, 230, 156, 137, 230, 173, 163, 229, 184, 184, 231, 148, 154, 232, 135, 179, 228, 187, 163, 231, 144, 134, 231, 155, 174,
      229, 189, 149, 229, 133, 172, 229, 188, 128, 229, 164, 141, 229, 136, 182, 233, 135, 145, 232, 158, 141, 229, 185, 184, 231, 166, 143, 231, 137, 136, 230,
      156, 172, 229, 189, 162, 230, 136, 144, 229, 135, 134, 229, 164, 135, 232, 161, 140, 230, 131, 133, 229, 155, 158, 229, 136, 176, 230, 128, 157, 230, 131,
      179, 230, 128, 142, 230, 160, 183, 229, 141, 143, 232, 174, 174, 232, 174, 164, 232, 175, 129, 230, 156, 128, 229, 165, 189, 228, 186, 167, 231, 148, 159,
      230, 140, 137, 231, 133, 167, 230, 156, 141, 232, 163, 133, 229, 185, 191, 228, 184, 156, 229, 138, 168, 230, 188, 171, 233, 135, 135, 232, 180, 173, 230,
      150, 176, 230, 137, 139, 231, 187, 132, 229, 155, 190, 233, 157, 162, 230, 157, 191, 229, 143, 130, 232, 128, 131, 230, 148, 191, 230, 178, 187, 229, 174,
      185, 230, 152, 147, 229, 164, 169, 229, 156, 176, 229, 138, 170, 229, 138, 155, 228, 186, 186, 228, 187, 172, 229, 141, 135, 231, 186, 167, 233, 128, 159,
      229, 186, 166, 228, 186, 186, 231, 137, 169, 232, 176, 131, 230, 149, 180, 230, 181, 129, 232, 161, 140, 233, 128, 160, 230, 136, 144, 230, 150, 135, 229,
      173, 151, 233, 159, 169, 229, 155, 189, 232, 180, 184, 230, 152, 147, 229, 188, 128, 229, 177, 149, 231, 155, 184, 233, 151, 156, 232, 161, 168, 231, 142,
      176, 229, 189, 177, 232, 167, 134, 229, 166, 130, 230, 173, 164, 231, 190, 142, 229, 174, 185, 229, 164, 167, 229, 176, 143, 230, 138, 165, 233, 129, 147,
      230, 157, 161, 230, 172, 190, 229, 191, 131, 230, 131, 133, 232, 174, 184, 229, 164, 154, 230, 179, 149, 232, 167, 132, 229, 174, 182, 229, 177, 133, 228,
      185, 166, 229, 186, 151, 232, 191, 158, 230, 142, 165, 231, 171, 139, 229, 141, 179, 228, 184, 190, 230, 138, 165, 230, 138, 128, 229, 183, 167, 229, 165,
      165, 232, 191, 144, 231, 153, 187, 229, 133, 165, 228, 187, 165, 230, 157, 165, 231, 144, 134, 232, 174, 186, 228, 186, 139, 228, 187, 182, 232, 135, 170,
      231, 148, 177, 228, 184, 173, 229, 141, 142, 229, 138, 158, 229, 133, 172, 229, 166, 136, 229, 166, 136, 231, 156, 159, 230, 173, 163, 228, 184, 141, 233,
      148, 153, 229, 133, 168, 230, 150, 135, 229, 144, 136, 229, 144, 140, 228, 187, 183, 229, 128, 188, 229, 136, 171, 228, 186, 186, 231, 155, 145, 231, 157,
      163, 229, 133, 183, 228, 189, 147, 228, 184, 150, 231, 186, 170, 229, 155, 162, 233, 152, 159, 229, 136, 155, 228, 184, 154, 230, 137, 191, 230, 139, 133,
      229, 162, 158, 233, 149, 191, 230, 156, 137, 228, 186, 186, 228, 191, 157, 230, 140, 129, 229, 149, 134, 229, 174, 182, 231, 187, 180, 228, 191, 174, 229,
      143, 176, 230, 185, 190, 229, 183, 166, 229, 143, 179, 232, 130, 161, 228, 187, 189, 231, 173, 148, 230, 161, 136, 229, 174, 158, 233, 153, 133, 231, 148,
      181, 228, 191, 161, 231, 187, 143, 231, 144, 134, 231, 148, 159, 229, 145, 189, 229, 174, 163, 228, 188, 160, 228, 187, 187, 229, 138, 161, 230, 173, 163,
      229, 188, 143, 231, 137, 185, 232, 137, 178, 228, 184, 139, 230, 157, 165, 229, 141, 143, 228, 188, 154, 229, 143, 170, 232, 131, 189, 229, 189, 147, 231,
      132, 182, 233, 135, 141, 230, 150, 176, 229, 133, 167, 229, 174, 185, 230, 140, 135, 229, 175, 188, 232, 191, 144, 232, 161, 140, 230, 151, 165, 229, 191,
      151, 232, 179, 163, 229, 174, 182, 232, 182, 133, 232, 191, 135, 229, 156, 159, 229, 156, 176, 230, 181, 153, 230, 177, 159, 230, 148, 175, 228, 187, 152,
      230, 142, 168, 229, 135, 186, 231, 171, 153, 233, 149, 191, 230, 157, 173, 229, 183, 158, 230, 137, 167, 232, 161, 140, 229, 136, 182, 233, 128, 160, 228,
      185, 139, 228, 184, 128, 230, 142, 168, 229, 185, 191, 231, 142, 176, 229, 156, 186, 230, 143, 143, 232, 191, 176, 229, 143, 152, 229, 140, 150, 228, 188,
      160, 231, 187, 159, 230, 173, 140, 230, 137, 139, 228, 191, 157, 233, 153, 169, 232, 175, 190, 231, 168, 139, 229, 140, 187, 231, 150, 151, 231, 187, 143,
      232, 191, 135, 232, 191, 135, 229, 142, 187, 228, 185, 139, 229, 137, 141, 230, 148, 182, 229, 133, 165, 229, 185, 180, 229, 186, 166, 230, 157, 130, 229,
      191, 151, 231, 190, 142, 228, 184, 189, 230, 156, 128, 233, 171, 152, 231, 153, 187, 233, 153, 134, 230, 156, 170, 230, 157, 165, 229, 138, 160, 229, 183,
      165, 229, 133, 141, 232, 180, 163, 230, 149, 153, 231, 168, 139, 231, 137, 136, 229, 157, 151, 232, 186, 171, 228, 189, 147, 233, 135, 141, 229, 186, 134,
      229, 135, 186, 229, 148, 174, 230, 136, 144, 230, 156, 172, 229, 189, 162, 229, 188, 143, 229, 156, 159, 232, 177, 134, 229, 135, 186, 229, 131, 185, 228,
      184, 156, 230, 150, 185, 233, 130, 174, 231, 174, 177, 229, 141, 151, 228, 186, 172, 230, 177, 130, 232, 129, 140, 229, 143, 150, 229, 190, 151, 232, 129,
      140, 228, 189, 141, 231, 155, 184, 228, 191, 161, 233, 161, 181, 233, 157, 162, 229, 136, 134, 233, 146, 159, 231, 189, 145, 233, 161, 181, 231, 161, 174,
      229, 174, 154, 229, 155, 190, 228, 190, 139, 231, 189, 145, 229, 157, 128, 231, 167, 175, 230, 158, 129, 233, 148, 153, 232, 175, 175, 231, 155, 174, 231,
      154, 132, 229, 174, 157, 232, 180, 157, 230, 156, 186, 229, 133, 179, 233, 163, 142, 233, 153, 169, 230, 142, 136, 230, 157, 131, 231, 151, 133, 230, 175,
      146, 229, 174, 160, 231, 137, 169, 233, 153, 164, 228, 186, 134, 232, 169, 149, 232, 171, 150, 231, 150, 190, 231, 151, 133, 229, 143, 138, 230, 151, 182,
      230, 177, 130, 232, 180, 173, 231, 171, 153, 231, 130, 185, 229, 132, 191, 231, 171, 165, 230, 175, 143, 229, 164, 169, 228, 184, 173, 229, 164, 174, 232,
      174, 164, 232, 175, 134, 230, 175, 143, 228, 184, 170, 229, 164, 169, 230, 180, 165, 229, 173, 151, 228, 189, 147, 229, 143, 176, 231, 129, 163, 231, 187,
      180, 230, 138, 164, 230, 156, 172, 233, 161, 181, 228, 184, 170, 230, 128, 167, 229, 174, 152, 230, 150, 185, 229, 184, 184, 232, 167, 129, 231, 155, 184,
      230, 156, 186, 230, 136, 152, 231, 149, 165, 229, 186, 148, 229, 189, 147, 229, 190, 139, 229, 184, 136, 230, 150, 185, 228, 190, 191, 230, 160, 161, 229,
      155, 173, 232, 130, 161, 229, 184, 130, 230, 136, 191, 229, 177, 139, 230, 160, 143, 231, 155, 174, 229, 145, 152, 229, 183, 165, 229, 175, 188, 232, 135,
      180, 231, 170, 129, 231, 132, 182, 233, 129, 147, 229, 133, 183, 230, 156, 172, 231, 189, 145, 231, 187, 147, 229, 144, 136, 230, 161, 163, 230, 161, 136,
      229, 138, 179, 229, 138, 168, 229, 143, 166, 229, 164, 150, 231, 190, 142, 229, 133, 131, 229, 188, 149, 232, 181, 183, 230, 148, 185, 229, 143, 152, 231,
      172, 172, 229, 155, 155, 228, 188, 154, 232, 174, 161, 232, 170, 170, 230, 152, 142, 233, 154, 144, 231, 167, 129, 229, 174, 157, 229, 174, 157, 232, 167,
      132, 232, 140, 131, 230, 182, 136, 232, 180, 185, 229, 133, 177, 229, 144, 140, 229, 191, 152, 232, 174, 176, 228, 189, 147, 231, 179, 187, 229, 184, 166,
      230, 157, 165, 229, 144, 141, 229, 173, 151, 231, 153, 188, 232, 161, 168, 229, 188, 128, 230, 148, 190, 229, 138, 160, 231, 155, 159, 229, 143, 151, 229,
      136, 176, 228, 186, 140, 230, 137, 139, 229, 164, 167, 233, 135, 143, 230, 136, 144, 228, 186, 186, 230, 149, 176, 233, 135, 143, 229, 133, 177, 228, 186,
      171, 229, 140, 186, 229, 159, 159, 229, 165, 179, 229, 173, 169, 229, 142, 159, 229, 136, 153, 230, 137, 128, 229, 156, 168, 231, 187, 147, 230, 157, 159,
      233, 128, 154, 228, 191, 161, 232, 182, 133, 231, 186, 167, 233, 133, 141, 231, 189, 174, 229, 189, 147, 230, 151, 182, 228, 188, 152, 231, 167, 128, 230,
      128, 167, 230, 132, 159, 230, 136, 191, 228, 186, 167, 233, 129, 138, 230, 136, 178, 229, 135, 186, 229, 143, 163, 230, 143, 144, 228, 186, 164, 229, 176,
      177, 228, 184, 154, 228, 191, 157, 229, 129, 165, 231, 168, 139, 229, 186, 166, 229, 143, 130, 230, 149, 176, 228, 186, 139, 228, 184, 154, 230, 149, 180,
      228, 184, 170, 229, 177, 177, 228, 184, 156, 230, 131, 133, 230, 132, 159, 231, 137, 185, 230, 174, 138, 229, 136, 134, 233, 161, 158, 230, 144, 156, 229,
      176, 139, 229, 177, 158, 228, 186, 142, 233, 151, 168, 230, 136, 183, 232, 180, 162, 229, 138, 161, 229, 163, 176, 233, 159, 179, 229, 143, 138, 229, 133,
      182, 232, 180, 162, 231, 187, 143, 229, 157, 154, 230, 140, 129, 229, 185, 178, 233, 131, 168, 230, 136, 144, 231, 171, 139, 229, 136, 169, 231, 155, 138,
      232, 128, 131, 232, 153, 145, 230, 136, 144, 233, 131, 189, 229, 140, 133, 232, 163, 133, 231, 148, 168, 230, 136, 182, 230, 175, 148, 232, 181, 155, 230,
      150, 135, 230, 152, 142, 230, 139, 155, 229, 149, 134, 229, 174, 140, 230, 149, 180, 231, 156, 159, 230, 152, 175, 231, 156, 188, 231, 157, 155, 228, 188,
      153, 228, 188, 180, 229, 168, 129, 230, 156, 155, 233, 162, 134, 229, 159, 159, 229, 141, 171, 231, 148, 159, 228, 188, 152, 230, 131, 160, 232, 171, 150,
      229, 163, 135, 229, 133, 172, 229, 133, 177, 232, 137, 175, 229, 165, 189, 229, 133, 133, 229, 136, 134, 231, 172, 166, 229, 144, 136, 233, 153, 132, 228,
      187, 182, 231, 137, 185, 231, 130, 185, 228, 184, 141, 229, 143, 175, 232, 139, 177, 230, 150, 135, 232, 181, 132, 228, 186, 167, 230, 160, 185, 230, 156,
      172, 230, 152, 142, 230, 152, 190, 229, 175, 134, 231, 162, 188, 229, 133, 172, 228, 188, 151, 230, 176, 145, 230, 151, 143, 230, 155, 180, 229, 138, 160,
      228, 186, 171, 229, 143, 151, 229, 144, 140, 229, 173, 166, 229, 144, 175, 229, 138, 168, 233, 128, 130, 229, 144, 136, 229, 142, 159, 230, 157, 165, 233,
      151, 174, 231, 173, 148, 230, 156, 172, 230, 150, 135, 231, 190, 142, 233, 163, 159, 231, 187, 191, 232, 137, 178, 231, 168, 179, 229, 174, 154, 231, 187,
      136, 228, 186, 142, 231, 148, 159, 231, 137, 169, 228, 190, 155, 230, 177, 130, 230, 144, 156, 231, 139, 144, 229, 138, 155, 233, 135, 143, 228, 184, 165,
      233, 135, 141, 230, 176, 184, 232, 191, 156, 229, 134, 153, 231, 156, 159, 230, 156, 137, 233, 153, 144, 231, 171, 158, 228, 186, 137, 229, 175, 185, 232,
      177, 161, 232, 180, 185, 231, 148, 168, 228, 184, 141, 229, 165, 189, 231, 187, 157, 229, 175, 185, 229, 141, 129, 229, 136, 134, 228, 191, 131, 232, 191,
      155, 231, 130, 185, 232, 175, 132, 229, 189, 177, 233, 159, 179, 228, 188, 152, 229, 138, 191, 228, 184, 141, 229, 176, 145, 230, 172, 163, 232, 181, 143,
      229, 185, 182, 228, 184, 148, 230, 156, 137, 231, 130, 185, 230, 150, 185, 229, 144, 145, 229, 133, 168, 230, 150, 176, 228, 191, 161, 231, 148, 168, 232,
      174, 190, 230, 150, 189, 229, 189, 162, 232, 177, 161, 232, 181, 132, 230, 160, 188, 231, 170, 129, 231, 160, 180, 233, 154, 143, 231, 157, 128, 233, 135,
      141, 229, 164, 167, 228, 186, 142, 230, 152, 175, 230, 175, 149, 228, 184, 154, 230, 153, 186, 232, 131, 189, 229, 140, 150, 229, 183, 165, 229, 174, 140,
      231, 190, 142, 229, 149, 134, 229, 159, 142, 231, 187, 159, 228, 184, 128, 229, 135, 186, 231, 137, 136, 230, 137, 147, 233, 128, 160, 231, 148, 162, 229,
      147, 129, 230, 166, 130, 229, 134, 181, 231, 148, 168, 228, 186, 142, 228, 191, 157, 231, 149, 153, 229, 155, 160, 231, 180, 160, 228, 184, 173, 229, 156,
      139, 229, 173, 152, 229, 130, 168, 232, 180, 180, 229, 155, 190, 230, 156, 128, 230, 132, 155, 233, 149, 191, 230, 156, 159, 229, 143, 163, 228, 187, 183,
      231, 144, 134, 232, 180, 162, 229, 159, 186, 229, 156, 176, 229, 174, 137, 230, 142, 146, 230, 173, 166, 230, 177, 137, 233, 135, 140, 233, 157, 162, 229,
      136, 155, 229, 187, 186, 229, 164, 169, 231, 169, 186, 233, 166, 150, 229, 133, 136, 229, 174, 140, 229, 150, 132, 233, 169, 177, 229, 138, 168, 228, 184,
      139, 233, 157, 162, 228, 184, 141, 229, 134, 141, 232, 175, 154, 228, 191, 161, 230, 132, 143, 228, 185, 137, 233, 152, 179, 229, 133, 137, 232, 139, 177,
      229, 155, 189, 230, 188, 130, 228, 186, 174, 229, 134, 155, 228, 186, 139, 231, 142, 169, 229, 174, 182, 231, 190, 164, 228, 188, 151, 229, 134, 156, 230,
      176, 145, 229, 141, 179, 229, 143, 175, 229, 144, 141, 231, 168, 177, 229, 174, 182, 229, 133, 183, 229, 138, 168, 231, 148, 187, 230, 131, 179, 229, 136,
      176, 230, 179, 168, 230, 152, 142, 229, 176, 143, 229, 173, 166, 230, 128, 167, 232, 131, 189, 232, 128, 131, 231, 160, 148, 231, 161, 172, 228, 187, 182,
      232, 167, 130, 231, 156, 139, 230, 184, 133, 230, 165, 154, 230, 144, 158, 231, 172, 145, 233, 166, 150, 233, 160, 129, 233, 187, 132, 233, 135, 145, 233,
      128, 130, 231, 148, 168, 230, 177, 159, 232, 139, 143, 231, 156, 159, 229, 174, 158, 228, 184, 187, 231, 174, 161, 233, 152, 182, 230, 174, 181, 232, 168,
      187, 229, 134, 138, 231, 191, 187, 232, 175, 145, 230, 157, 131, 229, 136, 169, 229, 129, 154, 229, 165, 189, 228, 188, 188, 228, 185, 142, 233, 128, 154,
      232, 174, 175, 230, 150, 189, 229, 183, 165, 231, 139, 128, 230, 133, 139, 228, 185, 159, 232, 174, 184, 231, 142, 175, 228, 191, 157, 229, 159, 185, 229,
      133, 187, 230, 166, 130, 229, 191, 181, 229, 164, 167, 229, 158, 139, 230, 156, 186, 231, 165, 168, 231, 144, 134, 232, 167, 163, 229, 140, 191, 229, 144,
      141, 99, 117, 97, 110, 100, 111, 101, 110, 118, 105, 97, 114, 109, 97, 100, 114, 105, 100, 98, 117, 115, 99, 97, 114, 105, 110, 105, 99, 105, 111, 116,
      105, 101, 109, 112, 111, 112, 111, 114, 113, 117, 101, 99, 117, 101, 110, 116, 97, 101, 115, 116, 97, 100, 111, 112, 117, 101, 100, 101, 110, 106, 117,
      101, 103, 111, 115, 99, 111, 110, 116, 114, 97, 101, 115, 116, 195, 161, 110, 110, 111, 109, 98, 114, 101, 116, 105, 101, 110, 101, 110, 112, 101, 114,
      102, 105, 108, 109, 97, 110, 101, 114, 97, 97, 109, 105, 103, 111, 115, 99, 105, 117, 100, 97, 100, 99, 101, 110, 116, 114, 111, 97, 117, 110, 113, 117,
      101, 112, 117, 101, 100, 101, 115, 100, 101, 110, 116, 114, 111, 112, 114, 105, 109, 101, 114, 112, 114, 101, 99, 105, 111, 115, 101, 103, 195, 186, 110,
      98, 117, 101, 110, 111, 115, 118, 111, 108, 118, 101, 114, 112, 117, 110, 116, 111, 115, 115, 101, 109, 97, 110, 97, 104, 97, 98, 195, 173, 97, 97, 103,
      111, 115, 116, 111, 110, 117, 101, 118, 111, 115, 117, 110, 105, 100, 111, 115, 99, 97, 114, 108, 111, 115, 101, 113, 117, 105, 112, 111, 110, 105, 195,
      177, 111, 115, 109, 117, 99, 104, 111, 115, 97, 108, 103, 117, 110, 97, 99, 111, 114, 114, 101, 111, 105, 109, 97, 103, 101, 110, 112, 97, 114, 116, 105,
      114, 97, 114, 114, 105, 98, 97, 109, 97, 114, 195, 173, 97, 104, 111, 109, 98, 114, 101, 101, 109, 112, 108, 101, 111, 118, 101, 114, 100, 97, 100, 99,
      97, 109, 98, 105, 111, 109, 117, 99, 104, 97, 115, 102, 117, 101, 114, 111, 110, 112, 97, 115, 97, 100, 111, 108, 195, 173, 110, 101, 97, 112, 97, 114,
      101, 99, 101, 110, 117, 101, 118, 97, 115, 99, 117, 114, 115, 111, 115, 101, 115, 116, 97, 98, 97, 113, 117, 105, 101, 114, 111, 108, 105, 98, 114, 111,
      115, 99, 117, 97, 110, 116, 111, 97, 99, 99, 101, 115, 111, 109, 105, 103, 117, 101, 108, 118, 97, 114, 105, 111, 115, 99, 117, 97, 116, 114, 111, 116,
      105, 101, 110, 101, 115, 103, 114, 117, 112, 111, 115, 115, 101, 114, 195, 161, 110, 101, 117, 114, 111, 112, 97, 109, 101, 100, 105, 111, 115, 102, 114,
      101, 110, 116, 101, 97, 99, 101, 114, 99, 97, 100, 101, 109, 195, 161, 115, 111, 102, 101, 114, 116, 97, 99, 111, 99, 104, 101, 115, 109, 111, 100, 101,
      108, 111, 105, 116, 97, 108, 105, 97, 108, 101, 116, 114, 97, 115, 97, 108, 103, 195, 186, 110, 99, 111, 109, 112, 114, 97, 99, 117, 97, 108, 101, 115,
      101, 120, 105, 115, 116, 101, 99, 117, 101, 114, 112, 111, 115, 105, 101, 110, 100, 111, 112, 114, 101, 110, 115, 97, 108, 108, 101, 103, 97, 114, 118,
      105, 97, 106, 101, 115, 100, 105, 110, 101, 114, 111, 109, 117, 114, 99, 105, 97, 112, 111, 100, 114, 195, 161, 112, 117, 101, 115, 116, 111, 100, 105,
      97, 114, 105, 111, 112, 117, 101, 98, 108, 111, 113, 117, 105, 101, 114, 101, 109, 97, 110, 117, 101, 108, 112, 114, 111, 112, 105, 111, 99, 114, 105,
      115, 105, 115, 99, 105, 101, 114, 116, 111, 115, 101, 103, 117, 114, 111, 109, 117, 101, 114, 116, 101, 102, 117, 101, 110, 116, 101, 99, 101, 114, 114,
      97, 114, 103, 114, 97, 110, 100, 101, 101, 102, 101, 99, 116, 111, 112, 97, 114, 116, 101, 115, 109, 101, 100, 105, 100, 97, 112, 114, 111, 112, 105, 97,
      111, 102, 114, 101, 99, 101, 116, 105, 101, 114, 114, 97, 101, 45, 109, 97, 105, 108, 118, 97, 114, 105, 97, 115, 102, 111, 114, 109, 97, 115, 102, 117,
      116, 117, 114, 111, 111, 98, 106, 101, 116, 111, 115, 101, 103, 117, 105, 114, 114, 105, 101, 115, 103, 111, 110, 111, 114, 109, 97, 115, 109, 105, 115,
      109, 111, 115, 195, 186, 110, 105, 99, 111, 99, 97, 109, 105, 110, 111, 115, 105, 116, 105, 111, 115, 114, 97, 122, 195, 179, 110, 100, 101, 98, 105, 100,
      111, 112, 114, 117, 101, 98, 97, 116, 111, 108, 101, 100, 111, 116, 101, 110, 195, 173, 97, 106, 101, 115, 195, 186, 115, 101, 115, 112, 101, 114, 111,
      99, 111, 99, 105, 110, 97, 111, 114, 105, 103, 101, 110, 116, 105, 101, 110, 100, 97, 99, 105, 101, 110, 116, 111, 99, 195, 161, 100, 105, 122, 104, 97,
      98, 108, 97, 114, 115, 101, 114, 195, 173, 97, 108, 97, 116, 105, 110, 97, 102, 117, 101, 114, 122, 97, 101, 115, 116, 105, 108, 111, 103, 117, 101, 114,
      114, 97, 101, 110, 116, 114, 97, 114, 195, 169, 120, 105, 116, 111, 108, 195, 179, 112, 101, 122, 97, 103, 101, 110, 100, 97, 118, 195, 173, 100, 101,
      111, 101, 118, 105, 116, 97, 114, 112, 97, 103, 105, 110, 97, 109, 101, 116, 114, 111, 115, 106, 97, 118, 105, 101, 114, 112, 97, 100, 114, 101, 115, 102,
      195, 161, 99, 105, 108, 99, 97, 98, 101, 122, 97, 195, 161, 114, 101, 97, 115, 115, 97, 108, 105, 100, 97, 101, 110, 118, 195, 173, 111, 106, 97, 112,
      195, 179, 110, 97, 98, 117, 115, 111, 115, 98, 105, 101, 110, 101, 115, 116, 101, 120, 116, 111, 115, 108, 108, 101, 118, 97, 114, 112, 117, 101, 100, 97,
      110, 102, 117, 101, 114, 116, 101, 99, 111, 109, 195, 186, 110, 99, 108, 97, 115, 101, 115, 104, 117, 109, 97, 110, 111, 116, 101, 110, 105, 100, 111, 98,
      105, 108, 98, 97, 111, 117, 110, 105, 100, 97, 100, 101, 115, 116, 195, 161, 115, 101, 100, 105, 116, 97, 114, 99, 114, 101, 97, 100, 111, 208, 180, 208,
      187, 209, 143, 209, 135, 209, 130, 208, 190, 208, 186, 208, 176, 208, 186, 208, 184, 208, 187, 208, 184, 209, 141, 209, 130, 208, 190, 208, 178, 209, 129,
      208, 181, 208, 181, 208, 179, 208, 190, 208, 191, 209, 128, 208, 184, 209, 130, 208, 176, 208, 186, 208, 181, 209, 137, 208, 181, 209, 131, 208, 182, 208,
      181, 208, 154, 208, 176, 208, 186, 208, 177, 208, 181, 208, 183, 208, 177, 209, 139, 208, 187, 208, 190, 208, 189, 208, 184, 208, 146, 209, 129, 208, 181,
      208, 191, 208, 190, 208, 180, 208, 173, 209, 130, 208, 190, 209, 130, 208, 190, 208, 188, 209, 135, 208, 181, 208, 188, 208, 189, 208, 181, 209, 130, 208,
      187, 208, 181, 209, 130, 209, 128, 208, 176, 208, 183, 208, 190, 208, 189, 208, 176, 208, 179, 208, 180, 208, 181, 208, 188, 208, 189, 208, 181, 208, 148,
      208, 187, 209, 143, 208, 159, 209, 128, 208, 184, 208, 189, 208, 176, 209, 129, 208, 189, 208, 184, 209, 133, 209, 130, 208, 181, 208, 188, 208, 186, 209,
      130, 208, 190, 208, 179, 208, 190, 208, 180, 208, 178, 208, 190, 209, 130, 209, 130, 208, 176, 208, 188, 208, 161, 208, 168, 208, 144, 208, 188, 208, 176,
      209, 143, 208, 167, 209, 130, 208, 190, 208, 178, 208, 176, 209, 129, 208, 178, 208, 176, 208, 188, 208, 181, 208, 188, 209, 131, 208, 162, 208, 176, 208,
      186, 208, 180, 208, 178, 208, 176, 208, 189, 208, 176, 208, 188, 209, 141, 209, 130, 208, 184, 209, 141, 209, 130, 209, 131, 208, 146, 208, 176, 208, 188,
      209, 130, 208, 181, 209, 133, 208, 191, 209, 128, 208, 190, 209, 130, 209, 131, 209, 130, 208, 189, 208, 176, 208, 180, 208, 180, 208, 189, 209, 143, 208,
      146, 208, 190, 209, 130, 209, 130, 209, 128, 208, 184, 208, 189, 208, 181, 208, 185, 208, 146, 208, 176, 209, 129, 208, 189, 208, 184, 208, 188, 209, 129,
      208, 176, 208, 188, 209, 130, 208, 190, 209, 130, 209, 128, 209, 131, 208, 177, 208, 158, 208, 189, 208, 184, 208, 188, 208, 184, 209, 128, 208, 189, 208,
      181, 208, 181, 208, 158, 208, 158, 208, 158, 208, 187, 208, 184, 209, 134, 209, 141, 209, 130, 208, 176, 208, 158, 208, 189, 208, 176, 208, 189, 208, 181,
      208, 188, 208, 180, 208, 190, 208, 188, 208, 188, 208, 190, 208, 185, 208, 180, 208, 178, 208, 181, 208, 190, 208, 189, 208, 190, 209, 129, 209, 131, 208,
      180, 224, 164, 149, 224, 165, 135, 224, 164, 185, 224, 165, 136, 224, 164, 149, 224, 165, 128, 224, 164, 184, 224, 165, 135, 224, 164, 149, 224, 164, 190,
      224, 164, 149, 224, 165, 139, 224, 164, 148, 224, 164, 176, 224, 164, 170, 224, 164, 176, 224, 164, 168, 224, 165, 135, 224, 164, 143, 224, 164, 149, 224,
      164, 149, 224, 164, 191, 224, 164, 173, 224, 165, 128, 224, 164, 135, 224, 164, 184, 224, 164, 149, 224, 164, 176, 224, 164, 164, 224, 165, 139, 224, 164,
      185, 224, 165, 139, 224, 164, 134, 224, 164, 170, 224, 164, 185, 224, 165, 128, 224, 164, 175, 224, 164, 185, 224, 164, 175, 224, 164, 190, 224, 164, 164,
      224, 164, 149, 224, 164, 165, 224, 164, 190, 106, 97, 103, 114, 97, 110, 224, 164, 134, 224, 164, 156, 224, 164, 156, 224, 165, 139, 224, 164, 133, 224,
      164, 172, 224, 164, 166, 224, 165, 139, 224, 164, 151, 224, 164, 136, 224, 164, 156, 224, 164, 190, 224, 164, 151, 224, 164, 143, 224, 164, 185, 224, 164,
      174, 224, 164, 135, 224, 164, 168, 224, 164, 181, 224, 164, 185, 224, 164, 175, 224, 165, 135, 224, 164, 165, 224, 165, 135, 224, 164, 165, 224, 165, 128,
      224, 164, 152, 224, 164, 176, 224, 164, 156, 224, 164, 172, 224, 164, 166, 224, 165, 128, 224, 164, 149, 224, 164, 136, 224, 164, 156, 224, 165, 128, 224,
      164, 181, 224, 165, 135, 224, 164, 168, 224, 164, 136, 224, 164, 168, 224, 164, 143, 224, 164, 185, 224, 164, 176, 224, 164, 137, 224, 164, 184, 224, 164,
      174, 224, 165, 135, 224, 164, 149, 224, 164, 174, 224, 164, 181, 224, 165, 139, 224, 164, 178, 224, 165, 135, 224, 164, 184, 224, 164, 172, 224, 164, 174,
      224, 164, 136, 224, 164, 166, 224, 165, 135, 224, 164, 147, 224, 164, 176, 224, 164, 134, 224, 164, 174, 224, 164, 172, 224, 164, 184, 224, 164, 173, 224,
      164, 176, 224, 164, 172, 224, 164, 168, 224, 164, 154, 224, 164, 178, 224, 164, 174, 224, 164, 168, 224, 164, 134, 224, 164, 151, 224, 164, 184, 224, 165,
      128, 224, 164, 178, 224, 165, 128, 216, 185, 217, 132, 217, 137, 216, 165, 217, 132, 217, 137, 217, 135, 216, 176, 216, 167, 216, 162, 216, 174, 216, 177,
      216, 185, 216, 175, 216, 175, 216, 167, 217, 132, 217, 137, 217, 135, 216, 176, 217, 135, 216, 181, 217, 136, 216, 177, 216, 186, 217, 138, 216, 177, 217,
      131, 216, 167, 217, 134, 217, 136, 217, 132, 216, 167, 216, 168, 217, 138, 217, 134, 216, 185, 216, 177, 216, 182, 216, 176, 217, 132, 217, 131, 217, 135,
      217, 134, 216, 167, 217, 138, 217, 136, 217, 133, 217, 130, 216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134, 216, 167, 217, 132, 217,
      131, 217, 134, 216, 173, 216, 170, 217, 137, 217, 130, 216, 168, 217, 132, 217, 136, 216, 173, 216, 169, 216, 167, 216, 174, 216, 177, 217, 129, 217, 130,
      216, 183, 216, 185, 216, 168, 216, 175, 216, 177, 217, 131, 217, 134, 216, 165, 216, 176, 216, 167, 217, 131, 217, 133, 216, 167, 216, 167, 216, 173, 216,
      175, 216, 165, 217, 132, 216, 167, 217, 129, 217, 138, 217, 135, 216, 168, 216, 185, 216, 182, 217, 131, 217, 138, 217, 129, 216, 168, 216, 173, 216, 171,
      217, 136, 217, 133, 217, 134, 217, 136, 217, 135, 217, 136, 216, 163, 217, 134, 216, 167, 216, 172, 216, 175, 216, 167, 217, 132, 217, 135, 216, 167, 216,
      179, 217, 132, 217, 133, 216, 185, 217, 134, 216, 175, 217, 132, 217, 138, 216, 179, 216, 185, 216, 168, 216, 177, 216, 181, 217, 132, 217, 137, 217, 133,
      217, 134, 216, 176, 216, 168, 217, 135, 216, 167, 216, 163, 217, 134, 217, 135, 217, 133, 216, 171, 217, 132, 217, 131, 217, 134, 216, 170, 216, 167, 217,
      132, 216, 167, 216, 173, 217, 138, 216, 171, 217, 133, 216, 181, 216, 177, 216, 180, 216, 177, 216, 173, 216, 173, 217, 136, 217, 132, 217, 136, 217, 129,
      217, 138, 216, 167, 216, 176, 216, 167, 217, 132, 217, 131, 217, 132, 217, 133, 216, 177, 216, 169, 216, 167, 217, 134, 216, 170, 216, 167, 217, 132, 217,
      129, 216, 163, 216, 168, 217, 136, 216, 174, 216, 167, 216, 181, 216, 163, 217, 134, 216, 170, 216, 167, 217, 134, 217, 135, 216, 167, 217, 132, 217, 138,
      216, 185, 216, 182, 217, 136, 217, 136, 217, 130, 216, 175, 216, 167, 216, 168, 217, 134, 216, 174, 217, 138, 216, 177, 216, 168, 217, 134, 216, 170, 217,
      132, 217, 131, 217, 133, 216, 180, 216, 167, 216, 161, 217, 136, 217, 135, 217, 138, 216, 167, 216, 168, 217, 136, 217, 130, 216, 181, 216, 181, 217, 136,
      217, 133, 216, 167, 216, 177, 217, 130, 217, 133, 216, 163, 216, 173, 216, 175, 217, 134, 216, 173, 217, 134, 216, 185, 216, 175, 217, 133, 216, 177, 216,
      163, 217, 138, 216, 167, 216, 173, 216, 169, 217, 131, 216, 170, 216, 168, 216, 175, 217, 136, 217, 134, 217, 138, 216, 172, 216, 168, 217, 133, 217, 134,
      217, 135, 216, 170, 216, 173, 216, 170, 216, 172, 217, 135, 216, 169, 216, 179, 217, 134, 216, 169, 217, 138, 216, 170, 217, 133, 217, 131, 216, 177, 216,
      169, 216, 186, 216, 178, 216, 169, 217, 134, 217, 129, 216, 179, 216, 168, 217, 138, 216, 170, 217, 132, 217, 132, 217, 135, 217, 132, 217, 134, 216, 167,
      216, 170, 217, 132, 217, 131, 217, 130, 217, 132, 216, 168, 217, 132, 217, 133, 216, 167, 216, 185, 217, 134, 217, 135, 216, 163, 217, 136, 217, 132, 216,
      180, 217, 138, 216, 161, 217, 134, 217, 136, 216, 177, 216, 163, 217, 133, 216, 167, 217, 129, 217, 138, 217, 131, 216, 168, 217, 131, 217, 132, 216, 176,
      216, 167, 216, 170, 216, 177, 216, 170, 216, 168, 216, 168, 216, 163, 217, 134, 217, 135, 217, 133, 216, 179, 216, 167, 217, 134, 217, 131, 216, 168, 217,
      138, 216, 185, 217, 129, 217, 130, 216, 175, 216, 173, 216, 179, 217, 134, 217, 132, 217, 135, 217, 133, 216, 180, 216, 185, 216, 177, 216, 163, 217, 135,
      217, 132, 216, 180, 217, 135, 216, 177, 217, 130, 216, 183, 216, 177, 216, 183, 217, 132, 216, 168, 112, 114, 111, 102, 105, 108, 101, 115, 101, 114, 118,
      105, 99, 101, 100, 101, 102, 97, 117, 108, 116, 104, 105, 109, 115, 101, 108, 102, 100, 101, 116, 97, 105, 108, 115, 99, 111, 110, 116, 101, 110, 116,
      115, 117, 112, 112, 111, 114, 116, 115, 116, 97, 114, 116, 101, 100, 109, 101, 115, 115, 97, 103, 101, 115, 117, 99, 99, 101, 115, 115, 102, 97, 115, 104,
      105, 111, 110, 60, 116, 105, 116, 108, 101, 62, 99, 111, 117, 110, 116, 114, 121, 97, 99, 99, 111, 117, 110, 116, 99, 114, 101, 97, 116, 101, 100, 115,
      116, 111, 114, 105, 101, 115, 114, 101, 115, 117, 108, 116, 115, 114, 117, 110, 110, 105, 110, 103, 112, 114, 111, 99, 101, 115, 115, 119, 114, 105, 116,
      105, 110, 103, 111, 98, 106, 101, 99, 116, 115, 118, 105, 115, 105, 98, 108, 101, 119, 101, 108, 99, 111, 109, 101, 97, 114, 116, 105, 99, 108, 101, 117,
      110, 107, 110, 111, 119, 110, 110, 101, 116, 119, 111, 114, 107, 99, 111, 109, 112, 97, 110, 121, 100, 121, 110, 97, 109, 105, 99, 98, 114, 111, 119, 115,
      101, 114, 112, 114, 105, 118, 97, 99, 121, 112, 114, 111, 98, 108, 101, 109, 83, 101, 114, 118, 105, 99, 101, 114, 101, 115, 112, 101, 99, 116, 100, 105,
      115, 112, 108, 97, 121, 114, 101, 113, 117, 101, 115, 116, 114, 101, 115, 101, 114, 118, 101, 119, 101, 98, 115, 105, 116, 101, 104, 105, 115, 116, 111,
      114, 121, 102, 114, 105, 101, 110, 100, 115, 111, 112, 116, 105, 111, 110, 115, 119, 111, 114, 107, 105, 110, 103, 118, 101, 114, 115, 105, 111, 110, 109,
      105, 108, 108, 105, 111, 110, 99, 104, 97, 110, 110, 101, 108, 119, 105, 110, 100, 111, 119, 46, 97, 100, 100, 114, 101, 115, 115, 118, 105, 115, 105,
      116, 101, 100, 119, 101, 97, 116, 104, 101, 114, 99, 111, 114, 114, 101, 99, 116, 112, 114, 111, 100, 117, 99, 116, 101, 100, 105, 114, 101, 99, 116, 102,
      111, 114, 119, 97, 114, 100, 121, 111, 117, 32, 99, 97, 110, 114, 101, 109, 111, 118, 101, 100, 115, 117, 98, 106, 101, 99, 116, 99, 111, 110, 116, 114,
      111, 108, 97, 114, 99, 104, 105, 118, 101, 99, 117, 114, 114, 101, 110, 116, 114, 101, 97, 100, 105, 110, 103, 108, 105, 98, 114, 97, 114, 121, 108, 105,
      109, 105, 116, 101, 100, 109, 97, 110, 97, 103, 101, 114, 102, 117, 114, 116, 104, 101, 114, 115, 117, 109, 109, 97, 114, 121, 109, 97, 99, 104, 105, 110,
      101, 109, 105, 110, 117, 116, 101, 115, 112, 114, 105, 118, 97, 116, 101, 99, 111, 110, 116, 101, 120, 116, 112, 114, 111, 103, 114, 97, 109, 115, 111,
      99, 105, 101, 116, 121, 110, 117, 109, 98, 101, 114, 115, 119, 114, 105, 116, 116, 101, 110, 101, 110, 97, 98, 108, 101, 100, 116, 114, 105, 103, 103,
      101, 114, 115, 111, 117, 114, 99, 101, 115, 108, 111, 97, 100, 105, 110, 103, 101, 108, 101, 109, 101, 110, 116, 112, 97, 114, 116, 110, 101, 114, 102,
      105, 110, 97, 108, 108, 121, 112, 101, 114, 102, 101, 99, 116, 109, 101, 97, 110, 105, 110, 103, 115, 121, 115, 116, 101, 109, 115, 107, 101, 101, 112,
      105, 110, 103, 99, 117, 108, 116, 117, 114, 101, 38, 113, 117, 111, 116, 59, 44, 106, 111, 117, 114, 110, 97, 108, 112, 114, 111, 106, 101, 99, 116, 115,
      117, 114, 102, 97, 99, 101, 115, 38, 113, 117, 111, 116, 59, 101, 120, 112, 105, 114, 101, 115, 114, 101, 118, 105, 101, 119, 115, 98, 97, 108, 97, 110,
      99, 101, 69, 110, 103, 108, 105, 115, 104, 67, 111, 110, 116, 101, 110, 116, 116, 104, 114, 111, 117, 103, 104, 80, 108, 101, 97, 115, 101, 32, 111, 112,
      105, 110, 105, 111, 110, 99, 111, 110, 116, 97, 99, 116, 97, 118, 101, 114, 97, 103, 101, 112, 114, 105, 109, 97, 114, 121, 118, 105, 108, 108, 97, 103,
      101, 83, 112, 97, 110, 105, 115, 104, 103, 97, 108, 108, 101, 114, 121, 100, 101, 99, 108, 105, 110, 101, 109, 101, 101, 116, 105, 110, 103, 109, 105,
      115, 115, 105, 111, 110, 112, 111, 112, 117, 108, 97, 114, 113, 117, 97, 108, 105, 116, 121, 109, 101, 97, 115, 117, 114, 101, 103, 101, 110, 101, 114,
      97, 108, 115, 112, 101, 99, 105, 101, 115, 115, 101, 115, 115, 105, 111, 110, 115, 101, 99, 116, 105, 111, 110, 119, 114, 105, 116, 101, 114, 115, 99,
      111, 117, 110, 116, 101, 114, 105, 110, 105, 116, 105, 97, 108, 114, 101, 112, 111, 114, 116, 115, 102, 105, 103, 117, 114, 101, 115, 109, 101, 109, 98,
      101, 114, 115, 104, 111, 108, 100, 105, 110, 103, 100, 105, 115, 112, 117, 116, 101, 101, 97, 114, 108, 105, 101, 114, 101, 120, 112, 114, 101, 115, 115,
      100, 105, 103, 105, 116, 97, 108, 112, 105, 99, 116, 117, 114, 101, 65, 110, 111, 116, 104, 101, 114, 109, 97, 114, 114, 105, 101, 100, 116, 114, 97, 102,
      102, 105, 99, 108, 101, 97, 100, 105, 110, 103, 99, 104, 97, 110, 103, 101, 100, 99, 101, 110, 116, 114, 97, 108, 118, 105, 99, 116, 111, 114, 121, 105,
      109, 97, 103, 101, 115, 47, 114, 101, 97, 115, 111, 110, 115, 115, 116, 117, 100, 105, 101, 115, 102, 101, 97, 116, 117, 114, 101, 108, 105, 115, 116,
      105, 110, 103, 109, 117, 115, 116, 32, 98, 101, 115, 99, 104, 111, 111, 108, 115, 86, 101, 114, 115, 105, 111, 110, 117, 115, 117, 97, 108, 108, 121, 101,
      112, 105, 115, 111, 100, 101, 112, 108, 97, 121, 105, 110, 103, 103, 114, 111, 119, 105, 110, 103, 111, 98, 118, 105, 111, 117, 115, 111, 118, 101, 114,
      108, 97, 121, 112, 114, 101, 115, 101, 110, 116, 97, 99, 116, 105, 111, 110, 115, 60, 47, 117, 108, 62, 13, 10, 119, 114, 97, 112, 112, 101, 114, 97, 108,
      114, 101, 97, 100, 121, 99, 101, 114, 116, 97, 105, 110, 114, 101, 97, 108, 105, 116, 121, 115, 116, 111, 114, 97, 103, 101, 97, 110, 111, 116, 104, 101,
      114, 100, 101, 115, 107, 116, 111, 112, 111, 102, 102, 101, 114, 101, 100, 112, 97, 116, 116, 101, 114, 110, 117, 110, 117, 115, 117, 97, 108, 68, 105,
      103, 105, 116, 97, 108, 99, 97, 112, 105, 116, 97, 108, 87, 101, 98, 115, 105, 116, 101, 102, 97, 105, 108, 117, 114, 101, 99, 111, 110, 110, 101, 99,
      116, 114, 101, 100, 117, 99, 101, 100, 65, 110, 100, 114, 111, 105, 100, 100, 101, 99, 97, 100, 101, 115, 114, 101, 103, 117, 108, 97, 114, 32, 38, 97,
      109, 112, 59, 32, 97, 110, 105, 109, 97, 108, 115, 114, 101, 108, 101, 97, 115, 101, 65, 117, 116, 111, 109, 97, 116, 103, 101, 116, 116, 105, 110, 103,
      109, 101, 116, 104, 111, 100, 115, 110, 111, 116, 104, 105, 110, 103, 80, 111, 112, 117, 108, 97, 114, 99, 97, 112, 116, 105, 111, 110, 108, 101, 116,
      116, 101, 114, 115, 99, 97, 112, 116, 117, 114, 101, 115, 99, 105, 101, 110, 99, 101, 108, 105, 99, 101, 110, 115, 101, 99, 104, 97, 110, 103, 101, 115,
      69, 110, 103, 108, 97, 110, 100, 61, 49, 38, 97, 109, 112, 59, 72, 105, 115, 116, 111, 114, 121, 32, 61, 32, 110, 101, 119, 32, 67, 101, 110, 116, 114,
      97, 108, 117, 112, 100, 97, 116, 101, 100, 83, 112, 101, 99, 105, 97, 108, 78, 101, 116, 119, 111, 114, 107, 114, 101, 113, 117, 105, 114, 101, 99, 111,
      109, 109, 101, 110, 116, 119, 97, 114, 110, 105, 110, 103, 67, 111, 108, 108, 101, 103, 101, 116, 111, 111, 108, 98, 97, 114, 114, 101, 109, 97, 105, 110,
      115, 98, 101, 99, 97, 117, 115, 101, 101, 108, 101, 99, 116, 101, 100, 68, 101, 117, 116, 115, 99, 104, 102, 105, 110, 97, 110, 99, 101, 119, 111, 114,
      107, 101, 114, 115, 113, 117, 105, 99, 107, 108, 121, 98, 101, 116, 119, 101, 101, 110, 101, 120, 97, 99, 116, 108, 121, 115, 101, 116, 116, 105, 110,
      103, 100, 105, 115, 101, 97, 115, 101, 83, 111, 99, 105, 101, 116, 121, 119, 101, 97, 112, 111, 110, 115, 101, 120, 104, 105, 98, 105, 116, 38, 108, 116,
      59, 33, 45, 45, 67, 111, 110, 116, 114, 111, 108, 99, 108, 97, 115, 115, 101, 115, 99, 111, 118, 101, 114, 101, 100, 111, 117, 116, 108, 105, 110, 101,
      97, 116, 116, 97, 99, 107, 115, 100, 101, 118, 105, 99, 101, 115, 40, 119, 105, 110, 100, 111, 119, 112, 117, 114, 112, 111, 115, 101, 116, 105, 116, 108,
      101, 61, 34, 77, 111, 98, 105, 108, 101, 32, 107, 105, 108, 108, 105, 110, 103, 115, 104, 111, 119, 105, 110, 103, 73, 116, 97, 108, 105, 97, 110, 100,
      114, 111, 112, 112, 101, 100, 104, 101, 97, 118, 105, 108, 121, 101, 102, 102, 101, 99, 116, 115, 45, 49, 39, 93, 41, 59, 10, 99, 111, 110, 102, 105, 114,
      109, 67, 117, 114, 114, 101, 110, 116, 97, 100, 118, 97, 110, 99, 101, 115, 104, 97, 114, 105, 110, 103, 111, 112, 101, 110, 105, 110, 103, 100, 114, 97,
      119, 105, 110, 103, 98, 105, 108, 108, 105, 111, 110, 111, 114, 100, 101, 114, 101, 100, 71, 101, 114, 109, 97, 110, 121, 114, 101, 108, 97, 116, 101,
      100, 60, 47, 102, 111, 114, 109, 62, 105, 110, 99, 108, 117, 100, 101, 119, 104, 101, 116, 104, 101, 114, 100, 101, 102, 105, 110, 101, 100, 83, 99, 105,
      101, 110, 99, 101, 99, 97, 116, 97, 108, 111, 103, 65, 114, 116, 105, 99, 108, 101, 98, 117, 116, 116, 111, 110, 115, 108, 97, 114, 103, 101, 115, 116,
      117, 110, 105, 102, 111, 114, 109, 106, 111, 117, 114, 110, 101, 121, 115, 105, 100, 101, 98, 97, 114, 67, 104, 105, 99, 97, 103, 111, 104, 111, 108, 105,
      100, 97, 121, 71, 101, 110, 101, 114, 97, 108, 112, 97, 115, 115, 97, 103, 101, 44, 38, 113, 117, 111, 116, 59, 97, 110, 105, 109, 97, 116, 101, 102, 101,
      101, 108, 105, 110, 103, 97, 114, 114, 105, 118, 101, 100, 112, 97, 115, 115, 105, 110, 103, 110, 97, 116, 117, 114, 97, 108, 114, 111, 117, 103, 104,
      108, 121, 46, 10, 10, 84, 104, 101, 32, 98, 117, 116, 32, 110, 111, 116, 100, 101, 110, 115, 105, 116, 121, 66, 114, 105, 116, 97, 105, 110, 67, 104, 105,
      110, 101, 115, 101, 108, 97, 99, 107, 32, 111, 102, 116, 114, 105, 98, 117, 116, 101, 73, 114, 101, 108, 97, 110, 100, 34, 32, 100, 97, 116, 97, 45, 102,
      97, 99, 116, 111, 114, 115, 114, 101, 99, 101, 105, 118, 101, 116, 104, 97, 116, 32, 105, 115, 76, 105, 98, 114, 97, 114, 121, 104, 117, 115, 98, 97, 110,
      100, 105, 110, 32, 102, 97, 99, 116, 97, 102, 102, 97, 105, 114, 115, 67, 104, 97, 114, 108, 101, 115, 114, 97, 100, 105, 99, 97, 108, 98, 114, 111, 117,
      103, 104, 116, 102, 105, 110, 100, 105, 110, 103, 108, 97, 110, 100, 105, 110, 103, 58, 108, 97, 110, 103, 61, 34, 114, 101, 116, 117, 114, 110, 32, 108,
      101, 97, 100, 101, 114, 115, 112, 108, 97, 110, 110, 101, 100, 112, 114, 101, 109, 105, 117, 109, 112, 97, 99, 107, 97, 103, 101, 65, 109, 101, 114, 105,
      99, 97, 69, 100, 105, 116, 105, 111, 110, 93, 38, 113, 117, 111, 116, 59, 77, 101, 115, 115, 97, 103, 101, 110, 101, 101, 100, 32, 116, 111, 118, 97, 108,
      117, 101, 61, 34, 99, 111, 109, 112, 108, 101, 120, 108, 111, 111, 107, 105, 110, 103, 115, 116, 97, 116, 105, 111, 110, 98, 101, 108, 105, 101, 118, 101,
      115, 109, 97, 108, 108, 101, 114, 45, 109, 111, 98, 105, 108, 101, 114, 101, 99, 111, 114, 100, 115, 119, 97, 110, 116, 32, 116, 111, 107, 105, 110, 100,
      32, 111, 102, 70, 105, 114, 101, 102, 111, 120, 121, 111, 117, 32, 97, 114, 101, 115, 105, 109, 105, 108, 97, 114, 115, 116, 117, 100, 105, 101, 100, 109,
      97, 120, 105, 109, 117, 109, 104, 101, 97, 100, 105, 110, 103, 114, 97, 112, 105, 100, 108, 121, 99, 108, 105, 109, 97, 116, 101, 107, 105, 110, 103, 100,
      111, 109, 101, 109, 101, 114, 103, 101, 100, 97, 109, 111, 117, 110, 116, 115, 102, 111, 117, 110, 100, 101, 100, 112, 105, 111, 110, 101, 101, 114, 102,
      111, 114, 109, 117, 108, 97, 100, 121, 110, 97, 115, 116, 121, 104, 111, 119, 32, 116, 111, 32, 83, 117, 112, 112, 111, 114, 116, 114, 101, 118, 101, 110,
      117, 101, 101, 99, 111, 110, 111, 109, 121, 82, 101, 115, 117, 108, 116, 115, 98, 114, 111, 116, 104, 101, 114, 115, 111, 108, 100, 105, 101, 114, 108,
      97, 114, 103, 101, 108, 121, 99, 97, 108, 108, 105, 110, 103, 46, 38, 113, 117, 111, 116, 59, 65, 99, 99, 111, 117, 110, 116, 69, 100, 119, 97, 114, 100,
      32, 115, 101, 103, 109, 101, 110, 116, 82, 111, 98, 101, 114, 116, 32, 101, 102, 102, 111, 114, 116, 115, 80, 97, 99, 105, 102, 105, 99, 108, 101, 97,
      114, 110, 101, 100, 117, 112, 32, 119, 105, 116, 104, 104, 101, 105, 103, 104, 116, 58, 119, 101, 32, 104, 97, 118, 101, 65, 110, 103, 101, 108, 101, 115,
      110, 97, 116, 105, 111, 110, 115, 95, 115, 101, 97, 114, 99, 104, 97, 112, 112, 108, 105, 101, 100, 97, 99, 113, 117, 105, 114, 101, 109, 97, 115, 115,
      105, 118, 101, 103, 114, 97, 110, 116, 101, 100, 58, 32, 102, 97, 108, 115, 101, 116, 114, 101, 97, 116, 101, 100, 98, 105, 103, 103, 101, 115, 116, 98,
      101, 110, 101, 102, 105, 116, 100, 114, 105, 118, 105, 110, 103, 83, 116, 117, 100, 105, 101, 115, 109, 105, 110, 105, 109, 117, 109, 112, 101, 114, 104,
      97, 112, 115, 109, 111, 114, 110, 105, 110, 103, 115, 101, 108, 108, 105, 110, 103, 105, 115, 32, 117, 115, 101, 100, 114, 101, 118, 101, 114, 115, 101,
      118, 97, 114, 105, 97, 110, 116, 32, 114, 111, 108, 101, 61, 34, 109, 105, 115, 115, 105, 110, 103, 97, 99, 104, 105, 101, 118, 101, 112, 114, 111, 109,
      111, 116, 101, 115, 116, 117, 100, 101, 110, 116, 115, 111, 109, 101, 111, 110, 101, 101, 120, 116, 114, 101, 109, 101, 114, 101, 115, 116, 111, 114, 101,
      98, 111, 116, 116, 111, 109, 58, 101, 118, 111, 108, 118, 101, 100, 97, 108, 108, 32, 116, 104, 101, 115, 105, 116, 101, 109, 97, 112, 101, 110, 103, 108,
      105, 115, 104, 119, 97, 121, 32, 116, 111, 32, 32, 65, 117, 103, 117, 115, 116, 115, 121, 109, 98, 111, 108, 115, 67, 111, 109, 112, 97, 110, 121, 109,
      97, 116, 116, 101, 114, 115, 109, 117, 115, 105, 99, 97, 108, 97, 103, 97, 105, 110, 115, 116, 115, 101, 114, 118, 105, 110, 103, 125, 41, 40, 41, 59, 13,
      10, 112, 97, 121, 109, 101, 110, 116, 116, 114, 111, 117, 98, 108, 101, 99, 111, 110, 99, 101, 112, 116, 99, 111, 109, 112, 97, 114, 101, 112, 97, 114,
      101, 110, 116, 115, 112, 108, 97, 121, 101, 114, 115, 114, 101, 103, 105, 111, 110, 115, 109, 111, 110, 105, 116, 111, 114, 32, 39, 39, 84, 104, 101, 32,
      119, 105, 110, 110, 105, 110, 103, 101, 120, 112, 108, 111, 114, 101, 97, 100, 97, 112, 116, 101, 100, 71, 97, 108, 108, 101, 114, 121, 112, 114, 111,
      100, 117, 99, 101, 97, 98, 105, 108, 105, 116, 121, 101, 110, 104, 97, 110, 99, 101, 99, 97, 114, 101, 101, 114, 115, 41, 46, 32, 84, 104, 101, 32, 99,
      111, 108, 108, 101, 99, 116, 83, 101, 97, 114, 99, 104, 32, 97, 110, 99, 105, 101, 110, 116, 101, 120, 105, 115, 116, 101, 100, 102, 111, 111, 116, 101,
      114, 32, 104, 97, 110, 100, 108, 101, 114, 112, 114, 105, 110, 116, 101, 100, 99, 111, 110, 115, 111, 108, 101, 69, 97, 115, 116, 101, 114, 110, 101, 120,
      112, 111, 114, 116, 115, 119, 105, 110, 100, 111, 119, 115, 67, 104, 97, 110, 110, 101, 108, 105, 108, 108, 101, 103, 97, 108, 110, 101, 117, 116, 114,
      97, 108, 115, 117, 103, 103, 101, 115, 116, 95, 104, 101, 97, 100, 101, 114, 115, 105, 103, 110, 105, 110, 103, 46, 104, 116, 109, 108, 34, 62, 115, 101,
      116, 116, 108, 101, 100, 119, 101, 115, 116, 101, 114, 110, 99, 97, 117, 115, 105, 110, 103, 45, 119, 101, 98, 107, 105, 116, 99, 108, 97, 105, 109, 101,
      100, 74, 117, 115, 116, 105, 99, 101, 99, 104, 97, 112, 116, 101, 114, 118, 105, 99, 116, 105, 109, 115, 84, 104, 111, 109, 97, 115, 32, 109, 111, 122,
      105, 108, 108, 97, 112, 114, 111, 109, 105, 115, 101, 112, 97, 114, 116, 105, 101, 115, 101, 100, 105, 116, 105, 111, 110, 111, 117, 116, 115, 105, 100,
      101, 58, 102, 97, 108, 115, 101, 44, 104, 117, 110, 100, 114, 101, 100, 79, 108, 121, 109, 112, 105, 99, 95, 98, 117, 116, 116, 111, 110, 97, 117, 116,
      104, 111, 114, 115, 114, 101, 97, 99, 104, 101, 100, 99, 104, 114, 111, 110, 105, 99, 100, 101, 109, 97, 110, 100, 115, 115, 101, 99, 111, 110, 100, 115,
      112, 114, 111, 116, 101, 99, 116, 97, 100, 111, 112, 116, 101, 100, 112, 114, 101, 112, 97, 114, 101, 110, 101, 105, 116, 104, 101, 114, 103, 114, 101,
      97, 116, 108, 121, 103, 114, 101, 97, 116, 101, 114, 111, 118, 101, 114, 97, 108, 108, 105, 109, 112, 114, 111, 118, 101, 99, 111, 109, 109, 97, 110, 100,
      115, 112, 101, 99, 105, 97, 108, 115, 101, 97, 114, 99, 104, 46, 119, 111, 114, 115, 104, 105, 112, 102, 117, 110, 100, 105, 110, 103, 116, 104, 111, 117,
      103, 104, 116, 104, 105, 103, 104, 101, 115, 116, 105, 110, 115, 116, 101, 97, 100, 117, 116, 105, 108, 105, 116, 121, 113, 117, 97, 114, 116, 101, 114,
      67, 117, 108, 116, 117, 114, 101, 116, 101, 115, 116, 105, 110, 103, 99, 108, 101, 97, 114, 108, 121, 101, 120, 112, 111, 115, 101, 100, 66, 114, 111,
      119, 115, 101, 114, 108, 105, 98, 101, 114, 97, 108, 125, 32, 99, 97, 116, 99, 104, 80, 114, 111, 106, 101, 99, 116, 101, 120, 97, 109, 112, 108, 101,
      104, 105, 100, 101, 40, 41, 59, 70, 108, 111, 114, 105, 100, 97, 97, 110, 115, 119, 101, 114, 115, 97, 108, 108, 111, 119, 101, 100, 69, 109, 112, 101,
      114, 111, 114, 100, 101, 102, 101, 110, 115, 101, 115, 101, 114, 105, 111, 117, 115, 102, 114, 101, 101, 100, 111, 109, 83, 101, 118, 101, 114, 97, 108,
      45, 98, 117, 116, 116, 111, 110, 70, 117, 114, 116, 104, 101, 114, 111, 117, 116, 32, 111, 102, 32, 33, 61, 32, 110, 117, 108, 108, 116, 114, 97, 105,
      110, 101, 100, 68, 101, 110, 109, 97, 114, 107, 118, 111, 105, 100, 40, 48, 41, 47, 97, 108, 108, 46, 106, 115, 112, 114, 101, 118, 101, 110, 116, 82,
      101, 113, 117, 101, 115, 116, 83, 116, 101, 112, 104, 101, 110, 10, 10, 87, 104, 101, 110, 32, 111, 98, 115, 101, 114, 118, 101, 60, 47, 104, 50, 62, 13,
      10, 77, 111, 100, 101, 114, 110, 32, 112, 114, 111, 118, 105, 100, 101, 34, 32, 97, 108, 116, 61, 34, 98, 111, 114, 100, 101, 114, 115, 46, 10, 10, 70,
      111, 114, 32, 10, 10, 77, 97, 110, 121, 32, 97, 114, 116, 105, 115, 116, 115, 112, 111, 119, 101, 114, 101, 100, 112, 101, 114, 102, 111, 114, 109, 102,
      105, 99, 116, 105, 111, 110, 116, 121, 112, 101, 32, 111, 102, 109, 101, 100, 105, 99, 97, 108, 116, 105, 99, 107, 101, 116, 115, 111, 112, 112, 111, 115,
      101, 100, 67, 111, 117, 110, 99, 105, 108, 119, 105, 116, 110, 101, 115, 115, 106, 117, 115, 116, 105, 99, 101, 71, 101, 111, 114, 103, 101, 32, 66, 101,
      108, 103, 105, 117, 109, 46, 46, 46, 60, 47, 97, 62, 116, 119, 105, 116, 116, 101, 114, 110, 111, 116, 97, 98, 108, 121, 119, 97, 105, 116, 105, 110, 103,
      119, 97, 114, 102, 97, 114, 101, 32, 79, 116, 104, 101, 114, 32, 114, 97, 110, 107, 105, 110, 103, 112, 104, 114, 97, 115, 101, 115, 109, 101, 110, 116,
      105, 111, 110, 115, 117, 114, 118, 105, 118, 101, 115, 99, 104, 111, 108, 97, 114, 60, 47, 112, 62, 13, 10, 32, 67, 111, 117, 110, 116, 114, 121, 105,
      103, 110, 111, 114, 101, 100, 108, 111, 115, 115, 32, 111, 102, 106, 117, 115, 116, 32, 97, 115, 71, 101, 111, 114, 103, 105, 97, 115, 116, 114, 97, 110,
      103, 101, 60, 104, 101, 97, 100, 62, 60, 115, 116, 111, 112, 112, 101, 100, 49, 39, 93, 41, 59, 13, 10, 105, 115, 108, 97, 110, 100, 115, 110, 111, 116,
      97, 98, 108, 101, 98, 111, 114, 100, 101, 114, 58, 108, 105, 115, 116, 32, 111, 102, 99, 97, 114, 114, 105, 101, 100, 49, 48, 48, 44, 48, 48, 48, 60, 47,
      104, 51, 62, 10, 32, 115, 101, 118, 101, 114, 97, 108, 98, 101, 99, 111, 109, 101, 115, 115, 101, 108, 101, 99, 116, 32, 119, 101, 100, 100, 105, 110,
      103, 48, 48, 46, 104, 116, 109, 108, 109, 111, 110, 97, 114, 99, 104, 111, 102, 102, 32, 116, 104, 101, 116, 101, 97, 99, 104, 101, 114, 104, 105, 103,
      104, 108, 121, 32, 98, 105, 111, 108, 111, 103, 121, 108, 105, 102, 101, 32, 111, 102, 111, 114, 32, 101, 118, 101, 110, 114, 105, 115, 101, 32, 111, 102,
      38, 114, 97, 113, 117, 111, 59, 112, 108, 117, 115, 111, 110, 101, 104, 117, 110, 116, 105, 110, 103, 40, 116, 104, 111, 117, 103, 104, 68, 111, 117, 103,
      108, 97, 115, 106, 111, 105, 110, 105, 110, 103, 99, 105, 114, 99, 108, 101, 115, 70, 111, 114, 32, 116, 104, 101, 65, 110, 99, 105, 101, 110, 116, 86,
      105, 101, 116, 110, 97, 109, 118, 101, 104, 105, 99, 108, 101, 115, 117, 99, 104, 32, 97, 115, 99, 114, 121, 115, 116, 97, 108, 118, 97, 108, 117, 101,
      32, 61, 87, 105, 110, 100, 111, 119, 115, 101, 110, 106, 111, 121, 101, 100, 97, 32, 115, 109, 97, 108, 108, 97, 115, 115, 117, 109, 101, 100, 60, 97, 32,
      105, 100, 61, 34, 102, 111, 114, 101, 105, 103, 110, 32, 65, 108, 108, 32, 114, 105, 104, 111, 119, 32, 116, 104, 101, 68, 105, 115, 112, 108, 97, 121,
      114, 101, 116, 105, 114, 101, 100, 104, 111, 119, 101, 118, 101, 114, 104, 105, 100, 100, 101, 110, 59, 98, 97, 116, 116, 108, 101, 115, 115, 101, 101,
      107, 105, 110, 103, 99, 97, 98, 105, 110, 101, 116, 119, 97, 115, 32, 110, 111, 116, 108, 111, 111, 107, 32, 97, 116, 99, 111, 110, 100, 117, 99, 116,
      103, 101, 116, 32, 116, 104, 101, 74, 97, 110, 117, 97, 114, 121, 104, 97, 112, 112, 101, 110, 115, 116, 117, 114, 110, 105, 110, 103, 97, 58, 104, 111,
      118, 101, 114, 79, 110, 108, 105, 110, 101, 32, 70, 114, 101, 110, 99, 104, 32, 108, 97, 99, 107, 105, 110, 103, 116, 121, 112, 105, 99, 97, 108, 101,
      120, 116, 114, 97, 99, 116, 101, 110, 101, 109, 105, 101, 115, 101, 118, 101, 110, 32, 105, 102, 103, 101, 110, 101, 114, 97, 116, 100, 101, 99, 105, 100,
      101, 100, 97, 114, 101, 32, 110, 111, 116, 47, 115, 101, 97, 114, 99, 104, 98, 101, 108, 105, 101, 102, 115, 45, 105, 109, 97, 103, 101, 58, 108, 111, 99,
      97, 116, 101, 100, 115, 116, 97, 116, 105, 99, 46, 108, 111, 103, 105, 110, 34, 62, 99, 111, 110, 118, 101, 114, 116, 118, 105, 111, 108, 101, 110, 116,
      101, 110, 116, 101, 114, 101, 100, 102, 105, 114, 115, 116, 34, 62, 99, 105, 114, 99, 117, 105, 116, 70, 105, 110, 108, 97, 110, 100, 99, 104, 101, 109,
      105, 115, 116, 115, 104, 101, 32, 119, 97, 115, 49, 48, 112, 120, 59, 34, 62, 97, 115, 32, 115, 117, 99, 104, 100, 105, 118, 105, 100, 101, 100, 60, 47,
      115, 112, 97, 110, 62, 119, 105, 108, 108, 32, 98, 101, 108, 105, 110, 101, 32, 111, 102, 97, 32, 103, 114, 101, 97, 116, 109, 121, 115, 116, 101, 114,
      121, 47, 105, 110, 100, 101, 120, 46, 102, 97, 108, 108, 105, 110, 103, 100, 117, 101, 32, 116, 111, 32, 114, 97, 105, 108, 119, 97, 121, 99, 111, 108,
      108, 101, 103, 101, 109, 111, 110, 115, 116, 101, 114, 100, 101, 115, 99, 101, 110, 116, 105, 116, 32, 119, 105, 116, 104, 110, 117, 99, 108, 101, 97,
      114, 74, 101, 119, 105, 115, 104, 32, 112, 114, 111, 116, 101, 115, 116, 66, 114, 105, 116, 105, 115, 104, 102, 108, 111, 119, 101, 114, 115, 112, 114,
      101, 100, 105, 99, 116, 114, 101, 102, 111, 114, 109, 115, 98, 117, 116, 116, 111, 110, 32, 119, 104, 111, 32, 119, 97, 115, 108, 101, 99, 116, 117, 114,
      101, 105, 110, 115, 116, 97, 110, 116, 115, 117, 105, 99, 105, 100, 101, 103, 101, 110, 101, 114, 105, 99, 112, 101, 114, 105, 111, 100, 115, 109, 97,
      114, 107, 101, 116, 115, 83, 111, 99, 105, 97, 108, 32, 102, 105, 115, 104, 105, 110, 103, 99, 111, 109, 98, 105, 110, 101, 103, 114, 97, 112, 104, 105,
      99, 119, 105, 110, 110, 101, 114, 115, 60, 98, 114, 32, 47, 62, 60, 98, 121, 32, 116, 104, 101, 32, 78, 97, 116, 117, 114, 97, 108, 80, 114, 105, 118, 97,
      99, 121, 99, 111, 111, 107, 105, 101, 115, 111, 117, 116, 99, 111, 109, 101, 114, 101, 115, 111, 108, 118, 101, 83, 119, 101, 100, 105, 115, 104, 98, 114,
      105, 101, 102, 108, 121, 80, 101, 114, 115, 105, 97, 110, 115, 111, 32, 109, 117, 99, 104, 67, 101, 110, 116, 117, 114, 121, 100, 101, 112, 105, 99, 116,
      115, 99, 111, 108, 117, 109, 110, 115, 104, 111, 117, 115, 105, 110, 103, 115, 99, 114, 105, 112, 116, 115, 110, 101, 120, 116, 32, 116, 111, 98, 101, 97,
      114, 105, 110, 103, 109, 97, 112, 112, 105, 110, 103, 114, 101, 118, 105, 115, 101, 100, 106, 81, 117, 101, 114, 121, 40, 45, 119, 105, 100, 116, 104, 58,
      116, 105, 116, 108, 101, 34, 62, 116, 111, 111, 108, 116, 105, 112, 83, 101, 99, 116, 105, 111, 110, 100, 101, 115, 105, 103, 110, 115, 84, 117, 114, 107,
      105, 115, 104, 121, 111, 117, 110, 103, 101, 114, 46, 109, 97, 116, 99, 104, 40, 125, 41, 40, 41, 59, 10, 10, 98, 117, 114, 110, 105, 110, 103, 111, 112,
      101, 114, 97, 116, 101, 100, 101, 103, 114, 101, 101, 115, 115, 111, 117, 114, 99, 101, 61, 82, 105, 99, 104, 97, 114, 100, 99, 108, 111, 115, 101, 108,
      121, 112, 108, 97, 115, 116, 105, 99, 101, 110, 116, 114, 105, 101, 115, 60, 47, 116, 114, 62, 13, 10, 99, 111, 108, 111, 114, 58, 35, 117, 108, 32, 105,
      100, 61, 34, 112, 111, 115, 115, 101, 115, 115, 114, 111, 108, 108, 105, 110, 103, 112, 104, 121, 115, 105, 99, 115, 102, 97, 105, 108, 105, 110, 103,
      101, 120, 101, 99, 117, 116, 101, 99, 111, 110, 116, 101, 115, 116, 108, 105, 110, 107, 32, 116, 111, 68, 101, 102, 97, 117, 108, 116, 60, 98, 114, 32,
      47, 62, 10, 58, 32, 116, 114, 117, 101, 44, 99, 104, 97, 114, 116, 101, 114, 116, 111, 117, 114, 105, 115, 109, 99, 108, 97, 115, 115, 105, 99, 112, 114,
      111, 99, 101, 101, 100, 101, 120, 112, 108, 97, 105, 110, 60, 47, 104, 49, 62, 13, 10, 111, 110, 108, 105, 110, 101, 46, 63, 120, 109, 108, 32, 118, 101,
      104, 101, 108, 112, 105, 110, 103, 100, 105, 97, 109, 111, 110, 100, 117, 115, 101, 32, 116, 104, 101, 97, 105, 114, 108, 105, 110, 101, 101, 110, 100,
      32, 45, 45, 62, 41, 46, 97, 116, 116, 114, 40, 114, 101, 97, 100, 101, 114, 115, 104, 111, 115, 116, 105, 110, 103, 35, 102, 102, 102, 102, 102, 102, 114,
      101, 97, 108, 105, 122, 101, 86, 105, 110, 99, 101, 110, 116, 115, 105, 103, 110, 97, 108, 115, 32, 115, 114, 99, 61, 34, 47, 80, 114, 111, 100, 117, 99,
      116, 100, 101, 115, 112, 105, 116, 101, 100, 105, 118, 101, 114, 115, 101, 116, 101, 108, 108, 105, 110, 103, 80, 117, 98, 108, 105, 99, 32, 104, 101,
      108, 100, 32, 105, 110, 74, 111, 115, 101, 112, 104, 32, 116, 104, 101, 97, 116, 114, 101, 97, 102, 102, 101, 99, 116, 115, 60, 115, 116, 121, 108, 101,
      62, 97, 32, 108, 97, 114, 103, 101, 100, 111, 101, 115, 110, 39, 116, 108, 97, 116, 101, 114, 44, 32, 69, 108, 101, 109, 101, 110, 116, 102, 97, 118, 105,
      99, 111, 110, 99, 114, 101, 97, 116, 111, 114, 72, 117, 110, 103, 97, 114, 121, 65, 105, 114, 112, 111, 114, 116, 115, 101, 101, 32, 116, 104, 101, 115,
      111, 32, 116, 104, 97, 116, 77, 105, 99, 104, 97, 101, 108, 83, 121, 115, 116, 101, 109, 115, 80, 114, 111, 103, 114, 97, 109, 115, 44, 32, 97, 110, 100,
      32, 32, 119, 105, 100, 116, 104, 61, 101, 38, 113, 117, 111, 116, 59, 116, 114, 97, 100, 105, 110, 103, 108, 101, 102, 116, 34, 62, 10, 112, 101, 114,
      115, 111, 110, 115, 71, 111, 108, 100, 101, 110, 32, 65, 102, 102, 97, 105, 114, 115, 103, 114, 97, 109, 109, 97, 114, 102, 111, 114, 109, 105, 110, 103,
      100, 101, 115, 116, 114, 111, 121, 105, 100, 101, 97, 32, 111, 102, 99, 97, 115, 101, 32, 111, 102, 111, 108, 100, 101, 115, 116, 32, 116, 104, 105, 115,
      32, 105, 115, 46, 115, 114, 99, 32, 61, 32, 99, 97, 114, 116, 111, 111, 110, 114, 101, 103, 105, 115, 116, 114, 67, 111, 109, 109, 111, 110, 115, 77, 117,
      115, 108, 105, 109, 115, 87, 104, 97, 116, 32, 105, 115, 105, 110, 32, 109, 97, 110, 121, 109, 97, 114, 107, 105, 110, 103, 114, 101, 118, 101, 97, 108,
      115, 73, 110, 100, 101, 101, 100, 44, 101, 113, 117, 97, 108, 108, 121, 47, 115, 104, 111, 119, 95, 97, 111, 117, 116, 100, 111, 111, 114, 101, 115, 99,
      97, 112, 101, 40, 65, 117, 115, 116, 114, 105, 97, 103, 101, 110, 101, 116, 105, 99, 115, 121, 115, 116, 101, 109, 44, 73, 110, 32, 116, 104, 101, 32,
      115, 105, 116, 116, 105, 110, 103, 72, 101, 32, 97, 108, 115, 111, 73, 115, 108, 97, 110, 100, 115, 65, 99, 97, 100, 101, 109, 121, 10, 9, 9, 60, 33, 45,
      45, 68, 97, 110, 105, 101, 108, 32, 98, 105, 110, 100, 105, 110, 103, 98, 108, 111, 99, 107, 34, 62, 105, 109, 112, 111, 115, 101, 100, 117, 116, 105,
      108, 105, 122, 101, 65, 98, 114, 97, 104, 97, 109, 40, 101, 120, 99, 101, 112, 116, 123, 119, 105, 100, 116, 104, 58, 112, 117, 116, 116, 105, 110, 103,
      41, 46, 104, 116, 109, 108, 40, 124, 124, 32, 91, 93, 59, 10, 68, 65, 84, 65, 91, 32, 42, 107, 105, 116, 99, 104, 101, 110, 109, 111, 117, 110, 116, 101,
      100, 97, 99, 116, 117, 97, 108, 32, 100, 105, 97, 108, 101, 99, 116, 109, 97, 105, 110, 108, 121, 32, 95, 98, 108, 97, 110, 107, 39, 105, 110, 115, 116,
      97, 108, 108, 101, 120, 112, 101, 114, 116, 115, 105, 102, 40, 116, 121, 112, 101, 73, 116, 32, 97, 108, 115, 111, 38, 99, 111, 112, 121, 59, 32, 34, 62,
      84, 101, 114, 109, 115, 98, 111, 114, 110, 32, 105, 110, 79, 112, 116, 105, 111, 110, 115, 101, 97, 115, 116, 101, 114, 110, 116, 97, 108, 107, 105, 110,
      103, 99, 111, 110, 99, 101, 114, 110, 103, 97, 105, 110, 101, 100, 32, 111, 110, 103, 111, 105, 110, 103, 106, 117, 115, 116, 105, 102, 121, 99, 114, 105,
      116, 105, 99, 115, 102, 97, 99, 116, 111, 114, 121, 105, 116, 115, 32, 111, 119, 110, 97, 115, 115, 97, 117, 108, 116, 105, 110, 118, 105, 116, 101, 100,
      108, 97, 115, 116, 105, 110, 103, 104, 105, 115, 32, 111, 119, 110, 104, 114, 101, 102, 61, 34, 47, 34, 32, 114, 101, 108, 61, 34, 100, 101, 118, 101,
      108, 111, 112, 99, 111, 110, 99, 101, 114, 116, 100, 105, 97, 103, 114, 97, 109, 100, 111, 108, 108, 97, 114, 115, 99, 108, 117, 115, 116, 101, 114, 112,
      104, 112, 63, 105, 100, 61, 97, 108, 99, 111, 104, 111, 108, 41, 59, 125, 41, 40, 41, 59, 117, 115, 105, 110, 103, 32, 97, 62, 60, 115, 112, 97, 110, 62,
      118, 101, 115, 115, 101, 108, 115, 114, 101, 118, 105, 118, 97, 108, 65, 100, 100, 114, 101, 115, 115, 97, 109, 97, 116, 101, 117, 114, 97, 110, 100, 114,
      111, 105, 100, 97, 108, 108, 101, 103, 101, 100, 105, 108, 108, 110, 101, 115, 115, 119, 97, 108, 107, 105, 110, 103, 99, 101, 110, 116, 101, 114, 115,
      113, 117, 97, 108, 105, 102, 121, 109, 97, 116, 99, 104, 101, 115, 117, 110, 105, 102, 105, 101, 100, 101, 120, 116, 105, 110, 99, 116, 68, 101, 102, 101,
      110, 115, 101, 100, 105, 101, 100, 32, 105, 110, 10, 9, 60, 33, 45, 45, 32, 99, 117, 115, 116, 111, 109, 115, 108, 105, 110, 107, 105, 110, 103, 76, 105,
      116, 116, 108, 101, 32, 66, 111, 111, 107, 32, 111, 102, 101, 118, 101, 110, 105, 110, 103, 109, 105, 110, 46, 106, 115, 63, 97, 114, 101, 32, 116, 104,
      101, 107, 111, 110, 116, 97, 107, 116, 116, 111, 100, 97, 121, 39, 115, 46, 104, 116, 109, 108, 34, 32, 116, 97, 114, 103, 101, 116, 61, 119, 101, 97,
      114, 105, 110, 103, 65, 108, 108, 32, 82, 105, 103, 59, 10, 125, 41, 40, 41, 59, 114, 97, 105, 115, 105, 110, 103, 32, 65, 108, 115, 111, 44, 32, 99, 114,
      117, 99, 105, 97, 108, 97, 98, 111, 117, 116, 34, 62, 100, 101, 99, 108, 97, 114, 101, 45, 45, 62, 10, 60, 115, 99, 102, 105, 114, 101, 102, 111, 120, 97,
      115, 32, 109, 117, 99, 104, 97, 112, 112, 108, 105, 101, 115, 105, 110, 100, 101, 120, 44, 32, 115, 44, 32, 98, 117, 116, 32, 116, 121, 112, 101, 32, 61,
      32, 10, 13, 10, 60, 33, 45, 45, 116, 111, 119, 97, 114, 100, 115, 82, 101, 99, 111, 114, 100, 115, 80, 114, 105, 118, 97, 116, 101, 70, 111, 114, 101,
      105, 103, 110, 80, 114, 101, 109, 105, 101, 114, 99, 104, 111, 105, 99, 101, 115, 86, 105, 114, 116, 117, 97, 108, 114, 101, 116, 117, 114, 110, 115, 67,
      111, 109, 109, 101, 110, 116, 80, 111, 119, 101, 114, 101, 100, 105, 110, 108, 105, 110, 101, 59, 112, 111, 118, 101, 114, 116, 121, 99, 104, 97, 109, 98,
      101, 114, 76, 105, 118, 105, 110, 103, 32, 118, 111, 108, 117, 109, 101, 115, 65, 110, 116, 104, 111, 110, 121, 108, 111, 103, 105, 110, 34, 32, 82, 101,
      108, 97, 116, 101, 100, 69, 99, 111, 110, 111, 109, 121, 114, 101, 97, 99, 104, 101, 115, 99, 117, 116, 116, 105, 110, 103, 103, 114, 97, 118, 105, 116,
      121, 108, 105, 102, 101, 32, 105, 110, 67, 104, 97, 112, 116, 101, 114, 45, 115, 104, 97, 100, 111, 119, 78, 111, 116, 97, 98, 108, 101, 60, 47, 116, 100,
      62, 13, 10, 32, 114, 101, 116, 117, 114, 110, 115, 116, 97, 100, 105, 117, 109, 119, 105, 100, 103, 101, 116, 115, 118, 97, 114, 121, 105, 110, 103, 116,
      114, 97, 118, 101, 108, 115, 104, 101, 108, 100, 32, 98, 121, 119, 104, 111, 32, 97, 114, 101, 119, 111, 114, 107, 32, 105, 110, 102, 97, 99, 117, 108,
      116, 121, 97, 110, 103, 117, 108, 97, 114, 119, 104, 111, 32, 104, 97, 100, 97, 105, 114, 112, 111, 114, 116, 116, 111, 119, 110, 32, 111, 102, 10, 10,
      83, 111, 109, 101, 32, 39, 99, 108, 105, 99, 107, 39, 99, 104, 97, 114, 103, 101, 115, 107, 101, 121, 119, 111, 114, 100, 105, 116, 32, 119, 105, 108,
      108, 99, 105, 116, 121, 32, 111, 102, 40, 116, 104, 105, 115, 41, 59, 65, 110, 100, 114, 101, 119, 32, 117, 110, 105, 113, 117, 101, 32, 99, 104, 101, 99,
      107, 101, 100, 111, 114, 32, 109, 111, 114, 101, 51, 48, 48, 112, 120, 59, 32, 114, 101, 116, 117, 114, 110, 59, 114, 115, 105, 111, 110, 61, 34, 112,
      108, 117, 103, 105, 110, 115, 119, 105, 116, 104, 105, 110, 32, 104, 101, 114, 115, 101, 108, 102, 83, 116, 97, 116, 105, 111, 110, 70, 101, 100, 101,
      114, 97, 108, 118, 101, 110, 116, 117, 114, 101, 112, 117, 98, 108, 105, 115, 104, 115, 101, 110, 116, 32, 116, 111, 116, 101, 110, 115, 105, 111, 110,
      97, 99, 116, 114, 101, 115, 115, 99, 111, 109, 101, 32, 116, 111, 102, 105, 110, 103, 101, 114, 115, 68, 117, 107, 101, 32, 111, 102, 112, 101, 111, 112,
      108, 101, 44, 101, 120, 112, 108, 111, 105, 116, 119, 104, 97, 116, 32, 105, 115, 104, 97, 114, 109, 111, 110, 121, 97, 32, 109, 97, 106, 111, 114, 34,
      58, 34, 104, 116, 116, 112, 105, 110, 32, 104, 105, 115, 32, 109, 101, 110, 117, 34, 62, 10, 109, 111, 110, 116, 104, 108, 121, 111, 102, 102, 105, 99,
      101, 114, 99, 111, 117, 110, 99, 105, 108, 103, 97, 105, 110, 105, 110, 103, 101, 118, 101, 110, 32, 105, 110, 83, 117, 109, 109, 97, 114, 121, 100, 97,
      116, 101, 32, 111, 102, 108, 111, 121, 97, 108, 116, 121, 102, 105, 116, 110, 101, 115, 115, 97, 110, 100, 32, 119, 97, 115, 101, 109, 112, 101, 114, 111,
      114, 115, 117, 112, 114, 101, 109, 101, 83, 101, 99, 111, 110, 100, 32, 104, 101, 97, 114, 105, 110, 103, 82, 117, 115, 115, 105, 97, 110, 108, 111, 110,
      103, 101, 115, 116, 65, 108, 98, 101, 114, 116, 97, 108, 97, 116, 101, 114, 97, 108, 115, 101, 116, 32, 111, 102, 32, 115, 109, 97, 108, 108, 34, 62, 46,
      97, 112, 112, 101, 110, 100, 100, 111, 32, 119, 105, 116, 104, 102, 101, 100, 101, 114, 97, 108, 98, 97, 110, 107, 32, 111, 102, 98, 101, 110, 101, 97,
      116, 104, 68, 101, 115, 112, 105, 116, 101, 67, 97, 112, 105, 116, 97, 108, 103, 114, 111, 117, 110, 100, 115, 41, 44, 32, 97, 110, 100, 32, 112, 101,
      114, 99, 101, 110, 116, 105, 116, 32, 102, 114, 111, 109, 99, 108, 111, 115, 105, 110, 103, 99, 111, 110, 116, 97, 105, 110, 73, 110, 115, 116, 101, 97,
      100, 102, 105, 102, 116, 101, 101, 110, 97, 115, 32, 119, 101, 108, 108, 46, 121, 97, 104, 111, 111, 46, 114, 101, 115, 112, 111, 110, 100, 102, 105, 103,
      104, 116, 101, 114, 111, 98, 115, 99, 117, 114, 101, 114, 101, 102, 108, 101, 99, 116, 111, 114, 103, 97, 110, 105, 99, 61, 32, 77, 97, 116, 104, 46, 101,
      100, 105, 116, 105, 110, 103, 111, 110, 108, 105, 110, 101, 32, 112, 97, 100, 100, 105, 110, 103, 97, 32, 119, 104, 111, 108, 101, 111, 110, 101, 114,
      114, 111, 114, 121, 101, 97, 114, 32, 111, 102, 101, 110, 100, 32, 111, 102, 32, 98, 97, 114, 114, 105, 101, 114, 119, 104, 101, 110, 32, 105, 116, 104,
      101, 97, 100, 101, 114, 32, 104, 111, 109, 101, 32, 111, 102, 114, 101, 115, 117, 109, 101, 100, 114, 101, 110, 97, 109, 101, 100, 115, 116, 114, 111,
      110, 103, 62, 104, 101, 97, 116, 105, 110, 103, 114, 101, 116, 97, 105, 110, 115, 99, 108, 111, 117, 100, 102, 114, 119, 97, 121, 32, 111, 102, 32, 77,
      97, 114, 99, 104, 32, 49, 107, 110, 111, 119, 105, 110, 103, 105, 110, 32, 112, 97, 114, 116, 66, 101, 116, 119, 101, 101, 110, 108, 101, 115, 115, 111,
      110, 115, 99, 108, 111, 115, 101, 115, 116, 118, 105, 114, 116, 117, 97, 108, 108, 105, 110, 107, 115, 34, 62, 99, 114, 111, 115, 115, 101, 100, 69, 78,
      68, 32, 45, 45, 62, 102, 97, 109, 111, 117, 115, 32, 97, 119, 97, 114, 100, 101, 100, 76, 105, 99, 101, 110, 115, 101, 72, 101, 97, 108, 116, 104, 32,
      102, 97, 105, 114, 108, 121, 32, 119, 101, 97, 108, 116, 104, 121, 109, 105, 110, 105, 109, 97, 108, 65, 102, 114, 105, 99, 97, 110, 99, 111, 109, 112,
      101, 116, 101, 108, 97, 98, 101, 108, 34, 62, 115, 105, 110, 103, 105, 110, 103, 102, 97, 114, 109, 101, 114, 115, 66, 114, 97, 115, 105, 108, 41, 100,
      105, 115, 99, 117, 115, 115, 114, 101, 112, 108, 97, 99, 101, 71, 114, 101, 103, 111, 114, 121, 102, 111, 110, 116, 32, 99, 111, 112, 117, 114, 115, 117,
      101, 100, 97, 112, 112, 101, 97, 114, 115, 109, 97, 107, 101, 32, 117, 112, 114, 111, 117, 110, 100, 101, 100, 98, 111, 116, 104, 32, 111, 102, 98, 108,
      111, 99, 107, 101, 100, 115, 97, 119, 32, 116, 104, 101, 111, 102, 102, 105, 99, 101, 115, 99, 111, 108, 111, 117, 114, 115, 105, 102, 40, 100, 111, 99,
      117, 119, 104, 101, 110, 32, 104, 101, 101, 110, 102, 111, 114, 99, 101, 112, 117, 115, 104, 40, 102, 117, 65, 117, 103, 117, 115, 116, 32, 85, 84, 70,
      45, 56, 34, 62, 70, 97, 110, 116, 97, 115, 121, 105, 110, 32, 109, 111, 115, 116, 105, 110, 106, 117, 114, 101, 100, 85, 115, 117, 97, 108, 108, 121, 102,
      97, 114, 109, 105, 110, 103, 99, 108, 111, 115, 117, 114, 101, 111, 98, 106, 101, 99, 116, 32, 100, 101, 102, 101, 110, 99, 101, 117, 115, 101, 32, 111,
      102, 32, 77, 101, 100, 105, 99, 97, 108, 60, 98, 111, 100, 121, 62, 10, 101, 118, 105, 100, 101, 110, 116, 98, 101, 32, 117, 115, 101, 100, 107, 101, 121,
      67, 111, 100, 101, 115, 105, 120, 116, 101, 101, 110, 73, 115, 108, 97, 109, 105, 99, 35, 48, 48, 48, 48, 48, 48, 101, 110, 116, 105, 114, 101, 32, 119,
      105, 100, 101, 108, 121, 32, 97, 99, 116, 105, 118, 101, 32, 40, 116, 121, 112, 101, 111, 102, 111, 110, 101, 32, 99, 97, 110, 99, 111, 108, 111, 114, 32,
      61, 115, 112, 101, 97, 107, 101, 114, 101, 120, 116, 101, 110, 100, 115, 80, 104, 121, 115, 105, 99, 115, 116, 101, 114, 114, 97, 105, 110, 60, 116, 98,
      111, 100, 121, 62, 102, 117, 110, 101, 114, 97, 108, 118, 105, 101, 119, 105, 110, 103, 109, 105, 100, 100, 108, 101, 32, 99, 114, 105, 99, 107, 101, 116,
      112, 114, 111, 112, 104, 101, 116, 115, 104, 105, 102, 116, 101, 100, 100, 111, 99, 116, 111, 114, 115, 82, 117, 115, 115, 101, 108, 108, 32, 116, 97,
      114, 103, 101, 116, 99, 111, 109, 112, 97, 99, 116, 97, 108, 103, 101, 98, 114, 97, 115, 111, 99, 105, 97, 108, 45, 98, 117, 108, 107, 32, 111, 102, 109,
      97, 110, 32, 97, 110, 100, 60, 47, 116, 100, 62, 10, 32, 104, 101, 32, 108, 101, 102, 116, 41, 46, 118, 97, 108, 40, 41, 102, 97, 108, 115, 101, 41, 59,
      108, 111, 103, 105, 99, 97, 108, 98, 97, 110, 107, 105, 110, 103, 104, 111, 109, 101, 32, 116, 111, 110, 97, 109, 105, 110, 103, 32, 65, 114, 105, 122,
      111, 110, 97, 99, 114, 101, 100, 105, 116, 115, 41, 59, 10, 125, 41, 59, 10, 102, 111, 117, 110, 100, 101, 114, 105, 110, 32, 116, 117, 114, 110, 67, 111,
      108, 108, 105, 110, 115, 98, 101, 102, 111, 114, 101, 32, 66, 117, 116, 32, 116, 104, 101, 99, 104, 97, 114, 103, 101, 100, 84, 105, 116, 108, 101, 34,
      62, 67, 97, 112, 116, 97, 105, 110, 115, 112, 101, 108, 108, 101, 100, 103, 111, 100, 100, 101, 115, 115, 84, 97, 103, 32, 45, 45, 62, 65, 100, 100, 105,
      110, 103, 58, 98, 117, 116, 32, 119, 97, 115, 82, 101, 99, 101, 110, 116, 32, 112, 97, 116, 105, 101, 110, 116, 98, 97, 99, 107, 32, 105, 110, 61, 102,
      97, 108, 115, 101, 38, 76, 105, 110, 99, 111, 108, 110, 119, 101, 32, 107, 110, 111, 119, 67, 111, 117, 110, 116, 101, 114, 74, 117, 100, 97, 105, 115,
      109, 115, 99, 114, 105, 112, 116, 32, 97, 108, 116, 101, 114, 101, 100, 39, 93, 41, 59, 10, 32, 32, 104, 97, 115, 32, 116, 104, 101, 117, 110, 99, 108,
      101, 97, 114, 69, 118, 101, 110, 116, 39, 44, 98, 111, 116, 104, 32, 105, 110, 110, 111, 116, 32, 97, 108, 108, 10, 10, 60, 33, 45, 45, 32, 112, 108, 97,
      99, 105, 110, 103, 104, 97, 114, 100, 32, 116, 111, 32, 99, 101, 110, 116, 101, 114, 115, 111, 114, 116, 32, 111, 102, 99, 108, 105, 101, 110, 116, 115,
      115, 116, 114, 101, 101, 116, 115, 66, 101, 114, 110, 97, 114, 100, 97, 115, 115, 101, 114, 116, 115, 116, 101, 110, 100, 32, 116, 111, 102, 97, 110, 116,
      97, 115, 121, 100, 111, 119, 110, 32, 105, 110, 104, 97, 114, 98, 111, 117, 114, 70, 114, 101, 101, 100, 111, 109, 106, 101, 119, 101, 108, 114, 121, 47,
      97, 98, 111, 117, 116, 46, 46, 115, 101, 97, 114, 99, 104, 108, 101, 103, 101, 110, 100, 115, 105, 115, 32, 109, 97, 100, 101, 109, 111, 100, 101, 114,
      110, 32, 111, 110, 108, 121, 32, 111, 110, 111, 110, 108, 121, 32, 116, 111, 105, 109, 97, 103, 101, 34, 32, 108, 105, 110, 101, 97, 114, 32, 112, 97,
      105, 110, 116, 101, 114, 97, 110, 100, 32, 110, 111, 116, 114, 97, 114, 101, 108, 121, 32, 97, 99, 114, 111, 110, 121, 109, 100, 101, 108, 105, 118, 101,
      114, 115, 104, 111, 114, 116, 101, 114, 48, 48, 38, 97, 109, 112, 59, 97, 115, 32, 109, 97, 110, 121, 119, 105, 100, 116, 104, 61, 34, 47, 42, 32, 60, 33,
      91, 67, 116, 105, 116, 108, 101, 32, 61, 111, 102, 32, 116, 104, 101, 32, 108, 111, 119, 101, 115, 116, 32, 112, 105, 99, 107, 101, 100, 32, 101, 115, 99,
      97, 112, 101, 100, 117, 115, 101, 115, 32, 111, 102, 112, 101, 111, 112, 108, 101, 115, 32, 80, 117, 98, 108, 105, 99, 77, 97, 116, 116, 104, 101, 119,
      116, 97, 99, 116, 105, 99, 115, 100, 97, 109, 97, 103, 101, 100, 119, 97, 121, 32, 102, 111, 114, 108, 97, 119, 115, 32, 111, 102, 101, 97, 115, 121, 32,
      116, 111, 32, 119, 105, 110, 100, 111, 119, 115, 116, 114, 111, 110, 103, 32, 32, 115, 105, 109, 112, 108, 101, 125, 99, 97, 116, 99, 104, 40, 115, 101,
      118, 101, 110, 116, 104, 105, 110, 102, 111, 98, 111, 120, 119, 101, 110, 116, 32, 116, 111, 112, 97, 105, 110, 116, 101, 100, 99, 105, 116, 105, 122,
      101, 110, 73, 32, 100, 111, 110, 39, 116, 114, 101, 116, 114, 101, 97, 116, 46, 32, 83, 111, 109, 101, 32, 119, 119, 46, 34, 41, 59, 10, 98, 111, 109, 98,
      105, 110, 103, 109, 97, 105, 108, 116, 111, 58, 109, 97, 100, 101, 32, 105, 110, 46, 32, 77, 97, 110, 121, 32, 99, 97, 114, 114, 105, 101, 115, 124, 124,
      123, 125, 59, 119, 105, 119, 111, 114, 107, 32, 111, 102, 115, 121, 110, 111, 110, 121, 109, 100, 101, 102, 101, 97, 116, 115, 102, 97, 118, 111, 114,
      101, 100, 111, 112, 116, 105, 99, 97, 108, 112, 97, 103, 101, 84, 114, 97, 117, 110, 108, 101, 115, 115, 32, 115, 101, 110, 100, 105, 110, 103, 108, 101,
      102, 116, 34, 62, 60, 99, 111, 109, 83, 99, 111, 114, 65, 108, 108, 32, 116, 104, 101, 106, 81, 117, 101, 114, 121, 46, 116, 111, 117, 114, 105, 115, 116,
      67, 108, 97, 115, 115, 105, 99, 102, 97, 108, 115, 101, 34, 32, 87, 105, 108, 104, 101, 108, 109, 115, 117, 98, 117, 114, 98, 115, 103, 101, 110, 117,
      105, 110, 101, 98, 105, 115, 104, 111, 112, 115, 46, 115, 112, 108, 105, 116, 40, 103, 108, 111, 98, 97, 108, 32, 102, 111, 108, 108, 111, 119, 115, 98,
      111, 100, 121, 32, 111, 102, 110, 111, 109, 105, 110, 97, 108, 67, 111, 110, 116, 97, 99, 116, 115, 101, 99, 117, 108, 97, 114, 108, 101, 102, 116, 32,
      116, 111, 99, 104, 105, 101, 102, 108, 121, 45, 104, 105, 100, 100, 101, 110, 45, 98, 97, 110, 110, 101, 114, 60, 47, 108, 105, 62, 10, 10, 46, 32, 87,
      104, 101, 110, 32, 105, 110, 32, 98, 111, 116, 104, 100, 105, 115, 109, 105, 115, 115, 69, 120, 112, 108, 111, 114, 101, 97, 108, 119, 97, 121, 115, 32,
      118, 105, 97, 32, 116, 104, 101, 115, 112, 97, 195, 177, 111, 108, 119, 101, 108, 102, 97, 114, 101, 114, 117, 108, 105, 110, 103, 32, 97, 114, 114, 97,
      110, 103, 101, 99, 97, 112, 116, 97, 105, 110, 104, 105, 115, 32, 115, 111, 110, 114, 117, 108, 101, 32, 111, 102, 104, 101, 32, 116, 111, 111, 107, 105,
      116, 115, 101, 108, 102, 44, 61, 48, 38, 97, 109, 112, 59, 40, 99, 97, 108, 108, 101, 100, 115, 97, 109, 112, 108, 101, 115, 116, 111, 32, 109, 97, 107,
      101, 99, 111, 109, 47, 112, 97, 103, 77, 97, 114, 116, 105, 110, 32, 75, 101, 110, 110, 101, 100, 121, 97, 99, 99, 101, 112, 116, 115, 102, 117, 108, 108,
      32, 111, 102, 104, 97, 110, 100, 108, 101, 100, 66, 101, 115, 105, 100, 101, 115, 47, 47, 45, 45, 62, 60, 47, 97, 98, 108, 101, 32, 116, 111, 116, 97,
      114, 103, 101, 116, 115, 101, 115, 115, 101, 110, 99, 101, 104, 105, 109, 32, 116, 111, 32, 105, 116, 115, 32, 98, 121, 32, 99, 111, 109, 109, 111, 110,
      46, 109, 105, 110, 101, 114, 97, 108, 116, 111, 32, 116, 97, 107, 101, 119, 97, 121, 115, 32, 116, 111, 115, 46, 111, 114, 103, 47, 108, 97, 100, 118,
      105, 115, 101, 100, 112, 101, 110, 97, 108, 116, 121, 115, 105, 109, 112, 108, 101, 58, 105, 102, 32, 116, 104, 101, 121, 76, 101, 116, 116, 101, 114,
      115, 97, 32, 115, 104, 111, 114, 116, 72, 101, 114, 98, 101, 114, 116, 115, 116, 114, 105, 107, 101, 115, 32, 103, 114, 111, 117, 112, 115, 46, 108, 101,
      110, 103, 116, 104, 102, 108, 105, 103, 104, 116, 115, 111, 118, 101, 114, 108, 97, 112, 115, 108, 111, 119, 108, 121, 32, 108, 101, 115, 115, 101, 114,
      32, 115, 111, 99, 105, 97, 108, 32, 60, 47, 112, 62, 10, 9, 9, 105, 116, 32, 105, 110, 116, 111, 114, 97, 110, 107, 101, 100, 32, 114, 97, 116, 101, 32,
      111, 102, 117, 108, 62, 13, 10, 32, 32, 97, 116, 116, 101, 109, 112, 116, 112, 97, 105, 114, 32, 111, 102, 109, 97, 107, 101, 32, 105, 116, 75, 111, 110,
      116, 97, 107, 116, 65, 110, 116, 111, 110, 105, 111, 104, 97, 118, 105, 110, 103, 32, 114, 97, 116, 105, 110, 103, 115, 32, 97, 99, 116, 105, 118, 101,
      115, 116, 114, 101, 97, 109, 115, 116, 114, 97, 112, 112, 101, 100, 34, 41, 46, 99, 115, 115, 40, 104, 111, 115, 116, 105, 108, 101, 108, 101, 97, 100,
      32, 116, 111, 108, 105, 116, 116, 108, 101, 32, 103, 114, 111, 117, 112, 115, 44, 80, 105, 99, 116, 117, 114, 101, 45, 45, 62, 13, 10, 13, 10, 32, 114,
      111, 119, 115, 61, 34, 32, 111, 98, 106, 101, 99, 116, 105, 110, 118, 101, 114, 115, 101, 60, 102, 111, 111, 116, 101, 114, 67, 117, 115, 116, 111, 109,
      86, 62, 60, 92, 47, 115, 99, 114, 115, 111, 108, 118, 105, 110, 103, 67, 104, 97, 109, 98, 101, 114, 115, 108, 97, 118, 101, 114, 121, 119, 111, 117, 110,
      100, 101, 100, 119, 104, 101, 114, 101, 97, 115, 33, 61, 32, 39, 117, 110, 100, 102, 111, 114, 32, 97, 108, 108, 112, 97, 114, 116, 108, 121, 32, 45, 114,
      105, 103, 104, 116, 58, 65, 114, 97, 98, 105, 97, 110, 98, 97, 99, 107, 101, 100, 32, 99, 101, 110, 116, 117, 114, 121, 117, 110, 105, 116, 32, 111, 102,
      109, 111, 98, 105, 108, 101, 45, 69, 117, 114, 111, 112, 101, 44, 105, 115, 32, 104, 111, 109, 101, 114, 105, 115, 107, 32, 111, 102, 100, 101, 115, 105,
      114, 101, 100, 67, 108, 105, 110, 116, 111, 110, 99, 111, 115, 116, 32, 111, 102, 97, 103, 101, 32, 111, 102, 32, 98, 101, 99, 111, 109, 101, 32, 110,
      111, 110, 101, 32, 111, 102, 112, 38, 113, 117, 111, 116, 59, 77, 105, 100, 100, 108, 101, 32, 101, 97, 100, 39, 41, 91, 48, 67, 114, 105, 116, 105, 99,
      115, 115, 116, 117, 100, 105, 111, 115, 62, 38, 99, 111, 112, 121, 59, 103, 114, 111, 117, 112, 34, 62, 97, 115, 115, 101, 109, 98, 108, 109, 97, 107,
      105, 110, 103, 32, 112, 114, 101, 115, 115, 101, 100, 119, 105, 100, 103, 101, 116, 46, 112, 115, 58, 34, 32, 63, 32, 114, 101, 98, 117, 105, 108, 116,
      98, 121, 32, 115, 111, 109, 101, 70, 111, 114, 109, 101, 114, 32, 101, 100, 105, 116, 111, 114, 115, 100, 101, 108, 97, 121, 101, 100, 67, 97, 110, 111,
      110, 105, 99, 104, 97, 100, 32, 116, 104, 101, 112, 117, 115, 104, 105, 110, 103, 99, 108, 97, 115, 115, 61, 34, 98, 117, 116, 32, 97, 114, 101, 112, 97,
      114, 116, 105, 97, 108, 66, 97, 98, 121, 108, 111, 110, 98, 111, 116, 116, 111, 109, 32, 99, 97, 114, 114, 105, 101, 114, 67, 111, 109, 109, 97, 110, 100,
      105, 116, 115, 32, 117, 115, 101, 65, 115, 32, 119, 105, 116, 104, 99, 111, 117, 114, 115, 101, 115, 97, 32, 116, 104, 105, 114, 100, 100, 101, 110, 111,
      116, 101, 115, 97, 108, 115, 111, 32, 105, 110, 72, 111, 117, 115, 116, 111, 110, 50, 48, 112, 120, 59, 34, 62, 97, 99, 99, 117, 115, 101, 100, 100, 111,
      117, 98, 108, 101, 32, 103, 111, 97, 108, 32, 111, 102, 70, 97, 109, 111, 117, 115, 32, 41, 46, 98, 105, 110, 100, 40, 112, 114, 105, 101, 115, 116, 115,
      32, 79, 110, 108, 105, 110, 101, 105, 110, 32, 74, 117, 108, 121, 115, 116, 32, 43, 32, 34, 103, 99, 111, 110, 115, 117, 108, 116, 100, 101, 99, 105, 109,
      97, 108, 104, 101, 108, 112, 102, 117, 108, 114, 101, 118, 105, 118, 101, 100, 105, 115, 32, 118, 101, 114, 121, 114, 39, 43, 39, 105, 112, 116, 108, 111,
      115, 105, 110, 103, 32, 102, 101, 109, 97, 108, 101, 115, 105, 115, 32, 97, 108, 115, 111, 115, 116, 114, 105, 110, 103, 115, 100, 97, 121, 115, 32, 111,
      102, 97, 114, 114, 105, 118, 97, 108, 102, 117, 116, 117, 114, 101, 32, 60, 111, 98, 106, 101, 99, 116, 102, 111, 114, 99, 105, 110, 103, 83, 116, 114,
      105, 110, 103, 40, 34, 32, 47, 62, 10, 9, 9, 104, 101, 114, 101, 32, 105, 115, 101, 110, 99, 111, 100, 101, 100, 46, 32, 32, 84, 104, 101, 32, 98, 97,
      108, 108, 111, 111, 110, 100, 111, 110, 101, 32, 98, 121, 47, 99, 111, 109, 109, 111, 110, 98, 103, 99, 111, 108, 111, 114, 108, 97, 119, 32, 111, 102,
      32, 73, 110, 100, 105, 97, 110, 97, 97, 118, 111, 105, 100, 101, 100, 98, 117, 116, 32, 116, 104, 101, 50, 112, 120, 32, 51, 112, 120, 106, 113, 117, 101,
      114, 121, 46, 97, 102, 116, 101, 114, 32, 97, 112, 111, 108, 105, 99, 121, 46, 109, 101, 110, 32, 97, 110, 100, 102, 111, 111, 116, 101, 114, 45, 61, 32,
      116, 114, 117, 101, 59, 102, 111, 114, 32, 117, 115, 101, 115, 99, 114, 101, 101, 110, 46, 73, 110, 100, 105, 97, 110, 32, 105, 109, 97, 103, 101, 32, 61,
      102, 97, 109, 105, 108, 121, 44, 104, 116, 116, 112, 58, 47, 47, 32, 38, 110, 98, 115, 112, 59, 100, 114, 105, 118, 101, 114, 115, 101, 116, 101, 114,
      110, 97, 108, 115, 97, 109, 101, 32, 97, 115, 110, 111, 116, 105, 99, 101, 100, 118, 105, 101, 119, 101, 114, 115, 125, 41, 40, 41, 59, 10, 32, 105, 115,
      32, 109, 111, 114, 101, 115, 101, 97, 115, 111, 110, 115, 102, 111, 114, 109, 101, 114, 32, 116, 104, 101, 32, 110, 101, 119, 105, 115, 32, 106, 117, 115,
      116, 99, 111, 110, 115, 101, 110, 116, 32, 83, 101, 97, 114, 99, 104, 119, 97, 115, 32, 116, 104, 101, 119, 104, 121, 32, 116, 104, 101, 115, 104, 105,
      112, 112, 101, 100, 98, 114, 62, 60, 98, 114, 62, 119, 105, 100, 116, 104, 58, 32, 104, 101, 105, 103, 104, 116, 61, 109, 97, 100, 101, 32, 111, 102, 99,
      117, 105, 115, 105, 110, 101, 105, 115, 32, 116, 104, 97, 116, 97, 32, 118, 101, 114, 121, 32, 65, 100, 109, 105, 114, 97, 108, 32, 102, 105, 120, 101,
      100, 59, 110, 111, 114, 109, 97, 108, 32, 77, 105, 115, 115, 105, 111, 110, 80, 114, 101, 115, 115, 44, 32, 111, 110, 116, 97, 114, 105, 111, 99, 104, 97,
      114, 115, 101, 116, 116, 114, 121, 32, 116, 111, 32, 105, 110, 118, 97, 100, 101, 100, 61, 34, 116, 114, 117, 101, 34, 115, 112, 97, 99, 105, 110, 103,
      105, 115, 32, 109, 111, 115, 116, 97, 32, 109, 111, 114, 101, 32, 116, 111, 116, 97, 108, 108, 121, 102, 97, 108, 108, 32, 111, 102, 125, 41, 59, 13, 10,
      32, 32, 105, 109, 109, 101, 110, 115, 101, 116, 105, 109, 101, 32, 105, 110, 115, 101, 116, 32, 111, 117, 116, 115, 97, 116, 105, 115, 102, 121, 116, 111,
      32, 102, 105, 110, 100, 100, 111, 119, 110, 32, 116, 111, 108, 111, 116, 32, 111, 102, 32, 80, 108, 97, 121, 101, 114, 115, 105, 110, 32, 74, 117, 110,
      101, 113, 117, 97, 110, 116, 117, 109, 110, 111, 116, 32, 116, 104, 101, 116, 105, 109, 101, 32, 116, 111, 100, 105, 115, 116, 97, 110, 116, 70, 105, 110,
      110, 105, 115, 104, 115, 114, 99, 32, 61, 32, 40, 115, 105, 110, 103, 108, 101, 32, 104, 101, 108, 112, 32, 111, 102, 71, 101, 114, 109, 97, 110, 32, 108,
      97, 119, 32, 97, 110, 100, 108, 97, 98, 101, 108, 101, 100, 102, 111, 114, 101, 115, 116, 115, 99, 111, 111, 107, 105, 110, 103, 115, 112, 97, 99, 101,
      34, 62, 104, 101, 97, 100, 101, 114, 45, 119, 101, 108, 108, 32, 97, 115, 83, 116, 97, 110, 108, 101, 121, 98, 114, 105, 100, 103, 101, 115, 47, 103, 108,
      111, 98, 97, 108, 67, 114, 111, 97, 116, 105, 97, 32, 65, 98, 111, 117, 116, 32, 91, 48, 93, 59, 10, 32, 32, 105, 116, 44, 32, 97, 110, 100, 103, 114,
      111, 117, 112, 101, 100, 98, 101, 105, 110, 103, 32, 97, 41, 123, 116, 104, 114, 111, 119, 104, 101, 32, 109, 97, 100, 101, 108, 105, 103, 104, 116, 101,
      114, 101, 116, 104, 105, 99, 97, 108, 70, 70, 70, 70, 70, 70, 34, 98, 111, 116, 116, 111, 109, 34, 108, 105, 107, 101, 32, 97, 32, 101, 109, 112, 108,
      111, 121, 115, 108, 105, 118, 101, 32, 105, 110, 97, 115, 32, 115, 101, 101, 110, 112, 114, 105, 110, 116, 101, 114, 109, 111, 115, 116, 32, 111, 102,
      117, 98, 45, 108, 105, 110, 107, 114, 101, 106, 101, 99, 116, 115, 97, 110, 100, 32, 117, 115, 101, 105, 109, 97, 103, 101, 34, 62, 115, 117, 99, 99, 101,
      101, 100, 102, 101, 101, 100, 105, 110, 103, 78, 117, 99, 108, 101, 97, 114, 105, 110, 102, 111, 114, 109, 97, 116, 111, 32, 104, 101, 108, 112, 87, 111,
      109, 101, 110, 39, 115, 78, 101, 105, 116, 104, 101, 114, 77, 101, 120, 105, 99, 97, 110, 112, 114, 111, 116, 101, 105, 110, 60, 116, 97, 98, 108, 101,
      32, 98, 121, 32, 109, 97, 110, 121, 104, 101, 97, 108, 116, 104, 121, 108, 97, 119, 115, 117, 105, 116, 100, 101, 118, 105, 115, 101, 100, 46, 112, 117,
      115, 104, 40, 123, 115, 101, 108, 108, 101, 114, 115, 115, 105, 109, 112, 108, 121, 32, 84, 104, 114, 111, 117, 103, 104, 46, 99, 111, 111, 107, 105, 101,
      32, 73, 109, 97, 103, 101, 40, 111, 108, 100, 101, 114, 34, 62, 117, 115, 46, 106, 115, 34, 62, 32, 83, 105, 110, 99, 101, 32, 117, 110, 105, 118, 101,
      114, 115, 108, 97, 114, 103, 101, 114, 32, 111, 112, 101, 110, 32, 116, 111, 33, 45, 45, 32, 101, 110, 100, 108, 105, 101, 115, 32, 105, 110, 39, 93, 41,
      59, 13, 10, 32, 32, 109, 97, 114, 107, 101, 116, 119, 104, 111, 32, 105, 115, 32, 40, 34, 68, 79, 77, 67, 111, 109, 97, 110, 97, 103, 101, 100, 111, 110,
      101, 32, 102, 111, 114, 116, 121, 112, 101, 111, 102, 32, 75, 105, 110, 103, 100, 111, 109, 112, 114, 111, 102, 105, 116, 115, 112, 114, 111, 112, 111,
      115, 101, 116, 111, 32, 115, 104, 111, 119, 99, 101, 110, 116, 101, 114, 59, 109, 97, 100, 101, 32, 105, 116, 100, 114, 101, 115, 115, 101, 100, 119, 101,
      114, 101, 32, 105, 110, 109, 105, 120, 116, 117, 114, 101, 112, 114, 101, 99, 105, 115, 101, 97, 114, 105, 115, 105, 110, 103, 115, 114, 99, 32, 61, 32,
      39, 109, 97, 107, 101, 32, 97, 32, 115, 101, 99, 117, 114, 101, 100, 66, 97, 112, 116, 105, 115, 116, 118, 111, 116, 105, 110, 103, 32, 10, 9, 9, 118, 97,
      114, 32, 77, 97, 114, 99, 104, 32, 50, 103, 114, 101, 119, 32, 117, 112, 67, 108, 105, 109, 97, 116, 101, 46, 114, 101, 109, 111, 118, 101, 115, 107, 105,
      108, 108, 101, 100, 119, 97, 121, 32, 116, 104, 101, 60, 47, 104, 101, 97, 100, 62, 102, 97, 99, 101, 32, 111, 102, 97, 99, 116, 105, 110, 103, 32, 114,
      105, 103, 104, 116, 34, 62, 116, 111, 32, 119, 111, 114, 107, 114, 101, 100, 117, 99, 101, 115, 104, 97, 115, 32, 104, 97, 100, 101, 114, 101, 99, 116,
      101, 100, 115, 104, 111, 119, 40, 41, 59, 97, 99, 116, 105, 111, 110, 61, 98, 111, 111, 107, 32, 111, 102, 97, 110, 32, 97, 114, 101, 97, 61, 61, 32, 34,
      104, 116, 116, 60, 104, 101, 97, 100, 101, 114, 10, 60, 104, 116, 109, 108, 62, 99, 111, 110, 102, 111, 114, 109, 102, 97, 99, 105, 110, 103, 32, 99, 111,
      111, 107, 105, 101, 46, 114, 101, 108, 121, 32, 111, 110, 104, 111, 115, 116, 101, 100, 32, 46, 99, 117, 115, 116, 111, 109, 104, 101, 32, 119, 101, 110,
      116, 98, 117, 116, 32, 102, 111, 114, 115, 112, 114, 101, 97, 100, 32, 70, 97, 109, 105, 108, 121, 32, 97, 32, 109, 101, 97, 110, 115, 111, 117, 116, 32,
      116, 104, 101, 102, 111, 114, 117, 109, 115, 46, 102, 111, 111, 116, 97, 103, 101, 34, 62, 77, 111, 98, 105, 108, 67, 108, 101, 109, 101, 110, 116, 115,
      34, 32, 105, 100, 61, 34, 97, 115, 32, 104, 105, 103, 104, 105, 110, 116, 101, 110, 115, 101, 45, 45, 62, 60, 33, 45, 45, 102, 101, 109, 97, 108, 101, 32,
      105, 115, 32, 115, 101, 101, 110, 105, 109, 112, 108, 105, 101, 100, 115, 101, 116, 32, 116, 104, 101, 97, 32, 115, 116, 97, 116, 101, 97, 110, 100, 32,
      104, 105, 115, 102, 97, 115, 116, 101, 115, 116, 98, 101, 115, 105, 100, 101, 115, 98, 117, 116, 116, 111, 110, 95, 98, 111, 117, 110, 100, 101, 100, 34,
      62, 60, 105, 109, 103, 32, 73, 110, 102, 111, 98, 111, 120, 101, 118, 101, 110, 116, 115, 44, 97, 32, 121, 111, 117, 110, 103, 97, 110, 100, 32, 97, 114,
      101, 78, 97, 116, 105, 118, 101, 32, 99, 104, 101, 97, 112, 101, 114, 84, 105, 109, 101, 111, 117, 116, 97, 110, 100, 32, 104, 97, 115, 101, 110, 103,
      105, 110, 101, 115, 119, 111, 110, 32, 116, 104, 101, 40, 109, 111, 115, 116, 108, 121, 114, 105, 103, 104, 116, 58, 32, 102, 105, 110, 100, 32, 97, 32,
      45, 98, 111, 116, 116, 111, 109, 80, 114, 105, 110, 99, 101, 32, 97, 114, 101, 97, 32, 111, 102, 109, 111, 114, 101, 32, 111, 102, 115, 101, 97, 114, 99,
      104, 95, 110, 97, 116, 117, 114, 101, 44, 108, 101, 103, 97, 108, 108, 121, 112, 101, 114, 105, 111, 100, 44, 108, 97, 110, 100, 32, 111, 102, 111, 114,
      32, 119, 105, 116, 104, 105, 110, 100, 117, 99, 101, 100, 112, 114, 111, 118, 105, 110, 103, 109, 105, 115, 115, 105, 108, 101, 108, 111, 99, 97, 108,
      108, 121, 65, 103, 97, 105, 110, 115, 116, 116, 104, 101, 32, 119, 97, 121, 107, 38, 113, 117, 111, 116, 59, 112, 120, 59, 34, 62, 13, 10, 112, 117, 115,
      104, 101, 100, 32, 97, 98, 97, 110, 100, 111, 110, 110, 117, 109, 101, 114, 97, 108, 67, 101, 114, 116, 97, 105, 110, 73, 110, 32, 116, 104, 105, 115,
      109, 111, 114, 101, 32, 105, 110, 111, 114, 32, 115, 111, 109, 101, 110, 97, 109, 101, 32, 105, 115, 97, 110, 100, 44, 32, 105, 110, 99, 114, 111, 119,
      110, 101, 100, 73, 83, 66, 78, 32, 48, 45, 99, 114, 101, 97, 116, 101, 115, 79, 99, 116, 111, 98, 101, 114, 109, 97, 121, 32, 110, 111, 116, 99, 101, 110,
      116, 101, 114, 32, 108, 97, 116, 101, 32, 105, 110, 68, 101, 102, 101, 110, 99, 101, 101, 110, 97, 99, 116, 101, 100, 119, 105, 115, 104, 32, 116, 111,
      98, 114, 111, 97, 100, 108, 121, 99, 111, 111, 108, 105, 110, 103, 111, 110, 108, 111, 97, 100, 61, 105, 116, 46, 32, 84, 104, 101, 114, 101, 99, 111,
      118, 101, 114, 77, 101, 109, 98, 101, 114, 115, 104, 101, 105, 103, 104, 116, 32, 97, 115, 115, 117, 109, 101, 115, 60, 104, 116, 109, 108, 62, 10, 112,
      101, 111, 112, 108, 101, 46, 105, 110, 32, 111, 110, 101, 32, 61, 119, 105, 110, 100, 111, 119, 102, 111, 111, 116, 101, 114, 95, 97, 32, 103, 111, 111,
      100, 32, 114, 101, 107, 108, 97, 109, 97, 111, 116, 104, 101, 114, 115, 44, 116, 111, 32, 116, 104, 105, 115, 95, 99, 111, 111, 107, 105, 101, 112, 97,
      110, 101, 108, 34, 62, 76, 111, 110, 100, 111, 110, 44, 100, 101, 102, 105, 110, 101, 115, 99, 114, 117, 115, 104, 101, 100, 98, 97, 112, 116, 105, 115,
      109, 99, 111, 97, 115, 116, 97, 108, 115, 116, 97, 116, 117, 115, 32, 116, 105, 116, 108, 101, 34, 32, 109, 111, 118, 101, 32, 116, 111, 108, 111, 115,
      116, 32, 105, 110, 98, 101, 116, 116, 101, 114, 32, 105, 109, 112, 108, 105, 101, 115, 114, 105, 118, 97, 108, 114, 121, 115, 101, 114, 118, 101, 114,
      115, 32, 83, 121, 115, 116, 101, 109, 80, 101, 114, 104, 97, 112, 115, 101, 115, 32, 97, 110, 100, 32, 99, 111, 110, 116, 101, 110, 100, 102, 108, 111,
      119, 105, 110, 103, 108, 97, 115, 116, 101, 100, 32, 114, 105, 115, 101, 32, 105, 110, 71, 101, 110, 101, 115, 105, 115, 118, 105, 101, 119, 32, 111, 102,
      114, 105, 115, 105, 110, 103, 32, 115, 101, 101, 109, 32, 116, 111, 98, 117, 116, 32, 105, 110, 32, 98, 97, 99, 107, 105, 110, 103, 104, 101, 32, 119,
      105, 108, 108, 103, 105, 118, 101, 110, 32, 97, 103, 105, 118, 105, 110, 103, 32, 99, 105, 116, 105, 101, 115, 46, 102, 108, 111, 119, 32, 111, 102, 32,
      76, 97, 116, 101, 114, 32, 97, 108, 108, 32, 98, 117, 116, 72, 105, 103, 104, 119, 97, 121, 111, 110, 108, 121, 32, 98, 121, 115, 105, 103, 110, 32, 111,
      102, 104, 101, 32, 100, 111, 101, 115, 100, 105, 102, 102, 101, 114, 115, 98, 97, 116, 116, 101, 114, 121, 38, 97, 109, 112, 59, 108, 97, 115, 105, 110,
      103, 108, 101, 115, 116, 104, 114, 101, 97, 116, 115, 105, 110, 116, 101, 103, 101, 114, 116, 97, 107, 101, 32, 111, 110, 114, 101, 102, 117, 115, 101,
      100, 99, 97, 108, 108, 101, 100, 32, 61, 85, 83, 38, 97, 109, 112, 83, 101, 101, 32, 116, 104, 101, 110, 97, 116, 105, 118, 101, 115, 98, 121, 32, 116,
      104, 105, 115, 115, 121, 115, 116, 101, 109, 46, 104, 101, 97, 100, 32, 111, 102, 58, 104, 111, 118, 101, 114, 44, 108, 101, 115, 98, 105, 97, 110, 115,
      117, 114, 110, 97, 109, 101, 97, 110, 100, 32, 97, 108, 108, 99, 111, 109, 109, 111, 110, 47, 104, 101, 97, 100, 101, 114, 95, 95, 112, 97, 114, 97, 109,
      115, 72, 97, 114, 118, 97, 114, 100, 47, 112, 105, 120, 101, 108, 46, 114, 101, 109, 111, 118, 97, 108, 115, 111, 32, 108, 111, 110, 103, 114, 111, 108,
      101, 32, 111, 102, 106, 111, 105, 110, 116, 108, 121, 115, 107, 121, 115, 99, 114, 97, 85, 110, 105, 99, 111, 100, 101, 98, 114, 32, 47, 62, 13, 10, 65,
      116, 108, 97, 110, 116, 97, 110, 117, 99, 108, 101, 117, 115, 67, 111, 117, 110, 116, 121, 44, 112, 117, 114, 101, 108, 121, 32, 99, 111, 117, 110, 116,
      34, 62, 101, 97, 115, 105, 108, 121, 32, 98, 117, 105, 108, 100, 32, 97, 111, 110, 99, 108, 105, 99, 107, 97, 32, 103, 105, 118, 101, 110, 112, 111, 105,
      110, 116, 101, 114, 104, 38, 113, 117, 111, 116, 59, 101, 118, 101, 110, 116, 115, 32, 101, 108, 115, 101, 32, 123, 10, 100, 105, 116, 105, 111, 110, 115,
      110, 111, 119, 32, 116, 104, 101, 44, 32, 119, 105, 116, 104, 32, 109, 97, 110, 32, 119, 104, 111, 111, 114, 103, 47, 87, 101, 98, 111, 110, 101, 32, 97,
      110, 100, 99, 97, 118, 97, 108, 114, 121, 72, 101, 32, 100, 105, 101, 100, 115, 101, 97, 116, 116, 108, 101, 48, 48, 44, 48, 48, 48, 32, 123, 119, 105,
      110, 100, 111, 119, 104, 97, 118, 101, 32, 116, 111, 105, 102, 40, 119, 105, 110, 100, 97, 110, 100, 32, 105, 116, 115, 115, 111, 108, 101, 108, 121, 32,
      109, 38, 113, 117, 111, 116, 59, 114, 101, 110, 101, 119, 101, 100, 68, 101, 116, 114, 111, 105, 116, 97, 109, 111, 110, 103, 115, 116, 101, 105, 116,
      104, 101, 114, 32, 116, 104, 101, 109, 32, 105, 110, 83, 101, 110, 97, 116, 111, 114, 85, 115, 60, 47, 97, 62, 60, 75, 105, 110, 103, 32, 111, 102, 70,
      114, 97, 110, 99, 105, 115, 45, 112, 114, 111, 100, 117, 99, 104, 101, 32, 117, 115, 101, 100, 97, 114, 116, 32, 97, 110, 100, 104, 105, 109, 32, 97, 110,
      100, 117, 115, 101, 100, 32, 98, 121, 115, 99, 111, 114, 105, 110, 103, 97, 116, 32, 104, 111, 109, 101, 116, 111, 32, 104, 97, 118, 101, 114, 101, 108,
      97, 116, 101, 115, 105, 98, 105, 108, 105, 116, 121, 102, 97, 99, 116, 105, 111, 110, 66, 117, 102, 102, 97, 108, 111, 108, 105, 110, 107, 34, 62, 60,
      119, 104, 97, 116, 32, 104, 101, 102, 114, 101, 101, 32, 116, 111, 67, 105, 116, 121, 32, 111, 102, 99, 111, 109, 101, 32, 105, 110, 115, 101, 99, 116,
      111, 114, 115, 99, 111, 117, 110, 116, 101, 100, 111, 110, 101, 32, 100, 97, 121, 110, 101, 114, 118, 111, 117, 115, 115, 113, 117, 97, 114, 101, 32, 125,
      59, 105, 102, 40, 103, 111, 105, 110, 32, 119, 104, 97, 116, 105, 109, 103, 34, 32, 97, 108, 105, 115, 32, 111, 110, 108, 121, 115, 101, 97, 114, 99, 104,
      47, 116, 117, 101, 115, 100, 97, 121, 108, 111, 111, 115, 101, 108, 121, 83, 111, 108, 111, 109, 111, 110, 115, 101, 120, 117, 97, 108, 32, 45, 32, 60,
      97, 32, 104, 114, 109, 101, 100, 105, 117, 109, 34, 68, 79, 32, 78, 79, 84, 32, 70, 114, 97, 110, 99, 101, 44, 119, 105, 116, 104, 32, 97, 32, 119, 97,
      114, 32, 97, 110, 100, 115, 101, 99, 111, 110, 100, 32, 116, 97, 107, 101, 32, 97, 32, 62, 13, 10, 13, 10, 13, 10, 109, 97, 114, 107, 101, 116, 46, 104,
      105, 103, 104, 119, 97, 121, 100, 111, 110, 101, 32, 105, 110, 99, 116, 105, 118, 105, 116, 121, 34, 108, 97, 115, 116, 34, 62, 111, 98, 108, 105, 103,
      101, 100, 114, 105, 115, 101, 32, 116, 111, 34, 117, 110, 100, 101, 102, 105, 109, 97, 100, 101, 32, 116, 111, 32, 69, 97, 114, 108, 121, 32, 112, 114,
      97, 105, 115, 101, 100, 105, 110, 32, 105, 116, 115, 32, 102, 111, 114, 32, 104, 105, 115, 97, 116, 104, 108, 101, 116, 101, 74, 117, 112, 105, 116, 101,
      114, 89, 97, 104, 111, 111, 33, 32, 116, 101, 114, 109, 101, 100, 32, 115, 111, 32, 109, 97, 110, 121, 114, 101, 97, 108, 108, 121, 32, 115, 46, 32, 84,
      104, 101, 32, 97, 32, 119, 111, 109, 97, 110, 63, 118, 97, 108, 117, 101, 61, 100, 105, 114, 101, 99, 116, 32, 114, 105, 103, 104, 116, 34, 32, 98, 105,
      99, 121, 99, 108, 101, 97, 99, 105, 110, 103, 61, 34, 100, 97, 121, 32, 97, 110, 100, 115, 116, 97, 116, 105, 110, 103, 82, 97, 116, 104, 101, 114, 44,
      104, 105, 103, 104, 101, 114, 32, 79, 102, 102, 105, 99, 101, 32, 97, 114, 101, 32, 110, 111, 119, 116, 105, 109, 101, 115, 44, 32, 119, 104, 101, 110,
      32, 97, 32, 112, 97, 121, 32, 102, 111, 114, 111, 110, 32, 116, 104, 105, 115, 45, 108, 105, 110, 107, 34, 62, 59, 98, 111, 114, 100, 101, 114, 97, 114,
      111, 117, 110, 100, 32, 97, 110, 110, 117, 97, 108, 32, 116, 104, 101, 32, 78, 101, 119, 112, 117, 116, 32, 116, 104, 101, 46, 99, 111, 109, 34, 32, 116,
      97, 107, 105, 110, 32, 116, 111, 97, 32, 98, 114, 105, 101, 102, 40, 105, 110, 32, 116, 104, 101, 103, 114, 111, 117, 112, 115, 46, 59, 32, 119, 105, 100,
      116, 104, 101, 110, 122, 121, 109, 101, 115, 115, 105, 109, 112, 108, 101, 32, 105, 110, 32, 108, 97, 116, 101, 123, 114, 101, 116, 117, 114, 110, 116,
      104, 101, 114, 97, 112, 121, 97, 32, 112, 111, 105, 110, 116, 98, 97, 110, 110, 105, 110, 103, 105, 110, 107, 115, 34, 62, 10, 40, 41, 59, 34, 32, 114,
      101, 97, 32, 112, 108, 97, 99, 101, 92, 117, 48, 48, 51, 67, 97, 97, 98, 111, 117, 116, 32, 97, 116, 114, 62, 13, 10, 9, 9, 99, 99, 111, 117, 110, 116,
      32, 103, 105, 118, 101, 115, 32, 97, 60, 83, 67, 82, 73, 80, 84, 82, 97, 105, 108, 119, 97, 121, 116, 104, 101, 109, 101, 115, 47, 116, 111, 111, 108, 98,
      111, 120, 66, 121, 73, 100, 40, 34, 120, 104, 117, 109, 97, 110, 115, 44, 119, 97, 116, 99, 104, 101, 115, 105, 110, 32, 115, 111, 109, 101, 32, 105, 102,
      32, 40, 119, 105, 99, 111, 109, 105, 110, 103, 32, 102, 111, 114, 109, 97, 116, 115, 32, 85, 110, 100, 101, 114, 32, 98, 117, 116, 32, 104, 97, 115, 104,
      97, 110, 100, 101, 100, 32, 109, 97, 100, 101, 32, 98, 121, 116, 104, 97, 110, 32, 105, 110, 102, 101, 97, 114, 32, 111, 102, 100, 101, 110, 111, 116,
      101, 100, 47, 105, 102, 114, 97, 109, 101, 108, 101, 102, 116, 32, 105, 110, 118, 111, 108, 116, 97, 103, 101, 105, 110, 32, 101, 97, 99, 104, 97, 38,
      113, 117, 111, 116, 59, 98, 97, 115, 101, 32, 111, 102, 73, 110, 32, 109, 97, 110, 121, 117, 110, 100, 101, 114, 103, 111, 114, 101, 103, 105, 109, 101,
      115, 97, 99, 116, 105, 111, 110, 32, 60, 47, 112, 62, 13, 10, 60, 117, 115, 116, 111, 109, 86, 97, 59, 38, 103, 116, 59, 60, 47, 105, 109, 112, 111, 114,
      116, 115, 111, 114, 32, 116, 104, 97, 116, 109, 111, 115, 116, 108, 121, 32, 38, 97, 109, 112, 59, 114, 101, 32, 115, 105, 122, 101, 61, 34, 60, 47, 97,
      62, 60, 47, 104, 97, 32, 99, 108, 97, 115, 115, 112, 97, 115, 115, 105, 118, 101, 72, 111, 115, 116, 32, 61, 32, 87, 104, 101, 116, 104, 101, 114, 102,
      101, 114, 116, 105, 108, 101, 86, 97, 114, 105, 111, 117, 115, 61, 91, 93, 59, 40, 102, 117, 99, 97, 109, 101, 114, 97, 115, 47, 62, 60, 47, 116, 100, 62,
      97, 99, 116, 115, 32, 97, 115, 73, 110, 32, 115, 111, 109, 101, 62, 13, 10, 13, 10, 60, 33, 111, 114, 103, 97, 110, 105, 115, 32, 60, 98, 114, 32, 47, 62,
      66, 101, 105, 106, 105, 110, 103, 99, 97, 116, 97, 108, 195, 160, 100, 101, 117, 116, 115, 99, 104, 101, 117, 114, 111, 112, 101, 117, 101, 117, 115, 107,
      97, 114, 97, 103, 97, 101, 105, 108, 103, 101, 115, 118, 101, 110, 115, 107, 97, 101, 115, 112, 97, 195, 177, 97, 109, 101, 110, 115, 97, 106, 101, 117,
      115, 117, 97, 114, 105, 111, 116, 114, 97, 98, 97, 106, 111, 109, 195, 169, 120, 105, 99, 111, 112, 195, 161, 103, 105, 110, 97, 115, 105, 101, 109, 112,
      114, 101, 115, 105, 115, 116, 101, 109, 97, 111, 99, 116, 117, 98, 114, 101, 100, 117, 114, 97, 110, 116, 101, 97, 195, 177, 97, 100, 105, 114, 101, 109,
      112, 114, 101, 115, 97, 109, 111, 109, 101, 110, 116, 111, 110, 117, 101, 115, 116, 114, 111, 112, 114, 105, 109, 101, 114, 97, 116, 114, 97, 118, 195,
      169, 115, 103, 114, 97, 99, 105, 97, 115, 110, 117, 101, 115, 116, 114, 97, 112, 114, 111, 99, 101, 115, 111, 101, 115, 116, 97, 100, 111, 115, 99, 97,
      108, 105, 100, 97, 100, 112, 101, 114, 115, 111, 110, 97, 110, 195, 186, 109, 101, 114, 111, 97, 99, 117, 101, 114, 100, 111, 109, 195, 186, 115, 105, 99,
      97, 109, 105, 101, 109, 98, 114, 111, 111, 102, 101, 114, 116, 97, 115, 97, 108, 103, 117, 110, 111, 115, 112, 97, 195, 173, 115, 101, 115, 101, 106, 101,
      109, 112, 108, 111, 100, 101, 114, 101, 99, 104, 111, 97, 100, 101, 109, 195, 161, 115, 112, 114, 105, 118, 97, 100, 111, 97, 103, 114, 101, 103, 97, 114,
      101, 110, 108, 97, 99, 101, 115, 112, 111, 115, 105, 98, 108, 101, 104, 111, 116, 101, 108, 101, 115, 115, 101, 118, 105, 108, 108, 97, 112, 114, 105,
      109, 101, 114, 111, 195, 186, 108, 116, 105, 109, 111, 101, 118, 101, 110, 116, 111, 115, 97, 114, 99, 104, 105, 118, 111, 99, 117, 108, 116, 117, 114,
      97, 109, 117, 106, 101, 114, 101, 115, 101, 110, 116, 114, 97, 100, 97, 97, 110, 117, 110, 99, 105, 111, 101, 109, 98, 97, 114, 103, 111, 109, 101, 114,
      99, 97, 100, 111, 103, 114, 97, 110, 100, 101, 115, 101, 115, 116, 117, 100, 105, 111, 109, 101, 106, 111, 114, 101, 115, 102, 101, 98, 114, 101, 114,
      111, 100, 105, 115, 101, 195, 177, 111, 116, 117, 114, 105, 115, 109, 111, 99, 195, 179, 100, 105, 103, 111, 112, 111, 114, 116, 97, 100, 97, 101, 115,
      112, 97, 99, 105, 111, 102, 97, 109, 105, 108, 105, 97, 97, 110, 116, 111, 110, 105, 111, 112, 101, 114, 109, 105, 116, 101, 103, 117, 97, 114, 100, 97,
      114, 97, 108, 103, 117, 110, 97, 115, 112, 114, 101, 99, 105, 111, 115, 97, 108, 103, 117, 105, 101, 110, 115, 101, 110, 116, 105, 100, 111, 118, 105,
      115, 105, 116, 97, 115, 116, 195, 173, 116, 117, 108, 111, 99, 111, 110, 111, 99, 101, 114, 115, 101, 103, 117, 110, 100, 111, 99, 111, 110, 115, 101,
      106, 111, 102, 114, 97, 110, 99, 105, 97, 109, 105, 110, 117, 116, 111, 115, 115, 101, 103, 117, 110, 100, 97, 116, 101, 110, 101, 109, 111, 115, 101,
      102, 101, 99, 116, 111, 115, 109, 195, 161, 108, 97, 103, 97, 115, 101, 115, 105, 195, 179, 110, 114, 101, 118, 105, 115, 116, 97, 103, 114, 97, 110, 97,
      100, 97, 99, 111, 109, 112, 114, 97, 114, 105, 110, 103, 114, 101, 115, 111, 103, 97, 114, 99, 195, 173, 97, 97, 99, 99, 105, 195, 179, 110, 101, 99, 117,
      97, 100, 111, 114, 113, 117, 105, 101, 110, 101, 115, 105, 110, 99, 108, 117, 115, 111, 100, 101, 98, 101, 114, 195, 161, 109, 97, 116, 101, 114, 105, 97,
      104, 111, 109, 98, 114, 101, 115, 109, 117, 101, 115, 116, 114, 97, 112, 111, 100, 114, 195, 173, 97, 109, 97, 195, 177, 97, 110, 97, 195, 186, 108, 116,
      105, 109, 97, 101, 115, 116, 97, 109, 111, 115, 111, 102, 105, 99, 105, 97, 108, 116, 97, 109, 98, 105, 101, 110, 110, 105, 110, 103, 195, 186, 110, 115,
      97, 108, 117, 100, 111, 115, 112, 111, 100, 101, 109, 111, 115, 109, 101, 106, 111, 114, 97, 114, 112, 111, 115, 105, 116, 105, 111, 110, 98, 117, 115,
      105, 110, 101, 115, 115, 104, 111, 109, 101, 112, 97, 103, 101, 115, 101, 99, 117, 114, 105, 116, 121, 108, 97, 110, 103, 117, 97, 103, 101, 115, 116, 97,
      110, 100, 97, 114, 100, 99, 97, 109, 112, 97, 105, 103, 110, 102, 101, 97, 116, 117, 114, 101, 115, 99, 97, 116, 101, 103, 111, 114, 121, 101, 120, 116,
      101, 114, 110, 97, 108, 99, 104, 105, 108, 100, 114, 101, 110, 114, 101, 115, 101, 114, 118, 101, 100, 114, 101, 115, 101, 97, 114, 99, 104, 101, 120, 99,
      104, 97, 110, 103, 101, 102, 97, 118, 111, 114, 105, 116, 101, 116, 101, 109, 112, 108, 97, 116, 101, 109, 105, 108, 105, 116, 97, 114, 121, 105, 110,
      100, 117, 115, 116, 114, 121, 115, 101, 114, 118, 105, 99, 101, 115, 109, 97, 116, 101, 114, 105, 97, 108, 112, 114, 111, 100, 117, 99, 116, 115, 122, 45,
      105, 110, 100, 101, 120, 58, 99, 111, 109, 109, 101, 110, 116, 115, 115, 111, 102, 116, 119, 97, 114, 101, 99, 111, 109, 112, 108, 101, 116, 101, 99, 97,
      108, 101, 110, 100, 97, 114, 112, 108, 97, 116, 102, 111, 114, 109, 97, 114, 116, 105, 99, 108, 101, 115, 114, 101, 113, 117, 105, 114, 101, 100, 109,
      111, 118, 101, 109, 101, 110, 116, 113, 117, 101, 115, 116, 105, 111, 110, 98, 117, 105, 108, 100, 105, 110, 103, 112, 111, 108, 105, 116, 105, 99, 115,
      112, 111, 115, 115, 105, 98, 108, 101, 114, 101, 108, 105, 103, 105, 111, 110, 112, 104, 121, 115, 105, 99, 97, 108, 102, 101, 101, 100, 98, 97, 99, 107,
      114, 101, 103, 105, 115, 116, 101, 114, 112, 105, 99, 116, 117, 114, 101, 115, 100, 105, 115, 97, 98, 108, 101, 100, 112, 114, 111, 116, 111, 99, 111,
      108, 97, 117, 100, 105, 101, 110, 99, 101, 115, 101, 116, 116, 105, 110, 103, 115, 97, 99, 116, 105, 118, 105, 116, 121, 101, 108, 101, 109, 101, 110,
      116, 115, 108, 101, 97, 114, 110, 105, 110, 103, 97, 110, 121, 116, 104, 105, 110, 103, 97, 98, 115, 116, 114, 97, 99, 116, 112, 114, 111, 103, 114, 101,
      115, 115, 111, 118, 101, 114, 118, 105, 101, 119, 109, 97, 103, 97, 122, 105, 110, 101, 101, 99, 111, 110, 111, 109, 105, 99, 116, 114, 97, 105, 110, 105,
      110, 103, 112, 114, 101, 115, 115, 117, 114, 101, 118, 97, 114, 105, 111, 117, 115, 32, 60, 115, 116, 114, 111, 110, 103, 62, 112, 114, 111, 112, 101,
      114, 116, 121, 115, 104, 111, 112, 112, 105, 110, 103, 116, 111, 103, 101, 116, 104, 101, 114, 97, 100, 118, 97, 110, 99, 101, 100, 98, 101, 104, 97, 118,
      105, 111, 114, 100, 111, 119, 110, 108, 111, 97, 100, 102, 101, 97, 116, 117, 114, 101, 100, 102, 111, 111, 116, 98, 97, 108, 108, 115, 101, 108, 101, 99,
      116, 101, 100, 76, 97, 110, 103, 117, 97, 103, 101, 100, 105, 115, 116, 97, 110, 99, 101, 114, 101, 109, 101, 109, 98, 101, 114, 116, 114, 97, 99, 107,
      105, 110, 103, 112, 97, 115, 115, 119, 111, 114, 100, 109, 111, 100, 105, 102, 105, 101, 100, 115, 116, 117, 100, 101, 110, 116, 115, 100, 105, 114, 101,
      99, 116, 108, 121, 102, 105, 103, 104, 116, 105, 110, 103, 110, 111, 114, 116, 104, 101, 114, 110, 100, 97, 116, 97, 98, 97, 115, 101, 102, 101, 115, 116,
      105, 118, 97, 108, 98, 114, 101, 97, 107, 105, 110, 103, 108, 111, 99, 97, 116, 105, 111, 110, 105, 110, 116, 101, 114, 110, 101, 116, 100, 114, 111, 112,
      100, 111, 119, 110, 112, 114, 97, 99, 116, 105, 99, 101, 101, 118, 105, 100, 101, 110, 99, 101, 102, 117, 110, 99, 116, 105, 111, 110, 109, 97, 114, 114,
      105, 97, 103, 101, 114, 101, 115, 112, 111, 110, 115, 101, 112, 114, 111, 98, 108, 101, 109, 115, 110, 101, 103, 97, 116, 105, 118, 101, 112, 114, 111,
      103, 114, 97, 109, 115, 97, 110, 97, 108, 121, 115, 105, 115, 114, 101, 108, 101, 97, 115, 101, 100, 98, 97, 110, 110, 101, 114, 34, 62, 112, 117, 114,
      99, 104, 97, 115, 101, 112, 111, 108, 105, 99, 105, 101, 115, 114, 101, 103, 105, 111, 110, 97, 108, 99, 114, 101, 97, 116, 105, 118, 101, 97, 114, 103,
      117, 109, 101, 110, 116, 98, 111, 111, 107, 109, 97, 114, 107, 114, 101, 102, 101, 114, 114, 101, 114, 99, 104, 101, 109, 105, 99, 97, 108, 100, 105, 118,
      105, 115, 105, 111, 110, 99, 97, 108, 108, 98, 97, 99, 107, 115, 101, 112, 97, 114, 97, 116, 101, 112, 114, 111, 106, 101, 99, 116, 115, 99, 111, 110,
      102, 108, 105, 99, 116, 104, 97, 114, 100, 119, 97, 114, 101, 105, 110, 116, 101, 114, 101, 115, 116, 100, 101, 108, 105, 118, 101, 114, 121, 109, 111,
      117, 110, 116, 97, 105, 110, 111, 98, 116, 97, 105, 110, 101, 100, 61, 32, 102, 97, 108, 115, 101, 59, 102, 111, 114, 40, 118, 97, 114, 32, 97, 99, 99,
      101, 112, 116, 101, 100, 99, 97, 112, 97, 99, 105, 116, 121, 99, 111, 109, 112, 117, 116, 101, 114, 105, 100, 101, 110, 116, 105, 116, 121, 97, 105, 114,
      99, 114, 97, 102, 116, 101, 109, 112, 108, 111, 121, 101, 100, 112, 114, 111, 112, 111, 115, 101, 100, 100, 111, 109, 101, 115, 116, 105, 99, 105, 110,
      99, 108, 117, 100, 101, 115, 112, 114, 111, 118, 105, 100, 101, 100, 104, 111, 115, 112, 105, 116, 97, 108, 118, 101, 114, 116, 105, 99, 97, 108, 99, 111,
      108, 108, 97, 112, 115, 101, 97, 112, 112, 114, 111, 97, 99, 104, 112, 97, 114, 116, 110, 101, 114, 115, 108, 111, 103, 111, 34, 62, 60, 97, 100, 97, 117,
      103, 104, 116, 101, 114, 97, 117, 116, 104, 111, 114, 34, 32, 99, 117, 108, 116, 117, 114, 97, 108, 102, 97, 109, 105, 108, 105, 101, 115, 47, 105, 109,
      97, 103, 101, 115, 47, 97, 115, 115, 101, 109, 98, 108, 121, 112, 111, 119, 101, 114, 102, 117, 108, 116, 101, 97, 99, 104, 105, 110, 103, 102, 105, 110,
      105, 115, 104, 101, 100, 100, 105, 115, 116, 114, 105, 99, 116, 99, 114, 105, 116, 105, 99, 97, 108, 99, 103, 105, 45, 98, 105, 110, 47, 112, 117, 114,
      112, 111, 115, 101, 115, 114, 101, 113, 117, 105, 114, 101, 115, 101, 108, 101, 99, 116, 105, 111, 110, 98, 101, 99, 111, 109, 105, 110, 103, 112, 114,
      111, 118, 105, 100, 101, 115, 97, 99, 97, 100, 101, 109, 105, 99, 101, 120, 101, 114, 99, 105, 115, 101, 97, 99, 116, 117, 97, 108, 108, 121, 109, 101,
      100, 105, 99, 105, 110, 101, 99, 111, 110, 115, 116, 97, 110, 116, 97, 99, 99, 105, 100, 101, 110, 116, 77, 97, 103, 97, 122, 105, 110, 101, 100, 111, 99,
      117, 109, 101, 110, 116, 115, 116, 97, 114, 116, 105, 110, 103, 98, 111, 116, 116, 111, 109, 34, 62, 111, 98, 115, 101, 114, 118, 101, 100, 58, 32, 38,
      113, 117, 111, 116, 59, 101, 120, 116, 101, 110, 100, 101, 100, 112, 114, 101, 118, 105, 111, 117, 115, 83, 111, 102, 116, 119, 97, 114, 101, 99, 117,
      115, 116, 111, 109, 101, 114, 100, 101, 99, 105, 115, 105, 111, 110, 115, 116, 114, 101, 110, 103, 116, 104, 100, 101, 116, 97, 105, 108, 101, 100, 115,
      108, 105, 103, 104, 116, 108, 121, 112, 108, 97, 110, 110, 105, 110, 103, 116, 101, 120, 116, 97, 114, 101, 97, 99, 117, 114, 114, 101, 110, 99, 121, 101,
      118, 101, 114, 121, 111, 110, 101, 115, 116, 114, 97, 105, 103, 104, 116, 116, 114, 97, 110, 115, 102, 101, 114, 112, 111, 115, 105, 116, 105, 118, 101,
      112, 114, 111, 100, 117, 99, 101, 100, 104, 101, 114, 105, 116, 97, 103, 101, 115, 104, 105, 112, 112, 105, 110, 103, 97, 98, 115, 111, 108, 117, 116,
      101, 114, 101, 99, 101, 105, 118, 101, 100, 114, 101, 108, 101, 118, 97, 110, 116, 98, 117, 116, 116, 111, 110, 34, 32, 118, 105, 111, 108, 101, 110, 99,
      101, 97, 110, 121, 119, 104, 101, 114, 101, 98, 101, 110, 101, 102, 105, 116, 115, 108, 97, 117, 110, 99, 104, 101, 100, 114, 101, 99, 101, 110, 116, 108,
      121, 97, 108, 108, 105, 97, 110, 99, 101, 102, 111, 108, 108, 111, 119, 101, 100, 109, 117, 108, 116, 105, 112, 108, 101, 98, 117, 108, 108, 101, 116,
      105, 110, 105, 110, 99, 108, 117, 100, 101, 100, 111, 99, 99, 117, 114, 114, 101, 100, 105, 110, 116, 101, 114, 110, 97, 108, 36, 40, 116, 104, 105, 115,
      41, 46, 114, 101, 112, 117, 98, 108, 105, 99, 62, 60, 116, 114, 62, 60, 116, 100, 99, 111, 110, 103, 114, 101, 115, 115, 114, 101, 99, 111, 114, 100, 101,
      100, 117, 108, 116, 105, 109, 97, 116, 101, 115, 111, 108, 117, 116, 105, 111, 110, 60, 117, 108, 32, 105, 100, 61, 34, 100, 105, 115, 99, 111, 118, 101,
      114, 72, 111, 109, 101, 60, 47, 97, 62, 119, 101, 98, 115, 105, 116, 101, 115, 110, 101, 116, 119, 111, 114, 107, 115, 97, 108, 116, 104, 111, 117, 103,
      104, 101, 110, 116, 105, 114, 101, 108, 121, 109, 101, 109, 111, 114, 105, 97, 108, 109, 101, 115, 115, 97, 103, 101, 115, 99, 111, 110, 116, 105, 110,
      117, 101, 97, 99, 116, 105, 118, 101, 34, 62, 115, 111, 109, 101, 119, 104, 97, 116, 118, 105, 99, 116, 111, 114, 105, 97, 87, 101, 115, 116, 101, 114,
      110, 32, 32, 116, 105, 116, 108, 101, 61, 34, 76, 111, 99, 97, 116, 105, 111, 110, 99, 111, 110, 116, 114, 97, 99, 116, 118, 105, 115, 105, 116, 111, 114,
      115, 68, 111, 119, 110, 108, 111, 97, 100, 119, 105, 116, 104, 111, 117, 116, 32, 114, 105, 103, 104, 116, 34, 62, 10, 109, 101, 97, 115, 117, 114, 101,
      115, 119, 105, 100, 116, 104, 32, 61, 32, 118, 97, 114, 105, 97, 98, 108, 101, 105, 110, 118, 111, 108, 118, 101, 100, 118, 105, 114, 103, 105, 110, 105,
      97, 110, 111, 114, 109, 97, 108, 108, 121, 104, 97, 112, 112, 101, 110, 101, 100, 97, 99, 99, 111, 117, 110, 116, 115, 115, 116, 97, 110, 100, 105, 110,
      103, 110, 97, 116, 105, 111, 110, 97, 108, 82, 101, 103, 105, 115, 116, 101, 114, 112, 114, 101, 112, 97, 114, 101, 100, 99, 111, 110, 116, 114, 111, 108,
      115, 97, 99, 99, 117, 114, 97, 116, 101, 98, 105, 114, 116, 104, 100, 97, 121, 115, 116, 114, 97, 116, 101, 103, 121, 111, 102, 102, 105, 99, 105, 97,
      108, 103, 114, 97, 112, 104, 105, 99, 115, 99, 114, 105, 109, 105, 110, 97, 108, 112, 111, 115, 115, 105, 98, 108, 121, 99, 111, 110, 115, 117, 109, 101,
      114, 80, 101, 114, 115, 111, 110, 97, 108, 115, 112, 101, 97, 107, 105, 110, 103, 118, 97, 108, 105, 100, 97, 116, 101, 97, 99, 104, 105, 101, 118, 101,
      100, 46, 106, 112, 103, 34, 32, 47, 62, 109, 97, 99, 104, 105, 110, 101, 115, 60, 47, 104, 50, 62, 10, 32, 32, 107, 101, 121, 119, 111, 114, 100, 115,
      102, 114, 105, 101, 110, 100, 108, 121, 98, 114, 111, 116, 104, 101, 114, 115, 99, 111, 109, 98, 105, 110, 101, 100, 111, 114, 105, 103, 105, 110, 97,
      108, 99, 111, 109, 112, 111, 115, 101, 100, 101, 120, 112, 101, 99, 116, 101, 100, 97, 100, 101, 113, 117, 97, 116, 101, 112, 97, 107, 105, 115, 116, 97,
      110, 102, 111, 108, 108, 111, 119, 34, 32, 118, 97, 108, 117, 97, 98, 108, 101, 60, 47, 108, 97, 98, 101, 108, 62, 114, 101, 108, 97, 116, 105, 118, 101,
      98, 114, 105, 110, 103, 105, 110, 103, 105, 110, 99, 114, 101, 97, 115, 101, 103, 111, 118, 101, 114, 110, 111, 114, 112, 108, 117, 103, 105, 110, 115,
      47, 76, 105, 115, 116, 32, 111, 102, 32, 72, 101, 97, 100, 101, 114, 34, 62, 34, 32, 110, 97, 109, 101, 61, 34, 32, 40, 38, 113, 117, 111, 116, 59, 103,
      114, 97, 100, 117, 97, 116, 101, 60, 47, 104, 101, 97, 100, 62, 10, 99, 111, 109, 109, 101, 114, 99, 101, 109, 97, 108, 97, 121, 115, 105, 97, 100, 105,
      114, 101, 99, 116, 111, 114, 109, 97, 105, 110, 116, 97, 105, 110, 59, 104, 101, 105, 103, 104, 116, 58, 115, 99, 104, 101, 100, 117, 108, 101, 99, 104,
      97, 110, 103, 105, 110, 103, 98, 97, 99, 107, 32, 116, 111, 32, 99, 97, 116, 104, 111, 108, 105, 99, 112, 97, 116, 116, 101, 114, 110, 115, 99, 111, 108,
      111, 114, 58, 32, 35, 103, 114, 101, 97, 116, 101, 115, 116, 115, 117, 112, 112, 108, 105, 101, 115, 114, 101, 108, 105, 97, 98, 108, 101, 60, 47, 117,
      108, 62, 10, 9, 9, 60, 115, 101, 108, 101, 99, 116, 32, 99, 105, 116, 105, 122, 101, 110, 115, 99, 108, 111, 116, 104, 105, 110, 103, 119, 97, 116, 99,
      104, 105, 110, 103, 60, 108, 105, 32, 105, 100, 61, 34, 115, 112, 101, 99, 105, 102, 105, 99, 99, 97, 114, 114, 121, 105, 110, 103, 115, 101, 110, 116,
      101, 110, 99, 101, 60, 99, 101, 110, 116, 101, 114, 62, 99, 111, 110, 116, 114, 97, 115, 116, 116, 104, 105, 110, 107, 105, 110, 103, 99, 97, 116, 99,
      104, 40, 101, 41, 115, 111, 117, 116, 104, 101, 114, 110, 77, 105, 99, 104, 97, 101, 108, 32, 109, 101, 114, 99, 104, 97, 110, 116, 99, 97, 114, 111, 117,
      115, 101, 108, 112, 97, 100, 100, 105, 110, 103, 58, 105, 110, 116, 101, 114, 105, 111, 114, 46, 115, 112, 108, 105, 116, 40, 34, 108, 105, 122, 97, 116,
      105, 111, 110, 79, 99, 116, 111, 98, 101, 114, 32, 41, 123, 114, 101, 116, 117, 114, 110, 105, 109, 112, 114, 111, 118, 101, 100, 45, 45, 38, 103, 116,
      59, 10, 10, 99, 111, 118, 101, 114, 97, 103, 101, 99, 104, 97, 105, 114, 109, 97, 110, 46, 112, 110, 103, 34, 32, 47, 62, 115, 117, 98, 106, 101, 99, 116,
      115, 82, 105, 99, 104, 97, 114, 100, 32, 119, 104, 97, 116, 101, 118, 101, 114, 112, 114, 111, 98, 97, 98, 108, 121, 114, 101, 99, 111, 118, 101, 114,
      121, 98, 97, 115, 101, 98, 97, 108, 108, 106, 117, 100, 103, 109, 101, 110, 116, 99, 111, 110, 110, 101, 99, 116, 46, 46, 99, 115, 115, 34, 32, 47, 62,
      32, 119, 101, 98, 115, 105, 116, 101, 114, 101, 112, 111, 114, 116, 101, 100, 100, 101, 102, 97, 117, 108, 116, 34, 47, 62, 60, 47, 97, 62, 13, 10, 101,
      108, 101, 99, 116, 114, 105, 99, 115, 99, 111, 116, 108, 97, 110, 100, 99, 114, 101, 97, 116, 105, 111, 110, 113, 117, 97, 110, 116, 105, 116, 121, 46,
      32, 73, 83, 66, 78, 32, 48, 100, 105, 100, 32, 110, 111, 116, 32, 105, 110, 115, 116, 97, 110, 99, 101, 45, 115, 101, 97, 114, 99, 104, 45, 34, 32, 108,
      97, 110, 103, 61, 34, 115, 112, 101, 97, 107, 101, 114, 115, 67, 111, 109, 112, 117, 116, 101, 114, 99, 111, 110, 116, 97, 105, 110, 115, 97, 114, 99,
      104, 105, 118, 101, 115, 109, 105, 110, 105, 115, 116, 101, 114, 114, 101, 97, 99, 116, 105, 111, 110, 100, 105, 115, 99, 111, 117, 110, 116, 73, 116, 97,
      108, 105, 97, 110, 111, 99, 114, 105, 116, 101, 114, 105, 97, 115, 116, 114, 111, 110, 103, 108, 121, 58, 32, 39, 104, 116, 116, 112, 58, 39, 115, 99,
      114, 105, 112, 116, 39, 99, 111, 118, 101, 114, 105, 110, 103, 111, 102, 102, 101, 114, 105, 110, 103, 97, 112, 112, 101, 97, 114, 101, 100, 66, 114, 105,
      116, 105, 115, 104, 32, 105, 100, 101, 110, 116, 105, 102, 121, 70, 97, 99, 101, 98, 111, 111, 107, 110, 117, 109, 101, 114, 111, 117, 115, 118, 101, 104,
      105, 99, 108, 101, 115, 99, 111, 110, 99, 101, 114, 110, 115, 65, 109, 101, 114, 105, 99, 97, 110, 104, 97, 110, 100, 108, 105, 110, 103, 100, 105, 118,
      32, 105, 100, 61, 34, 87, 105, 108, 108, 105, 97, 109, 32, 112, 114, 111, 118, 105, 100, 101, 114, 95, 99, 111, 110, 116, 101, 110, 116, 97, 99, 99, 117,
      114, 97, 99, 121, 115, 101, 99, 116, 105, 111, 110, 32, 97, 110, 100, 101, 114, 115, 111, 110, 102, 108, 101, 120, 105, 98, 108, 101, 67, 97, 116, 101,
      103, 111, 114, 121, 108, 97, 119, 114, 101, 110, 99, 101, 60, 115, 99, 114, 105, 112, 116, 62, 108, 97, 121, 111, 117, 116, 61, 34, 97, 112, 112, 114,
      111, 118, 101, 100, 32, 109, 97, 120, 105, 109, 117, 109, 104, 101, 97, 100, 101, 114, 34, 62, 60, 47, 116, 97, 98, 108, 101, 62, 83, 101, 114, 118, 105,
      99, 101, 115, 104, 97, 109, 105, 108, 116, 111, 110, 99, 117, 114, 114, 101, 110, 116, 32, 99, 97, 110, 97, 100, 105, 97, 110, 99, 104, 97, 110, 110, 101,
      108, 115, 47, 116, 104, 101, 109, 101, 115, 47, 47, 97, 114, 116, 105, 99, 108, 101, 111, 112, 116, 105, 111, 110, 97, 108, 112, 111, 114, 116, 117, 103,
      97, 108, 118, 97, 108, 117, 101, 61, 34, 34, 105, 110, 116, 101, 114, 118, 97, 108, 119, 105, 114, 101, 108, 101, 115, 115, 101, 110, 116, 105, 116, 108,
      101, 100, 97, 103, 101, 110, 99, 105, 101, 115, 83, 101, 97, 114, 99, 104, 34, 32, 109, 101, 97, 115, 117, 114, 101, 100, 116, 104, 111, 117, 115, 97,
      110, 100, 115, 112, 101, 110, 100, 105, 110, 103, 38, 104, 101, 108, 108, 105, 112, 59, 110, 101, 119, 32, 68, 97, 116, 101, 34, 32, 115, 105, 122, 101,
      61, 34, 112, 97, 103, 101, 78, 97, 109, 101, 109, 105, 100, 100, 108, 101, 34, 32, 34, 32, 47, 62, 60, 47, 97, 62, 104, 105, 100, 100, 101, 110, 34, 62,
      115, 101, 113, 117, 101, 110, 99, 101, 112, 101, 114, 115, 111, 110, 97, 108, 111, 118, 101, 114, 102, 108, 111, 119, 111, 112, 105, 110, 105, 111, 110,
      115, 105, 108, 108, 105, 110, 111, 105, 115, 108, 105, 110, 107, 115, 34, 62, 10, 9, 60, 116, 105, 116, 108, 101, 62, 118, 101, 114, 115, 105, 111, 110,
      115, 115, 97, 116, 117, 114, 100, 97, 121, 116, 101, 114, 109, 105, 110, 97, 108, 105, 116, 101, 109, 112, 114, 111, 112, 101, 110, 103, 105, 110, 101,
      101, 114, 115, 101, 99, 116, 105, 111, 110, 115, 100, 101, 115, 105, 103, 110, 101, 114, 112, 114, 111, 112, 111, 115, 97, 108, 61, 34, 102, 97, 108, 115,
      101, 34, 69, 115, 112, 97, 195, 177, 111, 108, 114, 101, 108, 101, 97, 115, 101, 115, 115, 117, 98, 109, 105, 116, 34, 32, 101, 114, 38, 113, 117, 111,
      116, 59, 97, 100, 100, 105, 116, 105, 111, 110, 115, 121, 109, 112, 116, 111, 109, 115, 111, 114, 105, 101, 110, 116, 101, 100, 114, 101, 115, 111, 117,
      114, 99, 101, 114, 105, 103, 104, 116, 34, 62, 60, 112, 108, 101, 97, 115, 117, 114, 101, 115, 116, 97, 116, 105, 111, 110, 115, 104, 105, 115, 116, 111,
      114, 121, 46, 108, 101, 97, 118, 105, 110, 103, 32, 32, 98, 111, 114, 100, 101, 114, 61, 99, 111, 110, 116, 101, 110, 116, 115, 99, 101, 110, 116, 101,
      114, 34, 62, 46, 10, 10, 83, 111, 109, 101, 32, 100, 105, 114, 101, 99, 116, 101, 100, 115, 117, 105, 116, 97, 98, 108, 101, 98, 117, 108, 103, 97, 114,
      105, 97, 46, 115, 104, 111, 119, 40, 41, 59, 100, 101, 115, 105, 103, 110, 101, 100, 71, 101, 110, 101, 114, 97, 108, 32, 99, 111, 110, 99, 101, 112, 116,
      115, 69, 120, 97, 109, 112, 108, 101, 115, 119, 105, 108, 108, 105, 97, 109, 115, 79, 114, 105, 103, 105, 110, 97, 108, 34, 62, 60, 115, 112, 97, 110, 62,
      115, 101, 97, 114, 99, 104, 34, 62, 111, 112, 101, 114, 97, 116, 111, 114, 114, 101, 113, 117, 101, 115, 116, 115, 97, 32, 38, 113, 117, 111, 116, 59, 97,
      108, 108, 111, 119, 105, 110, 103, 68, 111, 99, 117, 109, 101, 110, 116, 114, 101, 118, 105, 115, 105, 111, 110, 46, 32, 10, 10, 84, 104, 101, 32, 121,
      111, 117, 114, 115, 101, 108, 102, 67, 111, 110, 116, 97, 99, 116, 32, 109, 105, 99, 104, 105, 103, 97, 110, 69, 110, 103, 108, 105, 115, 104, 32, 99,
      111, 108, 117, 109, 98, 105, 97, 112, 114, 105, 111, 114, 105, 116, 121, 112, 114, 105, 110, 116, 105, 110, 103, 100, 114, 105, 110, 107, 105, 110, 103,
      102, 97, 99, 105, 108, 105, 116, 121, 114, 101, 116, 117, 114, 110, 101, 100, 67, 111, 110, 116, 101, 110, 116, 32, 111, 102, 102, 105, 99, 101, 114, 115,
      82, 117, 115, 115, 105, 97, 110, 32, 103, 101, 110, 101, 114, 97, 116, 101, 45, 56, 56, 53, 57, 45, 49, 34, 105, 110, 100, 105, 99, 97, 116, 101, 102, 97,
      109, 105, 108, 105, 97, 114, 32, 113, 117, 97, 108, 105, 116, 121, 109, 97, 114, 103, 105, 110, 58, 48, 32, 99, 111, 110, 116, 101, 110, 116, 118, 105,
      101, 119, 112, 111, 114, 116, 99, 111, 110, 116, 97, 99, 116, 115, 45, 116, 105, 116, 108, 101, 34, 62, 112, 111, 114, 116, 97, 98, 108, 101, 46, 108,
      101, 110, 103, 116, 104, 32, 101, 108, 105, 103, 105, 98, 108, 101, 105, 110, 118, 111, 108, 118, 101, 115, 97, 116, 108, 97, 110, 116, 105, 99, 111, 110,
      108, 111, 97, 100, 61, 34, 100, 101, 102, 97, 117, 108, 116, 46, 115, 117, 112, 112, 108, 105, 101, 100, 112, 97, 121, 109, 101, 110, 116, 115, 103, 108,
      111, 115, 115, 97, 114, 121, 10, 10, 65, 102, 116, 101, 114, 32, 103, 117, 105, 100, 97, 110, 99, 101, 60, 47, 116, 100, 62, 60, 116, 100, 101, 110, 99,
      111, 100, 105, 110, 103, 109, 105, 100, 100, 108, 101, 34, 62, 99, 97, 109, 101, 32, 116, 111, 32, 100, 105, 115, 112, 108, 97, 121, 115, 115, 99, 111,
      116, 116, 105, 115, 104, 106, 111, 110, 97, 116, 104, 97, 110, 109, 97, 106, 111, 114, 105, 116, 121, 119, 105, 100, 103, 101, 116, 115, 46, 99, 108, 105,
      110, 105, 99, 97, 108, 116, 104, 97, 105, 108, 97, 110, 100, 116, 101, 97, 99, 104, 101, 114, 115, 60, 104, 101, 97, 100, 62, 10, 9, 97, 102, 102, 101,
      99, 116, 101, 100, 115, 117, 112, 112, 111, 114, 116, 115, 112, 111, 105, 110, 116, 101, 114, 59, 116, 111, 83, 116, 114, 105, 110, 103, 60, 47, 115, 109,
      97, 108, 108, 62, 111, 107, 108, 97, 104, 111, 109, 97, 119, 105, 108, 108, 32, 98, 101, 32, 105, 110, 118, 101, 115, 116, 111, 114, 48, 34, 32, 97, 108,
      116, 61, 34, 104, 111, 108, 105, 100, 97, 121, 115, 82, 101, 115, 111, 117, 114, 99, 101, 108, 105, 99, 101, 110, 115, 101, 100, 32, 40, 119, 104, 105,
      99, 104, 32, 46, 32, 65, 102, 116, 101, 114, 32, 99, 111, 110, 115, 105, 100, 101, 114, 118, 105, 115, 105, 116, 105, 110, 103, 101, 120, 112, 108, 111,
      114, 101, 114, 112, 114, 105, 109, 97, 114, 121, 32, 115, 101, 97, 114, 99, 104, 34, 32, 97, 110, 100, 114, 111, 105, 100, 34, 113, 117, 105, 99, 107,
      108, 121, 32, 109, 101, 101, 116, 105, 110, 103, 115, 101, 115, 116, 105, 109, 97, 116, 101, 59, 114, 101, 116, 117, 114, 110, 32, 59, 99, 111, 108, 111,
      114, 58, 35, 32, 104, 101, 105, 103, 104, 116, 61, 97, 112, 112, 114, 111, 118, 97, 108, 44, 32, 38, 113, 117, 111, 116, 59, 32, 99, 104, 101, 99, 107,
      101, 100, 46, 109, 105, 110, 46, 106, 115, 34, 109, 97, 103, 110, 101, 116, 105, 99, 62, 60, 47, 97, 62, 60, 47, 104, 102, 111, 114, 101, 99, 97, 115,
      116, 46, 32, 87, 104, 105, 108, 101, 32, 116, 104, 117, 114, 115, 100, 97, 121, 100, 118, 101, 114, 116, 105, 115, 101, 38, 101, 97, 99, 117, 116, 101,
      59, 104, 97, 115, 67, 108, 97, 115, 115, 101, 118, 97, 108, 117, 97, 116, 101, 111, 114, 100, 101, 114, 105, 110, 103, 101, 120, 105, 115, 116, 105, 110,
      103, 112, 97, 116, 105, 101, 110, 116, 115, 32, 79, 110, 108, 105, 110, 101, 32, 99, 111, 108, 111, 114, 97, 100, 111, 79, 112, 116, 105, 111, 110, 115,
      34, 99, 97, 109, 112, 98, 101, 108, 108, 60, 33, 45, 45, 32, 101, 110, 100, 60, 47, 115, 112, 97, 110, 62, 60, 60, 98, 114, 32, 47, 62, 13, 10, 95, 112,
      111, 112, 117, 112, 115, 124, 115, 99, 105, 101, 110, 99, 101, 115, 44, 38, 113, 117, 111, 116, 59, 32, 113, 117, 97, 108, 105, 116, 121, 32, 87, 105,
      110, 100, 111, 119, 115, 32, 97, 115, 115, 105, 103, 110, 101, 100, 104, 101, 105, 103, 104, 116, 58, 32, 60, 98, 32, 99, 108, 97, 115, 115, 108, 101, 38,
      113, 117, 111, 116, 59, 32, 118, 97, 108, 117, 101, 61, 34, 32, 67, 111, 109, 112, 97, 110, 121, 101, 120, 97, 109, 112, 108, 101, 115, 60, 105, 102, 114,
      97, 109, 101, 32, 98, 101, 108, 105, 101, 118, 101, 115, 112, 114, 101, 115, 101, 110, 116, 115, 109, 97, 114, 115, 104, 97, 108, 108, 112, 97, 114, 116,
      32, 111, 102, 32, 112, 114, 111, 112, 101, 114, 108, 121, 41, 46, 10, 10, 84, 104, 101, 32, 116, 97, 120, 111, 110, 111, 109, 121, 109, 117, 99, 104, 32,
      111, 102, 32, 60, 47, 115, 112, 97, 110, 62, 10, 34, 32, 100, 97, 116, 97, 45, 115, 114, 116, 117, 103, 117, 195, 170, 115, 115, 99, 114, 111, 108, 108,
      84, 111, 32, 112, 114, 111, 106, 101, 99, 116, 60, 104, 101, 97, 100, 62, 13, 10, 97, 116, 116, 111, 114, 110, 101, 121, 101, 109, 112, 104, 97, 115, 105,
      115, 115, 112, 111, 110, 115, 111, 114, 115, 102, 97, 110, 99, 121, 98, 111, 120, 119, 111, 114, 108, 100, 39, 115, 32, 119, 105, 108, 100, 108, 105, 102,
      101, 99, 104, 101, 99, 107, 101, 100, 61, 115, 101, 115, 115, 105, 111, 110, 115, 112, 114, 111, 103, 114, 97, 109, 109, 112, 120, 59, 102, 111, 110, 116,
      45, 32, 80, 114, 111, 106, 101, 99, 116, 106, 111, 117, 114, 110, 97, 108, 115, 98, 101, 108, 105, 101, 118, 101, 100, 118, 97, 99, 97, 116, 105, 111,
      110, 116, 104, 111, 109, 112, 115, 111, 110, 108, 105, 103, 104, 116, 105, 110, 103, 97, 110, 100, 32, 116, 104, 101, 32, 115, 112, 101, 99, 105, 97, 108,
      32, 98, 111, 114, 100, 101, 114, 61, 48, 99, 104, 101, 99, 107, 105, 110, 103, 60, 47, 116, 98, 111, 100, 121, 62, 60, 98, 117, 116, 116, 111, 110, 32,
      67, 111, 109, 112, 108, 101, 116, 101, 99, 108, 101, 97, 114, 102, 105, 120, 10, 60, 104, 101, 97, 100, 62, 10, 97, 114, 116, 105, 99, 108, 101, 32, 60,
      115, 101, 99, 116, 105, 111, 110, 102, 105, 110, 100, 105, 110, 103, 115, 114, 111, 108, 101, 32, 105, 110, 32, 112, 111, 112, 117, 108, 97, 114, 32, 32,
      79, 99, 116, 111, 98, 101, 114, 119, 101, 98, 115, 105, 116, 101, 32, 101, 120, 112, 111, 115, 117, 114, 101, 117, 115, 101, 100, 32, 116, 111, 32, 32,
      99, 104, 97, 110, 103, 101, 115, 111, 112, 101, 114, 97, 116, 101, 100, 99, 108, 105, 99, 107, 105, 110, 103, 101, 110, 116, 101, 114, 105, 110, 103, 99,
      111, 109, 109, 97, 110, 100, 115, 105, 110, 102, 111, 114, 109, 101, 100, 32, 110, 117, 109, 98, 101, 114, 115, 32, 32, 60, 47, 100, 105, 118, 62, 99,
      114, 101, 97, 116, 105, 110, 103, 111, 110, 83, 117, 98, 109, 105, 116, 109, 97, 114, 121, 108, 97, 110, 100, 99, 111, 108, 108, 101, 103, 101, 115, 97,
      110, 97, 108, 121, 116, 105, 99, 108, 105, 115, 116, 105, 110, 103, 115, 99, 111, 110, 116, 97, 99, 116, 46, 108, 111, 103, 103, 101, 100, 73, 110, 97,
      100, 118, 105, 115, 111, 114, 121, 115, 105, 98, 108, 105, 110, 103, 115, 99, 111, 110, 116, 101, 110, 116, 34, 115, 38, 113, 117, 111, 116, 59, 41, 115,
      46, 32, 84, 104, 105, 115, 32, 112, 97, 99, 107, 97, 103, 101, 115, 99, 104, 101, 99, 107, 98, 111, 120, 115, 117, 103, 103, 101, 115, 116, 115, 112, 114,
      101, 103, 110, 97, 110, 116, 116, 111, 109, 111, 114, 114, 111, 119, 115, 112, 97, 99, 105, 110, 103, 61, 105, 99, 111, 110, 46, 112, 110, 103, 106, 97,
      112, 97, 110, 101, 115, 101, 99, 111, 100, 101, 98, 97, 115, 101, 98, 117, 116, 116, 111, 110, 34, 62, 103, 97, 109, 98, 108, 105, 110, 103, 115, 117, 99,
      104, 32, 97, 115, 32, 44, 32, 119, 104, 105, 108, 101, 32, 60, 47, 115, 112, 97, 110, 62, 32, 109, 105, 115, 115, 111, 117, 114, 105, 115, 112, 111, 114,
      116, 105, 110, 103, 116, 111, 112, 58, 49, 112, 120, 32, 46, 60, 47, 115, 112, 97, 110, 62, 116, 101, 110, 115, 105, 111, 110, 115, 119, 105, 100, 116,
      104, 61, 34, 50, 108, 97, 122, 121, 108, 111, 97, 100, 110, 111, 118, 101, 109, 98, 101, 114, 117, 115, 101, 100, 32, 105, 110, 32, 104, 101, 105, 103,
      104, 116, 61, 34, 99, 114, 105, 112, 116, 34, 62, 10, 38, 110, 98, 115, 112, 59, 60, 47, 60, 116, 114, 62, 60, 116, 100, 32, 104, 101, 105, 103, 104, 116,
      58, 50, 47, 112, 114, 111, 100, 117, 99, 116, 99, 111, 117, 110, 116, 114, 121, 32, 105, 110, 99, 108, 117, 100, 101, 32, 102, 111, 111, 116, 101, 114,
      34, 32, 38, 108, 116, 59, 33, 45, 45, 32, 116, 105, 116, 108, 101, 34, 62, 60, 47, 106, 113, 117, 101, 114, 121, 46, 60, 47, 102, 111, 114, 109, 62, 10,
      40, 231, 174, 128, 228, 189, 147, 41, 40, 231, 185, 129, 233, 171, 148, 41, 104, 114, 118, 97, 116, 115, 107, 105, 105, 116, 97, 108, 105, 97, 110, 111,
      114, 111, 109, 195, 162, 110, 196, 131, 116, 195, 188, 114, 107, 195, 167, 101, 216, 167, 216, 177, 216, 175, 217, 136, 116, 97, 109, 98, 105, 195, 169,
      110, 110, 111, 116, 105, 99, 105, 97, 115, 109, 101, 110, 115, 97, 106, 101, 115, 112, 101, 114, 115, 111, 110, 97, 115, 100, 101, 114, 101, 99, 104, 111,
      115, 110, 97, 99, 105, 111, 110, 97, 108, 115, 101, 114, 118, 105, 99, 105, 111, 99, 111, 110, 116, 97, 99, 116, 111, 117, 115, 117, 97, 114, 105, 111,
      115, 112, 114, 111, 103, 114, 97, 109, 97, 103, 111, 98, 105, 101, 114, 110, 111, 101, 109, 112, 114, 101, 115, 97, 115, 97, 110, 117, 110, 99, 105, 111,
      115, 118, 97, 108, 101, 110, 99, 105, 97, 99, 111, 108, 111, 109, 98, 105, 97, 100, 101, 115, 112, 117, 195, 169, 115, 100, 101, 112, 111, 114, 116, 101,
      115, 112, 114, 111, 121, 101, 99, 116, 111, 112, 114, 111, 100, 117, 99, 116, 111, 112, 195, 186, 98, 108, 105, 99, 111, 110, 111, 115, 111, 116, 114,
      111, 115, 104, 105, 115, 116, 111, 114, 105, 97, 112, 114, 101, 115, 101, 110, 116, 101, 109, 105, 108, 108, 111, 110, 101, 115, 109, 101, 100, 105, 97,
      110, 116, 101, 112, 114, 101, 103, 117, 110, 116, 97, 97, 110, 116, 101, 114, 105, 111, 114, 114, 101, 99, 117, 114, 115, 111, 115, 112, 114, 111, 98,
      108, 101, 109, 97, 115, 97, 110, 116, 105, 97, 103, 111, 110, 117, 101, 115, 116, 114, 111, 115, 111, 112, 105, 110, 105, 195, 179, 110, 105, 109, 112,
      114, 105, 109, 105, 114, 109, 105, 101, 110, 116, 114, 97, 115, 97, 109, 195, 169, 114, 105, 99, 97, 118, 101, 110, 100, 101, 100, 111, 114, 115, 111, 99,
      105, 101, 100, 97, 100, 114, 101, 115, 112, 101, 99, 116, 111, 114, 101, 97, 108, 105, 122, 97, 114, 114, 101, 103, 105, 115, 116, 114, 111, 112, 97, 108,
      97, 98, 114, 97, 115, 105, 110, 116, 101, 114, 195, 169, 115, 101, 110, 116, 111, 110, 99, 101, 115, 101, 115, 112, 101, 99, 105, 97, 108, 109, 105, 101,
      109, 98, 114, 111, 115, 114, 101, 97, 108, 105, 100, 97, 100, 99, 195, 179, 114, 100, 111, 98, 97, 122, 97, 114, 97, 103, 111, 122, 97, 112, 195, 161,
      103, 105, 110, 97, 115, 115, 111, 99, 105, 97, 108, 101, 115, 98, 108, 111, 113, 117, 101, 97, 114, 103, 101, 115, 116, 105, 195, 179, 110, 97, 108, 113,
      117, 105, 108, 101, 114, 115, 105, 115, 116, 101, 109, 97, 115, 99, 105, 101, 110, 99, 105, 97, 115, 99, 111, 109, 112, 108, 101, 116, 111, 118, 101, 114,
      115, 105, 195, 179, 110, 99, 111, 109, 112, 108, 101, 116, 97, 101, 115, 116, 117, 100, 105, 111, 115, 112, 195, 186, 98, 108, 105, 99, 97, 111, 98, 106,
      101, 116, 105, 118, 111, 97, 108, 105, 99, 97, 110, 116, 101, 98, 117, 115, 99, 97, 100, 111, 114, 99, 97, 110, 116, 105, 100, 97, 100, 101, 110, 116,
      114, 97, 100, 97, 115, 97, 99, 99, 105, 111, 110, 101, 115, 97, 114, 99, 104, 105, 118, 111, 115, 115, 117, 112, 101, 114, 105, 111, 114, 109, 97, 121,
      111, 114, 195, 173, 97, 97, 108, 101, 109, 97, 110, 105, 97, 102, 117, 110, 99, 105, 195, 179, 110, 195, 186, 108, 116, 105, 109, 111, 115, 104, 97, 99,
      105, 101, 110, 100, 111, 97, 113, 117, 101, 108, 108, 111, 115, 101, 100, 105, 99, 105, 195, 179, 110, 102, 101, 114, 110, 97, 110, 100, 111, 97, 109, 98,
      105, 101, 110, 116, 101, 102, 97, 99, 101, 98, 111, 111, 107, 110, 117, 101, 115, 116, 114, 97, 115, 99, 108, 105, 101, 110, 116, 101, 115, 112, 114, 111,
      99, 101, 115, 111, 115, 98, 97, 115, 116, 97, 110, 116, 101, 112, 114, 101, 115, 101, 110, 116, 97, 114, 101, 112, 111, 114, 116, 97, 114, 99, 111, 110,
      103, 114, 101, 115, 111, 112, 117, 98, 108, 105, 99, 97, 114, 99, 111, 109, 101, 114, 99, 105, 111, 99, 111, 110, 116, 114, 97, 116, 111, 106, 195, 179,
      118, 101, 110, 101, 115, 100, 105, 115, 116, 114, 105, 116, 111, 116, 195, 169, 99, 110, 105, 99, 97, 99, 111, 110, 106, 117, 110, 116, 111, 101, 110,
      101, 114, 103, 195, 173, 97, 116, 114, 97, 98, 97, 106, 97, 114, 97, 115, 116, 117, 114, 105, 97, 115, 114, 101, 99, 105, 101, 110, 116, 101, 117, 116,
      105, 108, 105, 122, 97, 114, 98, 111, 108, 101, 116, 195, 173, 110, 115, 97, 108, 118, 97, 100, 111, 114, 99, 111, 114, 114, 101, 99, 116, 97, 116, 114,
      97, 98, 97, 106, 111, 115, 112, 114, 105, 109, 101, 114, 111, 115, 110, 101, 103, 111, 99, 105, 111, 115, 108, 105, 98, 101, 114, 116, 97, 100, 100, 101,
      116, 97, 108, 108, 101, 115, 112, 97, 110, 116, 97, 108, 108, 97, 112, 114, 195, 179, 120, 105, 109, 111, 97, 108, 109, 101, 114, 195, 173, 97, 97, 110,
      105, 109, 97, 108, 101, 115, 113, 117, 105, 195, 169, 110, 101, 115, 99, 111, 114, 97, 122, 195, 179, 110, 115, 101, 99, 99, 105, 195, 179, 110, 98, 117,
      115, 99, 97, 110, 100, 111, 111, 112, 99, 105, 111, 110, 101, 115, 101, 120, 116, 101, 114, 105, 111, 114, 99, 111, 110, 99, 101, 112, 116, 111, 116, 111,
      100, 97, 118, 195, 173, 97, 103, 97, 108, 101, 114, 195, 173, 97, 101, 115, 99, 114, 105, 98, 105, 114, 109, 101, 100, 105, 99, 105, 110, 97, 108, 105,
      99, 101, 110, 99, 105, 97, 99, 111, 110, 115, 117, 108, 116, 97, 97, 115, 112, 101, 99, 116, 111, 115, 99, 114, 195, 173, 116, 105, 99, 97, 100, 195, 179,
      108, 97, 114, 101, 115, 106, 117, 115, 116, 105, 99, 105, 97, 100, 101, 98, 101, 114, 195, 161, 110, 112, 101, 114, 195, 173, 111, 100, 111, 110, 101, 99,
      101, 115, 105, 116, 97, 109, 97, 110, 116, 101, 110, 101, 114, 112, 101, 113, 117, 101, 195, 177, 111, 114, 101, 99, 105, 98, 105, 100, 97, 116, 114, 105,
      98, 117, 110, 97, 108, 116, 101, 110, 101, 114, 105, 102, 101, 99, 97, 110, 99, 105, 195, 179, 110, 99, 97, 110, 97, 114, 105, 97, 115, 100, 101, 115, 99,
      97, 114, 103, 97, 100, 105, 118, 101, 114, 115, 111, 115, 109, 97, 108, 108, 111, 114, 99, 97, 114, 101, 113, 117, 105, 101, 114, 101, 116, 195, 169, 99,
      110, 105, 99, 111, 100, 101, 98, 101, 114, 195, 173, 97, 118, 105, 118, 105, 101, 110, 100, 97, 102, 105, 110, 97, 110, 122, 97, 115, 97, 100, 101, 108,
      97, 110, 116, 101, 102, 117, 110, 99, 105, 111, 110, 97, 99, 111, 110, 115, 101, 106, 111, 115, 100, 105, 102, 195, 173, 99, 105, 108, 99, 105, 117, 100,
      97, 100, 101, 115, 97, 110, 116, 105, 103, 117, 97, 115, 97, 118, 97, 110, 122, 97, 100, 97, 116, 195, 169, 114, 109, 105, 110, 111, 117, 110, 105, 100,
      97, 100, 101, 115, 115, 195, 161, 110, 99, 104, 101, 122, 99, 97, 109, 112, 97, 195, 177, 97, 115, 111, 102, 116, 111, 110, 105, 99, 114, 101, 118, 105,
      115, 116, 97, 115, 99, 111, 110, 116, 105, 101, 110, 101, 115, 101, 99, 116, 111, 114, 101, 115, 109, 111, 109, 101, 110, 116, 111, 115, 102, 97, 99, 117,
      108, 116, 97, 100, 99, 114, 195, 169, 100, 105, 116, 111, 100, 105, 118, 101, 114, 115, 97, 115, 115, 117, 112, 117, 101, 115, 116, 111, 102, 97, 99, 116,
      111, 114, 101, 115, 115, 101, 103, 117, 110, 100, 111, 115, 112, 101, 113, 117, 101, 195, 177, 97, 208, 179, 208, 190, 208, 180, 208, 176, 208, 181, 209,
      129, 208, 187, 208, 184, 208, 181, 209, 129, 209, 130, 209, 140, 208, 177, 209, 139, 208, 187, 208, 190, 208, 177, 209, 139, 209, 130, 209, 140, 209, 141,
      209, 130, 208, 190, 208, 188, 208, 149, 209, 129, 208, 187, 208, 184, 209, 130, 208, 190, 208, 179, 208, 190, 208, 188, 208, 181, 208, 189, 209, 143, 208,
      178, 209, 129, 208, 181, 209, 133, 209, 141, 209, 130, 208, 190, 208, 185, 208, 180, 208, 176, 208, 182, 208, 181, 208, 177, 209, 139, 208, 187, 208, 184,
      208, 179, 208, 190, 208, 180, 209, 131, 208, 180, 208, 181, 208, 189, 209, 140, 209, 141, 209, 130, 208, 190, 209, 130, 208, 177, 209, 139, 208, 187, 208,
      176, 209, 129, 208, 181, 208, 177, 209, 143, 208, 190, 208, 180, 208, 184, 208, 189, 209, 129, 208, 181, 208, 177, 208, 181, 208, 189, 208, 176, 208, 180,
      208, 190, 209, 129, 208, 176, 208, 185, 209, 130, 209, 132, 208, 190, 209, 130, 208, 190, 208, 189, 208, 181, 208, 179, 208, 190, 209, 129, 208, 178, 208,
      190, 208, 184, 209, 129, 208, 178, 208, 190, 208, 185, 208, 184, 208, 179, 209, 128, 209, 139, 209, 130, 208, 190, 208, 182, 208, 181, 208, 178, 209, 129,
      208, 181, 208, 188, 209, 129, 208, 178, 208, 190, 209, 142, 208, 187, 208, 184, 209, 136, 209, 140, 209, 141, 209, 130, 208, 184, 209, 133, 208, 191, 208,
      190, 208, 186, 208, 176, 208, 180, 208, 189, 208, 181, 208, 185, 208, 180, 208, 190, 208, 188, 208, 176, 208, 188, 208, 184, 209, 128, 208, 176, 208, 187,
      208, 184, 208, 177, 208, 190, 209, 130, 208, 181, 208, 188, 209, 131, 209, 133, 208, 190, 209, 130, 209, 143, 208, 180, 208, 178, 209, 131, 209, 133, 209,
      129, 208, 181, 209, 130, 208, 184, 208, 187, 209, 142, 208, 180, 208, 184, 208, 180, 208, 181, 208, 187, 208, 190, 208, 188, 208, 184, 209, 128, 208, 181,
      209, 130, 208, 181, 208, 177, 209, 143, 209, 129, 208, 178, 208, 190, 208, 181, 208, 178, 208, 184, 208, 180, 208, 181, 209, 135, 208, 181, 208, 179, 208,
      190, 209, 141, 209, 130, 208, 184, 208, 188, 209, 129, 209, 135, 208, 181, 209, 130, 209, 130, 208, 181, 208, 188, 209, 139, 209, 134, 208, 181, 208, 189,
      209, 139, 209, 129, 209, 130, 208, 176, 208, 187, 208, 178, 208, 181, 208, 180, 209, 140, 209, 130, 208, 181, 208, 188, 208, 181, 208, 178, 208, 190, 208,
      180, 209, 139, 209, 130, 208, 181, 208, 177, 208, 181, 208, 178, 209, 139, 209, 136, 208, 181, 208, 189, 208, 176, 208, 188, 208, 184, 209, 130, 208, 184,
      208, 191, 208, 176, 209, 130, 208, 190, 208, 188, 209, 131, 208, 191, 209, 128, 208, 176, 208, 178, 208, 187, 208, 184, 209, 134, 208, 176, 208, 190, 208,
      180, 208, 189, 208, 176, 208, 179, 208, 190, 208, 180, 209, 139, 208, 183, 208, 189, 208, 176, 209, 142, 208, 188, 208, 190, 208, 179, 209, 131, 208, 180,
      209, 128, 209, 131, 208, 179, 208, 178, 209, 129, 208, 181, 208, 185, 208, 184, 208, 180, 208, 181, 209, 130, 208, 186, 208, 184, 208, 189, 208, 190, 208,
      190, 208, 180, 208, 189, 208, 190, 208, 180, 208, 181, 208, 187, 208, 176, 208, 180, 208, 181, 208, 187, 208, 181, 209, 129, 209, 128, 208, 190, 208, 186,
      208, 184, 209, 142, 208, 189, 209, 143, 208, 178, 208, 181, 209, 129, 209, 140, 208, 149, 209, 129, 209, 130, 209, 140, 209, 128, 208, 176, 208, 183, 208,
      176, 208, 189, 208, 176, 209, 136, 208, 184, 216, 167, 217, 132, 217, 132, 217, 135, 216, 167, 217, 132, 216, 170, 217, 138, 216, 172, 217, 133, 217, 138,
      216, 185, 216, 174, 216, 167, 216, 181, 216, 169, 216, 167, 217, 132, 216, 176, 217, 138, 216, 185, 217, 132, 217, 138, 217, 135, 216, 172, 216, 175, 217,
      138, 216, 175, 216, 167, 217, 132, 216, 162, 217, 134, 216, 167, 217, 132, 216, 177, 216, 175, 216, 170, 216, 173, 217, 131, 217, 133, 216, 181, 217, 129,
      216, 173, 216, 169, 217, 131, 216, 167, 217, 134, 216, 170, 216, 167, 217, 132, 217, 132, 217, 138, 217, 138, 217, 131, 217, 136, 217, 134, 216, 180, 216,
      168, 217, 131, 216, 169, 217, 129, 217, 138, 217, 135, 216, 167, 216, 168, 217, 134, 216, 167, 216, 170, 216, 173, 217, 136, 216, 167, 216, 161, 216, 163,
      217, 131, 216, 171, 216, 177, 216, 174, 217, 132, 216, 167, 217, 132, 216, 167, 217, 132, 216, 173, 216, 168, 216, 175, 217, 132, 217, 138, 217, 132, 216,
      175, 216, 177, 217, 136, 216, 179, 216, 167, 216, 182, 216, 186, 216, 183, 216, 170, 217, 131, 217, 136, 217, 134, 217, 135, 217, 134, 216, 167, 217, 131,
      216, 179, 216, 167, 216, 173, 216, 169, 217, 134, 216, 167, 216, 175, 217, 138, 216, 167, 217, 132, 216, 183, 216, 168, 216, 185, 217, 132, 217, 138, 217,
      131, 216, 180, 217, 131, 216, 177, 216, 167, 217, 138, 217, 133, 217, 131, 217, 134, 217, 133, 217, 134, 217, 135, 216, 167, 216, 180, 216, 177, 217, 131,
      216, 169, 216, 177, 216, 166, 217, 138, 216, 179, 217, 134, 216, 180, 217, 138, 216, 183, 217, 133, 216, 167, 216, 176, 216, 167, 216, 167, 217, 132, 217,
      129, 217, 134, 216, 180, 216, 168, 216, 167, 216, 168, 216, 170, 216, 185, 216, 168, 216, 177, 216, 177, 216, 173, 217, 133, 216, 169, 217, 131, 216, 167,
      217, 129, 216, 169, 217, 138, 217, 130, 217, 136, 217, 132, 217, 133, 216, 177, 217, 131, 216, 178, 217, 131, 217, 132, 217, 133, 216, 169, 216, 163, 216,
      173, 217, 133, 216, 175, 217, 130, 217, 132, 216, 168, 217, 138, 217, 138, 216, 185, 217, 134, 217, 138, 216, 181, 217, 136, 216, 177, 216, 169, 216, 183,
      216, 177, 217, 138, 217, 130, 216, 180, 216, 167, 216, 177, 217, 131, 216, 172, 217, 136, 216, 167, 217, 132, 216, 163, 216, 174, 216, 177, 217, 137, 217,
      133, 216, 185, 217, 134, 216, 167, 216, 167, 216, 168, 216, 173, 216, 171, 216, 185, 216, 177, 217, 136, 216, 182, 216, 168, 216, 180, 217, 131, 217, 132,
      217, 133, 216, 179, 216, 172, 217, 132, 216, 168, 217, 134, 216, 167, 217, 134, 216, 174, 216, 167, 217, 132, 216, 175, 217, 131, 216, 170, 216, 167, 216,
      168, 217, 131, 217, 132, 217, 138, 216, 169, 216, 168, 216, 175, 217, 136, 217, 134, 216, 163, 217, 138, 216, 182, 216, 167, 217, 138, 217, 136, 216, 172,
      216, 175, 217, 129, 216, 177, 217, 138, 217, 130, 217, 131, 216, 170, 216, 168, 216, 170, 216, 163, 217, 129, 216, 182, 217, 132, 217, 133, 216, 183, 216,
      168, 216, 174, 216, 167, 217, 131, 216, 171, 216, 177, 216, 168, 216, 167, 216, 177, 217, 131, 216, 167, 217, 129, 216, 182, 217, 132, 216, 167, 216, 173,
      217, 132, 217, 137, 217, 134, 217, 129, 216, 179, 217, 135, 216, 163, 217, 138, 216, 167, 217, 133, 216, 177, 216, 175, 217, 136, 216, 175, 216, 163, 217,
      134, 217, 135, 216, 167, 216, 175, 217, 138, 217, 134, 216, 167, 216, 167, 217, 132, 216, 167, 217, 134, 217, 133, 216, 185, 216, 177, 216, 182, 216, 170,
      216, 185, 217, 132, 217, 133, 216, 175, 216, 167, 216, 174, 217, 132, 217, 133, 217, 133, 217, 131, 217, 134, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
      0, 2, 0, 2, 0, 2, 0, 2, 0, 4, 0, 4, 0, 4, 0, 4, 0, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10,
      9, 8, 16, 17, 18, 19, 20, 21, 22, 23, 23, 22, 21, 20, 19, 18, 17, 16, 24, 25, 26, 27, 28, 29, 30, 31, 31, 30, 29, 28, 27, 26, 25, 24, 255, 255, 255, 255,
      0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 255, 255, 0, 1, 0, 0, 0, 1, 0, 0, 255,
      255, 0, 1, 0, 0, 0, 8, 0, 8, 0, 8, 0, 8, 0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 114, 101, 115, 111, 117, 114, 99, 101, 115, 99, 111, 117, 110,
      116, 114, 105, 101, 115, 113, 117, 101, 115, 116, 105, 111, 110, 115, 101, 113, 117, 105, 112, 109, 101, 110, 116, 99, 111, 109, 109, 117, 110, 105, 116,
      121, 97, 118, 97, 105, 108, 97, 98, 108, 101, 104, 105, 103, 104, 108, 105, 103, 104, 116, 68, 84, 68, 47, 120, 104, 116, 109, 108, 109, 97, 114, 107,
      101, 116, 105, 110, 103, 107, 110, 111, 119, 108, 101, 100, 103, 101, 115, 111, 109, 101, 116, 104, 105, 110, 103, 99, 111, 110, 116, 97, 105, 110, 101,
      114, 100, 105, 114, 101, 99, 116, 105, 111, 110, 115, 117, 98, 115, 99, 114, 105, 98, 101, 97, 100, 118, 101, 114, 116, 105, 115, 101, 99, 104, 97, 114,
      97, 99, 116, 101, 114, 34, 32, 118, 97, 108, 117, 101, 61, 34, 60, 47, 115, 101, 108, 101, 99, 116, 62, 65, 117, 115, 116, 114, 97, 108, 105, 97, 34, 32,
      99, 108, 97, 115, 115, 61, 34, 115, 105, 116, 117, 97, 116, 105, 111, 110, 97, 117, 116, 104, 111, 114, 105, 116, 121, 102, 111, 108, 108, 111, 119, 105,
      110, 103, 112, 114, 105, 109, 97, 114, 105, 108, 121, 111, 112, 101, 114, 97, 116, 105, 111, 110, 99, 104, 97, 108, 108, 101, 110, 103, 101, 100, 101,
      118, 101, 108, 111, 112, 101, 100, 97, 110, 111, 110, 121, 109, 111, 117, 115, 102, 117, 110, 99, 116, 105, 111, 110, 32, 102, 117, 110, 99, 116, 105,
      111, 110, 115, 99, 111, 109, 112, 97, 110, 105, 101, 115, 115, 116, 114, 117, 99, 116, 117, 114, 101, 97, 103, 114, 101, 101, 109, 101, 110, 116, 34, 32,
      116, 105, 116, 108, 101, 61, 34, 112, 111, 116, 101, 110, 116, 105, 97, 108, 101, 100, 117, 99, 97, 116, 105, 111, 110, 97, 114, 103, 117, 109, 101, 110,
      116, 115, 115, 101, 99, 111, 110, 100, 97, 114, 121, 99, 111, 112, 121, 114, 105, 103, 104, 116, 108, 97, 110, 103, 117, 97, 103, 101, 115, 101, 120, 99,
      108, 117, 115, 105, 118, 101, 99, 111, 110, 100, 105, 116, 105, 111, 110, 60, 47, 102, 111, 114, 109, 62, 13, 10, 115, 116, 97, 116, 101, 109, 101, 110,
      116, 97, 116, 116, 101, 110, 116, 105, 111, 110, 66, 105, 111, 103, 114, 97, 112, 104, 121, 125, 32, 101, 108, 115, 101, 32, 123, 10, 115, 111, 108, 117,
      116, 105, 111, 110, 115, 119, 104, 101, 110, 32, 116, 104, 101, 32, 65, 110, 97, 108, 121, 116, 105, 99, 115, 116, 101, 109, 112, 108, 97, 116, 101, 115,
      100, 97, 110, 103, 101, 114, 111, 117, 115, 115, 97, 116, 101, 108, 108, 105, 116, 101, 100, 111, 99, 117, 109, 101, 110, 116, 115, 112, 117, 98, 108,
      105, 115, 104, 101, 114, 105, 109, 112, 111, 114, 116, 97, 110, 116, 112, 114, 111, 116, 111, 116, 121, 112, 101, 105, 110, 102, 108, 117, 101, 110, 99,
      101, 38, 114, 97, 113, 117, 111, 59, 60, 47, 101, 102, 102, 101, 99, 116, 105, 118, 101, 103, 101, 110, 101, 114, 97, 108, 108, 121, 116, 114, 97, 110,
      115, 102, 111, 114, 109, 98, 101, 97, 117, 116, 105, 102, 117, 108, 116, 114, 97, 110, 115, 112, 111, 114, 116, 111, 114, 103, 97, 110, 105, 122, 101,
      100, 112, 117, 98, 108, 105, 115, 104, 101, 100, 112, 114, 111, 109, 105, 110, 101, 110, 116, 117, 110, 116, 105, 108, 32, 116, 104, 101, 116, 104, 117,
      109, 98, 110, 97, 105, 108, 78, 97, 116, 105, 111, 110, 97, 108, 32, 46, 102, 111, 99, 117, 115, 40, 41, 59, 111, 118, 101, 114, 32, 116, 104, 101, 32,
      109, 105, 103, 114, 97, 116, 105, 111, 110, 97, 110, 110, 111, 117, 110, 99, 101, 100, 102, 111, 111, 116, 101, 114, 34, 62, 10, 101, 120, 99, 101, 112,
      116, 105, 111, 110, 108, 101, 115, 115, 32, 116, 104, 97, 110, 101, 120, 112, 101, 110, 115, 105, 118, 101, 102, 111, 114, 109, 97, 116, 105, 111, 110,
      102, 114, 97, 109, 101, 119, 111, 114, 107, 116, 101, 114, 114, 105, 116, 111, 114, 121, 110, 100, 105, 99, 97, 116, 105, 111, 110, 99, 117, 114, 114,
      101, 110, 116, 108, 121, 99, 108, 97, 115, 115, 78, 97, 109, 101, 99, 114, 105, 116, 105, 99, 105, 115, 109, 116, 114, 97, 100, 105, 116, 105, 111, 110,
      101, 108, 115, 101, 119, 104, 101, 114, 101, 65, 108, 101, 120, 97, 110, 100, 101, 114, 97, 112, 112, 111, 105, 110, 116, 101, 100, 109, 97, 116, 101,
      114, 105, 97, 108, 115, 98, 114, 111, 97, 100, 99, 97, 115, 116, 109, 101, 110, 116, 105, 111, 110, 101, 100, 97, 102, 102, 105, 108, 105, 97, 116, 101,
      60, 47, 111, 112, 116, 105, 111, 110, 62, 116, 114, 101, 97, 116, 109, 101, 110, 116, 100, 105, 102, 102, 101, 114, 101, 110, 116, 47, 100, 101, 102, 97,
      117, 108, 116, 46, 80, 114, 101, 115, 105, 100, 101, 110, 116, 111, 110, 99, 108, 105, 99, 107, 61, 34, 98, 105, 111, 103, 114, 97, 112, 104, 121, 111,
      116, 104, 101, 114, 119, 105, 115, 101, 112, 101, 114, 109, 97, 110, 101, 110, 116, 70, 114, 97, 110, 195, 167, 97, 105, 115, 72, 111, 108, 108, 121, 119,
      111, 111, 100, 101, 120, 112, 97, 110, 115, 105, 111, 110, 115, 116, 97, 110, 100, 97, 114, 100, 115, 60, 47, 115, 116, 121, 108, 101, 62, 10, 114, 101,
      100, 117, 99, 116, 105, 111, 110, 68, 101, 99, 101, 109, 98, 101, 114, 32, 112, 114, 101, 102, 101, 114, 114, 101, 100, 67, 97, 109, 98, 114, 105, 100,
      103, 101, 111, 112, 112, 111, 110, 101, 110, 116, 115, 66, 117, 115, 105, 110, 101, 115, 115, 32, 99, 111, 110, 102, 117, 115, 105, 111, 110, 62, 10, 60,
      116, 105, 116, 108, 101, 62, 112, 114, 101, 115, 101, 110, 116, 101, 100, 101, 120, 112, 108, 97, 105, 110, 101, 100, 100, 111, 101, 115, 32, 110, 111,
      116, 32, 119, 111, 114, 108, 100, 119, 105, 100, 101, 105, 110, 116, 101, 114, 102, 97, 99, 101, 112, 111, 115, 105, 116, 105, 111, 110, 115, 110, 101,
      119, 115, 112, 97, 112, 101, 114, 60, 47, 116, 97, 98, 108, 101, 62, 10, 109, 111, 117, 110, 116, 97, 105, 110, 115, 108, 105, 107, 101, 32, 116, 104,
      101, 32, 101, 115, 115, 101, 110, 116, 105, 97, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108, 115, 101, 108, 101, 99, 116, 105, 111, 110, 97, 99, 116,
      105, 111, 110, 61, 34, 47, 97, 98, 97, 110, 100, 111, 110, 101, 100, 69, 100, 117, 99, 97, 116, 105, 111, 110, 112, 97, 114, 115, 101, 73, 110, 116, 40,
      115, 116, 97, 98, 105, 108, 105, 116, 121, 117, 110, 97, 98, 108, 101, 32, 116, 111, 60, 47, 116, 105, 116, 108, 101, 62, 10, 114, 101, 108, 97, 116, 105,
      111, 110, 115, 78, 111, 116, 101, 32, 116, 104, 97, 116, 101, 102, 102, 105, 99, 105, 101, 110, 116, 112, 101, 114, 102, 111, 114, 109, 101, 100, 116,
      119, 111, 32, 121, 101, 97, 114, 115, 83, 105, 110, 99, 101, 32, 116, 104, 101, 116, 104, 101, 114, 101, 102, 111, 114, 101, 119, 114, 97, 112, 112, 101,
      114, 34, 62, 97, 108, 116, 101, 114, 110, 97, 116, 101, 105, 110, 99, 114, 101, 97, 115, 101, 100, 66, 97, 116, 116, 108, 101, 32, 111, 102, 112, 101,
      114, 99, 101, 105, 118, 101, 100, 116, 114, 121, 105, 110, 103, 32, 116, 111, 110, 101, 99, 101, 115, 115, 97, 114, 121, 112, 111, 114, 116, 114, 97, 121,
      101, 100, 101, 108, 101, 99, 116, 105, 111, 110, 115, 69, 108, 105, 122, 97, 98, 101, 116, 104, 60, 47, 105, 102, 114, 97, 109, 101, 62, 100, 105, 115,
      99, 111, 118, 101, 114, 121, 105, 110, 115, 117, 114, 97, 110, 99, 101, 115, 46, 108, 101, 110, 103, 116, 104, 59, 108, 101, 103, 101, 110, 100, 97, 114,
      121, 71, 101, 111, 103, 114, 97, 112, 104, 121, 99, 97, 110, 100, 105, 100, 97, 116, 101, 99, 111, 114, 112, 111, 114, 97, 116, 101, 115, 111, 109, 101,
      116, 105, 109, 101, 115, 115, 101, 114, 118, 105, 99, 101, 115, 46, 105, 110, 104, 101, 114, 105, 116, 101, 100, 60, 47, 115, 116, 114, 111, 110, 103, 62,
      67, 111, 109, 109, 117, 110, 105, 116, 121, 114, 101, 108, 105, 103, 105, 111, 117, 115, 108, 111, 99, 97, 116, 105, 111, 110, 115, 67, 111, 109, 109,
      105, 116, 116, 101, 101, 98, 117, 105, 108, 100, 105, 110, 103, 115, 116, 104, 101, 32, 119, 111, 114, 108, 100, 110, 111, 32, 108, 111, 110, 103, 101,
      114, 98, 101, 103, 105, 110, 110, 105, 110, 103, 114, 101, 102, 101, 114, 101, 110, 99, 101, 99, 97, 110, 110, 111, 116, 32, 98, 101, 102, 114, 101, 113,
      117, 101, 110, 99, 121, 116, 121, 112, 105, 99, 97, 108, 108, 121, 105, 110, 116, 111, 32, 116, 104, 101, 32, 114, 101, 108, 97, 116, 105, 118, 101, 59,
      114, 101, 99, 111, 114, 100, 105, 110, 103, 112, 114, 101, 115, 105, 100, 101, 110, 116, 105, 110, 105, 116, 105, 97, 108, 108, 121, 116, 101, 99, 104,
      110, 105, 113, 117, 101, 116, 104, 101, 32, 111, 116, 104, 101, 114, 105, 116, 32, 99, 97, 110, 32, 98, 101, 101, 120, 105, 115, 116, 101, 110, 99, 101,
      117, 110, 100, 101, 114, 108, 105, 110, 101, 116, 104, 105, 115, 32, 116, 105, 109, 101, 116, 101, 108, 101, 112, 104, 111, 110, 101, 105, 116, 101, 109,
      115, 99, 111, 112, 101, 112, 114, 97, 99, 116, 105, 99, 101, 115, 97, 100, 118, 97, 110, 116, 97, 103, 101, 41, 59, 114, 101, 116, 117, 114, 110, 32, 70,
      111, 114, 32, 111, 116, 104, 101, 114, 112, 114, 111, 118, 105, 100, 105, 110, 103, 100, 101, 109, 111, 99, 114, 97, 99, 121, 98, 111, 116, 104, 32, 116,
      104, 101, 32, 101, 120, 116, 101, 110, 115, 105, 118, 101, 115, 117, 102, 102, 101, 114, 105, 110, 103, 115, 117, 112, 112, 111, 114, 116, 101, 100, 99,
      111, 109, 112, 117, 116, 101, 114, 115, 32, 102, 117, 110, 99, 116, 105, 111, 110, 112, 114, 97, 99, 116, 105, 99, 97, 108, 115, 97, 105, 100, 32, 116,
      104, 97, 116, 105, 116, 32, 109, 97, 121, 32, 98, 101, 69, 110, 103, 108, 105, 115, 104, 60, 47, 102, 114, 111, 109, 32, 116, 104, 101, 32, 115, 99, 104,
      101, 100, 117, 108, 101, 100, 100, 111, 119, 110, 108, 111, 97, 100, 115, 60, 47, 108, 97, 98, 101, 108, 62, 10, 115, 117, 115, 112, 101, 99, 116, 101,
      100, 109, 97, 114, 103, 105, 110, 58, 32, 48, 115, 112, 105, 114, 105, 116, 117, 97, 108, 60, 47, 104, 101, 97, 100, 62, 10, 10, 109, 105, 99, 114, 111,
      115, 111, 102, 116, 103, 114, 97, 100, 117, 97, 108, 108, 121, 100, 105, 115, 99, 117, 115, 115, 101, 100, 104, 101, 32, 98, 101, 99, 97, 109, 101, 101,
      120, 101, 99, 117, 116, 105, 118, 101, 106, 113, 117, 101, 114, 121, 46, 106, 115, 104, 111, 117, 115, 101, 104, 111, 108, 100, 99, 111, 110, 102, 105,
      114, 109, 101, 100, 112, 117, 114, 99, 104, 97, 115, 101, 100, 108, 105, 116, 101, 114, 97, 108, 108, 121, 100, 101, 115, 116, 114, 111, 121, 101, 100,
      117, 112, 32, 116, 111, 32, 116, 104, 101, 118, 97, 114, 105, 97, 116, 105, 111, 110, 114, 101, 109, 97, 105, 110, 105, 110, 103, 105, 116, 32, 105, 115,
      32, 110, 111, 116, 99, 101, 110, 116, 117, 114, 105, 101, 115, 74, 97, 112, 97, 110, 101, 115, 101, 32, 97, 109, 111, 110, 103, 32, 116, 104, 101, 99,
      111, 109, 112, 108, 101, 116, 101, 100, 97, 108, 103, 111, 114, 105, 116, 104, 109, 105, 110, 116, 101, 114, 101, 115, 116, 115, 114, 101, 98, 101, 108,
      108, 105, 111, 110, 117, 110, 100, 101, 102, 105, 110, 101, 100, 101, 110, 99, 111, 117, 114, 97, 103, 101, 114, 101, 115, 105, 122, 97, 98, 108, 101,
      105, 110, 118, 111, 108, 118, 105, 110, 103, 115, 101, 110, 115, 105, 116, 105, 118, 101, 117, 110, 105, 118, 101, 114, 115, 97, 108, 112, 114, 111, 118,
      105, 115, 105, 111, 110, 40, 97, 108, 116, 104, 111, 117, 103, 104, 102, 101, 97, 116, 117, 114, 105, 110, 103, 99, 111, 110, 100, 117, 99, 116, 101, 100,
      41, 44, 32, 119, 104, 105, 99, 104, 32, 99, 111, 110, 116, 105, 110, 117, 101, 100, 45, 104, 101, 97, 100, 101, 114, 34, 62, 70, 101, 98, 114, 117, 97,
      114, 121, 32, 110, 117, 109, 101, 114, 111, 117, 115, 32, 111, 118, 101, 114, 102, 108, 111, 119, 58, 99, 111, 109, 112, 111, 110, 101, 110, 116, 102,
      114, 97, 103, 109, 101, 110, 116, 115, 101, 120, 99, 101, 108, 108, 101, 110, 116, 99, 111, 108, 115, 112, 97, 110, 61, 34, 116, 101, 99, 104, 110, 105,
      99, 97, 108, 110, 101, 97, 114, 32, 116, 104, 101, 32, 65, 100, 118, 97, 110, 99, 101, 100, 32, 115, 111, 117, 114, 99, 101, 32, 111, 102, 101, 120, 112,
      114, 101, 115, 115, 101, 100, 72, 111, 110, 103, 32, 75, 111, 110, 103, 32, 70, 97, 99, 101, 98, 111, 111, 107, 109, 117, 108, 116, 105, 112, 108, 101,
      32, 109, 101, 99, 104, 97, 110, 105, 115, 109, 101, 108, 101, 118, 97, 116, 105, 111, 110, 111, 102, 102, 101, 110, 115, 105, 118, 101, 60, 47, 102, 111,
      114, 109, 62, 10, 9, 115, 112, 111, 110, 115, 111, 114, 101, 100, 100, 111, 99, 117, 109, 101, 110, 116, 46, 111, 114, 32, 38, 113, 117, 111, 116, 59,
      116, 104, 101, 114, 101, 32, 97, 114, 101, 116, 104, 111, 115, 101, 32, 119, 104, 111, 109, 111, 118, 101, 109, 101, 110, 116, 115, 112, 114, 111, 99,
      101, 115, 115, 101, 115, 100, 105, 102, 102, 105, 99, 117, 108, 116, 115, 117, 98, 109, 105, 116, 116, 101, 100, 114, 101, 99, 111, 109, 109, 101, 110,
      100, 99, 111, 110, 118, 105, 110, 99, 101, 100, 112, 114, 111, 109, 111, 116, 105, 110, 103, 34, 32, 119, 105, 100, 116, 104, 61, 34, 46, 114, 101, 112,
      108, 97, 99, 101, 40, 99, 108, 97, 115, 115, 105, 99, 97, 108, 99, 111, 97, 108, 105, 116, 105, 111, 110, 104, 105, 115, 32, 102, 105, 114, 115, 116, 100,
      101, 99, 105, 115, 105, 111, 110, 115, 97, 115, 115, 105, 115, 116, 97, 110, 116, 105, 110, 100, 105, 99, 97, 116, 101, 100, 101, 118, 111, 108, 117, 116,
      105, 111, 110, 45, 119, 114, 97, 112, 112, 101, 114, 34, 101, 110, 111, 117, 103, 104, 32, 116, 111, 97, 108, 111, 110, 103, 32, 116, 104, 101, 100, 101,
      108, 105, 118, 101, 114, 101, 100, 45, 45, 62, 13, 10, 60, 33, 45, 45, 65, 109, 101, 114, 105, 99, 97, 110, 32, 112, 114, 111, 116, 101, 99, 116, 101,
      100, 78, 111, 118, 101, 109, 98, 101, 114, 32, 60, 47, 115, 116, 121, 108, 101, 62, 60, 102, 117, 114, 110, 105, 116, 117, 114, 101, 73, 110, 116, 101,
      114, 110, 101, 116, 32, 32, 111, 110, 98, 108, 117, 114, 61, 34, 115, 117, 115, 112, 101, 110, 100, 101, 100, 114, 101, 99, 105, 112, 105, 101, 110, 116,
      98, 97, 115, 101, 100, 32, 111, 110, 32, 77, 111, 114, 101, 111, 118, 101, 114, 44, 97, 98, 111, 108, 105, 115, 104, 101, 100, 99, 111, 108, 108, 101, 99,
      116, 101, 100, 119, 101, 114, 101, 32, 109, 97, 100, 101, 101, 109, 111, 116, 105, 111, 110, 97, 108, 101, 109, 101, 114, 103, 101, 110, 99, 121, 110, 97,
      114, 114, 97, 116, 105, 118, 101, 97, 100, 118, 111, 99, 97, 116, 101, 115, 112, 120, 59, 98, 111, 114, 100, 101, 114, 99, 111, 109, 109, 105, 116, 116,
      101, 100, 100, 105, 114, 61, 34, 108, 116, 114, 34, 101, 109, 112, 108, 111, 121, 101, 101, 115, 114, 101, 115, 101, 97, 114, 99, 104, 46, 32, 115, 101,
      108, 101, 99, 116, 101, 100, 115, 117, 99, 99, 101, 115, 115, 111, 114, 99, 117, 115, 116, 111, 109, 101, 114, 115, 100, 105, 115, 112, 108, 97, 121, 101,
      100, 83, 101, 112, 116, 101, 109, 98, 101, 114, 97, 100, 100, 67, 108, 97, 115, 115, 40, 70, 97, 99, 101, 98, 111, 111, 107, 32, 115, 117, 103, 103, 101,
      115, 116, 101, 100, 97, 110, 100, 32, 108, 97, 116, 101, 114, 111, 112, 101, 114, 97, 116, 105, 110, 103, 101, 108, 97, 98, 111, 114, 97, 116, 101, 83,
      111, 109, 101, 116, 105, 109, 101, 115, 73, 110, 115, 116, 105, 116, 117, 116, 101, 99, 101, 114, 116, 97, 105, 110, 108, 121, 105, 110, 115, 116, 97,
      108, 108, 101, 100, 102, 111, 108, 108, 111, 119, 101, 114, 115, 74, 101, 114, 117, 115, 97, 108, 101, 109, 116, 104, 101, 121, 32, 104, 97, 118, 101, 99,
      111, 109, 112, 117, 116, 105, 110, 103, 103, 101, 110, 101, 114, 97, 116, 101, 100, 112, 114, 111, 118, 105, 110, 99, 101, 115, 103, 117, 97, 114, 97,
      110, 116, 101, 101, 97, 114, 98, 105, 116, 114, 97, 114, 121, 114, 101, 99, 111, 103, 110, 105, 122, 101, 119, 97, 110, 116, 101, 100, 32, 116, 111, 112,
      120, 59, 119, 105, 100, 116, 104, 58, 116, 104, 101, 111, 114, 121, 32, 111, 102, 98, 101, 104, 97, 118, 105, 111, 117, 114, 87, 104, 105, 108, 101, 32,
      116, 104, 101, 101, 115, 116, 105, 109, 97, 116, 101, 100, 98, 101, 103, 97, 110, 32, 116, 111, 32, 105, 116, 32, 98, 101, 99, 97, 109, 101, 109, 97, 103,
      110, 105, 116, 117, 100, 101, 109, 117, 115, 116, 32, 104, 97, 118, 101, 109, 111, 114, 101, 32, 116, 104, 97, 110, 68, 105, 114, 101, 99, 116, 111, 114,
      121, 101, 120, 116, 101, 110, 115, 105, 111, 110, 115, 101, 99, 114, 101, 116, 97, 114, 121, 110, 97, 116, 117, 114, 97, 108, 108, 121, 111, 99, 99, 117,
      114, 114, 105, 110, 103, 118, 97, 114, 105, 97, 98, 108, 101, 115, 103, 105, 118, 101, 110, 32, 116, 104, 101, 112, 108, 97, 116, 102, 111, 114, 109, 46,
      60, 47, 108, 97, 98, 101, 108, 62, 60, 102, 97, 105, 108, 101, 100, 32, 116, 111, 99, 111, 109, 112, 111, 117, 110, 100, 115, 107, 105, 110, 100, 115, 32,
      111, 102, 32, 115, 111, 99, 105, 101, 116, 105, 101, 115, 97, 108, 111, 110, 103, 115, 105, 100, 101, 32, 45, 45, 38, 103, 116, 59, 10, 10, 115, 111, 117,
      116, 104, 119, 101, 115, 116, 116, 104, 101, 32, 114, 105, 103, 104, 116, 114, 97, 100, 105, 97, 116, 105, 111, 110, 109, 97, 121, 32, 104, 97, 118, 101,
      32, 117, 110, 101, 115, 99, 97, 112, 101, 40, 115, 112, 111, 107, 101, 110, 32, 105, 110, 34, 32, 104, 114, 101, 102, 61, 34, 47, 112, 114, 111, 103, 114,
      97, 109, 109, 101, 111, 110, 108, 121, 32, 116, 104, 101, 32, 99, 111, 109, 101, 32, 102, 114, 111, 109, 100, 105, 114, 101, 99, 116, 111, 114, 121, 98,
      117, 114, 105, 101, 100, 32, 105, 110, 97, 32, 115, 105, 109, 105, 108, 97, 114, 116, 104, 101, 121, 32, 119, 101, 114, 101, 60, 47, 102, 111, 110, 116,
      62, 60, 47, 78, 111, 114, 119, 101, 103, 105, 97, 110, 115, 112, 101, 99, 105, 102, 105, 101, 100, 112, 114, 111, 100, 117, 99, 105, 110, 103, 112, 97,
      115, 115, 101, 110, 103, 101, 114, 40, 110, 101, 119, 32, 68, 97, 116, 101, 116, 101, 109, 112, 111, 114, 97, 114, 121, 102, 105, 99, 116, 105, 111, 110,
      97, 108, 65, 102, 116, 101, 114, 32, 116, 104, 101, 101, 113, 117, 97, 116, 105, 111, 110, 115, 100, 111, 119, 110, 108, 111, 97, 100, 46, 114, 101, 103,
      117, 108, 97, 114, 108, 121, 100, 101, 118, 101, 108, 111, 112, 101, 114, 97, 98, 111, 118, 101, 32, 116, 104, 101, 108, 105, 110, 107, 101, 100, 32, 116,
      111, 112, 104, 101, 110, 111, 109, 101, 110, 97, 112, 101, 114, 105, 111, 100, 32, 111, 102, 116, 111, 111, 108, 116, 105, 112, 34, 62, 115, 117, 98, 115,
      116, 97, 110, 99, 101, 97, 117, 116, 111, 109, 97, 116, 105, 99, 97, 115, 112, 101, 99, 116, 32, 111, 102, 65, 109, 111, 110, 103, 32, 116, 104, 101, 99,
      111, 110, 110, 101, 99, 116, 101, 100, 101, 115, 116, 105, 109, 97, 116, 101, 115, 65, 105, 114, 32, 70, 111, 114, 99, 101, 115, 121, 115, 116, 101, 109,
      32, 111, 102, 111, 98, 106, 101, 99, 116, 105, 118, 101, 105, 109, 109, 101, 100, 105, 97, 116, 101, 109, 97, 107, 105, 110, 103, 32, 105, 116, 112, 97,
      105, 110, 116, 105, 110, 103, 115, 99, 111, 110, 113, 117, 101, 114, 101, 100, 97, 114, 101, 32, 115, 116, 105, 108, 108, 112, 114, 111, 99, 101, 100,
      117, 114, 101, 103, 114, 111, 119, 116, 104, 32, 111, 102, 104, 101, 97, 100, 101, 100, 32, 98, 121, 69, 117, 114, 111, 112, 101, 97, 110, 32, 100, 105,
      118, 105, 115, 105, 111, 110, 115, 109, 111, 108, 101, 99, 117, 108, 101, 115, 102, 114, 97, 110, 99, 104, 105, 115, 101, 105, 110, 116, 101, 110, 116,
      105, 111, 110, 97, 116, 116, 114, 97, 99, 116, 101, 100, 99, 104, 105, 108, 100, 104, 111, 111, 100, 97, 108, 115, 111, 32, 117, 115, 101, 100, 100, 101,
      100, 105, 99, 97, 116, 101, 100, 115, 105, 110, 103, 97, 112, 111, 114, 101, 100, 101, 103, 114, 101, 101, 32, 111, 102, 102, 97, 116, 104, 101, 114, 32,
      111, 102, 99, 111, 110, 102, 108, 105, 99, 116, 115, 60, 47, 97, 62, 60, 47, 112, 62, 10, 99, 97, 109, 101, 32, 102, 114, 111, 109, 119, 101, 114, 101,
      32, 117, 115, 101, 100, 110, 111, 116, 101, 32, 116, 104, 97, 116, 114, 101, 99, 101, 105, 118, 105, 110, 103, 69, 120, 101, 99, 117, 116, 105, 118, 101,
      101, 118, 101, 110, 32, 109, 111, 114, 101, 97, 99, 99, 101, 115, 115, 32, 116, 111, 99, 111, 109, 109, 97, 110, 100, 101, 114, 80, 111, 108, 105, 116,
      105, 99, 97, 108, 109, 117, 115, 105, 99, 105, 97, 110, 115, 100, 101, 108, 105, 99, 105, 111, 117, 115, 112, 114, 105, 115, 111, 110, 101, 114, 115, 97,
      100, 118, 101, 110, 116, 32, 111, 102, 85, 84, 70, 45, 56, 34, 32, 47, 62, 60, 33, 91, 67, 68, 65, 84, 65, 91, 34, 62, 67, 111, 110, 116, 97, 99, 116, 83,
      111, 117, 116, 104, 101, 114, 110, 32, 98, 103, 99, 111, 108, 111, 114, 61, 34, 115, 101, 114, 105, 101, 115, 32, 111, 102, 46, 32, 73, 116, 32, 119, 97,
      115, 32, 105, 110, 32, 69, 117, 114, 111, 112, 101, 112, 101, 114, 109, 105, 116, 116, 101, 100, 118, 97, 108, 105, 100, 97, 116, 101, 46, 97, 112, 112,
      101, 97, 114, 105, 110, 103, 111, 102, 102, 105, 99, 105, 97, 108, 115, 115, 101, 114, 105, 111, 117, 115, 108, 121, 45, 108, 97, 110, 103, 117, 97, 103,
      101, 105, 110, 105, 116, 105, 97, 116, 101, 100, 101, 120, 116, 101, 110, 100, 105, 110, 103, 108, 111, 110, 103, 45, 116, 101, 114, 109, 105, 110, 102,
      108, 97, 116, 105, 111, 110, 115, 117, 99, 104, 32, 116, 104, 97, 116, 103, 101, 116, 67, 111, 111, 107, 105, 101, 109, 97, 114, 107, 101, 100, 32, 98,
      121, 60, 47, 98, 117, 116, 116, 111, 110, 62, 105, 109, 112, 108, 101, 109, 101, 110, 116, 98, 117, 116, 32, 105, 116, 32, 105, 115, 105, 110, 99, 114,
      101, 97, 115, 101, 115, 100, 111, 119, 110, 32, 116, 104, 101, 32, 114, 101, 113, 117, 105, 114, 105, 110, 103, 100, 101, 112, 101, 110, 100, 101, 110,
      116, 45, 45, 62, 10, 60, 33, 45, 45, 32, 105, 110, 116, 101, 114, 118, 105, 101, 119, 87, 105, 116, 104, 32, 116, 104, 101, 32, 99, 111, 112, 105, 101,
      115, 32, 111, 102, 99, 111, 110, 115, 101, 110, 115, 117, 115, 119, 97, 115, 32, 98, 117, 105, 108, 116, 86, 101, 110, 101, 122, 117, 101, 108, 97, 40,
      102, 111, 114, 109, 101, 114, 108, 121, 116, 104, 101, 32, 115, 116, 97, 116, 101, 112, 101, 114, 115, 111, 110, 110, 101, 108, 115, 116, 114, 97, 116,
      101, 103, 105, 99, 102, 97, 118, 111, 117, 114, 32, 111, 102, 105, 110, 118, 101, 110, 116, 105, 111, 110, 87, 105, 107, 105, 112, 101, 100, 105, 97, 99,
      111, 110, 116, 105, 110, 101, 110, 116, 118, 105, 114, 116, 117, 97, 108, 108, 121, 119, 104, 105, 99, 104, 32, 119, 97, 115, 112, 114, 105, 110, 99, 105,
      112, 108, 101, 67, 111, 109, 112, 108, 101, 116, 101, 32, 105, 100, 101, 110, 116, 105, 99, 97, 108, 115, 104, 111, 119, 32, 116, 104, 97, 116, 112, 114,
      105, 109, 105, 116, 105, 118, 101, 97, 119, 97, 121, 32, 102, 114, 111, 109, 109, 111, 108, 101, 99, 117, 108, 97, 114, 112, 114, 101, 99, 105, 115, 101,
      108, 121, 100, 105, 115, 115, 111, 108, 118, 101, 100, 85, 110, 100, 101, 114, 32, 116, 104, 101, 118, 101, 114, 115, 105, 111, 110, 61, 34, 62, 38, 110,
      98, 115, 112, 59, 60, 47, 73, 116, 32, 105, 115, 32, 116, 104, 101, 32, 84, 104, 105, 115, 32, 105, 115, 32, 119, 105, 108, 108, 32, 104, 97, 118, 101,
      111, 114, 103, 97, 110, 105, 115, 109, 115, 115, 111, 109, 101, 32, 116, 105, 109, 101, 70, 114, 105, 101, 100, 114, 105, 99, 104, 119, 97, 115, 32, 102,
      105, 114, 115, 116, 116, 104, 101, 32, 111, 110, 108, 121, 32, 102, 97, 99, 116, 32, 116, 104, 97, 116, 102, 111, 114, 109, 32, 105, 100, 61, 34, 112,
      114, 101, 99, 101, 100, 105, 110, 103, 84, 101, 99, 104, 110, 105, 99, 97, 108, 112, 104, 121, 115, 105, 99, 105, 115, 116, 111, 99, 99, 117, 114, 115,
      32, 105, 110, 110, 97, 118, 105, 103, 97, 116, 111, 114, 115, 101, 99, 116, 105, 111, 110, 34, 62, 115, 112, 97, 110, 32, 105, 100, 61, 34, 115, 111, 117,
      103, 104, 116, 32, 116, 111, 98, 101, 108, 111, 119, 32, 116, 104, 101, 115, 117, 114, 118, 105, 118, 105, 110, 103, 125, 60, 47, 115, 116, 121, 108, 101,
      62, 104, 105, 115, 32, 100, 101, 97, 116, 104, 97, 115, 32, 105, 110, 32, 116, 104, 101, 99, 97, 117, 115, 101, 100, 32, 98, 121, 112, 97, 114, 116, 105,
      97, 108, 108, 121, 101, 120, 105, 115, 116, 105, 110, 103, 32, 117, 115, 105, 110, 103, 32, 116, 104, 101, 119, 97, 115, 32, 103, 105, 118, 101, 110, 97,
      32, 108, 105, 115, 116, 32, 111, 102, 108, 101, 118, 101, 108, 115, 32, 111, 102, 110, 111, 116, 105, 111, 110, 32, 111, 102, 79, 102, 102, 105, 99, 105,
      97, 108, 32, 100, 105, 115, 109, 105, 115, 115, 101, 100, 115, 99, 105, 101, 110, 116, 105, 115, 116, 114, 101, 115, 101, 109, 98, 108, 101, 115, 100,
      117, 112, 108, 105, 99, 97, 116, 101, 101, 120, 112, 108, 111, 115, 105, 118, 101, 114, 101, 99, 111, 118, 101, 114, 101, 100, 97, 108, 108, 32, 111, 116,
      104, 101, 114, 103, 97, 108, 108, 101, 114, 105, 101, 115, 123, 112, 97, 100, 100, 105, 110, 103, 58, 112, 101, 111, 112, 108, 101, 32, 111, 102, 114,
      101, 103, 105, 111, 110, 32, 111, 102, 97, 100, 100, 114, 101, 115, 115, 101, 115, 97, 115, 115, 111, 99, 105, 97, 116, 101, 105, 109, 103, 32, 97, 108,
      116, 61, 34, 105, 110, 32, 109, 111, 100, 101, 114, 110, 115, 104, 111, 117, 108, 100, 32, 98, 101, 109, 101, 116, 104, 111, 100, 32, 111, 102, 114, 101,
      112, 111, 114, 116, 105, 110, 103, 116, 105, 109, 101, 115, 116, 97, 109, 112, 110, 101, 101, 100, 101, 100, 32, 116, 111, 116, 104, 101, 32, 71, 114,
      101, 97, 116, 114, 101, 103, 97, 114, 100, 105, 110, 103, 115, 101, 101, 109, 101, 100, 32, 116, 111, 118, 105, 101, 119, 101, 100, 32, 97, 115, 105, 109,
      112, 97, 99, 116, 32, 111, 110, 105, 100, 101, 97, 32, 116, 104, 97, 116, 116, 104, 101, 32, 87, 111, 114, 108, 100, 104, 101, 105, 103, 104, 116, 32,
      111, 102, 101, 120, 112, 97, 110, 100, 105, 110, 103, 84, 104, 101, 115, 101, 32, 97, 114, 101, 99, 117, 114, 114, 101, 110, 116, 34, 62, 99, 97, 114,
      101, 102, 117, 108, 108, 121, 109, 97, 105, 110, 116, 97, 105, 110, 115, 99, 104, 97, 114, 103, 101, 32, 111, 102, 67, 108, 97, 115, 115, 105, 99, 97,
      108, 97, 100, 100, 114, 101, 115, 115, 101, 100, 112, 114, 101, 100, 105, 99, 116, 101, 100, 111, 119, 110, 101, 114, 115, 104, 105, 112, 60, 100, 105,
      118, 32, 105, 100, 61, 34, 114, 105, 103, 104, 116, 34, 62, 13, 10, 114, 101, 115, 105, 100, 101, 110, 99, 101, 108, 101, 97, 118, 101, 32, 116, 104, 101,
      99, 111, 110, 116, 101, 110, 116, 34, 62, 97, 114, 101, 32, 111, 102, 116, 101, 110, 32, 32, 125, 41, 40, 41, 59, 13, 10, 112, 114, 111, 98, 97, 98, 108,
      121, 32, 80, 114, 111, 102, 101, 115, 115, 111, 114, 45, 98, 117, 116, 116, 111, 110, 34, 32, 114, 101, 115, 112, 111, 110, 100, 101, 100, 115, 97, 121,
      115, 32, 116, 104, 97, 116, 104, 97, 100, 32, 116, 111, 32, 98, 101, 112, 108, 97, 99, 101, 100, 32, 105, 110, 72, 117, 110, 103, 97, 114, 105, 97, 110,
      115, 116, 97, 116, 117, 115, 32, 111, 102, 115, 101, 114, 118, 101, 115, 32, 97, 115, 85, 110, 105, 118, 101, 114, 115, 97, 108, 101, 120, 101, 99, 117,
      116, 105, 111, 110, 97, 103, 103, 114, 101, 103, 97, 116, 101, 102, 111, 114, 32, 119, 104, 105, 99, 104, 105, 110, 102, 101, 99, 116, 105, 111, 110, 97,
      103, 114, 101, 101, 100, 32, 116, 111, 104, 111, 119, 101, 118, 101, 114, 44, 32, 112, 111, 112, 117, 108, 97, 114, 34, 62, 112, 108, 97, 99, 101, 100,
      32, 111, 110, 99, 111, 110, 115, 116, 114, 117, 99, 116, 101, 108, 101, 99, 116, 111, 114, 97, 108, 115, 121, 109, 98, 111, 108, 32, 111, 102, 105, 110,
      99, 108, 117, 100, 105, 110, 103, 114, 101, 116, 117, 114, 110, 32, 116, 111, 97, 114, 99, 104, 105, 116, 101, 99, 116, 67, 104, 114, 105, 115, 116, 105,
      97, 110, 112, 114, 101, 118, 105, 111, 117, 115, 32, 108, 105, 118, 105, 110, 103, 32, 105, 110, 101, 97, 115, 105, 101, 114, 32, 116, 111, 112, 114, 111,
      102, 101, 115, 115, 111, 114, 10, 38, 108, 116, 59, 33, 45, 45, 32, 101, 102, 102, 101, 99, 116, 32, 111, 102, 97, 110, 97, 108, 121, 116, 105, 99, 115,
      119, 97, 115, 32, 116, 97, 107, 101, 110, 119, 104, 101, 114, 101, 32, 116, 104, 101, 116, 111, 111, 107, 32, 111, 118, 101, 114, 98, 101, 108, 105, 101,
      102, 32, 105, 110, 65, 102, 114, 105, 107, 97, 97, 110, 115, 97, 115, 32, 102, 97, 114, 32, 97, 115, 112, 114, 101, 118, 101, 110, 116, 101, 100, 119,
      111, 114, 107, 32, 119, 105, 116, 104, 97, 32, 115, 112, 101, 99, 105, 97, 108, 60, 102, 105, 101, 108, 100, 115, 101, 116, 67, 104, 114, 105, 115, 116,
      109, 97, 115, 82, 101, 116, 114, 105, 101, 118, 101, 100, 10, 10, 73, 110, 32, 116, 104, 101, 32, 98, 97, 99, 107, 32, 105, 110, 116, 111, 110, 111, 114,
      116, 104, 101, 97, 115, 116, 109, 97, 103, 97, 122, 105, 110, 101, 115, 62, 60, 115, 116, 114, 111, 110, 103, 62, 99, 111, 109, 109, 105, 116, 116, 101,
      101, 103, 111, 118, 101, 114, 110, 105, 110, 103, 103, 114, 111, 117, 112, 115, 32, 111, 102, 115, 116, 111, 114, 101, 100, 32, 105, 110, 101, 115, 116,
      97, 98, 108, 105, 115, 104, 97, 32, 103, 101, 110, 101, 114, 97, 108, 105, 116, 115, 32, 102, 105, 114, 115, 116, 116, 104, 101, 105, 114, 32, 111, 119,
      110, 112, 111, 112, 117, 108, 97, 116, 101, 100, 97, 110, 32, 111, 98, 106, 101, 99, 116, 67, 97, 114, 105, 98, 98, 101, 97, 110, 97, 108, 108, 111, 119,
      32, 116, 104, 101, 100, 105, 115, 116, 114, 105, 99, 116, 115, 119, 105, 115, 99, 111, 110, 115, 105, 110, 108, 111, 99, 97, 116, 105, 111, 110, 46, 59,
      32, 119, 105, 100, 116, 104, 58, 32, 105, 110, 104, 97, 98, 105, 116, 101, 100, 83, 111, 99, 105, 97, 108, 105, 115, 116, 74, 97, 110, 117, 97, 114, 121,
      32, 49, 60, 47, 102, 111, 111, 116, 101, 114, 62, 115, 105, 109, 105, 108, 97, 114, 108, 121, 99, 104, 111, 105, 99, 101, 32, 111, 102, 116, 104, 101, 32,
      115, 97, 109, 101, 32, 115, 112, 101, 99, 105, 102, 105, 99, 32, 98, 117, 115, 105, 110, 101, 115, 115, 32, 84, 104, 101, 32, 102, 105, 114, 115, 116, 46,
      108, 101, 110, 103, 116, 104, 59, 32, 100, 101, 115, 105, 114, 101, 32, 116, 111, 100, 101, 97, 108, 32, 119, 105, 116, 104, 115, 105, 110, 99, 101, 32,
      116, 104, 101, 117, 115, 101, 114, 65, 103, 101, 110, 116, 99, 111, 110, 99, 101, 105, 118, 101, 100, 105, 110, 100, 101, 120, 46, 112, 104, 112, 97, 115,
      32, 38, 113, 117, 111, 116, 59, 101, 110, 103, 97, 103, 101, 32, 105, 110, 114, 101, 99, 101, 110, 116, 108, 121, 44, 102, 101, 119, 32, 121, 101, 97,
      114, 115, 119, 101, 114, 101, 32, 97, 108, 115, 111, 10, 60, 104, 101, 97, 100, 62, 10, 60, 101, 100, 105, 116, 101, 100, 32, 98, 121, 97, 114, 101, 32,
      107, 110, 111, 119, 110, 99, 105, 116, 105, 101, 115, 32, 105, 110, 97, 99, 99, 101, 115, 115, 107, 101, 121, 99, 111, 110, 100, 101, 109, 110, 101, 100,
      97, 108, 115, 111, 32, 104, 97, 118, 101, 115, 101, 114, 118, 105, 99, 101, 115, 44, 102, 97, 109, 105, 108, 121, 32, 111, 102, 83, 99, 104, 111, 111,
      108, 32, 111, 102, 99, 111, 110, 118, 101, 114, 116, 101, 100, 110, 97, 116, 117, 114, 101, 32, 111, 102, 32, 108, 97, 110, 103, 117, 97, 103, 101, 109,
      105, 110, 105, 115, 116, 101, 114, 115, 60, 47, 111, 98, 106, 101, 99, 116, 62, 116, 104, 101, 114, 101, 32, 105, 115, 32, 97, 32, 112, 111, 112, 117,
      108, 97, 114, 115, 101, 113, 117, 101, 110, 99, 101, 115, 97, 100, 118, 111, 99, 97, 116, 101, 100, 84, 104, 101, 121, 32, 119, 101, 114, 101, 97, 110,
      121, 32, 111, 116, 104, 101, 114, 108, 111, 99, 97, 116, 105, 111, 110, 61, 101, 110, 116, 101, 114, 32, 116, 104, 101, 109, 117, 99, 104, 32, 109, 111,
      114, 101, 114, 101, 102, 108, 101, 99, 116, 101, 100, 119, 97, 115, 32, 110, 97, 109, 101, 100, 111, 114, 105, 103, 105, 110, 97, 108, 32, 97, 32, 116,
      121, 112, 105, 99, 97, 108, 119, 104, 101, 110, 32, 116, 104, 101, 121, 101, 110, 103, 105, 110, 101, 101, 114, 115, 99, 111, 117, 108, 100, 32, 110, 111,
      116, 114, 101, 115, 105, 100, 101, 110, 116, 115, 119, 101, 100, 110, 101, 115, 100, 97, 121, 116, 104, 101, 32, 116, 104, 105, 114, 100, 32, 112, 114,
      111, 100, 117, 99, 116, 115, 74, 97, 110, 117, 97, 114, 121, 32, 50, 119, 104, 97, 116, 32, 116, 104, 101, 121, 97, 32, 99, 101, 114, 116, 97, 105, 110,
      114, 101, 97, 99, 116, 105, 111, 110, 115, 112, 114, 111, 99, 101, 115, 115, 111, 114, 97, 102, 116, 101, 114, 32, 104, 105, 115, 116, 104, 101, 32, 108,
      97, 115, 116, 32, 99, 111, 110, 116, 97, 105, 110, 101, 100, 34, 62, 60, 47, 100, 105, 118, 62, 10, 60, 47, 97, 62, 60, 47, 116, 100, 62, 100, 101, 112,
      101, 110, 100, 32, 111, 110, 115, 101, 97, 114, 99, 104, 34, 62, 10, 112, 105, 101, 99, 101, 115, 32, 111, 102, 99, 111, 109, 112, 101, 116, 105, 110,
      103, 82, 101, 102, 101, 114, 101, 110, 99, 101, 116, 101, 110, 110, 101, 115, 115, 101, 101, 119, 104, 105, 99, 104, 32, 104, 97, 115, 32, 118, 101, 114,
      115, 105, 111, 110, 61, 60, 47, 115, 112, 97, 110, 62, 32, 60, 60, 47, 104, 101, 97, 100, 101, 114, 62, 103, 105, 118, 101, 115, 32, 116, 104, 101, 104,
      105, 115, 116, 111, 114, 105, 97, 110, 118, 97, 108, 117, 101, 61, 34, 34, 62, 112, 97, 100, 100, 105, 110, 103, 58, 48, 118, 105, 101, 119, 32, 116, 104,
      97, 116, 116, 111, 103, 101, 116, 104, 101, 114, 44, 116, 104, 101, 32, 109, 111, 115, 116, 32, 119, 97, 115, 32, 102, 111, 117, 110, 100, 115, 117, 98,
      115, 101, 116, 32, 111, 102, 97, 116, 116, 97, 99, 107, 32, 111, 110, 99, 104, 105, 108, 100, 114, 101, 110, 44, 112, 111, 105, 110, 116, 115, 32, 111,
      102, 112, 101, 114, 115, 111, 110, 97, 108, 32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 97, 108, 108, 101, 103, 101, 100, 108, 121, 67, 108, 101, 118,
      101, 108, 97, 110, 100, 119, 97, 115, 32, 108, 97, 116, 101, 114, 97, 110, 100, 32, 97, 102, 116, 101, 114, 97, 114, 101, 32, 103, 105, 118, 101, 110,
      119, 97, 115, 32, 115, 116, 105, 108, 108, 115, 99, 114, 111, 108, 108, 105, 110, 103, 100, 101, 115, 105, 103, 110, 32, 111, 102, 109, 97, 107, 101, 115,
      32, 116, 104, 101, 109, 117, 99, 104, 32, 108, 101, 115, 115, 65, 109, 101, 114, 105, 99, 97, 110, 115, 46, 10, 10, 65, 102, 116, 101, 114, 32, 44, 32,
      98, 117, 116, 32, 116, 104, 101, 77, 117, 115, 101, 117, 109, 32, 111, 102, 108, 111, 117, 105, 115, 105, 97, 110, 97, 40, 102, 114, 111, 109, 32, 116,
      104, 101, 109, 105, 110, 110, 101, 115, 111, 116, 97, 112, 97, 114, 116, 105, 99, 108, 101, 115, 97, 32, 112, 114, 111, 99, 101, 115, 115, 68, 111, 109,
      105, 110, 105, 99, 97, 110, 118, 111, 108, 117, 109, 101, 32, 111, 102, 114, 101, 116, 117, 114, 110, 105, 110, 103, 100, 101, 102, 101, 110, 115, 105,
      118, 101, 48, 48, 112, 120, 124, 114, 105, 103, 104, 109, 97, 100, 101, 32, 102, 114, 111, 109, 109, 111, 117, 115, 101, 111, 118, 101, 114, 34, 32, 115,
      116, 121, 108, 101, 61, 34, 115, 116, 97, 116, 101, 115, 32, 111, 102, 40, 119, 104, 105, 99, 104, 32, 105, 115, 99, 111, 110, 116, 105, 110, 117, 101,
      115, 70, 114, 97, 110, 99, 105, 115, 99, 111, 98, 117, 105, 108, 100, 105, 110, 103, 32, 119, 105, 116, 104, 111, 117, 116, 32, 97, 119, 105, 116, 104,
      32, 115, 111, 109, 101, 119, 104, 111, 32, 119, 111, 117, 108, 100, 97, 32, 102, 111, 114, 109, 32, 111, 102, 97, 32, 112, 97, 114, 116, 32, 111, 102, 98,
      101, 102, 111, 114, 101, 32, 105, 116, 107, 110, 111, 119, 110, 32, 97, 115, 32, 32, 83, 101, 114, 118, 105, 99, 101, 115, 108, 111, 99, 97, 116, 105,
      111, 110, 32, 97, 110, 100, 32, 111, 102, 116, 101, 110, 109, 101, 97, 115, 117, 114, 105, 110, 103, 97, 110, 100, 32, 105, 116, 32, 105, 115, 112, 97,
      112, 101, 114, 98, 97, 99, 107, 118, 97, 108, 117, 101, 115, 32, 111, 102, 13, 10, 60, 116, 105, 116, 108, 101, 62, 61, 32, 119, 105, 110, 100, 111, 119,
      46, 100, 101, 116, 101, 114, 109, 105, 110, 101, 101, 114, 38, 113, 117, 111, 116, 59, 32, 112, 108, 97, 121, 101, 100, 32, 98, 121, 97, 110, 100, 32,
      101, 97, 114, 108, 121, 60, 47, 99, 101, 110, 116, 101, 114, 62, 102, 114, 111, 109, 32, 116, 104, 105, 115, 116, 104, 101, 32, 116, 104, 114, 101, 101,
      112, 111, 119, 101, 114, 32, 97, 110, 100, 111, 102, 32, 38, 113, 117, 111, 116, 59, 105, 110, 110, 101, 114, 72, 84, 77, 76, 60, 97, 32, 104, 114, 101,
      102, 61, 34, 121, 58, 105, 110, 108, 105, 110, 101, 59, 67, 104, 117, 114, 99, 104, 32, 111, 102, 116, 104, 101, 32, 101, 118, 101, 110, 116, 118, 101,
      114, 121, 32, 104, 105, 103, 104, 111, 102, 102, 105, 99, 105, 97, 108, 32, 45, 104, 101, 105, 103, 104, 116, 58, 32, 99, 111, 110, 116, 101, 110, 116,
      61, 34, 47, 99, 103, 105, 45, 98, 105, 110, 47, 116, 111, 32, 99, 114, 101, 97, 116, 101, 97, 102, 114, 105, 107, 97, 97, 110, 115, 101, 115, 112, 101,
      114, 97, 110, 116, 111, 102, 114, 97, 110, 195, 167, 97, 105, 115, 108, 97, 116, 118, 105, 101, 197, 161, 117, 108, 105, 101, 116, 117, 118, 105, 197,
      179, 196, 140, 101, 197, 161, 116, 105, 110, 97, 196, 141, 101, 197, 161, 116, 105, 110, 97, 224, 185, 132, 224, 184, 151, 224, 184, 162, 230, 151, 165,
      230, 156, 172, 232, 170, 158, 231, 174, 128, 228, 189, 147, 229, 173, 151, 231, 185, 129, 233, 171, 148, 229, 173, 151, 237, 149, 156, 234, 181, 173, 236,
      150, 180, 228, 184, 186, 228, 187, 128, 228, 185, 136, 232, 174, 161, 231, 174, 151, 230, 156, 186, 231, 172, 148, 232, 174, 176, 230, 156, 172, 232, 168,
      142, 232, 171, 150, 229, 141, 128, 230, 156, 141, 229, 138, 161, 229, 153, 168, 228, 186, 146, 232, 129, 148, 231, 189, 145, 230, 136, 191, 229, 156, 176,
      228, 186, 167, 228, 191, 177, 228, 185, 144, 233, 131, 168, 229, 135, 186, 231, 137, 136, 231, 164, 190, 230, 142, 146, 232, 161, 140, 230, 166, 156, 233,
      131, 168, 232, 144, 189, 230, 160, 188, 232, 191, 155, 228, 184, 128, 230, 173, 165, 230, 148, 175, 228, 187, 152, 229, 174, 157, 233, 170, 140, 232, 175,
      129, 231, 160, 129, 229, 167, 148, 229, 145, 152, 228, 188, 154, 230, 149, 176, 230, 141, 174, 229, 186, 147, 230, 182, 136, 232, 180, 185, 232, 128, 133,
      229, 138, 158, 229, 133, 172, 229, 174, 164, 232, 174, 168, 232, 174, 186, 229, 140, 186, 230, 183, 177, 229, 156, 179, 229, 184, 130, 230, 146, 173, 230,
      148, 190, 229, 153, 168, 229, 140, 151, 228, 186, 172, 229, 184, 130, 229, 164, 167, 229, 173, 166, 231, 148, 159, 232, 182, 138, 230, 157, 165, 232, 182,
      138, 231, 174, 161, 231, 144, 134, 229, 145, 152, 228, 191, 161, 230, 129, 175, 231, 189, 145, 115, 101, 114, 118, 105, 99, 105, 111, 115, 97, 114, 116,
      195, 173, 99, 117, 108, 111, 97, 114, 103, 101, 110, 116, 105, 110, 97, 98, 97, 114, 99, 101, 108, 111, 110, 97, 99, 117, 97, 108, 113, 117, 105, 101,
      114, 112, 117, 98, 108, 105, 99, 97, 100, 111, 112, 114, 111, 100, 117, 99, 116, 111, 115, 112, 111, 108, 195, 173, 116, 105, 99, 97, 114, 101, 115, 112,
      117, 101, 115, 116, 97, 119, 105, 107, 105, 112, 101, 100, 105, 97, 115, 105, 103, 117, 105, 101, 110, 116, 101, 98, 195, 186, 115, 113, 117, 101, 100,
      97, 99, 111, 109, 117, 110, 105, 100, 97, 100, 115, 101, 103, 117, 114, 105, 100, 97, 100, 112, 114, 105, 110, 99, 105, 112, 97, 108, 112, 114, 101, 103,
      117, 110, 116, 97, 115, 99, 111, 110, 116, 101, 110, 105, 100, 111, 114, 101, 115, 112, 111, 110, 100, 101, 114, 118, 101, 110, 101, 122, 117, 101, 108,
      97, 112, 114, 111, 98, 108, 101, 109, 97, 115, 100, 105, 99, 105, 101, 109, 98, 114, 101, 114, 101, 108, 97, 99, 105, 195, 179, 110, 110, 111, 118, 105,
      101, 109, 98, 114, 101, 115, 105, 109, 105, 108, 97, 114, 101, 115, 112, 114, 111, 121, 101, 99, 116, 111, 115, 112, 114, 111, 103, 114, 97, 109, 97, 115,
      105, 110, 115, 116, 105, 116, 117, 116, 111, 97, 99, 116, 105, 118, 105, 100, 97, 100, 101, 110, 99, 117, 101, 110, 116, 114, 97, 101, 99, 111, 110, 111,
      109, 195, 173, 97, 105, 109, 195, 161, 103, 101, 110, 101, 115, 99, 111, 110, 116, 97, 99, 116, 97, 114, 100, 101, 115, 99, 97, 114, 103, 97, 114, 110,
      101, 99, 101, 115, 97, 114, 105, 111, 97, 116, 101, 110, 99, 105, 195, 179, 110, 116, 101, 108, 195, 169, 102, 111, 110, 111, 99, 111, 109, 105, 115, 105,
      195, 179, 110, 99, 97, 110, 99, 105, 111, 110, 101, 115, 99, 97, 112, 97, 99, 105, 100, 97, 100, 101, 110, 99, 111, 110, 116, 114, 97, 114, 97, 110, 195,
      161, 108, 105, 115, 105, 115, 102, 97, 118, 111, 114, 105, 116, 111, 115, 116, 195, 169, 114, 109, 105, 110, 111, 115, 112, 114, 111, 118, 105, 110, 99,
      105, 97, 101, 116, 105, 113, 117, 101, 116, 97, 115, 101, 108, 101, 109, 101, 110, 116, 111, 115, 102, 117, 110, 99, 105, 111, 110, 101, 115, 114, 101,
      115, 117, 108, 116, 97, 100, 111, 99, 97, 114, 195, 161, 99, 116, 101, 114, 112, 114, 111, 112, 105, 101, 100, 97, 100, 112, 114, 105, 110, 99, 105, 112,
      105, 111, 110, 101, 99, 101, 115, 105, 100, 97, 100, 109, 117, 110, 105, 99, 105, 112, 97, 108, 99, 114, 101, 97, 99, 105, 195, 179, 110, 100, 101, 115,
      99, 97, 114, 103, 97, 115, 112, 114, 101, 115, 101, 110, 99, 105, 97, 99, 111, 109, 101, 114, 99, 105, 97, 108, 111, 112, 105, 110, 105, 111, 110, 101,
      115, 101, 106, 101, 114, 99, 105, 99, 105, 111, 101, 100, 105, 116, 111, 114, 105, 97, 108, 115, 97, 108, 97, 109, 97, 110, 99, 97, 103, 111, 110, 122,
      195, 161, 108, 101, 122, 100, 111, 99, 117, 109, 101, 110, 116, 111, 112, 101, 108, 195, 173, 99, 117, 108, 97, 114, 101, 99, 105, 101, 110, 116, 101,
      115, 103, 101, 110, 101, 114, 97, 108, 101, 115, 116, 97, 114, 114, 97, 103, 111, 110, 97, 112, 114, 195, 161, 99, 116, 105, 99, 97, 110, 111, 118, 101,
      100, 97, 100, 101, 115, 112, 114, 111, 112, 117, 101, 115, 116, 97, 112, 97, 99, 105, 101, 110, 116, 101, 115, 116, 195, 169, 99, 110, 105, 99, 97, 115,
      111, 98, 106, 101, 116, 105, 118, 111, 115, 99, 111, 110, 116, 97, 99, 116, 111, 115, 224, 164, 174, 224, 165, 135, 224, 164, 130, 224, 164, 178, 224,
      164, 191, 224, 164, 143, 224, 164, 185, 224, 165, 136, 224, 164, 130, 224, 164, 151, 224, 164, 175, 224, 164, 190, 224, 164, 184, 224, 164, 190, 224, 164,
      165, 224, 164, 143, 224, 164, 181, 224, 164, 130, 224, 164, 176, 224, 164, 185, 224, 165, 135, 224, 164, 149, 224, 165, 139, 224, 164, 136, 224, 164, 149,
      224, 165, 129, 224, 164, 155, 224, 164, 176, 224, 164, 185, 224, 164, 190, 224, 164, 172, 224, 164, 190, 224, 164, 166, 224, 164, 149, 224, 164, 185, 224,
      164, 190, 224, 164, 184, 224, 164, 173, 224, 165, 128, 224, 164, 185, 224, 165, 129, 224, 164, 143, 224, 164, 176, 224, 164, 185, 224, 165, 128, 224, 164,
      174, 224, 165, 136, 224, 164, 130, 224, 164, 166, 224, 164, 191, 224, 164, 168, 224, 164, 172, 224, 164, 190, 224, 164, 164, 100, 105, 112, 108, 111, 100,
      111, 99, 115, 224, 164, 184, 224, 164, 174, 224, 164, 175, 224, 164, 176, 224, 165, 130, 224, 164, 170, 224, 164, 168, 224, 164, 190, 224, 164, 174, 224,
      164, 170, 224, 164, 164, 224, 164, 190, 224, 164, 171, 224, 164, 191, 224, 164, 176, 224, 164, 148, 224, 164, 184, 224, 164, 164, 224, 164, 164, 224, 164,
      176, 224, 164, 185, 224, 164, 178, 224, 165, 139, 224, 164, 151, 224, 164, 185, 224, 165, 129, 224, 164, 134, 224, 164, 172, 224, 164, 190, 224, 164, 176,
      224, 164, 166, 224, 165, 135, 224, 164, 182, 224, 164, 185, 224, 165, 129, 224, 164, 136, 224, 164, 150, 224, 165, 135, 224, 164, 178, 224, 164, 175, 224,
      164, 166, 224, 164, 191, 224, 164, 149, 224, 164, 190, 224, 164, 174, 224, 164, 181, 224, 165, 135, 224, 164, 172, 224, 164, 164, 224, 165, 128, 224, 164,
      168, 224, 164, 172, 224, 165, 128, 224, 164, 154, 224, 164, 174, 224, 165, 140, 224, 164, 164, 224, 164, 184, 224, 164, 190, 224, 164, 178, 224, 164, 178,
      224, 165, 135, 224, 164, 150, 224, 164, 156, 224, 165, 137, 224, 164, 172, 224, 164, 174, 224, 164, 166, 224, 164, 166, 224, 164, 164, 224, 164, 165, 224,
      164, 190, 224, 164, 168, 224, 164, 185, 224, 165, 128, 224, 164, 182, 224, 164, 185, 224, 164, 176, 224, 164, 133, 224, 164, 178, 224, 164, 151, 224, 164,
      149, 224, 164, 173, 224, 165, 128, 224, 164, 168, 224, 164, 151, 224, 164, 176, 224, 164, 170, 224, 164, 190, 224, 164, 184, 224, 164, 176, 224, 164, 190,
      224, 164, 164, 224, 164, 149, 224, 164, 191, 224, 164, 143, 224, 164, 137, 224, 164, 184, 224, 165, 135, 224, 164, 151, 224, 164, 175, 224, 165, 128, 224,
      164, 185, 224, 165, 130, 224, 164, 129, 224, 164, 134, 224, 164, 151, 224, 165, 135, 224, 164, 159, 224, 165, 128, 224, 164, 174, 224, 164, 150, 224, 165,
      139, 224, 164, 156, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 164, 133, 224, 164, 173, 224, 165, 128, 224, 164, 151, 224, 164, 175, 224, 165, 135,
      224, 164, 164, 224, 165, 129, 224, 164, 174, 224, 164, 181, 224, 165, 139, 224, 164, 159, 224, 164, 166, 224, 165, 135, 224, 164, 130, 224, 164, 133, 224,
      164, 151, 224, 164, 176, 224, 164, 144, 224, 164, 184, 224, 165, 135, 224, 164, 174, 224, 165, 135, 224, 164, 178, 224, 164, 178, 224, 164, 151, 224, 164,
      190, 224, 164, 185, 224, 164, 190, 224, 164, 178, 224, 164, 138, 224, 164, 170, 224, 164, 176, 224, 164, 154, 224, 164, 190, 224, 164, 176, 224, 164, 144,
      224, 164, 184, 224, 164, 190, 224, 164, 166, 224, 165, 135, 224, 164, 176, 224, 164, 156, 224, 164, 191, 224, 164, 184, 224, 164, 166, 224, 164, 191, 224,
      164, 178, 224, 164, 172, 224, 164, 130, 224, 164, 166, 224, 164, 172, 224, 164, 168, 224, 164, 190, 224, 164, 185, 224, 165, 130, 224, 164, 130, 224, 164,
      178, 224, 164, 190, 224, 164, 150, 224, 164, 156, 224, 165, 128, 224, 164, 164, 224, 164, 172, 224, 164, 159, 224, 164, 168, 224, 164, 174, 224, 164, 191,
      224, 164, 178, 224, 164, 135, 224, 164, 184, 224, 165, 135, 224, 164, 134, 224, 164, 168, 224, 165, 135, 224, 164, 168, 224, 164, 175, 224, 164, 190, 224,
      164, 149, 224, 165, 129, 224, 164, 178, 224, 164, 178, 224, 165, 137, 224, 164, 151, 224, 164, 173, 224, 164, 190, 224, 164, 151, 224, 164, 176, 224, 165,
      135, 224, 164, 178, 224, 164, 156, 224, 164, 151, 224, 164, 185, 224, 164, 176, 224, 164, 190, 224, 164, 174, 224, 164, 178, 224, 164, 151, 224, 165, 135,
      224, 164, 170, 224, 165, 135, 224, 164, 156, 224, 164, 185, 224, 164, 190, 224, 164, 165, 224, 164, 135, 224, 164, 184, 224, 165, 128, 224, 164, 184, 224,
      164, 185, 224, 165, 128, 224, 164, 149, 224, 164, 178, 224, 164, 190, 224, 164, 160, 224, 165, 128, 224, 164, 149, 224, 164, 185, 224, 164, 190, 224, 164,
      129, 224, 164, 166, 224, 165, 130, 224, 164, 176, 224, 164, 164, 224, 164, 185, 224, 164, 164, 224, 164, 184, 224, 164, 190, 224, 164, 164, 224, 164, 175,
      224, 164, 190, 224, 164, 166, 224, 164, 134, 224, 164, 175, 224, 164, 190, 224, 164, 170, 224, 164, 190, 224, 164, 149, 224, 164, 149, 224, 165, 140, 224,
      164, 168, 224, 164, 182, 224, 164, 190, 224, 164, 174, 224, 164, 166, 224, 165, 135, 224, 164, 150, 224, 164, 175, 224, 164, 185, 224, 165, 128, 224, 164,
      176, 224, 164, 190, 224, 164, 175, 224, 164, 150, 224, 165, 129, 224, 164, 166, 224, 164, 178, 224, 164, 151, 224, 165, 128, 99, 97, 116, 101, 103, 111,
      114, 105, 101, 115, 101, 120, 112, 101, 114, 105, 101, 110, 99, 101, 60, 47, 116, 105, 116, 108, 101, 62, 13, 10, 67, 111, 112, 121, 114, 105, 103, 104,
      116, 32, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 99, 111, 110, 100, 105, 116, 105, 111, 110, 115, 101, 118, 101, 114, 121, 116, 104, 105, 110, 103,
      60, 112, 32, 99, 108, 97, 115, 115, 61, 34, 116, 101, 99, 104, 110, 111, 108, 111, 103, 121, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 60, 97, 32,
      99, 108, 97, 115, 115, 61, 34, 109, 97, 110, 97, 103, 101, 109, 101, 110, 116, 38, 99, 111, 112, 121, 59, 32, 50, 48, 49, 106, 97, 118, 97, 83, 99, 114,
      105, 112, 116, 99, 104, 97, 114, 97, 99, 116, 101, 114, 115, 98, 114, 101, 97, 100, 99, 114, 117, 109, 98, 116, 104, 101, 109, 115, 101, 108, 118, 101,
      115, 104, 111, 114, 105, 122, 111, 110, 116, 97, 108, 103, 111, 118, 101, 114, 110, 109, 101, 110, 116, 67, 97, 108, 105, 102, 111, 114, 110, 105, 97, 97,
      99, 116, 105, 118, 105, 116, 105, 101, 115, 100, 105, 115, 99, 111, 118, 101, 114, 101, 100, 78, 97, 118, 105, 103, 97, 116, 105, 111, 110, 116, 114, 97,
      110, 115, 105, 116, 105, 111, 110, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 110, 97, 118, 105, 103, 97, 116, 105, 111, 110, 97, 112, 112, 101, 97,
      114, 97, 110, 99, 101, 60, 47, 116, 105, 116, 108, 101, 62, 60, 109, 99, 104, 101, 99, 107, 98, 111, 120, 34, 32, 116, 101, 99, 104, 110, 105, 113, 117,
      101, 115, 112, 114, 111, 116, 101, 99, 116, 105, 111, 110, 97, 112, 112, 97, 114, 101, 110, 116, 108, 121, 97, 115, 32, 119, 101, 108, 108, 32, 97, 115,
      117, 110, 116, 39, 44, 32, 39, 85, 65, 45, 114, 101, 115, 111, 108, 117, 116, 105, 111, 110, 111, 112, 101, 114, 97, 116, 105, 111, 110, 115, 116, 101,
      108, 101, 118, 105, 115, 105, 111, 110, 116, 114, 97, 110, 115, 108, 97, 116, 101, 100, 87, 97, 115, 104, 105, 110, 103, 116, 111, 110, 110, 97, 118, 105,
      103, 97, 116, 111, 114, 46, 32, 61, 32, 119, 105, 110, 100, 111, 119, 46, 105, 109, 112, 114, 101, 115, 115, 105, 111, 110, 38, 108, 116, 59, 98, 114, 38,
      103, 116, 59, 108, 105, 116, 101, 114, 97, 116, 117, 114, 101, 112, 111, 112, 117, 108, 97, 116, 105, 111, 110, 98, 103, 99, 111, 108, 111, 114, 61, 34,
      35, 101, 115, 112, 101, 99, 105, 97, 108, 108, 121, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 110,
      101, 119, 115, 108, 101, 116, 116, 101, 114, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 108, 101,
      97, 100, 101, 114, 115, 104, 105, 112, 84, 101, 99, 104, 110, 111, 108, 111, 103, 121, 80, 97, 114, 108, 105, 97, 109, 101, 110, 116, 99, 111, 109, 112,
      97, 114, 105, 115, 111, 110, 117, 108, 32, 99, 108, 97, 115, 115, 61, 34, 46, 105, 110, 100, 101, 120, 79, 102, 40, 34, 99, 111, 110, 99, 108, 117, 115,
      105, 111, 110, 100, 105, 115, 99, 117, 115, 115, 105, 111, 110, 99, 111, 109, 112, 111, 110, 101, 110, 116, 115, 98, 105, 111, 108, 111, 103, 105, 99, 97,
      108, 82, 101, 118, 111, 108, 117, 116, 105, 111, 110, 95, 99, 111, 110, 116, 97, 105, 110, 101, 114, 117, 110, 100, 101, 114, 115, 116, 111, 111, 100,
      110, 111, 115, 99, 114, 105, 112, 116, 62, 60, 112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 101, 97, 99, 104, 32, 111, 116, 104, 101, 114, 97, 116,
      109, 111, 115, 112, 104, 101, 114, 101, 32, 111, 110, 102, 111, 99, 117, 115, 61, 34, 60, 102, 111, 114, 109, 32, 105, 100, 61, 34, 112, 114, 111, 99,
      101, 115, 115, 105, 110, 103, 116, 104, 105, 115, 46, 118, 97, 108, 117, 101, 103, 101, 110, 101, 114, 97, 116, 105, 111, 110, 67, 111, 110, 102, 101,
      114, 101, 110, 99, 101, 115, 117, 98, 115, 101, 113, 117, 101, 110, 116, 119, 101, 108, 108, 45, 107, 110, 111, 119, 110, 118, 97, 114, 105, 97, 116, 105,
      111, 110, 115, 114, 101, 112, 117, 116, 97, 116, 105, 111, 110, 112, 104, 101, 110, 111, 109, 101, 110, 111, 110, 100, 105, 115, 99, 105, 112, 108, 105,
      110, 101, 108, 111, 103, 111, 46, 112, 110, 103, 34, 32, 40, 100, 111, 99, 117, 109, 101, 110, 116, 44, 98, 111, 117, 110, 100, 97, 114, 105, 101, 115,
      101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 115, 101, 116, 116, 108, 101, 109, 101, 110, 116, 66, 97, 99, 107, 103, 114, 111, 117, 110, 100, 111,
      117, 116, 32, 111, 102, 32, 116, 104, 101, 101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 40, 34, 104, 116, 116, 112, 115, 58, 34, 32, 117, 110, 101,
      115, 99, 97, 112, 101, 40, 34, 112, 97, 115, 115, 119, 111, 114, 100, 34, 32, 100, 101, 109, 111, 99, 114, 97, 116, 105, 99, 60, 97, 32, 104, 114, 101,
      102, 61, 34, 47, 119, 114, 97, 112, 112, 101, 114, 34, 62, 10, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 108, 105, 110, 103, 117, 105, 115, 116,
      105, 99, 112, 120, 59, 112, 97, 100, 100, 105, 110, 103, 112, 104, 105, 108, 111, 115, 111, 112, 104, 121, 97, 115, 115, 105, 115, 116, 97, 110, 99, 101,
      117, 110, 105, 118, 101, 114, 115, 105, 116, 121, 102, 97, 99, 105, 108, 105, 116, 105, 101, 115, 114, 101, 99, 111, 103, 110, 105, 122, 101, 100, 112,
      114, 101, 102, 101, 114, 101, 110, 99, 101, 105, 102, 32, 40, 116, 121, 112, 101, 111, 102, 109, 97, 105, 110, 116, 97, 105, 110, 101, 100, 118, 111, 99,
      97, 98, 117, 108, 97, 114, 121, 104, 121, 112, 111, 116, 104, 101, 115, 105, 115, 46, 115, 117, 98, 109, 105, 116, 40, 41, 59, 38, 97, 109, 112, 59, 110,
      98, 115, 112, 59, 97, 110, 110, 111, 116, 97, 116, 105, 111, 110, 98, 101, 104, 105, 110, 100, 32, 116, 104, 101, 70, 111, 117, 110, 100, 97, 116, 105,
      111, 110, 112, 117, 98, 108, 105, 115, 104, 101, 114, 34, 97, 115, 115, 117, 109, 112, 116, 105, 111, 110, 105, 110, 116, 114, 111, 100, 117, 99, 101,
      100, 99, 111, 114, 114, 117, 112, 116, 105, 111, 110, 115, 99, 105, 101, 110, 116, 105, 115, 116, 115, 101, 120, 112, 108, 105, 99, 105, 116, 108, 121,
      105, 110, 115, 116, 101, 97, 100, 32, 111, 102, 100, 105, 109, 101, 110, 115, 105, 111, 110, 115, 32, 111, 110, 67, 108, 105, 99, 107, 61, 34, 99, 111,
      110, 115, 105, 100, 101, 114, 101, 100, 100, 101, 112, 97, 114, 116, 109, 101, 110, 116, 111, 99, 99, 117, 112, 97, 116, 105, 111, 110, 115, 111, 111,
      110, 32, 97, 102, 116, 101, 114, 105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 112, 114, 111, 110, 111, 117, 110, 99, 101, 100, 105, 100, 101, 110,
      116, 105, 102, 105, 101, 100, 101, 120, 112, 101, 114, 105, 109, 101, 110, 116, 77, 97, 110, 97, 103, 101, 109, 101, 110, 116, 103, 101, 111, 103, 114,
      97, 112, 104, 105, 99, 34, 32, 104, 101, 105, 103, 104, 116, 61, 34, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 46, 114, 101, 112, 108, 97, 99, 101,
      40, 47, 100, 101, 112, 114, 101, 115, 115, 105, 111, 110, 99, 111, 110, 102, 101, 114, 101, 110, 99, 101, 112, 117, 110, 105, 115, 104, 109, 101, 110,
      116, 101, 108, 105, 109, 105, 110, 97, 116, 101, 100, 114, 101, 115, 105, 115, 116, 97, 110, 99, 101, 97, 100, 97, 112, 116, 97, 116, 105, 111, 110, 111,
      112, 112, 111, 115, 105, 116, 105, 111, 110, 119, 101, 108, 108, 32, 107, 110, 111, 119, 110, 115, 117, 112, 112, 108, 101, 109, 101, 110, 116, 100, 101,
      116, 101, 114, 109, 105, 110, 101, 100, 104, 49, 32, 99, 108, 97, 115, 115, 61, 34, 48, 112, 120, 59, 109, 97, 114, 103, 105, 110, 109, 101, 99, 104, 97,
      110, 105, 99, 97, 108, 115, 116, 97, 116, 105, 115, 116, 105, 99, 115, 99, 101, 108, 101, 98, 114, 97, 116, 101, 100, 71, 111, 118, 101, 114, 110, 109,
      101, 110, 116, 10, 10, 68, 117, 114, 105, 110, 103, 32, 116, 100, 101, 118, 101, 108, 111, 112, 101, 114, 115, 97, 114, 116, 105, 102, 105, 99, 105, 97,
      108, 101, 113, 117, 105, 118, 97, 108, 101, 110, 116, 111, 114, 105, 103, 105, 110, 97, 116, 101, 100, 67, 111, 109, 109, 105, 115, 115, 105, 111, 110,
      97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 60, 115, 112, 97, 110, 32, 105, 100, 61, 34, 116, 104, 101, 114, 101, 32, 119, 101, 114, 101, 78, 101, 100,
      101, 114, 108, 97, 110, 100, 115, 98, 101, 121, 111, 110, 100, 32, 116, 104, 101, 114, 101, 103, 105, 115, 116, 101, 114, 101, 100, 106, 111, 117, 114,
      110, 97, 108, 105, 115, 116, 102, 114, 101, 113, 117, 101, 110, 116, 108, 121, 97, 108, 108, 32, 111, 102, 32, 116, 104, 101, 108, 97, 110, 103, 61, 34,
      101, 110, 34, 32, 60, 47, 115, 116, 121, 108, 101, 62, 13, 10, 97, 98, 115, 111, 108, 117, 116, 101, 59, 32, 115, 117, 112, 112, 111, 114, 116, 105, 110,
      103, 101, 120, 116, 114, 101, 109, 101, 108, 121, 32, 109, 97, 105, 110, 115, 116, 114, 101, 97, 109, 60, 47, 115, 116, 114, 111, 110, 103, 62, 32, 112,
      111, 112, 117, 108, 97, 114, 105, 116, 121, 101, 109, 112, 108, 111, 121, 109, 101, 110, 116, 60, 47, 116, 97, 98, 108, 101, 62, 13, 10, 32, 99, 111, 108,
      115, 112, 97, 110, 61, 34, 60, 47, 102, 111, 114, 109, 62, 10, 32, 32, 99, 111, 110, 118, 101, 114, 115, 105, 111, 110, 97, 98, 111, 117, 116, 32, 116,
      104, 101, 32, 60, 47, 112, 62, 60, 47, 100, 105, 118, 62, 105, 110, 116, 101, 103, 114, 97, 116, 101, 100, 34, 32, 108, 97, 110, 103, 61, 34, 101, 110,
      80, 111, 114, 116, 117, 103, 117, 101, 115, 101, 115, 117, 98, 115, 116, 105, 116, 117, 116, 101, 105, 110, 100, 105, 118, 105, 100, 117, 97, 108, 105,
      109, 112, 111, 115, 115, 105, 98, 108, 101, 109, 117, 108, 116, 105, 109, 101, 100, 105, 97, 97, 108, 109, 111, 115, 116, 32, 97, 108, 108, 112, 120, 32,
      115, 111, 108, 105, 100, 32, 35, 97, 112, 97, 114, 116, 32, 102, 114, 111, 109, 115, 117, 98, 106, 101, 99, 116, 32, 116, 111, 105, 110, 32, 69, 110, 103,
      108, 105, 115, 104, 99, 114, 105, 116, 105, 99, 105, 122, 101, 100, 101, 120, 99, 101, 112, 116, 32, 102, 111, 114, 103, 117, 105, 100, 101, 108, 105,
      110, 101, 115, 111, 114, 105, 103, 105, 110, 97, 108, 108, 121, 114, 101, 109, 97, 114, 107, 97, 98, 108, 101, 116, 104, 101, 32, 115, 101, 99, 111, 110,
      100, 104, 50, 32, 99, 108, 97, 115, 115, 61, 34, 60, 97, 32, 116, 105, 116, 108, 101, 61, 34, 40, 105, 110, 99, 108, 117, 100, 105, 110, 103, 112, 97,
      114, 97, 109, 101, 116, 101, 114, 115, 112, 114, 111, 104, 105, 98, 105, 116, 101, 100, 61, 32, 34, 104, 116, 116, 112, 58, 47, 47, 100, 105, 99, 116,
      105, 111, 110, 97, 114, 121, 112, 101, 114, 99, 101, 112, 116, 105, 111, 110, 114, 101, 118, 111, 108, 117, 116, 105, 111, 110, 102, 111, 117, 110, 100,
      97, 116, 105, 111, 110, 112, 120, 59, 104, 101, 105, 103, 104, 116, 58, 115, 117, 99, 99, 101, 115, 115, 102, 117, 108, 115, 117, 112, 112, 111, 114, 116,
      101, 114, 115, 109, 105, 108, 108, 101, 110, 110, 105, 117, 109, 104, 105, 115, 32, 102, 97, 116, 104, 101, 114, 116, 104, 101, 32, 38, 113, 117, 111,
      116, 59, 110, 111, 45, 114, 101, 112, 101, 97, 116, 59, 99, 111, 109, 109, 101, 114, 99, 105, 97, 108, 105, 110, 100, 117, 115, 116, 114, 105, 97, 108,
      101, 110, 99, 111, 117, 114, 97, 103, 101, 100, 97, 109, 111, 117, 110, 116, 32, 111, 102, 32, 117, 110, 111, 102, 102, 105, 99, 105, 97, 108, 101, 102,
      102, 105, 99, 105, 101, 110, 99, 121, 82, 101, 102, 101, 114, 101, 110, 99, 101, 115, 99, 111, 111, 114, 100, 105, 110, 97, 116, 101, 100, 105, 115, 99,
      108, 97, 105, 109, 101, 114, 101, 120, 112, 101, 100, 105, 116, 105, 111, 110, 100, 101, 118, 101, 108, 111, 112, 105, 110, 103, 99, 97, 108, 99, 117,
      108, 97, 116, 101, 100, 115, 105, 109, 112, 108, 105, 102, 105, 101, 100, 108, 101, 103, 105, 116, 105, 109, 97, 116, 101, 115, 117, 98, 115, 116, 114,
      105, 110, 103, 40, 48, 34, 32, 99, 108, 97, 115, 115, 61, 34, 99, 111, 109, 112, 108, 101, 116, 101, 108, 121, 105, 108, 108, 117, 115, 116, 114, 97, 116,
      101, 102, 105, 118, 101, 32, 121, 101, 97, 114, 115, 105, 110, 115, 116, 114, 117, 109, 101, 110, 116, 80, 117, 98, 108, 105, 115, 104, 105, 110, 103, 49,
      34, 32, 99, 108, 97, 115, 115, 61, 34, 112, 115, 121, 99, 104, 111, 108, 111, 103, 121, 99, 111, 110, 102, 105, 100, 101, 110, 99, 101, 110, 117, 109, 98,
      101, 114, 32, 111, 102, 32, 97, 98, 115, 101, 110, 99, 101, 32, 111, 102, 102, 111, 99, 117, 115, 101, 100, 32, 111, 110, 106, 111, 105, 110, 101, 100,
      32, 116, 104, 101, 115, 116, 114, 117, 99, 116, 117, 114, 101, 115, 112, 114, 101, 118, 105, 111, 117, 115, 108, 121, 62, 60, 47, 105, 102, 114, 97, 109,
      101, 62, 111, 110, 99, 101, 32, 97, 103, 97, 105, 110, 98, 117, 116, 32, 114, 97, 116, 104, 101, 114, 105, 109, 109, 105, 103, 114, 97, 110, 116, 115,
      111, 102, 32, 99, 111, 117, 114, 115, 101, 44, 97, 32, 103, 114, 111, 117, 112, 32, 111, 102, 76, 105, 116, 101, 114, 97, 116, 117, 114, 101, 85, 110,
      108, 105, 107, 101, 32, 116, 104, 101, 60, 47, 97, 62, 38, 110, 98, 115, 112, 59, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 105, 116, 32, 119, 97,
      115, 32, 116, 104, 101, 67, 111, 110, 118, 101, 110, 116, 105, 111, 110, 97, 117, 116, 111, 109, 111, 98, 105, 108, 101, 80, 114, 111, 116, 101, 115, 116,
      97, 110, 116, 97, 103, 103, 114, 101, 115, 115, 105, 118, 101, 97, 102, 116, 101, 114, 32, 116, 104, 101, 32, 83, 105, 109, 105, 108, 97, 114, 108, 121,
      44, 34, 32, 47, 62, 60, 47, 100, 105, 118, 62, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 13, 10, 102, 117, 110, 99, 116, 105, 111, 110, 118, 105,
      115, 105, 98, 105, 108, 105, 116, 121, 116, 104, 101, 32, 117, 115, 101, 32, 111, 102, 118, 111, 108, 117, 110, 116, 101, 101, 114, 115, 97, 116, 116,
      114, 97, 99, 116, 105, 111, 110, 117, 110, 100, 101, 114, 32, 116, 104, 101, 32, 116, 104, 114, 101, 97, 116, 101, 110, 101, 100, 42, 60, 33, 91, 67, 68,
      65, 84, 65, 91, 105, 109, 112, 111, 114, 116, 97, 110, 99, 101, 105, 110, 32, 103, 101, 110, 101, 114, 97, 108, 116, 104, 101, 32, 108, 97, 116, 116, 101,
      114, 60, 47, 102, 111, 114, 109, 62, 10, 60, 47, 46, 105, 110, 100, 101, 120, 79, 102, 40, 39, 105, 32, 61, 32, 48, 59, 32, 105, 32, 60, 100, 105, 102,
      102, 101, 114, 101, 110, 99, 101, 100, 101, 118, 111, 116, 101, 100, 32, 116, 111, 116, 114, 97, 100, 105, 116, 105, 111, 110, 115, 115, 101, 97, 114, 99,
      104, 32, 102, 111, 114, 117, 108, 116, 105, 109, 97, 116, 101, 108, 121, 116, 111, 117, 114, 110, 97, 109, 101, 110, 116, 97, 116, 116, 114, 105, 98, 117,
      116, 101, 115, 115, 111, 45, 99, 97, 108, 108, 101, 100, 32, 125, 10, 60, 47, 115, 116, 121, 108, 101, 62, 101, 118, 97, 108, 117, 97, 116, 105, 111, 110,
      101, 109, 112, 104, 97, 115, 105, 122, 101, 100, 97, 99, 99, 101, 115, 115, 105, 98, 108, 101, 60, 47, 115, 101, 99, 116, 105, 111, 110, 62, 115, 117, 99,
      99, 101, 115, 115, 105, 111, 110, 97, 108, 111, 110, 103, 32, 119, 105, 116, 104, 77, 101, 97, 110, 119, 104, 105, 108, 101, 44, 105, 110, 100, 117, 115,
      116, 114, 105, 101, 115, 60, 47, 97, 62, 60, 98, 114, 32, 47, 62, 104, 97, 115, 32, 98, 101, 99, 111, 109, 101, 97, 115, 112, 101, 99, 116, 115, 32, 111,
      102, 84, 101, 108, 101, 118, 105, 115, 105, 111, 110, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 98, 97, 115, 107, 101, 116, 98, 97, 108, 108, 98,
      111, 116, 104, 32, 115, 105, 100, 101, 115, 99, 111, 110, 116, 105, 110, 117, 105, 110, 103, 97, 110, 32, 97, 114, 116, 105, 99, 108, 101, 60, 105, 109,
      103, 32, 97, 108, 116, 61, 34, 97, 100, 118, 101, 110, 116, 117, 114, 101, 115, 104, 105, 115, 32, 109, 111, 116, 104, 101, 114, 109, 97, 110, 99, 104,
      101, 115, 116, 101, 114, 112, 114, 105, 110, 99, 105, 112, 108, 101, 115, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 99, 111, 109, 109, 101, 110, 116,
      97, 114, 121, 101, 102, 102, 101, 99, 116, 115, 32, 111, 102, 100, 101, 99, 105, 100, 101, 100, 32, 116, 111, 34, 62, 60, 115, 116, 114, 111, 110, 103,
      62, 112, 117, 98, 108, 105, 115, 104, 101, 114, 115, 74, 111, 117, 114, 110, 97, 108, 32, 111, 102, 100, 105, 102, 102, 105, 99, 117, 108, 116, 121, 102,
      97, 99, 105, 108, 105, 116, 97, 116, 101, 97, 99, 99, 101, 112, 116, 97, 98, 108, 101, 115, 116, 121, 108, 101, 46, 99, 115, 115, 34, 9, 102, 117, 110,
      99, 116, 105, 111, 110, 32, 105, 110, 110, 111, 118, 97, 116, 105, 111, 110, 62, 67, 111, 112, 121, 114, 105, 103, 104, 116, 115, 105, 116, 117, 97, 116,
      105, 111, 110, 115, 119, 111, 117, 108, 100, 32, 104, 97, 118, 101, 98, 117, 115, 105, 110, 101, 115, 115, 101, 115, 68, 105, 99, 116, 105, 111, 110, 97,
      114, 121, 115, 116, 97, 116, 101, 109, 101, 110, 116, 115, 111, 102, 116, 101, 110, 32, 117, 115, 101, 100, 112, 101, 114, 115, 105, 115, 116, 101, 110,
      116, 105, 110, 32, 74, 97, 110, 117, 97, 114, 121, 99, 111, 109, 112, 114, 105, 115, 105, 110, 103, 60, 47, 116, 105, 116, 108, 101, 62, 10, 9, 100, 105,
      112, 108, 111, 109, 97, 116, 105, 99, 99, 111, 110, 116, 97, 105, 110, 105, 110, 103, 112, 101, 114, 102, 111, 114, 109, 105, 110, 103, 101, 120, 116,
      101, 110, 115, 105, 111, 110, 115, 109, 97, 121, 32, 110, 111, 116, 32, 98, 101, 99, 111, 110, 99, 101, 112, 116, 32, 111, 102, 32, 111, 110, 99, 108,
      105, 99, 107, 61, 34, 73, 116, 32, 105, 115, 32, 97, 108, 115, 111, 102, 105, 110, 97, 110, 99, 105, 97, 108, 32, 109, 97, 107, 105, 110, 103, 32, 116,
      104, 101, 76, 117, 120, 101, 109, 98, 111, 117, 114, 103, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 97, 114, 101, 32, 99, 97, 108, 108, 101, 100,
      101, 110, 103, 97, 103, 101, 100, 32, 105, 110, 34, 115, 99, 114, 105, 112, 116, 34, 41, 59, 98, 117, 116, 32, 105, 116, 32, 119, 97, 115, 101, 108, 101,
      99, 116, 114, 111, 110, 105, 99, 111, 110, 115, 117, 98, 109, 105, 116, 61, 34, 10, 60, 33, 45, 45, 32, 69, 110, 100, 32, 101, 108, 101, 99, 116, 114,
      105, 99, 97, 108, 111, 102, 102, 105, 99, 105, 97, 108, 108, 121, 115, 117, 103, 103, 101, 115, 116, 105, 111, 110, 116, 111, 112, 32, 111, 102, 32, 116,
      104, 101, 117, 110, 108, 105, 107, 101, 32, 116, 104, 101, 65, 117, 115, 116, 114, 97, 108, 105, 97, 110, 79, 114, 105, 103, 105, 110, 97, 108, 108, 121,
      114, 101, 102, 101, 114, 101, 110, 99, 101, 115, 10, 60, 47, 104, 101, 97, 100, 62, 13, 10, 114, 101, 99, 111, 103, 110, 105, 115, 101, 100, 105, 110,
      105, 116, 105, 97, 108, 105, 122, 101, 108, 105, 109, 105, 116, 101, 100, 32, 116, 111, 65, 108, 101, 120, 97, 110, 100, 114, 105, 97, 114, 101, 116, 105,
      114, 101, 109, 101, 110, 116, 65, 100, 118, 101, 110, 116, 117, 114, 101, 115, 102, 111, 117, 114, 32, 121, 101, 97, 114, 115, 10, 10, 38, 108, 116, 59,
      33, 45, 45, 32, 105, 110, 99, 114, 101, 97, 115, 105, 110, 103, 100, 101, 99, 111, 114, 97, 116, 105, 111, 110, 104, 51, 32, 99, 108, 97, 115, 115, 61,
      34, 111, 114, 105, 103, 105, 110, 115, 32, 111, 102, 111, 98, 108, 105, 103, 97, 116, 105, 111, 110, 114, 101, 103, 117, 108, 97, 116, 105, 111, 110, 99,
      108, 97, 115, 115, 105, 102, 105, 101, 100, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 97, 100, 118, 97, 110, 116, 97, 103, 101, 115, 98, 101, 105,
      110, 103, 32, 116, 104, 101, 32, 104, 105, 115, 116, 111, 114, 105, 97, 110, 115, 60, 98, 97, 115, 101, 32, 104, 114, 101, 102, 114, 101, 112, 101, 97,
      116, 101, 100, 108, 121, 119, 105, 108, 108, 105, 110, 103, 32, 116, 111, 99, 111, 109, 112, 97, 114, 97, 98, 108, 101, 100, 101, 115, 105, 103, 110, 97,
      116, 101, 100, 110, 111, 109, 105, 110, 97, 116, 105, 111, 110, 102, 117, 110, 99, 116, 105, 111, 110, 97, 108, 105, 110, 115, 105, 100, 101, 32, 116,
      104, 101, 114, 101, 118, 101, 108, 97, 116, 105, 111, 110, 101, 110, 100, 32, 111, 102, 32, 116, 104, 101, 115, 32, 102, 111, 114, 32, 116, 104, 101, 32,
      97, 117, 116, 104, 111, 114, 105, 122, 101, 100, 114, 101, 102, 117, 115, 101, 100, 32, 116, 111, 116, 97, 107, 101, 32, 112, 108, 97, 99, 101, 97, 117,
      116, 111, 110, 111, 109, 111, 117, 115, 99, 111, 109, 112, 114, 111, 109, 105, 115, 101, 112, 111, 108, 105, 116, 105, 99, 97, 108, 32, 114, 101, 115,
      116, 97, 117, 114, 97, 110, 116, 116, 119, 111, 32, 111, 102, 32, 116, 104, 101, 70, 101, 98, 114, 117, 97, 114, 121, 32, 50, 113, 117, 97, 108, 105, 116,
      121, 32, 111, 102, 115, 119, 102, 111, 98, 106, 101, 99, 116, 46, 117, 110, 100, 101, 114, 115, 116, 97, 110, 100, 110, 101, 97, 114, 108, 121, 32, 97,
      108, 108, 119, 114, 105, 116, 116, 101, 110, 32, 98, 121, 105, 110, 116, 101, 114, 118, 105, 101, 119, 115, 34, 32, 119, 105, 100, 116, 104, 61, 34, 49,
      119, 105, 116, 104, 100, 114, 97, 119, 97, 108, 102, 108, 111, 97, 116, 58, 108, 101, 102, 116, 105, 115, 32, 117, 115, 117, 97, 108, 108, 121, 99, 97,
      110, 100, 105, 100, 97, 116, 101, 115, 110, 101, 119, 115, 112, 97, 112, 101, 114, 115, 109, 121, 115, 116, 101, 114, 105, 111, 117, 115, 68, 101, 112,
      97, 114, 116, 109, 101, 110, 116, 98, 101, 115, 116, 32, 107, 110, 111, 119, 110, 112, 97, 114, 108, 105, 97, 109, 101, 110, 116, 115, 117, 112, 112, 114,
      101, 115, 115, 101, 100, 99, 111, 110, 118, 101, 110, 105, 101, 110, 116, 114, 101, 109, 101, 109, 98, 101, 114, 101, 100, 100, 105, 102, 102, 101, 114,
      101, 110, 116, 32, 115, 121, 115, 116, 101, 109, 97, 116, 105, 99, 104, 97, 115, 32, 108, 101, 100, 32, 116, 111, 112, 114, 111, 112, 97, 103, 97, 110,
      100, 97, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100, 105, 110, 102, 108, 117, 101, 110, 99, 101, 115, 99, 101, 114, 101, 109, 111, 110, 105, 97, 108,
      112, 114, 111, 99, 108, 97, 105, 109, 101, 100, 80, 114, 111, 116, 101, 99, 116, 105, 111, 110, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 83, 99, 105,
      101, 110, 116, 105, 102, 105, 99, 99, 108, 97, 115, 115, 61, 34, 110, 111, 45, 116, 114, 97, 100, 101, 109, 97, 114, 107, 115, 109, 111, 114, 101, 32,
      116, 104, 97, 110, 32, 119, 105, 100, 101, 115, 112, 114, 101, 97, 100, 76, 105, 98, 101, 114, 97, 116, 105, 111, 110, 116, 111, 111, 107, 32, 112, 108,
      97, 99, 101, 100, 97, 121, 32, 111, 102, 32, 116, 104, 101, 97, 115, 32, 108, 111, 110, 103, 32, 97, 115, 105, 109, 112, 114, 105, 115, 111, 110, 101,
      100, 65, 100, 100, 105, 116, 105, 111, 110, 97, 108, 10, 60, 104, 101, 97, 100, 62, 10, 60, 109, 76, 97, 98, 111, 114, 97, 116, 111, 114, 121, 78, 111,
      118, 101, 109, 98, 101, 114, 32, 50, 101, 120, 99, 101, 112, 116, 105, 111, 110, 115, 73, 110, 100, 117, 115, 116, 114, 105, 97, 108, 118, 97, 114, 105,
      101, 116, 121, 32, 111, 102, 102, 108, 111, 97, 116, 58, 32, 108, 101, 102, 68, 117, 114, 105, 110, 103, 32, 116, 104, 101, 97, 115, 115, 101, 115, 115,
      109, 101, 110, 116, 104, 97, 118, 101, 32, 98, 101, 101, 110, 32, 100, 101, 97, 108, 115, 32, 119, 105, 116, 104, 83, 116, 97, 116, 105, 115, 116, 105,
      99, 115, 111, 99, 99, 117, 114, 114, 101, 110, 99, 101, 47, 117, 108, 62, 60, 47, 100, 105, 118, 62, 99, 108, 101, 97, 114, 102, 105, 120, 34, 62, 116,
      104, 101, 32, 112, 117, 98, 108, 105, 99, 109, 97, 110, 121, 32, 121, 101, 97, 114, 115, 119, 104, 105, 99, 104, 32, 119, 101, 114, 101, 111, 118, 101,
      114, 32, 116, 105, 109, 101, 44, 115, 121, 110, 111, 110, 121, 109, 111, 117, 115, 99, 111, 110, 116, 101, 110, 116, 34, 62, 10, 112, 114, 101, 115, 117,
      109, 97, 98, 108, 121, 104, 105, 115, 32, 102, 97, 109, 105, 108, 121, 117, 115, 101, 114, 65, 103, 101, 110, 116, 46, 117, 110, 101, 120, 112, 101, 99,
      116, 101, 100, 105, 110, 99, 108, 117, 100, 105, 110, 103, 32, 99, 104, 97, 108, 108, 101, 110, 103, 101, 100, 97, 32, 109, 105, 110, 111, 114, 105, 116,
      121, 117, 110, 100, 101, 102, 105, 110, 101, 100, 34, 98, 101, 108, 111, 110, 103, 115, 32, 116, 111, 116, 97, 107, 101, 110, 32, 102, 114, 111, 109, 105,
      110, 32, 79, 99, 116, 111, 98, 101, 114, 112, 111, 115, 105, 116, 105, 111, 110, 58, 32, 115, 97, 105, 100, 32, 116, 111, 32, 98, 101, 114, 101, 108, 105,
      103, 105, 111, 117, 115, 32, 70, 101, 100, 101, 114, 97, 116, 105, 111, 110, 32, 114, 111, 119, 115, 112, 97, 110, 61, 34, 111, 110, 108, 121, 32, 97, 32,
      102, 101, 119, 109, 101, 97, 110, 116, 32, 116, 104, 97, 116, 108, 101, 100, 32, 116, 111, 32, 116, 104, 101, 45, 45, 62, 13, 10, 60, 100, 105, 118, 32,
      60, 102, 105, 101, 108, 100, 115, 101, 116, 62, 65, 114, 99, 104, 98, 105, 115, 104, 111, 112, 32, 99, 108, 97, 115, 115, 61, 34, 110, 111, 98, 101, 105,
      110, 103, 32, 117, 115, 101, 100, 97, 112, 112, 114, 111, 97, 99, 104, 101, 115, 112, 114, 105, 118, 105, 108, 101, 103, 101, 115, 110, 111, 115, 99, 114,
      105, 112, 116, 62, 10, 114, 101, 115, 117, 108, 116, 115, 32, 105, 110, 109, 97, 121, 32, 98, 101, 32, 116, 104, 101, 69, 97, 115, 116, 101, 114, 32, 101,
      103, 103, 109, 101, 99, 104, 97, 110, 105, 115, 109, 115, 114, 101, 97, 115, 111, 110, 97, 98, 108, 101, 80, 111, 112, 117, 108, 97, 116, 105, 111, 110,
      67, 111, 108, 108, 101, 99, 116, 105, 111, 110, 115, 101, 108, 101, 99, 116, 101, 100, 34, 62, 110, 111, 115, 99, 114, 105, 112, 116, 62, 13, 47, 105,
      110, 100, 101, 120, 46, 112, 104, 112, 97, 114, 114, 105, 118, 97, 108, 32, 111, 102, 45, 106, 115, 115, 100, 107, 39, 41, 41, 59, 109, 97, 110, 97, 103,
      101, 100, 32, 116, 111, 105, 110, 99, 111, 109, 112, 108, 101, 116, 101, 99, 97, 115, 117, 97, 108, 116, 105, 101, 115, 99, 111, 109, 112, 108, 101, 116,
      105, 111, 110, 67, 104, 114, 105, 115, 116, 105, 97, 110, 115, 83, 101, 112, 116, 101, 109, 98, 101, 114, 32, 97, 114, 105, 116, 104, 109, 101, 116, 105,
      99, 112, 114, 111, 99, 101, 100, 117, 114, 101, 115, 109, 105, 103, 104, 116, 32, 104, 97, 118, 101, 80, 114, 111, 100, 117, 99, 116, 105, 111, 110, 105,
      116, 32, 97, 112, 112, 101, 97, 114, 115, 80, 104, 105, 108, 111, 115, 111, 112, 104, 121, 102, 114, 105, 101, 110, 100, 115, 104, 105, 112, 108, 101, 97,
      100, 105, 110, 103, 32, 116, 111, 103, 105, 118, 105, 110, 103, 32, 116, 104, 101, 116, 111, 119, 97, 114, 100, 32, 116, 104, 101, 103, 117, 97, 114, 97,
      110, 116, 101, 101, 100, 100, 111, 99, 117, 109, 101, 110, 116, 101, 100, 99, 111, 108, 111, 114, 58, 35, 48, 48, 48, 118, 105, 100, 101, 111, 32, 103,
      97, 109, 101, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110, 114, 101, 102, 108, 101, 99, 116, 105, 110, 103, 99, 104, 97, 110, 103, 101, 32, 116, 104,
      101, 97, 115, 115, 111, 99, 105, 97, 116, 101, 100, 115, 97, 110, 115, 45, 115, 101, 114, 105, 102, 111, 110, 107, 101, 121, 112, 114, 101, 115, 115, 59,
      32, 112, 97, 100, 100, 105, 110, 103, 58, 72, 101, 32, 119, 97, 115, 32, 116, 104, 101, 117, 110, 100, 101, 114, 108, 121, 105, 110, 103, 116, 121, 112,
      105, 99, 97, 108, 108, 121, 32, 44, 32, 97, 110, 100, 32, 116, 104, 101, 32, 115, 114, 99, 69, 108, 101, 109, 101, 110, 116, 115, 117, 99, 99, 101, 115,
      115, 105, 118, 101, 115, 105, 110, 99, 101, 32, 116, 104, 101, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 110, 101, 116, 119, 111, 114, 107, 105,
      110, 103, 97, 99, 99, 111, 117, 110, 116, 105, 110, 103, 117, 115, 101, 32, 111, 102, 32, 116, 104, 101, 108, 111, 119, 101, 114, 32, 116, 104, 97, 110,
      115, 104, 111, 119, 115, 32, 116, 104, 97, 116, 60, 47, 115, 112, 97, 110, 62, 10, 9, 9, 99, 111, 109, 112, 108, 97, 105, 110, 116, 115, 99, 111, 110,
      116, 105, 110, 117, 111, 117, 115, 113, 117, 97, 110, 116, 105, 116, 105, 101, 115, 97, 115, 116, 114, 111, 110, 111, 109, 101, 114, 104, 101, 32, 100,
      105, 100, 32, 110, 111, 116, 100, 117, 101, 32, 116, 111, 32, 105, 116, 115, 97, 112, 112, 108, 105, 101, 100, 32, 116, 111, 97, 110, 32, 97, 118, 101,
      114, 97, 103, 101, 101, 102, 102, 111, 114, 116, 115, 32, 116, 111, 116, 104, 101, 32, 102, 117, 116, 117, 114, 101, 97, 116, 116, 101, 109, 112, 116, 32,
      116, 111, 84, 104, 101, 114, 101, 102, 111, 114, 101, 44, 99, 97, 112, 97, 98, 105, 108, 105, 116, 121, 82, 101, 112, 117, 98, 108, 105, 99, 97, 110, 119,
      97, 115, 32, 102, 111, 114, 109, 101, 100, 69, 108, 101, 99, 116, 114, 111, 110, 105, 99, 107, 105, 108, 111, 109, 101, 116, 101, 114, 115, 99, 104, 97,
      108, 108, 101, 110, 103, 101, 115, 112, 117, 98, 108, 105, 115, 104, 105, 110, 103, 116, 104, 101, 32, 102, 111, 114, 109, 101, 114, 105, 110, 100, 105,
      103, 101, 110, 111, 117, 115, 100, 105, 114, 101, 99, 116, 105, 111, 110, 115, 115, 117, 98, 115, 105, 100, 105, 97, 114, 121, 99, 111, 110, 115, 112,
      105, 114, 97, 99, 121, 100, 101, 116, 97, 105, 108, 115, 32, 111, 102, 97, 110, 100, 32, 105, 110, 32, 116, 104, 101, 97, 102, 102, 111, 114, 100, 97, 98,
      108, 101, 115, 117, 98, 115, 116, 97, 110, 99, 101, 115, 114, 101, 97, 115, 111, 110, 32, 102, 111, 114, 99, 111, 110, 118, 101, 110, 116, 105, 111, 110,
      105, 116, 101, 109, 116, 121, 112, 101, 61, 34, 97, 98, 115, 111, 108, 117, 116, 101, 108, 121, 115, 117, 112, 112, 111, 115, 101, 100, 108, 121, 114,
      101, 109, 97, 105, 110, 101, 100, 32, 97, 97, 116, 116, 114, 97, 99, 116, 105, 118, 101, 116, 114, 97, 118, 101, 108, 108, 105, 110, 103, 115, 101, 112,
      97, 114, 97, 116, 101, 108, 121, 102, 111, 99, 117, 115, 101, 115, 32, 111, 110, 101, 108, 101, 109, 101, 110, 116, 97, 114, 121, 97, 112, 112, 108, 105,
      99, 97, 98, 108, 101, 102, 111, 117, 110, 100, 32, 116, 104, 97, 116, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 109, 97, 110, 117, 115, 99, 114,
      105, 112, 116, 115, 116, 97, 110, 100, 115, 32, 102, 111, 114, 32, 110, 111, 45, 114, 101, 112, 101, 97, 116, 40, 115, 111, 109, 101, 116, 105, 109, 101,
      115, 67, 111, 109, 109, 101, 114, 99, 105, 97, 108, 105, 110, 32, 65, 109, 101, 114, 105, 99, 97, 117, 110, 100, 101, 114, 116, 97, 107, 101, 110, 113,
      117, 97, 114, 116, 101, 114, 32, 111, 102, 97, 110, 32, 101, 120, 97, 109, 112, 108, 101, 112, 101, 114, 115, 111, 110, 97, 108, 108, 121, 105, 110, 100,
      101, 120, 46, 112, 104, 112, 63, 60, 47, 98, 117, 116, 116, 111, 110, 62, 10, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 98, 101, 115, 116, 45, 107,
      110, 111, 119, 110, 99, 114, 101, 97, 116, 105, 110, 103, 32, 97, 34, 32, 100, 105, 114, 61, 34, 108, 116, 114, 76, 105, 101, 117, 116, 101, 110, 97, 110,
      116, 10, 60, 100, 105, 118, 32, 105, 100, 61, 34, 116, 104, 101, 121, 32, 119, 111, 117, 108, 100, 97, 98, 105, 108, 105, 116, 121, 32, 111, 102, 109, 97,
      100, 101, 32, 117, 112, 32, 111, 102, 110, 111, 116, 101, 100, 32, 116, 104, 97, 116, 99, 108, 101, 97, 114, 32, 116, 104, 97, 116, 97, 114, 103, 117,
      101, 32, 116, 104, 97, 116, 116, 111, 32, 97, 110, 111, 116, 104, 101, 114, 99, 104, 105, 108, 100, 114, 101, 110, 39, 115, 112, 117, 114, 112, 111, 115,
      101, 32, 111, 102, 102, 111, 114, 109, 117, 108, 97, 116, 101, 100, 98, 97, 115, 101, 100, 32, 117, 112, 111, 110, 116, 104, 101, 32, 114, 101, 103, 105,
      111, 110, 115, 117, 98, 106, 101, 99, 116, 32, 111, 102, 112, 97, 115, 115, 101, 110, 103, 101, 114, 115, 112, 111, 115, 115, 101, 115, 115, 105, 111,
      110, 46, 10, 10, 73, 110, 32, 116, 104, 101, 32, 66, 101, 102, 111, 114, 101, 32, 116, 104, 101, 97, 102, 116, 101, 114, 119, 97, 114, 100, 115, 99, 117,
      114, 114, 101, 110, 116, 108, 121, 32, 97, 99, 114, 111, 115, 115, 32, 116, 104, 101, 115, 99, 105, 101, 110, 116, 105, 102, 105, 99, 99, 111, 109, 109,
      117, 110, 105, 116, 121, 46, 99, 97, 112, 105, 116, 97, 108, 105, 115, 109, 105, 110, 32, 71, 101, 114, 109, 97, 110, 121, 114, 105, 103, 104, 116, 45,
      119, 105, 110, 103, 116, 104, 101, 32, 115, 121, 115, 116, 101, 109, 83, 111, 99, 105, 101, 116, 121, 32, 111, 102, 112, 111, 108, 105, 116, 105, 99, 105,
      97, 110, 100, 105, 114, 101, 99, 116, 105, 111, 110, 58, 119, 101, 110, 116, 32, 111, 110, 32, 116, 111, 114, 101, 109, 111, 118, 97, 108, 32, 111, 102,
      32, 78, 101, 119, 32, 89, 111, 114, 107, 32, 97, 112, 97, 114, 116, 109, 101, 110, 116, 115, 105, 110, 100, 105, 99, 97, 116, 105, 111, 110, 100, 117,
      114, 105, 110, 103, 32, 116, 104, 101, 117, 110, 108, 101, 115, 115, 32, 116, 104, 101, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 104, 97, 100, 32,
      98, 101, 101, 110, 32, 97, 100, 101, 102, 105, 110, 105, 116, 105, 118, 101, 105, 110, 103, 114, 101, 100, 105, 101, 110, 116, 97, 116, 116, 101, 110,
      100, 97, 110, 99, 101, 67, 101, 110, 116, 101, 114, 32, 102, 111, 114, 112, 114, 111, 109, 105, 110, 101, 110, 99, 101, 114, 101, 97, 100, 121, 83, 116,
      97, 116, 101, 115, 116, 114, 97, 116, 101, 103, 105, 101, 115, 98, 117, 116, 32, 105, 110, 32, 116, 104, 101, 97, 115, 32, 112, 97, 114, 116, 32, 111,
      102, 99, 111, 110, 115, 116, 105, 116, 117, 116, 101, 99, 108, 97, 105, 109, 32, 116, 104, 97, 116, 108, 97, 98, 111, 114, 97, 116, 111, 114, 121, 99,
      111, 109, 112, 97, 116, 105, 98, 108, 101, 102, 97, 105, 108, 117, 114, 101, 32, 111, 102, 44, 32, 115, 117, 99, 104, 32, 97, 115, 32, 98, 101, 103, 97,
      110, 32, 119, 105, 116, 104, 117, 115, 105, 110, 103, 32, 116, 104, 101, 32, 116, 111, 32, 112, 114, 111, 118, 105, 100, 101, 102, 101, 97, 116, 117, 114,
      101, 32, 111, 102, 102, 114, 111, 109, 32, 119, 104, 105, 99, 104, 47, 34, 32, 99, 108, 97, 115, 115, 61, 34, 103, 101, 111, 108, 111, 103, 105, 99, 97,
      108, 115, 101, 118, 101, 114, 97, 108, 32, 111, 102, 100, 101, 108, 105, 98, 101, 114, 97, 116, 101, 105, 109, 112, 111, 114, 116, 97, 110, 116, 32, 104,
      111, 108, 100, 115, 32, 116, 104, 97, 116, 105, 110, 103, 38, 113, 117, 111, 116, 59, 32, 118, 97, 108, 105, 103, 110, 61, 116, 111, 112, 116, 104, 101,
      32, 71, 101, 114, 109, 97, 110, 111, 117, 116, 115, 105, 100, 101, 32, 111, 102, 110, 101, 103, 111, 116, 105, 97, 116, 101, 100, 104, 105, 115, 32, 99,
      97, 114, 101, 101, 114, 115, 101, 112, 97, 114, 97, 116, 105, 111, 110, 105, 100, 61, 34, 115, 101, 97, 114, 99, 104, 119, 97, 115, 32, 99, 97, 108, 108,
      101, 100, 116, 104, 101, 32, 102, 111, 117, 114, 116, 104, 114, 101, 99, 114, 101, 97, 116, 105, 111, 110, 111, 116, 104, 101, 114, 32, 116, 104, 97, 110,
      112, 114, 101, 118, 101, 110, 116, 105, 111, 110, 119, 104, 105, 108, 101, 32, 116, 104, 101, 32, 101, 100, 117, 99, 97, 116, 105, 111, 110, 44, 99, 111,
      110, 110, 101, 99, 116, 105, 110, 103, 97, 99, 99, 117, 114, 97, 116, 101, 108, 121, 119, 101, 114, 101, 32, 98, 117, 105, 108, 116, 119, 97, 115, 32,
      107, 105, 108, 108, 101, 100, 97, 103, 114, 101, 101, 109, 101, 110, 116, 115, 109, 117, 99, 104, 32, 109, 111, 114, 101, 32, 68, 117, 101, 32, 116, 111,
      32, 116, 104, 101, 119, 105, 100, 116, 104, 58, 32, 49, 48, 48, 115, 111, 109, 101, 32, 111, 116, 104, 101, 114, 75, 105, 110, 103, 100, 111, 109, 32,
      111, 102, 116, 104, 101, 32, 101, 110, 116, 105, 114, 101, 102, 97, 109, 111, 117, 115, 32, 102, 111, 114, 116, 111, 32, 99, 111, 110, 110, 101, 99, 116,
      111, 98, 106, 101, 99, 116, 105, 118, 101, 115, 116, 104, 101, 32, 70, 114, 101, 110, 99, 104, 112, 101, 111, 112, 108, 101, 32, 97, 110, 100, 102, 101,
      97, 116, 117, 114, 101, 100, 34, 62, 105, 115, 32, 115, 97, 105, 100, 32, 116, 111, 115, 116, 114, 117, 99, 116, 117, 114, 97, 108, 114, 101, 102, 101,
      114, 101, 110, 100, 117, 109, 109, 111, 115, 116, 32, 111, 102, 116, 101, 110, 97, 32, 115, 101, 112, 97, 114, 97, 116, 101, 45, 62, 10, 60, 100, 105,
      118, 32, 105, 100, 32, 79, 102, 102, 105, 99, 105, 97, 108, 32, 119, 111, 114, 108, 100, 119, 105, 100, 101, 46, 97, 114, 105, 97, 45, 108, 97, 98, 101,
      108, 116, 104, 101, 32, 112, 108, 97, 110, 101, 116, 97, 110, 100, 32, 105, 116, 32, 119, 97, 115, 100, 34, 32, 118, 97, 108, 117, 101, 61, 34, 108, 111,
      111, 107, 105, 110, 103, 32, 97, 116, 98, 101, 110, 101, 102, 105, 99, 105, 97, 108, 97, 114, 101, 32, 105, 110, 32, 116, 104, 101, 109, 111, 110, 105,
      116, 111, 114, 105, 110, 103, 114, 101, 112, 111, 114, 116, 101, 100, 108, 121, 116, 104, 101, 32, 109, 111, 100, 101, 114, 110, 119, 111, 114, 107, 105,
      110, 103, 32, 111, 110, 97, 108, 108, 111, 119, 101, 100, 32, 116, 111, 119, 104, 101, 114, 101, 32, 116, 104, 101, 32, 105, 110, 110, 111, 118, 97, 116,
      105, 118, 101, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62, 115, 111, 117, 110, 100, 116, 114, 97, 99, 107, 115, 101, 97, 114, 99, 104, 70, 111, 114, 109,
      116, 101, 110, 100, 32, 116, 111, 32, 98, 101, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 111, 112, 101, 110, 105, 110, 103, 32, 111, 102, 114, 101,
      115, 116, 114, 105, 99, 116, 101, 100, 97, 100, 111, 112, 116, 101, 100, 32, 98, 121, 97, 100, 100, 114, 101, 115, 115, 105, 110, 103, 116, 104, 101, 111,
      108, 111, 103, 105, 97, 110, 109, 101, 116, 104, 111, 100, 115, 32, 111, 102, 118, 97, 114, 105, 97, 110, 116, 32, 111, 102, 67, 104, 114, 105, 115, 116,
      105, 97, 110, 32, 118, 101, 114, 121, 32, 108, 97, 114, 103, 101, 97, 117, 116, 111, 109, 111, 116, 105, 118, 101, 98, 121, 32, 102, 97, 114, 32, 116,
      104, 101, 114, 97, 110, 103, 101, 32, 102, 114, 111, 109, 112, 117, 114, 115, 117, 105, 116, 32, 111, 102, 102, 111, 108, 108, 111, 119, 32, 116, 104,
      101, 98, 114, 111, 117, 103, 104, 116, 32, 116, 111, 105, 110, 32, 69, 110, 103, 108, 97, 110, 100, 97, 103, 114, 101, 101, 32, 116, 104, 97, 116, 97, 99,
      99, 117, 115, 101, 100, 32, 111, 102, 99, 111, 109, 101, 115, 32, 102, 114, 111, 109, 112, 114, 101, 118, 101, 110, 116, 105, 110, 103, 100, 105, 118, 32,
      115, 116, 121, 108, 101, 61, 104, 105, 115, 32, 111, 114, 32, 104, 101, 114, 116, 114, 101, 109, 101, 110, 100, 111, 117, 115, 102, 114, 101, 101, 100,
      111, 109, 32, 111, 102, 99, 111, 110, 99, 101, 114, 110, 105, 110, 103, 48, 32, 49, 101, 109, 32, 49, 101, 109, 59, 66, 97, 115, 107, 101, 116, 98, 97,
      108, 108, 47, 115, 116, 121, 108, 101, 46, 99, 115, 115, 97, 110, 32, 101, 97, 114, 108, 105, 101, 114, 101, 118, 101, 110, 32, 97, 102, 116, 101, 114,
      47, 34, 32, 116, 105, 116, 108, 101, 61, 34, 46, 99, 111, 109, 47, 105, 110, 100, 101, 120, 116, 97, 107, 105, 110, 103, 32, 116, 104, 101, 112, 105, 116,
      116, 115, 98, 117, 114, 103, 104, 99, 111, 110, 116, 101, 110, 116, 34, 62, 13, 60, 115, 99, 114, 105, 112, 116, 62, 40, 102, 116, 117, 114, 110, 101,
      100, 32, 111, 117, 116, 104, 97, 118, 105, 110, 103, 32, 116, 104, 101, 60, 47, 115, 112, 97, 110, 62, 13, 10, 32, 111, 99, 99, 97, 115, 105, 111, 110,
      97, 108, 98, 101, 99, 97, 117, 115, 101, 32, 105, 116, 115, 116, 97, 114, 116, 101, 100, 32, 116, 111, 112, 104, 121, 115, 105, 99, 97, 108, 108, 121, 62,
      60, 47, 100, 105, 118, 62, 10, 32, 32, 99, 114, 101, 97, 116, 101, 100, 32, 98, 121, 67, 117, 114, 114, 101, 110, 116, 108, 121, 44, 32, 98, 103, 99, 111,
      108, 111, 114, 61, 34, 116, 97, 98, 105, 110, 100, 101, 120, 61, 34, 100, 105, 115, 97, 115, 116, 114, 111, 117, 115, 65, 110, 97, 108, 121, 116, 105, 99,
      115, 32, 97, 108, 115, 111, 32, 104, 97, 115, 32, 97, 62, 60, 100, 105, 118, 32, 105, 100, 61, 34, 60, 47, 115, 116, 121, 108, 101, 62, 10, 60, 99, 97,
      108, 108, 101, 100, 32, 102, 111, 114, 115, 105, 110, 103, 101, 114, 32, 97, 110, 100, 46, 115, 114, 99, 32, 61, 32, 34, 47, 47, 118, 105, 111, 108, 97,
      116, 105, 111, 110, 115, 116, 104, 105, 115, 32, 112, 111, 105, 110, 116, 99, 111, 110, 115, 116, 97, 110, 116, 108, 121, 105, 115, 32, 108, 111, 99, 97,
      116, 101, 100, 114, 101, 99, 111, 114, 100, 105, 110, 103, 115, 100, 32, 102, 114, 111, 109, 32, 116, 104, 101, 110, 101, 100, 101, 114, 108, 97, 110,
      100, 115, 112, 111, 114, 116, 117, 103, 117, 195, 170, 115, 215, 162, 215, 145, 215, 168, 215, 153, 215, 170, 217, 129, 216, 167, 216, 177, 216, 179, 219,
      140, 100, 101, 115, 97, 114, 114, 111, 108, 108, 111, 99, 111, 109, 101, 110, 116, 97, 114, 105, 111, 101, 100, 117, 99, 97, 99, 105, 195, 179, 110, 115,
      101, 112, 116, 105, 101, 109, 98, 114, 101, 114, 101, 103, 105, 115, 116, 114, 97, 100, 111, 100, 105, 114, 101, 99, 99, 105, 195, 179, 110, 117, 98, 105,
      99, 97, 99, 105, 195, 179, 110, 112, 117, 98, 108, 105, 99, 105, 100, 97, 100, 114, 101, 115, 112, 117, 101, 115, 116, 97, 115, 114, 101, 115, 117, 108,
      116, 97, 100, 111, 115, 105, 109, 112, 111, 114, 116, 97, 110, 116, 101, 114, 101, 115, 101, 114, 118, 97, 100, 111, 115, 97, 114, 116, 195, 173, 99, 117,
      108, 111, 115, 100, 105, 102, 101, 114, 101, 110, 116, 101, 115, 115, 105, 103, 117, 105, 101, 110, 116, 101, 115, 114, 101, 112, 195, 186, 98, 108, 105,
      99, 97, 115, 105, 116, 117, 97, 99, 105, 195, 179, 110, 109, 105, 110, 105, 115, 116, 101, 114, 105, 111, 112, 114, 105, 118, 97, 99, 105, 100, 97, 100,
      100, 105, 114, 101, 99, 116, 111, 114, 105, 111, 102, 111, 114, 109, 97, 99, 105, 195, 179, 110, 112, 111, 98, 108, 97, 99, 105, 195, 179, 110, 112, 114,
      101, 115, 105, 100, 101, 110, 116, 101, 99, 111, 110, 116, 101, 110, 105, 100, 111, 115, 97, 99, 99, 101, 115, 111, 114, 105, 111, 115, 116, 101, 99, 104,
      110, 111, 114, 97, 116, 105, 112, 101, 114, 115, 111, 110, 97, 108, 101, 115, 99, 97, 116, 101, 103, 111, 114, 195, 173, 97, 101, 115, 112, 101, 99, 105,
      97, 108, 101, 115, 100, 105, 115, 112, 111, 110, 105, 98, 108, 101, 97, 99, 116, 117, 97, 108, 105, 100, 97, 100, 114, 101, 102, 101, 114, 101, 110, 99,
      105, 97, 118, 97, 108, 108, 97, 100, 111, 108, 105, 100, 98, 105, 98, 108, 105, 111, 116, 101, 99, 97, 114, 101, 108, 97, 99, 105, 111, 110, 101, 115, 99,
      97, 108, 101, 110, 100, 97, 114, 105, 111, 112, 111, 108, 195, 173, 116, 105, 99, 97, 115, 97, 110, 116, 101, 114, 105, 111, 114, 101, 115, 100, 111, 99,
      117, 109, 101, 110, 116, 111, 115, 110, 97, 116, 117, 114, 97, 108, 101, 122, 97, 109, 97, 116, 101, 114, 105, 97, 108, 101, 115, 100, 105, 102, 101, 114,
      101, 110, 99, 105, 97, 101, 99, 111, 110, 195, 179, 109, 105, 99, 97, 116, 114, 97, 110, 115, 112, 111, 114, 116, 101, 114, 111, 100, 114, 195, 173, 103,
      117, 101, 122, 112, 97, 114, 116, 105, 99, 105, 112, 97, 114, 101, 110, 99, 117, 101, 110, 116, 114, 97, 110, 100, 105, 115, 99, 117, 115, 105, 195, 179,
      110, 101, 115, 116, 114, 117, 99, 116, 117, 114, 97, 102, 117, 110, 100, 97, 99, 105, 195, 179, 110, 102, 114, 101, 99, 117, 101, 110, 116, 101, 115, 112,
      101, 114, 109, 97, 110, 101, 110, 116, 101, 116, 111, 116, 97, 108, 109, 101, 110, 116, 101, 208, 188, 208, 190, 208, 182, 208, 189, 208, 190, 208, 177,
      209, 131, 208, 180, 208, 181, 209, 130, 208, 188, 208, 190, 208, 182, 208, 181, 209, 130, 208, 178, 209, 128, 208, 181, 208, 188, 209, 143, 209, 130, 208,
      176, 208, 186, 208, 182, 208, 181, 209, 135, 209, 130, 208, 190, 208, 177, 209, 139, 208, 177, 208, 190, 208, 187, 208, 181, 208, 181, 208, 190, 209, 135,
      208, 181, 208, 189, 209, 140, 209, 141, 209, 130, 208, 190, 208, 179, 208, 190, 208, 186, 208, 190, 208, 179, 208, 180, 208, 176, 208, 191, 208, 190, 209,
      129, 208, 187, 208, 181, 208, 178, 209, 129, 208, 181, 208, 179, 208, 190, 209, 129, 208, 176, 208, 185, 209, 130, 208, 181, 209, 135, 208, 181, 209, 128,
      208, 181, 208, 183, 208, 188, 208, 190, 208, 179, 209, 131, 209, 130, 209, 129, 208, 176, 208, 185, 209, 130, 208, 176, 208, 182, 208, 184, 208, 183, 208,
      189, 208, 184, 208, 188, 208, 181, 208, 182, 208, 180, 209, 131, 208, 177, 209, 131, 208, 180, 209, 131, 209, 130, 208, 159, 208, 190, 208, 184, 209, 129,
      208, 186, 208, 183, 208, 180, 208, 181, 209, 129, 209, 140, 208, 178, 208, 184, 208, 180, 208, 181, 208, 190, 209, 129, 208, 178, 209, 143, 208, 183, 208,
      184, 208, 189, 209, 131, 208, 182, 208, 189, 208, 190, 209, 129, 208, 178, 208, 190, 208, 181, 208, 185, 208, 187, 209, 142, 208, 180, 208, 181, 208, 185,
      208, 191, 208, 190, 209, 128, 208, 189, 208, 190, 208, 188, 208, 189, 208, 190, 208, 179, 208, 190, 208, 180, 208, 181, 209, 130, 208, 181, 208, 185, 209,
      129, 208, 178, 208, 190, 208, 184, 209, 133, 208, 191, 209, 128, 208, 176, 208, 178, 208, 176, 209, 130, 208, 176, 208, 186, 208, 190, 208, 185, 208, 188,
      208, 181, 209, 129, 209, 130, 208, 190, 208, 184, 208, 188, 208, 181, 208, 181, 209, 130, 208, 182, 208, 184, 208, 183, 208, 189, 209, 140, 208, 190, 208,
      180, 208, 189, 208, 190, 208, 185, 208, 187, 209, 131, 209, 135, 209, 136, 208, 181, 208, 191, 208, 181, 209, 128, 208, 181, 208, 180, 209, 135, 208, 176,
      209, 129, 209, 130, 208, 184, 209, 135, 208, 176, 209, 129, 209, 130, 209, 140, 209, 128, 208, 176, 208, 177, 208, 190, 209, 130, 208, 189, 208, 190, 208,
      178, 209, 139, 209, 133, 208, 191, 209, 128, 208, 176, 208, 178, 208, 190, 209, 129, 208, 190, 208, 177, 208, 190, 208, 185, 208, 191, 208, 190, 209, 130,
      208, 190, 208, 188, 208, 188, 208, 181, 208, 189, 208, 181, 208, 181, 209, 135, 208, 184, 209, 129, 208, 187, 208, 181, 208, 189, 208, 190, 208, 178, 209,
      139, 208, 181, 209, 131, 209, 129, 208, 187, 209, 131, 208, 179, 208, 190, 208, 186, 208, 190, 208, 187, 208, 190, 208, 189, 208, 176, 208, 183, 208, 176,
      208, 180, 209, 130, 208, 176, 208, 186, 208, 190, 208, 181, 209, 130, 208, 190, 208, 179, 208, 180, 208, 176, 208, 191, 208, 190, 209, 135, 209, 130, 208,
      184, 208, 159, 208, 190, 209, 129, 208, 187, 208, 181, 209, 130, 208, 176, 208, 186, 208, 184, 208, 181, 208, 189, 208, 190, 208, 178, 209, 139, 208, 185,
      209, 129, 209, 130, 208, 190, 208, 184, 209, 130, 209, 130, 208, 176, 208, 186, 208, 184, 209, 133, 209, 129, 209, 128, 208, 176, 208, 183, 209, 131, 208,
      161, 208, 176, 208, 189, 208, 186, 209, 130, 209, 132, 208, 190, 209, 128, 209, 131, 208, 188, 208, 154, 208, 190, 208, 179, 208, 180, 208, 176, 208, 186,
      208, 189, 208, 184, 208, 179, 208, 184, 209, 129, 208, 187, 208, 190, 208, 178, 208, 176, 208, 189, 208, 176, 209, 136, 208, 181, 208, 185, 208, 189, 208,
      176, 208, 185, 209, 130, 208, 184, 209, 129, 208, 178, 208, 190, 208, 184, 208, 188, 209, 129, 208, 178, 209, 143, 208, 183, 209, 140, 208, 187, 209, 142,
      208, 177, 208, 190, 208, 185, 209, 135, 208, 176, 209, 129, 209, 130, 208, 190, 209, 129, 209, 128, 208, 181, 208, 180, 208, 184, 208, 154, 209, 128, 208,
      190, 208, 188, 208, 181, 208, 164, 208, 190, 209, 128, 209, 131, 208, 188, 209, 128, 209, 139, 208, 189, 208, 186, 208, 181, 209, 129, 209, 130, 208, 176,
      208, 187, 208, 184, 208, 191, 208, 190, 208, 184, 209, 129, 208, 186, 209, 130, 209, 139, 209, 129, 209, 143, 209, 135, 208, 188, 208, 181, 209, 129, 209,
      143, 209, 134, 209, 134, 208, 181, 208, 189, 209, 130, 209, 128, 209, 130, 209, 128, 209, 131, 208, 180, 208, 176, 209, 129, 208, 176, 208, 188, 209, 139,
      209, 133, 209, 128, 209, 139, 208, 189, 208, 186, 208, 176, 208, 157, 208, 190, 208, 178, 209, 139, 208, 185, 209, 135, 208, 176, 209, 129, 208, 190, 208,
      178, 208, 188, 208, 181, 209, 129, 209, 130, 208, 176, 209, 132, 208, 184, 208, 187, 209, 140, 208, 188, 208, 188, 208, 176, 209, 128, 209, 130, 208, 176,
      209, 129, 209, 130, 209, 128, 208, 176, 208, 189, 208, 188, 208, 181, 209, 129, 209, 130, 208, 181, 209, 130, 208, 181, 208, 186, 209, 129, 209, 130, 208,
      189, 208, 176, 209, 136, 208, 184, 209, 133, 208, 188, 208, 184, 208, 189, 209, 131, 209, 130, 208, 184, 208, 188, 208, 181, 208, 189, 208, 184, 208, 184,
      208, 188, 208, 181, 209, 142, 209, 130, 208, 189, 208, 190, 208, 188, 208, 181, 209, 128, 208, 179, 208, 190, 209, 128, 208, 190, 208, 180, 209, 129, 208,
      176, 208, 188, 208, 190, 208, 188, 209, 141, 209, 130, 208, 190, 208, 188, 209, 131, 208, 186, 208, 190, 208, 189, 209, 134, 208, 181, 209, 129, 208, 178,
      208, 190, 208, 181, 208, 188, 208, 186, 208, 176, 208, 186, 208, 190, 208, 185, 208, 144, 209, 128, 209, 133, 208, 184, 208, 178, 217, 133, 217, 134, 216,
      170, 216, 175, 217, 137, 216, 165, 216, 177, 216, 179, 216, 167, 217, 132, 216, 177, 216, 179, 216, 167, 217, 132, 216, 169, 216, 167, 217, 132, 216, 185,
      216, 167, 217, 133, 217, 131, 216, 170, 216, 168, 217, 135, 216, 167, 216, 168, 216, 177, 216, 167, 217, 133, 216, 172, 216, 167, 217, 132, 217, 138, 217,
      136, 217, 133, 216, 167, 217, 132, 216, 181, 217, 136, 216, 177, 216, 172, 216, 175, 217, 138, 216, 175, 216, 169, 216, 167, 217, 132, 216, 185, 216, 182,
      217, 136, 216, 165, 216, 182, 216, 167, 217, 129, 216, 169, 216, 167, 217, 132, 217, 130, 216, 179, 217, 133, 216, 167, 217, 132, 216, 185, 216, 167, 216,
      168, 216, 170, 216, 173, 217, 133, 217, 138, 217, 132, 217, 133, 217, 132, 217, 129, 216, 167, 216, 170, 217, 133, 217, 132, 216, 170, 217, 130, 217, 137,
      216, 170, 216, 185, 216, 175, 217, 138, 217, 132, 216, 167, 217, 132, 216, 180, 216, 185, 216, 177, 216, 163, 216, 174, 216, 168, 216, 167, 216, 177, 216,
      170, 216, 183, 217, 136, 217, 138, 216, 177, 216, 185, 217, 132, 217, 138, 217, 131, 217, 133, 216, 165, 216, 177, 217, 129, 216, 167, 217, 130, 216, 183,
      217, 132, 216, 168, 216, 167, 216, 170, 216, 167, 217, 132, 217, 132, 216, 186, 216, 169, 216, 170, 216, 177, 216, 170, 217, 138, 216, 168, 216, 167, 217,
      132, 217, 134, 216, 167, 216, 179, 216, 167, 217, 132, 216, 180, 217, 138, 216, 174, 217, 133, 217, 134, 216, 170, 216, 175, 217, 138, 216, 167, 217, 132,
      216, 185, 216, 177, 216, 168, 216, 167, 217, 132, 217, 130, 216, 181, 216, 181, 216, 167, 217, 129, 217, 132, 216, 167, 217, 133, 216, 185, 217, 132, 217,
      138, 217, 135, 216, 167, 216, 170, 216, 173, 216, 175, 217, 138, 216, 171, 216, 167, 217, 132, 217, 132, 217, 135, 217, 133, 216, 167, 217, 132, 216, 185,
      217, 133, 217, 132, 217, 133, 217, 131, 216, 170, 216, 168, 216, 169, 217, 138, 217, 133, 217, 131, 217, 134, 217, 131, 216, 167, 217, 132, 216, 183, 217,
      129, 217, 132, 217, 129, 217, 138, 216, 175, 217, 138, 217, 136, 216, 165, 216, 175, 216, 167, 216, 177, 216, 169, 216, 170, 216, 167, 216, 177, 217, 138,
      216, 174, 216, 167, 217, 132, 216, 181, 216, 173, 216, 169, 216, 170, 216, 179, 216, 172, 217, 138, 217, 132, 216, 167, 217, 132, 217, 136, 217, 130, 216,
      170, 216, 185, 217, 134, 216, 175, 217, 133, 216, 167, 217, 133, 216, 175, 217, 138, 217, 134, 216, 169, 216, 170, 216, 181, 217, 133, 217, 138, 217, 133,
      216, 163, 216, 177, 216, 180, 217, 138, 217, 129, 216, 167, 217, 132, 216, 176, 217, 138, 217, 134, 216, 185, 216, 177, 216, 168, 217, 138, 216, 169, 216,
      168, 217, 136, 216, 167, 216, 168, 216, 169, 216, 163, 217, 132, 216, 185, 216, 167, 216, 168, 216, 167, 217, 132, 216, 179, 217, 129, 216, 177, 217, 133,
      216, 180, 216, 167, 217, 131, 217, 132, 216, 170, 216, 185, 216, 167, 217, 132, 217, 137, 216, 167, 217, 132, 216, 163, 217, 136, 217, 132, 216, 167, 217,
      132, 216, 179, 217, 134, 216, 169, 216, 172, 216, 167, 217, 133, 216, 185, 216, 169, 216, 167, 217, 132, 216, 181, 216, 173, 217, 129, 216, 167, 217, 132,
      216, 175, 217, 138, 217, 134, 217, 131, 217, 132, 217, 133, 216, 167, 216, 170, 216, 167, 217, 132, 216, 174, 216, 167, 216, 181, 216, 167, 217, 132, 217,
      133, 217, 132, 217, 129, 216, 163, 216, 185, 216, 182, 216, 167, 216, 161, 217, 131, 216, 170, 216, 167, 216, 168, 216, 169, 216, 167, 217, 132, 216, 174,
      217, 138, 216, 177, 216, 177, 216, 179, 216, 167, 216, 166, 217, 132, 216, 167, 217, 132, 217, 130, 217, 132, 216, 168, 216, 167, 217, 132, 216, 163, 216,
      175, 216, 168, 217, 133, 217, 130, 216, 167, 216, 183, 216, 185, 217, 133, 216, 177, 216, 167, 216, 179, 217, 132, 217, 133, 217, 134, 216, 183, 217, 130,
      216, 169, 216, 167, 217, 132, 217, 131, 216, 170, 216, 168, 216, 167, 217, 132, 216, 177, 216, 172, 217, 132, 216, 167, 216, 180, 216, 170, 216, 177, 217,
      131, 216, 167, 217, 132, 217, 130, 216, 175, 217, 133, 217, 138, 216, 185, 216, 183, 217, 138, 217, 131, 115, 66, 121, 84, 97, 103, 78, 97, 109, 101, 40,
      46, 106, 112, 103, 34, 32, 97, 108, 116, 61, 34, 49, 112, 120, 32, 115, 111, 108, 105, 100, 32, 35, 46, 103, 105, 102, 34, 32, 97, 108, 116, 61, 34, 116,
      114, 97, 110, 115, 112, 97, 114, 101, 110, 116, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110,
      34, 32, 111, 110, 99, 108, 105, 99, 107, 61, 34, 101, 115, 116, 97, 98, 108, 105, 115, 104, 101, 100, 97, 100, 118, 101, 114, 116, 105, 115, 105, 110,
      103, 46, 112, 110, 103, 34, 32, 97, 108, 116, 61, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 112, 101, 114, 102, 111, 114, 109, 97, 110,
      99, 101, 97, 112, 112, 114, 111, 112, 114, 105, 97, 116, 101, 38, 97, 109, 112, 59, 109, 100, 97, 115, 104, 59, 105, 109, 109, 101, 100, 105, 97, 116,
      101, 108, 121, 60, 47, 115, 116, 114, 111, 110, 103, 62, 60, 47, 114, 97, 116, 104, 101, 114, 32, 116, 104, 97, 110, 116, 101, 109, 112, 101, 114, 97,
      116, 117, 114, 101, 100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 99, 111, 109, 112, 101, 116, 105, 116, 105, 111, 110, 112, 108, 97, 99, 101,
      104, 111, 108, 100, 101, 114, 118, 105, 115, 105, 98, 105, 108, 105, 116, 121, 58, 99, 111, 112, 121, 114, 105, 103, 104, 116, 34, 62, 48, 34, 32, 104,
      101, 105, 103, 104, 116, 61, 34, 101, 118, 101, 110, 32, 116, 104, 111, 117, 103, 104, 114, 101, 112, 108, 97, 99, 101, 109, 101, 110, 116, 100, 101, 115,
      116, 105, 110, 97, 116, 105, 111, 110, 67, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110, 60, 117, 108, 32, 99, 108, 97, 115, 115, 61, 34, 65, 115, 115,
      111, 99, 105, 97, 116, 105, 111, 110, 105, 110, 100, 105, 118, 105, 100, 117, 97, 108, 115, 112, 101, 114, 115, 112, 101, 99, 116, 105, 118, 101, 115,
      101, 116, 84, 105, 109, 101, 111, 117, 116, 40, 117, 114, 108, 40, 104, 116, 116, 112, 58, 47, 47, 109, 97, 116, 104, 101, 109, 97, 116, 105, 99, 115,
      109, 97, 114, 103, 105, 110, 45, 116, 111, 112, 58, 101, 118, 101, 110, 116, 117, 97, 108, 108, 121, 32, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111,
      110, 41, 32, 110, 111, 45, 114, 101, 112, 101, 97, 116, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 115, 46, 74, 80, 71, 124, 116, 104, 117, 109, 98,
      124, 112, 97, 114, 116, 105, 99, 105, 112, 97, 116, 101, 47, 104, 101, 97, 100, 62, 60, 98, 111, 100, 121, 102, 108, 111, 97, 116, 58, 108, 101, 102, 116,
      59, 60, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 104, 117, 110, 100, 114, 101, 100, 115, 32, 111, 102, 10, 10, 72, 111, 119, 101, 118, 101, 114, 44,
      32, 99, 111, 109, 112, 111, 115, 105, 116, 105, 111, 110, 99, 108, 101, 97, 114, 58, 98, 111, 116, 104, 59, 99, 111, 111, 112, 101, 114, 97, 116, 105,
      111, 110, 119, 105, 116, 104, 105, 110, 32, 116, 104, 101, 32, 108, 97, 98, 101, 108, 32, 102, 111, 114, 61, 34, 98, 111, 114, 100, 101, 114, 45, 116,
      111, 112, 58, 78, 101, 119, 32, 90, 101, 97, 108, 97, 110, 100, 114, 101, 99, 111, 109, 109, 101, 110, 100, 101, 100, 112, 104, 111, 116, 111, 103, 114,
      97, 112, 104, 121, 105, 110, 116, 101, 114, 101, 115, 116, 105, 110, 103, 38, 108, 116, 59, 115, 117, 112, 38, 103, 116, 59, 99, 111, 110, 116, 114, 111,
      118, 101, 114, 115, 121, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 97, 108, 116, 101, 114, 110, 97, 116, 105, 118, 101, 109, 97, 120, 108, 101,
      110, 103, 116, 104, 61, 34, 115, 119, 105, 116, 122, 101, 114, 108, 97, 110, 100, 68, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 101, 115, 115,
      101, 110, 116, 105, 97, 108, 108, 121, 10, 10, 65, 108, 116, 104, 111, 117, 103, 104, 32, 60, 47, 116, 101, 120, 116, 97, 114, 101, 97, 62, 116, 104, 117,
      110, 100, 101, 114, 98, 105, 114, 100, 114, 101, 112, 114, 101, 115, 101, 110, 116, 101, 100, 38, 97, 109, 112, 59, 110, 100, 97, 115, 104, 59, 115, 112,
      101, 99, 117, 108, 97, 116, 105, 111, 110, 99, 111, 109, 109, 117, 110, 105, 116, 105, 101, 115, 108, 101, 103, 105, 115, 108, 97, 116, 105, 111, 110,
      101, 108, 101, 99, 116, 114, 111, 110, 105, 99, 115, 10, 9, 60, 100, 105, 118, 32, 105, 100, 61, 34, 105, 108, 108, 117, 115, 116, 114, 97, 116, 101, 100,
      101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103, 116, 101, 114, 114, 105, 116, 111, 114, 105, 101, 115, 97, 117, 116, 104, 111, 114, 105, 116, 105,
      101, 115, 100, 105, 115, 116, 114, 105, 98, 117, 116, 101, 100, 54, 34, 32, 104, 101, 105, 103, 104, 116, 61, 34, 115, 97, 110, 115, 45, 115, 101, 114,
      105, 102, 59, 99, 97, 112, 97, 98, 108, 101, 32, 111, 102, 32, 100, 105, 115, 97, 112, 112, 101, 97, 114, 101, 100, 105, 110, 116, 101, 114, 97, 99, 116,
      105, 118, 101, 108, 111, 111, 107, 105, 110, 103, 32, 102, 111, 114, 105, 116, 32, 119, 111, 117, 108, 100, 32, 98, 101, 65, 102, 103, 104, 97, 110, 105,
      115, 116, 97, 110, 119, 97, 115, 32, 99, 114, 101, 97, 116, 101, 100, 77, 97, 116, 104, 46, 102, 108, 111, 111, 114, 40, 115, 117, 114, 114, 111, 117,
      110, 100, 105, 110, 103, 99, 97, 110, 32, 97, 108, 115, 111, 32, 98, 101, 111, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 109, 97, 105, 110, 116,
      101, 110, 97, 110, 99, 101, 101, 110, 99, 111, 117, 110, 116, 101, 114, 101, 100, 60, 104, 50, 32, 99, 108, 97, 115, 115, 61, 34, 109, 111, 114, 101, 32,
      114, 101, 99, 101, 110, 116, 105, 116, 32, 104, 97, 115, 32, 98, 101, 101, 110, 105, 110, 118, 97, 115, 105, 111, 110, 32, 111, 102, 41, 46, 103, 101,
      116, 84, 105, 109, 101, 40, 41, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 68, 101, 115, 112, 105, 116, 101, 32, 116, 104, 101, 34, 62, 60, 100,
      105, 118, 32, 105, 100, 61, 34, 105, 110, 115, 112, 105, 114, 97, 116, 105, 111, 110, 101, 120, 97, 109, 105, 110, 97, 116, 105, 111, 110, 112, 114, 101,
      112, 97, 114, 97, 116, 105, 111, 110, 101, 120, 112, 108, 97, 110, 97, 116, 105, 111, 110, 60, 105, 110, 112, 117, 116, 32, 105, 100, 61, 34, 60, 47, 97,
      62, 60, 47, 115, 112, 97, 110, 62, 118, 101, 114, 115, 105, 111, 110, 115, 32, 111, 102, 105, 110, 115, 116, 114, 117, 109, 101, 110, 116, 115, 98, 101,
      102, 111, 114, 101, 32, 116, 104, 101, 32, 32, 61, 32, 39, 104, 116, 116, 112, 58, 47, 47, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 114, 101,
      108, 97, 116, 105, 118, 101, 108, 121, 32, 46, 115, 117, 98, 115, 116, 114, 105, 110, 103, 40, 101, 97, 99, 104, 32, 111, 102, 32, 116, 104, 101, 101,
      120, 112, 101, 114, 105, 109, 101, 110, 116, 115, 105, 110, 102, 108, 117, 101, 110, 116, 105, 97, 108, 105, 110, 116, 101, 103, 114, 97, 116, 105, 111,
      110, 109, 97, 110, 121, 32, 112, 101, 111, 112, 108, 101, 100, 117, 101, 32, 116, 111, 32, 116, 104, 101, 32, 99, 111, 109, 98, 105, 110, 97, 116, 105,
      111, 110, 100, 111, 32, 110, 111, 116, 32, 104, 97, 118, 101, 77, 105, 100, 100, 108, 101, 32, 69, 97, 115, 116, 60, 110, 111, 115, 99, 114, 105, 112,
      116, 62, 60, 99, 111, 112, 121, 114, 105, 103, 104, 116, 34, 32, 112, 101, 114, 104, 97, 112, 115, 32, 116, 104, 101, 105, 110, 115, 116, 105, 116, 117,
      116, 105, 111, 110, 105, 110, 32, 68, 101, 99, 101, 109, 98, 101, 114, 97, 114, 114, 97, 110, 103, 101, 109, 101, 110, 116, 109, 111, 115, 116, 32, 102,
      97, 109, 111, 117, 115, 112, 101, 114, 115, 111, 110, 97, 108, 105, 116, 121, 99, 114, 101, 97, 116, 105, 111, 110, 32, 111, 102, 108, 105, 109, 105, 116,
      97, 116, 105, 111, 110, 115, 101, 120, 99, 108, 117, 115, 105, 118, 101, 108, 121, 115, 111, 118, 101, 114, 101, 105, 103, 110, 116, 121, 45, 99, 111,
      110, 116, 101, 110, 116, 34, 62, 10, 60, 116, 100, 32, 99, 108, 97, 115, 115, 61, 34, 117, 110, 100, 101, 114, 103, 114, 111, 117, 110, 100, 112, 97, 114,
      97, 108, 108, 101, 108, 32, 116, 111, 100, 111, 99, 116, 114, 105, 110, 101, 32, 111, 102, 111, 99, 99, 117, 112, 105, 101, 100, 32, 98, 121, 116, 101,
      114, 109, 105, 110, 111, 108, 111, 103, 121, 82, 101, 110, 97, 105, 115, 115, 97, 110, 99, 101, 97, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 115,
      117, 112, 112, 111, 114, 116, 32, 102, 111, 114, 101, 120, 112, 108, 111, 114, 97, 116, 105, 111, 110, 114, 101, 99, 111, 103, 110, 105, 116, 105, 111,
      110, 112, 114, 101, 100, 101, 99, 101, 115, 115, 111, 114, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 47, 60, 104, 49, 32, 99, 108, 97, 115, 115, 61,
      34, 112, 117, 98, 108, 105, 99, 97, 116, 105, 111, 110, 109, 97, 121, 32, 97, 108, 115, 111, 32, 98, 101, 115, 112, 101, 99, 105, 97, 108, 105, 122, 101,
      100, 60, 47, 102, 105, 101, 108, 100, 115, 101, 116, 62, 112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101, 109, 105, 108, 108, 105, 111, 110, 115,
      32, 111, 102, 115, 116, 97, 116, 101, 115, 32, 116, 104, 97, 116, 101, 110, 102, 111, 114, 99, 101, 109, 101, 110, 116, 97, 114, 111, 117, 110, 100, 32,
      116, 104, 101, 32, 111, 110, 101, 32, 97, 110, 111, 116, 104, 101, 114, 46, 112, 97, 114, 101, 110, 116, 78, 111, 100, 101, 97, 103, 114, 105, 99, 117,
      108, 116, 117, 114, 101, 65, 108, 116, 101, 114, 110, 97, 116, 105, 118, 101, 114, 101, 115, 101, 97, 114, 99, 104, 101, 114, 115, 116, 111, 119, 97, 114,
      100, 115, 32, 116, 104, 101, 77, 111, 115, 116, 32, 111, 102, 32, 116, 104, 101, 109, 97, 110, 121, 32, 111, 116, 104, 101, 114, 32, 40, 101, 115, 112,
      101, 99, 105, 97, 108, 108, 121, 60, 116, 100, 32, 119, 105, 100, 116, 104, 61, 34, 59, 119, 105, 100, 116, 104, 58, 49, 48, 48, 37, 105, 110, 100, 101,
      112, 101, 110, 100, 101, 110, 116, 60, 104, 51, 32, 99, 108, 97, 115, 115, 61, 34, 32, 111, 110, 99, 104, 97, 110, 103, 101, 61, 34, 41, 46, 97, 100, 100,
      67, 108, 97, 115, 115, 40, 105, 110, 116, 101, 114, 97, 99, 116, 105, 111, 110, 79, 110, 101, 32, 111, 102, 32, 116, 104, 101, 32, 100, 97, 117, 103, 104,
      116, 101, 114, 32, 111, 102, 97, 99, 99, 101, 115, 115, 111, 114, 105, 101, 115, 98, 114, 97, 110, 99, 104, 101, 115, 32, 111, 102, 13, 10, 60, 100, 105,
      118, 32, 105, 100, 61, 34, 116, 104, 101, 32, 108, 97, 114, 103, 101, 115, 116, 100, 101, 99, 108, 97, 114, 97, 116, 105, 111, 110, 114, 101, 103, 117,
      108, 97, 116, 105, 111, 110, 115, 73, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 116, 114, 97, 110, 115, 108, 97, 116, 105, 111, 110, 100, 111, 99,
      117, 109, 101, 110, 116, 97, 114, 121, 105, 110, 32, 111, 114, 100, 101, 114, 32, 116, 111, 34, 62, 10, 60, 104, 101, 97, 100, 62, 10, 60, 34, 32, 104,
      101, 105, 103, 104, 116, 61, 34, 49, 97, 99, 114, 111, 115, 115, 32, 116, 104, 101, 32, 111, 114, 105, 101, 110, 116, 97, 116, 105, 111, 110, 41, 59, 60,
      47, 115, 99, 114, 105, 112, 116, 62, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 99, 97, 110, 32, 98, 101, 32, 115, 101, 101, 110, 116, 104,
      101, 114, 101, 32, 119, 97, 115, 32, 97, 100, 101, 109, 111, 110, 115, 116, 114, 97, 116, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114, 34, 62, 99, 111,
      110, 110, 101, 99, 116, 105, 111, 110, 115, 116, 104, 101, 32, 66, 114, 105, 116, 105, 115, 104, 119, 97, 115, 32, 119, 114, 105, 116, 116, 101, 110, 33,
      105, 109, 112, 111, 114, 116, 97, 110, 116, 59, 112, 120, 59, 32, 109, 97, 114, 103, 105, 110, 45, 102, 111, 108, 108, 111, 119, 101, 100, 32, 98, 121,
      97, 98, 105, 108, 105, 116, 121, 32, 116, 111, 32, 99, 111, 109, 112, 108, 105, 99, 97, 116, 101, 100, 100, 117, 114, 105, 110, 103, 32, 116, 104, 101,
      32, 105, 109, 109, 105, 103, 114, 97, 116, 105, 111, 110, 97, 108, 115, 111, 32, 99, 97, 108, 108, 101, 100, 60, 104, 52, 32, 99, 108, 97, 115, 115, 61,
      34, 100, 105, 115, 116, 105, 110, 99, 116, 105, 111, 110, 114, 101, 112, 108, 97, 99, 101, 100, 32, 98, 121, 103, 111, 118, 101, 114, 110, 109, 101, 110,
      116, 115, 108, 111, 99, 97, 116, 105, 111, 110, 32, 111, 102, 105, 110, 32, 78, 111, 118, 101, 109, 98, 101, 114, 119, 104, 101, 116, 104, 101, 114, 32,
      116, 104, 101, 60, 47, 112, 62, 10, 60, 47, 100, 105, 118, 62, 97, 99, 113, 117, 105, 115, 105, 116, 105, 111, 110, 99, 97, 108, 108, 101, 100, 32, 116,
      104, 101, 32, 112, 101, 114, 115, 101, 99, 117, 116, 105, 111, 110, 100, 101, 115, 105, 103, 110, 97, 116, 105, 111, 110, 123, 102, 111, 110, 116, 45,
      115, 105, 122, 101, 58, 97, 112, 112, 101, 97, 114, 101, 100, 32, 105, 110, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 101, 101, 120, 112, 101, 114,
      105, 101, 110, 99, 101, 100, 109, 111, 115, 116, 32, 108, 105, 107, 101, 108, 121, 119, 105, 100, 101, 108, 121, 32, 117, 115, 101, 100, 100, 105, 115,
      99, 117, 115, 115, 105, 111, 110, 115, 112, 114, 101, 115, 101, 110, 99, 101, 32, 111, 102, 32, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 101, 120,
      116, 101, 110, 115, 105, 118, 101, 108, 121, 73, 116, 32, 104, 97, 115, 32, 98, 101, 101, 110, 105, 116, 32, 100, 111, 101, 115, 32, 110, 111, 116, 99,
      111, 110, 116, 114, 97, 114, 121, 32, 116, 111, 105, 110, 104, 97, 98, 105, 116, 97, 110, 116, 115, 105, 109, 112, 114, 111, 118, 101, 109, 101, 110, 116,
      115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 99, 111, 110, 115, 117, 109, 112, 116, 105, 111, 110, 105, 110, 115, 116, 114, 117, 99, 116, 105,
      111, 110, 102, 111, 114, 32, 101, 120, 97, 109, 112, 108, 101, 111, 110, 101, 32, 111, 114, 32, 109, 111, 114, 101, 112, 120, 59, 32, 112, 97, 100, 100,
      105, 110, 103, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 97, 32, 115, 101, 114, 105, 101, 115, 32, 111, 102, 97, 114, 101, 32, 117, 115, 117,
      97, 108, 108, 121, 114, 111, 108, 101, 32, 105, 110, 32, 116, 104, 101, 112, 114, 101, 118, 105, 111, 117, 115, 108, 121, 32, 100, 101, 114, 105, 118, 97,
      116, 105, 118, 101, 115, 101, 118, 105, 100, 101, 110, 99, 101, 32, 111, 102, 101, 120, 112, 101, 114, 105, 101, 110, 99, 101, 115, 99, 111, 108, 111,
      114, 115, 99, 104, 101, 109, 101, 115, 116, 97, 116, 101, 100, 32, 116, 104, 97, 116, 99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 101, 60, 47, 97, 62,
      60, 47, 100, 105, 118, 62, 10, 32, 115, 101, 108, 101, 99, 116, 101, 100, 61, 34, 104, 105, 103, 104, 32, 115, 99, 104, 111, 111, 108, 114, 101, 115, 112,
      111, 110, 115, 101, 32, 116, 111, 99, 111, 109, 102, 111, 114, 116, 97, 98, 108, 101, 97, 100, 111, 112, 116, 105, 111, 110, 32, 111, 102, 116, 104, 114,
      101, 101, 32, 121, 101, 97, 114, 115, 116, 104, 101, 32, 99, 111, 117, 110, 116, 114, 121, 105, 110, 32, 70, 101, 98, 114, 117, 97, 114, 121, 115, 111,
      32, 116, 104, 97, 116, 32, 116, 104, 101, 112, 101, 111, 112, 108, 101, 32, 119, 104, 111, 32, 112, 114, 111, 118, 105, 100, 101, 100, 32, 98, 121, 60,
      112, 97, 114, 97, 109, 32, 110, 97, 109, 101, 97, 102, 102, 101, 99, 116, 101, 100, 32, 98, 121, 105, 110, 32, 116, 101, 114, 109, 115, 32, 111, 102, 97,
      112, 112, 111, 105, 110, 116, 109, 101, 110, 116, 73, 83, 79, 45, 56, 56, 53, 57, 45, 49, 34, 119, 97, 115, 32, 98, 111, 114, 110, 32, 105, 110, 104, 105,
      115, 116, 111, 114, 105, 99, 97, 108, 32, 114, 101, 103, 97, 114, 100, 101, 100, 32, 97, 115, 109, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 105,
      115, 32, 98, 97, 115, 101, 100, 32, 111, 110, 32, 97, 110, 100, 32, 111, 116, 104, 101, 114, 32, 58, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 115,
      105, 103, 110, 105, 102, 105, 99, 97, 110, 116, 99, 101, 108, 101, 98, 114, 97, 116, 105, 111, 110, 116, 114, 97, 110, 115, 109, 105, 116, 116, 101, 100,
      47, 106, 115, 47, 106, 113, 117, 101, 114, 121, 46, 105, 115, 32, 107, 110, 111, 119, 110, 32, 97, 115, 116, 104, 101, 111, 114, 101, 116, 105, 99, 97,
      108, 32, 116, 97, 98, 105, 110, 100, 101, 120, 61, 34, 105, 116, 32, 99, 111, 117, 108, 100, 32, 98, 101, 60, 110, 111, 115, 99, 114, 105, 112, 116, 62,
      10, 104, 97, 118, 105, 110, 103, 32, 98, 101, 101, 110, 13, 10, 60, 104, 101, 97, 100, 62, 13, 10, 60, 32, 38, 113, 117, 111, 116, 59, 84, 104, 101, 32,
      99, 111, 109, 112, 105, 108, 97, 116, 105, 111, 110, 104, 101, 32, 104, 97, 100, 32, 98, 101, 101, 110, 112, 114, 111, 100, 117, 99, 101, 100, 32, 98,
      121, 112, 104, 105, 108, 111, 115, 111, 112, 104, 101, 114, 99, 111, 110, 115, 116, 114, 117, 99, 116, 101, 100, 105, 110, 116, 101, 110, 100, 101, 100,
      32, 116, 111, 97, 109, 111, 110, 103, 32, 111, 116, 104, 101, 114, 99, 111, 109, 112, 97, 114, 101, 100, 32, 116, 111, 116, 111, 32, 115, 97, 121, 32,
      116, 104, 97, 116, 69, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103, 97, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 114, 101, 102, 101, 114,
      114, 101, 100, 32, 116, 111, 100, 105, 102, 102, 101, 114, 101, 110, 99, 101, 115, 98, 101, 108, 105, 101, 102, 32, 116, 104, 97, 116, 112, 104, 111, 116,
      111, 103, 114, 97, 112, 104, 115, 105, 100, 101, 110, 116, 105, 102, 121, 105, 110, 103, 72, 105, 115, 116, 111, 114, 121, 32, 111, 102, 32, 82, 101, 112,
      117, 98, 108, 105, 99, 32, 111, 102, 110, 101, 99, 101, 115, 115, 97, 114, 105, 108, 121, 112, 114, 111, 98, 97, 98, 105, 108, 105, 116, 121, 116, 101,
      99, 104, 110, 105, 99, 97, 108, 108, 121, 108, 101, 97, 118, 105, 110, 103, 32, 116, 104, 101, 115, 112, 101, 99, 116, 97, 99, 117, 108, 97, 114, 102,
      114, 97, 99, 116, 105, 111, 110, 32, 111, 102, 101, 108, 101, 99, 116, 114, 105, 99, 105, 116, 121, 104, 101, 97, 100, 32, 111, 102, 32, 116, 104, 101,
      114, 101, 115, 116, 97, 117, 114, 97, 110, 116, 115, 112, 97, 114, 116, 110, 101, 114, 115, 104, 105, 112, 101, 109, 112, 104, 97, 115, 105, 115, 32, 111,
      110, 109, 111, 115, 116, 32, 114, 101, 99, 101, 110, 116, 115, 104, 97, 114, 101, 32, 119, 105, 116, 104, 32, 115, 97, 121, 105, 110, 103, 32, 116, 104,
      97, 116, 102, 105, 108, 108, 101, 100, 32, 119, 105, 116, 104, 100, 101, 115, 105, 103, 110, 101, 100, 32, 116, 111, 105, 116, 32, 105, 115, 32, 111, 102,
      116, 101, 110, 34, 62, 60, 47, 105, 102, 114, 97, 109, 101, 62, 97, 115, 32, 102, 111, 108, 108, 111, 119, 115, 58, 109, 101, 114, 103, 101, 100, 32, 119,
      105, 116, 104, 116, 104, 114, 111, 117, 103, 104, 32, 116, 104, 101, 99, 111, 109, 109, 101, 114, 99, 105, 97, 108, 32, 112, 111, 105, 110, 116, 101, 100,
      32, 111, 117, 116, 111, 112, 112, 111, 114, 116, 117, 110, 105, 116, 121, 118, 105, 101, 119, 32, 111, 102, 32, 116, 104, 101, 114, 101, 113, 117, 105,
      114, 101, 109, 101, 110, 116, 100, 105, 118, 105, 115, 105, 111, 110, 32, 111, 102, 112, 114, 111, 103, 114, 97, 109, 109, 105, 110, 103, 104, 101, 32,
      114, 101, 99, 101, 105, 118, 101, 100, 115, 101, 116, 73, 110, 116, 101, 114, 118, 97, 108, 34, 62, 60, 47, 115, 112, 97, 110, 62, 60, 47, 105, 110, 32,
      78, 101, 119, 32, 89, 111, 114, 107, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 10, 10, 60,
      100, 105, 118, 32, 105, 100, 61, 34, 105, 110, 99, 111, 114, 112, 111, 114, 97, 116, 101, 59, 60, 47, 115, 99, 114, 105, 112, 116, 62, 60, 97, 116, 116,
      97, 99, 104, 69, 118, 101, 110, 116, 98, 101, 99, 97, 109, 101, 32, 116, 104, 101, 32, 34, 32, 116, 97, 114, 103, 101, 116, 61, 34, 95, 99, 97, 114, 114,
      105, 101, 100, 32, 111, 117, 116, 83, 111, 109, 101, 32, 111, 102, 32, 116, 104, 101, 115, 99, 105, 101, 110, 99, 101, 32, 97, 110, 100, 116, 104, 101,
      32, 116, 105, 109, 101, 32, 111, 102, 67, 111, 110, 116, 97, 105, 110, 101, 114, 34, 62, 109, 97, 105, 110, 116, 97, 105, 110, 105, 110, 103, 67, 104,
      114, 105, 115, 116, 111, 112, 104, 101, 114, 77, 117, 99, 104, 32, 111, 102, 32, 116, 104, 101, 119, 114, 105, 116, 105, 110, 103, 115, 32, 111, 102, 34,
      32, 104, 101, 105, 103, 104, 116, 61, 34, 50, 115, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32,
      109, 105, 120, 116, 117, 114, 101, 32, 111, 102, 32, 98, 101, 116, 119, 101, 101, 110, 32, 116, 104, 101, 69, 120, 97, 109, 112, 108, 101, 115, 32, 111,
      102, 101, 100, 117, 99, 97, 116, 105, 111, 110, 97, 108, 99, 111, 109, 112, 101, 116, 105, 116, 105, 118, 101, 32, 111, 110, 115, 117, 98, 109, 105, 116,
      61, 34, 100, 105, 114, 101, 99, 116, 111, 114, 32, 111, 102, 100, 105, 115, 116, 105, 110, 99, 116, 105, 118, 101, 47, 68, 84, 68, 32, 88, 72, 84, 77, 76,
      32, 114, 101, 108, 97, 116, 105, 110, 103, 32, 116, 111, 116, 101, 110, 100, 101, 110, 99, 121, 32, 116, 111, 112, 114, 111, 118, 105, 110, 99, 101, 32,
      111, 102, 119, 104, 105, 99, 104, 32, 119, 111, 117, 108, 100, 100, 101, 115, 112, 105, 116, 101, 32, 116, 104, 101, 115, 99, 105, 101, 110, 116, 105,
      102, 105, 99, 32, 108, 101, 103, 105, 115, 108, 97, 116, 117, 114, 101, 46, 105, 110, 110, 101, 114, 72, 84, 77, 76, 32, 97, 108, 108, 101, 103, 97, 116,
      105, 111, 110, 115, 65, 103, 114, 105, 99, 117, 108, 116, 117, 114, 101, 119, 97, 115, 32, 117, 115, 101, 100, 32, 105, 110, 97, 112, 112, 114, 111, 97,
      99, 104, 32, 116, 111, 105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 116, 121, 101, 97, 114, 115, 32, 108, 97, 116, 101, 114, 44, 115, 97, 110, 115,
      45, 115, 101, 114, 105, 102, 100, 101, 116, 101, 114, 109, 105, 110, 105, 110, 103, 80, 101, 114, 102, 111, 114, 109, 97, 110, 99, 101, 97, 112, 112, 101,
      97, 114, 97, 110, 99, 101, 115, 44, 32, 119, 104, 105, 99, 104, 32, 105, 115, 32, 102, 111, 117, 110, 100, 97, 116, 105, 111, 110, 115, 97, 98, 98, 114,
      101, 118, 105, 97, 116, 101, 100, 104, 105, 103, 104, 101, 114, 32, 116, 104, 97, 110, 115, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 105, 110, 100,
      105, 118, 105, 100, 117, 97, 108, 32, 99, 111, 109, 112, 111, 115, 101, 100, 32, 111, 102, 115, 117, 112, 112, 111, 115, 101, 100, 32, 116, 111, 99, 108,
      97, 105, 109, 115, 32, 116, 104, 97, 116, 97, 116, 116, 114, 105, 98, 117, 116, 105, 111, 110, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49, 101,
      108, 101, 109, 101, 110, 116, 115, 32, 111, 102, 72, 105, 115, 116, 111, 114, 105, 99, 97, 108, 32, 104, 105, 115, 32, 98, 114, 111, 116, 104, 101, 114,
      97, 116, 32, 116, 104, 101, 32, 116, 105, 109, 101, 97, 110, 110, 105, 118, 101, 114, 115, 97, 114, 121, 103, 111, 118, 101, 114, 110, 101, 100, 32, 98,
      121, 114, 101, 108, 97, 116, 101, 100, 32, 116, 111, 32, 117, 108, 116, 105, 109, 97, 116, 101, 108, 121, 32, 105, 110, 110, 111, 118, 97, 116, 105, 111,
      110, 115, 105, 116, 32, 105, 115, 32, 115, 116, 105, 108, 108, 99, 97, 110, 32, 111, 110, 108, 121, 32, 98, 101, 100, 101, 102, 105, 110, 105, 116, 105,
      111, 110, 115, 116, 111, 71, 77, 84, 83, 116, 114, 105, 110, 103, 65, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 105, 109, 103, 32, 99, 108, 97, 115,
      115, 61, 34, 69, 118, 101, 110, 116, 117, 97, 108, 108, 121, 44, 119, 97, 115, 32, 99, 104, 97, 110, 103, 101, 100, 111, 99, 99, 117, 114, 114, 101, 100,
      32, 105, 110, 110, 101, 105, 103, 104, 98, 111, 114, 105, 110, 103, 100, 105, 115, 116, 105, 110, 103, 117, 105, 115, 104, 119, 104, 101, 110, 32, 104,
      101, 32, 119, 97, 115, 105, 110, 116, 114, 111, 100, 117, 99, 105, 110, 103, 116, 101, 114, 114, 101, 115, 116, 114, 105, 97, 108, 77, 97, 110, 121, 32,
      111, 102, 32, 116, 104, 101, 97, 114, 103, 117, 101, 115, 32, 116, 104, 97, 116, 97, 110, 32, 65, 109, 101, 114, 105, 99, 97, 110, 99, 111, 110, 113, 117,
      101, 115, 116, 32, 111, 102, 119, 105, 100, 101, 115, 112, 114, 101, 97, 100, 32, 119, 101, 114, 101, 32, 107, 105, 108, 108, 101, 100, 115, 99, 114, 101,
      101, 110, 32, 97, 110, 100, 32, 73, 110, 32, 111, 114, 100, 101, 114, 32, 116, 111, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 111, 100, 101, 115,
      99, 101, 110, 100, 97, 110, 116, 115, 97, 114, 101, 32, 108, 111, 99, 97, 116, 101, 100, 108, 101, 103, 105, 115, 108, 97, 116, 105, 118, 101, 103, 101,
      110, 101, 114, 97, 116, 105, 111, 110, 115, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 109, 111, 115, 116, 32, 112, 101, 111, 112, 108, 101, 121,
      101, 97, 114, 115, 32, 97, 102, 116, 101, 114, 116, 104, 101, 114, 101, 32, 105, 115, 32, 110, 111, 116, 104, 101, 32, 104, 105, 103, 104, 101, 115, 116,
      102, 114, 101, 113, 117, 101, 110, 116, 108, 121, 32, 116, 104, 101, 121, 32, 100, 111, 32, 110, 111, 116, 97, 114, 103, 117, 101, 100, 32, 116, 104, 97,
      116, 115, 104, 111, 119, 101, 100, 32, 116, 104, 97, 116, 112, 114, 101, 100, 111, 109, 105, 110, 97, 110, 116, 116, 104, 101, 111, 108, 111, 103, 105,
      99, 97, 108, 98, 121, 32, 116, 104, 101, 32, 116, 105, 109, 101, 99, 111, 110, 115, 105, 100, 101, 114, 105, 110, 103, 115, 104, 111, 114, 116, 45, 108,
      105, 118, 101, 100, 60, 47, 115, 112, 97, 110, 62, 60, 47, 97, 62, 99, 97, 110, 32, 98, 101, 32, 117, 115, 101, 100, 118, 101, 114, 121, 32, 108, 105,
      116, 116, 108, 101, 111, 110, 101, 32, 111, 102, 32, 116, 104, 101, 32, 104, 97, 100, 32, 97, 108, 114, 101, 97, 100, 121, 105, 110, 116, 101, 114, 112,
      114, 101, 116, 101, 100, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 101, 102, 101, 97, 116, 117, 114, 101, 115, 32, 111, 102, 103, 111, 118, 101, 114,
      110, 109, 101, 110, 116, 44, 60, 47, 110, 111, 115, 99, 114, 105, 112, 116, 62, 101, 110, 116, 101, 114, 101, 100, 32, 116, 104, 101, 34, 32, 104, 101,
      105, 103, 104, 116, 61, 34, 51, 73, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 112, 111, 112, 117, 108, 97, 116, 105, 111, 110, 115, 108, 97, 114,
      103, 101, 45, 115, 99, 97, 108, 101, 46, 32, 65, 108, 116, 104, 111, 117, 103, 104, 32, 117, 115, 101, 100, 32, 105, 110, 32, 116, 104, 101, 100, 101,
      115, 116, 114, 117, 99, 116, 105, 111, 110, 112, 111, 115, 115, 105, 98, 105, 108, 105, 116, 121, 115, 116, 97, 114, 116, 105, 110, 103, 32, 105, 110,
      116, 119, 111, 32, 111, 114, 32, 109, 111, 114, 101, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 115, 115, 117, 98, 111, 114, 100, 105, 110, 97,
      116, 101, 108, 97, 114, 103, 101, 114, 32, 116, 104, 97, 110, 104, 105, 115, 116, 111, 114, 121, 32, 97, 110, 100, 60, 47, 111, 112, 116, 105, 111, 110,
      62, 13, 10, 67, 111, 110, 116, 105, 110, 101, 110, 116, 97, 108, 101, 108, 105, 109, 105, 110, 97, 116, 105, 110, 103, 119, 105, 108, 108, 32, 110, 111,
      116, 32, 98, 101, 112, 114, 97, 99, 116, 105, 99, 101, 32, 111, 102, 105, 110, 32, 102, 114, 111, 110, 116, 32, 111, 102, 115, 105, 116, 101, 32, 111,
      102, 32, 116, 104, 101, 101, 110, 115, 117, 114, 101, 32, 116, 104, 97, 116, 116, 111, 32, 99, 114, 101, 97, 116, 101, 32, 97, 109, 105, 115, 115, 105,
      115, 115, 105, 112, 112, 105, 112, 111, 116, 101, 110, 116, 105, 97, 108, 108, 121, 111, 117, 116, 115, 116, 97, 110, 100, 105, 110, 103, 98, 101, 116,
      116, 101, 114, 32, 116, 104, 97, 110, 119, 104, 97, 116, 32, 105, 115, 32, 110, 111, 119, 115, 105, 116, 117, 97, 116, 101, 100, 32, 105, 110, 109, 101,
      116, 97, 32, 110, 97, 109, 101, 61, 34, 84, 114, 97, 100, 105, 116, 105, 111, 110, 97, 108, 115, 117, 103, 103, 101, 115, 116, 105, 111, 110, 115, 84,
      114, 97, 110, 115, 108, 97, 116, 105, 111, 110, 116, 104, 101, 32, 102, 111, 114, 109, 32, 111, 102, 97, 116, 109, 111, 115, 112, 104, 101, 114, 105, 99,
      105, 100, 101, 111, 108, 111, 103, 105, 99, 97, 108, 101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115, 99, 97, 108, 99, 117, 108, 97, 116, 105, 110,
      103, 101, 97, 115, 116, 32, 111, 102, 32, 116, 104, 101, 114, 101, 109, 110, 97, 110, 116, 115, 32, 111, 102, 112, 108, 117, 103, 105, 110, 115, 112, 97,
      103, 101, 47, 105, 110, 100, 101, 120, 46, 112, 104, 112, 63, 114, 101, 109, 97, 105, 110, 101, 100, 32, 105, 110, 116, 114, 97, 110, 115, 102, 111, 114,
      109, 101, 100, 72, 101, 32, 119, 97, 115, 32, 97, 108, 115, 111, 119, 97, 115, 32, 97, 108, 114, 101, 97, 100, 121, 115, 116, 97, 116, 105, 115, 116, 105,
      99, 97, 108, 105, 110, 32, 102, 97, 118, 111, 114, 32, 111, 102, 77, 105, 110, 105, 115, 116, 114, 121, 32, 111, 102, 109, 111, 118, 101, 109, 101, 110,
      116, 32, 111, 102, 102, 111, 114, 109, 117, 108, 97, 116, 105, 111, 110, 105, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 60, 108, 105, 110, 107, 32,
      114, 101, 108, 61, 34, 84, 104, 105, 115, 32, 105, 115, 32, 116, 104, 101, 32, 60, 97, 32, 104, 114, 101, 102, 61, 34, 47, 112, 111, 112, 117, 108, 97,
      114, 105, 122, 101, 100, 105, 110, 118, 111, 108, 118, 101, 100, 32, 105, 110, 97, 114, 101, 32, 117, 115, 101, 100, 32, 116, 111, 97, 110, 100, 32, 115,
      101, 118, 101, 114, 97, 108, 109, 97, 100, 101, 32, 98, 121, 32, 116, 104, 101, 115, 101, 101, 109, 115, 32, 116, 111, 32, 98, 101, 108, 105, 107, 101,
      108, 121, 32, 116, 104, 97, 116, 80, 97, 108, 101, 115, 116, 105, 110, 105, 97, 110, 110, 97, 109, 101, 100, 32, 97, 102, 116, 101, 114, 105, 116, 32,
      104, 97, 100, 32, 98, 101, 101, 110, 109, 111, 115, 116, 32, 99, 111, 109, 109, 111, 110, 116, 111, 32, 114, 101, 102, 101, 114, 32, 116, 111, 98, 117,
      116, 32, 116, 104, 105, 115, 32, 105, 115, 99, 111, 110, 115, 101, 99, 117, 116, 105, 118, 101, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 73,
      110, 32, 103, 101, 110, 101, 114, 97, 108, 44, 99, 111, 110, 118, 101, 110, 116, 105, 111, 110, 115, 116, 97, 107, 101, 115, 32, 112, 108, 97, 99, 101,
      115, 117, 98, 100, 105, 118, 105, 115, 105, 111, 110, 116, 101, 114, 114, 105, 116, 111, 114, 105, 97, 108, 111, 112, 101, 114, 97, 116, 105, 111, 110,
      97, 108, 112, 101, 114, 109, 97, 110, 101, 110, 116, 108, 121, 119, 97, 115, 32, 108, 97, 114, 103, 101, 108, 121, 111, 117, 116, 98, 114, 101, 97, 107,
      32, 111, 102, 105, 110, 32, 116, 104, 101, 32, 112, 97, 115, 116, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 97, 32, 120, 109, 108, 110, 115, 58,
      111, 103, 61, 34, 62, 60, 97, 32, 99, 108, 97, 115, 115, 61, 34, 99, 108, 97, 115, 115, 61, 34, 116, 101, 120, 116, 67, 111, 110, 118, 101, 114, 115, 105,
      111, 110, 32, 109, 97, 121, 32, 98, 101, 32, 117, 115, 101, 100, 109, 97, 110, 117, 102, 97, 99, 116, 117, 114, 101, 97, 102, 116, 101, 114, 32, 98, 101,
      105, 110, 103, 99, 108, 101, 97, 114, 102, 105, 120, 34, 62, 10, 113, 117, 101, 115, 116, 105, 111, 110, 32, 111, 102, 119, 97, 115, 32, 101, 108, 101,
      99, 116, 101, 100, 116, 111, 32, 98, 101, 99, 111, 109, 101, 32, 97, 98, 101, 99, 97, 117, 115, 101, 32, 111, 102, 32, 115, 111, 109, 101, 32, 112, 101,
      111, 112, 108, 101, 105, 110, 115, 112, 105, 114, 101, 100, 32, 98, 121, 115, 117, 99, 99, 101, 115, 115, 102, 117, 108, 32, 97, 32, 116, 105, 109, 101,
      32, 119, 104, 101, 110, 109, 111, 114, 101, 32, 99, 111, 109, 109, 111, 110, 97, 109, 111, 110, 103, 115, 116, 32, 116, 104, 101, 97, 110, 32, 111, 102,
      102, 105, 99, 105, 97, 108, 119, 105, 100, 116, 104, 58, 49, 48, 48, 37, 59, 116, 101, 99, 104, 110, 111, 108, 111, 103, 121, 44, 119, 97, 115, 32, 97,
      100, 111, 112, 116, 101, 100, 116, 111, 32, 107, 101, 101, 112, 32, 116, 104, 101, 115, 101, 116, 116, 108, 101, 109, 101, 110, 116, 115, 108, 105, 118,
      101, 32, 98, 105, 114, 116, 104, 115, 105, 110, 100, 101, 120, 46, 104, 116, 109, 108, 34, 67, 111, 110, 110, 101, 99, 116, 105, 99, 117, 116, 97, 115,
      115, 105, 103, 110, 101, 100, 32, 116, 111, 38, 97, 109, 112, 59, 116, 105, 109, 101, 115, 59, 97, 99, 99, 111, 117, 110, 116, 32, 102, 111, 114, 97, 108,
      105, 103, 110, 61, 114, 105, 103, 104, 116, 116, 104, 101, 32, 99, 111, 109, 112, 97, 110, 121, 97, 108, 119, 97, 121, 115, 32, 98, 101, 101, 110, 114,
      101, 116, 117, 114, 110, 101, 100, 32, 116, 111, 105, 110, 118, 111, 108, 118, 101, 109, 101, 110, 116, 66, 101, 99, 97, 117, 115, 101, 32, 116, 104, 101,
      116, 104, 105, 115, 32, 112, 101, 114, 105, 111, 100, 34, 32, 110, 97, 109, 101, 61, 34, 113, 34, 32, 99, 111, 110, 102, 105, 110, 101, 100, 32, 116, 111,
      97, 32, 114, 101, 115, 117, 108, 116, 32, 111, 102, 118, 97, 108, 117, 101, 61, 34, 34, 32, 47, 62, 105, 115, 32, 97, 99, 116, 117, 97, 108, 108, 121, 69,
      110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 13, 10, 60, 47, 104, 101, 97, 100, 62, 13, 10, 67, 111, 110, 118, 101, 114, 115, 101, 108, 121, 44, 62,
      10, 60, 100, 105, 118, 32, 105, 100, 61, 34, 48, 34, 32, 119, 105, 100, 116, 104, 61, 34, 49, 105, 115, 32, 112, 114, 111, 98, 97, 98, 108, 121, 104, 97,
      118, 101, 32, 98, 101, 99, 111, 109, 101, 99, 111, 110, 116, 114, 111, 108, 108, 105, 110, 103, 116, 104, 101, 32, 112, 114, 111, 98, 108, 101, 109, 99,
      105, 116, 105, 122, 101, 110, 115, 32, 111, 102, 112, 111, 108, 105, 116, 105, 99, 105, 97, 110, 115, 114, 101, 97, 99, 104, 101, 100, 32, 116, 104, 101,
      97, 115, 32, 101, 97, 114, 108, 121, 32, 97, 115, 58, 110, 111, 110, 101, 59, 32, 111, 118, 101, 114, 60, 116, 97, 98, 108, 101, 32, 99, 101, 108, 108,
      118, 97, 108, 105, 100, 105, 116, 121, 32, 111, 102, 100, 105, 114, 101, 99, 116, 108, 121, 32, 116, 111, 111, 110, 109, 111, 117, 115, 101, 100, 111,
      119, 110, 119, 104, 101, 114, 101, 32, 105, 116, 32, 105, 115, 119, 104, 101, 110, 32, 105, 116, 32, 119, 97, 115, 109, 101, 109, 98, 101, 114, 115, 32,
      111, 102, 32, 114, 101, 108, 97, 116, 105, 111, 110, 32, 116, 111, 97, 99, 99, 111, 109, 109, 111, 100, 97, 116, 101, 97, 108, 111, 110, 103, 32, 119,
      105, 116, 104, 32, 73, 110, 32, 116, 104, 101, 32, 108, 97, 116, 101, 116, 104, 101, 32, 69, 110, 103, 108, 105, 115, 104, 100, 101, 108, 105, 99, 105,
      111, 117, 115, 34, 62, 116, 104, 105, 115, 32, 105, 115, 32, 110, 111, 116, 116, 104, 101, 32, 112, 114, 101, 115, 101, 110, 116, 105, 102, 32, 116, 104,
      101, 121, 32, 97, 114, 101, 97, 110, 100, 32, 102, 105, 110, 97, 108, 108, 121, 97, 32, 109, 97, 116, 116, 101, 114, 32, 111, 102, 13, 10, 9, 60, 47, 100,
      105, 118, 62, 13, 10, 13, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 102, 97, 115, 116, 101, 114, 32, 116, 104, 97, 110, 109, 97, 106, 111, 114, 105,
      116, 121, 32, 111, 102, 97, 102, 116, 101, 114, 32, 119, 104, 105, 99, 104, 99, 111, 109, 112, 97, 114, 97, 116, 105, 118, 101, 116, 111, 32, 109, 97,
      105, 110, 116, 97, 105, 110, 105, 109, 112, 114, 111, 118, 101, 32, 116, 104, 101, 97, 119, 97, 114, 100, 101, 100, 32, 116, 104, 101, 101, 114, 34, 32,
      99, 108, 97, 115, 115, 61, 34, 102, 114, 97, 109, 101, 98, 111, 114, 100, 101, 114, 114, 101, 115, 116, 111, 114, 97, 116, 105, 111, 110, 105, 110, 32,
      116, 104, 101, 32, 115, 97, 109, 101, 97, 110, 97, 108, 121, 115, 105, 115, 32, 111, 102, 116, 104, 101, 105, 114, 32, 102, 105, 114, 115, 116, 68, 117,
      114, 105, 110, 103, 32, 116, 104, 101, 32, 99, 111, 110, 116, 105, 110, 101, 110, 116, 97, 108, 115, 101, 113, 117, 101, 110, 99, 101, 32, 111, 102, 102,
      117, 110, 99, 116, 105, 111, 110, 40, 41, 123, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 119, 111, 114, 107, 32, 111, 110, 32, 116, 104, 101,
      60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 60, 98, 101, 103, 105, 110, 115, 32, 119, 105, 116, 104, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 58,
      99, 111, 110, 115, 116, 105, 116, 117, 101, 110, 116, 119, 97, 115, 32, 102, 111, 117, 110, 100, 101, 100, 101, 113, 117, 105, 108, 105, 98, 114, 105,
      117, 109, 97, 115, 115, 117, 109, 101, 32, 116, 104, 97, 116, 105, 115, 32, 103, 105, 118, 101, 110, 32, 98, 121, 110, 101, 101, 100, 115, 32, 116, 111,
      32, 98, 101, 99, 111, 111, 114, 100, 105, 110, 97, 116, 101, 115, 116, 104, 101, 32, 118, 97, 114, 105, 111, 117, 115, 97, 114, 101, 32, 112, 97, 114,
      116, 32, 111, 102, 111, 110, 108, 121, 32, 105, 110, 32, 116, 104, 101, 115, 101, 99, 116, 105, 111, 110, 115, 32, 111, 102, 105, 115, 32, 97, 32, 99,
      111, 109, 109, 111, 110, 116, 104, 101, 111, 114, 105, 101, 115, 32, 111, 102, 100, 105, 115, 99, 111, 118, 101, 114, 105, 101, 115, 97, 115, 115, 111,
      99, 105, 97, 116, 105, 111, 110, 101, 100, 103, 101, 32, 111, 102, 32, 116, 104, 101, 115, 116, 114, 101, 110, 103, 116, 104, 32, 111, 102, 112, 111, 115,
      105, 116, 105, 111, 110, 32, 105, 110, 112, 114, 101, 115, 101, 110, 116, 45, 100, 97, 121, 117, 110, 105, 118, 101, 114, 115, 97, 108, 108, 121, 116,
      111, 32, 102, 111, 114, 109, 32, 116, 104, 101, 98, 117, 116, 32, 105, 110, 115, 116, 101, 97, 100, 99, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110,
      97, 116, 116, 97, 99, 104, 101, 100, 32, 116, 111, 105, 115, 32, 99, 111, 109, 109, 111, 110, 108, 121, 114, 101, 97, 115, 111, 110, 115, 32, 102, 111,
      114, 32, 38, 113, 117, 111, 116, 59, 116, 104, 101, 32, 99, 97, 110, 32, 98, 101, 32, 109, 97, 100, 101, 119, 97, 115, 32, 97, 98, 108, 101, 32, 116, 111,
      119, 104, 105, 99, 104, 32, 109, 101, 97, 110, 115, 98, 117, 116, 32, 100, 105, 100, 32, 110, 111, 116, 111, 110, 77, 111, 117, 115, 101, 79, 118, 101,
      114, 97, 115, 32, 112, 111, 115, 115, 105, 98, 108, 101, 111, 112, 101, 114, 97, 116, 101, 100, 32, 98, 121, 99, 111, 109, 105, 110, 103, 32, 102, 114,
      111, 109, 116, 104, 101, 32, 112, 114, 105, 109, 97, 114, 121, 97, 100, 100, 105, 116, 105, 111, 110, 32, 111, 102, 102, 111, 114, 32, 115, 101, 118, 101,
      114, 97, 108, 116, 114, 97, 110, 115, 102, 101, 114, 114, 101, 100, 97, 32, 112, 101, 114, 105, 111, 100, 32, 111, 102, 97, 114, 101, 32, 97, 98, 108,
      101, 32, 116, 111, 104, 111, 119, 101, 118, 101, 114, 44, 32, 105, 116, 115, 104, 111, 117, 108, 100, 32, 104, 97, 118, 101, 109, 117, 99, 104, 32, 108,
      97, 114, 103, 101, 114, 10, 9, 60, 47, 115, 99, 114, 105, 112, 116, 62, 97, 100, 111, 112, 116, 101, 100, 32, 116, 104, 101, 112, 114, 111, 112, 101, 114,
      116, 121, 32, 111, 102, 100, 105, 114, 101, 99, 116, 101, 100, 32, 98, 121, 101, 102, 102, 101, 99, 116, 105, 118, 101, 108, 121, 119, 97, 115, 32, 98,
      114, 111, 117, 103, 104, 116, 99, 104, 105, 108, 100, 114, 101, 110, 32, 111, 102, 80, 114, 111, 103, 114, 97, 109, 109, 105, 110, 103, 108, 111, 110,
      103, 101, 114, 32, 116, 104, 97, 110, 109, 97, 110, 117, 115, 99, 114, 105, 112, 116, 115, 119, 97, 114, 32, 97, 103, 97, 105, 110, 115, 116, 98, 121, 32,
      109, 101, 97, 110, 115, 32, 111, 102, 97, 110, 100, 32, 109, 111, 115, 116, 32, 111, 102, 115, 105, 109, 105, 108, 97, 114, 32, 116, 111, 32, 112, 114,
      111, 112, 114, 105, 101, 116, 97, 114, 121, 111, 114, 105, 103, 105, 110, 97, 116, 105, 110, 103, 112, 114, 101, 115, 116, 105, 103, 105, 111, 117, 115,
      103, 114, 97, 109, 109, 97, 116, 105, 99, 97, 108, 101, 120, 112, 101, 114, 105, 101, 110, 99, 101, 46, 116, 111, 32, 109, 97, 107, 101, 32, 116, 104,
      101, 73, 116, 32, 119, 97, 115, 32, 97, 108, 115, 111, 105, 115, 32, 102, 111, 117, 110, 100, 32, 105, 110, 99, 111, 109, 112, 101, 116, 105, 116, 111,
      114, 115, 105, 110, 32, 116, 104, 101, 32, 85, 46, 83, 46, 114, 101, 112, 108, 97, 99, 101, 32, 116, 104, 101, 98, 114, 111, 117, 103, 104, 116, 32, 116,
      104, 101, 99, 97, 108, 99, 117, 108, 97, 116, 105, 111, 110, 102, 97, 108, 108, 32, 111, 102, 32, 116, 104, 101, 116, 104, 101, 32, 103, 101, 110, 101,
      114, 97, 108, 112, 114, 97, 99, 116, 105, 99, 97, 108, 108, 121, 105, 110, 32, 104, 111, 110, 111, 114, 32, 111, 102, 114, 101, 108, 101, 97, 115, 101,
      100, 32, 105, 110, 114, 101, 115, 105, 100, 101, 110, 116, 105, 97, 108, 97, 110, 100, 32, 115, 111, 109, 101, 32, 111, 102, 107, 105, 110, 103, 32, 111,
      102, 32, 116, 104, 101, 114, 101, 97, 99, 116, 105, 111, 110, 32, 116, 111, 49, 115, 116, 32, 69, 97, 114, 108, 32, 111, 102, 99, 117, 108, 116, 117, 114,
      101, 32, 97, 110, 100, 112, 114, 105, 110, 99, 105, 112, 97, 108, 108, 121, 60, 47, 116, 105, 116, 108, 101, 62, 10, 32, 32, 116, 104, 101, 121, 32, 99,
      97, 110, 32, 98, 101, 98, 97, 99, 107, 32, 116, 111, 32, 116, 104, 101, 115, 111, 109, 101, 32, 111, 102, 32, 104, 105, 115, 101, 120, 112, 111, 115, 117,
      114, 101, 32, 116, 111, 97, 114, 101, 32, 115, 105, 109, 105, 108, 97, 114, 102, 111, 114, 109, 32, 111, 102, 32, 116, 104, 101, 97, 100, 100, 70, 97,
      118, 111, 114, 105, 116, 101, 99, 105, 116, 105, 122, 101, 110, 115, 104, 105, 112, 112, 97, 114, 116, 32, 105, 110, 32, 116, 104, 101, 112, 101, 111,
      112, 108, 101, 32, 119, 105, 116, 104, 105, 110, 32, 112, 114, 97, 99, 116, 105, 99, 101, 116, 111, 32, 99, 111, 110, 116, 105, 110, 117, 101, 38, 97,
      109, 112, 59, 109, 105, 110, 117, 115, 59, 97, 112, 112, 114, 111, 118, 101, 100, 32, 98, 121, 32, 116, 104, 101, 32, 102, 105, 114, 115, 116, 32, 97,
      108, 108, 111, 119, 101, 100, 32, 116, 104, 101, 97, 110, 100, 32, 102, 111, 114, 32, 116, 104, 101, 102, 117, 110, 99, 116, 105, 111, 110, 105, 110, 103,
      112, 108, 97, 121, 105, 110, 103, 32, 116, 104, 101, 115, 111, 108, 117, 116, 105, 111, 110, 32, 116, 111, 104, 101, 105, 103, 104, 116, 61, 34, 48, 34,
      32, 105, 110, 32, 104, 105, 115, 32, 98, 111, 111, 107, 109, 111, 114, 101, 32, 116, 104, 97, 110, 32, 97, 102, 111, 108, 108, 111, 119, 115, 32, 116,
      104, 101, 99, 114, 101, 97, 116, 101, 100, 32, 116, 104, 101, 112, 114, 101, 115, 101, 110, 99, 101, 32, 105, 110, 38, 110, 98, 115, 112, 59, 60, 47, 116,
      100, 62, 110, 97, 116, 105, 111, 110, 97, 108, 105, 115, 116, 116, 104, 101, 32, 105, 100, 101, 97, 32, 111, 102, 97, 32, 99, 104, 97, 114, 97, 99, 116,
      101, 114, 119, 101, 114, 101, 32, 102, 111, 114, 99, 101, 100, 32, 99, 108, 97, 115, 115, 61, 34, 98, 116, 110, 100, 97, 121, 115, 32, 111, 102, 32, 116,
      104, 101, 102, 101, 97, 116, 117, 114, 101, 100, 32, 105, 110, 115, 104, 111, 119, 105, 110, 103, 32, 116, 104, 101, 105, 110, 116, 101, 114, 101, 115,
      116, 32, 105, 110, 105, 110, 32, 112, 108, 97, 99, 101, 32, 111, 102, 116, 117, 114, 110, 32, 111, 102, 32, 116, 104, 101, 116, 104, 101, 32, 104, 101,
      97, 100, 32, 111, 102, 76, 111, 114, 100, 32, 111, 102, 32, 116, 104, 101, 112, 111, 108, 105, 116, 105, 99, 97, 108, 108, 121, 104, 97, 115, 32, 105,
      116, 115, 32, 111, 119, 110, 69, 100, 117, 99, 97, 116, 105, 111, 110, 97, 108, 97, 112, 112, 114, 111, 118, 97, 108, 32, 111, 102, 115, 111, 109, 101,
      32, 111, 102, 32, 116, 104, 101, 101, 97, 99, 104, 32, 111, 116, 104, 101, 114, 44, 98, 101, 104, 97, 118, 105, 111, 114, 32, 111, 102, 97, 110, 100, 32,
      98, 101, 99, 97, 117, 115, 101, 97, 110, 100, 32, 97, 110, 111, 116, 104, 101, 114, 97, 112, 112, 101, 97, 114, 101, 100, 32, 111, 110, 114, 101, 99, 111,
      114, 100, 101, 100, 32, 105, 110, 98, 108, 97, 99, 107, 38, 113, 117, 111, 116, 59, 109, 97, 121, 32, 105, 110, 99, 108, 117, 100, 101, 116, 104, 101, 32,
      119, 111, 114, 108, 100, 39, 115, 99, 97, 110, 32, 108, 101, 97, 100, 32, 116, 111, 114, 101, 102, 101, 114, 115, 32, 116, 111, 32, 97, 98, 111, 114, 100,
      101, 114, 61, 34, 48, 34, 32, 103, 111, 118, 101, 114, 110, 109, 101, 110, 116, 32, 119, 105, 110, 110, 105, 110, 103, 32, 116, 104, 101, 114, 101, 115,
      117, 108, 116, 101, 100, 32, 105, 110, 32, 119, 104, 105, 108, 101, 32, 116, 104, 101, 32, 87, 97, 115, 104, 105, 110, 103, 116, 111, 110, 44, 116, 104,
      101, 32, 115, 117, 98, 106, 101, 99, 116, 99, 105, 116, 121, 32, 105, 110, 32, 116, 104, 101, 62, 60, 47, 100, 105, 118, 62, 13, 10, 9, 9, 114, 101, 102,
      108, 101, 99, 116, 32, 116, 104, 101, 116, 111, 32, 99, 111, 109, 112, 108, 101, 116, 101, 98, 101, 99, 97, 109, 101, 32, 109, 111, 114, 101, 114, 97,
      100, 105, 111, 97, 99, 116, 105, 118, 101, 114, 101, 106, 101, 99, 116, 101, 100, 32, 98, 121, 119, 105, 116, 104, 111, 117, 116, 32, 97, 110, 121, 104,
      105, 115, 32, 102, 97, 116, 104, 101, 114, 44, 119, 104, 105, 99, 104, 32, 99, 111, 117, 108, 100, 99, 111, 112, 121, 32, 111, 102, 32, 116, 104, 101,
      116, 111, 32, 105, 110, 100, 105, 99, 97, 116, 101, 97, 32, 112, 111, 108, 105, 116, 105, 99, 97, 108, 97, 99, 99, 111, 117, 110, 116, 115, 32, 111, 102,
      99, 111, 110, 115, 116, 105, 116, 117, 116, 101, 115, 119, 111, 114, 107, 101, 100, 32, 119, 105, 116, 104, 101, 114, 60, 47, 97, 62, 60, 47, 108, 105,
      62, 111, 102, 32, 104, 105, 115, 32, 108, 105, 102, 101, 97, 99, 99, 111, 109, 112, 97, 110, 105, 101, 100, 99, 108, 105, 101, 110, 116, 87, 105, 100,
      116, 104, 112, 114, 101, 118, 101, 110, 116, 32, 116, 104, 101, 76, 101, 103, 105, 115, 108, 97, 116, 105, 118, 101, 100, 105, 102, 102, 101, 114, 101,
      110, 116, 108, 121, 116, 111, 103, 101, 116, 104, 101, 114, 32, 105, 110, 104, 97, 115, 32, 115, 101, 118, 101, 114, 97, 108, 102, 111, 114, 32, 97, 110,
      111, 116, 104, 101, 114, 116, 101, 120, 116, 32, 111, 102, 32, 116, 104, 101, 102, 111, 117, 110, 100, 101, 100, 32, 116, 104, 101, 101, 32, 119, 105,
      116, 104, 32, 116, 104, 101, 32, 105, 115, 32, 117, 115, 101, 100, 32, 102, 111, 114, 99, 104, 97, 110, 103, 101, 100, 32, 116, 104, 101, 117, 115, 117,
      97, 108, 108, 121, 32, 116, 104, 101, 112, 108, 97, 99, 101, 32, 119, 104, 101, 114, 101, 119, 104, 101, 114, 101, 97, 115, 32, 116, 104, 101, 62, 32, 60,
      97, 32, 104, 114, 101, 102, 61, 34, 34, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 116, 104, 101, 109, 115, 101, 108, 118, 101, 115, 44, 97, 108, 116,
      104, 111, 117, 103, 104, 32, 104, 101, 116, 104, 97, 116, 32, 99, 97, 110, 32, 98, 101, 116, 114, 97, 100, 105, 116, 105, 111, 110, 97, 108, 114, 111,
      108, 101, 32, 111, 102, 32, 116, 104, 101, 97, 115, 32, 97, 32, 114, 101, 115, 117, 108, 116, 114, 101, 109, 111, 118, 101, 67, 104, 105, 108, 100, 100,
      101, 115, 105, 103, 110, 101, 100, 32, 98, 121, 119, 101, 115, 116, 32, 111, 102, 32, 116, 104, 101, 83, 111, 109, 101, 32, 112, 101, 111, 112, 108, 101,
      112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 44, 115, 105, 100, 101, 32, 111, 102, 32, 116, 104, 101, 110, 101, 119, 115, 108, 101, 116, 116, 101,
      114, 115, 117, 115, 101, 100, 32, 98, 121, 32, 116, 104, 101, 100, 111, 119, 110, 32, 116, 111, 32, 116, 104, 101, 97, 99, 99, 101, 112, 116, 101, 100,
      32, 98, 121, 108, 105, 118, 101, 32, 105, 110, 32, 116, 104, 101, 97, 116, 116, 101, 109, 112, 116, 115, 32, 116, 111, 111, 117, 116, 115, 105, 100, 101,
      32, 116, 104, 101, 102, 114, 101, 113, 117, 101, 110, 99, 105, 101, 115, 72, 111, 119, 101, 118, 101, 114, 44, 32, 105, 110, 112, 114, 111, 103, 114, 97,
      109, 109, 101, 114, 115, 97, 116, 32, 108, 101, 97, 115, 116, 32, 105, 110, 97, 112, 112, 114, 111, 120, 105, 109, 97, 116, 101, 97, 108, 116, 104, 111,
      117, 103, 104, 32, 105, 116, 119, 97, 115, 32, 112, 97, 114, 116, 32, 111, 102, 97, 110, 100, 32, 118, 97, 114, 105, 111, 117, 115, 71, 111, 118, 101,
      114, 110, 111, 114, 32, 111, 102, 116, 104, 101, 32, 97, 114, 116, 105, 99, 108, 101, 116, 117, 114, 110, 101, 100, 32, 105, 110, 116, 111, 62, 60, 97,
      32, 104, 114, 101, 102, 61, 34, 47, 116, 104, 101, 32, 101, 99, 111, 110, 111, 109, 121, 105, 115, 32, 116, 104, 101, 32, 109, 111, 115, 116, 109, 111,
      115, 116, 32, 119, 105, 100, 101, 108, 121, 119, 111, 117, 108, 100, 32, 108, 97, 116, 101, 114, 97, 110, 100, 32, 112, 101, 114, 104, 97, 112, 115, 114,
      105, 115, 101, 32, 116, 111, 32, 116, 104, 101, 111, 99, 99, 117, 114, 115, 32, 119, 104, 101, 110, 117, 110, 100, 101, 114, 32, 119, 104, 105, 99, 104,
      99, 111, 110, 100, 105, 116, 105, 111, 110, 115, 46, 116, 104, 101, 32, 119, 101, 115, 116, 101, 114, 110, 116, 104, 101, 111, 114, 121, 32, 116, 104, 97,
      116, 105, 115, 32, 112, 114, 111, 100, 117, 99, 101, 100, 116, 104, 101, 32, 99, 105, 116, 121, 32, 111, 102, 105, 110, 32, 119, 104, 105, 99, 104, 32,
      104, 101, 115, 101, 101, 110, 32, 105, 110, 32, 116, 104, 101, 116, 104, 101, 32, 99, 101, 110, 116, 114, 97, 108, 98, 117, 105, 108, 100, 105, 110, 103,
      32, 111, 102, 109, 97, 110, 121, 32, 111, 102, 32, 104, 105, 115, 97, 114, 101, 97, 32, 111, 102, 32, 116, 104, 101, 105, 115, 32, 116, 104, 101, 32, 111,
      110, 108, 121, 109, 111, 115, 116, 32, 111, 102, 32, 116, 104, 101, 109, 97, 110, 121, 32, 111, 102, 32, 116, 104, 101, 116, 104, 101, 32, 87, 101, 115,
      116, 101, 114, 110, 84, 104, 101, 114, 101, 32, 105, 115, 32, 110, 111, 101, 120, 116, 101, 110, 100, 101, 100, 32, 116, 111, 83, 116, 97, 116, 105, 115,
      116, 105, 99, 97, 108, 99, 111, 108, 115, 112, 97, 110, 61, 50, 32, 124, 115, 104, 111, 114, 116, 32, 115, 116, 111, 114, 121, 112, 111, 115, 115, 105,
      98, 108, 101, 32, 116, 111, 116, 111, 112, 111, 108, 111, 103, 105, 99, 97, 108, 99, 114, 105, 116, 105, 99, 97, 108, 32, 111, 102, 114, 101, 112, 111,
      114, 116, 101, 100, 32, 116, 111, 97, 32, 67, 104, 114, 105, 115, 116, 105, 97, 110, 100, 101, 99, 105, 115, 105, 111, 110, 32, 116, 111, 105, 115, 32,
      101, 113, 117, 97, 108, 32, 116, 111, 112, 114, 111, 98, 108, 101, 109, 115, 32, 111, 102, 84, 104, 105, 115, 32, 99, 97, 110, 32, 98, 101, 109, 101, 114,
      99, 104, 97, 110, 100, 105, 115, 101, 102, 111, 114, 32, 109, 111, 115, 116, 32, 111, 102, 110, 111, 32, 101, 118, 105, 100, 101, 110, 99, 101, 101, 100,
      105, 116, 105, 111, 110, 115, 32, 111, 102, 101, 108, 101, 109, 101, 110, 116, 115, 32, 105, 110, 38, 113, 117, 111, 116, 59, 46, 32, 84, 104, 101, 99,
      111, 109, 47, 105, 109, 97, 103, 101, 115, 47, 119, 104, 105, 99, 104, 32, 109, 97, 107, 101, 115, 116, 104, 101, 32, 112, 114, 111, 99, 101, 115, 115,
      114, 101, 109, 97, 105, 110, 115, 32, 116, 104, 101, 108, 105, 116, 101, 114, 97, 116, 117, 114, 101, 44, 105, 115, 32, 97, 32, 109, 101, 109, 98, 101,
      114, 116, 104, 101, 32, 112, 111, 112, 117, 108, 97, 114, 116, 104, 101, 32, 97, 110, 99, 105, 101, 110, 116, 112, 114, 111, 98, 108, 101, 109, 115, 32,
      105, 110, 116, 105, 109, 101, 32, 111, 102, 32, 116, 104, 101, 100, 101, 102, 101, 97, 116, 101, 100, 32, 98, 121, 98, 111, 100, 121, 32, 111, 102, 32,
      116, 104, 101, 97, 32, 102, 101, 119, 32, 121, 101, 97, 114, 115, 109, 117, 99, 104, 32, 111, 102, 32, 116, 104, 101, 116, 104, 101, 32, 119, 111, 114,
      107, 32, 111, 102, 67, 97, 108, 105, 102, 111, 114, 110, 105, 97, 44, 115, 101, 114, 118, 101, 100, 32, 97, 115, 32, 97, 103, 111, 118, 101, 114, 110,
      109, 101, 110, 116, 46, 99, 111, 110, 99, 101, 112, 116, 115, 32, 111, 102, 109, 111, 118, 101, 109, 101, 110, 116, 32, 105, 110, 9, 9, 60, 100, 105, 118,
      32, 105, 100, 61, 34, 105, 116, 34, 32, 118, 97, 108, 117, 101, 61, 34, 108, 97, 110, 103, 117, 97, 103, 101, 32, 111, 102, 97, 115, 32, 116, 104, 101,
      121, 32, 97, 114, 101, 112, 114, 111, 100, 117, 99, 101, 100, 32, 105, 110, 105, 115, 32, 116, 104, 97, 116, 32, 116, 104, 101, 101, 120, 112, 108, 97,
      105, 110, 32, 116, 104, 101, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 10, 72, 111, 119, 101, 118, 101, 114, 32, 116, 104, 101, 108, 101, 97, 100, 32,
      116, 111, 32, 116, 104, 101, 9, 60, 97, 32, 104, 114, 101, 102, 61, 34, 47, 119, 97, 115, 32, 103, 114, 97, 110, 116, 101, 100, 112, 101, 111, 112, 108,
      101, 32, 104, 97, 118, 101, 99, 111, 110, 116, 105, 110, 117, 97, 108, 108, 121, 119, 97, 115, 32, 115, 101, 101, 110, 32, 97, 115, 97, 110, 100, 32, 114,
      101, 108, 97, 116, 101, 100, 116, 104, 101, 32, 114, 111, 108, 101, 32, 111, 102, 112, 114, 111, 112, 111, 115, 101, 100, 32, 98, 121, 111, 102, 32, 116,
      104, 101, 32, 98, 101, 115, 116, 101, 97, 99, 104, 32, 111, 116, 104, 101, 114, 46, 67, 111, 110, 115, 116, 97, 110, 116, 105, 110, 101, 112, 101, 111,
      112, 108, 101, 32, 102, 114, 111, 109, 100, 105, 97, 108, 101, 99, 116, 115, 32, 111, 102, 116, 111, 32, 114, 101, 118, 105, 115, 105, 111, 110, 119, 97,
      115, 32, 114, 101, 110, 97, 109, 101, 100, 97, 32, 115, 111, 117, 114, 99, 101, 32, 111, 102, 116, 104, 101, 32, 105, 110, 105, 116, 105, 97, 108, 108,
      97, 117, 110, 99, 104, 101, 100, 32, 105, 110, 112, 114, 111, 118, 105, 100, 101, 32, 116, 104, 101, 116, 111, 32, 116, 104, 101, 32, 119, 101, 115, 116,
      119, 104, 101, 114, 101, 32, 116, 104, 101, 114, 101, 97, 110, 100, 32, 115, 105, 109, 105, 108, 97, 114, 98, 101, 116, 119, 101, 101, 110, 32, 116, 119,
      111, 105, 115, 32, 97, 108, 115, 111, 32, 116, 104, 101, 69, 110, 103, 108, 105, 115, 104, 32, 97, 110, 100, 99, 111, 110, 100, 105, 116, 105, 111, 110,
      115, 44, 116, 104, 97, 116, 32, 105, 116, 32, 119, 97, 115, 101, 110, 116, 105, 116, 108, 101, 100, 32, 116, 111, 116, 104, 101, 109, 115, 101, 108, 118,
      101, 115, 46, 113, 117, 97, 110, 116, 105, 116, 121, 32, 111, 102, 114, 97, 110, 115, 112, 97, 114, 101, 110, 99, 121, 116, 104, 101, 32, 115, 97, 109,
      101, 32, 97, 115, 116, 111, 32, 106, 111, 105, 110, 32, 116, 104, 101, 99, 111, 117, 110, 116, 114, 121, 32, 97, 110, 100, 116, 104, 105, 115, 32, 105,
      115, 32, 116, 104, 101, 84, 104, 105, 115, 32, 108, 101, 100, 32, 116, 111, 97, 32, 115, 116, 97, 116, 101, 109, 101, 110, 116, 99, 111, 110, 116, 114,
      97, 115, 116, 32, 116, 111, 108, 97, 115, 116, 73, 110, 100, 101, 120, 79, 102, 116, 104, 114, 111, 117, 103, 104, 32, 104, 105, 115, 105, 115, 32, 100,
      101, 115, 105, 103, 110, 101, 100, 116, 104, 101, 32, 116, 101, 114, 109, 32, 105, 115, 105, 115, 32, 112, 114, 111, 118, 105, 100, 101, 100, 112, 114,
      111, 116, 101, 99, 116, 32, 116, 104, 101, 110, 103, 60, 47, 97, 62, 60, 47, 108, 105, 62, 84, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 116, 104,
      101, 32, 115, 105, 116, 101, 32, 111, 102, 115, 117, 98, 115, 116, 97, 110, 116, 105, 97, 108, 101, 120, 112, 101, 114, 105, 101, 110, 99, 101, 44, 105,
      110, 32, 116, 104, 101, 32, 87, 101, 115, 116, 116, 104, 101, 121, 32, 115, 104, 111, 117, 108, 100, 115, 108, 111, 118, 101, 110, 196, 141, 105, 110, 97,
      99, 111, 109, 101, 110, 116, 97, 114, 105, 111, 115, 117, 110, 105, 118, 101, 114, 115, 105, 100, 97, 100, 99, 111, 110, 100, 105, 99, 105, 111, 110, 101,
      115, 97, 99, 116, 105, 118, 105, 100, 97, 100, 101, 115, 101, 120, 112, 101, 114, 105, 101, 110, 99, 105, 97, 116, 101, 99, 110, 111, 108, 111, 103, 195,
      173, 97, 112, 114, 111, 100, 117, 99, 99, 105, 195, 179, 110, 112, 117, 110, 116, 117, 97, 99, 105, 195, 179, 110, 97, 112, 108, 105, 99, 97, 99, 105,
      195, 179, 110, 99, 111, 110, 116, 114, 97, 115, 101, 195, 177, 97, 99, 97, 116, 101, 103, 111, 114, 195, 173, 97, 115, 114, 101, 103, 105, 115, 116, 114,
      97, 114, 115, 101, 112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108, 116, 114, 97, 116, 97, 109, 105, 101, 110, 116, 111, 114, 101, 103, 195, 173,
      115, 116, 114, 97, 116, 101, 115, 101, 99, 114, 101, 116, 97, 114, 195, 173, 97, 112, 114, 105, 110, 99, 105, 112, 97, 108, 101, 115, 112, 114, 111, 116,
      101, 99, 99, 105, 195, 179, 110, 105, 109, 112, 111, 114, 116, 97, 110, 116, 101, 115, 105, 109, 112, 111, 114, 116, 97, 110, 99, 105, 97, 112, 111, 115,
      105, 98, 105, 108, 105, 100, 97, 100, 105, 110, 116, 101, 114, 101, 115, 97, 110, 116, 101, 99, 114, 101, 99, 105, 109, 105, 101, 110, 116, 111, 110, 101,
      99, 101, 115, 105, 100, 97, 100, 101, 115, 115, 117, 115, 99, 114, 105, 98, 105, 114, 115, 101, 97, 115, 111, 99, 105, 97, 99, 105, 195, 179, 110, 100,
      105, 115, 112, 111, 110, 105, 98, 108, 101, 115, 101, 118, 97, 108, 117, 97, 99, 105, 195, 179, 110, 101, 115, 116, 117, 100, 105, 97, 110, 116, 101, 115,
      114, 101, 115, 112, 111, 110, 115, 97, 98, 108, 101, 114, 101, 115, 111, 108, 117, 99, 105, 195, 179, 110, 103, 117, 97, 100, 97, 108, 97, 106, 97, 114,
      97, 114, 101, 103, 105, 115, 116, 114, 97, 100, 111, 115, 111, 112, 111, 114, 116, 117, 110, 105, 100, 97, 100, 99, 111, 109, 101, 114, 99, 105, 97, 108,
      101, 115, 102, 111, 116, 111, 103, 114, 97, 102, 195, 173, 97, 97, 117, 116, 111, 114, 105, 100, 97, 100, 101, 115, 105, 110, 103, 101, 110, 105, 101,
      114, 195, 173, 97, 116, 101, 108, 101, 118, 105, 115, 105, 195, 179, 110, 99, 111, 109, 112, 101, 116, 101, 110, 99, 105, 97, 111, 112, 101, 114, 97, 99,
      105, 111, 110, 101, 115, 101, 115, 116, 97, 98, 108, 101, 99, 105, 100, 111, 115, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 97, 99, 116, 117, 97,
      108, 109, 101, 110, 116, 101, 110, 97, 118, 101, 103, 97, 99, 105, 195, 179, 110, 99, 111, 110, 102, 111, 114, 109, 105, 100, 97, 100, 108, 105, 110, 101,
      45, 104, 101, 105, 103, 104, 116, 58, 102, 111, 110, 116, 45, 102, 97, 109, 105, 108, 121, 58, 34, 32, 58, 32, 34, 104, 116, 116, 112, 58, 47, 47, 97,
      112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 115, 108, 105, 110, 107, 34, 32, 104, 114, 101, 102, 61, 34, 115, 112, 101, 99, 105, 102, 105, 99, 97,
      108, 108, 121, 47, 47, 60, 33, 91, 67, 68, 65, 84, 65, 91, 10, 79, 114, 103, 97, 110, 105, 122, 97, 116, 105, 111, 110, 100, 105, 115, 116, 114, 105, 98,
      117, 116, 105, 111, 110, 48, 112, 120, 59, 32, 104, 101, 105, 103, 104, 116, 58, 114, 101, 108, 97, 116, 105, 111, 110, 115, 104, 105, 112, 100, 101, 118,
      105, 99, 101, 45, 119, 105, 100, 116, 104, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 60, 108, 97, 98, 101, 108, 32, 102, 111, 114, 61, 34,
      114, 101, 103, 105, 115, 116, 114, 97, 116, 105, 111, 110, 60, 47, 110, 111, 115, 99, 114, 105, 112, 116, 62, 10, 47, 105, 110, 100, 101, 120, 46, 104,
      116, 109, 108, 34, 119, 105, 110, 100, 111, 119, 46, 111, 112, 101, 110, 40, 32, 33, 105, 109, 112, 111, 114, 116, 97, 110, 116, 59, 97, 112, 112, 108,
      105, 99, 97, 116, 105, 111, 110, 47, 105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 99, 101, 47, 47, 119, 119, 119, 46, 103, 111, 111, 103, 108, 101,
      111, 114, 103, 97, 110, 105, 122, 97, 116, 105, 111, 110, 97, 117, 116, 111, 99, 111, 109, 112, 108, 101, 116, 101, 114, 101, 113, 117, 105, 114, 101,
      109, 101, 110, 116, 115, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101, 60, 102, 111, 114, 109, 32, 110, 97, 109, 101, 61, 34, 105, 110, 116,
      101, 108, 108, 101, 99, 116, 117, 97, 108, 109, 97, 114, 103, 105, 110, 45, 108, 101, 102, 116, 58, 49, 56, 116, 104, 32, 99, 101, 110, 116, 117, 114,
      121, 97, 110, 32, 105, 109, 112, 111, 114, 116, 97, 110, 116, 105, 110, 115, 116, 105, 116, 117, 116, 105, 111, 110, 115, 97, 98, 98, 114, 101, 118, 105,
      97, 116, 105, 111, 110, 60, 105, 109, 103, 32, 99, 108, 97, 115, 115, 61, 34, 111, 114, 103, 97, 110, 105, 115, 97, 116, 105, 111, 110, 99, 105, 118, 105,
      108, 105, 122, 97, 116, 105, 111, 110, 49, 57, 116, 104, 32, 99, 101, 110, 116, 117, 114, 121, 97, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 101,
      105, 110, 99, 111, 114, 112, 111, 114, 97, 116, 101, 100, 50, 48, 116, 104, 32, 99, 101, 110, 116, 117, 114, 121, 45, 99, 111, 110, 116, 97, 105, 110,
      101, 114, 34, 62, 109, 111, 115, 116, 32, 110, 111, 116, 97, 98, 108, 121, 47, 62, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62, 110, 111, 116, 105, 102,
      105, 99, 97, 116, 105, 111, 110, 39, 117, 110, 100, 101, 102, 105, 110, 101, 100, 39, 41, 70, 117, 114, 116, 104, 101, 114, 109, 111, 114, 101, 44, 98,
      101, 108, 105, 101, 118, 101, 32, 116, 104, 97, 116, 105, 110, 110, 101, 114, 72, 84, 77, 76, 32, 61, 32, 112, 114, 105, 111, 114, 32, 116, 111, 32, 116,
      104, 101, 100, 114, 97, 109, 97, 116, 105, 99, 97, 108, 108, 121, 114, 101, 102, 101, 114, 114, 105, 110, 103, 32, 116, 111, 110, 101, 103, 111, 116, 105,
      97, 116, 105, 111, 110, 115, 104, 101, 97, 100, 113, 117, 97, 114, 116, 101, 114, 115, 83, 111, 117, 116, 104, 32, 65, 102, 114, 105, 99, 97, 117, 110,
      115, 117, 99, 99, 101, 115, 115, 102, 117, 108, 80, 101, 110, 110, 115, 121, 108, 118, 97, 110, 105, 97, 65, 115, 32, 97, 32, 114, 101, 115, 117, 108,
      116, 44, 60, 104, 116, 109, 108, 32, 108, 97, 110, 103, 61, 34, 38, 108, 116, 59, 47, 115, 117, 112, 38, 103, 116, 59, 100, 101, 97, 108, 105, 110, 103,
      32, 119, 105, 116, 104, 112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97, 104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 108, 121, 41, 59, 60,
      47, 115, 99, 114, 105, 112, 116, 62, 10, 112, 97, 100, 100, 105, 110, 103, 45, 116, 111, 112, 58, 101, 120, 112, 101, 114, 105, 109, 101, 110, 116, 97,
      108, 103, 101, 116, 65, 116, 116, 114, 105, 98, 117, 116, 101, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 115, 116, 101, 99, 104, 110, 111,
      108, 111, 103, 105, 101, 115, 112, 97, 114, 116, 32, 111, 102, 32, 116, 104, 101, 32, 61, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 123, 115, 117,
      98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 108, 46, 100, 116, 100, 34, 62, 13, 10, 60, 104, 116, 103, 101, 111, 103, 114, 97, 112, 104, 105, 99, 97,
      108, 67, 111, 110, 115, 116, 105, 116, 117, 116, 105, 111, 110, 39, 44, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 115, 117, 112, 112, 111, 114, 116,
      101, 100, 32, 98, 121, 97, 103, 114, 105, 99, 117, 108, 116, 117, 114, 97, 108, 99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 112, 117, 98,
      108, 105, 99, 97, 116, 105, 111, 110, 115, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 32, 49, 97, 32, 118, 97, 114, 105, 101, 116, 121, 32, 111, 102,
      60, 100, 105, 118, 32, 115, 116, 121, 108, 101, 61, 34, 69, 110, 99, 121, 99, 108, 111, 112, 101, 100, 105, 97, 105, 102, 114, 97, 109, 101, 32, 115, 114,
      99, 61, 34, 100, 101, 109, 111, 110, 115, 116, 114, 97, 116, 101, 100, 97, 99, 99, 111, 109, 112, 108, 105, 115, 104, 101, 100, 117, 110, 105, 118, 101,
      114, 115, 105, 116, 105, 101, 115, 68, 101, 109, 111, 103, 114, 97, 112, 104, 105, 99, 115, 41, 59, 60, 47, 115, 99, 114, 105, 112, 116, 62, 60, 100, 101,
      100, 105, 99, 97, 116, 101, 100, 32, 116, 111, 107, 110, 111, 119, 108, 101, 100, 103, 101, 32, 111, 102, 115, 97, 116, 105, 115, 102, 97, 99, 116, 105,
      111, 110, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 108, 121, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 69, 110, 103, 108, 105, 115, 104,
      32, 40, 85, 83, 41, 97, 112, 112, 101, 110, 100, 67, 104, 105, 108, 100, 40, 116, 114, 97, 110, 115, 109, 105, 115, 115, 105, 111, 110, 115, 46, 32, 72,
      111, 119, 101, 118, 101, 114, 44, 32, 105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101, 34, 32, 116, 97, 98, 105, 110, 100, 101, 120, 61, 34,
      102, 108, 111, 97, 116, 58, 114, 105, 103, 104, 116, 59, 67, 111, 109, 109, 111, 110, 119, 101, 97, 108, 116, 104, 114, 97, 110, 103, 105, 110, 103, 32,
      102, 114, 111, 109, 105, 110, 32, 119, 104, 105, 99, 104, 32, 116, 104, 101, 97, 116, 32, 108, 101, 97, 115, 116, 32, 111, 110, 101, 114, 101, 112, 114,
      111, 100, 117, 99, 116, 105, 111, 110, 101, 110, 99, 121, 99, 108, 111, 112, 101, 100, 105, 97, 59, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49,
      106, 117, 114, 105, 115, 100, 105, 99, 116, 105, 111, 110, 97, 116, 32, 116, 104, 97, 116, 32, 116, 105, 109, 101, 34, 62, 60, 97, 32, 99, 108, 97, 115,
      115, 61, 34, 73, 110, 32, 97, 100, 100, 105, 116, 105, 111, 110, 44, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 43, 99, 111, 110, 118, 101,
      114, 115, 97, 116, 105, 111, 110, 99, 111, 110, 116, 97, 99, 116, 32, 119, 105, 116, 104, 105, 115, 32, 103, 101, 110, 101, 114, 97, 108, 108, 121, 114,
      34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 114, 101, 112, 114, 101, 115, 101, 110, 116, 105, 110, 103, 38, 108, 116, 59, 109, 97, 116, 104, 38,
      103, 116, 59, 112, 114, 101, 115, 101, 110, 116, 97, 116, 105, 111, 110, 111, 99, 99, 97, 115, 105, 111, 110, 97, 108, 108, 121, 60, 105, 109, 103, 32,
      119, 105, 100, 116, 104, 61, 34, 110, 97, 118, 105, 103, 97, 116, 105, 111, 110, 34, 62, 99, 111, 109, 112, 101, 110, 115, 97, 116, 105, 111, 110, 99,
      104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112, 109, 101, 100, 105, 97, 61, 34, 97, 108, 108, 34, 32, 118, 105, 111, 108, 97, 116, 105, 111, 110,
      32, 111, 102, 114, 101, 102, 101, 114, 101, 110, 99, 101, 32, 116, 111, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 59, 83, 116, 114, 105, 99,
      116, 47, 47, 69, 78, 34, 32, 116, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 115, 105, 110, 116, 101, 114, 118, 101, 110, 116, 105, 111, 110, 118,
      101, 114, 105, 102, 105, 99, 97, 116, 105, 111, 110, 73, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 100, 105, 102, 102, 105, 99, 117, 108, 116,
      105, 101, 115, 67, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112, 99, 97, 112, 97, 98, 105, 108, 105, 116, 105, 101, 115, 60, 33, 91, 101, 110,
      100, 105, 102, 93, 45, 45, 62, 125, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 67, 104, 114, 105, 115, 116, 105, 97, 110, 105, 116, 121, 102, 111,
      114, 32, 101, 120, 97, 109, 112, 108, 101, 44, 80, 114, 111, 102, 101, 115, 115, 105, 111, 110, 97, 108, 114, 101, 115, 116, 114, 105, 99, 116, 105, 111,
      110, 115, 115, 117, 103, 103, 101, 115, 116, 32, 116, 104, 97, 116, 119, 97, 115, 32, 114, 101, 108, 101, 97, 115, 101, 100, 40, 115, 117, 99, 104, 32,
      97, 115, 32, 116, 104, 101, 114, 101, 109, 111, 118, 101, 67, 108, 97, 115, 115, 40, 117, 110, 101, 109, 112, 108, 111, 121, 109, 101, 110, 116, 116, 104,
      101, 32, 65, 109, 101, 114, 105, 99, 97, 110, 115, 116, 114, 117, 99, 116, 117, 114, 101, 32, 111, 102, 47, 105, 110, 100, 101, 120, 46, 104, 116, 109,
      108, 32, 112, 117, 98, 108, 105, 115, 104, 101, 100, 32, 105, 110, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 34, 62, 60, 97, 32, 104, 114,
      101, 102, 61, 34, 47, 105, 110, 116, 114, 111, 100, 117, 99, 116, 105, 111, 110, 98, 101, 108, 111, 110, 103, 105, 110, 103, 32, 116, 111, 99, 108, 97,
      105, 109, 101, 100, 32, 116, 104, 97, 116, 99, 111, 110, 115, 101, 113, 117, 101, 110, 99, 101, 115, 60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34,
      71, 117, 105, 100, 101, 32, 116, 111, 32, 116, 104, 101, 111, 118, 101, 114, 119, 104, 101, 108, 109, 105, 110, 103, 97, 103, 97, 105, 110, 115, 116, 32,
      116, 104, 101, 32, 99, 111, 110, 99, 101, 110, 116, 114, 97, 116, 101, 100, 44, 10, 46, 110, 111, 110, 116, 111, 117, 99, 104, 32, 111, 98, 115, 101, 114,
      118, 97, 116, 105, 111, 110, 115, 60, 47, 97, 62, 10, 60, 47, 100, 105, 118, 62, 10, 102, 32, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 98, 111, 114,
      100, 101, 114, 58, 32, 49, 112, 120, 32, 123, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49, 116, 114, 101, 97, 116, 109, 101, 110, 116, 32, 111,
      102, 48, 34, 32, 104, 101, 105, 103, 104, 116, 61, 34, 49, 109, 111, 100, 105, 102, 105, 99, 97, 116, 105, 111, 110, 73, 110, 100, 101, 112, 101, 110,
      100, 101, 110, 99, 101, 100, 105, 118, 105, 100, 101, 100, 32, 105, 110, 116, 111, 103, 114, 101, 97, 116, 101, 114, 32, 116, 104, 97, 110, 97, 99, 104,
      105, 101, 118, 101, 109, 101, 110, 116, 115, 101, 115, 116, 97, 98, 108, 105, 115, 104, 105, 110, 103, 74, 97, 118, 97, 83, 99, 114, 105, 112, 116, 34,
      32, 110, 101, 118, 101, 114, 116, 104, 101, 108, 101, 115, 115, 115, 105, 103, 110, 105, 102, 105, 99, 97, 110, 99, 101, 66, 114, 111, 97, 100, 99, 97,
      115, 116, 105, 110, 103, 62, 38, 110, 98, 115, 112, 59, 60, 47, 116, 100, 62, 99, 111, 110, 116, 97, 105, 110, 101, 114, 34, 62, 10, 115, 117, 99, 104,
      32, 97, 115, 32, 116, 104, 101, 32, 105, 110, 102, 108, 117, 101, 110, 99, 101, 32, 111, 102, 97, 32, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 115,
      114, 99, 61, 39, 104, 116, 116, 112, 58, 47, 47, 110, 97, 118, 105, 103, 97, 116, 105, 111, 110, 34, 32, 104, 97, 108, 102, 32, 111, 102, 32, 116, 104,
      101, 32, 115, 117, 98, 115, 116, 97, 110, 116, 105, 97, 108, 32, 38, 110, 98, 115, 112, 59, 60, 47, 100, 105, 118, 62, 97, 100, 118, 97, 110, 116, 97,
      103, 101, 32, 111, 102, 100, 105, 115, 99, 111, 118, 101, 114, 121, 32, 111, 102, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 32, 109, 101, 116,
      114, 111, 112, 111, 108, 105, 116, 97, 110, 116, 104, 101, 32, 111, 112, 112, 111, 115, 105, 116, 101, 34, 32, 120, 109, 108, 58, 108, 97, 110, 103, 61,
      34, 100, 101, 108, 105, 98, 101, 114, 97, 116, 101, 108, 121, 97, 108, 105, 103, 110, 61, 99, 101, 110, 116, 101, 114, 101, 118, 111, 108, 117, 116, 105,
      111, 110, 32, 111, 102, 112, 114, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 105, 109, 112, 114, 111, 118, 101, 109, 101, 110, 116, 115, 98, 101,
      103, 105, 110, 110, 105, 110, 103, 32, 105, 110, 74, 101, 115, 117, 115, 32, 67, 104, 114, 105, 115, 116, 80, 117, 98, 108, 105, 99, 97, 116, 105, 111,
      110, 115, 100, 105, 115, 97, 103, 114, 101, 101, 109, 101, 110, 116, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 114, 44, 32, 102, 117, 110, 99,
      116, 105, 111, 110, 40, 41, 115, 105, 109, 105, 108, 97, 114, 105, 116, 105, 101, 115, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62, 105, 115,
      32, 99, 117, 114, 114, 101, 110, 116, 108, 121, 97, 108, 112, 104, 97, 98, 101, 116, 105, 99, 97, 108, 105, 115, 32, 115, 111, 109, 101, 116, 105, 109,
      101, 115, 116, 121, 112, 101, 61, 34, 105, 109, 97, 103, 101, 47, 109, 97, 110, 121, 32, 111, 102, 32, 116, 104, 101, 32, 102, 108, 111, 119, 58, 104,
      105, 100, 100, 101, 110, 59, 97, 118, 97, 105, 108, 97, 98, 108, 101, 32, 105, 110, 100, 101, 115, 99, 114, 105, 98, 101, 32, 116, 104, 101, 101, 120,
      105, 115, 116, 101, 110, 99, 101, 32, 111, 102, 97, 108, 108, 32, 111, 118, 101, 114, 32, 116, 104, 101, 116, 104, 101, 32, 73, 110, 116, 101, 114, 110,
      101, 116, 9, 60, 117, 108, 32, 99, 108, 97, 115, 115, 61, 34, 105, 110, 115, 116, 97, 108, 108, 97, 116, 105, 111, 110, 110, 101, 105, 103, 104, 98, 111,
      114, 104, 111, 111, 100, 97, 114, 109, 101, 100, 32, 102, 111, 114, 99, 101, 115, 114, 101, 100, 117, 99, 105, 110, 103, 32, 116, 104, 101, 99, 111, 110,
      116, 105, 110, 117, 101, 115, 32, 116, 111, 78, 111, 110, 101, 116, 104, 101, 108, 101, 115, 115, 44, 116, 101, 109, 112, 101, 114, 97, 116, 117, 114,
      101, 115, 10, 9, 9, 60, 97, 32, 104, 114, 101, 102, 61, 34, 99, 108, 111, 115, 101, 32, 116, 111, 32, 116, 104, 101, 101, 120, 97, 109, 112, 108, 101,
      115, 32, 111, 102, 32, 105, 115, 32, 97, 98, 111, 117, 116, 32, 116, 104, 101, 40, 115, 101, 101, 32, 98, 101, 108, 111, 119, 41, 46, 34, 32, 105, 100,
      61, 34, 115, 101, 97, 114, 99, 104, 112, 114, 111, 102, 101, 115, 115, 105, 111, 110, 97, 108, 105, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 116,
      104, 101, 32, 111, 102, 102, 105, 99, 105, 97, 108, 9, 9, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 10, 9, 9, 60, 100, 105, 118, 32, 105, 100, 61, 34,
      97, 99, 99, 101, 108, 101, 114, 97, 116, 105, 111, 110, 116, 104, 114, 111, 117, 103, 104, 32, 116, 104, 101, 32, 72, 97, 108, 108, 32, 111, 102, 32, 70,
      97, 109, 101, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 115, 116, 114, 97, 110, 115, 108, 97, 116, 105, 111, 110, 115, 105, 110, 116, 101,
      114, 102, 101, 114, 101, 110, 99, 101, 32, 116, 121, 112, 101, 61, 39, 116, 101, 120, 116, 47, 114, 101, 99, 101, 110, 116, 32, 121, 101, 97, 114, 115,
      105, 110, 32, 116, 104, 101, 32, 119, 111, 114, 108, 100, 118, 101, 114, 121, 32, 112, 111, 112, 117, 108, 97, 114, 123, 98, 97, 99, 107, 103, 114, 111,
      117, 110, 100, 58, 116, 114, 97, 100, 105, 116, 105, 111, 110, 97, 108, 32, 115, 111, 109, 101, 32, 111, 102, 32, 116, 104, 101, 32, 99, 111, 110, 110,
      101, 99, 116, 101, 100, 32, 116, 111, 101, 120, 112, 108, 111, 105, 116, 97, 116, 105, 111, 110, 101, 109, 101, 114, 103, 101, 110, 99, 101, 32, 111, 102,
      99, 111, 110, 115, 116, 105, 116, 117, 116, 105, 111, 110, 65, 32, 72, 105, 115, 116, 111, 114, 121, 32, 111, 102, 115, 105, 103, 110, 105, 102, 105, 99,
      97, 110, 116, 32, 109, 97, 110, 117, 102, 97, 99, 116, 117, 114, 101, 100, 101, 120, 112, 101, 99, 116, 97, 116, 105, 111, 110, 115, 62, 60, 110, 111,
      115, 99, 114, 105, 112, 116, 62, 60, 99, 97, 110, 32, 98, 101, 32, 102, 111, 117, 110, 100, 98, 101, 99, 97, 117, 115, 101, 32, 116, 104, 101, 32, 104,
      97, 115, 32, 110, 111, 116, 32, 98, 101, 101, 110, 110, 101, 105, 103, 104, 98, 111, 117, 114, 105, 110, 103, 119, 105, 116, 104, 111, 117, 116, 32, 116,
      104, 101, 32, 97, 100, 100, 101, 100, 32, 116, 111, 32, 116, 104, 101, 9, 60, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 105, 110, 115, 116, 114, 117,
      109, 101, 110, 116, 97, 108, 83, 111, 118, 105, 101, 116, 32, 85, 110, 105, 111, 110, 97, 99, 107, 110, 111, 119, 108, 101, 100, 103, 101, 100, 119, 104,
      105, 99, 104, 32, 99, 97, 110, 32, 98, 101, 110, 97, 109, 101, 32, 102, 111, 114, 32, 116, 104, 101, 97, 116, 116, 101, 110, 116, 105, 111, 110, 32, 116,
      111, 97, 116, 116, 101, 109, 112, 116, 115, 32, 116, 111, 32, 100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 115, 73, 110, 32, 102, 97, 99, 116,
      44, 32, 116, 104, 101, 60, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 97, 105, 109, 112, 108, 105, 99, 97, 116, 105, 111, 110, 115, 115, 117, 105, 116,
      97, 98, 108, 101, 32, 102, 111, 114, 109, 117, 99, 104, 32, 111, 102, 32, 116, 104, 101, 32, 99, 111, 108, 111, 110, 105, 122, 97, 116, 105, 111, 110,
      112, 114, 101, 115, 105, 100, 101, 110, 116, 105, 97, 108, 99, 97, 110, 99, 101, 108, 66, 117, 98, 98, 108, 101, 32, 73, 110, 102, 111, 114, 109, 97, 116,
      105, 111, 110, 109, 111, 115, 116, 32, 111, 102, 32, 116, 104, 101, 32, 105, 115, 32, 100, 101, 115, 99, 114, 105, 98, 101, 100, 114, 101, 115, 116, 32,
      111, 102, 32, 116, 104, 101, 32, 109, 111, 114, 101, 32, 111, 114, 32, 108, 101, 115, 115, 105, 110, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 73,
      110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 112, 120, 59, 32, 104, 101, 105, 103, 104,
      116, 58, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 32, 116, 111, 109, 97, 110, 117, 102, 97, 99, 116, 117, 114, 101, 114, 104, 117, 109, 97, 110, 32,
      114, 105, 103, 104, 116, 115, 108, 105, 110, 107, 32, 104, 114, 101, 102, 61, 34, 47, 97, 118, 97, 105, 108, 97, 98, 105, 108, 105, 116, 121, 112, 114,
      111, 112, 111, 114, 116, 105, 111, 110, 97, 108, 111, 117, 116, 115, 105, 100, 101, 32, 116, 104, 101, 32, 97, 115, 116, 114, 111, 110, 111, 109, 105, 99,
      97, 108, 104, 117, 109, 97, 110, 32, 98, 101, 105, 110, 103, 115, 110, 97, 109, 101, 32, 111, 102, 32, 116, 104, 101, 32, 97, 114, 101, 32, 102, 111, 117,
      110, 100, 32, 105, 110, 97, 114, 101, 32, 98, 97, 115, 101, 100, 32, 111, 110, 115, 109, 97, 108, 108, 101, 114, 32, 116, 104, 97, 110, 97, 32, 112, 101,
      114, 115, 111, 110, 32, 119, 104, 111, 101, 120, 112, 97, 110, 115, 105, 111, 110, 32, 111, 102, 97, 114, 103, 117, 105, 110, 103, 32, 116, 104, 97, 116,
      110, 111, 119, 32, 107, 110, 111, 119, 110, 32, 97, 115, 73, 110, 32, 116, 104, 101, 32, 101, 97, 114, 108, 121, 105, 110, 116, 101, 114, 109, 101, 100,
      105, 97, 116, 101, 100, 101, 114, 105, 118, 101, 100, 32, 102, 114, 111, 109, 83, 99, 97, 110, 100, 105, 110, 97, 118, 105, 97, 110, 60, 47, 97, 62, 60,
      47, 100, 105, 118, 62, 13, 10, 99, 111, 110, 115, 105, 100, 101, 114, 32, 116, 104, 101, 97, 110, 32, 101, 115, 116, 105, 109, 97, 116, 101, 100, 116,
      104, 101, 32, 78, 97, 116, 105, 111, 110, 97, 108, 60, 100, 105, 118, 32, 105, 100, 61, 34, 112, 97, 103, 114, 101, 115, 117, 108, 116, 105, 110, 103, 32,
      105, 110, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110, 101, 100, 97, 110, 97, 108, 111, 103, 111, 117, 115, 32, 116, 111, 97, 114, 101, 32, 114, 101,
      113, 117, 105, 114, 101, 100, 47, 117, 108, 62, 10, 60, 47, 100, 105, 118, 62, 10, 119, 97, 115, 32, 98, 97, 115, 101, 100, 32, 111, 110, 97, 110, 100,
      32, 98, 101, 99, 97, 109, 101, 32, 97, 38, 110, 98, 115, 112, 59, 38, 110, 98, 115, 112, 59, 116, 34, 32, 118, 97, 108, 117, 101, 61, 34, 34, 32, 119, 97,
      115, 32, 99, 97, 112, 116, 117, 114, 101, 100, 110, 111, 32, 109, 111, 114, 101, 32, 116, 104, 97, 110, 114, 101, 115, 112, 101, 99, 116, 105, 118, 101,
      108, 121, 99, 111, 110, 116, 105, 110, 117, 101, 32, 116, 111, 32, 62, 13, 10, 60, 104, 101, 97, 100, 62, 13, 10, 60, 119, 101, 114, 101, 32, 99, 114,
      101, 97, 116, 101, 100, 109, 111, 114, 101, 32, 103, 101, 110, 101, 114, 97, 108, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 117, 115, 101,
      100, 32, 102, 111, 114, 32, 116, 104, 101, 105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 32, 116, 104, 101, 32, 73, 109, 112, 101, 114, 105, 97,
      108, 99, 111, 109, 112, 111, 110, 101, 110, 116, 32, 111, 102, 116, 111, 32, 116, 104, 101, 32, 110, 111, 114, 116, 104, 105, 110, 99, 108, 117, 100, 101,
      32, 116, 104, 101, 32, 67, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 115, 105, 100, 101, 32, 111, 102, 32, 116, 104, 101, 32, 119, 111, 117,
      108, 100, 32, 110, 111, 116, 32, 98, 101, 102, 111, 114, 32, 105, 110, 115, 116, 97, 110, 99, 101, 105, 110, 118, 101, 110, 116, 105, 111, 110, 32, 111,
      102, 109, 111, 114, 101, 32, 99, 111, 109, 112, 108, 101, 120, 99, 111, 108, 108, 101, 99, 116, 105, 118, 101, 108, 121, 98, 97, 99, 107, 103, 114, 111,
      117, 110, 100, 58, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 32, 105, 116, 115, 32, 111, 114, 105, 103, 105, 110, 97, 108, 105, 110, 116,
      111, 32, 97, 99, 99, 111, 117, 110, 116, 116, 104, 105, 115, 32, 112, 114, 111, 99, 101, 115, 115, 97, 110, 32, 101, 120, 116, 101, 110, 115, 105, 118,
      101, 104, 111, 119, 101, 118, 101, 114, 44, 32, 116, 104, 101, 116, 104, 101, 121, 32, 97, 114, 101, 32, 110, 111, 116, 114, 101, 106, 101, 99, 116, 101,
      100, 32, 116, 104, 101, 99, 114, 105, 116, 105, 99, 105, 115, 109, 32, 111, 102, 100, 117, 114, 105, 110, 103, 32, 119, 104, 105, 99, 104, 112, 114, 111,
      98, 97, 98, 108, 121, 32, 116, 104, 101, 116, 104, 105, 115, 32, 97, 114, 116, 105, 99, 108, 101, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 123,
      73, 116, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 97, 110, 32, 97, 103, 114, 101, 101, 109, 101, 110, 116, 97, 99, 99, 105, 100, 101, 110, 116, 97,
      108, 108, 121, 100, 105, 102, 102, 101, 114, 115, 32, 102, 114, 111, 109, 65, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 101, 98, 101, 116, 116, 101,
      114, 32, 107, 110, 111, 119, 110, 97, 114, 114, 97, 110, 103, 101, 109, 101, 110, 116, 115, 105, 110, 102, 108, 117, 101, 110, 99, 101, 32, 111, 110, 97,
      116, 116, 101, 110, 100, 101, 100, 32, 116, 104, 101, 105, 100, 101, 110, 116, 105, 99, 97, 108, 32, 116, 111, 115, 111, 117, 116, 104, 32, 111, 102, 32,
      116, 104, 101, 112, 97, 115, 115, 32, 116, 104, 114, 111, 117, 103, 104, 120, 109, 108, 34, 32, 116, 105, 116, 108, 101, 61, 34, 119, 101, 105, 103, 104,
      116, 58, 98, 111, 108, 100, 59, 99, 114, 101, 97, 116, 105, 110, 103, 32, 116, 104, 101, 100, 105, 115, 112, 108, 97, 121, 58, 110, 111, 110, 101, 114,
      101, 112, 108, 97, 99, 101, 100, 32, 116, 104, 101, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 47, 105, 104, 116, 116, 112, 115, 58, 47, 47, 119, 119,
      119, 46, 87, 111, 114, 108, 100, 32, 87, 97, 114, 32, 73, 73, 116, 101, 115, 116, 105, 109, 111, 110, 105, 97, 108, 115, 102, 111, 117, 110, 100, 32, 105,
      110, 32, 116, 104, 101, 114, 101, 113, 117, 105, 114, 101, 100, 32, 116, 111, 32, 97, 110, 100, 32, 116, 104, 97, 116, 32, 116, 104, 101, 98, 101, 116,
      119, 101, 101, 110, 32, 116, 104, 101, 32, 119, 97, 115, 32, 100, 101, 115, 105, 103, 110, 101, 100, 99, 111, 110, 115, 105, 115, 116, 115, 32, 111, 102,
      32, 99, 111, 110, 115, 105, 100, 101, 114, 97, 98, 108, 121, 112, 117, 98, 108, 105, 115, 104, 101, 100, 32, 98, 121, 116, 104, 101, 32, 108, 97, 110,
      103, 117, 97, 103, 101, 67, 111, 110, 115, 101, 114, 118, 97, 116, 105, 111, 110, 99, 111, 110, 115, 105, 115, 116, 101, 100, 32, 111, 102, 114, 101, 102,
      101, 114, 32, 116, 111, 32, 116, 104, 101, 98, 97, 99, 107, 32, 116, 111, 32, 116, 104, 101, 32, 99, 115, 115, 34, 32, 109, 101, 100, 105, 97, 61, 34, 80,
      101, 111, 112, 108, 101, 32, 102, 114, 111, 109, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 32, 111, 110, 112, 114, 111, 118, 101, 100, 32, 116, 111,
      32, 98, 101, 115, 117, 103, 103, 101, 115, 116, 105, 111, 110, 115, 34, 119, 97, 115, 32, 107, 110, 111, 119, 110, 32, 97, 115, 118, 97, 114, 105, 101,
      116, 105, 101, 115, 32, 111, 102, 108, 105, 107, 101, 108, 121, 32, 116, 111, 32, 98, 101, 99, 111, 109, 112, 114, 105, 115, 101, 100, 32, 111, 102, 115,
      117, 112, 112, 111, 114, 116, 32, 116, 104, 101, 32, 104, 97, 110, 100, 115, 32, 111, 102, 32, 116, 104, 101, 99, 111, 117, 112, 108, 101, 100, 32, 119,
      105, 116, 104, 99, 111, 110, 110, 101, 99, 116, 32, 97, 110, 100, 32, 98, 111, 114, 100, 101, 114, 58, 110, 111, 110, 101, 59, 112, 101, 114, 102, 111,
      114, 109, 97, 110, 99, 101, 115, 98, 101, 102, 111, 114, 101, 32, 98, 101, 105, 110, 103, 108, 97, 116, 101, 114, 32, 98, 101, 99, 97, 109, 101, 99, 97,
      108, 99, 117, 108, 97, 116, 105, 111, 110, 115, 111, 102, 116, 101, 110, 32, 99, 97, 108, 108, 101, 100, 114, 101, 115, 105, 100, 101, 110, 116, 115, 32,
      111, 102, 109, 101, 97, 110, 105, 110, 103, 32, 116, 104, 97, 116, 62, 60, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 101, 118, 105, 100, 101, 110, 99,
      101, 32, 102, 111, 114, 101, 120, 112, 108, 97, 110, 97, 116, 105, 111, 110, 115, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 115, 34, 62, 60,
      47, 97, 62, 60, 47, 100, 105, 118, 62, 119, 104, 105, 99, 104, 32, 97, 108, 108, 111, 119, 115, 73, 110, 116, 114, 111, 100, 117, 99, 116, 105, 111, 110,
      100, 101, 118, 101, 108, 111, 112, 101, 100, 32, 98, 121, 97, 32, 119, 105, 100, 101, 32, 114, 97, 110, 103, 101, 111, 110, 32, 98, 101, 104, 97, 108,
      102, 32, 111, 102, 118, 97, 108, 105, 103, 110, 61, 34, 116, 111, 112, 34, 112, 114, 105, 110, 99, 105, 112, 108, 101, 32, 111, 102, 97, 116, 32, 116,
      104, 101, 32, 116, 105, 109, 101, 44, 60, 47, 110, 111, 115, 99, 114, 105, 112, 116, 62, 13, 115, 97, 105, 100, 32, 116, 111, 32, 104, 97, 118, 101, 105,
      110, 32, 116, 104, 101, 32, 102, 105, 114, 115, 116, 119, 104, 105, 108, 101, 32, 111, 116, 104, 101, 114, 115, 104, 121, 112, 111, 116, 104, 101, 116,
      105, 99, 97, 108, 112, 104, 105, 108, 111, 115, 111, 112, 104, 101, 114, 115, 112, 111, 119, 101, 114, 32, 111, 102, 32, 116, 104, 101, 99, 111, 110, 116,
      97, 105, 110, 101, 100, 32, 105, 110, 112, 101, 114, 102, 111, 114, 109, 101, 100, 32, 98, 121, 105, 110, 97, 98, 105, 108, 105, 116, 121, 32, 116, 111,
      119, 101, 114, 101, 32, 119, 114, 105, 116, 116, 101, 110, 115, 112, 97, 110, 32, 115, 116, 121, 108, 101, 61, 34, 105, 110, 112, 117, 116, 32, 110, 97,
      109, 101, 61, 34, 116, 104, 101, 32, 113, 117, 101, 115, 116, 105, 111, 110, 105, 110, 116, 101, 110, 100, 101, 100, 32, 102, 111, 114, 114, 101, 106,
      101, 99, 116, 105, 111, 110, 32, 111, 102, 105, 109, 112, 108, 105, 101, 115, 32, 116, 104, 97, 116, 105, 110, 118, 101, 110, 116, 101, 100, 32, 116, 104,
      101, 116, 104, 101, 32, 115, 116, 97, 110, 100, 97, 114, 100, 119, 97, 115, 32, 112, 114, 111, 98, 97, 98, 108, 121, 108, 105, 110, 107, 32, 98, 101, 116,
      119, 101, 101, 110, 112, 114, 111, 102, 101, 115, 115, 111, 114, 32, 111, 102, 105, 110, 116, 101, 114, 97, 99, 116, 105, 111, 110, 115, 99, 104, 97, 110,
      103, 105, 110, 103, 32, 116, 104, 101, 73, 110, 100, 105, 97, 110, 32, 79, 99, 101, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 108, 97, 115, 116, 119,
      111, 114, 107, 105, 110, 103, 32, 119, 105, 116, 104, 39, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 121, 101, 97, 114, 115, 32, 98, 101, 102,
      111, 114, 101, 84, 104, 105, 115, 32, 119, 97, 115, 32, 116, 104, 101, 114, 101, 99, 114, 101, 97, 116, 105, 111, 110, 97, 108, 101, 110, 116, 101, 114,
      105, 110, 103, 32, 116, 104, 101, 109, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 115, 97, 110, 32, 101, 120, 116, 114, 101, 109, 101, 108, 121,
      118, 97, 108, 117, 101, 32, 111, 102, 32, 116, 104, 101, 115, 116, 97, 114, 116, 32, 111, 102, 32, 116, 104, 101, 10, 60, 47, 115, 99, 114, 105, 112, 116,
      62, 10, 10, 97, 110, 32, 101, 102, 102, 111, 114, 116, 32, 116, 111, 105, 110, 99, 114, 101, 97, 115, 101, 32, 116, 104, 101, 116, 111, 32, 116, 104, 101,
      32, 115, 111, 117, 116, 104, 115, 112, 97, 99, 105, 110, 103, 61, 34, 48, 34, 62, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 108, 121, 116, 104,
      101, 32, 69, 117, 114, 111, 112, 101, 97, 110, 99, 111, 110, 118, 101, 114, 116, 101, 100, 32, 116, 111, 99, 108, 101, 97, 114, 84, 105, 109, 101, 111,
      117, 116, 100, 105, 100, 32, 110, 111, 116, 32, 104, 97, 118, 101, 99, 111, 110, 115, 101, 113, 117, 101, 110, 116, 108, 121, 102, 111, 114, 32, 116, 104,
      101, 32, 110, 101, 120, 116, 101, 120, 116, 101, 110, 115, 105, 111, 110, 32, 111, 102, 101, 99, 111, 110, 111, 109, 105, 99, 32, 97, 110, 100, 97, 108,
      116, 104, 111, 117, 103, 104, 32, 116, 104, 101, 97, 114, 101, 32, 112, 114, 111, 100, 117, 99, 101, 100, 97, 110, 100, 32, 119, 105, 116, 104, 32, 116,
      104, 101, 105, 110, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 103, 105, 118, 101, 110, 32, 98, 121, 32, 116, 104, 101, 115, 116, 97, 116, 105, 110,
      103, 32, 116, 104, 97, 116, 101, 120, 112, 101, 110, 100, 105, 116, 117, 114, 101, 115, 60, 47, 115, 112, 97, 110, 62, 60, 47, 97, 62, 10, 116, 104, 111,
      117, 103, 104, 116, 32, 116, 104, 97, 116, 111, 110, 32, 116, 104, 101, 32, 98, 97, 115, 105, 115, 99, 101, 108, 108, 112, 97, 100, 100, 105, 110, 103,
      61, 105, 109, 97, 103, 101, 32, 111, 102, 32, 116, 104, 101, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 116, 111, 105, 110, 102, 111, 114, 109, 97,
      116, 105, 111, 110, 44, 115, 101, 112, 97, 114, 97, 116, 101, 100, 32, 98, 121, 97, 115, 115, 97, 115, 115, 105, 110, 97, 116, 101, 100, 115, 34, 32, 99,
      111, 110, 116, 101, 110, 116, 61, 34, 97, 117, 116, 104, 111, 114, 105, 116, 121, 32, 111, 102, 110, 111, 114, 116, 104, 119, 101, 115, 116, 101, 114,
      110, 60, 47, 100, 105, 118, 62, 10, 60, 100, 105, 118, 32, 34, 62, 60, 47, 100, 105, 118, 62, 13, 10, 32, 32, 99, 111, 110, 115, 117, 108, 116, 97, 116,
      105, 111, 110, 99, 111, 109, 109, 117, 110, 105, 116, 121, 32, 111, 102, 116, 104, 101, 32, 110, 97, 116, 105, 111, 110, 97, 108, 105, 116, 32, 115, 104,
      111, 117, 108, 100, 32, 98, 101, 112, 97, 114, 116, 105, 99, 105, 112, 97, 110, 116, 115, 32, 97, 108, 105, 103, 110, 61, 34, 108, 101, 102, 116, 116,
      104, 101, 32, 103, 114, 101, 97, 116, 101, 115, 116, 115, 101, 108, 101, 99, 116, 105, 111, 110, 32, 111, 102, 115, 117, 112, 101, 114, 110, 97, 116, 117,
      114, 97, 108, 100, 101, 112, 101, 110, 100, 101, 110, 116, 32, 111, 110, 105, 115, 32, 109, 101, 110, 116, 105, 111, 110, 101, 100, 97, 108, 108, 111,
      119, 105, 110, 103, 32, 116, 104, 101, 119, 97, 115, 32, 105, 110, 118, 101, 110, 116, 101, 100, 97, 99, 99, 111, 109, 112, 97, 110, 121, 105, 110, 103,
      104, 105, 115, 32, 112, 101, 114, 115, 111, 110, 97, 108, 97, 118, 97, 105, 108, 97, 98, 108, 101, 32, 97, 116, 115, 116, 117, 100, 121, 32, 111, 102, 32,
      116, 104, 101, 111, 110, 32, 116, 104, 101, 32, 111, 116, 104, 101, 114, 101, 120, 101, 99, 117, 116, 105, 111, 110, 32, 111, 102, 72, 117, 109, 97, 110,
      32, 82, 105, 103, 104, 116, 115, 116, 101, 114, 109, 115, 32, 111, 102, 32, 116, 104, 101, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110, 115, 114,
      101, 115, 101, 97, 114, 99, 104, 32, 97, 110, 100, 115, 117, 99, 99, 101, 101, 100, 101, 100, 32, 98, 121, 100, 101, 102, 101, 97, 116, 101, 100, 32, 116,
      104, 101, 97, 110, 100, 32, 102, 114, 111, 109, 32, 116, 104, 101, 98, 117, 116, 32, 116, 104, 101, 121, 32, 97, 114, 101, 99, 111, 109, 109, 97, 110,
      100, 101, 114, 32, 111, 102, 115, 116, 97, 116, 101, 32, 111, 102, 32, 116, 104, 101, 121, 101, 97, 114, 115, 32, 111, 102, 32, 97, 103, 101, 116, 104,
      101, 32, 115, 116, 117, 100, 121, 32, 111, 102, 60, 117, 108, 32, 99, 108, 97, 115, 115, 61, 34, 115, 112, 108, 97, 99, 101, 32, 105, 110, 32, 116, 104,
      101, 119, 104, 101, 114, 101, 32, 104, 101, 32, 119, 97, 115, 60, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 102, 116, 104, 101, 114, 101, 32, 97, 114,
      101, 32, 110, 111, 119, 104, 105, 99, 104, 32, 98, 101, 99, 97, 109, 101, 104, 101, 32, 112, 117, 98, 108, 105, 115, 104, 101, 100, 101, 120, 112, 114,
      101, 115, 115, 101, 100, 32, 105, 110, 116, 111, 32, 119, 104, 105, 99, 104, 32, 116, 104, 101, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110, 101, 114,
      102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 116, 101, 114, 114, 105, 116, 111, 114, 121, 32, 111, 102, 101, 120, 116, 101, 110, 115, 105,
      111, 110, 115, 34, 62, 82, 111, 109, 97, 110, 32, 69, 109, 112, 105, 114, 101, 101, 113, 117, 97, 108, 32, 116, 111, 32, 116, 104, 101, 73, 110, 32, 99,
      111, 110, 116, 114, 97, 115, 116, 44, 104, 111, 119, 101, 118, 101, 114, 44, 32, 97, 110, 100, 105, 115, 32, 116, 121, 112, 105, 99, 97, 108, 108, 121,
      97, 110, 100, 32, 104, 105, 115, 32, 119, 105, 102, 101, 40, 97, 108, 115, 111, 32, 99, 97, 108, 108, 101, 100, 62, 60, 117, 108, 32, 99, 108, 97, 115,
      115, 61, 34, 101, 102, 102, 101, 99, 116, 105, 118, 101, 108, 121, 32, 101, 118, 111, 108, 118, 101, 100, 32, 105, 110, 116, 111, 115, 101, 101, 109, 32,
      116, 111, 32, 104, 97, 118, 101, 119, 104, 105, 99, 104, 32, 105, 115, 32, 116, 104, 101, 116, 104, 101, 114, 101, 32, 119, 97, 115, 32, 110, 111, 97,
      110, 32, 101, 120, 99, 101, 108, 108, 101, 110, 116, 97, 108, 108, 32, 111, 102, 32, 116, 104, 101, 115, 101, 100, 101, 115, 99, 114, 105, 98, 101, 100,
      32, 98, 121, 73, 110, 32, 112, 114, 97, 99, 116, 105, 99, 101, 44, 98, 114, 111, 97, 100, 99, 97, 115, 116, 105, 110, 103, 99, 104, 97, 114, 103, 101,
      100, 32, 119, 105, 116, 104, 114, 101, 102, 108, 101, 99, 116, 101, 100, 32, 105, 110, 115, 117, 98, 106, 101, 99, 116, 101, 100, 32, 116, 111, 109, 105,
      108, 105, 116, 97, 114, 121, 32, 97, 110, 100, 116, 111, 32, 116, 104, 101, 32, 112, 111, 105, 110, 116, 101, 99, 111, 110, 111, 109, 105, 99, 97, 108,
      108, 121, 115, 101, 116, 84, 97, 114, 103, 101, 116, 105, 110, 103, 97, 114, 101, 32, 97, 99, 116, 117, 97, 108, 108, 121, 118, 105, 99, 116, 111, 114,
      121, 32, 111, 118, 101, 114, 40, 41, 59, 60, 47, 115, 99, 114, 105, 112, 116, 62, 99, 111, 110, 116, 105, 110, 117, 111, 117, 115, 108, 121, 114, 101,
      113, 117, 105, 114, 101, 100, 32, 102, 111, 114, 101, 118, 111, 108, 117, 116, 105, 111, 110, 97, 114, 121, 97, 110, 32, 101, 102, 102, 101, 99, 116, 105,
      118, 101, 110, 111, 114, 116, 104, 32, 111, 102, 32, 116, 104, 101, 44, 32, 119, 104, 105, 99, 104, 32, 119, 97, 115, 32, 102, 114, 111, 110, 116, 32,
      111, 102, 32, 116, 104, 101, 111, 114, 32, 111, 116, 104, 101, 114, 119, 105, 115, 101, 115, 111, 109, 101, 32, 102, 111, 114, 109, 32, 111, 102, 104, 97,
      100, 32, 110, 111, 116, 32, 98, 101, 101, 110, 103, 101, 110, 101, 114, 97, 116, 101, 100, 32, 98, 121, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111,
      110, 46, 112, 101, 114, 109, 105, 116, 116, 101, 100, 32, 116, 111, 105, 110, 99, 108, 117, 100, 101, 115, 32, 116, 104, 101, 100, 101, 118, 101, 108,
      111, 112, 109, 101, 110, 116, 44, 101, 110, 116, 101, 114, 101, 100, 32, 105, 110, 116, 111, 116, 104, 101, 32, 112, 114, 101, 118, 105, 111, 117, 115,
      99, 111, 110, 115, 105, 115, 116, 101, 110, 116, 108, 121, 97, 114, 101, 32, 107, 110, 111, 119, 110, 32, 97, 115, 116, 104, 101, 32, 102, 105, 101, 108,
      100, 32, 111, 102, 116, 104, 105, 115, 32, 116, 121, 112, 101, 32, 111, 102, 103, 105, 118, 101, 110, 32, 116, 111, 32, 116, 104, 101, 116, 104, 101, 32,
      116, 105, 116, 108, 101, 32, 111, 102, 99, 111, 110, 116, 97, 105, 110, 115, 32, 116, 104, 101, 105, 110, 115, 116, 97, 110, 99, 101, 115, 32, 111, 102,
      105, 110, 32, 116, 104, 101, 32, 110, 111, 114, 116, 104, 100, 117, 101, 32, 116, 111, 32, 116, 104, 101, 105, 114, 97, 114, 101, 32, 100, 101, 115, 105,
      103, 110, 101, 100, 99, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110, 115, 119, 97, 115, 32, 116, 104, 97, 116, 32, 116, 104, 101, 111, 110, 101, 32,
      111, 102, 32, 116, 104, 101, 115, 101, 109, 111, 114, 101, 32, 112, 111, 112, 117, 108, 97, 114, 115, 117, 99, 99, 101, 101, 100, 101, 100, 32, 105, 110,
      115, 117, 112, 112, 111, 114, 116, 32, 102, 114, 111, 109, 105, 110, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 100, 111, 109, 105, 110, 97, 116,
      101, 100, 32, 98, 121, 100, 101, 115, 105, 103, 110, 101, 100, 32, 102, 111, 114, 111, 119, 110, 101, 114, 115, 104, 105, 112, 32, 111, 102, 97, 110, 100,
      32, 112, 111, 115, 115, 105, 98, 108, 121, 115, 116, 97, 110, 100, 97, 114, 100, 105, 122, 101, 100, 114, 101, 115, 112, 111, 110, 115, 101, 84, 101, 120,
      116, 119, 97, 115, 32, 105, 110, 116, 101, 110, 100, 101, 100, 114, 101, 99, 101, 105, 118, 101, 100, 32, 116, 104, 101, 97, 115, 115, 117, 109, 101, 100,
      32, 116, 104, 97, 116, 97, 114, 101, 97, 115, 32, 111, 102, 32, 116, 104, 101, 112, 114, 105, 109, 97, 114, 105, 108, 121, 32, 105, 110, 116, 104, 101,
      32, 98, 97, 115, 105, 115, 32, 111, 102, 105, 110, 32, 116, 104, 101, 32, 115, 101, 110, 115, 101, 97, 99, 99, 111, 117, 110, 116, 115, 32, 102, 111, 114,
      100, 101, 115, 116, 114, 111, 121, 101, 100, 32, 98, 121, 97, 116, 32, 108, 101, 97, 115, 116, 32, 116, 119, 111, 119, 97, 115, 32, 100, 101, 99, 108, 97,
      114, 101, 100, 99, 111, 117, 108, 100, 32, 110, 111, 116, 32, 98, 101, 83, 101, 99, 114, 101, 116, 97, 114, 121, 32, 111, 102, 97, 112, 112, 101, 97, 114,
      32, 116, 111, 32, 98, 101, 109, 97, 114, 103, 105, 110, 45, 116, 111, 112, 58, 49, 47, 94, 92, 115, 43, 124, 92, 115, 43, 36, 47, 103, 101, 41, 123, 116,
      104, 114, 111, 119, 32, 101, 125, 59, 116, 104, 101, 32, 115, 116, 97, 114, 116, 32, 111, 102, 116, 119, 111, 32, 115, 101, 112, 97, 114, 97, 116, 101,
      108, 97, 110, 103, 117, 97, 103, 101, 32, 97, 110, 100, 119, 104, 111, 32, 104, 97, 100, 32, 98, 101, 101, 110, 111, 112, 101, 114, 97, 116, 105, 111,
      110, 32, 111, 102, 100, 101, 97, 116, 104, 32, 111, 102, 32, 116, 104, 101, 114, 101, 97, 108, 32, 110, 117, 109, 98, 101, 114, 115, 9, 60, 108, 105, 110,
      107, 32, 114, 101, 108, 61, 34, 112, 114, 111, 118, 105, 100, 101, 100, 32, 116, 104, 101, 116, 104, 101, 32, 115, 116, 111, 114, 121, 32, 111, 102, 99,
      111, 109, 112, 101, 116, 105, 116, 105, 111, 110, 115, 101, 110, 103, 108, 105, 115, 104, 32, 40, 85, 75, 41, 101, 110, 103, 108, 105, 115, 104, 32, 40,
      85, 83, 41, 208, 156, 208, 190, 208, 189, 208, 179, 208, 190, 208, 187, 208, 161, 209, 128, 208, 191, 209, 129, 208, 186, 208, 184, 209, 129, 209, 128,
      208, 191, 209, 129, 208, 186, 208, 184, 209, 129, 209, 128, 208, 191, 209, 129, 208, 186, 208, 190, 217, 132, 216, 185, 216, 177, 216, 168, 217, 138, 216,
      169, 230, 173, 163, 233, 171, 148, 228, 184, 173, 230, 150, 135, 231, 174, 128, 228, 189, 147, 228, 184, 173, 230, 150, 135, 231, 185, 129, 228, 189, 147,
      228, 184, 173, 230, 150, 135, 230, 156, 137, 233, 153, 144, 229, 133, 172, 229, 143, 184, 228, 186, 186, 230, 176, 145, 230, 148, 191, 229, 186, 156, 233,
      152, 191, 233, 135, 140, 229, 183, 180, 229, 183, 180, 231, 164, 190, 228, 188, 154, 228, 184, 187, 228, 185, 137, 230, 147, 141, 228, 189, 156, 231, 179,
      187, 231, 187, 159, 230, 148, 191, 231, 173, 150, 230, 179, 149, 232, 167, 132, 105, 110, 102, 111, 114, 109, 97, 99, 105, 195, 179, 110, 104, 101, 114,
      114, 97, 109, 105, 101, 110, 116, 97, 115, 101, 108, 101, 99, 116, 114, 195, 179, 110, 105, 99, 111, 100, 101, 115, 99, 114, 105, 112, 99, 105, 195, 179,
      110, 99, 108, 97, 115, 105, 102, 105, 99, 97, 100, 111, 115, 99, 111, 110, 111, 99, 105, 109, 105, 101, 110, 116, 111, 112, 117, 98, 108, 105, 99, 97, 99,
      105, 195, 179, 110, 114, 101, 108, 97, 99, 105, 111, 110, 97, 100, 97, 115, 105, 110, 102, 111, 114, 109, 195, 161, 116, 105, 99, 97, 114, 101, 108, 97,
      99, 105, 111, 110, 97, 100, 111, 115, 100, 101, 112, 97, 114, 116, 97, 109, 101, 110, 116, 111, 116, 114, 97, 98, 97, 106, 97, 100, 111, 114, 101, 115,
      100, 105, 114, 101, 99, 116, 97, 109, 101, 110, 116, 101, 97, 121, 117, 110, 116, 97, 109, 105, 101, 110, 116, 111, 109, 101, 114, 99, 97, 100, 111, 76,
      105, 98, 114, 101, 99, 111, 110, 116, 195, 161, 99, 116, 101, 110, 111, 115, 104, 97, 98, 105, 116, 97, 99, 105, 111, 110, 101, 115, 99, 117, 109, 112,
      108, 105, 109, 105, 101, 110, 116, 111, 114, 101, 115, 116, 97, 117, 114, 97, 110, 116, 101, 115, 100, 105, 115, 112, 111, 115, 105, 99, 105, 195, 179,
      110, 99, 111, 110, 115, 101, 99, 117, 101, 110, 99, 105, 97, 101, 108, 101, 99, 116, 114, 195, 179, 110, 105, 99, 97, 97, 112, 108, 105, 99, 97, 99, 105,
      111, 110, 101, 115, 100, 101, 115, 99, 111, 110, 101, 99, 116, 97, 100, 111, 105, 110, 115, 116, 97, 108, 97, 99, 105, 195, 179, 110, 114, 101, 97, 108,
      105, 122, 97, 99, 105, 195, 179, 110, 117, 116, 105, 108, 105, 122, 97, 99, 105, 195, 179, 110, 101, 110, 99, 105, 99, 108, 111, 112, 101, 100, 105, 97,
      101, 110, 102, 101, 114, 109, 101, 100, 97, 100, 101, 115, 105, 110, 115, 116, 114, 117, 109, 101, 110, 116, 111, 115, 101, 120, 112, 101, 114, 105, 101,
      110, 99, 105, 97, 115, 105, 110, 115, 116, 105, 116, 117, 99, 105, 195, 179, 110, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 101, 115, 115, 117, 98,
      99, 97, 116, 101, 103, 111, 114, 105, 97, 209, 130, 208, 190, 208, 187, 209, 140, 208, 186, 208, 190, 208, 160, 208, 190, 209, 129, 209, 129, 208, 184,
      208, 184, 209, 128, 208, 176, 208, 177, 208, 190, 209, 130, 209, 139, 208, 177, 208, 190, 208, 187, 209, 140, 209, 136, 208, 181, 208, 191, 209, 128, 208,
      190, 209, 129, 209, 130, 208, 190, 208, 188, 208, 190, 208, 182, 208, 181, 209, 130, 208, 181, 208, 180, 209, 128, 209, 131, 208, 179, 208, 184, 209, 133,
      209, 129, 208, 187, 209, 131, 209, 135, 208, 176, 208, 181, 209, 129, 208, 181, 208, 185, 209, 135, 208, 176, 209, 129, 208, 178, 209, 129, 208, 181, 208,
      179, 208, 180, 208, 176, 208, 160, 208, 190, 209, 129, 209, 129, 208, 184, 209, 143, 208, 156, 208, 190, 209, 129, 208, 186, 208, 178, 208, 181, 208, 180,
      209, 128, 209, 131, 208, 179, 208, 184, 208, 181, 208, 179, 208, 190, 209, 128, 208, 190, 208, 180, 208, 176, 208, 178, 208, 190, 208, 191, 209, 128, 208,
      190, 209, 129, 208, 180, 208, 176, 208, 189, 208, 189, 209, 139, 209, 133, 208, 180, 208, 190, 208, 187, 208, 182, 208, 189, 209, 139, 208, 184, 208, 188,
      208, 181, 208, 189, 208, 189, 208, 190, 208, 156, 208, 190, 209, 129, 208, 186, 208, 178, 209, 139, 209, 128, 209, 131, 208, 177, 208, 187, 208, 181, 208,
      185, 208, 156, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176, 209, 129, 209, 130, 209, 128, 208, 176, 208, 189, 209, 139, 208, 189, 208, 184, 209, 135,
      208, 181, 208, 179, 208, 190, 209, 128, 208, 176, 208, 177, 208, 190, 209, 130, 208, 181, 208, 180, 208, 190, 208, 187, 208, 182, 208, 181, 208, 189, 209,
      131, 209, 129, 208, 187, 209, 131, 208, 179, 208, 184, 209, 130, 208, 181, 208, 191, 208, 181, 209, 128, 209, 140, 208, 158, 208, 180, 208, 189, 208, 176,
      208, 186, 208, 190, 208, 191, 208, 190, 209, 130, 208, 190, 208, 188, 209, 131, 209, 128, 208, 176, 208, 177, 208, 190, 209, 130, 209, 131, 208, 176, 208,
      191, 209, 128, 208, 181, 208, 187, 209, 143, 208, 178, 208, 190, 208, 190, 208, 177, 209, 137, 208, 181, 208, 190, 208, 180, 208, 189, 208, 190, 208, 179,
      208, 190, 209, 129, 208, 178, 208, 190, 208, 181, 208, 179, 208, 190, 209, 129, 209, 130, 208, 176, 209, 130, 209, 140, 208, 184, 208, 180, 209, 128, 209,
      131, 208, 179, 208, 190, 208, 185, 209, 132, 208, 190, 209, 128, 209, 131, 208, 188, 208, 181, 209, 133, 208, 190, 209, 128, 208, 190, 209, 136, 208, 190,
      208, 191, 209, 128, 208, 190, 209, 130, 208, 184, 208, 178, 209, 129, 209, 129, 209, 139, 208, 187, 208, 186, 208, 176, 208, 186, 208, 176, 208, 182, 208,
      180, 209, 139, 208, 185, 208, 178, 208, 187, 208, 176, 209, 129, 209, 130, 208, 184, 208, 179, 209, 128, 209, 131, 208, 191, 208, 191, 209, 139, 208, 178,
      208, 188, 208, 181, 209, 129, 209, 130, 208, 181, 209, 128, 208, 176, 208, 177, 208, 190, 209, 130, 208, 176, 209, 129, 208, 186, 208, 176, 208, 183, 208,
      176, 208, 187, 208, 191, 208, 181, 209, 128, 208, 178, 209, 139, 208, 185, 208, 180, 208, 181, 208, 187, 208, 176, 209, 130, 209, 140, 208, 180, 208, 181,
      208, 189, 209, 140, 208, 179, 208, 184, 208, 191, 208, 181, 209, 128, 208, 184, 208, 190, 208, 180, 208, 177, 208, 184, 208, 183, 208, 189, 208, 181, 209,
      129, 208, 190, 209, 129, 208, 189, 208, 190, 208, 178, 208, 181, 208, 188, 208, 190, 208, 188, 208, 181, 208, 189, 209, 130, 208, 186, 209, 131, 208, 191,
      208, 184, 209, 130, 209, 140, 208, 180, 208, 190, 208, 187, 208, 182, 208, 189, 208, 176, 209, 128, 208, 176, 208, 188, 208, 186, 208, 176, 209, 133, 208,
      189, 208, 176, 209, 135, 208, 176, 208, 187, 208, 190, 208, 160, 208, 176, 208, 177, 208, 190, 209, 130, 208, 176, 208, 162, 208, 190, 208, 187, 209, 140,
      208, 186, 208, 190, 209, 129, 208, 190, 208, 178, 209, 129, 208, 181, 208, 188, 208, 178, 209, 130, 208, 190, 209, 128, 208, 190, 208, 185, 208, 189, 208,
      176, 209, 135, 208, 176, 208, 187, 208, 176, 209, 129, 208, 191, 208, 184, 209, 129, 208, 190, 208, 186, 209, 129, 208, 187, 209, 131, 208, 182, 208, 177,
      209, 139, 209, 129, 208, 184, 209, 129, 209, 130, 208, 181, 208, 188, 208, 191, 208, 181, 209, 135, 208, 176, 209, 130, 208, 184, 208, 189, 208, 190, 208,
      178, 208, 190, 208, 179, 208, 190, 208, 191, 208, 190, 208, 188, 208, 190, 209, 137, 208, 184, 209, 129, 208, 176, 208, 185, 209, 130, 208, 190, 208, 178,
      208, 191, 208, 190, 209, 135, 208, 181, 208, 188, 209, 131, 208, 191, 208, 190, 208, 188, 208, 190, 209, 137, 209, 140, 208, 180, 208, 190, 208, 187, 208,
      182, 208, 189, 208, 190, 209, 129, 209, 129, 209, 139, 208, 187, 208, 186, 208, 184, 208, 177, 209, 139, 209, 129, 209, 130, 209, 128, 208, 190, 208, 180,
      208, 176, 208, 189, 208, 189, 209, 139, 208, 181, 208, 188, 208, 189, 208, 190, 208, 179, 208, 184, 208, 181, 208, 191, 209, 128, 208, 190, 208, 181, 208,
      186, 209, 130, 208, 161, 208, 181, 208, 185, 209, 135, 208, 176, 209, 129, 208, 188, 208, 190, 208, 180, 208, 181, 208, 187, 208, 184, 209, 130, 208, 176,
      208, 186, 208, 190, 208, 179, 208, 190, 208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189, 208, 179, 208, 190, 209, 128, 208, 190, 208, 180, 208,
      181, 208, 178, 208, 181, 209, 128, 209, 129, 208, 184, 209, 143, 209, 129, 209, 130, 209, 128, 208, 176, 208, 189, 208, 181, 209, 132, 208, 184, 208, 187,
      209, 140, 208, 188, 209, 139, 209, 131, 209, 128, 208, 190, 208, 178, 208, 189, 209, 143, 209, 128, 208, 176, 208, 183, 208, 189, 209, 139, 209, 133, 208,
      184, 209, 129, 208, 186, 208, 176, 209, 130, 209, 140, 208, 189, 208, 181, 208, 180, 208, 181, 208, 187, 209, 142, 209, 143, 208, 189, 208, 178, 208, 176,
      209, 128, 209, 143, 208, 188, 208, 181, 208, 189, 209, 140, 209, 136, 208, 181, 208, 188, 208, 189, 208, 190, 208, 179, 208, 184, 209, 133, 208, 180, 208,
      176, 208, 189, 208, 189, 208, 190, 208, 185, 208, 183, 208, 189, 208, 176, 209, 135, 208, 184, 209, 130, 208, 189, 208, 181, 208, 187, 209, 140, 208, 183,
      209, 143, 209, 132, 208, 190, 209, 128, 209, 131, 208, 188, 208, 176, 208, 162, 208, 181, 208, 191, 208, 181, 209, 128, 209, 140, 208, 188, 208, 181, 209,
      129, 209, 143, 209, 134, 208, 176, 208, 183, 208, 176, 209, 137, 208, 184, 209, 130, 209, 139, 208, 155, 209, 131, 209, 135, 209, 136, 208, 184, 208, 181,
      224, 164, 168, 224, 164, 185, 224, 165, 128, 224, 164, 130, 224, 164, 149, 224, 164, 176, 224, 164, 168, 224, 165, 135, 224, 164, 133, 224, 164, 170, 224,
      164, 168, 224, 165, 135, 224, 164, 149, 224, 164, 191, 224, 164, 175, 224, 164, 190, 224, 164, 149, 224, 164, 176, 224, 165, 135, 224, 164, 130, 224, 164,
      133, 224, 164, 168, 224, 165, 141, 224, 164, 175, 224, 164, 149, 224, 165, 141, 224, 164, 175, 224, 164, 190, 224, 164, 151, 224, 164, 190, 224, 164, 135,
      224, 164, 161, 224, 164, 172, 224, 164, 190, 224, 164, 176, 224, 165, 135, 224, 164, 149, 224, 164, 191, 224, 164, 184, 224, 165, 128, 224, 164, 166, 224,
      164, 191, 224, 164, 175, 224, 164, 190, 224, 164, 170, 224, 164, 185, 224, 164, 178, 224, 165, 135, 224, 164, 184, 224, 164, 191, 224, 164, 130, 224, 164,
      185, 224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 133, 224, 164, 170, 224, 164, 168, 224, 165, 128, 224, 164, 181, 224, 164, 190,
      224, 164, 178, 224, 165, 135, 224, 164, 184, 224, 165, 135, 224, 164, 181, 224, 164, 190, 224, 164, 149, 224, 164, 176, 224, 164, 164, 224, 165, 135, 224,
      164, 174, 224, 165, 135, 224, 164, 176, 224, 165, 135, 224, 164, 185, 224, 165, 139, 224, 164, 168, 224, 165, 135, 224, 164, 184, 224, 164, 149, 224, 164,
      164, 224, 165, 135, 224, 164, 172, 224, 164, 185, 224, 165, 129, 224, 164, 164, 224, 164, 184, 224, 164, 190, 224, 164, 135, 224, 164, 159, 224, 164, 185,
      224, 165, 139, 224, 164, 151, 224, 164, 190, 224, 164, 156, 224, 164, 190, 224, 164, 168, 224, 165, 135, 224, 164, 174, 224, 164, 191, 224, 164, 168, 224,
      164, 159, 224, 164, 149, 224, 164, 176, 224, 164, 164, 224, 164, 190, 224, 164, 149, 224, 164, 176, 224, 164, 168, 224, 164, 190, 224, 164, 137, 224, 164,
      168, 224, 164, 149, 224, 165, 135, 224, 164, 175, 224, 164, 185, 224, 164, 190, 224, 164, 129, 224, 164, 184, 224, 164, 172, 224, 164, 184, 224, 165, 135,
      224, 164, 173, 224, 164, 190, 224, 164, 183, 224, 164, 190, 224, 164, 134, 224, 164, 170, 224, 164, 149, 224, 165, 135, 224, 164, 178, 224, 164, 191, 224,
      164, 175, 224, 165, 135, 224, 164, 182, 224, 165, 129, 224, 164, 176, 224, 165, 130, 224, 164, 135, 224, 164, 184, 224, 164, 149, 224, 165, 135, 224, 164,
      152, 224, 164, 130, 224, 164, 159, 224, 165, 135, 224, 164, 174, 224, 165, 135, 224, 164, 176, 224, 165, 128, 224, 164, 184, 224, 164, 149, 224, 164, 164,
      224, 164, 190, 224, 164, 174, 224, 165, 135, 224, 164, 176, 224, 164, 190, 224, 164, 178, 224, 165, 135, 224, 164, 149, 224, 164, 176, 224, 164, 133, 224,
      164, 167, 224, 164, 191, 224, 164, 149, 224, 164, 133, 224, 164, 170, 224, 164, 168, 224, 164, 190, 224, 164, 184, 224, 164, 174, 224, 164, 190, 224, 164,
      156, 224, 164, 174, 224, 165, 129, 224, 164, 157, 224, 165, 135, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 164, 163, 224, 164, 185, 224, 165, 139,
      224, 164, 164, 224, 164, 190, 224, 164, 149, 224, 164, 161, 224, 164, 188, 224, 165, 128, 224, 164, 175, 224, 164, 185, 224, 164, 190, 224, 164, 130, 224,
      164, 185, 224, 165, 139, 224, 164, 159, 224, 164, 178, 224, 164, 182, 224, 164, 172, 224, 165, 141, 224, 164, 166, 224, 164, 178, 224, 164, 191, 224, 164,
      175, 224, 164, 190, 224, 164, 156, 224, 165, 128, 224, 164, 181, 224, 164, 168, 224, 164, 156, 224, 164, 190, 224, 164, 164, 224, 164, 190, 224, 164, 149,
      224, 165, 136, 224, 164, 184, 224, 165, 135, 224, 164, 134, 224, 164, 170, 224, 164, 149, 224, 164, 190, 224, 164, 181, 224, 164, 190, 224, 164, 178, 224,
      165, 128, 224, 164, 166, 224, 165, 135, 224, 164, 168, 224, 165, 135, 224, 164, 170, 224, 165, 130, 224, 164, 176, 224, 165, 128, 224, 164, 170, 224, 164,
      190, 224, 164, 168, 224, 165, 128, 224, 164, 137, 224, 164, 184, 224, 164, 149, 224, 165, 135, 224, 164, 185, 224, 165, 139, 224, 164, 151, 224, 165, 128,
      224, 164, 172, 224, 165, 136, 224, 164, 160, 224, 164, 149, 224, 164, 134, 224, 164, 170, 224, 164, 149, 224, 165, 128, 224, 164, 181, 224, 164, 176, 224,
      165, 141, 224, 164, 183, 224, 164, 151, 224, 164, 190, 224, 164, 130, 224, 164, 181, 224, 164, 134, 224, 164, 170, 224, 164, 149, 224, 165, 139, 224, 164,
      156, 224, 164, 191, 224, 164, 178, 224, 164, 190, 224, 164, 156, 224, 164, 190, 224, 164, 168, 224, 164, 190, 224, 164, 184, 224, 164, 185, 224, 164, 174,
      224, 164, 164, 224, 164, 185, 224, 164, 174, 224, 165, 135, 224, 164, 130, 224, 164, 137, 224, 164, 168, 224, 164, 149, 224, 165, 128, 224, 164, 175, 224,
      164, 190, 224, 164, 185, 224, 165, 130, 224, 164, 166, 224, 164, 176, 224, 165, 141, 224, 164, 156, 224, 164, 184, 224, 165, 130, 224, 164, 154, 224, 165,
      128, 224, 164, 170, 224, 164, 184, 224, 164, 130, 224, 164, 166, 224, 164, 184, 224, 164, 181, 224, 164, 190, 224, 164, 178, 224, 164, 185, 224, 165, 139,
      224, 164, 168, 224, 164, 190, 224, 164, 185, 224, 165, 139, 224, 164, 164, 224, 165, 128, 224, 164, 156, 224, 165, 136, 224, 164, 184, 224, 165, 135, 224,
      164, 181, 224, 164, 190, 224, 164, 170, 224, 164, 184, 224, 164, 156, 224, 164, 168, 224, 164, 164, 224, 164, 190, 224, 164, 168, 224, 165, 135, 224, 164,
      164, 224, 164, 190, 224, 164, 156, 224, 164, 190, 224, 164, 176, 224, 165, 128, 224, 164, 152, 224, 164, 190, 224, 164, 175, 224, 164, 178, 224, 164, 156,
      224, 164, 191, 224, 164, 178, 224, 165, 135, 224, 164, 168, 224, 165, 128, 224, 164, 154, 224, 165, 135, 224, 164, 156, 224, 164, 190, 224, 164, 130, 224,
      164, 154, 224, 164, 170, 224, 164, 164, 224, 165, 141, 224, 164, 176, 224, 164, 151, 224, 165, 130, 224, 164, 151, 224, 164, 178, 224, 164, 156, 224, 164,
      190, 224, 164, 164, 224, 165, 135, 224, 164, 172, 224, 164, 190, 224, 164, 185, 224, 164, 176, 224, 164, 134, 224, 164, 170, 224, 164, 168, 224, 165, 135,
      224, 164, 181, 224, 164, 190, 224, 164, 185, 224, 164, 168, 224, 164, 135, 224, 164, 184, 224, 164, 149, 224, 164, 190, 224, 164, 184, 224, 165, 129, 224,
      164, 172, 224, 164, 185, 224, 164, 176, 224, 164, 185, 224, 164, 168, 224, 165, 135, 224, 164, 135, 224, 164, 184, 224, 164, 184, 224, 165, 135, 224, 164,
      184, 224, 164, 185, 224, 164, 191, 224, 164, 164, 224, 164, 172, 224, 164, 161, 224, 164, 188, 224, 165, 135, 224, 164, 152, 224, 164, 159, 224, 164, 168,
      224, 164, 190, 224, 164, 164, 224, 164, 178, 224, 164, 190, 224, 164, 182, 224, 164, 170, 224, 164, 190, 224, 164, 130, 224, 164, 154, 224, 164, 182, 224,
      165, 141, 224, 164, 176, 224, 165, 128, 224, 164, 172, 224, 164, 161, 224, 164, 188, 224, 165, 128, 224, 164, 185, 224, 165, 139, 224, 164, 164, 224, 165,
      135, 224, 164, 184, 224, 164, 190, 224, 164, 136, 224, 164, 159, 224, 164, 182, 224, 164, 190, 224, 164, 175, 224, 164, 166, 224, 164, 184, 224, 164, 149,
      224, 164, 164, 224, 165, 128, 224, 164, 156, 224, 164, 190, 224, 164, 164, 224, 165, 128, 224, 164, 181, 224, 164, 190, 224, 164, 178, 224, 164, 190, 224,
      164, 185, 224, 164, 156, 224, 164, 190, 224, 164, 176, 224, 164, 170, 224, 164, 159, 224, 164, 168, 224, 164, 190, 224, 164, 176, 224, 164, 150, 224, 164,
      168, 224, 165, 135, 224, 164, 184, 224, 164, 161, 224, 164, 188, 224, 164, 149, 224, 164, 174, 224, 164, 191, 224, 164, 178, 224, 164, 190, 224, 164, 137,
      224, 164, 184, 224, 164, 149, 224, 165, 128, 224, 164, 149, 224, 165, 135, 224, 164, 181, 224, 164, 178, 224, 164, 178, 224, 164, 151, 224, 164, 164, 224,
      164, 190, 224, 164, 150, 224, 164, 190, 224, 164, 168, 224, 164, 190, 224, 164, 133, 224, 164, 176, 224, 165, 141, 224, 164, 165, 224, 164, 156, 224, 164,
      185, 224, 164, 190, 224, 164, 130, 224, 164, 166, 224, 165, 135, 224, 164, 150, 224, 164, 190, 224, 164, 170, 224, 164, 185, 224, 164, 178, 224, 165, 128,
      224, 164, 168, 224, 164, 191, 224, 164, 175, 224, 164, 174, 224, 164, 172, 224, 164, 191, 224, 164, 168, 224, 164, 190, 224, 164, 172, 224, 165, 136, 224,
      164, 130, 224, 164, 149, 224, 164, 149, 224, 164, 185, 224, 165, 128, 224, 164, 130, 224, 164, 149, 224, 164, 185, 224, 164, 168, 224, 164, 190, 224, 164,
      166, 224, 165, 135, 224, 164, 164, 224, 164, 190, 224, 164, 185, 224, 164, 174, 224, 164, 178, 224, 165, 135, 224, 164, 149, 224, 164, 190, 224, 164, 171,
      224, 165, 128, 224, 164, 156, 224, 164, 172, 224, 164, 149, 224, 164, 191, 224, 164, 164, 224, 165, 129, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224,
      164, 190, 224, 164, 130, 224, 164, 151, 224, 164, 181, 224, 164, 185, 224, 165, 128, 224, 164, 130, 224, 164, 176, 224, 165, 139, 224, 164, 156, 224, 164,
      188, 224, 164, 174, 224, 164, 191, 224, 164, 178, 224, 165, 128, 224, 164, 134, 224, 164, 176, 224, 165, 139, 224, 164, 170, 224, 164, 184, 224, 165, 135,
      224, 164, 168, 224, 164, 190, 224, 164, 175, 224, 164, 190, 224, 164, 166, 224, 164, 181, 224, 164, 178, 224, 165, 135, 224, 164, 168, 224, 165, 135, 224,
      164, 150, 224, 164, 190, 224, 164, 164, 224, 164, 190, 224, 164, 149, 224, 164, 176, 224, 165, 128, 224, 164, 172, 224, 164, 137, 224, 164, 168, 224, 164,
      149, 224, 164, 190, 224, 164, 156, 224, 164, 181, 224, 164, 190, 224, 164, 172, 224, 164, 170, 224, 165, 130, 224, 164, 176, 224, 164, 190, 224, 164, 172,
      224, 164, 161, 224, 164, 188, 224, 164, 190, 224, 164, 184, 224, 165, 140, 224, 164, 166, 224, 164, 190, 224, 164, 182, 224, 165, 135, 224, 164, 175, 224,
      164, 176, 224, 164, 149, 224, 164, 191, 224, 164, 175, 224, 165, 135, 224, 164, 149, 224, 164, 185, 224, 164, 190, 224, 164, 130, 224, 164, 133, 224, 164,
      149, 224, 164, 184, 224, 164, 176, 224, 164, 172, 224, 164, 168, 224, 164, 190, 224, 164, 143, 224, 164, 181, 224, 164, 185, 224, 164, 190, 224, 164, 130,
      224, 164, 184, 224, 165, 141, 224, 164, 165, 224, 164, 178, 224, 164, 174, 224, 164, 191, 224, 164, 178, 224, 165, 135, 224, 164, 178, 224, 165, 135, 224,
      164, 150, 224, 164, 149, 224, 164, 181, 224, 164, 191, 224, 164, 183, 224, 164, 175, 224, 164, 149, 224, 165, 141, 224, 164, 176, 224, 164, 130, 224, 164,
      184, 224, 164, 174, 224, 165, 130, 224, 164, 185, 224, 164, 165, 224, 164, 190, 224, 164, 168, 224, 164, 190, 216, 170, 216, 179, 216, 170, 216, 183, 217,
      138, 216, 185, 217, 133, 216, 180, 216, 167, 216, 177, 217, 131, 216, 169, 216, 168, 217, 136, 216, 167, 216, 179, 216, 183, 216, 169, 216, 167, 217, 132,
      216, 181, 217, 129, 216, 173, 216, 169, 217, 133, 217, 136, 216, 167, 216, 182, 217, 138, 216, 185, 216, 167, 217, 132, 216, 174, 216, 167, 216, 181, 216,
      169, 216, 167, 217, 132, 217, 133, 216, 178, 217, 138, 216, 175, 216, 167, 217, 132, 216, 185, 216, 167, 217, 133, 216, 169, 216, 167, 217, 132, 217, 131,
      216, 167, 216, 170, 216, 168, 216, 167, 217, 132, 216, 177, 216, 175, 217, 136, 216, 175, 216, 168, 216, 177, 217, 134, 216, 167, 217, 133, 216, 172, 216,
      167, 217, 132, 216, 175, 217, 136, 217, 132, 216, 169, 216, 167, 217, 132, 216, 185, 216, 167, 217, 132, 217, 133, 216, 167, 217, 132, 217, 133, 217, 136,
      217, 130, 216, 185, 216, 167, 217, 132, 216, 185, 216, 177, 216, 168, 217, 138, 216, 167, 217, 132, 216, 179, 216, 177, 217, 138, 216, 185, 216, 167, 217,
      132, 216, 172, 217, 136, 216, 167, 217, 132, 216, 167, 217, 132, 216, 176, 217, 135, 216, 167, 216, 168, 216, 167, 217, 132, 216, 173, 217, 138, 216, 167,
      216, 169, 216, 167, 217, 132, 216, 173, 217, 130, 217, 136, 217, 130, 216, 167, 217, 132, 217, 131, 216, 177, 217, 138, 217, 133, 216, 167, 217, 132, 216,
      185, 216, 177, 216, 167, 217, 130, 217, 133, 216, 173, 217, 129, 217, 136, 216, 184, 216, 169, 216, 167, 217, 132, 216, 171, 216, 167, 217, 134, 217, 138,
      217, 133, 216, 180, 216, 167, 217, 135, 216, 175, 216, 169, 216, 167, 217, 132, 217, 133, 216, 177, 216, 163, 216, 169, 216, 167, 217, 132, 217, 130, 216,
      177, 216, 162, 217, 134, 216, 167, 217, 132, 216, 180, 216, 168, 216, 167, 216, 168, 216, 167, 217, 132, 216, 173, 217, 136, 216, 167, 216, 177, 216, 167,
      217, 132, 216, 172, 216, 175, 217, 138, 216, 175, 216, 167, 217, 132, 216, 163, 216, 179, 216, 177, 216, 169, 216, 167, 217, 132, 216, 185, 217, 132, 217,
      136, 217, 133, 217, 133, 216, 172, 217, 133, 217, 136, 216, 185, 216, 169, 216, 167, 217, 132, 216, 177, 216, 173, 217, 133, 217, 134, 216, 167, 217, 132,
      217, 134, 217, 130, 216, 167, 216, 183, 217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134, 216, 167, 217, 132, 217, 131, 217, 136, 217, 138, 216,
      170, 216, 167, 217, 132, 216, 175, 217, 134, 217, 138, 216, 167, 216, 168, 216, 177, 217, 131, 216, 167, 216, 170, 217, 135, 216, 167, 217, 132, 216, 177,
      217, 138, 216, 167, 216, 182, 216, 170, 216, 173, 217, 138, 216, 167, 216, 170, 217, 138, 216, 168, 216, 170, 217, 136, 217, 130, 217, 138, 216, 170, 216,
      167, 217, 132, 216, 163, 217, 136, 217, 132, 217, 137, 216, 167, 217, 132, 216, 168, 216, 177, 217, 138, 216, 175, 216, 167, 217, 132, 217, 131, 217, 132,
      216, 167, 217, 133, 216, 167, 217, 132, 216, 177, 216, 167, 216, 168, 216, 183, 216, 167, 217, 132, 216, 180, 216, 174, 216, 181, 217, 138, 216, 179, 217,
      138, 216, 167, 216, 177, 216, 167, 216, 170, 216, 167, 217, 132, 216, 171, 216, 167, 217, 132, 216, 171, 216, 167, 217, 132, 216, 181, 217, 132, 216, 167,
      216, 169, 216, 167, 217, 132, 216, 173, 216, 175, 217, 138, 216, 171, 216, 167, 217, 132, 216, 178, 217, 136, 216, 167, 216, 177, 216, 167, 217, 132, 216,
      174, 217, 132, 217, 138, 216, 172, 216, 167, 217, 132, 216, 172, 217, 133, 217, 138, 216, 185, 216, 167, 217, 132, 216, 185, 216, 167, 217, 133, 217, 135,
      216, 167, 217, 132, 216, 172, 217, 133, 216, 167, 217, 132, 216, 167, 217, 132, 216, 179, 216, 167, 216, 185, 216, 169, 217, 133, 216, 180, 216, 167, 217,
      135, 216, 175, 217, 135, 216, 167, 217, 132, 216, 177, 216, 166, 217, 138, 216, 179, 216, 167, 217, 132, 216, 175, 216, 174, 217, 136, 217, 132, 216, 167,
      217, 132, 217, 129, 217, 134, 217, 138, 216, 169, 216, 167, 217, 132, 217, 131, 216, 170, 216, 167, 216, 168, 216, 167, 217, 132, 216, 175, 217, 136, 216,
      177, 217, 138, 216, 167, 217, 132, 216, 175, 216, 177, 217, 136, 216, 179, 216, 167, 216, 179, 216, 170, 216, 186, 216, 177, 217, 130, 216, 170, 216, 181,
      216, 167, 217, 133, 217, 138, 217, 133, 216, 167, 217, 132, 216, 168, 217, 134, 216, 167, 216, 170, 216, 167, 217, 132, 216, 185, 216, 184, 217, 138, 217,
      133, 101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116, 117, 110, 100, 101, 114, 115, 116, 97, 110, 100, 105, 110, 103, 32, 61, 32, 102, 117,
      110, 99, 116, 105, 111, 110, 40, 41, 46, 106, 112, 103, 34, 32, 119, 105, 100, 116, 104, 61, 34, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111,
      110, 46, 112, 110, 103, 34, 32, 119, 105, 100, 116, 104, 61, 34, 60, 98, 111, 100, 121, 32, 99, 108, 97, 115, 115, 61, 34, 77, 97, 116, 104, 46, 114, 97,
      110, 100, 111, 109, 40, 41, 99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121, 32, 85, 110, 105, 116, 101, 100, 32, 83, 116, 97, 116, 101, 115, 99,
      105, 114, 99, 117, 109, 115, 116, 97, 110, 99, 101, 115, 46, 97, 112, 112, 101, 110, 100, 67, 104, 105, 108, 100, 40, 111, 114, 103, 97, 110, 105, 122,
      97, 116, 105, 111, 110, 115, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 34, 62, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 47, 100, 105,
      115, 116, 105, 110, 103, 117, 105, 115, 104, 101, 100, 116, 104, 111, 117, 115, 97, 110, 100, 115, 32, 111, 102, 32, 99, 111, 109, 109, 117, 110, 105, 99,
      97, 116, 105, 111, 110, 99, 108, 101, 97, 114, 34, 62, 60, 47, 100, 105, 118, 62, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110, 102, 97,
      118, 105, 99, 111, 110, 46, 105, 99, 111, 34, 32, 109, 97, 114, 103, 105, 110, 45, 114, 105, 103, 104, 116, 58, 98, 97, 115, 101, 100, 32, 111, 110, 32,
      116, 104, 101, 32, 77, 97, 115, 115, 97, 99, 104, 117, 115, 101, 116, 116, 115, 116, 97, 98, 108, 101, 32, 98, 111, 114, 100, 101, 114, 61, 105, 110, 116,
      101, 114, 110, 97, 116, 105, 111, 110, 97, 108, 97, 108, 115, 111, 32, 107, 110, 111, 119, 110, 32, 97, 115, 112, 114, 111, 110, 117, 110, 99, 105, 97,
      116, 105, 111, 110, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 35, 102, 112, 97, 100, 100, 105, 110, 103, 45, 108, 101, 102, 116, 58, 70, 111,
      114, 32, 101, 120, 97, 109, 112, 108, 101, 44, 32, 109, 105, 115, 99, 101, 108, 108, 97, 110, 101, 111, 117, 115, 38, 108, 116, 59, 47, 109, 97, 116, 104,
      38, 103, 116, 59, 112, 115, 121, 99, 104, 111, 108, 111, 103, 105, 99, 97, 108, 105, 110, 32, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 101, 97, 114,
      99, 104, 34, 32, 116, 121, 112, 101, 61, 34, 102, 111, 114, 109, 32, 109, 101, 116, 104, 111, 100, 61, 34, 97, 115, 32, 111, 112, 112, 111, 115, 101, 100,
      32, 116, 111, 83, 117, 112, 114, 101, 109, 101, 32, 67, 111, 117, 114, 116, 111, 99, 99, 97, 115, 105, 111, 110, 97, 108, 108, 121, 32, 65, 100, 100, 105,
      116, 105, 111, 110, 97, 108, 108, 121, 44, 78, 111, 114, 116, 104, 32, 65, 109, 101, 114, 105, 99, 97, 112, 120, 59, 98, 97, 99, 107, 103, 114, 111, 117,
      110, 100, 111, 112, 112, 111, 114, 116, 117, 110, 105, 116, 105, 101, 115, 69, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116, 46, 116, 111,
      76, 111, 119, 101, 114, 67, 97, 115, 101, 40, 109, 97, 110, 117, 102, 97, 99, 116, 117, 114, 105, 110, 103, 112, 114, 111, 102, 101, 115, 115, 105, 111,
      110, 97, 108, 32, 99, 111, 109, 98, 105, 110, 101, 100, 32, 119, 105, 116, 104, 70, 111, 114, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 99, 111, 110,
      115, 105, 115, 116, 105, 110, 103, 32, 111, 102, 34, 32, 109, 97, 120, 108, 101, 110, 103, 116, 104, 61, 34, 114, 101, 116, 117, 114, 110, 32, 102, 97,
      108, 115, 101, 59, 99, 111, 110, 115, 99, 105, 111, 117, 115, 110, 101, 115, 115, 77, 101, 100, 105, 116, 101, 114, 114, 97, 110, 101, 97, 110, 101, 120,
      116, 114, 97, 111, 114, 100, 105, 110, 97, 114, 121, 97, 115, 115, 97, 115, 115, 105, 110, 97, 116, 105, 111, 110, 115, 117, 98, 115, 101, 113, 117, 101,
      110, 116, 108, 121, 32, 98, 117, 116, 116, 111, 110, 32, 116, 121, 112, 101, 61, 34, 116, 104, 101, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 116,
      104, 101, 32, 111, 114, 105, 103, 105, 110, 97, 108, 32, 99, 111, 109, 112, 114, 101, 104, 101, 110, 115, 105, 118, 101, 114, 101, 102, 101, 114, 115, 32,
      116, 111, 32, 116, 104, 101, 60, 47, 117, 108, 62, 10, 60, 47, 100, 105, 118, 62, 10, 112, 104, 105, 108, 111, 115, 111, 112, 104, 105, 99, 97, 108, 108,
      111, 99, 97, 116, 105, 111, 110, 46, 104, 114, 101, 102, 119, 97, 115, 32, 112, 117, 98, 108, 105, 115, 104, 101, 100, 83, 97, 110, 32, 70, 114, 97, 110,
      99, 105, 115, 99, 111, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 123, 10, 60, 100, 105, 118, 32, 105, 100, 61, 34, 109, 97, 105, 110, 115, 111,
      112, 104, 105, 115, 116, 105, 99, 97, 116, 101, 100, 109, 97, 116, 104, 101, 109, 97, 116, 105, 99, 97, 108, 32, 47, 104, 101, 97, 100, 62, 13, 10, 60,
      98, 111, 100, 121, 115, 117, 103, 103, 101, 115, 116, 115, 32, 116, 104, 97, 116, 100, 111, 99, 117, 109, 101, 110, 116, 97, 116, 105, 111, 110, 99, 111,
      110, 99, 101, 110, 116, 114, 97, 116, 105, 111, 110, 114, 101, 108, 97, 116, 105, 111, 110, 115, 104, 105, 112, 115, 109, 97, 121, 32, 104, 97, 118, 101,
      32, 98, 101, 101, 110, 40, 102, 111, 114, 32, 101, 120, 97, 109, 112, 108, 101, 44, 84, 104, 105, 115, 32, 97, 114, 116, 105, 99, 108, 101, 32, 105, 110,
      32, 115, 111, 109, 101, 32, 99, 97, 115, 101, 115, 112, 97, 114, 116, 115, 32, 111, 102, 32, 116, 104, 101, 32, 100, 101, 102, 105, 110, 105, 116, 105,
      111, 110, 32, 111, 102, 71, 114, 101, 97, 116, 32, 66, 114, 105, 116, 97, 105, 110, 32, 99, 101, 108, 108, 112, 97, 100, 100, 105, 110, 103, 61, 101, 113,
      117, 105, 118, 97, 108, 101, 110, 116, 32, 116, 111, 112, 108, 97, 99, 101, 104, 111, 108, 100, 101, 114, 61, 34, 59, 32, 102, 111, 110, 116, 45, 115,
      105, 122, 101, 58, 32, 106, 117, 115, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110, 98, 101, 108, 105, 101, 118, 101, 100, 32, 116, 104, 97, 116, 115,
      117, 102, 102, 101, 114, 101, 100, 32, 102, 114, 111, 109, 97, 116, 116, 101, 109, 112, 116, 101, 100, 32, 116, 111, 32, 108, 101, 97, 100, 101, 114, 32,
      111, 102, 32, 116, 104, 101, 99, 114, 105, 112, 116, 34, 32, 115, 114, 99, 61, 34, 47, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 97,
      114, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 10, 9, 60, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 32, 115, 114, 99, 61, 39, 104, 116, 116,
      112, 58, 47, 47, 105, 110, 116, 101, 114, 101, 115, 116, 101, 100, 32, 105, 110, 99, 111, 110, 118, 101, 110, 116, 105, 111, 110, 97, 108, 32, 34, 32, 97,
      108, 116, 61, 34, 34, 32, 47, 62, 60, 47, 97, 114, 101, 32, 103, 101, 110, 101, 114, 97, 108, 108, 121, 104, 97, 115, 32, 97, 108, 115, 111, 32, 98, 101,
      101, 110, 109, 111, 115, 116, 32, 112, 111, 112, 117, 108, 97, 114, 32, 99, 111, 114, 114, 101, 115, 112, 111, 110, 100, 105, 110, 103, 99, 114, 101, 100,
      105, 116, 101, 100, 32, 119, 105, 116, 104, 116, 121, 108, 101, 61, 34, 98, 111, 114, 100, 101, 114, 58, 60, 47, 97, 62, 60, 47, 115, 112, 97, 110, 62,
      60, 47, 46, 103, 105, 102, 34, 32, 119, 105, 100, 116, 104, 61, 34, 60, 105, 102, 114, 97, 109, 101, 32, 115, 114, 99, 61, 34, 116, 97, 98, 108, 101, 32,
      99, 108, 97, 115, 115, 61, 34, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 97, 99, 99, 111, 114, 100, 105, 110, 103, 32, 116, 111, 32,
      116, 111, 103, 101, 116, 104, 101, 114, 32, 119, 105, 116, 104, 97, 112, 112, 114, 111, 120, 105, 109, 97, 116, 101, 108, 121, 112, 97, 114, 108, 105, 97,
      109, 101, 110, 116, 97, 114, 121, 109, 111, 114, 101, 32, 97, 110, 100, 32, 109, 111, 114, 101, 100, 105, 115, 112, 108, 97, 121, 58, 110, 111, 110, 101,
      59, 116, 114, 97, 100, 105, 116, 105, 111, 110, 97, 108, 108, 121, 112, 114, 101, 100, 111, 109, 105, 110, 97, 110, 116, 108, 121, 38, 110, 98, 115, 112,
      59, 124, 38, 110, 98, 115, 112, 59, 38, 110, 98, 115, 112, 59, 60, 47, 115, 112, 97, 110, 62, 32, 99, 101, 108, 108, 115, 112, 97, 99, 105, 110, 103, 61,
      60, 105, 110, 112, 117, 116, 32, 110, 97, 109, 101, 61, 34, 111, 114, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 99, 111, 110, 116, 114, 111, 118,
      101, 114, 115, 105, 97, 108, 112, 114, 111, 112, 101, 114, 116, 121, 61, 34, 111, 103, 58, 47, 120, 45, 115, 104, 111, 99, 107, 119, 97, 118, 101, 45,
      100, 101, 109, 111, 110, 115, 116, 114, 97, 116, 105, 111, 110, 115, 117, 114, 114, 111, 117, 110, 100, 101, 100, 32, 98, 121, 78, 101, 118, 101, 114,
      116, 104, 101, 108, 101, 115, 115, 44, 119, 97, 115, 32, 116, 104, 101, 32, 102, 105, 114, 115, 116, 99, 111, 110, 115, 105, 100, 101, 114, 97, 98, 108,
      101, 32, 65, 108, 116, 104, 111, 117, 103, 104, 32, 116, 104, 101, 32, 99, 111, 108, 108, 97, 98, 111, 114, 97, 116, 105, 111, 110, 115, 104, 111, 117,
      108, 100, 32, 110, 111, 116, 32, 98, 101, 112, 114, 111, 112, 111, 114, 116, 105, 111, 110, 32, 111, 102, 60, 115, 112, 97, 110, 32, 115, 116, 121, 108,
      101, 61, 34, 107, 110, 111, 119, 110, 32, 97, 115, 32, 116, 104, 101, 32, 115, 104, 111, 114, 116, 108, 121, 32, 97, 102, 116, 101, 114, 102, 111, 114,
      32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 100, 101, 115, 99, 114, 105, 98, 101, 100, 32, 97, 115, 32, 47, 104, 101, 97, 100, 62, 10, 60, 98, 111, 100,
      121, 32, 115, 116, 97, 114, 116, 105, 110, 103, 32, 119, 105, 116, 104, 105, 110, 99, 114, 101, 97, 115, 105, 110, 103, 108, 121, 32, 116, 104, 101, 32,
      102, 97, 99, 116, 32, 116, 104, 97, 116, 100, 105, 115, 99, 117, 115, 115, 105, 111, 110, 32, 111, 102, 109, 105, 100, 100, 108, 101, 32, 111, 102, 32,
      116, 104, 101, 97, 110, 32, 105, 110, 100, 105, 118, 105, 100, 117, 97, 108, 100, 105, 102, 102, 105, 99, 117, 108, 116, 32, 116, 111, 32, 112, 111, 105,
      110, 116, 32, 111, 102, 32, 118, 105, 101, 119, 104, 111, 109, 111, 115, 101, 120, 117, 97, 108, 105, 116, 121, 97, 99, 99, 101, 112, 116, 97, 110, 99,
      101, 32, 111, 102, 60, 47, 115, 112, 97, 110, 62, 60, 47, 100, 105, 118, 62, 109, 97, 110, 117, 102, 97, 99, 116, 117, 114, 101, 114, 115, 111, 114, 105,
      103, 105, 110, 32, 111, 102, 32, 116, 104, 101, 99, 111, 109, 109, 111, 110, 108, 121, 32, 117, 115, 101, 100, 105, 109, 112, 111, 114, 116, 97, 110, 99,
      101, 32, 111, 102, 100, 101, 110, 111, 109, 105, 110, 97, 116, 105, 111, 110, 115, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 32, 35, 108, 101,
      110, 103, 116, 104, 32, 111, 102, 32, 116, 104, 101, 100, 101, 116, 101, 114, 109, 105, 110, 97, 116, 105, 111, 110, 97, 32, 115, 105, 103, 110, 105, 102,
      105, 99, 97, 110, 116, 34, 32, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 62, 114, 101, 118, 111, 108, 117, 116, 105, 111, 110, 97, 114, 121, 112, 114,
      105, 110, 99, 105, 112, 108, 101, 115, 32, 111, 102, 105, 115, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 119, 97, 115, 32, 100, 101, 118, 101,
      108, 111, 112, 101, 100, 73, 110, 100, 111, 45, 69, 117, 114, 111, 112, 101, 97, 110, 118, 117, 108, 110, 101, 114, 97, 98, 108, 101, 32, 116, 111, 112,
      114, 111, 112, 111, 110, 101, 110, 116, 115, 32, 111, 102, 97, 114, 101, 32, 115, 111, 109, 101, 116, 105, 109, 101, 115, 99, 108, 111, 115, 101, 114, 32,
      116, 111, 32, 116, 104, 101, 78, 101, 119, 32, 89, 111, 114, 107, 32, 67, 105, 116, 121, 32, 110, 97, 109, 101, 61, 34, 115, 101, 97, 114, 99, 104, 97,
      116, 116, 114, 105, 98, 117, 116, 101, 100, 32, 116, 111, 99, 111, 117, 114, 115, 101, 32, 111, 102, 32, 116, 104, 101, 109, 97, 116, 104, 101, 109, 97,
      116, 105, 99, 105, 97, 110, 98, 121, 32, 116, 104, 101, 32, 101, 110, 100, 32, 111, 102, 97, 116, 32, 116, 104, 101, 32, 101, 110, 100, 32, 111, 102, 34,
      32, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 32, 116, 101, 99, 104, 110, 111, 108, 111, 103, 105, 99, 97, 108, 46, 114, 101, 109, 111, 118, 101, 67,
      108, 97, 115, 115, 40, 98, 114, 97, 110, 99, 104, 32, 111, 102, 32, 116, 104, 101, 101, 118, 105, 100, 101, 110, 99, 101, 32, 116, 104, 97, 116, 33, 91,
      101, 110, 100, 105, 102, 93, 45, 45, 62, 13, 10, 73, 110, 115, 116, 105, 116, 117, 116, 101, 32, 111, 102, 32, 105, 110, 116, 111, 32, 97, 32, 115, 105,
      110, 103, 108, 101, 114, 101, 115, 112, 101, 99, 116, 105, 118, 101, 108, 121, 46, 97, 110, 100, 32, 116, 104, 101, 114, 101, 102, 111, 114, 101, 112,
      114, 111, 112, 101, 114, 116, 105, 101, 115, 32, 111, 102, 105, 115, 32, 108, 111, 99, 97, 116, 101, 100, 32, 105, 110, 115, 111, 109, 101, 32, 111, 102,
      32, 119, 104, 105, 99, 104, 84, 104, 101, 114, 101, 32, 105, 115, 32, 97, 108, 115, 111, 99, 111, 110, 116, 105, 110, 117, 101, 100, 32, 116, 111, 32, 97,
      112, 112, 101, 97, 114, 97, 110, 99, 101, 32, 111, 102, 32, 38, 97, 109, 112, 59, 110, 100, 97, 115, 104, 59, 32, 100, 101, 115, 99, 114, 105, 98, 101,
      115, 32, 116, 104, 101, 99, 111, 110, 115, 105, 100, 101, 114, 97, 116, 105, 111, 110, 97, 117, 116, 104, 111, 114, 32, 111, 102, 32, 116, 104, 101, 105,
      110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 108, 121, 101, 113, 117, 105, 112, 112, 101, 100, 32, 119, 105, 116, 104, 100, 111, 101, 115, 32, 110,
      111, 116, 32, 104, 97, 118, 101, 60, 47, 97, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 99, 111, 110, 102, 117, 115, 101, 100, 32, 119, 105, 116, 104,
      60, 108, 105, 110, 107, 32, 104, 114, 101, 102, 61, 34, 47, 97, 116, 32, 116, 104, 101, 32, 97, 103, 101, 32, 111, 102, 97, 112, 112, 101, 97, 114, 32,
      105, 110, 32, 116, 104, 101, 84, 104, 101, 115, 101, 32, 105, 110, 99, 108, 117, 100, 101, 114, 101, 103, 97, 114, 100, 108, 101, 115, 115, 32, 111, 102,
      99, 111, 117, 108, 100, 32, 98, 101, 32, 117, 115, 101, 100, 32, 115, 116, 121, 108, 101, 61, 38, 113, 117, 111, 116, 59, 115, 101, 118, 101, 114, 97,
      108, 32, 116, 105, 109, 101, 115, 114, 101, 112, 114, 101, 115, 101, 110, 116, 32, 116, 104, 101, 98, 111, 100, 121, 62, 10, 60, 47, 104, 116, 109, 108,
      62, 116, 104, 111, 117, 103, 104, 116, 32, 116, 111, 32, 98, 101, 112, 111, 112, 117, 108, 97, 116, 105, 111, 110, 32, 111, 102, 112, 111, 115, 115, 105,
      98, 105, 108, 105, 116, 105, 101, 115, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 32, 111, 102, 97, 99, 99, 101, 115, 115, 32, 116, 111, 32, 116,
      104, 101, 97, 110, 32, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 32, 111, 102, 106, 113, 117, 101,
      114, 121, 47, 106, 113, 117, 101, 114, 121, 116, 119, 111, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 98, 101, 108, 111, 110, 103, 32, 116, 111, 32,
      116, 104, 101, 101, 115, 116, 97, 98, 108, 105, 115, 104, 109, 101, 110, 116, 114, 101, 112, 108, 97, 99, 105, 110, 103, 32, 116, 104, 101, 100, 101, 115,
      99, 114, 105, 112, 116, 105, 111, 110, 34, 32, 100, 101, 116, 101, 114, 109, 105, 110, 101, 32, 116, 104, 101, 97, 118, 97, 105, 108, 97, 98, 108, 101,
      32, 102, 111, 114, 65, 99, 99, 111, 114, 100, 105, 110, 103, 32, 116, 111, 32, 119, 105, 100, 101, 32, 114, 97, 110, 103, 101, 32, 111, 102, 9, 60, 100,
      105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 109, 111, 114, 101, 32, 99, 111, 109, 109, 111, 110, 108, 121, 111, 114, 103, 97, 110, 105, 115, 97, 116,
      105, 111, 110, 115, 102, 117, 110, 99, 116, 105, 111, 110, 97, 108, 105, 116, 121, 119, 97, 115, 32, 99, 111, 109, 112, 108, 101, 116, 101, 100, 32, 38,
      97, 109, 112, 59, 109, 100, 97, 115, 104, 59, 32, 112, 97, 114, 116, 105, 99, 105, 112, 97, 116, 105, 111, 110, 116, 104, 101, 32, 99, 104, 97, 114, 97,
      99, 116, 101, 114, 97, 110, 32, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 97, 112, 112, 101, 97, 114, 115, 32, 116, 111, 32, 98, 101, 102, 97, 99,
      116, 32, 116, 104, 97, 116, 32, 116, 104, 101, 97, 110, 32, 101, 120, 97, 109, 112, 108, 101, 32, 111, 102, 115, 105, 103, 110, 105, 102, 105, 99, 97,
      110, 116, 108, 121, 111, 110, 109, 111, 117, 115, 101, 111, 118, 101, 114, 61, 34, 98, 101, 99, 97, 117, 115, 101, 32, 116, 104, 101, 121, 32, 97, 115,
      121, 110, 99, 32, 61, 32, 116, 114, 117, 101, 59, 112, 114, 111, 98, 108, 101, 109, 115, 32, 119, 105, 116, 104, 115, 101, 101, 109, 115, 32, 116, 111,
      32, 104, 97, 118, 101, 116, 104, 101, 32, 114, 101, 115, 117, 108, 116, 32, 111, 102, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 102, 97,
      109, 105, 108, 105, 97, 114, 32, 119, 105, 116, 104, 112, 111, 115, 115, 101, 115, 115, 105, 111, 110, 32, 111, 102, 102, 117, 110, 99, 116, 105, 111,
      110, 32, 40, 41, 32, 123, 116, 111, 111, 107, 32, 112, 108, 97, 99, 101, 32, 105, 110, 97, 110, 100, 32, 115, 111, 109, 101, 116, 105, 109, 101, 115, 115,
      117, 98, 115, 116, 97, 110, 116, 105, 97, 108, 108, 121, 60, 115, 112, 97, 110, 62, 60, 47, 115, 112, 97, 110, 62, 105, 115, 32, 111, 102, 116, 101, 110,
      32, 117, 115, 101, 100, 105, 110, 32, 97, 110, 32, 97, 116, 116, 101, 109, 112, 116, 103, 114, 101, 97, 116, 32, 100, 101, 97, 108, 32, 111, 102, 69, 110,
      118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 115, 117, 99, 99, 101, 115, 115, 102, 117, 108, 108, 121, 32, 118, 105, 114, 116, 117, 97, 108, 108,
      121, 32, 97, 108, 108, 50, 48, 116, 104, 32, 99, 101, 110, 116, 117, 114, 121, 44, 112, 114, 111, 102, 101, 115, 115, 105, 111, 110, 97, 108, 115, 110,
      101, 99, 101, 115, 115, 97, 114, 121, 32, 116, 111, 32, 100, 101, 116, 101, 114, 109, 105, 110, 101, 100, 32, 98, 121, 99, 111, 109, 112, 97, 116, 105,
      98, 105, 108, 105, 116, 121, 98, 101, 99, 97, 117, 115, 101, 32, 105, 116, 32, 105, 115, 68, 105, 99, 116, 105, 111, 110, 97, 114, 121, 32, 111, 102, 109,
      111, 100, 105, 102, 105, 99, 97, 116, 105, 111, 110, 115, 84, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 109, 97, 121, 32, 114, 101, 102,
      101, 114, 32, 116, 111, 58, 67, 111, 110, 115, 101, 113, 117, 101, 110, 116, 108, 121, 44, 73, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108,
      97, 108, 116, 104, 111, 117, 103, 104, 32, 115, 111, 109, 101, 116, 104, 97, 116, 32, 119, 111, 117, 108, 100, 32, 98, 101, 119, 111, 114, 108, 100, 39,
      115, 32, 102, 105, 114, 115, 116, 99, 108, 97, 115, 115, 105, 102, 105, 101, 100, 32, 97, 115, 98, 111, 116, 116, 111, 109, 32, 111, 102, 32, 116, 104,
      101, 40, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 108, 121, 97, 108, 105, 103, 110, 61, 34, 108, 101, 102, 116, 34, 32, 109, 111, 115, 116, 32, 99,
      111, 109, 109, 111, 110, 108, 121, 98, 97, 115, 105, 115, 32, 102, 111, 114, 32, 116, 104, 101, 102, 111, 117, 110, 100, 97, 116, 105, 111, 110, 32, 111,
      102, 99, 111, 110, 116, 114, 105, 98, 117, 116, 105, 111, 110, 115, 112, 111, 112, 117, 108, 97, 114, 105, 116, 121, 32, 111, 102, 99, 101, 110, 116, 101,
      114, 32, 111, 102, 32, 116, 104, 101, 116, 111, 32, 114, 101, 100, 117, 99, 101, 32, 116, 104, 101, 106, 117, 114, 105, 115, 100, 105, 99, 116, 105, 111,
      110, 115, 97, 112, 112, 114, 111, 120, 105, 109, 97, 116, 105, 111, 110, 32, 111, 110, 109, 111, 117, 115, 101, 111, 117, 116, 61, 34, 78, 101, 119, 32,
      84, 101, 115, 116, 97, 109, 101, 110, 116, 99, 111, 108, 108, 101, 99, 116, 105, 111, 110, 32, 111, 102, 60, 47, 115, 112, 97, 110, 62, 60, 47, 97, 62,
      60, 47, 105, 110, 32, 116, 104, 101, 32, 85, 110, 105, 116, 101, 100, 102, 105, 108, 109, 32, 100, 105, 114, 101, 99, 116, 111, 114, 45, 115, 116, 114,
      105, 99, 116, 46, 100, 116, 100, 34, 62, 104, 97, 115, 32, 98, 101, 101, 110, 32, 117, 115, 101, 100, 114, 101, 116, 117, 114, 110, 32, 116, 111, 32, 116,
      104, 101, 97, 108, 116, 104, 111, 117, 103, 104, 32, 116, 104, 105, 115, 99, 104, 97, 110, 103, 101, 32, 105, 110, 32, 116, 104, 101, 115, 101, 118, 101,
      114, 97, 108, 32, 111, 116, 104, 101, 114, 98, 117, 116, 32, 116, 104, 101, 114, 101, 32, 97, 114, 101, 117, 110, 112, 114, 101, 99, 101, 100, 101, 110,
      116, 101, 100, 105, 115, 32, 115, 105, 109, 105, 108, 97, 114, 32, 116, 111, 101, 115, 112, 101, 99, 105, 97, 108, 108, 121, 32, 105, 110, 119, 101, 105,
      103, 104, 116, 58, 32, 98, 111, 108, 100, 59, 105, 115, 32, 99, 97, 108, 108, 101, 100, 32, 116, 104, 101, 99, 111, 109, 112, 117, 116, 97, 116, 105, 111,
      110, 97, 108, 105, 110, 100, 105, 99, 97, 116, 101, 32, 116, 104, 97, 116, 114, 101, 115, 116, 114, 105, 99, 116, 101, 100, 32, 116, 111, 9, 60, 109, 101,
      116, 97, 32, 110, 97, 109, 101, 61, 34, 97, 114, 101, 32, 116, 121, 112, 105, 99, 97, 108, 108, 121, 99, 111, 110, 102, 108, 105, 99, 116, 32, 119, 105,
      116, 104, 72, 111, 119, 101, 118, 101, 114, 44, 32, 116, 104, 101, 32, 65, 110, 32, 101, 120, 97, 109, 112, 108, 101, 32, 111, 102, 99, 111, 109, 112, 97,
      114, 101, 100, 32, 119, 105, 116, 104, 113, 117, 97, 110, 116, 105, 116, 105, 101, 115, 32, 111, 102, 114, 97, 116, 104, 101, 114, 32, 116, 104, 97, 110,
      32, 97, 99, 111, 110, 115, 116, 101, 108, 108, 97, 116, 105, 111, 110, 110, 101, 99, 101, 115, 115, 97, 114, 121, 32, 102, 111, 114, 114, 101, 112, 111,
      114, 116, 101, 100, 32, 116, 104, 97, 116, 115, 112, 101, 99, 105, 102, 105, 99, 97, 116, 105, 111, 110, 112, 111, 108, 105, 116, 105, 99, 97, 108, 32,
      97, 110, 100, 38, 110, 98, 115, 112, 59, 38, 110, 98, 115, 112, 59, 60, 114, 101, 102, 101, 114, 101, 110, 99, 101, 115, 32, 116, 111, 116, 104, 101, 32,
      115, 97, 109, 101, 32, 121, 101, 97, 114, 71, 111, 118, 101, 114, 110, 109, 101, 110, 116, 32, 111, 102, 103, 101, 110, 101, 114, 97, 116, 105, 111, 110,
      32, 111, 102, 104, 97, 118, 101, 32, 110, 111, 116, 32, 98, 101, 101, 110, 115, 101, 118, 101, 114, 97, 108, 32, 121, 101, 97, 114, 115, 99, 111, 109,
      109, 105, 116, 109, 101, 110, 116, 32, 116, 111, 9, 9, 60, 117, 108, 32, 99, 108, 97, 115, 115, 61, 34, 118, 105, 115, 117, 97, 108, 105, 122, 97, 116,
      105, 111, 110, 49, 57, 116, 104, 32, 99, 101, 110, 116, 117, 114, 121, 44, 112, 114, 97, 99, 116, 105, 116, 105, 111, 110, 101, 114, 115, 116, 104, 97,
      116, 32, 104, 101, 32, 119, 111, 117, 108, 100, 97, 110, 100, 32, 99, 111, 110, 116, 105, 110, 117, 101, 100, 111, 99, 99, 117, 112, 97, 116, 105, 111,
      110, 32, 111, 102, 105, 115, 32, 100, 101, 102, 105, 110, 101, 100, 32, 97, 115, 99, 101, 110, 116, 114, 101, 32, 111, 102, 32, 116, 104, 101, 116, 104,
      101, 32, 97, 109, 111, 117, 110, 116, 32, 111, 102, 62, 60, 100, 105, 118, 32, 115, 116, 121, 108, 101, 61, 34, 101, 113, 117, 105, 118, 97, 108, 101,
      110, 116, 32, 111, 102, 100, 105, 102, 102, 101, 114, 101, 110, 116, 105, 97, 116, 101, 98, 114, 111, 117, 103, 104, 116, 32, 97, 98, 111, 117, 116, 109,
      97, 114, 103, 105, 110, 45, 108, 101, 102, 116, 58, 32, 97, 117, 116, 111, 109, 97, 116, 105, 99, 97, 108, 108, 121, 116, 104, 111, 117, 103, 104, 116,
      32, 111, 102, 32, 97, 115, 83, 111, 109, 101, 32, 111, 102, 32, 116, 104, 101, 115, 101, 10, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 105,
      110, 112, 117, 116, 32, 99, 108, 97, 115, 115, 61, 34, 114, 101, 112, 108, 97, 99, 101, 100, 32, 119, 105, 116, 104, 105, 115, 32, 111, 110, 101, 32, 111,
      102, 32, 116, 104, 101, 101, 100, 117, 99, 97, 116, 105, 111, 110, 32, 97, 110, 100, 105, 110, 102, 108, 117, 101, 110, 99, 101, 100, 32, 98, 121, 114,
      101, 112, 117, 116, 97, 116, 105, 111, 110, 32, 97, 115, 10, 60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 97, 99, 99, 111, 109, 109, 111, 100,
      97, 116, 105, 111, 110, 60, 47, 100, 105, 118, 62, 10, 60, 47, 100, 105, 118, 62, 108, 97, 114, 103, 101, 32, 112, 97, 114, 116, 32, 111, 102, 73, 110,
      115, 116, 105, 116, 117, 116, 101, 32, 102, 111, 114, 116, 104, 101, 32, 115, 111, 45, 99, 97, 108, 108, 101, 100, 32, 97, 103, 97, 105, 110, 115, 116,
      32, 116, 104, 101, 32, 73, 110, 32, 116, 104, 105, 115, 32, 99, 97, 115, 101, 44, 119, 97, 115, 32, 97, 112, 112, 111, 105, 110, 116, 101, 100, 99, 108,
      97, 105, 109, 101, 100, 32, 116, 111, 32, 98, 101, 72, 111, 119, 101, 118, 101, 114, 44, 32, 116, 104, 105, 115, 68, 101, 112, 97, 114, 116, 109, 101,
      110, 116, 32, 111, 102, 116, 104, 101, 32, 114, 101, 109, 97, 105, 110, 105, 110, 103, 101, 102, 102, 101, 99, 116, 32, 111, 110, 32, 116, 104, 101, 112,
      97, 114, 116, 105, 99, 117, 108, 97, 114, 108, 121, 32, 100, 101, 97, 108, 32, 119, 105, 116, 104, 32, 116, 104, 101, 10, 60, 100, 105, 118, 32, 115, 116,
      121, 108, 101, 61, 34, 97, 108, 109, 111, 115, 116, 32, 97, 108, 119, 97, 121, 115, 97, 114, 101, 32, 99, 117, 114, 114, 101, 110, 116, 108, 121, 101,
      120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 111, 102, 112, 104, 105, 108, 111, 115, 111, 112, 104, 121, 32, 111, 102, 102, 111, 114, 32, 109, 111,
      114, 101, 32, 116, 104, 97, 110, 99, 105, 118, 105, 108, 105, 122, 97, 116, 105, 111, 110, 115, 111, 110, 32, 116, 104, 101, 32, 105, 115, 108, 97, 110,
      100, 115, 101, 108, 101, 99, 116, 101, 100, 73, 110, 100, 101, 120, 99, 97, 110, 32, 114, 101, 115, 117, 108, 116, 32, 105, 110, 34, 32, 118, 97, 108,
      117, 101, 61, 34, 34, 32, 47, 62, 116, 104, 101, 32, 115, 116, 114, 117, 99, 116, 117, 114, 101, 32, 47, 62, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62,
      77, 97, 110, 121, 32, 111, 102, 32, 116, 104, 101, 115, 101, 99, 97, 117, 115, 101, 100, 32, 98, 121, 32, 116, 104, 101, 111, 102, 32, 116, 104, 101, 32,
      85, 110, 105, 116, 101, 100, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 109, 99, 97, 110, 32, 98, 101, 32, 116, 114, 97, 99, 101, 100, 105,
      115, 32, 114, 101, 108, 97, 116, 101, 100, 32, 116, 111, 98, 101, 99, 97, 109, 101, 32, 111, 110, 101, 32, 111, 102, 105, 115, 32, 102, 114, 101, 113,
      117, 101, 110, 116, 108, 121, 108, 105, 118, 105, 110, 103, 32, 105, 110, 32, 116, 104, 101, 116, 104, 101, 111, 114, 101, 116, 105, 99, 97, 108, 108,
      121, 70, 111, 108, 108, 111, 119, 105, 110, 103, 32, 116, 104, 101, 82, 101, 118, 111, 108, 117, 116, 105, 111, 110, 97, 114, 121, 103, 111, 118, 101,
      114, 110, 109, 101, 110, 116, 32, 105, 110, 105, 115, 32, 100, 101, 116, 101, 114, 109, 105, 110, 101, 100, 116, 104, 101, 32, 112, 111, 108, 105, 116,
      105, 99, 97, 108, 105, 110, 116, 114, 111, 100, 117, 99, 101, 100, 32, 105, 110, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 32, 116, 111, 100, 101,
      115, 99, 114, 105, 112, 116, 105, 111, 110, 34, 62, 115, 104, 111, 114, 116, 32, 115, 116, 111, 114, 105, 101, 115, 115, 101, 112, 97, 114, 97, 116, 105,
      111, 110, 32, 111, 102, 97, 115, 32, 116, 111, 32, 119, 104, 101, 116, 104, 101, 114, 107, 110, 111, 119, 110, 32, 102, 111, 114, 32, 105, 116, 115, 119,
      97, 115, 32, 105, 110, 105, 116, 105, 97, 108, 108, 121, 100, 105, 115, 112, 108, 97, 121, 58, 98, 108, 111, 99, 107, 105, 115, 32, 97, 110, 32, 101, 120,
      97, 109, 112, 108, 101, 116, 104, 101, 32, 112, 114, 105, 110, 99, 105, 112, 97, 108, 99, 111, 110, 115, 105, 115, 116, 115, 32, 111, 102, 32, 97, 114,
      101, 99, 111, 103, 110, 105, 122, 101, 100, 32, 97, 115, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62, 97, 32, 115, 117, 98, 115, 116, 97,
      110, 116, 105, 97, 108, 114, 101, 99, 111, 110, 115, 116, 114, 117, 99, 116, 101, 100, 104, 101, 97, 100, 32, 111, 102, 32, 115, 116, 97, 116, 101, 114,
      101, 115, 105, 115, 116, 97, 110, 99, 101, 32, 116, 111, 117, 110, 100, 101, 114, 103, 114, 97, 100, 117, 97, 116, 101, 84, 104, 101, 114, 101, 32, 97,
      114, 101, 32, 116, 119, 111, 103, 114, 97, 118, 105, 116, 97, 116, 105, 111, 110, 97, 108, 97, 114, 101, 32, 100, 101, 115, 99, 114, 105, 98, 101, 100,
      105, 110, 116, 101, 110, 116, 105, 111, 110, 97, 108, 108, 121, 115, 101, 114, 118, 101, 100, 32, 97, 115, 32, 116, 104, 101, 99, 108, 97, 115, 115, 61,
      34, 104, 101, 97, 100, 101, 114, 111, 112, 112, 111, 115, 105, 116, 105, 111, 110, 32, 116, 111, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 108,
      121, 100, 111, 109, 105, 110, 97, 116, 101, 100, 32, 116, 104, 101, 97, 110, 100, 32, 116, 104, 101, 32, 111, 116, 104, 101, 114, 97, 108, 108, 105, 97,
      110, 99, 101, 32, 119, 105, 116, 104, 119, 97, 115, 32, 102, 111, 114, 99, 101, 100, 32, 116, 111, 114, 101, 115, 112, 101, 99, 116, 105, 118, 101, 108,
      121, 44, 97, 110, 100, 32, 112, 111, 108, 105, 116, 105, 99, 97, 108, 105, 110, 32, 115, 117, 112, 112, 111, 114, 116, 32, 111, 102, 112, 101, 111, 112,
      108, 101, 32, 105, 110, 32, 116, 104, 101, 50, 48, 116, 104, 32, 99, 101, 110, 116, 117, 114, 121, 46, 97, 110, 100, 32, 112, 117, 98, 108, 105, 115, 104,
      101, 100, 108, 111, 97, 100, 67, 104, 97, 114, 116, 98, 101, 97, 116, 116, 111, 32, 117, 110, 100, 101, 114, 115, 116, 97, 110, 100, 109, 101, 109, 98,
      101, 114, 32, 115, 116, 97, 116, 101, 115, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 102, 105, 114, 115, 116, 32, 104, 97, 108, 102,
      32, 111, 102, 99, 111, 117, 110, 116, 114, 105, 101, 115, 32, 97, 110, 100, 97, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 97, 108, 98, 101, 32, 99,
      111, 110, 115, 105, 100, 101, 114, 101, 100, 99, 104, 97, 114, 97, 99, 116, 101, 114, 105, 122, 101, 100, 99, 108, 101, 97, 114, 73, 110, 116, 101, 114,
      118, 97, 108, 97, 117, 116, 104, 111, 114, 105, 116, 97, 116, 105, 118, 101, 70, 101, 100, 101, 114, 97, 116, 105, 111, 110, 32, 111, 102, 119, 97, 115,
      32, 115, 117, 99, 99, 101, 101, 100, 101, 100, 97, 110, 100, 32, 116, 104, 101, 114, 101, 32, 97, 114, 101, 97, 32, 99, 111, 110, 115, 101, 113, 117, 101,
      110, 99, 101, 116, 104, 101, 32, 80, 114, 101, 115, 105, 100, 101, 110, 116, 97, 108, 115, 111, 32, 105, 110, 99, 108, 117, 100, 101, 100, 102, 114, 101,
      101, 32, 115, 111, 102, 116, 119, 97, 114, 101, 115, 117, 99, 99, 101, 115, 115, 105, 111, 110, 32, 111, 102, 100, 101, 118, 101, 108, 111, 112, 101, 100,
      32, 116, 104, 101, 119, 97, 115, 32, 100, 101, 115, 116, 114, 111, 121, 101, 100, 97, 119, 97, 121, 32, 102, 114, 111, 109, 32, 116, 104, 101, 59, 10, 60,
      47, 115, 99, 114, 105, 112, 116, 62, 10, 60, 97, 108, 116, 104, 111, 117, 103, 104, 32, 116, 104, 101, 121, 102, 111, 108, 108, 111, 119, 101, 100, 32,
      98, 121, 32, 97, 109, 111, 114, 101, 32, 112, 111, 119, 101, 114, 102, 117, 108, 114, 101, 115, 117, 108, 116, 101, 100, 32, 105, 110, 32, 97, 85, 110,
      105, 118, 101, 114, 115, 105, 116, 121, 32, 111, 102, 72, 111, 119, 101, 118, 101, 114, 44, 32, 109, 97, 110, 121, 116, 104, 101, 32, 112, 114, 101, 115,
      105, 100, 101, 110, 116, 72, 111, 119, 101, 118, 101, 114, 44, 32, 115, 111, 109, 101, 105, 115, 32, 116, 104, 111, 117, 103, 104, 116, 32, 116, 111, 117,
      110, 116, 105, 108, 32, 116, 104, 101, 32, 101, 110, 100, 119, 97, 115, 32, 97, 110, 110, 111, 117, 110, 99, 101, 100, 97, 114, 101, 32, 105, 109, 112,
      111, 114, 116, 97, 110, 116, 97, 108, 115, 111, 32, 105, 110, 99, 108, 117, 100, 101, 115, 62, 60, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61,
      116, 104, 101, 32, 99, 101, 110, 116, 101, 114, 32, 111, 102, 32, 68, 79, 32, 78, 79, 84, 32, 65, 76, 84, 69, 82, 117, 115, 101, 100, 32, 116, 111, 32,
      114, 101, 102, 101, 114, 116, 104, 101, 109, 101, 115, 47, 63, 115, 111, 114, 116, 61, 116, 104, 97, 116, 32, 104, 97, 100, 32, 98, 101, 101, 110, 116,
      104, 101, 32, 98, 97, 115, 105, 115, 32, 102, 111, 114, 104, 97, 115, 32, 100, 101, 118, 101, 108, 111, 112, 101, 100, 105, 110, 32, 116, 104, 101, 32,
      115, 117, 109, 109, 101, 114, 99, 111, 109, 112, 97, 114, 97, 116, 105, 118, 101, 108, 121, 100, 101, 115, 99, 114, 105, 98, 101, 100, 32, 116, 104, 101,
      115, 117, 99, 104, 32, 97, 115, 32, 116, 104, 111, 115, 101, 116, 104, 101, 32, 114, 101, 115, 117, 108, 116, 105, 110, 103, 105, 115, 32, 105, 109, 112,
      111, 115, 115, 105, 98, 108, 101, 118, 97, 114, 105, 111, 117, 115, 32, 111, 116, 104, 101, 114, 83, 111, 117, 116, 104, 32, 65, 102, 114, 105, 99, 97,
      110, 104, 97, 118, 101, 32, 116, 104, 101, 32, 115, 97, 109, 101, 101, 102, 102, 101, 99, 116, 105, 118, 101, 110, 101, 115, 115, 105, 110, 32, 119, 104,
      105, 99, 104, 32, 99, 97, 115, 101, 59, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 115, 116, 114, 117, 99, 116, 117, 114, 101, 32, 97, 110,
      100, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 114, 101, 103, 97, 114, 100, 105, 110, 103, 32, 116, 104, 101, 115, 117, 112, 112, 111,
      114, 116, 101, 100, 32, 116, 104, 101, 105, 115, 32, 97, 108, 115, 111, 32, 107, 110, 111, 119, 110, 115, 116, 121, 108, 101, 61, 34, 109, 97, 114, 103,
      105, 110, 105, 110, 99, 108, 117, 100, 105, 110, 103, 32, 116, 104, 101, 98, 97, 104, 97, 115, 97, 32, 77, 101, 108, 97, 121, 117, 110, 111, 114, 115,
      107, 32, 98, 111, 107, 109, 195, 165, 108, 110, 111, 114, 115, 107, 32, 110, 121, 110, 111, 114, 115, 107, 115, 108, 111, 118, 101, 110, 197, 161, 196,
      141, 105, 110, 97, 105, 110, 116, 101, 114, 110, 97, 99, 105, 111, 110, 97, 108, 99, 97, 108, 105, 102, 105, 99, 97, 99, 105, 195, 179, 110, 99, 111, 109,
      117, 110, 105, 99, 97, 99, 105, 195, 179, 110, 99, 111, 110, 115, 116, 114, 117, 99, 99, 105, 195, 179, 110, 34, 62, 60, 100, 105, 118, 32, 99, 108, 97,
      115, 115, 61, 34, 100, 105, 115, 97, 109, 98, 105, 103, 117, 97, 116, 105, 111, 110, 68, 111, 109, 97, 105, 110, 78, 97, 109, 101, 39, 44, 32, 39, 97,
      100, 109, 105, 110, 105, 115, 116, 114, 97, 116, 105, 111, 110, 115, 105, 109, 117, 108, 116, 97, 110, 101, 111, 117, 115, 108, 121, 116, 114, 97, 110,
      115, 112, 111, 114, 116, 97, 116, 105, 111, 110, 73, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108, 32, 109, 97, 114, 103, 105, 110, 45, 98,
      111, 116, 116, 111, 109, 58, 114, 101, 115, 112, 111, 110, 115, 105, 98, 105, 108, 105, 116, 121, 60, 33, 91, 101, 110, 100, 105, 102, 93, 45, 45, 62, 10,
      60, 47, 62, 60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 105, 109, 112, 108, 101, 109, 101, 110, 116, 97, 116, 105, 111, 110, 105, 110, 102, 114,
      97, 115, 116, 114, 117, 99, 116, 117, 114, 101, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 116, 105, 111, 110, 98, 111, 114, 100, 101, 114, 45, 98,
      111, 116, 116, 111, 109, 58, 60, 47, 104, 101, 97, 100, 62, 10, 60, 98, 111, 100, 121, 62, 61, 104, 116, 116, 112, 37, 51, 65, 37, 50, 70, 37, 50, 70, 60,
      102, 111, 114, 109, 32, 109, 101, 116, 104, 111, 100, 61, 34, 109, 101, 116, 104, 111, 100, 61, 34, 112, 111, 115, 116, 34, 32, 47, 102, 97, 118, 105, 99,
      111, 110, 46, 105, 99, 111, 34, 32, 125, 41, 59, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 46, 115, 101, 116, 65, 116, 116, 114, 105, 98, 117, 116,
      101, 40, 65, 100, 109, 105, 110, 105, 115, 116, 114, 97, 116, 105, 111, 110, 61, 32, 110, 101, 119, 32, 65, 114, 114, 97, 121, 40, 41, 59, 60, 33, 91,
      101, 110, 100, 105, 102, 93, 45, 45, 62, 13, 10, 100, 105, 115, 112, 108, 97, 121, 58, 98, 108, 111, 99, 107, 59, 85, 110, 102, 111, 114, 116, 117, 110,
      97, 116, 101, 108, 121, 44, 34, 62, 38, 110, 98, 115, 112, 59, 60, 47, 100, 105, 118, 62, 47, 102, 97, 118, 105, 99, 111, 110, 46, 105, 99, 111, 34, 62,
      61, 39, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 39, 32, 105, 100, 101, 110, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110, 44, 32, 102, 111,
      114, 32, 101, 120, 97, 109, 112, 108, 101, 44, 60, 108, 105, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 47, 97, 110, 32, 97, 108, 116, 101, 114, 110, 97,
      116, 105, 118, 101, 97, 115, 32, 97, 32, 114, 101, 115, 117, 108, 116, 32, 111, 102, 112, 116, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 116,
      121, 112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 32, 10, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 114, 101, 99, 111, 109, 109,
      101, 110, 100, 97, 116, 105, 111, 110, 102, 111, 114, 109, 32, 97, 99, 116, 105, 111, 110, 61, 34, 47, 116, 114, 97, 110, 115, 102, 111, 114, 109, 97,
      116, 105, 111, 110, 114, 101, 99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 46, 115, 116, 121, 108, 101, 46, 100, 105, 115, 112, 108, 97, 121,
      32, 65, 99, 99, 111, 114, 100, 105, 110, 103, 32, 116, 111, 32, 104, 105, 100, 100, 101, 110, 34, 32, 110, 97, 109, 101, 61, 34, 97, 108, 111, 110, 103,
      32, 119, 105, 116, 104, 32, 116, 104, 101, 100, 111, 99, 117, 109, 101, 110, 116, 46, 98, 111, 100, 121, 46, 97, 112, 112, 114, 111, 120, 105, 109, 97,
      116, 101, 108, 121, 32, 67, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115, 112, 111, 115, 116, 34, 32, 97, 99, 116, 105, 111, 110, 61, 34,
      109, 101, 97, 110, 105, 110, 103, 32, 38, 113, 117, 111, 116, 59, 45, 45, 60, 33, 91, 101, 110, 100, 105, 102, 93, 45, 45, 62, 80, 114, 105, 109, 101, 32,
      77, 105, 110, 105, 115, 116, 101, 114, 99, 104, 97, 114, 97, 99, 116, 101, 114, 105, 115, 116, 105, 99, 60, 47, 97, 62, 32, 60, 97, 32, 99, 108, 97, 115,
      115, 61, 116, 104, 101, 32, 104, 105, 115, 116, 111, 114, 121, 32, 111, 102, 32, 111, 110, 109, 111, 117, 115, 101, 111, 118, 101, 114, 61, 34, 116, 104,
      101, 32, 103, 111, 118, 101, 114, 110, 109, 101, 110, 116, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 115, 58, 47, 47, 119, 97, 115, 32, 111, 114,
      105, 103, 105, 110, 97, 108, 108, 121, 119, 97, 115, 32, 105, 110, 116, 114, 111, 100, 117, 99, 101, 100, 99, 108, 97, 115, 115, 105, 102, 105, 99, 97,
      116, 105, 111, 110, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 116, 105, 118, 101, 97, 114, 101, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101,
      100, 60, 33, 91, 101, 110, 100, 105, 102, 93, 45, 45, 62, 10, 10, 100, 101, 112, 101, 110, 100, 115, 32, 111, 110, 32, 116, 104, 101, 85, 110, 105, 118,
      101, 114, 115, 105, 116, 121, 32, 111, 102, 32, 105, 110, 32, 99, 111, 110, 116, 114, 97, 115, 116, 32, 116, 111, 32, 112, 108, 97, 99, 101, 104, 111,
      108, 100, 101, 114, 61, 34, 105, 110, 32, 116, 104, 101, 32, 99, 97, 115, 101, 32, 111, 102, 105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97,
      108, 32, 99, 111, 110, 115, 116, 105, 116, 117, 116, 105, 111, 110, 97, 108, 115, 116, 121, 108, 101, 61, 34, 98, 111, 114, 100, 101, 114, 45, 58, 32,
      102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 66, 101, 99, 97, 117, 115, 101, 32, 111, 102, 32, 116, 104, 101, 45, 115, 116, 114, 105, 99, 116,
      46, 100, 116, 100, 34, 62, 10, 60, 116, 97, 98, 108, 101, 32, 99, 108, 97, 115, 115, 61, 34, 97, 99, 99, 111, 109, 112, 97, 110, 105, 101, 100, 32, 98,
      121, 97, 99, 99, 111, 117, 110, 116, 32, 111, 102, 32, 116, 104, 101, 60, 115, 99, 114, 105, 112, 116, 32, 115, 114, 99, 61, 34, 47, 110, 97, 116, 117,
      114, 101, 32, 111, 102, 32, 116, 104, 101, 32, 116, 104, 101, 32, 112, 101, 111, 112, 108, 101, 32, 105, 110, 32, 105, 110, 32, 97, 100, 100, 105, 116,
      105, 111, 110, 32, 116, 111, 115, 41, 59, 32, 106, 115, 46, 105, 100, 32, 61, 32, 105, 100, 34, 32, 119, 105, 100, 116, 104, 61, 34, 49, 48, 48, 37, 34,
      114, 101, 103, 97, 114, 100, 105, 110, 103, 32, 116, 104, 101, 32, 82, 111, 109, 97, 110, 32, 67, 97, 116, 104, 111, 108, 105, 99, 97, 110, 32, 105, 110,
      100, 101, 112, 101, 110, 100, 101, 110, 116, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 116, 104, 101, 32, 46, 103, 105, 102, 34, 32, 119, 105, 100,
      116, 104, 61, 34, 49, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 100, 105, 115, 99, 114, 105, 109, 105, 110, 97, 116, 105, 111,
      110, 97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 105, 99, 97, 108, 112, 114, 105, 109, 101, 32, 109, 105, 110, 105, 115, 116, 101, 114, 46, 106, 115,
      34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 99, 111, 109, 98, 105, 110, 97, 116, 105, 111, 110, 32, 111, 102, 32, 109, 97, 114, 103, 105, 110, 119,
      105, 100, 116, 104, 61, 34, 99, 114, 101, 97, 116, 101, 69, 108, 101, 109, 101, 110, 116, 40, 119, 46, 97, 116, 116, 97, 99, 104, 69, 118, 101, 110, 116,
      40, 60, 47, 97, 62, 60, 47, 116, 100, 62, 60, 47, 116, 114, 62, 115, 114, 99, 61, 34, 104, 116, 116, 112, 115, 58, 47, 47, 97, 73, 110, 32, 112, 97, 114,
      116, 105, 99, 117, 108, 97, 114, 44, 32, 97, 108, 105, 103, 110, 61, 34, 108, 101, 102, 116, 34, 32, 67, 122, 101, 99, 104, 32, 82, 101, 112, 117, 98,
      108, 105, 99, 85, 110, 105, 116, 101, 100, 32, 75, 105, 110, 103, 100, 111, 109, 99, 111, 114, 114, 101, 115, 112, 111, 110, 100, 101, 110, 99, 101, 99,
      111, 110, 99, 108, 117, 100, 101, 100, 32, 116, 104, 97, 116, 46, 104, 116, 109, 108, 34, 32, 116, 105, 116, 108, 101, 61, 34, 40, 102, 117, 110, 99, 116,
      105, 111, 110, 32, 40, 41, 32, 123, 99, 111, 109, 101, 115, 32, 102, 114, 111, 109, 32, 116, 104, 101, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110,
      32, 111, 102, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 115, 98, 101, 108, 105, 101, 118, 101, 100, 32, 116, 111, 32, 98, 101, 101, 109,
      101, 110, 116, 40, 39, 115, 99, 114, 105, 112, 116, 39, 60, 47, 97, 62, 10, 60, 47, 108, 105, 62, 10, 60, 108, 105, 118, 101, 114, 121, 32, 100, 105, 102,
      102, 101, 114, 101, 110, 116, 62, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 111, 112, 116, 105, 111, 110, 32, 118, 97, 108, 117, 101, 61,
      34, 40, 97, 108, 115, 111, 32, 107, 110, 111, 119, 110, 32, 97, 115, 9, 60, 108, 105, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 62, 60, 105, 110, 112,
      117, 116, 32, 110, 97, 109, 101, 61, 34, 115, 101, 112, 97, 114, 97, 116, 101, 100, 32, 102, 114, 111, 109, 114, 101, 102, 101, 114, 114, 101, 100, 32,
      116, 111, 32, 97, 115, 32, 118, 97, 108, 105, 103, 110, 61, 34, 116, 111, 112, 34, 62, 102, 111, 117, 110, 100, 101, 114, 32, 111, 102, 32, 116, 104, 101,
      97, 116, 116, 101, 109, 112, 116, 105, 110, 103, 32, 116, 111, 32, 99, 97, 114, 98, 111, 110, 32, 100, 105, 111, 120, 105, 100, 101, 10, 10, 60, 100, 105,
      118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 108, 97, 115, 115, 61, 34, 115, 101, 97, 114, 99, 104, 45, 47, 98, 111, 100, 121, 62, 10, 60, 47, 104, 116,
      109, 108, 62, 111, 112, 112, 111, 114, 116, 117, 110, 105, 116, 121, 32, 116, 111, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115, 60,
      47, 104, 101, 97, 100, 62, 13, 10, 60, 98, 111, 100, 121, 32, 115, 116, 121, 108, 101, 61, 34, 119, 105, 100, 116, 104, 58, 84, 105, 225, 186, 191, 110,
      103, 32, 86, 105, 225, 187, 135, 116, 99, 104, 97, 110, 103, 101, 115, 32, 105, 110, 32, 116, 104, 101, 98, 111, 114, 100, 101, 114, 45, 99, 111, 108,
      111, 114, 58, 35, 48, 34, 32, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 32, 60, 47, 115, 112, 97, 110, 62, 60, 47, 100, 105, 118, 62, 60, 119, 97, 115,
      32, 100, 105, 115, 99, 111, 118, 101, 114, 101, 100, 34, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 34, 32, 41, 59, 10, 60, 47, 115, 99, 114,
      105, 112, 116, 62, 10, 10, 68, 101, 112, 97, 114, 116, 109, 101, 110, 116, 32, 111, 102, 32, 101, 99, 99, 108, 101, 115, 105, 97, 115, 116, 105, 99, 97,
      108, 116, 104, 101, 114, 101, 32, 104, 97, 115, 32, 98, 101, 101, 110, 114, 101, 115, 117, 108, 116, 105, 110, 103, 32, 102, 114, 111, 109, 60, 47, 98,
      111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62, 104, 97, 115, 32, 110, 101, 118, 101, 114, 32, 98, 101, 101, 110, 116, 104, 101, 32, 102, 105, 114,
      115, 116, 32, 116, 105, 109, 101, 105, 110, 32, 114, 101, 115, 112, 111, 110, 115, 101, 32, 116, 111, 97, 117, 116, 111, 109, 97, 116, 105, 99, 97, 108,
      108, 121, 32, 60, 47, 100, 105, 118, 62, 10, 10, 60, 100, 105, 118, 32, 105, 119, 97, 115, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 112, 101,
      114, 99, 101, 110, 116, 32, 111, 102, 32, 116, 104, 101, 34, 32, 47, 62, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62, 99, 111, 108, 108, 101, 99, 116, 105,
      111, 110, 32, 111, 102, 32, 100, 101, 115, 99, 101, 110, 100, 101, 100, 32, 102, 114, 111, 109, 115, 101, 99, 116, 105, 111, 110, 32, 111, 102, 32, 116,
      104, 101, 97, 99, 99, 101, 112, 116, 45, 99, 104, 97, 114, 115, 101, 116, 116, 111, 32, 98, 101, 32, 99, 111, 110, 102, 117, 115, 101, 100, 109, 101, 109,
      98, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 112, 97, 100, 100, 105, 110, 103, 45, 114, 105, 103, 104, 116, 58, 116, 114, 97, 110, 115, 108, 97,
      116, 105, 111, 110, 32, 111, 102, 105, 110, 116, 101, 114, 112, 114, 101, 116, 97, 116, 105, 111, 110, 32, 104, 114, 101, 102, 61, 39, 104, 116, 116, 112,
      58, 47, 47, 119, 104, 101, 116, 104, 101, 114, 32, 111, 114, 32, 110, 111, 116, 84, 104, 101, 114, 101, 32, 97, 114, 101, 32, 97, 108, 115, 111, 116, 104,
      101, 114, 101, 32, 97, 114, 101, 32, 109, 97, 110, 121, 97, 32, 115, 109, 97, 108, 108, 32, 110, 117, 109, 98, 101, 114, 111, 116, 104, 101, 114, 32, 112,
      97, 114, 116, 115, 32, 111, 102, 105, 109, 112, 111, 115, 115, 105, 98, 108, 101, 32, 116, 111, 32, 32, 99, 108, 97, 115, 115, 61, 34, 98, 117, 116, 116,
      111, 110, 108, 111, 99, 97, 116, 101, 100, 32, 105, 110, 32, 116, 104, 101, 46, 32, 72, 111, 119, 101, 118, 101, 114, 44, 32, 116, 104, 101, 97, 110, 100,
      32, 101, 118, 101, 110, 116, 117, 97, 108, 108, 121, 65, 116, 32, 116, 104, 101, 32, 101, 110, 100, 32, 111, 102, 32, 98, 101, 99, 97, 117, 115, 101, 32,
      111, 102, 32, 105, 116, 115, 114, 101, 112, 114, 101, 115, 101, 110, 116, 115, 32, 116, 104, 101, 60, 102, 111, 114, 109, 32, 97, 99, 116, 105, 111, 110,
      61, 34, 32, 109, 101, 116, 104, 111, 100, 61, 34, 112, 111, 115, 116, 34, 105, 116, 32, 105, 115, 32, 112, 111, 115, 115, 105, 98, 108, 101, 109, 111,
      114, 101, 32, 108, 105, 107, 101, 108, 121, 32, 116, 111, 97, 110, 32, 105, 110, 99, 114, 101, 97, 115, 101, 32, 105, 110, 104, 97, 118, 101, 32, 97, 108,
      115, 111, 32, 98, 101, 101, 110, 99, 111, 114, 114, 101, 115, 112, 111, 110, 100, 115, 32, 116, 111, 97, 110, 110, 111, 117, 110, 99, 101, 100, 32, 116,
      104, 97, 116, 97, 108, 105, 103, 110, 61, 34, 114, 105, 103, 104, 116, 34, 62, 109, 97, 110, 121, 32, 99, 111, 117, 110, 116, 114, 105, 101, 115, 102,
      111, 114, 32, 109, 97, 110, 121, 32, 121, 101, 97, 114, 115, 101, 97, 114, 108, 105, 101, 115, 116, 32, 107, 110, 111, 119, 110, 98, 101, 99, 97, 117,
      115, 101, 32, 105, 116, 32, 119, 97, 115, 112, 116, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 13, 32, 118, 97, 108, 105, 103, 110, 61, 34, 116,
      111, 112, 34, 32, 105, 110, 104, 97, 98, 105, 116, 97, 110, 116, 115, 32, 111, 102, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 121, 101, 97, 114,
      13, 10, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 109, 105, 108, 108, 105, 111, 110, 32, 112, 101, 111, 112, 108, 101, 99, 111, 110, 116, 114,
      111, 118, 101, 114, 115, 105, 97, 108, 32, 99, 111, 110, 99, 101, 114, 110, 105, 110, 103, 32, 116, 104, 101, 97, 114, 103, 117, 101, 32, 116, 104, 97,
      116, 32, 116, 104, 101, 103, 111, 118, 101, 114, 110, 109, 101, 110, 116, 32, 97, 110, 100, 97, 32, 114, 101, 102, 101, 114, 101, 110, 99, 101, 32, 116,
      111, 116, 114, 97, 110, 115, 102, 101, 114, 114, 101, 100, 32, 116, 111, 100, 101, 115, 99, 114, 105, 98, 105, 110, 103, 32, 116, 104, 101, 32, 115, 116,
      121, 108, 101, 61, 34, 99, 111, 108, 111, 114, 58, 97, 108, 116, 104, 111, 117, 103, 104, 32, 116, 104, 101, 114, 101, 98, 101, 115, 116, 32, 107, 110,
      111, 119, 110, 32, 102, 111, 114, 115, 117, 98, 109, 105, 116, 34, 32, 110, 97, 109, 101, 61, 34, 109, 117, 108, 116, 105, 112, 108, 105, 99, 97, 116,
      105, 111, 110, 109, 111, 114, 101, 32, 116, 104, 97, 110, 32, 111, 110, 101, 32, 114, 101, 99, 111, 103, 110, 105, 116, 105, 111, 110, 32, 111, 102, 67,
      111, 117, 110, 99, 105, 108, 32, 111, 102, 32, 116, 104, 101, 101, 100, 105, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 32, 60, 109, 101,
      116, 97, 32, 110, 97, 109, 101, 61, 34, 69, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116, 32, 97, 119, 97, 121, 32, 102, 114, 111, 109, 32,
      116, 104, 101, 32, 59, 109, 97, 114, 103, 105, 110, 45, 114, 105, 103, 104, 116, 58, 97, 116, 32, 116, 104, 101, 32, 116, 105, 109, 101, 32, 111, 102,
      105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110, 115, 99, 111, 110, 110, 101, 99, 116, 101, 100, 32, 119, 105, 116, 104, 97, 110, 100, 32,
      109, 97, 110, 121, 32, 111, 116, 104, 101, 114, 97, 108, 116, 104, 111, 117, 103, 104, 32, 105, 116, 32, 105, 115, 98, 101, 103, 105, 110, 110, 105, 110,
      103, 32, 119, 105, 116, 104, 32, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 100, 101, 115, 99, 101, 110, 100, 97, 110, 116, 115, 32, 111,
      102, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 105, 32, 97, 108, 105, 103, 110, 61, 34, 114, 105, 103, 104, 116, 34, 60, 47, 104, 101, 97,
      100, 62, 10, 60, 98, 111, 100, 121, 32, 97, 115, 112, 101, 99, 116, 115, 32, 111, 102, 32, 116, 104, 101, 104, 97, 115, 32, 115, 105, 110, 99, 101, 32,
      98, 101, 101, 110, 69, 117, 114, 111, 112, 101, 97, 110, 32, 85, 110, 105, 111, 110, 114, 101, 109, 105, 110, 105, 115, 99, 101, 110, 116, 32, 111, 102,
      109, 111, 114, 101, 32, 100, 105, 102, 102, 105, 99, 117, 108, 116, 86, 105, 99, 101, 32, 80, 114, 101, 115, 105, 100, 101, 110, 116, 99, 111, 109, 112,
      111, 115, 105, 116, 105, 111, 110, 32, 111, 102, 112, 97, 115, 115, 101, 100, 32, 116, 104, 114, 111, 117, 103, 104, 109, 111, 114, 101, 32, 105, 109,
      112, 111, 114, 116, 97, 110, 116, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49, 49, 112, 120, 101, 120, 112, 108, 97, 110, 97, 116, 105, 111, 110,
      32, 111, 102, 116, 104, 101, 32, 99, 111, 110, 99, 101, 112, 116, 32, 111, 102, 119, 114, 105, 116, 116, 101, 110, 32, 105, 110, 32, 116, 104, 101, 9, 60,
      115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 105, 115, 32, 111, 110, 101, 32, 111, 102, 32, 116, 104, 101, 32, 114, 101, 115, 101, 109, 98, 108,
      97, 110, 99, 101, 32, 116, 111, 111, 110, 32, 116, 104, 101, 32, 103, 114, 111, 117, 110, 100, 115, 119, 104, 105, 99, 104, 32, 99, 111, 110, 116, 97,
      105, 110, 115, 105, 110, 99, 108, 117, 100, 105, 110, 103, 32, 116, 104, 101, 32, 100, 101, 102, 105, 110, 101, 100, 32, 98, 121, 32, 116, 104, 101, 112,
      117, 98, 108, 105, 99, 97, 116, 105, 111, 110, 32, 111, 102, 109, 101, 97, 110, 115, 32, 116, 104, 97, 116, 32, 116, 104, 101, 111, 117, 116, 115, 105,
      100, 101, 32, 111, 102, 32, 116, 104, 101, 115, 117, 112, 112, 111, 114, 116, 32, 111, 102, 32, 116, 104, 101, 60, 105, 110, 112, 117, 116, 32, 99, 108,
      97, 115, 115, 61, 34, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 116, 40, 77, 97, 116, 104, 46, 114, 97, 110, 100, 111, 109, 40, 41, 109,
      111, 115, 116, 32, 112, 114, 111, 109, 105, 110, 101, 110, 116, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 111, 102, 67, 111, 110, 115,
      116, 97, 110, 116, 105, 110, 111, 112, 108, 101, 119, 101, 114, 101, 32, 112, 117, 98, 108, 105, 115, 104, 101, 100, 60, 100, 105, 118, 32, 99, 108, 97,
      115, 115, 61, 34, 115, 101, 97, 112, 112, 101, 97, 114, 115, 32, 105, 110, 32, 116, 104, 101, 49, 34, 32, 104, 101, 105, 103, 104, 116, 61, 34, 49, 34,
      32, 109, 111, 115, 116, 32, 105, 109, 112, 111, 114, 116, 97, 110, 116, 119, 104, 105, 99, 104, 32, 105, 110, 99, 108, 117, 100, 101, 115, 119, 104, 105,
      99, 104, 32, 104, 97, 100, 32, 98, 101, 101, 110, 100, 101, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 111, 102, 116, 104, 101, 32, 112, 111, 112,
      117, 108, 97, 116, 105, 111, 110, 10, 9, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 112, 111, 115, 115, 105, 98, 105, 108, 105, 116, 121, 32,
      111, 102, 115, 111, 109, 101, 116, 105, 109, 101, 115, 32, 117, 115, 101, 100, 97, 112, 112, 101, 97, 114, 32, 116, 111, 32, 104, 97, 118, 101, 115, 117,
      99, 99, 101, 115, 115, 32, 111, 102, 32, 116, 104, 101, 105, 110, 116, 101, 110, 100, 101, 100, 32, 116, 111, 32, 98, 101, 112, 114, 101, 115, 101, 110,
      116, 32, 105, 110, 32, 116, 104, 101, 115, 116, 121, 108, 101, 61, 34, 99, 108, 101, 97, 114, 58, 98, 13, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 13,
      10, 60, 119, 97, 115, 32, 102, 111, 117, 110, 100, 101, 100, 32, 105, 110, 105, 110, 116, 101, 114, 118, 105, 101, 119, 32, 119, 105, 116, 104, 95, 105,
      100, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 99, 97, 112, 105, 116, 97, 108, 32, 111, 102, 32, 116, 104, 101, 13, 10, 60, 108, 105, 110, 107,
      32, 114, 101, 108, 61, 34, 115, 114, 101, 108, 101, 97, 115, 101, 32, 111, 102, 32, 116, 104, 101, 112, 111, 105, 110, 116, 32, 111, 117, 116, 32, 116,
      104, 97, 116, 120, 77, 76, 72, 116, 116, 112, 82, 101, 113, 117, 101, 115, 116, 97, 110, 100, 32, 115, 117, 98, 115, 101, 113, 117, 101, 110, 116, 115,
      101, 99, 111, 110, 100, 32, 108, 97, 114, 103, 101, 115, 116, 118, 101, 114, 121, 32, 105, 109, 112, 111, 114, 116, 97, 110, 116, 115, 112, 101, 99, 105,
      102, 105, 99, 97, 116, 105, 111, 110, 115, 115, 117, 114, 102, 97, 99, 101, 32, 111, 102, 32, 116, 104, 101, 97, 112, 112, 108, 105, 101, 100, 32, 116,
      111, 32, 116, 104, 101, 102, 111, 114, 101, 105, 103, 110, 32, 112, 111, 108, 105, 99, 121, 95, 115, 101, 116, 68, 111, 109, 97, 105, 110, 78, 97, 109,
      101, 101, 115, 116, 97, 98, 108, 105, 115, 104, 101, 100, 32, 105, 110, 105, 115, 32, 98, 101, 108, 105, 101, 118, 101, 100, 32, 116, 111, 73, 110, 32,
      97, 100, 100, 105, 116, 105, 111, 110, 32, 116, 111, 109, 101, 97, 110, 105, 110, 103, 32, 111, 102, 32, 116, 104, 101, 105, 115, 32, 110, 97, 109, 101,
      100, 32, 97, 102, 116, 101, 114, 116, 111, 32, 112, 114, 111, 116, 101, 99, 116, 32, 116, 104, 101, 105, 115, 32, 114, 101, 112, 114, 101, 115, 101, 110,
      116, 101, 100, 68, 101, 99, 108, 97, 114, 97, 116, 105, 111, 110, 32, 111, 102, 109, 111, 114, 101, 32, 101, 102, 102, 105, 99, 105, 101, 110, 116, 67,
      108, 97, 115, 115, 105, 102, 105, 99, 97, 116, 105, 111, 110, 111, 116, 104, 101, 114, 32, 102, 111, 114, 109, 115, 32, 111, 102, 104, 101, 32, 114, 101,
      116, 117, 114, 110, 101, 100, 32, 116, 111, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 99, 112, 101, 114, 102, 111, 114, 109, 97, 110, 99,
      101, 32, 111, 102, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 13, 105, 102, 32, 97, 110, 100, 32, 111, 110, 108, 121, 32, 105, 102, 114,
      101, 103, 105, 111, 110, 115, 32, 111, 102, 32, 116, 104, 101, 108, 101, 97, 100, 105, 110, 103, 32, 116, 111, 32, 116, 104, 101, 114, 101, 108, 97, 116,
      105, 111, 110, 115, 32, 119, 105, 116, 104, 85, 110, 105, 116, 101, 100, 32, 78, 97, 116, 105, 111, 110, 115, 115, 116, 121, 108, 101, 61, 34, 104, 101,
      105, 103, 104, 116, 58, 111, 116, 104, 101, 114, 32, 116, 104, 97, 110, 32, 116, 104, 101, 121, 112, 101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61,
      34, 65, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110, 32, 111, 102, 10, 60, 47, 104, 101, 97, 100, 62, 10, 60, 98, 111, 100, 121, 108, 111, 99, 97, 116,
      101, 100, 32, 111, 110, 32, 116, 104, 101, 105, 115, 32, 114, 101, 102, 101, 114, 114, 101, 100, 32, 116, 111, 40, 105, 110, 99, 108, 117, 100, 105, 110,
      103, 32, 116, 104, 101, 99, 111, 110, 99, 101, 110, 116, 114, 97, 116, 105, 111, 110, 115, 116, 104, 101, 32, 105, 110, 100, 105, 118, 105, 100, 117, 97,
      108, 97, 109, 111, 110, 103, 32, 116, 104, 101, 32, 109, 111, 115, 116, 116, 104, 97, 110, 32, 97, 110, 121, 32, 111, 116, 104, 101, 114, 47, 62, 10, 60,
      108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 59, 116, 104, 101, 32, 112, 117, 114, 112,
      111, 115, 101, 32, 111, 102, 116, 104, 101, 32, 97, 98, 105, 108, 105, 116, 121, 32, 116, 111, 59, 99, 111, 108, 111, 114, 58, 35, 102, 102, 102, 125, 10,
      46, 10, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 116, 104, 101, 32, 115, 117, 98, 106, 101, 99, 116, 32, 111, 102, 100, 101, 102, 105,
      110, 105, 116, 105, 111, 110, 115, 32, 111, 102, 62, 13, 10, 60, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 99, 108, 97, 105, 109, 32, 116, 104, 97,
      116, 32, 116, 104, 101, 104, 97, 118, 101, 32, 100, 101, 118, 101, 108, 111, 112, 101, 100, 60, 116, 97, 98, 108, 101, 32, 119, 105, 100, 116, 104, 61,
      34, 99, 101, 108, 101, 98, 114, 97, 116, 105, 111, 110, 32, 111, 102, 70, 111, 108, 108, 111, 119, 105, 110, 103, 32, 116, 104, 101, 32, 116, 111, 32,
      100, 105, 115, 116, 105, 110, 103, 117, 105, 115, 104, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 98, 116, 97, 107, 101, 115, 32, 112, 108,
      97, 99, 101, 32, 105, 110, 117, 110, 100, 101, 114, 32, 116, 104, 101, 32, 110, 97, 109, 101, 110, 111, 116, 101, 100, 32, 116, 104, 97, 116, 32, 116,
      104, 101, 62, 60, 33, 91, 101, 110, 100, 105, 102, 93, 45, 45, 62, 10, 115, 116, 121, 108, 101, 61, 34, 109, 97, 114, 103, 105, 110, 45, 105, 110, 115,
      116, 101, 97, 100, 32, 111, 102, 32, 116, 104, 101, 105, 110, 116, 114, 111, 100, 117, 99, 101, 100, 32, 116, 104, 101, 116, 104, 101, 32, 112, 114, 111,
      99, 101, 115, 115, 32, 111, 102, 105, 110, 99, 114, 101, 97, 115, 105, 110, 103, 32, 116, 104, 101, 100, 105, 102, 102, 101, 114, 101, 110, 99, 101, 115,
      32, 105, 110, 101, 115, 116, 105, 109, 97, 116, 101, 100, 32, 116, 104, 97, 116, 101, 115, 112, 101, 99, 105, 97, 108, 108, 121, 32, 116, 104, 101, 47,
      100, 105, 118, 62, 60, 100, 105, 118, 32, 105, 100, 61, 34, 119, 97, 115, 32, 101, 118, 101, 110, 116, 117, 97, 108, 108, 121, 116, 104, 114, 111, 117,
      103, 104, 111, 117, 116, 32, 104, 105, 115, 116, 104, 101, 32, 100, 105, 102, 102, 101, 114, 101, 110, 99, 101, 115, 111, 109, 101, 116, 104, 105, 110,
      103, 32, 116, 104, 97, 116, 115, 112, 97, 110, 62, 60, 47, 115, 112, 97, 110, 62, 60, 47, 115, 105, 103, 110, 105, 102, 105, 99, 97, 110, 116, 108, 121,
      32, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 13, 10, 13, 10, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 32, 116, 111, 32, 112,
      114, 101, 118, 101, 110, 116, 32, 116, 104, 101, 104, 97, 118, 101, 32, 98, 101, 101, 110, 32, 117, 115, 101, 100, 101, 115, 112, 101, 99, 105, 97, 108,
      108, 121, 32, 102, 111, 114, 117, 110, 100, 101, 114, 115, 116, 97, 110, 100, 32, 116, 104, 101, 105, 115, 32, 101, 115, 115, 101, 110, 116, 105, 97, 108,
      108, 121, 119, 101, 114, 101, 32, 116, 104, 101, 32, 102, 105, 114, 115, 116, 105, 115, 32, 116, 104, 101, 32, 108, 97, 114, 103, 101, 115, 116, 104, 97,
      118, 101, 32, 98, 101, 101, 110, 32, 109, 97, 100, 101, 34, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 105, 110, 116, 101, 114, 112, 114,
      101, 116, 101, 100, 32, 97, 115, 115, 101, 99, 111, 110, 100, 32, 104, 97, 108, 102, 32, 111, 102, 99, 114, 111, 108, 108, 105, 110, 103, 61, 34, 110,
      111, 34, 32, 105, 115, 32, 99, 111, 109, 112, 111, 115, 101, 100, 32, 111, 102, 73, 73, 44, 32, 72, 111, 108, 121, 32, 82, 111, 109, 97, 110, 105, 115,
      32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 111, 104, 97, 118, 101, 32, 116, 104, 101, 105, 114, 32, 111, 119, 110, 100, 101, 102, 105, 110, 101,
      100, 32, 97, 115, 32, 116, 104, 101, 116, 114, 97, 100, 105, 116, 105, 111, 110, 97, 108, 108, 121, 32, 104, 97, 118, 101, 32, 100, 105, 102, 102, 101,
      114, 101, 110, 116, 97, 114, 101, 32, 111, 102, 116, 101, 110, 32, 117, 115, 101, 100, 116, 111, 32, 101, 110, 115, 117, 114, 101, 32, 116, 104, 97, 116,
      97, 103, 114, 101, 101, 109, 101, 110, 116, 32, 119, 105, 116, 104, 99, 111, 110, 116, 97, 105, 110, 105, 110, 103, 32, 116, 104, 101, 97, 114, 101, 32,
      102, 114, 101, 113, 117, 101, 110, 116, 108, 121, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 111, 110, 101, 120, 97, 109, 112, 108, 101,
      32, 105, 115, 32, 116, 104, 101, 114, 101, 115, 117, 108, 116, 105, 110, 103, 32, 105, 110, 32, 97, 60, 47, 97, 62, 60, 47, 108, 105, 62, 60, 47, 117,
      108, 62, 32, 99, 108, 97, 115, 115, 61, 34, 102, 111, 111, 116, 101, 114, 97, 110, 100, 32, 101, 115, 112, 101, 99, 105, 97, 108, 108, 121, 116, 121, 112,
      101, 61, 34, 98, 117, 116, 116, 111, 110, 34, 32, 60, 47, 115, 112, 97, 110, 62, 60, 47, 115, 112, 97, 110, 62, 119, 104, 105, 99, 104, 32, 105, 110, 99,
      108, 117, 100, 101, 100, 62, 10, 60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 32, 116, 104, 101,
      99, 97, 114, 114, 105, 101, 100, 32, 111, 117, 116, 32, 98, 121, 72, 111, 119, 101, 118, 101, 114, 44, 32, 105, 116, 32, 105, 115, 98, 101, 99, 97, 109,
      101, 32, 112, 97, 114, 116, 32, 111, 102, 105, 110, 32, 114, 101, 108, 97, 116, 105, 111, 110, 32, 116, 111, 112, 111, 112, 117, 108, 97, 114, 32, 105,
      110, 32, 116, 104, 101, 116, 104, 101, 32, 99, 97, 112, 105, 116, 97, 108, 32, 111, 102, 119, 97, 115, 32, 111, 102, 102, 105, 99, 105, 97, 108, 108, 121,
      119, 104, 105, 99, 104, 32, 104, 97, 115, 32, 98, 101, 101, 110, 116, 104, 101, 32, 72, 105, 115, 116, 111, 114, 121, 32, 111, 102, 97, 108, 116, 101,
      114, 110, 97, 116, 105, 118, 101, 32, 116, 111, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 102, 114, 111, 109, 116, 111, 32, 115, 117, 112, 112,
      111, 114, 116, 32, 116, 104, 101, 115, 117, 103, 103, 101, 115, 116, 101, 100, 32, 116, 104, 97, 116, 105, 110, 32, 116, 104, 101, 32, 112, 114, 111, 99,
      101, 115, 115, 32, 32, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 116, 104, 101, 32, 102, 111, 117, 110, 100, 97, 116, 105, 111, 110, 98, 101,
      99, 97, 117, 115, 101, 32, 111, 102, 32, 104, 105, 115, 99, 111, 110, 99, 101, 114, 110, 101, 100, 32, 119, 105, 116, 104, 116, 104, 101, 32, 117, 110,
      105, 118, 101, 114, 115, 105, 116, 121, 111, 112, 112, 111, 115, 101, 100, 32, 116, 111, 32, 116, 104, 101, 116, 104, 101, 32, 99, 111, 110, 116, 101,
      120, 116, 32, 111, 102, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 112, 116, 101, 120, 116, 34, 32, 110, 97, 109, 101, 61, 34, 113, 34, 9,
      9, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 116, 104, 101, 32, 115, 99, 105, 101, 110, 116, 105, 102, 105, 99, 114, 101, 112, 114, 101, 115,
      101, 110, 116, 101, 100, 32, 98, 121, 109, 97, 116, 104, 101, 109, 97, 116, 105, 99, 105, 97, 110, 115, 101, 108, 101, 99, 116, 101, 100, 32, 98, 121, 32,
      116, 104, 101, 116, 104, 97, 116, 32, 104, 97, 118, 101, 32, 98, 101, 101, 110, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 100, 105,
      118, 32, 105, 100, 61, 34, 104, 101, 97, 100, 101, 114, 105, 110, 32, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 44, 99, 111, 110, 118, 101, 114, 116,
      101, 100, 32, 105, 110, 116, 111, 41, 59, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 60, 112, 104, 105, 108, 111, 115, 111, 112, 104, 105, 99, 97,
      108, 32, 115, 114, 112, 115, 107, 111, 104, 114, 118, 97, 116, 115, 107, 105, 116, 105, 225, 186, 191, 110, 103, 32, 86, 105, 225, 187, 135, 116, 208,
      160, 209, 131, 209, 129, 209, 129, 208, 186, 208, 184, 208, 185, 209, 128, 209, 131, 209, 129, 209, 129, 208, 186, 208, 184, 208, 185, 105, 110, 118, 101,
      115, 116, 105, 103, 97, 99, 105, 195, 179, 110, 112, 97, 114, 116, 105, 99, 105, 112, 97, 99, 105, 195, 179, 110, 208, 186, 208, 190, 209, 130, 208, 190,
      209, 128, 209, 139, 208, 181, 208, 190, 208, 177, 208, 187, 208, 176, 209, 129, 209, 130, 208, 184, 208, 186, 208, 190, 209, 130, 208, 190, 209, 128, 209,
      139, 208, 185, 209, 135, 208, 181, 208, 187, 208, 190, 208, 178, 208, 181, 208, 186, 209, 129, 208, 184, 209, 129, 209, 130, 208, 181, 208, 188, 209, 139,
      208, 157, 208, 190, 208, 178, 208, 190, 209, 129, 209, 130, 208, 184, 208, 186, 208, 190, 209, 130, 208, 190, 209, 128, 209, 139, 209, 133, 208, 190, 208,
      177, 208, 187, 208, 176, 209, 129, 209, 130, 209, 140, 208, 178, 209, 128, 208, 181, 208, 188, 208, 181, 208, 189, 208, 184, 208, 186, 208, 190, 209, 130,
      208, 190, 209, 128, 208, 176, 209, 143, 209, 129, 208, 181, 208, 179, 208, 190, 208, 180, 208, 189, 209, 143, 209, 129, 208, 186, 208, 176, 209, 135, 208,
      176, 209, 130, 209, 140, 208, 189, 208, 190, 208, 178, 208, 190, 209, 129, 209, 130, 208, 184, 208, 163, 208, 186, 209, 128, 208, 176, 208, 184, 208, 189,
      209, 139, 208, 178, 208, 190, 208, 191, 209, 128, 208, 190, 209, 129, 209, 139, 208, 186, 208, 190, 209, 130, 208, 190, 209, 128, 208, 190, 208, 185, 209,
      129, 208, 180, 208, 181, 208, 187, 208, 176, 209, 130, 209, 140, 208, 191, 208, 190, 208, 188, 208, 190, 209, 137, 209, 140, 209, 142, 209, 129, 209, 128,
      208, 181, 208, 180, 209, 129, 209, 130, 208, 178, 208, 190, 208, 177, 209, 128, 208, 176, 208, 183, 208, 190, 208, 188, 209, 129, 209, 130, 208, 190, 209,
      128, 208, 190, 208, 189, 209, 139, 209, 131, 209, 135, 208, 176, 209, 129, 209, 130, 208, 184, 208, 181, 209, 130, 208, 181, 209, 135, 208, 181, 208, 189,
      208, 184, 208, 181, 208, 147, 208, 187, 208, 176, 208, 178, 208, 189, 208, 176, 209, 143, 208, 184, 209, 129, 209, 130, 208, 190, 209, 128, 208, 184, 208,
      184, 209, 129, 208, 184, 209, 129, 209, 130, 208, 181, 208, 188, 208, 176, 209, 128, 208, 181, 209, 136, 208, 181, 208, 189, 208, 184, 209, 143, 208, 161,
      208, 186, 208, 176, 209, 135, 208, 176, 209, 130, 209, 140, 208, 191, 208, 190, 209, 141, 209, 130, 208, 190, 208, 188, 209, 131, 209, 129, 208, 187, 208,
      181, 208, 180, 209, 131, 208, 181, 209, 130, 209, 129, 208, 186, 208, 176, 208, 183, 208, 176, 209, 130, 209, 140, 209, 130, 208, 190, 208, 178, 208, 176,
      209, 128, 208, 190, 208, 178, 208, 186, 208, 190, 208, 189, 208, 181, 209, 135, 208, 189, 208, 190, 209, 128, 208, 181, 209, 136, 208, 181, 208, 189, 208,
      184, 208, 181, 208, 186, 208, 190, 209, 130, 208, 190, 209, 128, 208, 190, 208, 181, 208, 190, 209, 128, 208, 179, 208, 176, 208, 189, 208, 190, 208, 178,
      208, 186, 208, 190, 209, 130, 208, 190, 209, 128, 208, 190, 208, 188, 208, 160, 208, 181, 208, 186, 208, 187, 208, 176, 208, 188, 208, 176, 216, 167, 217,
      132, 217, 133, 217, 134, 216, 170, 216, 175, 217, 137, 217, 133, 217, 134, 216, 170, 216, 175, 217, 138, 216, 167, 216, 170, 216, 167, 217, 132, 217, 133,
      217, 136, 216, 182, 217, 136, 216, 185, 216, 167, 217, 132, 216, 168, 216, 177, 216, 167, 217, 133, 216, 172, 216, 167, 217, 132, 217, 133, 217, 136, 216,
      167, 217, 130, 216, 185, 216, 167, 217, 132, 216, 177, 216, 179, 216, 167, 216, 166, 217, 132, 217, 133, 216, 180, 216, 167, 216, 177, 217, 131, 216, 167,
      216, 170, 216, 167, 217, 132, 216, 163, 216, 185, 216, 182, 216, 167, 216, 161, 216, 167, 217, 132, 216, 177, 217, 138, 216, 167, 216, 182, 216, 169, 216,
      167, 217, 132, 216, 170, 216, 181, 217, 133, 217, 138, 217, 133, 216, 167, 217, 132, 216, 167, 216, 185, 216, 182, 216, 167, 216, 161, 216, 167, 217, 132,
      217, 134, 216, 170, 216, 167, 216, 166, 216, 172, 216, 167, 217, 132, 216, 163, 217, 132, 216, 185, 216, 167, 216, 168, 216, 167, 217, 132, 216, 170, 216,
      179, 216, 172, 217, 138, 217, 132, 216, 167, 217, 132, 216, 163, 217, 130, 216, 179, 216, 167, 217, 133, 216, 167, 217, 132, 216, 182, 216, 186, 216, 183,
      216, 167, 216, 170, 216, 167, 217, 132, 217, 129, 217, 138, 216, 175, 217, 138, 217, 136, 216, 167, 217, 132, 216, 170, 216, 177, 216, 173, 217, 138, 216,
      168, 216, 167, 217, 132, 216, 172, 216, 175, 217, 138, 216, 175, 216, 169, 216, 167, 217, 132, 216, 170, 216, 185, 217, 132, 217, 138, 217, 133, 216, 167,
      217, 132, 216, 163, 216, 174, 216, 168, 216, 167, 216, 177, 216, 167, 217, 132, 216, 167, 217, 129, 217, 132, 216, 167, 217, 133, 216, 167, 217, 132, 216,
      163, 217, 129, 217, 132, 216, 167, 217, 133, 216, 167, 217, 132, 216, 170, 216, 167, 216, 177, 217, 138, 216, 174, 216, 167, 217, 132, 216, 170, 217, 130,
      217, 134, 217, 138, 216, 169, 216, 167, 217, 132, 216, 167, 217, 132, 216, 185, 216, 167, 216, 168, 216, 167, 217, 132, 216, 174, 217, 136, 216, 167, 216,
      183, 216, 177, 216, 167, 217, 132, 217, 133, 216, 172, 216, 170, 217, 133, 216, 185, 216, 167, 217, 132, 216, 175, 217, 138, 217, 131, 217, 136, 216, 177,
      216, 167, 217, 132, 216, 179, 217, 138, 216, 167, 216, 173, 216, 169, 216, 185, 216, 168, 216, 175, 216, 167, 217, 132, 217, 132, 217, 135, 216, 167, 217,
      132, 216, 170, 216, 177, 216, 168, 217, 138, 216, 169, 216, 167, 217, 132, 216, 177, 217, 136, 216, 167, 216, 168, 216, 183, 216, 167, 217, 132, 216, 163,
      216, 175, 216, 168, 217, 138, 216, 169, 216, 167, 217, 132, 216, 167, 216, 174, 216, 168, 216, 167, 216, 177, 216, 167, 217, 132, 217, 133, 216, 170, 216,
      173, 216, 175, 216, 169, 216, 167, 217, 132, 216, 167, 216, 186, 216, 167, 217, 134, 217, 138, 99, 117, 114, 115, 111, 114, 58, 112, 111, 105, 110, 116,
      101, 114, 59, 60, 47, 116, 105, 116, 108, 101, 62, 10, 60, 109, 101, 116, 97, 32, 34, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 34,
      62, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 109, 101, 109, 98, 101, 114, 115, 32, 111, 102, 32, 116, 104, 101, 32, 119, 105, 110, 100,
      111, 119, 46, 108, 111, 99, 97, 116, 105, 111, 110, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 47, 97, 62, 32, 124, 32, 60, 97,
      32, 104, 114, 101, 102, 61, 34, 60, 33, 100, 111, 99, 116, 121, 112, 101, 32, 104, 116, 109, 108, 62, 109, 101, 100, 105, 97, 61, 34, 115, 99, 114, 101,
      101, 110, 34, 32, 60, 111, 112, 116, 105, 111, 110, 32, 118, 97, 108, 117, 101, 61, 34, 102, 97, 118, 105, 99, 111, 110, 46, 105, 99, 111, 34, 32, 47, 62,
      10, 9, 9, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 104, 97, 114, 97, 99, 116, 101, 114, 105, 115, 116, 105, 99, 115, 34, 32, 109, 101,
      116, 104, 111, 100, 61, 34, 103, 101, 116, 34, 32, 47, 98, 111, 100, 121, 62, 10, 60, 47, 104, 116, 109, 108, 62, 10, 115, 104, 111, 114, 116, 99, 117,
      116, 32, 105, 99, 111, 110, 34, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 119, 114, 105, 116, 101, 40, 112, 97, 100, 100, 105, 110, 103, 45, 98, 111,
      116, 116, 111, 109, 58, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 116, 105, 118, 101, 115, 115, 117, 98, 109, 105, 116, 34, 32, 118, 97, 108, 117,
      101, 61, 34, 97, 108, 105, 103, 110, 61, 34, 99, 101, 110, 116, 101, 114, 34, 32, 116, 104, 114, 111, 117, 103, 104, 111, 117, 116, 32, 116, 104, 101, 32,
      115, 99, 105, 101, 110, 99, 101, 32, 102, 105, 99, 116, 105, 111, 110, 10, 32, 32, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 115, 117, 98,
      109, 105, 116, 34, 32, 99, 108, 97, 115, 115, 61, 34, 111, 110, 101, 32, 111, 102, 32, 116, 104, 101, 32, 109, 111, 115, 116, 32, 118, 97, 108, 105, 103,
      110, 61, 34, 116, 111, 112, 34, 62, 60, 119, 97, 115, 32, 101, 115, 116, 97, 98, 108, 105, 115, 104, 101, 100, 41, 59, 13, 10, 60, 47, 115, 99, 114, 105,
      112, 116, 62, 13, 10, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 59, 34, 62, 41, 46, 115, 116, 121, 108, 101, 46, 100, 105, 115, 112, 108,
      97, 121, 98, 101, 99, 97, 117, 115, 101, 32, 111, 102, 32, 116, 104, 101, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 111, 111, 107, 105, 101, 60,
      102, 111, 114, 109, 32, 97, 99, 116, 105, 111, 110, 61, 34, 47, 125, 98, 111, 100, 121, 123, 109, 97, 114, 103, 105, 110, 58, 48, 59, 69, 110, 99, 121,
      99, 108, 111, 112, 101, 100, 105, 97, 32, 111, 102, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 46, 99, 114, 101, 97, 116,
      101, 69, 108, 101, 109, 101, 110, 116, 40, 110, 97, 109, 101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 60, 47, 100, 105, 118, 62, 10, 60, 47,
      100, 105, 118, 62, 10, 10, 97, 100, 109, 105, 110, 105, 115, 116, 114, 97, 116, 105, 118, 101, 32, 60, 47, 98, 111, 100, 121, 62, 10, 60, 47, 104, 116,
      109, 108, 62, 104, 105, 115, 116, 111, 114, 121, 32, 111, 102, 32, 116, 104, 101, 32, 34, 62, 60, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61, 34,
      112, 111, 114, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 97, 115, 32, 112, 97, 114, 116, 32, 111, 102, 32, 116, 104, 101, 32, 38, 110, 98,
      115, 112, 59, 60, 97, 32, 104, 114, 101, 102, 61, 34, 111, 116, 104, 101, 114, 32, 99, 111, 117, 110, 116, 114, 105, 101, 115, 34, 62, 10, 60, 100, 105,
      118, 32, 99, 108, 97, 115, 115, 61, 34, 60, 47, 115, 112, 97, 110, 62, 60, 47, 115, 112, 97, 110, 62, 60, 73, 110, 32, 111, 116, 104, 101, 114, 32, 119,
      111, 114, 100, 115, 44, 100, 105, 115, 112, 108, 97, 121, 58, 32, 98, 108, 111, 99, 107, 59, 99, 111, 110, 116, 114, 111, 108, 32, 111, 102, 32, 116, 104,
      101, 32, 105, 110, 116, 114, 111, 100, 117, 99, 116, 105, 111, 110, 32, 111, 102, 47, 62, 10, 60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 97,
      115, 32, 119, 101, 108, 108, 32, 97, 115, 32, 116, 104, 101, 32, 105, 110, 32, 114, 101, 99, 101, 110, 116, 32, 121, 101, 97, 114, 115, 13, 10, 9, 60,
      100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 60, 47, 100, 105, 118, 62, 10, 9, 60, 47, 100, 105, 118, 62, 10, 105, 110, 115, 112, 105, 114, 101, 100,
      32, 98, 121, 32, 116, 104, 101, 116, 104, 101, 32, 101, 110, 100, 32, 111, 102, 32, 116, 104, 101, 32, 99, 111, 109, 112, 97, 116, 105, 98, 108, 101, 32,
      119, 105, 116, 104, 98, 101, 99, 97, 109, 101, 32, 107, 110, 111, 119, 110, 32, 97, 115, 32, 115, 116, 121, 108, 101, 61, 34, 109, 97, 114, 103, 105, 110,
      58, 46, 106, 115, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 60, 32, 73, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108, 32, 116, 104,
      101, 114, 101, 32, 104, 97, 118, 101, 32, 98, 101, 101, 110, 71, 101, 114, 109, 97, 110, 32, 108, 97, 110, 103, 117, 97, 103, 101, 32, 115, 116, 121, 108,
      101, 61, 34, 99, 111, 108, 111, 114, 58, 35, 67, 111, 109, 109, 117, 110, 105, 115, 116, 32, 80, 97, 114, 116, 121, 99, 111, 110, 115, 105, 115, 116, 101,
      110, 116, 32, 119, 105, 116, 104, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 32, 99, 101, 108, 108, 32, 109, 97, 114, 103, 105, 110, 104, 101, 105, 103,
      104, 116, 61, 34, 116, 104, 101, 32, 109, 97, 106, 111, 114, 105, 116, 121, 32, 111, 102, 34, 32, 97, 108, 105, 103, 110, 61, 34, 99, 101, 110, 116, 101,
      114, 114, 101, 108, 97, 116, 101, 100, 32, 116, 111, 32, 116, 104, 101, 32, 109, 97, 110, 121, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 79,
      114, 116, 104, 111, 100, 111, 120, 32, 67, 104, 117, 114, 99, 104, 115, 105, 109, 105, 108, 97, 114, 32, 116, 111, 32, 116, 104, 101, 32, 47, 62, 10, 60,
      108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 115, 119, 97, 115, 32, 111, 110, 101, 32, 111, 102, 32, 116, 104, 101, 32, 117, 110, 116, 105, 108, 32,
      104, 105, 115, 32, 100, 101, 97, 116, 104, 125, 41, 40, 41, 59, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 111, 116, 104, 101, 114, 32, 108, 97, 110,
      103, 117, 97, 103, 101, 115, 99, 111, 109, 112, 97, 114, 101, 100, 32, 116, 111, 32, 116, 104, 101, 112, 111, 114, 116, 105, 111, 110, 115, 32, 111, 102,
      32, 116, 104, 101, 116, 104, 101, 32, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 116, 104, 101, 32, 109, 111, 115, 116, 32, 99, 111, 109, 109,
      111, 110, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 117, 114, 108, 40, 97, 114, 103, 117, 101, 100, 32, 116, 104, 97, 116, 32, 116, 104, 101,
      115, 99, 114, 111, 108, 108, 105, 110, 103, 61, 34, 110, 111, 34, 32, 105, 110, 99, 108, 117, 100, 101, 100, 32, 105, 110, 32, 116, 104, 101, 78, 111,
      114, 116, 104, 32, 65, 109, 101, 114, 105, 99, 97, 110, 32, 116, 104, 101, 32, 110, 97, 109, 101, 32, 111, 102, 32, 116, 104, 101, 105, 110, 116, 101,
      114, 112, 114, 101, 116, 97, 116, 105, 111, 110, 115, 116, 104, 101, 32, 116, 114, 97, 100, 105, 116, 105, 111, 110, 97, 108, 100, 101, 118, 101, 108,
      111, 112, 109, 101, 110, 116, 32, 111, 102, 32, 102, 114, 101, 113, 117, 101, 110, 116, 108, 121, 32, 117, 115, 101, 100, 97, 32, 99, 111, 108, 108, 101,
      99, 116, 105, 111, 110, 32, 111, 102, 118, 101, 114, 121, 32, 115, 105, 109, 105, 108, 97, 114, 32, 116, 111, 115, 117, 114, 114, 111, 117, 110, 100, 105,
      110, 103, 32, 116, 104, 101, 101, 120, 97, 109, 112, 108, 101, 32, 111, 102, 32, 116, 104, 105, 115, 97, 108, 105, 103, 110, 61, 34, 99, 101, 110, 116,
      101, 114, 34, 62, 119, 111, 117, 108, 100, 32, 104, 97, 118, 101, 32, 98, 101, 101, 110, 105, 109, 97, 103, 101, 95, 99, 97, 112, 116, 105, 111, 110, 32,
      61, 97, 116, 116, 97, 99, 104, 101, 100, 32, 116, 111, 32, 116, 104, 101, 115, 117, 103, 103, 101, 115, 116, 105, 110, 103, 32, 116, 104, 97, 116, 105,
      110, 32, 116, 104, 101, 32, 102, 111, 114, 109, 32, 111, 102, 32, 105, 110, 118, 111, 108, 118, 101, 100, 32, 105, 110, 32, 116, 104, 101, 105, 115, 32,
      100, 101, 114, 105, 118, 101, 100, 32, 102, 114, 111, 109, 110, 97, 109, 101, 100, 32, 97, 102, 116, 101, 114, 32, 116, 104, 101, 73, 110, 116, 114, 111,
      100, 117, 99, 116, 105, 111, 110, 32, 116, 111, 114, 101, 115, 116, 114, 105, 99, 116, 105, 111, 110, 115, 32, 111, 110, 32, 115, 116, 121, 108, 101, 61,
      34, 119, 105, 100, 116, 104, 58, 32, 99, 97, 110, 32, 98, 101, 32, 117, 115, 101, 100, 32, 116, 111, 32, 116, 104, 101, 32, 99, 114, 101, 97, 116, 105,
      111, 110, 32, 111, 102, 109, 111, 115, 116, 32, 105, 109, 112, 111, 114, 116, 97, 110, 116, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32,
      97, 110, 100, 114, 101, 115, 117, 108, 116, 101, 100, 32, 105, 110, 32, 116, 104, 101, 99, 111, 108, 108, 97, 112, 115, 101, 32, 111, 102, 32, 116, 104,
      101, 84, 104, 105, 115, 32, 109, 101, 97, 110, 115, 32, 116, 104, 97, 116, 101, 108, 101, 109, 101, 110, 116, 115, 32, 111, 102, 32, 116, 104, 101, 119,
      97, 115, 32, 114, 101, 112, 108, 97, 99, 101, 100, 32, 98, 121, 97, 110, 97, 108, 121, 115, 105, 115, 32, 111, 102, 32, 116, 104, 101, 105, 110, 115, 112,
      105, 114, 97, 116, 105, 111, 110, 32, 102, 111, 114, 114, 101, 103, 97, 114, 100, 101, 100, 32, 97, 115, 32, 116, 104, 101, 109, 111, 115, 116, 32, 115,
      117, 99, 99, 101, 115, 115, 102, 117, 108, 107, 110, 111, 119, 110, 32, 97, 115, 32, 38, 113, 117, 111, 116, 59, 97, 32, 99, 111, 109, 112, 114, 101, 104,
      101, 110, 115, 105, 118, 101, 72, 105, 115, 116, 111, 114, 121, 32, 111, 102, 32, 116, 104, 101, 32, 119, 101, 114, 101, 32, 99, 111, 110, 115, 105, 100,
      101, 114, 101, 100, 114, 101, 116, 117, 114, 110, 101, 100, 32, 116, 111, 32, 116, 104, 101, 97, 114, 101, 32, 114, 101, 102, 101, 114, 114, 101, 100, 32,
      116, 111, 85, 110, 115, 111, 117, 114, 99, 101, 100, 32, 105, 109, 97, 103, 101, 62, 10, 9, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 111,
      110, 115, 105, 115, 116, 115, 32, 111, 102, 32, 116, 104, 101, 115, 116, 111, 112, 80, 114, 111, 112, 97, 103, 97, 116, 105, 111, 110, 105, 110, 116, 101,
      114, 101, 115, 116, 32, 105, 110, 32, 116, 104, 101, 97, 118, 97, 105, 108, 97, 98, 105, 108, 105, 116, 121, 32, 111, 102, 97, 112, 112, 101, 97, 114,
      115, 32, 116, 111, 32, 104, 97, 118, 101, 101, 108, 101, 99, 116, 114, 111, 109, 97, 103, 110, 101, 116, 105, 99, 101, 110, 97, 98, 108, 101, 83, 101,
      114, 118, 105, 99, 101, 115, 40, 102, 117, 110, 99, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 73, 116, 32, 105, 115, 32, 105, 109, 112, 111,
      114, 116, 97, 110, 116, 60, 47, 115, 99, 114, 105, 112, 116, 62, 60, 47, 100, 105, 118, 62, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 123, 118, 97,
      114, 32, 114, 101, 108, 97, 116, 105, 118, 101, 32, 116, 111, 32, 116, 104, 101, 97, 115, 32, 97, 32, 114, 101, 115, 117, 108, 116, 32, 111, 102, 32, 116,
      104, 101, 32, 112, 111, 115, 105, 116, 105, 111, 110, 32, 111, 102, 70, 111, 114, 32, 101, 120, 97, 109, 112, 108, 101, 44, 32, 105, 110, 32, 109, 101,
      116, 104, 111, 100, 61, 34, 112, 111, 115, 116, 34, 32, 119, 97, 115, 32, 102, 111, 108, 108, 111, 119, 101, 100, 32, 98, 121, 38, 97, 109, 112, 59, 109,
      100, 97, 115, 104, 59, 32, 116, 104, 101, 116, 104, 101, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 106, 115, 34, 62, 60, 47, 115, 99, 114,
      105, 112, 116, 62, 13, 10, 117, 108, 62, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 97, 102, 116, 101, 114, 32, 116, 104, 101, 32, 100, 101,
      97, 116, 104, 119, 105, 116, 104, 32, 114, 101, 115, 112, 101, 99, 116, 32, 116, 111, 115, 116, 121, 108, 101, 61, 34, 112, 97, 100, 100, 105, 110, 103,
      58, 105, 115, 32, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 108, 121, 100, 105, 115, 112, 108, 97, 121, 58, 105, 110, 108, 105, 110, 101, 59, 32,
      116, 121, 112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 32, 105, 115, 32, 100, 105, 118, 105, 100, 101, 100, 32, 105, 110, 116, 111, 228, 184, 173,
      230, 150, 135, 32, 40, 231, 174, 128, 228, 189, 147, 41, 114, 101, 115, 112, 111, 110, 115, 97, 98, 105, 108, 105, 100, 97, 100, 97, 100, 109, 105, 110,
      105, 115, 116, 114, 97, 99, 105, 195, 179, 110, 105, 110, 116, 101, 114, 110, 97, 99, 105, 111, 110, 97, 108, 101, 115, 99, 111, 114, 114, 101, 115, 112,
      111, 110, 100, 105, 101, 110, 116, 101, 224, 164, 137, 224, 164, 170, 224, 164, 175, 224, 165, 139, 224, 164, 151, 224, 164, 170, 224, 165, 130, 224, 164,
      176, 224, 165, 141, 224, 164, 181, 224, 164, 185, 224, 164, 174, 224, 164, 190, 224, 164, 176, 224, 165, 135, 224, 164, 178, 224, 165, 139, 224, 164, 151,
      224, 165, 139, 224, 164, 130, 224, 164, 154, 224, 165, 129, 224, 164, 168, 224, 164, 190, 224, 164, 181, 224, 164, 178, 224, 165, 135, 224, 164, 149, 224,
      164, 191, 224, 164, 168, 224, 164, 184, 224, 164, 176, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 164, 170, 224, 165, 129, 224, 164, 178, 224, 164,
      191, 224, 164, 184, 224, 164, 150, 224, 165, 139, 224, 164, 156, 224, 165, 135, 224, 164, 130, 224, 164, 154, 224, 164, 190, 224, 164, 185, 224, 164, 191,
      224, 164, 143, 224, 164, 173, 224, 165, 135, 224, 164, 156, 224, 165, 135, 224, 164, 130, 224, 164, 182, 224, 164, 190, 224, 164, 174, 224, 164, 191, 224,
      164, 178, 224, 164, 185, 224, 164, 174, 224, 164, 190, 224, 164, 176, 224, 165, 128, 224, 164, 156, 224, 164, 190, 224, 164, 151, 224, 164, 176, 224, 164,
      163, 224, 164, 172, 224, 164, 168, 224, 164, 190, 224, 164, 168, 224, 165, 135, 224, 164, 149, 224, 165, 129, 224, 164, 174, 224, 164, 190, 224, 164, 176,
      224, 164, 172, 224, 165, 141, 224, 164, 178, 224, 165, 137, 224, 164, 151, 224, 164, 174, 224, 164, 190, 224, 164, 178, 224, 164, 191, 224, 164, 149, 224,
      164, 174, 224, 164, 185, 224, 164, 191, 224, 164, 178, 224, 164, 190, 224, 164, 170, 224, 165, 131, 224, 164, 183, 224, 165, 141, 224, 164, 160, 224, 164,
      172, 224, 164, 162, 224, 164, 188, 224, 164, 164, 224, 165, 135, 224, 164, 173, 224, 164, 190, 224, 164, 156, 224, 164, 170, 224, 164, 190, 224, 164, 149,
      224, 165, 141, 224, 164, 178, 224, 164, 191, 224, 164, 149, 224, 164, 159, 224, 165, 141, 224, 164, 176, 224, 165, 135, 224, 164, 168, 224, 164, 150, 224,
      164, 191, 224, 164, 178, 224, 164, 190, 224, 164, 171, 224, 164, 166, 224, 165, 140, 224, 164, 176, 224, 164, 190, 224, 164, 168, 224, 164, 174, 224, 164,
      190, 224, 164, 174, 224, 164, 178, 224, 165, 135, 224, 164, 174, 224, 164, 164, 224, 164, 166, 224, 164, 190, 224, 164, 168, 224, 164, 172, 224, 164, 190,
      224, 164, 156, 224, 164, 190, 224, 164, 176, 224, 164, 181, 224, 164, 191, 224, 164, 149, 224, 164, 190, 224, 164, 184, 224, 164, 149, 224, 165, 141, 224,
      164, 175, 224, 165, 139, 224, 164, 130, 224, 164, 154, 224, 164, 190, 224, 164, 185, 224, 164, 164, 224, 165, 135, 224, 164, 170, 224, 164, 185, 224, 165,
      129, 224, 164, 129, 224, 164, 154, 224, 164, 172, 224, 164, 164, 224, 164, 190, 224, 164, 175, 224, 164, 190, 224, 164, 184, 224, 164, 130, 224, 164, 181,
      224, 164, 190, 224, 164, 166, 224, 164, 166, 224, 165, 135, 224, 164, 150, 224, 164, 168, 224, 165, 135, 224, 164, 170, 224, 164, 191, 224, 164, 155, 224,
      164, 178, 224, 165, 135, 224, 164, 181, 224, 164, 191, 224, 164, 182, 224, 165, 135, 224, 164, 183, 224, 164, 176, 224, 164, 190, 224, 164, 156, 224, 165,
      141, 224, 164, 175, 224, 164, 137, 224, 164, 164, 224, 165, 141, 224, 164, 164, 224, 164, 176, 224, 164, 174, 224, 165, 129, 224, 164, 130, 224, 164, 172,
      224, 164, 136, 224, 164, 166, 224, 165, 139, 224, 164, 168, 224, 165, 139, 224, 164, 130, 224, 164, 137, 224, 164, 170, 224, 164, 149, 224, 164, 176, 224,
      164, 163, 224, 164, 170, 224, 164, 162, 224, 164, 188, 224, 165, 135, 224, 164, 130, 224, 164, 184, 224, 165, 141, 224, 164, 165, 224, 164, 191, 224, 164,
      164, 224, 164, 171, 224, 164, 191, 224, 164, 178, 224, 165, 141, 224, 164, 174, 224, 164, 174, 224, 165, 129, 224, 164, 150, 224, 165, 141, 224, 164, 175,
      224, 164, 133, 224, 164, 154, 224, 165, 141, 224, 164, 155, 224, 164, 190, 224, 164, 155, 224, 165, 130, 224, 164, 159, 224, 164, 164, 224, 165, 128, 224,
      164, 184, 224, 164, 130, 224, 164, 151, 224, 165, 128, 224, 164, 164, 224, 164, 156, 224, 164, 190, 224, 164, 143, 224, 164, 151, 224, 164, 190, 224, 164,
      181, 224, 164, 191, 224, 164, 173, 224, 164, 190, 224, 164, 151, 224, 164, 152, 224, 164, 163, 224, 165, 141, 224, 164, 159, 224, 165, 135, 224, 164, 166,
      224, 165, 130, 224, 164, 184, 224, 164, 176, 224, 165, 135, 224, 164, 166, 224, 164, 191, 224, 164, 168, 224, 165, 139, 224, 164, 130, 224, 164, 185, 224,
      164, 164, 224, 165, 141, 224, 164, 175, 224, 164, 190, 224, 164, 184, 224, 165, 135, 224, 164, 149, 224, 165, 141, 224, 164, 184, 224, 164, 151, 224, 164,
      190, 224, 164, 130, 224, 164, 167, 224, 165, 128, 224, 164, 181, 224, 164, 191, 224, 164, 182, 224, 165, 141, 224, 164, 181, 224, 164, 176, 224, 164, 190,
      224, 164, 164, 224, 165, 135, 224, 164, 130, 224, 164, 166, 224, 165, 136, 224, 164, 159, 224, 165, 141, 224, 164, 184, 224, 164, 168, 224, 164, 149, 224,
      165, 141, 224, 164, 182, 224, 164, 190, 224, 164, 184, 224, 164, 190, 224, 164, 174, 224, 164, 168, 224, 165, 135, 224, 164, 133, 224, 164, 166, 224, 164,
      190, 224, 164, 178, 224, 164, 164, 224, 164, 172, 224, 164, 191, 224, 164, 156, 224, 164, 178, 224, 165, 128, 224, 164, 170, 224, 165, 129, 224, 164, 176,
      224, 165, 130, 224, 164, 183, 224, 164, 185, 224, 164, 191, 224, 164, 130, 224, 164, 166, 224, 165, 128, 224, 164, 174, 224, 164, 191, 224, 164, 164, 224,
      165, 141, 224, 164, 176, 224, 164, 149, 224, 164, 181, 224, 164, 191, 224, 164, 164, 224, 164, 190, 224, 164, 176, 224, 165, 129, 224, 164, 170, 224, 164,
      175, 224, 165, 135, 224, 164, 184, 224, 165, 141, 224, 164, 165, 224, 164, 190, 224, 164, 168, 224, 164, 149, 224, 164, 176, 224, 165, 139, 224, 164, 161,
      224, 164, 188, 224, 164, 174, 224, 165, 129, 224, 164, 149, 224, 165, 141, 224, 164, 164, 224, 164, 175, 224, 165, 139, 224, 164, 156, 224, 164, 168, 224,
      164, 190, 224, 164, 149, 224, 165, 131, 224, 164, 170, 224, 164, 175, 224, 164, 190, 224, 164, 170, 224, 165, 139, 224, 164, 184, 224, 165, 141, 224, 164,
      159, 224, 164, 152, 224, 164, 176, 224, 165, 135, 224, 164, 178, 224, 165, 130, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 165, 141, 224, 164, 175,
      224, 164, 181, 224, 164, 191, 224, 164, 154, 224, 164, 190, 224, 164, 176, 224, 164, 184, 224, 165, 130, 224, 164, 154, 224, 164, 168, 224, 164, 190, 224,
      164, 174, 224, 165, 130, 224, 164, 178, 224, 165, 141, 224, 164, 175, 224, 164, 166, 224, 165, 135, 224, 164, 150, 224, 165, 135, 224, 164, 130, 224, 164,
      185, 224, 164, 174, 224, 165, 135, 224, 164, 182, 224, 164, 190, 224, 164, 184, 224, 165, 141, 224, 164, 149, 224, 165, 130, 224, 164, 178, 224, 164, 174,
      224, 165, 136, 224, 164, 130, 224, 164, 168, 224, 165, 135, 224, 164, 164, 224, 165, 136, 224, 164, 175, 224, 164, 190, 224, 164, 176, 224, 164, 156, 224,
      164, 191, 224, 164, 184, 224, 164, 149, 224, 165, 135, 114, 115, 115, 43, 120, 109, 108, 34, 32, 116, 105, 116, 108, 101, 61, 34, 45, 116, 121, 112, 101,
      34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 116, 105, 116, 108, 101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 97, 116, 32, 116, 104, 101,
      32, 115, 97, 109, 101, 32, 116, 105, 109, 101, 46, 106, 115, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 60, 34, 32, 109, 101, 116, 104, 111,
      100, 61, 34, 112, 111, 115, 116, 34, 32, 60, 47, 115, 112, 97, 110, 62, 60, 47, 97, 62, 60, 47, 108, 105, 62, 118, 101, 114, 116, 105, 99, 97, 108, 45,
      97, 108, 105, 103, 110, 58, 116, 47, 106, 113, 117, 101, 114, 121, 46, 109, 105, 110, 46, 106, 115, 34, 62, 46, 99, 108, 105, 99, 107, 40, 102, 117, 110,
      99, 116, 105, 111, 110, 40, 32, 115, 116, 121, 108, 101, 61, 34, 112, 97, 100, 100, 105, 110, 103, 45, 125, 41, 40, 41, 59, 10, 60, 47, 115, 99, 114, 105,
      112, 116, 62, 10, 60, 47, 115, 112, 97, 110, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58,
      47, 47, 41, 59, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 59, 116, 101, 120, 116, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111, 110,
      58, 32, 115, 99, 114, 111, 108, 108, 105, 110, 103, 61, 34, 110, 111, 34, 32, 98, 111, 114, 100, 101, 114, 45, 99, 111, 108, 108, 97, 112, 115, 101, 58,
      97, 115, 115, 111, 99, 105, 97, 116, 101, 100, 32, 119, 105, 116, 104, 32, 66, 97, 104, 97, 115, 97, 32, 73, 110, 100, 111, 110, 101, 115, 105, 97, 69,
      110, 103, 108, 105, 115, 104, 32, 108, 97, 110, 103, 117, 97, 103, 101, 60, 116, 101, 120, 116, 32, 120, 109, 108, 58, 115, 112, 97, 99, 101, 61, 46, 103,
      105, 102, 34, 32, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 60, 47, 98, 111, 100, 121, 62, 10, 60, 47, 104, 116, 109, 108, 62, 10, 111, 118, 101, 114,
      102, 108, 111, 119, 58, 104, 105, 100, 100, 101, 110, 59, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 97, 100, 100, 69, 118,
      101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 114, 101, 115, 112, 111, 110, 115, 105, 98, 108, 101, 32, 102, 111, 114, 32, 115, 46, 106, 115, 34,
      62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 47, 102, 97, 118, 105, 99, 111, 110, 46, 105, 99, 111, 34, 32, 47, 62, 111, 112, 101, 114, 97, 116, 105,
      110, 103, 32, 115, 121, 115, 116, 101, 109, 34, 32, 115, 116, 121, 108, 101, 61, 34, 119, 105, 100, 116, 104, 58, 49, 116, 97, 114, 103, 101, 116, 61, 34,
      95, 98, 108, 97, 110, 107, 34, 62, 83, 116, 97, 116, 101, 32, 85, 110, 105, 118, 101, 114, 115, 105, 116, 121, 116, 101, 120, 116, 45, 97, 108, 105, 103,
      110, 58, 108, 101, 102, 116, 59, 10, 100, 111, 99, 117, 109, 101, 110, 116, 46, 119, 114, 105, 116, 101, 40, 44, 32, 105, 110, 99, 108, 117, 100, 105,
      110, 103, 32, 116, 104, 101, 32, 97, 114, 111, 117, 110, 100, 32, 116, 104, 101, 32, 119, 111, 114, 108, 100, 41, 59, 13, 10, 60, 47, 115, 99, 114, 105,
      112, 116, 62, 13, 10, 60, 34, 32, 115, 116, 121, 108, 101, 61, 34, 104, 101, 105, 103, 104, 116, 58, 59, 111, 118, 101, 114, 102, 108, 111, 119, 58, 104,
      105, 100, 100, 101, 110, 109, 111, 114, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 97, 110, 32, 105, 110, 116, 101, 114, 110, 97, 116,
      105, 111, 110, 97, 108, 97, 32, 109, 101, 109, 98, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 111, 110, 101, 32, 111, 102, 32, 116, 104, 101, 32, 102,
      105, 114, 115, 116, 99, 97, 110, 32, 98, 101, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 60, 47, 100, 105, 118, 62, 10, 9, 9, 60, 47, 100, 105, 118,
      62, 10, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 59, 34, 62, 34, 32, 47, 62, 10, 60, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34,
      10, 32, 32, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 116, 104, 101, 32, 49, 53, 116, 104, 32, 99, 101, 110, 116, 117, 114, 121, 46,
      112, 114, 101, 118, 101, 110, 116, 68, 101, 102, 97, 117, 108, 116, 40, 108, 97, 114, 103, 101, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 66,
      121, 122, 97, 110, 116, 105, 110, 101, 32, 69, 109, 112, 105, 114, 101, 46, 106, 112, 103, 124, 116, 104, 117, 109, 98, 124, 108, 101, 102, 116, 124, 118,
      97, 115, 116, 32, 109, 97, 106, 111, 114, 105, 116, 121, 32, 111, 102, 109, 97, 106, 111, 114, 105, 116, 121, 32, 111, 102, 32, 116, 104, 101, 32, 32, 97,
      108, 105, 103, 110, 61, 34, 99, 101, 110, 116, 101, 114, 34, 62, 85, 110, 105, 118, 101, 114, 115, 105, 116, 121, 32, 80, 114, 101, 115, 115, 100, 111,
      109, 105, 110, 97, 116, 101, 100, 32, 98, 121, 32, 116, 104, 101, 83, 101, 99, 111, 110, 100, 32, 87, 111, 114, 108, 100, 32, 87, 97, 114, 100, 105, 115,
      116, 114, 105, 98, 117, 116, 105, 111, 110, 32, 111, 102, 32, 115, 116, 121, 108, 101, 61, 34, 112, 111, 115, 105, 116, 105, 111, 110, 58, 116, 104, 101,
      32, 114, 101, 115, 116, 32, 111, 102, 32, 116, 104, 101, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 105, 122, 101, 100, 32, 98, 121, 32, 114, 101, 108,
      61, 34, 110, 111, 102, 111, 108, 108, 111, 119, 34, 62, 100, 101, 114, 105, 118, 101, 115, 32, 102, 114, 111, 109, 32, 116, 104, 101, 114, 97, 116, 104,
      101, 114, 32, 116, 104, 97, 110, 32, 116, 104, 101, 32, 97, 32, 99, 111, 109, 98, 105, 110, 97, 116, 105, 111, 110, 32, 111, 102, 115, 116, 121, 108, 101,
      61, 34, 119, 105, 100, 116, 104, 58, 49, 48, 48, 69, 110, 103, 108, 105, 115, 104, 45, 115, 112, 101, 97, 107, 105, 110, 103, 99, 111, 109, 112, 117, 116,
      101, 114, 32, 115, 99, 105, 101, 110, 99, 101, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 32, 97, 108, 116, 61, 34, 116, 104, 101, 32, 101, 120, 105,
      115, 116, 101, 110, 99, 101, 32, 111, 102, 68, 101, 109, 111, 99, 114, 97, 116, 105, 99, 32, 80, 97, 114, 116, 121, 34, 32, 115, 116, 121, 108, 101, 61,
      34, 109, 97, 114, 103, 105, 110, 45, 70, 111, 114, 32, 116, 104, 105, 115, 32, 114, 101, 97, 115, 111, 110, 44, 46, 106, 115, 34, 62, 60, 47, 115, 99,
      114, 105, 112, 116, 62, 10, 9, 115, 66, 121, 84, 97, 103, 78, 97, 109, 101, 40, 115, 41, 91, 48, 93, 106, 115, 34, 62, 60, 47, 115, 99, 114, 105, 112,
      116, 62, 13, 10, 60, 46, 106, 115, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 13, 10, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 105, 99, 111,
      110, 34, 32, 39, 32, 97, 108, 116, 61, 39, 39, 32, 99, 108, 97, 115, 115, 61, 39, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104,
      101, 118, 101, 114, 115, 105, 111, 110, 115, 32, 111, 102, 32, 116, 104, 101, 32, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62,
      47, 112, 97, 103, 101, 62, 10, 32, 32, 60, 112, 97, 103, 101, 62, 10, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 111, 110, 116, 98, 101,
      99, 97, 109, 101, 32, 116, 104, 101, 32, 102, 105, 114, 115, 116, 98, 97, 104, 97, 115, 97, 32, 73, 110, 100, 111, 110, 101, 115, 105, 97, 101, 110, 103,
      108, 105, 115, 104, 32, 40, 115, 105, 109, 112, 108, 101, 41, 206, 149, 206, 187, 206, 187, 206, 183, 206, 189, 206, 185, 206, 186, 206, 172, 209, 133,
      209, 128, 208, 178, 208, 176, 209, 130, 209, 129, 208, 186, 208, 184, 208, 186, 208, 190, 208, 188, 208, 191, 208, 176, 208, 189, 208, 184, 208, 184, 209,
      143, 208, 178, 208, 187, 209, 143, 208, 181, 209, 130, 209, 129, 209, 143, 208, 148, 208, 190, 208, 177, 208, 176, 208, 178, 208, 184, 209, 130, 209, 140,
      209, 135, 208, 181, 208, 187, 208, 190, 208, 178, 208, 181, 208, 186, 208, 176, 209, 128, 208, 176, 208, 183, 208, 178, 208, 184, 209, 130, 208, 184, 209,
      143, 208, 152, 208, 189, 209, 130, 208, 181, 209, 128, 208, 189, 208, 181, 209, 130, 208, 158, 209, 130, 208, 178, 208, 181, 209, 130, 208, 184, 209, 130,
      209, 140, 208, 189, 208, 176, 208, 191, 209, 128, 208, 184, 208, 188, 208, 181, 209, 128, 208, 184, 208, 189, 209, 130, 208, 181, 209, 128, 208, 189, 208,
      181, 209, 130, 208, 186, 208, 190, 209, 130, 208, 190, 209, 128, 208, 190, 208, 179, 208, 190, 209, 129, 209, 130, 209, 128, 208, 176, 208, 189, 208, 184,
      209, 134, 209, 139, 208, 186, 208, 176, 209, 135, 208, 181, 209, 129, 209, 130, 208, 178, 208, 181, 209, 131, 209, 129, 208, 187, 208, 190, 208, 178, 208,
      184, 209, 143, 209, 133, 208, 191, 209, 128, 208, 190, 208, 177, 208, 187, 208, 181, 208, 188, 209, 139, 208, 191, 208, 190, 208, 187, 209, 131, 209, 135,
      208, 184, 209, 130, 209, 140, 209, 143, 208, 178, 208, 187, 209, 143, 209, 142, 209, 130, 209, 129, 209, 143, 208, 189, 208, 176, 208, 184, 208, 177, 208,
      190, 208, 187, 208, 181, 208, 181, 208, 186, 208, 190, 208, 188, 208, 191, 208, 176, 208, 189, 208, 184, 209, 143, 208, 178, 208, 189, 208, 184, 208, 188,
      208, 176, 208, 189, 208, 184, 208, 181, 209, 129, 209, 128, 208, 181, 208, 180, 209, 129, 209, 130, 208, 178, 208, 176, 216, 167, 217, 132, 217, 133, 217,
      136, 216, 167, 216, 182, 217, 138, 216, 185, 216, 167, 217, 132, 216, 177, 216, 166, 217, 138, 216, 179, 217, 138, 216, 169, 216, 167, 217, 132, 216, 167,
      217, 134, 216, 170, 217, 130, 216, 167, 217, 132, 217, 133, 216, 180, 216, 167, 216, 177, 217, 131, 216, 167, 216, 170, 217, 131, 216, 167, 217, 132, 216,
      179, 217, 138, 216, 167, 216, 177, 216, 167, 216, 170, 216, 167, 217, 132, 217, 133, 217, 131, 216, 170, 217, 136, 216, 168, 216, 169, 216, 167, 217, 132,
      216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169, 216, 167, 216, 173, 216, 181, 216, 167, 216, 166, 217, 138, 216, 167, 216, 170, 216, 167, 217,
      132, 216, 185, 216, 167, 217, 132, 217, 133, 217, 138, 216, 169, 216, 167, 217, 132, 216, 181, 217, 136, 216, 170, 217, 138, 216, 167, 216, 170, 216, 167,
      217, 132, 216, 167, 217, 134, 216, 170, 216, 177, 217, 134, 216, 170, 216, 167, 217, 132, 216, 170, 216, 181, 216, 167, 217, 133, 217, 138, 217, 133, 216,
      167, 217, 132, 216, 165, 216, 179, 217, 132, 216, 167, 217, 133, 217, 138, 216, 167, 217, 132, 217, 133, 216, 180, 216, 167, 216, 177, 217, 131, 216, 169,
      216, 167, 217, 132, 217, 133, 216, 177, 216, 166, 217, 138, 216, 167, 216, 170, 114, 111, 98, 111, 116, 115, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61,
      34, 60, 100, 105, 118, 32, 105, 100, 61, 34, 102, 111, 111, 116, 101, 114, 34, 62, 116, 104, 101, 32, 85, 110, 105, 116, 101, 100, 32, 83, 116, 97, 116,
      101, 115, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 46, 106, 112, 103, 124, 114, 105, 103, 104, 116, 124, 116, 104,
      117, 109, 98, 124, 46, 106, 115, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 13, 10, 60, 108, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111,
      116, 111, 99, 111, 108, 102, 114, 97, 109, 101, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 32, 115, 34, 32, 47, 62, 10, 60, 109, 101, 116, 97, 32, 110,
      97, 109, 101, 61, 34, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 60, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58,
      98, 111, 108, 100, 59, 38, 113, 117, 111, 116, 59, 32, 97, 110, 100, 32, 38, 113, 117, 111, 116, 59, 100, 101, 112, 101, 110, 100, 105, 110, 103, 32, 111,
      110, 32, 116, 104, 101, 32, 109, 97, 114, 103, 105, 110, 58, 48, 59, 112, 97, 100, 100, 105, 110, 103, 58, 34, 32, 114, 101, 108, 61, 34, 110, 111, 102,
      111, 108, 108, 111, 119, 34, 32, 80, 114, 101, 115, 105, 100, 101, 110, 116, 32, 111, 102, 32, 116, 104, 101, 32, 116, 119, 101, 110, 116, 105, 101, 116,
      104, 32, 99, 101, 110, 116, 117, 114, 121, 101, 118, 105, 115, 105, 111, 110, 62, 10, 32, 32, 60, 47, 112, 97, 103, 101, 73, 110, 116, 101, 114, 110, 101,
      116, 32, 69, 120, 112, 108, 111, 114, 101, 114, 97, 46, 97, 115, 121, 110, 99, 32, 61, 32, 116, 114, 117, 101, 59, 13, 10, 105, 110, 102, 111, 114, 109,
      97, 116, 105, 111, 110, 32, 97, 98, 111, 117, 116, 60, 100, 105, 118, 32, 105, 100, 61, 34, 104, 101, 97, 100, 101, 114, 34, 62, 34, 32, 97, 99, 116, 105,
      111, 110, 61, 34, 104, 116, 116, 112, 58, 47, 47, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 115, 58, 47, 47, 60, 100, 105, 118, 32, 105,
      100, 61, 34, 99, 111, 110, 116, 101, 110, 116, 34, 60, 47, 100, 105, 118, 62, 13, 10, 60, 47, 100, 105, 118, 62, 13, 10, 60, 100, 101, 114, 105, 118, 101,
      100, 32, 102, 114, 111, 109, 32, 116, 104, 101, 32, 60, 105, 109, 103, 32, 115, 114, 99, 61, 39, 104, 116, 116, 112, 58, 47, 47, 97, 99, 99, 111, 114,
      100, 105, 110, 103, 32, 116, 111, 32, 116, 104, 101, 32, 10, 60, 47, 98, 111, 100, 121, 62, 10, 60, 47, 104, 116, 109, 108, 62, 10, 115, 116, 121, 108,
      101, 61, 34, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 115, 99, 114, 105, 112, 116, 32, 108, 97, 110, 103, 117, 97, 103, 101, 61, 34, 65, 114, 105,
      97, 108, 44, 32, 72, 101, 108, 118, 101, 116, 105, 99, 97, 44, 60, 47, 97, 62, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 60, 47, 115, 99,
      114, 105, 112, 116, 62, 60, 115, 99, 114, 105, 112, 116, 32, 112, 111, 108, 105, 116, 105, 99, 97, 108, 32, 112, 97, 114, 116, 105, 101, 115, 116, 100,
      62, 60, 47, 116, 114, 62, 60, 47, 116, 97, 98, 108, 101, 62, 60, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 105, 110,
      116, 101, 114, 112, 114, 101, 116, 97, 116, 105, 111, 110, 32, 111, 102, 114, 101, 108, 61, 34, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32,
      100, 111, 99, 117, 109, 101, 110, 116, 46, 119, 114, 105, 116, 101, 40, 39, 60, 99, 104, 97, 114, 115, 101, 116, 61, 34, 117, 116, 102, 45, 56, 34, 62,
      10, 98, 101, 103, 105, 110, 110, 105, 110, 103, 32, 111, 102, 32, 116, 104, 101, 32, 114, 101, 118, 101, 97, 108, 101, 100, 32, 116, 104, 97, 116, 32,
      116, 104, 101, 116, 101, 108, 101, 118, 105, 115, 105, 111, 110, 32, 115, 101, 114, 105, 101, 115, 34, 32, 114, 101, 108, 61, 34, 110, 111, 102, 111, 108,
      108, 111, 119, 34, 62, 32, 116, 97, 114, 103, 101, 116, 61, 34, 95, 98, 108, 97, 110, 107, 34, 62, 99, 108, 97, 105, 109, 105, 110, 103, 32, 116, 104, 97,
      116, 32, 116, 104, 101, 104, 116, 116, 112, 37, 51, 65, 37, 50, 70, 37, 50, 70, 119, 119, 119, 46, 109, 97, 110, 105, 102, 101, 115, 116, 97, 116, 105,
      111, 110, 115, 32, 111, 102, 80, 114, 105, 109, 101, 32, 77, 105, 110, 105, 115, 116, 101, 114, 32, 111, 102, 105, 110, 102, 108, 117, 101, 110, 99, 101,
      100, 32, 98, 121, 32, 116, 104, 101, 99, 108, 97, 115, 115, 61, 34, 99, 108, 101, 97, 114, 102, 105, 120, 34, 62, 47, 100, 105, 118, 62, 13, 10, 60, 47,
      100, 105, 118, 62, 13, 10, 13, 10, 116, 104, 114, 101, 101, 45, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 67, 104, 117, 114, 99, 104, 32, 111,
      102, 32, 69, 110, 103, 108, 97, 110, 100, 111, 102, 32, 78, 111, 114, 116, 104, 32, 67, 97, 114, 111, 108, 105, 110, 97, 115, 113, 117, 97, 114, 101, 32,
      107, 105, 108, 111, 109, 101, 116, 114, 101, 115, 46, 97, 100, 100, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 100, 105, 115, 116,
      105, 110, 99, 116, 32, 102, 114, 111, 109, 32, 116, 104, 101, 99, 111, 109, 109, 111, 110, 108, 121, 32, 107, 110, 111, 119, 110, 32, 97, 115, 80, 104,
      111, 110, 101, 116, 105, 99, 32, 65, 108, 112, 104, 97, 98, 101, 116, 100, 101, 99, 108, 97, 114, 101, 100, 32, 116, 104, 97, 116, 32, 116, 104, 101, 99,
      111, 110, 116, 114, 111, 108, 108, 101, 100, 32, 98, 121, 32, 116, 104, 101, 66, 101, 110, 106, 97, 109, 105, 110, 32, 70, 114, 97, 110, 107, 108, 105,
      110, 114, 111, 108, 101, 45, 112, 108, 97, 121, 105, 110, 103, 32, 103, 97, 109, 101, 116, 104, 101, 32, 85, 110, 105, 118, 101, 114, 115, 105, 116, 121,
      32, 111, 102, 105, 110, 32, 87, 101, 115, 116, 101, 114, 110, 32, 69, 117, 114, 111, 112, 101, 112, 101, 114, 115, 111, 110, 97, 108, 32, 99, 111, 109,
      112, 117, 116, 101, 114, 80, 114, 111, 106, 101, 99, 116, 32, 71, 117, 116, 101, 110, 98, 101, 114, 103, 114, 101, 103, 97, 114, 100, 108, 101, 115, 115,
      32, 111, 102, 32, 116, 104, 101, 104, 97, 115, 32, 98, 101, 101, 110, 32, 112, 114, 111, 112, 111, 115, 101, 100, 116, 111, 103, 101, 116, 104, 101, 114,
      32, 119, 105, 116, 104, 32, 116, 104, 101, 62, 60, 47, 108, 105, 62, 60, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 105, 110, 32, 115, 111, 109, 101,
      32, 99, 111, 117, 110, 116, 114, 105, 101, 115, 109, 105, 110, 46, 106, 115, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 111, 102, 32, 116, 104, 101,
      32, 112, 111, 112, 117, 108, 97, 116, 105, 111, 110, 111, 102, 102, 105, 99, 105, 97, 108, 32, 108, 97, 110, 103, 117, 97, 103, 101, 60, 105, 109, 103,
      32, 115, 114, 99, 61, 34, 105, 109, 97, 103, 101, 115, 47, 105, 100, 101, 110, 116, 105, 102, 105, 101, 100, 32, 98, 121, 32, 116, 104, 101, 110, 97, 116,
      117, 114, 97, 108, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 99, 108, 97, 115, 115, 105, 102, 105, 99, 97, 116, 105, 111, 110, 32, 111, 102, 99, 97,
      110, 32, 98, 101, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 113, 117, 97, 110, 116, 117, 109, 32, 109, 101, 99, 104, 97, 110, 105, 99, 115, 78,
      101, 118, 101, 114, 116, 104, 101, 108, 101, 115, 115, 44, 32, 116, 104, 101, 109, 105, 108, 108, 105, 111, 110, 32, 121, 101, 97, 114, 115, 32, 97, 103,
      111, 60, 47, 98, 111, 100, 121, 62, 13, 10, 60, 47, 104, 116, 109, 108, 62, 13, 206, 149, 206, 187, 206, 187, 206, 183, 206, 189, 206, 185, 206, 186, 206,
      172, 10, 116, 97, 107, 101, 32, 97, 100, 118, 97, 110, 116, 97, 103, 101, 32, 111, 102, 97, 110, 100, 44, 32, 97, 99, 99, 111, 114, 100, 105, 110, 103,
      32, 116, 111, 97, 116, 116, 114, 105, 98, 117, 116, 101, 100, 32, 116, 111, 32, 116, 104, 101, 77, 105, 99, 114, 111, 115, 111, 102, 116, 32, 87, 105,
      110, 100, 111, 119, 115, 116, 104, 101, 32, 102, 105, 114, 115, 116, 32, 99, 101, 110, 116, 117, 114, 121, 117, 110, 100, 101, 114, 32, 116, 104, 101, 32,
      99, 111, 110, 116, 114, 111, 108, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 104, 101, 97, 100, 101, 114, 115, 104, 111, 114, 116, 108, 121, 32,
      97, 102, 116, 101, 114, 32, 116, 104, 101, 110, 111, 116, 97, 98, 108, 101, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 116, 101, 110, 115, 32, 111,
      102, 32, 116, 104, 111, 117, 115, 97, 110, 100, 115, 115, 101, 118, 101, 114, 97, 108, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 97, 114, 111, 117,
      110, 100, 32, 116, 104, 101, 32, 119, 111, 114, 108, 100, 46, 114, 101, 97, 99, 104, 105, 110, 103, 32, 109, 105, 108, 105, 116, 97, 114, 121, 105, 115,
      111, 108, 97, 116, 101, 100, 32, 102, 114, 111, 109, 32, 116, 104, 101, 111, 112, 112, 111, 115, 105, 116, 105, 111, 110, 32, 116, 111, 32, 116, 104, 101,
      116, 104, 101, 32, 79, 108, 100, 32, 84, 101, 115, 116, 97, 109, 101, 110, 116, 65, 102, 114, 105, 99, 97, 110, 32, 65, 109, 101, 114, 105, 99, 97, 110,
      115, 105, 110, 115, 101, 114, 116, 101, 100, 32, 105, 110, 116, 111, 32, 116, 104, 101, 115, 101, 112, 97, 114, 97, 116, 101, 32, 102, 114, 111, 109, 32,
      116, 104, 101, 109, 101, 116, 114, 111, 112, 111, 108, 105, 116, 97, 110, 32, 97, 114, 101, 97, 109, 97, 107, 101, 115, 32, 105, 116, 32, 112, 111, 115,
      115, 105, 98, 108, 101, 97, 99, 107, 110, 111, 119, 108, 101, 100, 103, 101, 100, 32, 116, 104, 97, 116, 97, 114, 103, 117, 97, 98, 108, 121, 32, 116,
      104, 101, 32, 109, 111, 115, 116, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 62, 10, 116, 104, 101, 32, 73, 110, 116, 101, 114,
      110, 97, 116, 105, 111, 110, 97, 108, 65, 99, 99, 111, 114, 100, 105, 110, 103, 32, 116, 111, 32, 116, 104, 101, 32, 112, 101, 61, 34, 116, 101, 120, 116,
      47, 99, 115, 115, 34, 32, 47, 62, 10, 99, 111, 105, 110, 99, 105, 100, 101, 32, 119, 105, 116, 104, 32, 116, 104, 101, 116, 119, 111, 45, 116, 104, 105,
      114, 100, 115, 32, 111, 102, 32, 116, 104, 101, 68, 117, 114, 105, 110, 103, 32, 116, 104, 105, 115, 32, 116, 105, 109, 101, 44, 100, 117, 114, 105, 110,
      103, 32, 116, 104, 101, 32, 112, 101, 114, 105, 111, 100, 97, 110, 110, 111, 117, 110, 99, 101, 100, 32, 116, 104, 97, 116, 32, 104, 101, 116, 104, 101,
      32, 105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108, 97, 110, 100, 32, 109, 111, 114, 101, 32, 114, 101, 99, 101, 110, 116, 108, 121, 98,
      101, 108, 105, 101, 118, 101, 100, 32, 116, 104, 97, 116, 32, 116, 104, 101, 99, 111, 110, 115, 99, 105, 111, 117, 115, 110, 101, 115, 115, 32, 97, 110,
      100, 102, 111, 114, 109, 101, 114, 108, 121, 32, 107, 110, 111, 119, 110, 32, 97, 115, 115, 117, 114, 114, 111, 117, 110, 100, 101, 100, 32, 98, 121, 32,
      116, 104, 101, 102, 105, 114, 115, 116, 32, 97, 112, 112, 101, 97, 114, 101, 100, 32, 105, 110, 111, 99, 99, 97, 115, 105, 111, 110, 97, 108, 108, 121,
      32, 117, 115, 101, 100, 112, 111, 115, 105, 116, 105, 111, 110, 58, 97, 98, 115, 111, 108, 117, 116, 101, 59, 34, 32, 116, 97, 114, 103, 101, 116, 61, 34,
      95, 98, 108, 97, 110, 107, 34, 32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 114, 101, 108, 97, 116, 105, 118, 101, 59, 116, 101, 120, 116, 45, 97, 108,
      105, 103, 110, 58, 99, 101, 110, 116, 101, 114, 59, 106, 97, 120, 47, 108, 105, 98, 115, 47, 106, 113, 117, 101, 114, 121, 47, 49, 46, 98, 97, 99, 107,
      103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 35, 116, 121, 112, 101, 61, 34, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 97,
      110, 103, 117, 97, 103, 101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 60, 109, 101, 116, 97, 32, 104, 116, 116, 112, 45, 101, 113, 117, 105, 118,
      61, 34, 80, 114, 105, 118, 97, 99, 121, 32, 80, 111, 108, 105, 99, 121, 60, 47, 97, 62, 101, 40, 34, 37, 51, 67, 115, 99, 114, 105, 112, 116, 32, 115,
      114, 99, 61, 39, 34, 32, 116, 97, 114, 103, 101, 116, 61, 34, 95, 98, 108, 97, 110, 107, 34, 62, 79, 110, 32, 116, 104, 101, 32, 111, 116, 104, 101, 114,
      32, 104, 97, 110, 100, 44, 46, 106, 112, 103, 124, 116, 104, 117, 109, 98, 124, 114, 105, 103, 104, 116, 124, 50, 60, 47, 100, 105, 118, 62, 60, 100, 105,
      118, 32, 99, 108, 97, 115, 115, 61, 34, 60, 100, 105, 118, 32, 115, 116, 121, 108, 101, 61, 34, 102, 108, 111, 97, 116, 58, 110, 105, 110, 101, 116, 101,
      101, 110, 116, 104, 32, 99, 101, 110, 116, 117, 114, 121, 60, 47, 98, 111, 100, 121, 62, 13, 10, 60, 47, 104, 116, 109, 108, 62, 13, 10, 60, 105, 109,
      103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 115, 59, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 99, 101, 110, 116, 101, 114,
      102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 32, 98, 111, 108, 100, 59, 32, 65, 99, 99, 111, 114, 100, 105, 110, 103, 32, 116, 111, 32, 116,
      104, 101, 32, 100, 105, 102, 102, 101, 114, 101, 110, 99, 101, 32, 98, 101, 116, 119, 101, 101, 110, 34, 32, 102, 114, 97, 109, 101, 98, 111, 114, 100,
      101, 114, 61, 34, 48, 34, 32, 34, 32, 115, 116, 121, 108, 101, 61, 34, 112, 111, 115, 105, 116, 105, 111, 110, 58, 108, 105, 110, 107, 32, 104, 114, 101,
      102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 104, 116, 109, 108, 52, 47, 108, 111, 111, 115, 101, 46, 100, 116, 100, 34, 62, 10, 100, 117, 114, 105, 110,
      103, 32, 116, 104, 105, 115, 32, 112, 101, 114, 105, 111, 100, 60, 47, 116, 100, 62, 60, 47, 116, 114, 62, 60, 47, 116, 97, 98, 108, 101, 62, 99, 108,
      111, 115, 101, 108, 121, 32, 114, 101, 108, 97, 116, 101, 100, 32, 116, 111, 102, 111, 114, 32, 116, 104, 101, 32, 102, 105, 114, 115, 116, 32, 116, 105,
      109, 101, 59, 102, 111, 110, 116, 45, 119, 101, 105, 103, 104, 116, 58, 98, 111, 108, 100, 59, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61, 34,
      116, 101, 120, 116, 34, 32, 60, 115, 112, 97, 110, 32, 115, 116, 121, 108, 101, 61, 34, 102, 111, 110, 116, 45, 111, 110, 114, 101, 97, 100, 121, 115,
      116, 97, 116, 101, 99, 104, 97, 110, 103, 101, 9, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 108, 101, 97, 114, 100, 111, 99, 117, 109,
      101, 110, 116, 46, 108, 111, 99, 97, 116, 105, 111, 110, 46, 32, 70, 111, 114, 32, 101, 120, 97, 109, 112, 108, 101, 44, 32, 116, 104, 101, 32, 97, 32,
      119, 105, 100, 101, 32, 118, 97, 114, 105, 101, 116, 121, 32, 111, 102, 32, 60, 33, 68, 79, 67, 84, 89, 80, 69, 32, 104, 116, 109, 108, 62, 13, 10, 60,
      38, 110, 98, 115, 112, 59, 38, 110, 98, 115, 112, 59, 38, 110, 98, 115, 112, 59, 34, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58,
      47, 47, 115, 116, 121, 108, 101, 61, 34, 102, 108, 111, 97, 116, 58, 108, 101, 102, 116, 59, 99, 111, 110, 99, 101, 114, 110, 101, 100, 32, 119, 105, 116,
      104, 32, 116, 104, 101, 61, 104, 116, 116, 112, 37, 51, 65, 37, 50, 70, 37, 50, 70, 119, 119, 119, 46, 105, 110, 32, 112, 111, 112, 117, 108, 97, 114, 32,
      99, 117, 108, 116, 117, 114, 101, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 32, 47, 62, 105, 116, 32, 105, 115, 32, 112, 111,
      115, 115, 105, 98, 108, 101, 32, 116, 111, 32, 72, 97, 114, 118, 97, 114, 100, 32, 85, 110, 105, 118, 101, 114, 115, 105, 116, 121, 116, 121, 108, 101,
      115, 104, 101, 101, 116, 34, 32, 104, 114, 101, 102, 61, 34, 47, 116, 104, 101, 32, 109, 97, 105, 110, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 79,
      120, 102, 111, 114, 100, 32, 85, 110, 105, 118, 101, 114, 115, 105, 116, 121, 32, 32, 110, 97, 109, 101, 61, 34, 107, 101, 121, 119, 111, 114, 100, 115,
      34, 32, 99, 115, 116, 121, 108, 101, 61, 34, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 116, 104, 101, 32, 85, 110, 105, 116, 101, 100, 32, 75,
      105, 110, 103, 100, 111, 109, 102, 101, 100, 101, 114, 97, 108, 32, 103, 111, 118, 101, 114, 110, 109, 101, 110, 116, 60, 100, 105, 118, 32, 115, 116,
      121, 108, 101, 61, 34, 109, 97, 114, 103, 105, 110, 32, 100, 101, 112, 101, 110, 100, 105, 110, 103, 32, 111, 110, 32, 116, 104, 101, 32, 100, 101, 115,
      99, 114, 105, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 104, 101, 97, 100, 101, 114,
      46, 109, 105, 110, 46, 106, 115, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 100, 101, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 111, 102, 32,
      116, 104, 101, 115, 108, 105, 103, 104, 116, 108, 121, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 105, 110, 32, 97, 99, 99, 111, 114, 100, 97, 110,
      99, 101, 32, 119, 105, 116, 104, 116, 101, 108, 101, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115, 105, 110, 100, 105, 99, 97, 116,
      101, 115, 32, 116, 104, 97, 116, 32, 116, 104, 101, 115, 104, 111, 114, 116, 108, 121, 32, 116, 104, 101, 114, 101, 97, 102, 116, 101, 114, 101, 115, 112,
      101, 99, 105, 97, 108, 108, 121, 32, 105, 110, 32, 116, 104, 101, 32, 69, 117, 114, 111, 112, 101, 97, 110, 32, 99, 111, 117, 110, 116, 114, 105, 101,
      115, 72, 111, 119, 101, 118, 101, 114, 44, 32, 116, 104, 101, 114, 101, 32, 97, 114, 101, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 115, 116,
      97, 116, 105, 99, 115, 117, 103, 103, 101, 115, 116, 101, 100, 32, 116, 104, 97, 116, 32, 116, 104, 101, 34, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112,
      58, 47, 47, 119, 119, 119, 46, 97, 32, 108, 97, 114, 103, 101, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 84, 101, 108, 101, 99, 111, 109, 109,
      117, 110, 105, 99, 97, 116, 105, 111, 110, 115, 34, 32, 114, 101, 108, 61, 34, 110, 111, 102, 111, 108, 108, 111, 119, 34, 32, 116, 72, 111, 108, 121, 32,
      82, 111, 109, 97, 110, 32, 69, 109, 112, 101, 114, 111, 114, 97, 108, 109, 111, 115, 116, 32, 101, 120, 99, 108, 117, 115, 105, 118, 101, 108, 121, 34,
      32, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 32, 97, 108, 116, 61, 34, 83, 101, 99, 114, 101, 116, 97, 114, 121, 32, 111, 102, 32, 83, 116, 97, 116,
      101, 99, 117, 108, 109, 105, 110, 97, 116, 105, 110, 103, 32, 105, 110, 32, 116, 104, 101, 67, 73, 65, 32, 87, 111, 114, 108, 100, 32, 70, 97, 99, 116,
      98, 111, 111, 107, 116, 104, 101, 32, 109, 111, 115, 116, 32, 105, 109, 112, 111, 114, 116, 97, 110, 116, 97, 110, 110, 105, 118, 101, 114, 115, 97, 114,
      121, 32, 111, 102, 32, 116, 104, 101, 115, 116, 121, 108, 101, 61, 34, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 60, 108, 105, 62, 60, 101, 109,
      62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 47, 116, 104, 101, 32, 65, 116, 108, 97, 110, 116, 105, 99, 32, 79, 99, 101, 97, 110, 115, 116, 114, 105, 99,
      116, 108, 121, 32, 115, 112, 101, 97, 107, 105, 110, 103, 44, 115, 104, 111, 114, 116, 108, 121, 32, 98, 101, 102, 111, 114, 101, 32, 116, 104, 101, 100,
      105, 102, 102, 101, 114, 101, 110, 116, 32, 116, 121, 112, 101, 115, 32, 111, 102, 116, 104, 101, 32, 79, 116, 116, 111, 109, 97, 110, 32, 69, 109, 112,
      105, 114, 101, 62, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 65, 110, 32, 73, 110, 116, 114, 111, 100, 117, 99, 116,
      105, 111, 110, 32, 116, 111, 99, 111, 110, 115, 101, 113, 117, 101, 110, 99, 101, 32, 111, 102, 32, 116, 104, 101, 100, 101, 112, 97, 114, 116, 117, 114,
      101, 32, 102, 114, 111, 109, 32, 116, 104, 101, 67, 111, 110, 102, 101, 100, 101, 114, 97, 116, 101, 32, 83, 116, 97, 116, 101, 115, 105, 110, 100, 105,
      103, 101, 110, 111, 117, 115, 32, 112, 101, 111, 112, 108, 101, 115, 80, 114, 111, 99, 101, 101, 100, 105, 110, 103, 115, 32, 111, 102, 32, 116, 104, 101,
      105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 111, 110, 32, 116, 104, 101, 116, 104, 101, 111, 114, 105, 101, 115, 32, 104, 97, 118, 101, 32,
      98, 101, 101, 110, 105, 110, 118, 111, 108, 118, 101, 109, 101, 110, 116, 32, 105, 110, 32, 116, 104, 101, 100, 105, 118, 105, 100, 101, 100, 32, 105,
      110, 116, 111, 32, 116, 104, 114, 101, 101, 97, 100, 106, 97, 99, 101, 110, 116, 32, 99, 111, 117, 110, 116, 114, 105, 101, 115, 105, 115, 32, 114, 101,
      115, 112, 111, 110, 115, 105, 98, 108, 101, 32, 102, 111, 114, 100, 105, 115, 115, 111, 108, 117, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 99,
      111, 108, 108, 97, 98, 111, 114, 97, 116, 105, 111, 110, 32, 119, 105, 116, 104, 119, 105, 100, 101, 108, 121, 32, 114, 101, 103, 97, 114, 100, 101, 100,
      32, 97, 115, 104, 105, 115, 32, 99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 105, 101, 115, 102, 111, 117, 110, 100, 105, 110, 103, 32, 109, 101,
      109, 98, 101, 114, 32, 111, 102, 68, 111, 109, 105, 110, 105, 99, 97, 110, 32, 82, 101, 112, 117, 98, 108, 105, 99, 103, 101, 110, 101, 114, 97, 108, 108,
      121, 32, 97, 99, 99, 101, 112, 116, 101, 100, 116, 104, 101, 32, 112, 111, 115, 115, 105, 98, 105, 108, 105, 116, 121, 32, 111, 102, 97, 114, 101, 32, 97,
      108, 115, 111, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 117, 110, 100, 101, 114, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 114,
      101, 115, 116, 111, 114, 97, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 116, 104, 101, 32, 103, 101, 110, 101, 114, 97, 108, 32, 112, 117, 98,
      108, 105, 99, 105, 115, 32, 97, 108, 109, 111, 115, 116, 32, 101, 110, 116, 105, 114, 101, 108, 121, 112, 97, 115, 115, 101, 115, 32, 116, 104, 114, 111,
      117, 103, 104, 32, 116, 104, 101, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 117, 103, 103, 101, 115, 116, 101, 100, 99, 111, 109, 112, 117, 116, 101,
      114, 32, 97, 110, 100, 32, 118, 105, 100, 101, 111, 71, 101, 114, 109, 97, 110, 105, 99, 32, 108, 97, 110, 103, 117, 97, 103, 101, 115, 32, 97, 99, 99,
      111, 114, 100, 105, 110, 103, 32, 116, 111, 32, 116, 104, 101, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 102, 114, 111, 109, 32, 116, 104, 101,
      115, 104, 111, 114, 116, 108, 121, 32, 97, 102, 116, 101, 114, 119, 97, 114, 100, 115, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 115, 58, 47, 47,
      119, 119, 119, 46, 114, 101, 99, 101, 110, 116, 32, 100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 66, 111, 97, 114, 100, 32, 111, 102, 32, 68,
      105, 114, 101, 99, 116, 111, 114, 115, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 115, 101, 97, 114, 99, 104, 124, 32, 60, 97, 32, 104, 114,
      101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 73, 110, 32, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 44, 32, 116, 104, 101, 77, 117, 108, 116,
      105, 112, 108, 101, 32, 102, 111, 111, 116, 110, 111, 116, 101, 115, 111, 114, 32, 111, 116, 104, 101, 114, 32, 115, 117, 98, 115, 116, 97, 110, 99, 101,
      116, 104, 111, 117, 115, 97, 110, 100, 115, 32, 111, 102, 32, 121, 101, 97, 114, 115, 116, 114, 97, 110, 115, 108, 97, 116, 105, 111, 110, 32, 111, 102,
      32, 116, 104, 101, 60, 47, 100, 105, 118, 62, 13, 10, 60, 47, 100, 105, 118, 62, 13, 10, 13, 10, 60, 97, 32, 104, 114, 101, 102, 61, 34, 105, 110, 100,
      101, 120, 46, 112, 104, 112, 119, 97, 115, 32, 101, 115, 116, 97, 98, 108, 105, 115, 104, 101, 100, 32, 105, 110, 109, 105, 110, 46, 106, 115, 34, 62, 60,
      47, 115, 99, 114, 105, 112, 116, 62, 10, 112, 97, 114, 116, 105, 99, 105, 112, 97, 116, 101, 32, 105, 110, 32, 116, 104, 101, 97, 32, 115, 116, 114, 111,
      110, 103, 32, 105, 110, 102, 108, 117, 101, 110, 99, 101, 115, 116, 121, 108, 101, 61, 34, 109, 97, 114, 103, 105, 110, 45, 116, 111, 112, 58, 114, 101,
      112, 114, 101, 115, 101, 110, 116, 101, 100, 32, 98, 121, 32, 116, 104, 101, 103, 114, 97, 100, 117, 97, 116, 101, 100, 32, 102, 114, 111, 109, 32, 116,
      104, 101, 84, 114, 97, 100, 105, 116, 105, 111, 110, 97, 108, 108, 121, 44, 32, 116, 104, 101, 69, 108, 101, 109, 101, 110, 116, 40, 34, 115, 99, 114,
      105, 112, 116, 34, 41, 59, 72, 111, 119, 101, 118, 101, 114, 44, 32, 115, 105, 110, 99, 101, 32, 116, 104, 101, 47, 100, 105, 118, 62, 10, 60, 47, 100,
      105, 118, 62, 10, 60, 100, 105, 118, 32, 108, 101, 102, 116, 59, 32, 109, 97, 114, 103, 105, 110, 45, 108, 101, 102, 116, 58, 112, 114, 111, 116, 101, 99,
      116, 105, 111, 110, 32, 97, 103, 97, 105, 110, 115, 116, 48, 59, 32, 118, 101, 114, 116, 105, 99, 97, 108, 45, 97, 108, 105, 103, 110, 58, 85, 110, 102,
      111, 114, 116, 117, 110, 97, 116, 101, 108, 121, 44, 32, 116, 104, 101, 116, 121, 112, 101, 61, 34, 105, 109, 97, 103, 101, 47, 120, 45, 105, 99, 111,
      110, 47, 100, 105, 118, 62, 10, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 32, 99, 108, 97, 115, 115, 61, 34, 99, 108, 101, 97, 114, 102, 105,
      120, 34, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 102, 111, 111, 116, 101, 114, 9, 9, 60, 47, 100, 105, 118, 62, 10, 9, 9, 60, 47, 100,
      105, 118, 62, 10, 116, 104, 101, 32, 109, 111, 116, 105, 111, 110, 32, 112, 105, 99, 116, 117, 114, 101, 208, 145, 209, 138, 208, 187, 208, 179, 208, 176,
      209, 128, 209, 129, 208, 186, 208, 184, 208, 177, 209, 138, 208, 187, 208, 179, 208, 176, 209, 128, 209, 129, 208, 186, 208, 184, 208, 164, 208, 181, 208,
      180, 208, 181, 209, 128, 208, 176, 209, 134, 208, 184, 208, 184, 208, 189, 208, 181, 209, 129, 208, 186, 208, 190, 208, 187, 209, 140, 208, 186, 208, 190,
      209, 129, 208, 190, 208, 190, 208, 177, 209, 137, 208, 181, 208, 189, 208, 184, 208, 181, 209, 129, 208, 190, 208, 190, 208, 177, 209, 137, 208, 181, 208,
      189, 208, 184, 209, 143, 208, 191, 209, 128, 208, 190, 208, 179, 209, 128, 208, 176, 208, 188, 208, 188, 209, 139, 208, 158, 209, 130, 208, 191, 209, 128,
      208, 176, 208, 178, 208, 184, 209, 130, 209, 140, 208, 177, 208, 181, 209, 129, 208, 191, 208, 187, 208, 176, 209, 130, 208, 189, 208, 190, 208, 188, 208,
      176, 209, 130, 208, 181, 209, 128, 208, 184, 208, 176, 208, 187, 209, 139, 208, 191, 208, 190, 208, 183, 208, 178, 208, 190, 208, 187, 209, 143, 208, 181,
      209, 130, 208, 191, 208, 190, 209, 129, 208, 187, 208, 181, 208, 180, 208, 189, 208, 184, 208, 181, 209, 128, 208, 176, 208, 183, 208, 187, 208, 184, 209,
      135, 208, 189, 209, 139, 209, 133, 208, 191, 209, 128, 208, 190, 208, 180, 209, 131, 208, 186, 209, 134, 208, 184, 208, 184, 208, 191, 209, 128, 208, 190,
      208, 179, 209, 128, 208, 176, 208, 188, 208, 188, 208, 176, 208, 191, 208, 190, 208, 187, 208, 189, 208, 190, 209, 129, 209, 130, 209, 140, 209, 142, 208,
      189, 208, 176, 209, 133, 208, 190, 208, 180, 208, 184, 209, 130, 209, 129, 209, 143, 208, 184, 208, 183, 208, 177, 209, 128, 208, 176, 208, 189, 208, 189,
      208, 190, 208, 181, 208, 189, 208, 176, 209, 129, 208, 181, 208, 187, 208, 181, 208, 189, 208, 184, 209, 143, 208, 184, 208, 183, 208, 188, 208, 181, 208,
      189, 208, 181, 208, 189, 208, 184, 209, 143, 208, 186, 208, 176, 209, 130, 208, 181, 208, 179, 208, 190, 209, 128, 208, 184, 208, 184, 208, 144, 208, 187,
      208, 181, 208, 186, 209, 129, 208, 176, 208, 189, 208, 180, 209, 128, 224, 164, 166, 224, 165, 141, 224, 164, 181, 224, 164, 190, 224, 164, 176, 224, 164,
      190, 224, 164, 174, 224, 165, 136, 224, 164, 168, 224, 165, 129, 224, 164, 133, 224, 164, 178, 224, 164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 166,
      224, 164, 190, 224, 164, 168, 224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 165, 128, 224, 164, 175, 224, 164, 133, 224, 164, 168, 224,
      165, 129, 224, 164, 166, 224, 165, 135, 224, 164, 182, 224, 164, 185, 224, 164, 191, 224, 164, 168, 224, 165, 141, 224, 164, 166, 224, 165, 128, 224, 164,
      135, 224, 164, 130, 224, 164, 161, 224, 164, 191, 224, 164, 175, 224, 164, 190, 224, 164, 166, 224, 164, 191, 224, 164, 178, 224, 165, 141, 224, 164, 178,
      224, 165, 128, 224, 164, 133, 224, 164, 167, 224, 164, 191, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 164, 181, 224, 165, 128, 224, 164, 161, 224,
      164, 191, 224, 164, 175, 224, 165, 139, 224, 164, 154, 224, 164, 191, 224, 164, 159, 224, 165, 141, 224, 164, 160, 224, 165, 135, 224, 164, 184, 224, 164,
      174, 224, 164, 190, 224, 164, 154, 224, 164, 190, 224, 164, 176, 224, 164, 156, 224, 164, 130, 224, 164, 149, 224, 165, 141, 224, 164, 182, 224, 164, 168,
      224, 164, 166, 224, 165, 129, 224, 164, 168, 224, 164, 191, 224, 164, 175, 224, 164, 190, 224, 164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 175, 224,
      165, 139, 224, 164, 151, 224, 164, 133, 224, 164, 168, 224, 165, 129, 224, 164, 184, 224, 164, 190, 224, 164, 176, 224, 164, 145, 224, 164, 168, 224, 164,
      178, 224, 164, 190, 224, 164, 135, 224, 164, 168, 224, 164, 170, 224, 164, 190, 224, 164, 176, 224, 165, 141, 224, 164, 159, 224, 165, 128, 224, 164, 182,
      224, 164, 176, 224, 165, 141, 224, 164, 164, 224, 165, 139, 224, 164, 130, 224, 164, 178, 224, 165, 139, 224, 164, 149, 224, 164, 184, 224, 164, 173, 224,
      164, 190, 224, 164, 171, 224, 164, 188, 224, 165, 141, 224, 164, 178, 224, 165, 136, 224, 164, 182, 224, 164, 182, 224, 164, 176, 224, 165, 141, 224, 164,
      164, 224, 165, 135, 224, 164, 130, 224, 164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 166, 224, 165, 135, 224, 164, 182, 224, 164, 170, 224, 165, 141,
      224, 164, 178, 224, 165, 135, 224, 164, 175, 224, 164, 176, 224, 164, 149, 224, 165, 135, 224, 164, 130, 224, 164, 166, 224, 165, 141, 224, 164, 176, 224,
      164, 184, 224, 165, 141, 224, 164, 165, 224, 164, 191, 224, 164, 164, 224, 164, 191, 224, 164, 137, 224, 164, 164, 224, 165, 141, 224, 164, 170, 224, 164,
      190, 224, 164, 166, 224, 164, 137, 224, 164, 168, 224, 165, 141, 224, 164, 185, 224, 165, 135, 224, 164, 130, 224, 164, 154, 224, 164, 191, 224, 164, 159,
      224, 165, 141, 224, 164, 160, 224, 164, 190, 224, 164, 175, 224, 164, 190, 224, 164, 164, 224, 165, 141, 224, 164, 176, 224, 164, 190, 224, 164, 156, 224,
      165, 141, 224, 164, 175, 224, 164, 190, 224, 164, 166, 224, 164, 190, 224, 164, 170, 224, 165, 129, 224, 164, 176, 224, 164, 190, 224, 164, 168, 224, 165,
      135, 224, 164, 156, 224, 165, 139, 224, 164, 161, 224, 164, 188, 224, 165, 135, 224, 164, 130, 224, 164, 133, 224, 164, 168, 224, 165, 129, 224, 164, 181,
      224, 164, 190, 224, 164, 166, 224, 164, 182, 224, 165, 141, 224, 164, 176, 224, 165, 135, 224, 164, 163, 224, 165, 128, 224, 164, 182, 224, 164, 191, 224,
      164, 149, 224, 165, 141, 224, 164, 183, 224, 164, 190, 224, 164, 184, 224, 164, 176, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 165, 128, 224, 164,
      184, 224, 164, 130, 224, 164, 151, 224, 165, 141, 224, 164, 176, 224, 164, 185, 224, 164, 170, 224, 164, 176, 224, 164, 191, 224, 164, 163, 224, 164, 190,
      224, 164, 174, 224, 164, 172, 224, 165, 141, 224, 164, 176, 224, 164, 190, 224, 164, 130, 224, 164, 161, 224, 164, 172, 224, 164, 154, 224, 165, 141, 224,
      164, 154, 224, 165, 139, 224, 164, 130, 224, 164, 137, 224, 164, 170, 224, 164, 178, 224, 164, 172, 224, 165, 141, 224, 164, 167, 224, 164, 174, 224, 164,
      130, 224, 164, 164, 224, 165, 141, 224, 164, 176, 224, 165, 128, 224, 164, 184, 224, 164, 130, 224, 164, 170, 224, 164, 176, 224, 165, 141, 224, 164, 149,
      224, 164, 137, 224, 164, 174, 224, 165, 141, 224, 164, 174, 224, 165, 128, 224, 164, 166, 224, 164, 174, 224, 164, 190, 224, 164, 167, 224, 165, 141, 224,
      164, 175, 224, 164, 174, 224, 164, 184, 224, 164, 185, 224, 164, 190, 224, 164, 175, 224, 164, 164, 224, 164, 190, 224, 164, 182, 224, 164, 172, 224, 165,
      141, 224, 164, 166, 224, 165, 139, 224, 164, 130, 224, 164, 174, 224, 165, 128, 224, 164, 161, 224, 164, 191, 224, 164, 175, 224, 164, 190, 224, 164, 134,
      224, 164, 136, 224, 164, 170, 224, 165, 128, 224, 164, 143, 224, 164, 178, 224, 164, 174, 224, 165, 139, 224, 164, 172, 224, 164, 190, 224, 164, 135, 224,
      164, 178, 224, 164, 184, 224, 164, 130, 224, 164, 150, 224, 165, 141, 224, 164, 175, 224, 164, 190, 224, 164, 134, 224, 164, 170, 224, 164, 176, 224, 165,
      135, 224, 164, 182, 224, 164, 168, 224, 164, 133, 224, 164, 168, 224, 165, 129, 224, 164, 172, 224, 164, 130, 224, 164, 167, 224, 164, 172, 224, 164, 190,
      224, 164, 156, 224, 164, 188, 224, 164, 190, 224, 164, 176, 224, 164, 168, 224, 164, 181, 224, 165, 128, 224, 164, 168, 224, 164, 164, 224, 164, 174, 224,
      164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 174, 224, 165, 129, 224, 164, 150, 224, 164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 182, 224, 165,
      141, 224, 164, 168, 224, 164, 170, 224, 164, 176, 224, 164, 191, 224, 164, 181, 224, 164, 190, 224, 164, 176, 224, 164, 168, 224, 165, 129, 224, 164, 149,
      224, 164, 184, 224, 164, 190, 224, 164, 168, 224, 164, 184, 224, 164, 174, 224, 164, 176, 224, 165, 141, 224, 164, 165, 224, 164, 168, 224, 164, 134, 224,
      164, 175, 224, 165, 139, 224, 164, 156, 224, 164, 191, 224, 164, 164, 224, 164, 184, 224, 165, 139, 224, 164, 174, 224, 164, 181, 224, 164, 190, 224, 164,
      176, 216, 167, 217, 132, 217, 133, 216, 180, 216, 167, 216, 177, 217, 131, 216, 167, 216, 170, 216, 167, 217, 132, 217, 133, 217, 134, 216, 170, 216, 175,
      217, 138, 216, 167, 216, 170, 216, 167, 217, 132, 217, 131, 217, 133, 216, 168, 217, 138, 217, 136, 216, 170, 216, 177, 216, 167, 217, 132, 217, 133, 216,
      180, 216, 167, 217, 135, 216, 175, 216, 167, 216, 170, 216, 185, 216, 175, 216, 175, 216, 167, 217, 132, 216, 178, 217, 136, 216, 167, 216, 177, 216, 185,
      216, 175, 216, 175, 216, 167, 217, 132, 216, 177, 216, 175, 217, 136, 216, 175, 216, 167, 217, 132, 216, 165, 216, 179, 217, 132, 216, 167, 217, 133, 217,
      138, 216, 169, 216, 167, 217, 132, 217, 129, 217, 136, 216, 170, 217, 136, 216, 180, 217, 136, 216, 168, 216, 167, 217, 132, 217, 133, 216, 179, 216, 167,
      216, 168, 217, 130, 216, 167, 216, 170, 216, 167, 217, 132, 217, 133, 216, 185, 217, 132, 217, 136, 217, 133, 216, 167, 216, 170, 216, 167, 217, 132, 217,
      133, 216, 179, 217, 132, 216, 179, 217, 132, 216, 167, 216, 170, 216, 167, 217, 132, 216, 172, 216, 177, 216, 167, 217, 129, 217, 138, 217, 131, 216, 179,
      216, 167, 217, 132, 216, 167, 216, 179, 217, 132, 216, 167, 217, 133, 217, 138, 216, 169, 216, 167, 217, 132, 216, 167, 216, 170, 216, 181, 216, 167, 217,
      132, 216, 167, 216, 170, 107, 101, 121, 119, 111, 114, 100, 115, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 119, 51, 46, 111, 114, 103, 47, 49, 57,
      57, 57, 47, 120, 104, 116, 109, 108, 34, 62, 60, 97, 32, 116, 97, 114, 103, 101, 116, 61, 34, 95, 98, 108, 97, 110, 107, 34, 32, 116, 101, 120, 116, 47,
      104, 116, 109, 108, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 34, 32, 116, 97, 114, 103, 101, 116, 61, 34, 95, 98, 108, 97, 110, 107, 34, 62, 60, 116,
      97, 98, 108, 101, 32, 99, 101, 108, 108, 112, 97, 100, 100, 105, 110, 103, 61, 34, 97, 117, 116, 111, 99, 111, 109, 112, 108, 101, 116, 101, 61, 34, 111,
      102, 102, 34, 32, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 32, 99, 101, 110, 116, 101, 114, 59, 116, 111, 32, 108, 97, 115, 116, 32, 118, 101,
      114, 115, 105, 111, 110, 32, 98, 121, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 99, 111, 108, 111, 114, 58, 32, 35, 34, 32, 104, 114, 101,
      102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 60, 100, 105, 118, 32, 105, 100, 61, 60,
      97, 32, 104, 114, 101, 102, 61, 34, 35, 34, 32, 99, 108, 97, 115, 115, 61, 34, 34, 62, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112,
      58, 47, 47, 99, 114, 105, 112, 116, 34, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 10, 60, 115, 99, 114, 105, 112, 116, 32, 108, 97, 110,
      103, 117, 97, 103, 101, 61, 34, 47, 47, 69, 78, 34, 32, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119, 101, 110, 99, 111, 100, 101, 85, 82,
      73, 67, 111, 109, 112, 111, 110, 101, 110, 116, 40, 34, 32, 104, 114, 101, 102, 61, 34, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 58, 60, 100, 105,
      118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 111, 110, 116, 101, 110, 116, 100, 111, 99, 117, 109, 101, 110, 116, 46, 119, 114, 105, 116, 101, 40, 39, 60,
      115, 99, 112, 111, 115, 105, 116, 105, 111, 110, 58, 32, 97, 98, 115, 111, 108, 117, 116, 101, 59, 115, 99, 114, 105, 112, 116, 32, 115, 114, 99, 61, 34,
      104, 116, 116, 112, 58, 47, 47, 32, 115, 116, 121, 108, 101, 61, 34, 109, 97, 114, 103, 105, 110, 45, 116, 111, 112, 58, 46, 109, 105, 110, 46, 106, 115,
      34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 60, 47, 100, 105, 118, 62, 10, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 119, 51, 46,
      111, 114, 103, 47, 49, 57, 57, 57, 47, 120, 104, 116, 109, 108, 34, 32, 10, 13, 10, 60, 47, 98, 111, 100, 121, 62, 13, 10, 60, 47, 104, 116, 109, 108, 62,
      100, 105, 115, 116, 105, 110, 99, 116, 105, 111, 110, 32, 98, 101, 116, 119, 101, 101, 110, 47, 34, 32, 116, 97, 114, 103, 101, 116, 61, 34, 95, 98, 108,
      97, 110, 107, 34, 62, 60, 108, 105, 110, 107, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 101, 110, 99, 111, 100, 105, 110, 103, 61,
      34, 117, 116, 102, 45, 56, 34, 63, 62, 10, 119, 46, 97, 100, 100, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 63, 97, 99, 116, 105,
      111, 110, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 105, 99, 111, 110, 34, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47,
      47, 32, 115, 116, 121, 108, 101, 61, 34, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115,
      115, 34, 32, 47, 62, 10, 109, 101, 116, 97, 32, 112, 114, 111, 112, 101, 114, 116, 121, 61, 34, 111, 103, 58, 116, 60, 105, 110, 112, 117, 116, 32, 116,
      121, 112, 101, 61, 34, 116, 101, 120, 116, 34, 32, 32, 115, 116, 121, 108, 101, 61, 34, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 116, 104, 101,
      32, 100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 32, 111, 102, 32, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 116, 121, 112, 101, 61,
      34, 116, 101, 104, 116, 109, 108, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 116, 102, 45, 56, 105, 115, 32, 99, 111, 110, 115, 105, 100, 101, 114,
      101, 100, 32, 116, 111, 32, 98, 101, 116, 97, 98, 108, 101, 32, 119, 105, 100, 116, 104, 61, 34, 49, 48, 48, 37, 34, 32, 73, 110, 32, 97, 100, 100, 105,
      116, 105, 111, 110, 32, 116, 111, 32, 116, 104, 101, 32, 99, 111, 110, 116, 114, 105, 98, 117, 116, 101, 100, 32, 116, 111, 32, 116, 104, 101, 32, 100,
      105, 102, 102, 101, 114, 101, 110, 99, 101, 115, 32, 98, 101, 116, 119, 101, 101, 110, 100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 32, 111,
      102, 32, 116, 104, 101, 32, 73, 116, 32, 105, 115, 32, 105, 109, 112, 111, 114, 116, 97, 110, 116, 32, 116, 111, 32, 60, 47, 115, 99, 114, 105, 112, 116,
      62, 10, 10, 60, 115, 99, 114, 105, 112, 116, 32, 32, 115, 116, 121, 108, 101, 61, 34, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49, 62, 60, 47, 115,
      112, 97, 110, 62, 60, 115, 112, 97, 110, 32, 105, 100, 61, 103, 98, 76, 105, 98, 114, 97, 114, 121, 32, 111, 102, 32, 67, 111, 110, 103, 114, 101, 115,
      115, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 105, 109, 69, 110, 103, 108, 105, 115, 104, 32, 116, 114, 97, 110, 115,
      108, 97, 116, 105, 111, 110, 65, 99, 97, 100, 101, 109, 121, 32, 111, 102, 32, 83, 99, 105, 101, 110, 99, 101, 115, 100, 105, 118, 32, 115, 116, 121, 108,
      101, 61, 34, 100, 105, 115, 112, 108, 97, 121, 58, 99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 46, 103,
      101, 116, 69, 108, 101, 109, 101, 110, 116, 66, 121, 73, 100, 40, 105, 100, 41, 105, 110, 32, 99, 111, 110, 106, 117, 110, 99, 116, 105, 111, 110, 32,
      119, 105, 116, 104, 69, 108, 101, 109, 101, 110, 116, 40, 39, 115, 99, 114, 105, 112, 116, 39, 41, 59, 32, 60, 109, 101, 116, 97, 32, 112, 114, 111, 112,
      101, 114, 116, 121, 61, 34, 111, 103, 58, 208, 145, 209, 138, 208, 187, 208, 179, 208, 176, 209, 128, 209, 129, 208, 186, 208, 184, 10, 32, 116, 121, 112,
      101, 61, 34, 116, 101, 120, 116, 34, 32, 110, 97, 109, 101, 61, 34, 62, 80, 114, 105, 118, 97, 99, 121, 32, 80, 111, 108, 105, 99, 121, 60, 47, 97, 62,
      97, 100, 109, 105, 110, 105, 115, 116, 101, 114, 101, 100, 32, 98, 121, 32, 116, 104, 101, 101, 110, 97, 98, 108, 101, 83, 105, 110, 103, 108, 101, 82,
      101, 113, 117, 101, 115, 116, 115, 116, 121, 108, 101, 61, 38, 113, 117, 111, 116, 59, 109, 97, 114, 103, 105, 110, 58, 60, 47, 100, 105, 118, 62, 60, 47,
      100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 60, 62, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 105, 32, 115, 116, 121,
      108, 101, 61, 38, 113, 117, 111, 116, 59, 102, 108, 111, 97, 116, 58, 114, 101, 102, 101, 114, 114, 101, 100, 32, 116, 111, 32, 97, 115, 32, 116, 104,
      101, 32, 116, 111, 116, 97, 108, 32, 112, 111, 112, 117, 108, 97, 116, 105, 111, 110, 32, 111, 102, 105, 110, 32, 87, 97, 115, 104, 105, 110, 103, 116,
      111, 110, 44, 32, 68, 46, 67, 46, 32, 115, 116, 121, 108, 101, 61, 34, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 97, 109, 111, 110, 103, 32, 111,
      116, 104, 101, 114, 32, 116, 104, 105, 110, 103, 115, 44, 111, 114, 103, 97, 110, 105, 122, 97, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 112,
      97, 114, 116, 105, 99, 105, 112, 97, 116, 101, 100, 32, 105, 110, 32, 116, 104, 101, 116, 104, 101, 32, 105, 110, 116, 114, 111, 100, 117, 99, 116, 105,
      111, 110, 32, 111, 102, 105, 100, 101, 110, 116, 105, 102, 105, 101, 100, 32, 119, 105, 116, 104, 32, 116, 104, 101, 102, 105, 99, 116, 105, 111, 110, 97,
      108, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 32, 79, 120, 102, 111, 114, 100, 32, 85, 110, 105, 118, 101, 114, 115, 105, 116, 121, 32, 109, 105, 115,
      117, 110, 100, 101, 114, 115, 116, 97, 110, 100, 105, 110, 103, 32, 111, 102, 84, 104, 101, 114, 101, 32, 97, 114, 101, 44, 32, 104, 111, 119, 101, 118,
      101, 114, 44, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 104, 114, 101, 102, 61, 34, 47, 67, 111, 108, 117, 109, 98, 105, 97, 32, 85, 110,
      105, 118, 101, 114, 115, 105, 116, 121, 101, 120, 112, 97, 110, 100, 101, 100, 32, 116, 111, 32, 105, 110, 99, 108, 117, 100, 101, 117, 115, 117, 97, 108,
      108, 121, 32, 114, 101, 102, 101, 114, 114, 101, 100, 32, 116, 111, 105, 110, 100, 105, 99, 97, 116, 105, 110, 103, 32, 116, 104, 97, 116, 32, 116, 104,
      101, 104, 97, 118, 101, 32, 115, 117, 103, 103, 101, 115, 116, 101, 100, 32, 116, 104, 97, 116, 97, 102, 102, 105, 108, 105, 97, 116, 101, 100, 32, 119,
      105, 116, 104, 32, 116, 104, 101, 99, 111, 114, 114, 101, 108, 97, 116, 105, 111, 110, 32, 98, 101, 116, 119, 101, 101, 110, 110, 117, 109, 98, 101, 114,
      32, 111, 102, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 62, 60, 47, 116, 100, 62, 60, 47, 116, 114, 62, 60, 47, 116, 97, 98, 108, 101, 62, 82, 101,
      112, 117, 98, 108, 105, 99, 32, 111, 102, 32, 73, 114, 101, 108, 97, 110, 100, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 60, 115, 99, 114, 105,
      112, 116, 32, 117, 110, 100, 101, 114, 32, 116, 104, 101, 32, 105, 110, 102, 108, 117, 101, 110, 99, 101, 99, 111, 110, 116, 114, 105, 98, 117, 116, 105,
      111, 110, 32, 116, 111, 32, 116, 104, 101, 79, 102, 102, 105, 99, 105, 97, 108, 32, 119, 101, 98, 115, 105, 116, 101, 32, 111, 102, 104, 101, 97, 100,
      113, 117, 97, 114, 116, 101, 114, 115, 32, 111, 102, 32, 116, 104, 101, 99, 101, 110, 116, 101, 114, 101, 100, 32, 97, 114, 111, 117, 110, 100, 32, 116,
      104, 101, 105, 109, 112, 108, 105, 99, 97, 116, 105, 111, 110, 115, 32, 111, 102, 32, 116, 104, 101, 104, 97, 118, 101, 32, 98, 101, 101, 110, 32, 100,
      101, 118, 101, 108, 111, 112, 101, 100, 70, 101, 100, 101, 114, 97, 108, 32, 82, 101, 112, 117, 98, 108, 105, 99, 32, 111, 102, 98, 101, 99, 97, 109, 101,
      32, 105, 110, 99, 114, 101, 97, 115, 105, 110, 103, 108, 121, 99, 111, 110, 116, 105, 110, 117, 97, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101,
      78, 111, 116, 101, 44, 32, 104, 111, 119, 101, 118, 101, 114, 44, 32, 116, 104, 97, 116, 115, 105, 109, 105, 108, 97, 114, 32, 116, 111, 32, 116, 104, 97,
      116, 32, 111, 102, 32, 99, 97, 112, 97, 98, 105, 108, 105, 116, 105, 101, 115, 32, 111, 102, 32, 116, 104, 101, 97, 99, 99, 111, 114, 100, 97, 110, 99,
      101, 32, 119, 105, 116, 104, 32, 116, 104, 101, 112, 97, 114, 116, 105, 99, 105, 112, 97, 110, 116, 115, 32, 105, 110, 32, 116, 104, 101, 102, 117, 114,
      116, 104, 101, 114, 32, 100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 117, 110, 100, 101, 114, 32, 116, 104, 101, 32, 100, 105, 114, 101, 99,
      116, 105, 111, 110, 105, 115, 32, 111, 102, 116, 101, 110, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 104, 105, 115, 32, 121, 111, 117, 110,
      103, 101, 114, 32, 98, 114, 111, 116, 104, 101, 114, 60, 47, 116, 100, 62, 60, 47, 116, 114, 62, 60, 47, 116, 97, 98, 108, 101, 62, 60, 97, 32, 104, 116,
      116, 112, 45, 101, 113, 117, 105, 118, 61, 34, 88, 45, 85, 65, 45, 112, 104, 121, 115, 105, 99, 97, 108, 32, 112, 114, 111, 112, 101, 114, 116, 105, 101,
      115, 111, 102, 32, 66, 114, 105, 116, 105, 115, 104, 32, 67, 111, 108, 117, 109, 98, 105, 97, 104, 97, 115, 32, 98, 101, 101, 110, 32, 99, 114, 105, 116,
      105, 99, 105, 122, 101, 100, 40, 119, 105, 116, 104, 32, 116, 104, 101, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 113, 117, 101, 115, 116, 105, 111,
      110, 115, 32, 97, 98, 111, 117, 116, 32, 116, 104, 101, 112, 97, 115, 115, 105, 110, 103, 32, 116, 104, 114, 111, 117, 103, 104, 32, 116, 104, 101, 48,
      34, 32, 99, 101, 108, 108, 112, 97, 100, 100, 105, 110, 103, 61, 34, 48, 34, 32, 116, 104, 111, 117, 115, 97, 110, 100, 115, 32, 111, 102, 32, 112, 101,
      111, 112, 108, 101, 114, 101, 100, 105, 114, 101, 99, 116, 115, 32, 104, 101, 114, 101, 46, 32, 70, 111, 114, 104, 97, 118, 101, 32, 99, 104, 105, 108,
      100, 114, 101, 110, 32, 117, 110, 100, 101, 114, 37, 51, 69, 37, 51, 67, 47, 115, 99, 114, 105, 112, 116, 37, 51, 69, 34, 41, 41, 59, 60, 97, 32, 104,
      114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 60, 108, 105, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112,
      58, 47, 47, 115, 105, 116, 101, 95, 110, 97, 109, 101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 116, 101, 120, 116, 45, 100, 101, 99, 111, 114,
      97, 116, 105, 111, 110, 58, 110, 111, 110, 101, 115, 116, 121, 108, 101, 61, 34, 100, 105, 115, 112, 108, 97, 121, 58, 32, 110, 111, 110, 101, 60, 109,
      101, 116, 97, 32, 104, 116, 116, 112, 45, 101, 113, 117, 105, 118, 61, 34, 88, 45, 110, 101, 119, 32, 68, 97, 116, 101, 40, 41, 46, 103, 101, 116, 84,
      105, 109, 101, 40, 41, 32, 116, 121, 112, 101, 61, 34, 105, 109, 97, 103, 101, 47, 120, 45, 105, 99, 111, 110, 34, 60, 47, 115, 112, 97, 110, 62, 60, 115,
      112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 108, 97, 110, 103, 117, 97, 103, 101, 61, 34, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 119, 105,
      110, 100, 111, 119, 46, 108, 111, 99, 97, 116, 105, 111, 110, 46, 104, 114, 101, 102, 60, 97, 32, 104, 114, 101, 102, 61, 34, 106, 97, 118, 97, 115, 99,
      114, 105, 112, 116, 58, 45, 45, 62, 13, 10, 60, 115, 99, 114, 105, 112, 116, 32, 116, 121, 112, 101, 61, 34, 116, 60, 97, 32, 104, 114, 101, 102, 61, 39,
      104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 104, 111, 114, 116, 99, 117, 116, 32, 105, 99, 111, 110, 34, 32, 104, 114, 101, 102, 61, 34, 60, 47,
      100, 105, 118, 62, 13, 10, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 60, 115, 99, 114, 105, 112, 116, 32, 115, 114, 99, 61, 34, 104, 116, 116,
      112, 58, 47, 47, 34, 32, 114, 101, 108, 61, 34, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 116, 60, 47, 100, 105, 118, 62, 10, 60, 115, 99,
      114, 105, 112, 116, 32, 116, 121, 112, 101, 61, 47, 97, 62, 32, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 32, 97, 108, 108,
      111, 119, 84, 114, 97, 110, 115, 112, 97, 114, 101, 110, 99, 121, 61, 34, 88, 45, 85, 65, 45, 67, 111, 109, 112, 97, 116, 105, 98, 108, 101, 34, 32, 99,
      111, 110, 114, 101, 108, 97, 116, 105, 111, 110, 115, 104, 105, 112, 32, 98, 101, 116, 119, 101, 101, 110, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62,
      13, 10, 60, 115, 99, 114, 105, 112, 116, 32, 60, 47, 97, 62, 60, 47, 108, 105, 62, 60, 47, 117, 108, 62, 60, 47, 100, 105, 118, 62, 97, 115, 115, 111, 99,
      105, 97, 116, 101, 100, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 112, 114, 111, 103, 114, 97, 109, 109, 105, 110, 103, 32, 108, 97, 110, 103, 117,
      97, 103, 101, 60, 47, 97, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 60, 47, 97, 62, 60, 47, 108, 105, 62, 60, 108, 105,
      32, 99, 108, 97, 115, 115, 61, 34, 102, 111, 114, 109, 32, 97, 99, 116, 105, 111, 110, 61, 34, 104, 116, 116, 112, 58, 47, 47, 60, 100, 105, 118, 32, 115,
      116, 121, 108, 101, 61, 34, 100, 105, 115, 112, 108, 97, 121, 58, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 34, 32, 110, 97, 109, 101, 61, 34, 113,
      34, 60, 116, 97, 98, 108, 101, 32, 119, 105, 100, 116, 104, 61, 34, 49, 48, 48, 37, 34, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45, 112, 111,
      115, 105, 116, 105, 111, 110, 58, 34, 32, 98, 111, 114, 100, 101, 114, 61, 34, 48, 34, 32, 119, 105, 100, 116, 104, 61, 34, 114, 101, 108, 61, 34, 115,
      104, 111, 114, 116, 99, 117, 116, 32, 105, 99, 111, 110, 34, 32, 104, 54, 62, 60, 117, 108, 62, 60, 108, 105, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34,
      32, 32, 60, 109, 101, 116, 97, 32, 104, 116, 116, 112, 45, 101, 113, 117, 105, 118, 61, 34, 99, 115, 115, 34, 32, 109, 101, 100, 105, 97, 61, 34, 115, 99,
      114, 101, 101, 110, 34, 32, 114, 101, 115, 112, 111, 110, 115, 105, 98, 108, 101, 32, 102, 111, 114, 32, 116, 104, 101, 32, 34, 32, 116, 121, 112, 101,
      61, 34, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 34, 32, 115, 116, 121, 108, 101, 61, 34, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100,
      45, 104, 116, 109, 108, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 116, 102, 45, 56, 34, 32, 97, 108, 108, 111, 119, 116, 114, 97, 110, 115, 112,
      97, 114, 101, 110, 99, 121, 61, 34, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 116, 121, 112, 101, 61, 34, 116, 101, 13, 10, 60, 109, 101,
      116, 97, 32, 104, 116, 116, 112, 45, 101, 113, 117, 105, 118, 61, 34, 62, 60, 47, 115, 112, 97, 110, 62, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115,
      61, 34, 48, 34, 32, 99, 101, 108, 108, 115, 112, 97, 99, 105, 110, 103, 61, 34, 48, 34, 62, 59, 10, 60, 47, 115, 99, 114, 105, 112, 116, 62, 10, 60, 115,
      99, 114, 105, 112, 116, 32, 115, 111, 109, 101, 116, 105, 109, 101, 115, 32, 99, 97, 108, 108, 101, 100, 32, 116, 104, 101, 100, 111, 101, 115, 32, 110,
      111, 116, 32, 110, 101, 99, 101, 115, 115, 97, 114, 105, 108, 121, 70, 111, 114, 32, 109, 111, 114, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105,
      111, 110, 97, 116, 32, 116, 104, 101, 32, 98, 101, 103, 105, 110, 110, 105, 110, 103, 32, 111, 102, 32, 60, 33, 68, 79, 67, 84, 89, 80, 69, 32, 104, 116,
      109, 108, 62, 60, 104, 116, 109, 108, 112, 97, 114, 116, 105, 99, 117, 108, 97, 114, 108, 121, 32, 105, 110, 32, 116, 104, 101, 32, 116, 121, 112, 101,
      61, 34, 104, 105, 100, 100, 101, 110, 34, 32, 110, 97, 109, 101, 61, 34, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 58, 118, 111, 105, 100, 40, 48,
      41, 59, 34, 101, 102, 102, 101, 99, 116, 105, 118, 101, 110, 101, 115, 115, 32, 111, 102, 32, 116, 104, 101, 32, 97, 117, 116, 111, 99, 111, 109, 112,
      108, 101, 116, 101, 61, 34, 111, 102, 102, 34, 32, 103, 101, 110, 101, 114, 97, 108, 108, 121, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 62,
      60, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 34, 32, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 13, 10, 60, 115,
      99, 114, 105, 112, 116, 116, 104, 114, 111, 117, 103, 104, 111, 117, 116, 32, 116, 104, 101, 32, 119, 111, 114, 108, 100, 99, 111, 109, 109, 111, 110, 32,
      109, 105, 115, 99, 111, 110, 99, 101, 112, 116, 105, 111, 110, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110, 32, 119, 105, 116, 104, 32, 116, 104,
      101, 60, 47, 100, 105, 118, 62, 10, 60, 47, 100, 105, 118, 62, 10, 60, 100, 105, 118, 32, 99, 100, 117, 114, 105, 110, 103, 32, 104, 105, 115, 32, 108,
      105, 102, 101, 116, 105, 109, 101, 44, 99, 111, 114, 114, 101, 115, 112, 111, 110, 100, 105, 110, 103, 32, 116, 111, 32, 116, 104, 101, 116, 121, 112,
      101, 61, 34, 105, 109, 97, 103, 101, 47, 120, 45, 105, 99, 111, 110, 34, 32, 97, 110, 32, 105, 110, 99, 114, 101, 97, 115, 105, 110, 103, 32, 110, 117,
      109, 98, 101, 114, 100, 105, 112, 108, 111, 109, 97, 116, 105, 99, 32, 114, 101, 108, 97, 116, 105, 111, 110, 115, 97, 114, 101, 32, 111, 102, 116, 101,
      110, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 109, 101, 116, 97, 32, 99, 104, 97, 114, 115, 101, 116, 61, 34, 117, 116, 102, 45, 56, 34, 32,
      60, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 34, 32, 101, 120, 97, 109, 112, 108, 101, 115, 32, 105, 110, 99, 108,
      117, 100, 101, 32, 116, 104, 101, 34, 62, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 105, 112, 97, 114, 116, 105, 99,
      105, 112, 97, 116, 105, 111, 110, 32, 105, 110, 32, 116, 104, 101, 116, 104, 101, 32, 101, 115, 116, 97, 98, 108, 105, 115, 104, 109, 101, 110, 116, 32,
      111, 102, 10, 60, 47, 100, 105, 118, 62, 10, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 38, 97, 109, 112, 59, 110, 98, 115, 112, 59, 38, 97,
      109, 112, 59, 110, 98, 115, 112, 59, 116, 111, 32, 100, 101, 116, 101, 114, 109, 105, 110, 101, 32, 119, 104, 101, 116, 104, 101, 114, 113, 117, 105, 116,
      101, 32, 100, 105, 102, 102, 101, 114, 101, 110, 116, 32, 102, 114, 111, 109, 109, 97, 114, 107, 101, 100, 32, 116, 104, 101, 32, 98, 101, 103, 105, 110,
      110, 105, 110, 103, 100, 105, 115, 116, 97, 110, 99, 101, 32, 98, 101, 116, 119, 101, 101, 110, 32, 116, 104, 101, 99, 111, 110, 116, 114, 105, 98, 117,
      116, 105, 111, 110, 115, 32, 116, 111, 32, 116, 104, 101, 99, 111, 110, 102, 108, 105, 99, 116, 32, 98, 101, 116, 119, 101, 101, 110, 32, 116, 104, 101,
      119, 105, 100, 101, 108, 121, 32, 99, 111, 110, 115, 105, 100, 101, 114, 101, 100, 32, 116, 111, 119, 97, 115, 32, 111, 110, 101, 32, 111, 102, 32, 116,
      104, 101, 32, 102, 105, 114, 115, 116, 119, 105, 116, 104, 32, 118, 97, 114, 121, 105, 110, 103, 32, 100, 101, 103, 114, 101, 101, 115, 104, 97, 118, 101,
      32, 115, 112, 101, 99, 117, 108, 97, 116, 101, 100, 32, 116, 104, 97, 116, 40, 100, 111, 99, 117, 109, 101, 110, 116, 46, 103, 101, 116, 69, 108, 101,
      109, 101, 110, 116, 112, 97, 114, 116, 105, 99, 105, 112, 97, 116, 105, 110, 103, 32, 105, 110, 32, 116, 104, 101, 111, 114, 105, 103, 105, 110, 97, 108,
      108, 121, 32, 100, 101, 118, 101, 108, 111, 112, 101, 100, 101, 116, 97, 32, 99, 104, 97, 114, 115, 101, 116, 61, 34, 117, 116, 102, 45, 56, 34, 62, 32,
      116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 32, 47, 62, 10, 105, 110, 116, 101, 114, 99, 104, 97, 110, 103, 101, 97, 98, 108,
      121, 32, 119, 105, 116, 104, 109, 111, 114, 101, 32, 99, 108, 111, 115, 101, 108, 121, 32, 114, 101, 108, 97, 116, 101, 100, 115, 111, 99, 105, 97, 108,
      32, 97, 110, 100, 32, 112, 111, 108, 105, 116, 105, 99, 97, 108, 116, 104, 97, 116, 32, 119, 111, 117, 108, 100, 32, 111, 116, 104, 101, 114, 119, 105,
      115, 101, 112, 101, 114, 112, 101, 110, 100, 105, 99, 117, 108, 97, 114, 32, 116, 111, 32, 116, 104, 101, 115, 116, 121, 108, 101, 32, 116, 121, 112, 101,
      61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 116, 121, 112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 32, 110, 97, 109, 101, 61, 34, 102, 97, 109,
      105, 108, 105, 101, 115, 32, 114, 101, 115, 105, 100, 105, 110, 103, 32, 105, 110, 100, 101, 118, 101, 108, 111, 112, 105, 110, 103, 32, 99, 111, 117,
      110, 116, 114, 105, 101, 115, 99, 111, 109, 112, 117, 116, 101, 114, 32, 112, 114, 111, 103, 114, 97, 109, 109, 105, 110, 103, 101, 99, 111, 110, 111,
      109, 105, 99, 32, 100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116, 100, 101, 116, 101, 114, 109, 105, 110, 97, 116, 105, 111, 110, 32, 111, 102, 32,
      116, 104, 101, 102, 111, 114, 32, 109, 111, 114, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 111, 110, 32, 115, 101, 118, 101, 114, 97,
      108, 32, 111, 99, 99, 97, 115, 105, 111, 110, 115, 112, 111, 114, 116, 117, 103, 117, 195, 170, 115, 32, 40, 69, 117, 114, 111, 112, 101, 117, 41, 208,
      163, 208, 186, 209, 128, 208, 176, 209, 151, 208, 189, 209, 129, 209, 140, 208, 186, 208, 176, 209, 131, 208, 186, 209, 128, 208, 176, 209, 151, 208, 189,
      209, 129, 209, 140, 208, 186, 208, 176, 208, 160, 208, 190, 209, 129, 209, 129, 208, 184, 208, 185, 209, 129, 208, 186, 208, 190, 208, 185, 208, 188, 208,
      176, 209, 130, 208, 181, 209, 128, 208, 184, 208, 176, 208, 187, 208, 190, 208, 178, 208, 184, 208, 189, 209, 132, 208, 190, 209, 128, 208, 188, 208, 176,
      209, 134, 208, 184, 208, 184, 209, 131, 208, 191, 209, 128, 208, 176, 208, 178, 208, 187, 208, 181, 208, 189, 208, 184, 209, 143, 208, 189, 208, 181, 208,
      190, 208, 177, 209, 133, 208, 190, 208, 180, 208, 184, 208, 188, 208, 190, 208, 184, 208, 189, 209, 132, 208, 190, 209, 128, 208, 188, 208, 176, 209, 134,
      208, 184, 209, 143, 208, 152, 208, 189, 209, 132, 208, 190, 209, 128, 208, 188, 208, 176, 209, 134, 208, 184, 209, 143, 208, 160, 208, 181, 209, 129, 208,
      191, 209, 131, 208, 177, 208, 187, 208, 184, 208, 186, 208, 184, 208, 186, 208, 190, 208, 187, 208, 184, 209, 135, 208, 181, 209, 129, 209, 130, 208, 178,
      208, 190, 208, 184, 208, 189, 209, 132, 208, 190, 209, 128, 208, 188, 208, 176, 209, 134, 208, 184, 209, 142, 209, 130, 208, 181, 209, 128, 209, 128, 208,
      184, 209, 130, 208, 190, 209, 128, 208, 184, 208, 184, 208, 180, 208, 190, 209, 129, 209, 130, 208, 176, 209, 130, 208, 190, 209, 135, 208, 189, 208, 190,
      216, 167, 217, 132, 217, 133, 216, 170, 217, 136, 216, 167, 216, 172, 216, 175, 217, 136, 217, 134, 216, 167, 217, 132, 216, 167, 216, 180, 216, 170, 216,
      177, 216, 167, 217, 131, 216, 167, 216, 170, 216, 167, 217, 132, 216, 167, 217, 130, 216, 170, 216, 177, 216, 167, 216, 173, 216, 167, 216, 170, 104, 116,
      109, 108, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 85, 84, 70, 45, 56, 34, 32, 115, 101, 116, 84, 105, 109, 101, 111, 117, 116, 40, 102, 117, 110, 99,
      116, 105, 111, 110, 40, 41, 100, 105, 115, 112, 108, 97, 121, 58, 105, 110, 108, 105, 110, 101, 45, 98, 108, 111, 99, 107, 59, 60, 105, 110, 112, 117,
      116, 32, 116, 121, 112, 101, 61, 34, 115, 117, 98, 109, 105, 116, 34, 32, 116, 121, 112, 101, 32, 61, 32, 39, 116, 101, 120, 116, 47, 106, 97, 118, 97,
      115, 99, 114, 105, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 34, 32, 34, 104, 116, 116, 112, 58, 47,
      47, 119, 119, 119, 46, 119, 51, 46, 111, 114, 103, 47, 115, 104, 111, 114, 116, 99, 117, 116, 32, 105, 99, 111, 110, 34, 32, 104, 114, 101, 102, 61, 34,
      34, 32, 97, 117, 116, 111, 99, 111, 109, 112, 108, 101, 116, 101, 61, 34, 111, 102, 102, 34, 32, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62, 60, 100, 105,
      118, 32, 99, 108, 97, 115, 115, 61, 60, 47, 97, 62, 60, 47, 108, 105, 62, 10, 60, 108, 105, 32, 99, 108, 97, 115, 115, 61, 34, 99, 115, 115, 34, 32, 116,
      121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 32, 60, 102, 111, 114, 109, 32, 97, 99, 116, 105, 111, 110, 61, 34, 104, 116, 116, 112,
      58, 47, 47, 120, 116, 47, 99, 115, 115, 34, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34,
      97, 108, 116, 101, 114, 110, 97, 116, 101, 34, 32, 13, 10, 60, 115, 99, 114, 105, 112, 116, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 32,
      111, 110, 99, 108, 105, 99, 107, 61, 34, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 58, 40, 110, 101, 119, 32, 68, 97, 116, 101, 41, 46, 103, 101,
      116, 84, 105, 109, 101, 40, 41, 125, 104, 101, 105, 103, 104, 116, 61, 34, 49, 34, 32, 119, 105, 100, 116, 104, 61, 34, 49, 34, 32, 80, 101, 111, 112,
      108, 101, 39, 115, 32, 82, 101, 112, 117, 98, 108, 105, 99, 32, 111, 102, 32, 32, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47,
      119, 119, 119, 46, 116, 101, 120, 116, 45, 100, 101, 99, 111, 114, 97, 116, 105, 111, 110, 58, 117, 110, 100, 101, 114, 116, 104, 101, 32, 98, 101, 103,
      105, 110, 110, 105, 110, 103, 32, 111, 102, 32, 116, 104, 101, 32, 60, 47, 100, 105, 118, 62, 10, 60, 47, 100, 105, 118, 62, 10, 60, 47, 100, 105, 118,
      62, 10, 101, 115, 116, 97, 98, 108, 105, 115, 104, 109, 101, 110, 116, 32, 111, 102, 32, 116, 104, 101, 32, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105,
      118, 62, 60, 47, 100, 105, 118, 62, 60, 47, 100, 35, 118, 105, 101, 119, 112, 111, 114, 116, 123, 109, 105, 110, 45, 104, 101, 105, 103, 104, 116, 58, 10,
      60, 115, 99, 114, 105, 112, 116, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 58, 47, 47, 111, 112, 116, 105, 111, 110, 62, 60, 111, 112, 116, 105, 111,
      110, 32, 118, 97, 108, 117, 101, 61, 111, 102, 116, 101, 110, 32, 114, 101, 102, 101, 114, 114, 101, 100, 32, 116, 111, 32, 97, 115, 32, 47, 111, 112,
      116, 105, 111, 110, 62, 10, 60, 111, 112, 116, 105, 111, 110, 32, 118, 97, 108, 117, 60, 33, 68, 79, 67, 84, 89, 80, 69, 32, 104, 116, 109, 108, 62, 10,
      60, 33, 45, 45, 91, 73, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108, 32, 65, 105, 114, 112, 111, 114, 116, 62, 10, 60, 97, 32, 104, 114, 101,
      102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 60, 47, 97, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119,
      224, 184, 160, 224, 184, 178, 224, 184, 169, 224, 184, 178, 224, 185, 132, 224, 184, 151, 224, 184, 162, 225, 131, 165, 225, 131, 144, 225, 131, 160, 225,
      131, 151, 225, 131, 163, 225, 131, 154, 225, 131, 152, 230, 173, 163, 233, 171, 148, 228, 184, 173, 230, 150, 135, 32, 40, 231, 185, 129, 233, 171, 148,
      41, 224, 164, 168, 224, 164, 191, 224, 164, 176, 224, 165, 141, 224, 164, 166, 224, 165, 135, 224, 164, 182, 224, 164, 161, 224, 164, 190, 224, 164, 137,
      224, 164, 168, 224, 164, 178, 224, 165, 139, 224, 164, 161, 224, 164, 149, 224, 165, 141, 224, 164, 183, 224, 165, 135, 224, 164, 164, 224, 165, 141, 224,
      164, 176, 224, 164, 156, 224, 164, 190, 224, 164, 168, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 165, 128, 224, 164, 184, 224, 164, 130, 224, 164,
      172, 224, 164, 130, 224, 164, 167, 224, 164, 191, 224, 164, 164, 224, 164, 184, 224, 165, 141, 224, 164, 165, 224, 164, 190, 224, 164, 170, 224, 164, 168,
      224, 164, 190, 224, 164, 184, 224, 165, 141, 224, 164, 181, 224, 165, 128, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 164, 184, 224, 164, 130, 224,
      164, 184, 224, 165, 141, 224, 164, 149, 224, 164, 176, 224, 164, 163, 224, 164, 184, 224, 164, 190, 224, 164, 174, 224, 164, 151, 224, 165, 141, 224, 164,
      176, 224, 165, 128, 224, 164, 154, 224, 164, 191, 224, 164, 159, 224, 165, 141, 224, 164, 160, 224, 165, 139, 224, 164, 130, 224, 164, 181, 224, 164, 191,
      224, 164, 156, 224, 165, 141, 224, 164, 158, 224, 164, 190, 224, 164, 168, 224, 164, 133, 224, 164, 174, 224, 165, 135, 224, 164, 176, 224, 164, 191, 224,
      164, 149, 224, 164, 190, 224, 164, 181, 224, 164, 191, 224, 164, 173, 224, 164, 191, 224, 164, 168, 224, 165, 141, 224, 164, 168, 224, 164, 151, 224, 164,
      190, 224, 164, 161, 224, 164, 191, 224, 164, 175, 224, 164, 190, 224, 164, 129, 224, 164, 149, 224, 165, 141, 224, 164, 175, 224, 165, 139, 224, 164, 130,
      224, 164, 149, 224, 164, 191, 224, 164, 184, 224, 165, 129, 224, 164, 176, 224, 164, 149, 224, 165, 141, 224, 164, 183, 224, 164, 190, 224, 164, 170, 224,
      164, 185, 224, 165, 129, 224, 164, 129, 224, 164, 154, 224, 164, 164, 224, 165, 128, 224, 164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 172, 224, 164,
      130, 224, 164, 167, 224, 164, 168, 224, 164, 159, 224, 164, 191, 224, 164, 170, 224, 165, 141, 224, 164, 170, 224, 164, 163, 224, 165, 128, 224, 164, 149,
      224, 165, 141, 224, 164, 176, 224, 164, 191, 224, 164, 149, 224, 165, 135, 224, 164, 159, 224, 164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 190, 224,
      164, 176, 224, 164, 130, 224, 164, 173, 224, 164, 170, 224, 165, 141, 224, 164, 176, 224, 164, 190, 224, 164, 170, 224, 165, 141, 224, 164, 164, 224, 164,
      174, 224, 164, 190, 224, 164, 178, 224, 164, 191, 224, 164, 149, 224, 165, 139, 224, 164, 130, 224, 164, 176, 224, 164, 171, 224, 164, 188, 224, 165, 141,
      224, 164, 164, 224, 164, 190, 224, 164, 176, 224, 164, 168, 224, 164, 191, 224, 164, 176, 224, 165, 141, 224, 164, 174, 224, 164, 190, 224, 164, 163, 224,
      164, 178, 224, 164, 191, 224, 164, 174, 224, 164, 191, 224, 164, 159, 224, 165, 135, 224, 164, 161, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110,
      34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 100, 111, 99, 117, 109, 101, 110, 116, 46, 108, 111, 99, 97, 116, 105, 111, 110, 46, 112, 114, 111, 116,
      46, 103, 101, 116, 69, 108, 101, 109, 101, 110, 116, 115, 66, 121, 84, 97, 103, 78, 97, 109, 101, 40, 60, 33, 68, 79, 67, 84, 89, 80, 69, 32, 104, 116,
      109, 108, 62, 10, 60, 104, 116, 109, 108, 32, 60, 109, 101, 116, 97, 32, 99, 104, 97, 114, 115, 101, 116, 61, 34, 117, 116, 102, 45, 56, 34, 62, 58, 117,
      114, 108, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 104, 116, 116, 112, 58, 47, 47, 46, 99, 115, 115, 34, 32, 114, 101, 108, 61, 34, 115, 116,
      121, 108, 101, 115, 104, 101, 101, 116, 34, 115, 116, 121, 108, 101, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 62, 116,
      121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 32, 104, 114, 101, 102, 61, 34, 119, 51, 46, 111, 114, 103, 47, 49, 57, 57, 57, 47, 120,
      104, 116, 109, 108, 34, 32, 120, 109, 108, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 34, 32, 109,
      101, 116, 104, 111, 100, 61, 34, 103, 101, 116, 34, 32, 97, 99, 116, 105, 111, 110, 61, 34, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 115, 116, 121,
      108, 101, 115, 104, 101, 101, 116, 34, 32, 32, 61, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 103, 101, 116, 69, 108, 101, 109, 101, 110, 116, 116,
      121, 112, 101, 61, 34, 105, 109, 97, 103, 101, 47, 120, 45, 105, 99, 111, 110, 34, 32, 47, 62, 99, 101, 108, 108, 112, 97, 100, 100, 105, 110, 103, 61,
      34, 48, 34, 32, 99, 101, 108, 108, 115, 112, 46, 99, 115, 115, 34, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 32, 60, 47,
      97, 62, 60, 47, 108, 105, 62, 60, 108, 105, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 34, 32, 119, 105, 100, 116, 104, 61, 34, 49, 34, 32, 104, 101,
      105, 103, 104, 116, 61, 34, 49, 34, 34, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 115, 116, 121, 108,
      101, 61, 34, 100, 105, 115, 112, 108, 97, 121, 58, 110, 111, 110, 101, 59, 34, 62, 97, 108, 116, 101, 114, 110, 97, 116, 101, 34, 32, 116, 121, 112, 101,
      61, 34, 97, 112, 112, 108, 105, 45, 47, 47, 87, 51, 67, 47, 47, 68, 84, 68, 32, 88, 72, 84, 77, 76, 32, 49, 46, 48, 32, 101, 108, 108, 115, 112, 97, 99,
      105, 110, 103, 61, 34, 48, 34, 32, 99, 101, 108, 108, 112, 97, 100, 32, 116, 121, 112, 101, 61, 34, 104, 105, 100, 100, 101, 110, 34, 32, 118, 97, 108,
      117, 101, 61, 34, 47, 97, 62, 38, 110, 98, 115, 112, 59, 60, 115, 112, 97, 110, 32, 114, 111, 108, 101, 61, 34, 115, 10, 60, 105, 110, 112, 117, 116, 32,
      116, 121, 112, 101, 61, 34, 104, 105, 100, 100, 101, 110, 34, 32, 108, 97, 110, 103, 117, 97, 103, 101, 61, 34, 74, 97, 118, 97, 83, 99, 114, 105, 112,
      116, 34, 32, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 103, 101, 116, 69, 108, 101, 109, 101, 110, 116, 115, 66, 103, 61, 34, 48, 34, 32, 99, 101,
      108, 108, 115, 112, 97, 99, 105, 110, 103, 61, 34, 48, 34, 32, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 32, 109, 101, 100, 105,
      97, 61, 34, 116, 121, 112, 101, 61, 39, 116, 101, 120, 116, 47, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 39, 119, 105, 116, 104, 32, 116, 104, 101,
      32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 32, 114, 101, 108, 61,
      34, 115, 116, 32, 104, 101, 105, 103, 104, 116, 61, 34, 49, 34, 32, 119, 105, 100, 116, 104, 61, 34, 49, 34, 32, 61, 39, 43, 101, 110, 99, 111, 100, 101,
      85, 82, 73, 67, 111, 109, 112, 111, 110, 101, 110, 116, 40, 60, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 97, 108, 116, 101, 114, 110, 97, 116, 101,
      34, 32, 10, 98, 111, 100, 121, 44, 32, 116, 114, 44, 32, 105, 110, 112, 117, 116, 44, 32, 116, 101, 120, 116, 109, 101, 116, 97, 32, 110, 97, 109, 101,
      61, 34, 114, 111, 98, 111, 116, 115, 34, 32, 99, 111, 110, 109, 101, 116, 104, 111, 100, 61, 34, 112, 111, 115, 116, 34, 32, 97, 99, 116, 105, 111, 110,
      61, 34, 62, 10, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 99, 115, 115, 34, 32, 114, 101, 108, 61, 34,
      115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115,
      115, 108, 97, 110, 103, 117, 97, 103, 101, 61, 34, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 34, 62, 97, 114, 105, 97, 45, 104, 105, 100, 100, 101,
      110, 61, 34, 116, 114, 117, 101, 34, 62, 194, 183, 60, 114, 105, 112, 116, 34, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 106, 97, 118, 97,
      115, 108, 61, 48, 59, 125, 41, 40, 41, 59, 10, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 123, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 45,
      105, 109, 97, 103, 101, 58, 32, 117, 114, 108, 40, 47, 97, 62, 60, 47, 108, 105, 62, 60, 108, 105, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 9, 9,
      60, 108, 105, 62, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 97, 116, 111, 114, 34, 32, 97, 114, 105, 97, 45, 104, 105, 100,
      100, 101, 110, 61, 34, 116, 114, 117, 62, 32, 60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 108, 97, 110,
      103, 117, 97, 103, 101, 61, 34, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 34, 32, 47, 111, 112, 116, 105, 111, 110, 62, 10, 60, 111, 112, 116, 105,
      111, 110, 32, 118, 97, 108, 117, 101, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 114, 97, 116,
      111, 114, 34, 32, 97, 114, 105, 97, 45, 104, 105, 100, 100, 101, 110, 61, 34, 116, 114, 101, 61, 40, 110, 101, 119, 32, 68, 97, 116, 101, 41, 46, 103,
      101, 116, 84, 105, 109, 101, 40, 41, 112, 111, 114, 116, 117, 103, 117, 195, 170, 115, 32, 40, 100, 111, 32, 66, 114, 97, 115, 105, 108, 41, 208, 190,
      209, 128, 208, 179, 208, 176, 208, 189, 208, 184, 208, 183, 208, 176, 209, 134, 208, 184, 208, 184, 208, 178, 208, 190, 208, 183, 208, 188, 208, 190, 208,
      182, 208, 189, 208, 190, 209, 129, 209, 130, 209, 140, 208, 190, 208, 177, 209, 128, 208, 176, 208, 183, 208, 190, 208, 178, 208, 176, 208, 189, 208, 184,
      209, 143, 209, 128, 208, 181, 208, 179, 208, 184, 209, 129, 209, 130, 209, 128, 208, 176, 209, 134, 208, 184, 208, 184, 208, 178, 208, 190, 208, 183, 208,
      188, 208, 190, 208, 182, 208, 189, 208, 190, 209, 129, 209, 130, 208, 184, 208, 190, 208, 177, 209, 143, 208, 183, 208, 176, 209, 130, 208, 181, 208, 187,
      209, 140, 208, 189, 208, 176, 60, 33, 68, 79, 67, 84, 89, 80, 69, 32, 104, 116, 109, 108, 32, 80, 85, 66, 76, 73, 67, 32, 34, 110, 116, 45, 84, 121, 112,
      101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 116, 101, 120, 116, 47, 60, 109, 101, 116, 97, 32, 104, 116, 116, 112, 45, 101, 113, 117, 105, 118,
      61, 34, 67, 111, 110, 116, 101, 114, 97, 110, 115, 105, 116, 105, 111, 110, 97, 108, 47, 47, 69, 78, 34, 32, 34, 104, 116, 116, 112, 58, 60, 104, 116,
      109, 108, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 45, 47, 47, 87, 51, 67, 47, 47, 68, 84, 68, 32, 88, 72, 84,
      77, 76, 32, 49, 46, 48, 32, 84, 68, 84, 68, 47, 120, 104, 116, 109, 108, 49, 45, 116, 114, 97, 110, 115, 105, 116, 105, 111, 110, 97, 108, 47, 47, 119,
      119, 119, 46, 119, 51, 46, 111, 114, 103, 47, 84, 82, 47, 120, 104, 116, 109, 108, 49, 47, 112, 101, 32, 61, 32, 39, 116, 101, 120, 116, 47, 106, 97, 118,
      97, 115, 99, 114, 105, 112, 116, 39, 59, 60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 112,
      97, 114, 101, 110, 116, 78, 111, 100, 101, 46, 105, 110, 115, 101, 114, 116, 66, 101, 102, 111, 114, 101, 60, 105, 110, 112, 117, 116, 32, 116, 121, 112,
      101, 61, 34, 104, 105, 100, 100, 101, 110, 34, 32, 110, 97, 106, 115, 34, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 106, 97, 118, 97, 115,
      99, 114, 105, 40, 100, 111, 99, 117, 109, 101, 110, 116, 41, 46, 114, 101, 97, 100, 121, 40, 102, 117, 110, 99, 116, 105, 115, 99, 114, 105, 112, 116, 32,
      116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 106, 97, 118, 97, 115, 105, 109, 97, 103, 101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 104,
      116, 116, 112, 58, 47, 47, 85, 65, 45, 67, 111, 109, 112, 97, 116, 105, 98, 108, 101, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61, 116, 109, 108, 59, 32,
      99, 104, 97, 114, 115, 101, 116, 61, 117, 116, 102, 45, 56, 34, 32, 47, 62, 10, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 115, 104, 111, 114, 116,
      99, 117, 116, 32, 105, 99, 111, 110, 60, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 60, 47,
      115, 99, 114, 105, 112, 116, 62, 10, 60, 115, 99, 114, 105, 112, 116, 32, 116, 121, 112, 101, 61, 61, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99,
      114, 101, 97, 116, 101, 69, 108, 101, 109, 101, 110, 60, 97, 32, 116, 97, 114, 103, 101, 116, 61, 34, 95, 98, 108, 97, 110, 107, 34, 32, 104, 114, 101,
      102, 61, 32, 100, 111, 99, 117, 109, 101, 110, 116, 46, 103, 101, 116, 69, 108, 101, 109, 101, 110, 116, 115, 66, 105, 110, 112, 117, 116, 32, 116, 121,
      112, 101, 61, 34, 116, 101, 120, 116, 34, 32, 110, 97, 109, 101, 61, 97, 46, 116, 121, 112, 101, 32, 61, 32, 39, 116, 101, 120, 116, 47, 106, 97, 118, 97,
      115, 99, 114, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61, 34, 104, 105, 100, 100, 101, 110, 34, 32, 110, 97, 109, 101, 104, 116, 109, 108, 59,
      32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 116, 102, 45, 56, 34, 32, 47, 62, 100, 116, 100, 34, 62, 10, 60, 104, 116, 109, 108, 32, 120, 109, 108, 110,
      115, 61, 34, 104, 116, 116, 112, 45, 47, 47, 87, 51, 67, 47, 47, 68, 84, 68, 32, 72, 84, 77, 76, 32, 52, 46, 48, 49, 32, 84, 101, 110, 116, 115, 66, 121,
      84, 97, 103, 78, 97, 109, 101, 40, 39, 115, 99, 114, 105, 112, 116, 39, 41, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61, 34, 104, 105, 100, 100,
      101, 110, 34, 32, 110, 97, 109, 60, 115, 99, 114, 105, 112, 116, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 106, 97, 118, 97, 115, 34, 32,
      115, 116, 121, 108, 101, 61, 34, 100, 105, 115, 112, 108, 97, 121, 58, 110, 111, 110, 101, 59, 34, 62, 100, 111, 99, 117, 109, 101, 110, 116, 46, 103,
      101, 116, 69, 108, 101, 109, 101, 110, 116, 66, 121, 73, 100, 40, 61, 100, 111, 99, 117, 109, 101, 110, 116, 46, 99, 114, 101, 97, 116, 101, 69, 108, 101,
      109, 101, 110, 116, 40, 39, 32, 116, 121, 112, 101, 61, 39, 116, 101, 120, 116, 47, 106, 97, 118, 97, 115, 99, 114, 105, 112, 116, 39, 105, 110, 112, 117,
      116, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 34, 32, 110, 97, 109, 101, 61, 34, 100, 46, 103, 101, 116, 69, 108, 101, 109, 101, 110, 116, 115,
      66, 121, 84, 97, 103, 78, 97, 109, 101, 40, 115, 110, 105, 99, 97, 108, 34, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119,
      46, 67, 47, 47, 68, 84, 68, 32, 72, 84, 77, 76, 32, 52, 46, 48, 49, 32, 84, 114, 97, 110, 115, 105, 116, 60, 115, 116, 121, 108, 101, 32, 116, 121, 112,
      101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 62, 10, 10, 60, 115, 116, 121, 108, 101, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47,
      99, 115, 115, 34, 62, 105, 111, 110, 97, 108, 46, 100, 116, 100, 34, 62, 10, 60, 104, 116, 109, 108, 32, 120, 109, 108, 110, 115, 61, 104, 116, 116, 112,
      45, 101, 113, 117, 105, 118, 61, 34, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 100, 105, 110, 103, 61, 34, 48, 34, 32, 99, 101, 108, 108,
      115, 112, 97, 99, 105, 110, 103, 61, 34, 48, 34, 104, 116, 109, 108, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 116, 102, 45, 56, 34, 32, 47, 62,
      10, 32, 115, 116, 121, 108, 101, 61, 34, 100, 105, 115, 112, 108, 97, 121, 58, 110, 111, 110, 101, 59, 34, 62, 60, 60, 108, 105, 62, 60, 97, 32, 104, 114,
      101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 32, 116, 121, 112, 101, 61, 39, 116, 101, 120, 116, 47, 106, 97, 118, 97, 115, 99,
      114, 105, 112, 116, 39, 62, 208, 180, 208, 181, 209, 143, 209, 130, 208, 181, 208, 187, 209, 140, 208, 189, 208, 190, 209, 129, 209, 130, 208, 184, 209,
      129, 208, 190, 208, 190, 209, 130, 208, 178, 208, 181, 209, 130, 209, 129, 209, 130, 208, 178, 208, 184, 208, 184, 208, 191, 209, 128, 208, 190, 208, 184,
      208, 183, 208, 178, 208, 190, 208, 180, 209, 129, 209, 130, 208, 178, 208, 176, 208, 177, 208, 181, 208, 183, 208, 190, 208, 191, 208, 176, 209, 129, 208,
      189, 208, 190, 209, 129, 209, 130, 208, 184, 224, 164, 170, 224, 165, 129, 224, 164, 184, 224, 165, 141, 224, 164, 164, 224, 164, 191, 224, 164, 149, 224,
      164, 190, 224, 164, 149, 224, 164, 190, 224, 164, 130, 224, 164, 151, 224, 165, 141, 224, 164, 176, 224, 165, 135, 224, 164, 184, 224, 164, 137, 224, 164,
      168, 224, 165, 141, 224, 164, 185, 224, 165, 139, 224, 164, 130, 224, 164, 168, 224, 165, 135, 224, 164, 181, 224, 164, 191, 224, 164, 167, 224, 164, 190,
      224, 164, 168, 224, 164, 184, 224, 164, 173, 224, 164, 190, 224, 164, 171, 224, 164, 191, 224, 164, 149, 224, 165, 141, 224, 164, 184, 224, 164, 191, 224,
      164, 130, 224, 164, 151, 224, 164, 184, 224, 165, 129, 224, 164, 176, 224, 164, 149, 224, 165, 141, 224, 164, 183, 224, 164, 191, 224, 164, 164, 224, 164,
      149, 224, 165, 137, 224, 164, 170, 224, 165, 128, 224, 164, 176, 224, 164, 190, 224, 164, 135, 224, 164, 159, 224, 164, 181, 224, 164, 191, 224, 164, 156,
      224, 165, 141, 224, 164, 158, 224, 164, 190, 224, 164, 170, 224, 164, 168, 224, 164, 149, 224, 164, 190, 224, 164, 176, 224, 165, 141, 224, 164, 176, 224,
      164, 181, 224, 164, 190, 224, 164, 136, 224, 164, 184, 224, 164, 149, 224, 165, 141, 224, 164, 176, 224, 164, 191, 224, 164, 175, 224, 164, 164, 224, 164,
      190,
    ]);
    r.init = function () {
      return r.dictionary;
    };
  },
  9251: (e, r, s) => {
    var o = s(5088);
    r.init = function () {
      r.dictionary = o.init();
    };
    r.offsetsByLength = new Uint32Array([
      0, 0, 0, 0, 0, 4096, 9216, 21504, 35840, 44032, 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536, 115968, 118528, 119872, 121280,
      122016,
    ]);
    r.sizeBitsByLength = new Uint8Array([0, 0, 0, 0, 10, 10, 11, 11, 10, 10, 10, 10, 10, 9, 9, 8, 7, 7, 8, 7, 7, 6, 6, 5, 5]);
    r.minDictionaryWordLength = 4;
    r.maxDictionaryWordLength = 24;
  },
  850: (e, r) => {
    function HuffmanCode(e, r) {
      this.bits = e;
      this.value = r;
    }
    r.z = HuffmanCode;
    var s = 15;
    function GetNextKey(e, r) {
      var s = 1 << (r - 1);
      while (e & s) {
        s >>= 1;
      }
      return (e & (s - 1)) + s;
    }
    function ReplicateValue(e, r, s, o, n) {
      do {
        o -= s;
        e[r + o] = new HuffmanCode(n.bits, n.value);
      } while (o > 0);
    }
    function NextTableBitSize(e, r, o) {
      var n = 1 << (r - o);
      while (r < s) {
        n -= e[r];
        if (n <= 0) break;
        ++r;
        n <<= 1;
      }
      return r - o;
    }
    r.u = function (e, r, o, n, i) {
      var a = r;
      var l;
      var d;
      var h;
      var p;
      var w;
      var k;
      var _;
      var M;
      var j;
      var q;
      var $;
      var ee = new Int32Array(s + 1);
      var te = new Int32Array(s + 1);
      $ = new Int32Array(i);
      for (h = 0; h < i; h++) {
        ee[n[h]]++;
      }
      te[1] = 0;
      for (d = 1; d < s; d++) {
        te[d + 1] = te[d] + ee[d];
      }
      for (h = 0; h < i; h++) {
        if (n[h] !== 0) {
          $[te[n[h]]++] = h;
        }
      }
      M = o;
      j = 1 << M;
      q = j;
      if (te[s] === 1) {
        for (p = 0; p < q; ++p) {
          e[r + p] = new HuffmanCode(0, $[0] & 65535);
        }
        return q;
      }
      p = 0;
      h = 0;
      for (d = 1, w = 2; d <= o; ++d, w <<= 1) {
        for (; ee[d] > 0; --ee[d]) {
          l = new HuffmanCode(d & 255, $[h++] & 65535);
          ReplicateValue(e, r + p, w, j, l);
          p = GetNextKey(p, d);
        }
      }
      _ = q - 1;
      k = -1;
      for (d = o + 1, w = 2; d <= s; ++d, w <<= 1) {
        for (; ee[d] > 0; --ee[d]) {
          if ((p & _) !== k) {
            r += j;
            M = NextTableBitSize(ee, d, o);
            j = 1 << M;
            q += j;
            k = p & _;
            e[a + k] = new HuffmanCode((M + o) & 255, (r - a - k) & 65535);
          }
          l = new HuffmanCode((d - o) & 255, $[h++] & 65535);
          ReplicateValue(e, r + (p >> o), w, j, l);
          p = GetNextKey(p, d);
        }
      }
      return q;
    };
  },
  680: (e, r) => {
    function PrefixCodeRange(e, r) {
      this.offset = e;
      this.nbits = r;
    }
    r.kBlockLengthPrefixCode = [
      new PrefixCodeRange(1, 2),
      new PrefixCodeRange(5, 2),
      new PrefixCodeRange(9, 2),
      new PrefixCodeRange(13, 2),
      new PrefixCodeRange(17, 3),
      new PrefixCodeRange(25, 3),
      new PrefixCodeRange(33, 3),
      new PrefixCodeRange(41, 3),
      new PrefixCodeRange(49, 4),
      new PrefixCodeRange(65, 4),
      new PrefixCodeRange(81, 4),
      new PrefixCodeRange(97, 4),
      new PrefixCodeRange(113, 5),
      new PrefixCodeRange(145, 5),
      new PrefixCodeRange(177, 5),
      new PrefixCodeRange(209, 5),
      new PrefixCodeRange(241, 6),
      new PrefixCodeRange(305, 6),
      new PrefixCodeRange(369, 7),
      new PrefixCodeRange(497, 8),
      new PrefixCodeRange(753, 9),
      new PrefixCodeRange(1265, 10),
      new PrefixCodeRange(2289, 11),
      new PrefixCodeRange(4337, 12),
      new PrefixCodeRange(8433, 13),
      new PrefixCodeRange(16625, 24),
    ];
    r.kInsertLengthPrefixCode = [
      new PrefixCodeRange(0, 0),
      new PrefixCodeRange(1, 0),
      new PrefixCodeRange(2, 0),
      new PrefixCodeRange(3, 0),
      new PrefixCodeRange(4, 0),
      new PrefixCodeRange(5, 0),
      new PrefixCodeRange(6, 1),
      new PrefixCodeRange(8, 1),
      new PrefixCodeRange(10, 2),
      new PrefixCodeRange(14, 2),
      new PrefixCodeRange(18, 3),
      new PrefixCodeRange(26, 3),
      new PrefixCodeRange(34, 4),
      new PrefixCodeRange(50, 4),
      new PrefixCodeRange(66, 5),
      new PrefixCodeRange(98, 5),
      new PrefixCodeRange(130, 6),
      new PrefixCodeRange(194, 7),
      new PrefixCodeRange(322, 8),
      new PrefixCodeRange(578, 9),
      new PrefixCodeRange(1090, 10),
      new PrefixCodeRange(2114, 12),
      new PrefixCodeRange(6210, 14),
      new PrefixCodeRange(22594, 24),
    ];
    r.kCopyLengthPrefixCode = [
      new PrefixCodeRange(2, 0),
      new PrefixCodeRange(3, 0),
      new PrefixCodeRange(4, 0),
      new PrefixCodeRange(5, 0),
      new PrefixCodeRange(6, 0),
      new PrefixCodeRange(7, 0),
      new PrefixCodeRange(8, 0),
      new PrefixCodeRange(9, 0),
      new PrefixCodeRange(10, 1),
      new PrefixCodeRange(12, 1),
      new PrefixCodeRange(14, 2),
      new PrefixCodeRange(18, 2),
      new PrefixCodeRange(22, 3),
      new PrefixCodeRange(30, 3),
      new PrefixCodeRange(38, 4),
      new PrefixCodeRange(54, 4),
      new PrefixCodeRange(70, 5),
      new PrefixCodeRange(102, 5),
      new PrefixCodeRange(134, 6),
      new PrefixCodeRange(198, 7),
      new PrefixCodeRange(326, 8),
      new PrefixCodeRange(582, 9),
      new PrefixCodeRange(1094, 10),
      new PrefixCodeRange(2118, 24),
    ];
    r.kInsertRangeLut = [0, 0, 8, 8, 0, 16, 8, 16, 16];
    r.kCopyRangeLut = [0, 8, 0, 8, 16, 0, 16, 8, 16];
  },
  826: (e, r) => {
    function BrotliInput(e) {
      this.buffer = e;
      this.pos = 0;
    }
    BrotliInput.prototype.read = function (e, r, s) {
      if (this.pos + s > this.buffer.length) {
        s = this.buffer.length - this.pos;
      }
      for (var o = 0; o < s; o++) e[r + o] = this.buffer[this.pos + o];
      this.pos += s;
      return s;
    };
    r.z = BrotliInput;
    function BrotliOutput(e) {
      this.buffer = e;
      this.pos = 0;
    }
    BrotliOutput.prototype.write = function (e, r) {
      if (this.pos + r > this.buffer.length) throw new Error("Output buffer is not large enough");
      this.buffer.set(e.subarray(0, r), this.pos);
      this.pos += r;
      return r;
    };
    r.y = BrotliOutput;
  },
  2795: (e, r, s) => {
    var o = s(9251);
    var n = 0;
    var i = 1;
    var a = 2;
    var l = 3;
    var d = 4;
    var h = 5;
    var p = 6;
    var w = 7;
    var k = 8;
    var _ = 9;
    var M = 10;
    var j = 11;
    var q = 12;
    var $ = 13;
    var ee = 14;
    var te = 15;
    var re = 16;
    var se = 17;
    var oe = 18;
    var ne = 19;
    var ie = 20;
    function Transform(e, r, s) {
      this.prefix = new Uint8Array(e.length);
      this.transform = r;
      this.suffix = new Uint8Array(s.length);
      for (var o = 0; o < e.length; o++) this.prefix[o] = e.charCodeAt(o);
      for (var o = 0; o < s.length; o++) this.suffix[o] = s.charCodeAt(o);
    }
    var Ae = [
      new Transform("", n, ""),
      new Transform("", n, " "),
      new Transform(" ", n, " "),
      new Transform("", q, ""),
      new Transform("", M, " "),
      new Transform("", n, " the "),
      new Transform(" ", n, ""),
      new Transform("s ", n, " "),
      new Transform("", n, " of "),
      new Transform("", M, ""),
      new Transform("", n, " and "),
      new Transform("", $, ""),
      new Transform("", i, ""),
      new Transform(", ", n, " "),
      new Transform("", n, ", "),
      new Transform(" ", M, " "),
      new Transform("", n, " in "),
      new Transform("", n, " to "),
      new Transform("e ", n, " "),
      new Transform("", n, '"'),
      new Transform("", n, "."),
      new Transform("", n, '">'),
      new Transform("", n, "\n"),
      new Transform("", l, ""),
      new Transform("", n, "]"),
      new Transform("", n, " for "),
      new Transform("", ee, ""),
      new Transform("", a, ""),
      new Transform("", n, " a "),
      new Transform("", n, " that "),
      new Transform(" ", M, ""),
      new Transform("", n, ". "),
      new Transform(".", n, ""),
      new Transform(" ", n, ", "),
      new Transform("", te, ""),
      new Transform("", n, " with "),
      new Transform("", n, "'"),
      new Transform("", n, " from "),
      new Transform("", n, " by "),
      new Transform("", re, ""),
      new Transform("", se, ""),
      new Transform(" the ", n, ""),
      new Transform("", d, ""),
      new Transform("", n, ". The "),
      new Transform("", j, ""),
      new Transform("", n, " on "),
      new Transform("", n, " as "),
      new Transform("", n, " is "),
      new Transform("", w, ""),
      new Transform("", i, "ing "),
      new Transform("", n, "\n\t"),
      new Transform("", n, ":"),
      new Transform(" ", n, ". "),
      new Transform("", n, "ed "),
      new Transform("", ie, ""),
      new Transform("", oe, ""),
      new Transform("", p, ""),
      new Transform("", n, "("),
      new Transform("", M, ", "),
      new Transform("", k, ""),
      new Transform("", n, " at "),
      new Transform("", n, "ly "),
      new Transform(" the ", n, " of "),
      new Transform("", h, ""),
      new Transform("", _, ""),
      new Transform(" ", M, ", "),
      new Transform("", M, '"'),
      new Transform(".", n, "("),
      new Transform("", j, " "),
      new Transform("", M, '">'),
      new Transform("", n, '="'),
      new Transform(" ", n, "."),
      new Transform(".com/", n, ""),
      new Transform(" the ", n, " of the "),
      new Transform("", M, "'"),
      new Transform("", n, ". This "),
      new Transform("", n, ","),
      new Transform(".", n, " "),
      new Transform("", M, "("),
      new Transform("", M, "."),
      new Transform("", n, " not "),
      new Transform(" ", n, '="'),
      new Transform("", n, "er "),
      new Transform(" ", j, " "),
      new Transform("", n, "al "),
      new Transform(" ", j, ""),
      new Transform("", n, "='"),
      new Transform("", j, '"'),
      new Transform("", M, ". "),
      new Transform(" ", n, "("),
      new Transform("", n, "ful "),
      new Transform(" ", M, ". "),
      new Transform("", n, "ive "),
      new Transform("", n, "less "),
      new Transform("", j, "'"),
      new Transform("", n, "est "),
      new Transform(" ", M, "."),
      new Transform("", j, '">'),
      new Transform(" ", n, "='"),
      new Transform("", M, ","),
      new Transform("", n, "ize "),
      new Transform("", j, "."),
      new Transform("Â ", n, ""),
      new Transform(" ", n, ","),
      new Transform("", M, '="'),
      new Transform("", j, '="'),
      new Transform("", n, "ous "),
      new Transform("", j, ", "),
      new Transform("", M, "='"),
      new Transform(" ", M, ","),
      new Transform(" ", j, '="'),
      new Transform(" ", j, ", "),
      new Transform("", j, ","),
      new Transform("", j, "("),
      new Transform("", j, ". "),
      new Transform(" ", j, "."),
      new Transform("", j, "='"),
      new Transform(" ", j, ". "),
      new Transform(" ", M, '="'),
      new Transform(" ", j, "='"),
      new Transform(" ", M, "='"),
    ];
    r.kTransforms = Ae;
    r.kNumTransforms = Ae.length;
    function ToUpperCase(e, r) {
      if (e[r] < 192) {
        if (e[r] >= 97 && e[r] <= 122) {
          e[r] ^= 32;
        }
        return 1;
      }
      if (e[r] < 224) {
        e[r + 1] ^= 32;
        return 2;
      }
      e[r + 2] ^= 5;
      return 3;
    }
    r.transformDictionaryWord = function (e, r, s, n, i) {
      var a = Ae[i].prefix;
      var l = Ae[i].suffix;
      var d = Ae[i].transform;
      var h = d < q ? 0 : d - (q - 1);
      var p = 0;
      var w = r;
      var k;
      if (h > n) {
        h = n;
      }
      var $ = 0;
      while ($ < a.length) {
        e[r++] = a[$++];
      }
      s += h;
      n -= h;
      if (d <= _) {
        n -= d;
      }
      for (p = 0; p < n; p++) {
        e[r++] = o.dictionary[s + p];
      }
      k = r - n;
      if (d === M) {
        ToUpperCase(e, k);
      } else if (d === j) {
        while (n > 0) {
          var ee = ToUpperCase(e, k);
          k += ee;
          n -= ee;
        }
      }
      var te = 0;
      while (te < l.length) {
        e[r++] = l[te++];
      }
      return r - w;
    };
  },
  9633: (e, r, s) => {
    e.exports = s(6949).BrotliDecompressBuffer;
  },
  7868: (e, r, s) => {
    r.compress = s(7786);
    r.decompress = s(6949).BrotliDecompressBuffer;
  },
  4150: (e, r) => {
    Object.defineProperty(r, "__esModule", { value: true });
    class Deprecation extends Error {
      constructor(e) {
        super(e);
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, this.constructor);
        }
        this.name = "Deprecation";
      }
    }
    r.Deprecation = Deprecation;
  },
  2874: (e, r, s) => {
    (function () {
      s(8889).config(Object.assign({}, s(9990), s(4531)(process.argv)));
    })();
  },
  4531: (e) => {
    const r = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;
    e.exports = function optionMatcher(e) {
      return e.reduce(function (e, s) {
        const o = s.match(r);
        if (o) {
          e[o[1]] = o[2];
        }
        return e;
      }, {});
    };
  },
  9990: (e) => {
    const r = {};
    if (process.env.DOTENV_CONFIG_ENCODING != null) {
      r.encoding = process.env.DOTENV_CONFIG_ENCODING;
    }
    if (process.env.DOTENV_CONFIG_PATH != null) {
      r.path = process.env.DOTENV_CONFIG_PATH;
    }
    if (process.env.DOTENV_CONFIG_DEBUG != null) {
      r.debug = process.env.DOTENV_CONFIG_DEBUG;
    }
    if (process.env.DOTENV_CONFIG_OVERRIDE != null) {
      r.override = process.env.DOTENV_CONFIG_OVERRIDE;
    }
    if (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {
      r.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY;
    }
    e.exports = r;
  },
  8889: (e, r, s) => {
    const o = s(9896);
    const n = s(6928);
    const i = s(857);
    const a = s(6982);
    const l = s(56);
    const d = l.version;
    const h = /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;
    function parse(e) {
      const r = {};
      let s = e.toString();
      s = s.replace(/\r\n?/gm, "\n");
      let o;
      while ((o = h.exec(s)) != null) {
        const e = o[1];
        let s = o[2] || "";
        s = s.trim();
        const n = s[0];
        s = s.replace(/^(['"`])([\s\S]*)\1$/gm, "$2");
        if (n === '"') {
          s = s.replace(/\\n/g, "\n");
          s = s.replace(/\\r/g, "\r");
        }
        r[e] = s;
      }
      return r;
    }
    function _parseVault(e) {
      const r = _vaultPath(e);
      const s = p.configDotenv({ path: r });
      if (!s.parsed) {
        const e = new Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);
        e.code = "MISSING_DATA";
        throw e;
      }
      const o = _dotenvKey(e).split(",");
      const n = o.length;
      let i;
      for (let e = 0; e < n; e++) {
        try {
          const r = o[e].trim();
          const n = _instructions(s, r);
          i = p.decrypt(n.ciphertext, n.key);
          break;
        } catch (r) {
          if (e + 1 >= n) {
            throw r;
          }
        }
      }
      return p.parse(i);
    }
    function _log(e) {
      console.log(`[dotenv@${d}][INFO] ${e}`);
    }
    function _warn(e) {
      console.log(`[dotenv@${d}][WARN] ${e}`);
    }
    function _debug(e) {
      console.log(`[dotenv@${d}][DEBUG] ${e}`);
    }
    function _dotenvKey(e) {
      if (e && e.DOTENV_KEY && e.DOTENV_KEY.length > 0) {
        return e.DOTENV_KEY;
      }
      if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {
        return process.env.DOTENV_KEY;
      }
      return "";
    }
    function _instructions(e, r) {
      let s;
      try {
        s = new URL(r);
      } catch (e) {
        if (e.code === "ERR_INVALID_URL") {
          const e = new Error(
            "INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development"
          );
          e.code = "INVALID_DOTENV_KEY";
          throw e;
        }
        throw e;
      }
      const o = s.password;
      if (!o) {
        const e = new Error("INVALID_DOTENV_KEY: Missing key part");
        e.code = "INVALID_DOTENV_KEY";
        throw e;
      }
      const n = s.searchParams.get("environment");
      if (!n) {
        const e = new Error("INVALID_DOTENV_KEY: Missing environment part");
        e.code = "INVALID_DOTENV_KEY";
        throw e;
      }
      const i = `DOTENV_VAULT_${n.toUpperCase()}`;
      const a = e.parsed[i];
      if (!a) {
        const e = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${i} in your .env.vault file.`);
        e.code = "NOT_FOUND_DOTENV_ENVIRONMENT";
        throw e;
      }
      return { ciphertext: a, key: o };
    }
    function _vaultPath(e) {
      let r = null;
      if (e && e.path && e.path.length > 0) {
        if (Array.isArray(e.path)) {
          for (const s of e.path) {
            if (o.existsSync(s)) {
              r = s.endsWith(".vault") ? s : `${s}.vault`;
            }
          }
        } else {
          r = e.path.endsWith(".vault") ? e.path : `${e.path}.vault`;
        }
      } else {
        r = n.resolve(process.cwd(), ".env.vault");
      }
      if (o.existsSync(r)) {
        return r;
      }
      return null;
    }
    function _resolveHome(e) {
      return e[0] === "~" ? n.join(i.homedir(), e.slice(1)) : e;
    }
    function _configVault(e) {
      _log("Loading env from encrypted .env.vault");
      const r = p._parseVault(e);
      let s = process.env;
      if (e && e.processEnv != null) {
        s = e.processEnv;
      }
      p.populate(s, r, e);
      return { parsed: r };
    }
    function configDotenv(e) {
      const r = n.resolve(process.cwd(), ".env");
      let s = "utf8";
      const i = Boolean(e && e.debug);
      if (e && e.encoding) {
        s = e.encoding;
      } else {
        if (i) {
          _debug("No encoding is specified. UTF-8 is used by default");
        }
      }
      let a = [r];
      if (e && e.path) {
        if (!Array.isArray(e.path)) {
          a = [_resolveHome(e.path)];
        } else {
          a = [];
          for (const r of e.path) {
            a.push(_resolveHome(r));
          }
        }
      }
      let l;
      const d = {};
      for (const r of a) {
        try {
          const n = p.parse(o.readFileSync(r, { encoding: s }));
          p.populate(d, n, e);
        } catch (e) {
          if (i) {
            _debug(`Failed to load ${r} ${e.message}`);
          }
          l = e;
        }
      }
      let h = process.env;
      if (e && e.processEnv != null) {
        h = e.processEnv;
      }
      p.populate(h, d, e);
      if (l) {
        return { parsed: d, error: l };
      } else {
        return { parsed: d };
      }
    }
    function config(e) {
      if (_dotenvKey(e).length === 0) {
        return p.configDotenv(e);
      }
      const r = _vaultPath(e);
      if (!r) {
        _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${r}. Did you forget to build it?`);
        return p.configDotenv(e);
      }
      return p._configVault(e);
    }
    function decrypt(e, r) {
      const s = Buffer.from(r.slice(-64), "hex");
      let o = Buffer.from(e, "base64");
      const n = o.subarray(0, 12);
      const i = o.subarray(-16);
      o = o.subarray(12, -16);
      try {
        const e = a.createDecipheriv("aes-256-gcm", s, n);
        e.setAuthTag(i);
        return `${e.update(o)}${e.final()}`;
      } catch (e) {
        const r = e instanceof RangeError;
        const s = e.message === "Invalid key length";
        const o = e.message === "Unsupported state or unable to authenticate data";
        if (r || s) {
          const e = new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");
          e.code = "INVALID_DOTENV_KEY";
          throw e;
        } else if (o) {
          const e = new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");
          e.code = "DECRYPTION_FAILED";
          throw e;
        } else {
          throw e;
        }
      }
    }
    function populate(e, r, s = {}) {
      const o = Boolean(s && s.debug);
      const n = Boolean(s && s.override);
      if (typeof r !== "object") {
        const e = new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");
        e.code = "OBJECT_REQUIRED";
        throw e;
      }
      for (const s of Object.keys(r)) {
        if (Object.prototype.hasOwnProperty.call(e, s)) {
          if (n === true) {
            e[s] = r[s];
          }
          if (o) {
            if (n === true) {
              _debug(`"${s}" is already defined and WAS overwritten`);
            } else {
              _debug(`"${s}" is already defined and was NOT overwritten`);
            }
          }
        } else {
          e[s] = r[s];
        }
      }
    }
    const p = {
      configDotenv: configDotenv,
      _configVault: _configVault,
      _parseVault: _parseVault,
      config: config,
      decrypt: decrypt,
      parse: parse,
      populate: populate,
    };
    e.exports.configDotenv = p.configDotenv;
    e.exports._configVault = p._configVault;
    e.exports._parseVault = p._parseVault;
    e.exports.config = p.config;
    e.exports.decrypt = p.decrypt;
    e.exports.parse = p.parse;
    e.exports.populate = p.populate;
    e.exports = p;
  },
  5560: (e, r, s) => {
    var o = s(8264);
    e.exports = o(once);
    e.exports.strict = o(onceStrict);
    once.proto = once(function () {
      Object.defineProperty(Function.prototype, "once", {
        value: function () {
          return once(this);
        },
        configurable: true,
      });
      Object.defineProperty(Function.prototype, "onceStrict", {
        value: function () {
          return onceStrict(this);
        },
        configurable: true,
      });
    });
    function once(e) {
      var f = function () {
        if (f.called) return f.value;
        f.called = true;
        return (f.value = e.apply(this, arguments));
      };
      f.called = false;
      return f;
    }
    function onceStrict(e) {
      var f = function () {
        if (f.called) throw new Error(f.onceError);
        f.called = true;
        return (f.value = e.apply(this, arguments));
      };
      var r = e.name || "Function wrapped with `once`";
      f.onceError = r + " shouldn't be called more than once";
      f.called = false;
      return f;
    }
  },
  770: (e, r, s) => {
    e.exports = s(218);
  },
  218: (e, r, s) => {
    var o = s(9278);
    var n = s(4756);
    var i = s(8611);
    var a = s(5692);
    var l = s(4434);
    var d = s(2613);
    var h = s(9023);
    r.httpOverHttp = httpOverHttp;
    r.httpsOverHttp = httpsOverHttp;
    r.httpOverHttps = httpOverHttps;
    r.httpsOverHttps = httpsOverHttps;
    function httpOverHttp(e) {
      var r = new TunnelingAgent(e);
      r.request = i.request;
      return r;
    }
    function httpsOverHttp(e) {
      var r = new TunnelingAgent(e);
      r.request = i.request;
      r.createSocket = createSecureSocket;
      r.defaultPort = 443;
      return r;
    }
    function httpOverHttps(e) {
      var r = new TunnelingAgent(e);
      r.request = a.request;
      return r;
    }
    function httpsOverHttps(e) {
      var r = new TunnelingAgent(e);
      r.request = a.request;
      r.createSocket = createSecureSocket;
      r.defaultPort = 443;
      return r;
    }
    function TunnelingAgent(e) {
      var r = this;
      r.options = e || {};
      r.proxyOptions = r.options.proxy || {};
      r.maxSockets = r.options.maxSockets || i.Agent.defaultMaxSockets;
      r.requests = [];
      r.sockets = [];
      r.on("free", function onFree(e, s, o, n) {
        var i = toOptions(s, o, n);
        for (var a = 0, l = r.requests.length; a < l; ++a) {
          var d = r.requests[a];
          if (d.host === i.host && d.port === i.port) {
            r.requests.splice(a, 1);
            d.request.onSocket(e);
            return;
          }
        }
        e.destroy();
        r.removeSocket(e);
      });
    }
    h.inherits(TunnelingAgent, l.EventEmitter);
    TunnelingAgent.prototype.addRequest = function addRequest(e, r, s, o) {
      var n = this;
      var i = mergeOptions({ request: e }, n.options, toOptions(r, s, o));
      if (n.sockets.length >= this.maxSockets) {
        n.requests.push(i);
        return;
      }
      n.createSocket(i, function (r) {
        r.on("free", onFree);
        r.on("close", onCloseOrRemove);
        r.on("agentRemove", onCloseOrRemove);
        e.onSocket(r);
        function onFree() {
          n.emit("free", r, i);
        }
        function onCloseOrRemove(e) {
          n.removeSocket(r);
          r.removeListener("free", onFree);
          r.removeListener("close", onCloseOrRemove);
          r.removeListener("agentRemove", onCloseOrRemove);
        }
      });
    };
    TunnelingAgent.prototype.createSocket = function createSocket(e, r) {
      var s = this;
      var o = {};
      s.sockets.push(o);
      var n = mergeOptions({}, s.proxyOptions, { method: "CONNECT", path: e.host + ":" + e.port, agent: false, headers: { host: e.host + ":" + e.port } });
      if (e.localAddress) {
        n.localAddress = e.localAddress;
      }
      if (n.proxyAuth) {
        n.headers = n.headers || {};
        n.headers["Proxy-Authorization"] = "Basic " + new Buffer(n.proxyAuth).toString("base64");
      }
      p("making CONNECT request");
      var i = s.request(n);
      i.useChunkedEncodingByDefault = false;
      i.once("response", onResponse);
      i.once("upgrade", onUpgrade);
      i.once("connect", onConnect);
      i.once("error", onError);
      i.end();
      function onResponse(e) {
        e.upgrade = true;
      }
      function onUpgrade(e, r, s) {
        process.nextTick(function () {
          onConnect(e, r, s);
        });
      }
      function onConnect(n, a, l) {
        i.removeAllListeners();
        a.removeAllListeners();
        if (n.statusCode !== 200) {
          p("tunneling socket could not be established, statusCode=%d", n.statusCode);
          a.destroy();
          var d = new Error("tunneling socket could not be established, " + "statusCode=" + n.statusCode);
          d.code = "ECONNRESET";
          e.request.emit("error", d);
          s.removeSocket(o);
          return;
        }
        if (l.length > 0) {
          p("got illegal response body from proxy");
          a.destroy();
          var d = new Error("got illegal response body from proxy");
          d.code = "ECONNRESET";
          e.request.emit("error", d);
          s.removeSocket(o);
          return;
        }
        p("tunneling connection has established");
        s.sockets[s.sockets.indexOf(o)] = a;
        return r(a);
      }
      function onError(r) {
        i.removeAllListeners();
        p("tunneling socket could not be established, cause=%s\n", r.message, r.stack);
        var n = new Error("tunneling socket could not be established, " + "cause=" + r.message);
        n.code = "ECONNRESET";
        e.request.emit("error", n);
        s.removeSocket(o);
      }
    };
    TunnelingAgent.prototype.removeSocket = function removeSocket(e) {
      var r = this.sockets.indexOf(e);
      if (r === -1) {
        return;
      }
      this.sockets.splice(r, 1);
      var s = this.requests.shift();
      if (s) {
        this.createSocket(s, function (e) {
          s.request.onSocket(e);
        });
      }
    };
    function createSecureSocket(e, r) {
      var s = this;
      TunnelingAgent.prototype.createSocket.call(s, e, function (o) {
        var i = e.request.getHeader("host");
        var a = mergeOptions({}, s.options, { socket: o, servername: i ? i.replace(/:.*$/, "") : e.host });
        var l = n.connect(0, a);
        s.sockets[s.sockets.indexOf(o)] = l;
        r(l);
      });
    }
    function toOptions(e, r, s) {
      if (typeof e === "string") {
        return { host: e, port: r, localAddress: s };
      }
      return e;
    }
    function mergeOptions(e) {
      for (var r = 1, s = arguments.length; r < s; ++r) {
        var o = arguments[r];
        if (typeof o === "object") {
          var n = Object.keys(o);
          for (var i = 0, a = n.length; i < a; ++i) {
            var l = n[i];
            if (o[l] !== undefined) {
              e[l] = o[l];
            }
          }
        }
      }
      return e;
    }
    var p;
    if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
      p = function () {
        var e = Array.prototype.slice.call(arguments);
        if (typeof e[0] === "string") {
          e[0] = "TUNNEL: " + e[0];
        } else {
          e.unshift("TUNNEL:");
        }
        console.error.apply(console, e);
      };
    } else {
      p = function () {};
    }
    r.debug = p;
  },
  6752: (e, r, s) => {
    const o = s(6197);
    const n = s(992);
    const i = s(8707);
    const a = s(5076);
    const l = s(1093);
    const d = s(9965);
    const h = s(3440);
    const { InvalidArgumentError: p } = i;
    const w = s(6615);
    const k = s(9136);
    const _ = s(7365);
    const M = s(7501);
    const j = s(4004);
    const q = s(2429);
    const $ = s(2720);
    const ee = s(3573);
    const { getGlobalDispatcher: te, setGlobalDispatcher: re } = s(2581);
    const se = s(8840);
    const oe = s(8299);
    const ne = s(4415);
    let ie;
    try {
      s(6982);
      ie = true;
    } catch {
      ie = false;
    }
    Object.assign(n.prototype, w);
    e.exports.Dispatcher = n;
    e.exports.Client = o;
    e.exports.Pool = a;
    e.exports.BalancedPool = l;
    e.exports.Agent = d;
    e.exports.ProxyAgent = $;
    e.exports.RetryHandler = ee;
    e.exports.DecoratorHandler = se;
    e.exports.RedirectHandler = oe;
    e.exports.createRedirectInterceptor = ne;
    e.exports.buildConnector = k;
    e.exports.errors = i;
    function makeDispatcher(e) {
      return (r, s, o) => {
        if (typeof s === "function") {
          o = s;
          s = null;
        }
        if (!r || (typeof r !== "string" && typeof r !== "object" && !(r instanceof URL))) {
          throw new p("invalid url");
        }
        if (s != null && typeof s !== "object") {
          throw new p("invalid opts");
        }
        if (s && s.path != null) {
          if (typeof s.path !== "string") {
            throw new p("invalid opts.path");
          }
          let e = s.path;
          if (!s.path.startsWith("/")) {
            e = `/${e}`;
          }
          r = new URL(h.parseOrigin(r).origin + e);
        } else {
          if (!s) {
            s = typeof r === "object" ? r : {};
          }
          r = h.parseURL(r);
        }
        const { agent: n, dispatcher: i = te() } = s;
        if (n) {
          throw new p("unsupported opts.agent. Did you mean opts.client?");
        }
        return e.call(i, { ...s, origin: r.origin, path: r.search ? `${r.pathname}${r.search}` : r.pathname, method: s.method || (s.body ? "PUT" : "GET") }, o);
      };
    }
    e.exports.setGlobalDispatcher = re;
    e.exports.getGlobalDispatcher = te;
    if (h.nodeMajor > 16 || (h.nodeMajor === 16 && h.nodeMinor >= 8)) {
      let r = null;
      e.exports.fetch = async function fetch(e) {
        if (!r) {
          r = s(2315).fetch;
        }
        try {
          return await r(...arguments);
        } catch (e) {
          if (typeof e === "object") {
            Error.captureStackTrace(e, this);
          }
          throw e;
        }
      };
      e.exports.Headers = s(6349).Headers;
      e.exports.Response = s(8676).Response;
      e.exports.Request = s(5194).Request;
      e.exports.FormData = s(3073).FormData;
      e.exports.File = s(3041).File;
      e.exports.FileReader = s(2160).FileReader;
      const { setGlobalOrigin: o, getGlobalOrigin: n } = s(5628);
      e.exports.setGlobalOrigin = o;
      e.exports.getGlobalOrigin = n;
      const { CacheStorage: i } = s(4738);
      const { kConstruct: a } = s(296);
      e.exports.caches = new i(a);
    }
    if (h.nodeMajor >= 16) {
      const { deleteCookie: r, getCookies: o, getSetCookies: n, setCookie: i } = s(3168);
      e.exports.deleteCookie = r;
      e.exports.getCookies = o;
      e.exports.getSetCookies = n;
      e.exports.setCookie = i;
      const { parseMIMEType: a, serializeAMimeType: l } = s(4322);
      e.exports.parseMIMEType = a;
      e.exports.serializeAMimeType = l;
    }
    if (h.nodeMajor >= 18 && ie) {
      const { WebSocket: r } = s(5171);
      e.exports.WebSocket = r;
    }
    e.exports.request = makeDispatcher(w.request);
    e.exports.stream = makeDispatcher(w.stream);
    e.exports.pipeline = makeDispatcher(w.pipeline);
    e.exports.connect = makeDispatcher(w.connect);
    e.exports.upgrade = makeDispatcher(w.upgrade);
    e.exports.MockClient = _;
    e.exports.MockPool = j;
    e.exports.MockAgent = M;
    e.exports.mockErrors = q;
  },
  9965: (e, r, s) => {
    const { InvalidArgumentError: o } = s(8707);
    const { kClients: n, kRunning: i, kClose: a, kDestroy: l, kDispatch: d, kInterceptors: h } = s(6443);
    const p = s(1);
    const w = s(5076);
    const k = s(6197);
    const _ = s(3440);
    const M = s(4415);
    const { WeakRef: j, FinalizationRegistry: q } = s(3194)();
    const $ = Symbol("onConnect");
    const ee = Symbol("onDisconnect");
    const te = Symbol("onConnectionError");
    const re = Symbol("maxRedirections");
    const se = Symbol("onDrain");
    const oe = Symbol("factory");
    const ne = Symbol("finalizer");
    const ie = Symbol("options");
    function defaultFactory(e, r) {
      return r && r.connections === 1 ? new k(e, r) : new w(e, r);
    }
    class Agent extends p {
      constructor({ factory: e = defaultFactory, maxRedirections: r = 0, connect: s, ...i } = {}) {
        super();
        if (typeof e !== "function") {
          throw new o("factory must be a function.");
        }
        if (s != null && typeof s !== "function" && typeof s !== "object") {
          throw new o("connect must be a function or an object");
        }
        if (!Number.isInteger(r) || r < 0) {
          throw new o("maxRedirections must be a positive number");
        }
        if (s && typeof s !== "function") {
          s = { ...s };
        }
        this[h] = i.interceptors && i.interceptors.Agent && Array.isArray(i.interceptors.Agent) ? i.interceptors.Agent : [M({ maxRedirections: r })];
        this[ie] = { ..._.deepClone(i), connect: s };
        this[ie].interceptors = i.interceptors ? { ...i.interceptors } : undefined;
        this[re] = r;
        this[oe] = e;
        this[n] = new Map();
        this[ne] = new q((e) => {
          const r = this[n].get(e);
          if (r !== undefined && r.deref() === undefined) {
            this[n].delete(e);
          }
        });
        const a = this;
        this[se] = (e, r) => {
          a.emit("drain", e, [a, ...r]);
        };
        this[$] = (e, r) => {
          a.emit("connect", e, [a, ...r]);
        };
        this[ee] = (e, r, s) => {
          a.emit("disconnect", e, [a, ...r], s);
        };
        this[te] = (e, r, s) => {
          a.emit("connectionError", e, [a, ...r], s);
        };
      }
      get [i]() {
        let e = 0;
        for (const r of this[n].values()) {
          const s = r.deref();
          if (s) {
            e += s[i];
          }
        }
        return e;
      }
      [d](e, r) {
        let s;
        if (e.origin && (typeof e.origin === "string" || e.origin instanceof URL)) {
          s = String(e.origin);
        } else {
          throw new o("opts.origin must be a non-empty string or URL.");
        }
        const i = this[n].get(s);
        let a = i ? i.deref() : null;
        if (!a) {
          a = this[oe](e.origin, this[ie]).on("drain", this[se]).on("connect", this[$]).on("disconnect", this[ee]).on("connectionError", this[te]);
          this[n].set(s, new j(a));
          this[ne].register(a, s);
        }
        return a.dispatch(e, r);
      }
      async [a]() {
        const e = [];
        for (const r of this[n].values()) {
          const s = r.deref();
          if (s) {
            e.push(s.close());
          }
        }
        await Promise.all(e);
      }
      async [l](e) {
        const r = [];
        for (const s of this[n].values()) {
          const o = s.deref();
          if (o) {
            r.push(o.destroy(e));
          }
        }
        await Promise.all(r);
      }
    }
    e.exports = Agent;
  },
  158: (e, r, s) => {
    const { addAbortListener: o } = s(3440);
    const { RequestAbortedError: n } = s(8707);
    const i = Symbol("kListener");
    const a = Symbol("kSignal");
    function abort(e) {
      if (e.abort) {
        e.abort();
      } else {
        e.onError(new n());
      }
    }
    function addSignal(e, r) {
      e[a] = null;
      e[i] = null;
      if (!r) {
        return;
      }
      if (r.aborted) {
        abort(e);
        return;
      }
      e[a] = r;
      e[i] = () => {
        abort(e);
      };
      o(e[a], e[i]);
    }
    function removeSignal(e) {
      if (!e[a]) {
        return;
      }
      if ("removeEventListener" in e[a]) {
        e[a].removeEventListener("abort", e[i]);
      } else {
        e[a].removeListener("abort", e[i]);
      }
      e[a] = null;
      e[i] = null;
    }
    e.exports = { addSignal: addSignal, removeSignal: removeSignal };
  },
  4660: (e, r, s) => {
    const { AsyncResource: o } = s(290);
    const { InvalidArgumentError: n, RequestAbortedError: i, SocketError: a } = s(8707);
    const l = s(3440);
    const { addSignal: d, removeSignal: h } = s(158);
    class ConnectHandler extends o {
      constructor(e, r) {
        if (!e || typeof e !== "object") {
          throw new n("invalid opts");
        }
        if (typeof r !== "function") {
          throw new n("invalid callback");
        }
        const { signal: s, opaque: o, responseHeaders: i } = e;
        if (s && typeof s.on !== "function" && typeof s.addEventListener !== "function") {
          throw new n("signal must be an EventEmitter or EventTarget");
        }
        super("UNDICI_CONNECT");
        this.opaque = o || null;
        this.responseHeaders = i || null;
        this.callback = r;
        this.abort = null;
        d(this, s);
      }
      onConnect(e, r) {
        if (!this.callback) {
          throw new i();
        }
        this.abort = e;
        this.context = r;
      }
      onHeaders() {
        throw new a("bad connect", null);
      }
      onUpgrade(e, r, s) {
        const { callback: o, opaque: n, context: i } = this;
        h(this);
        this.callback = null;
        let a = r;
        if (a != null) {
          a = this.responseHeaders === "raw" ? l.parseRawHeaders(r) : l.parseHeaders(r);
        }
        this.runInAsyncScope(o, null, null, { statusCode: e, headers: a, socket: s, opaque: n, context: i });
      }
      onError(e) {
        const { callback: r, opaque: s } = this;
        h(this);
        if (r) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(r, null, e, { opaque: s });
          });
        }
      }
    }
    function connect(e, r) {
      if (r === undefined) {
        return new Promise((r, s) => {
          connect.call(this, e, (e, o) => (e ? s(e) : r(o)));
        });
      }
      try {
        const s = new ConnectHandler(e, r);
        this.dispatch({ ...e, method: "CONNECT" }, s);
      } catch (s) {
        if (typeof r !== "function") {
          throw s;
        }
        const o = e && e.opaque;
        queueMicrotask(() => r(s, { opaque: o }));
      }
    }
    e.exports = connect;
  },
  6862: (e, r, s) => {
    const { Readable: o, Duplex: n, PassThrough: i } = s(2203);
    const { InvalidArgumentError: a, InvalidReturnValueError: l, RequestAbortedError: d } = s(8707);
    const h = s(3440);
    const { AsyncResource: p } = s(290);
    const { addSignal: w, removeSignal: k } = s(158);
    const _ = s(2613);
    const M = Symbol("resume");
    class PipelineRequest extends o {
      constructor() {
        super({ autoDestroy: true });
        this[M] = null;
      }
      _read() {
        const { [M]: e } = this;
        if (e) {
          this[M] = null;
          e();
        }
      }
      _destroy(e, r) {
        this._read();
        r(e);
      }
    }
    class PipelineResponse extends o {
      constructor(e) {
        super({ autoDestroy: true });
        this[M] = e;
      }
      _read() {
        this[M]();
      }
      _destroy(e, r) {
        if (!e && !this._readableState.endEmitted) {
          e = new d();
        }
        r(e);
      }
    }
    class PipelineHandler extends p {
      constructor(e, r) {
        if (!e || typeof e !== "object") {
          throw new a("invalid opts");
        }
        if (typeof r !== "function") {
          throw new a("invalid handler");
        }
        const { signal: s, method: o, opaque: i, onInfo: l, responseHeaders: p } = e;
        if (s && typeof s.on !== "function" && typeof s.addEventListener !== "function") {
          throw new a("signal must be an EventEmitter or EventTarget");
        }
        if (o === "CONNECT") {
          throw new a("invalid method");
        }
        if (l && typeof l !== "function") {
          throw new a("invalid onInfo callback");
        }
        super("UNDICI_PIPELINE");
        this.opaque = i || null;
        this.responseHeaders = p || null;
        this.handler = r;
        this.abort = null;
        this.context = null;
        this.onInfo = l || null;
        this.req = new PipelineRequest().on("error", h.nop);
        this.ret = new n({
          readableObjectMode: e.objectMode,
          autoDestroy: true,
          read: () => {
            const { body: e } = this;
            if (e && e.resume) {
              e.resume();
            }
          },
          write: (e, r, s) => {
            const { req: o } = this;
            if (o.push(e, r) || o._readableState.destroyed) {
              s();
            } else {
              o[M] = s;
            }
          },
          destroy: (e, r) => {
            const { body: s, req: o, res: n, ret: i, abort: a } = this;
            if (!e && !i._readableState.endEmitted) {
              e = new d();
            }
            if (a && e) {
              a();
            }
            h.destroy(s, e);
            h.destroy(o, e);
            h.destroy(n, e);
            k(this);
            r(e);
          },
        }).on("prefinish", () => {
          const { req: e } = this;
          e.push(null);
        });
        this.res = null;
        w(this, s);
      }
      onConnect(e, r) {
        const { ret: s, res: o } = this;
        _(!o, "pipeline cannot be retried");
        if (s.destroyed) {
          throw new d();
        }
        this.abort = e;
        this.context = r;
      }
      onHeaders(e, r, s) {
        const { opaque: o, handler: n, context: i } = this;
        if (e < 200) {
          if (this.onInfo) {
            const s = this.responseHeaders === "raw" ? h.parseRawHeaders(r) : h.parseHeaders(r);
            this.onInfo({ statusCode: e, headers: s });
          }
          return;
        }
        this.res = new PipelineResponse(s);
        let a;
        try {
          this.handler = null;
          const s = this.responseHeaders === "raw" ? h.parseRawHeaders(r) : h.parseHeaders(r);
          a = this.runInAsyncScope(n, null, { statusCode: e, headers: s, opaque: o, body: this.res, context: i });
        } catch (e) {
          this.res.on("error", h.nop);
          throw e;
        }
        if (!a || typeof a.on !== "function") {
          throw new l("expected Readable");
        }
        a.on("data", (e) => {
          const { ret: r, body: s } = this;
          if (!r.push(e) && s.pause) {
            s.pause();
          }
        })
          .on("error", (e) => {
            const { ret: r } = this;
            h.destroy(r, e);
          })
          .on("end", () => {
            const { ret: e } = this;
            e.push(null);
          })
          .on("close", () => {
            const { ret: e } = this;
            if (!e._readableState.ended) {
              h.destroy(e, new d());
            }
          });
        this.body = a;
      }
      onData(e) {
        const { res: r } = this;
        return r.push(e);
      }
      onComplete(e) {
        const { res: r } = this;
        r.push(null);
      }
      onError(e) {
        const { ret: r } = this;
        this.handler = null;
        h.destroy(r, e);
      }
    }
    function pipeline(e, r) {
      try {
        const s = new PipelineHandler(e, r);
        this.dispatch({ ...e, body: s.req }, s);
        return s.ret;
      } catch (e) {
        return new i().destroy(e);
      }
    }
    e.exports = pipeline;
  },
  4043: (e, r, s) => {
    const o = s(9927);
    const { InvalidArgumentError: n, RequestAbortedError: i } = s(8707);
    const a = s(3440);
    const { getResolveErrorBodyCallback: l } = s(7655);
    const { AsyncResource: d } = s(290);
    const { addSignal: h, removeSignal: p } = s(158);
    class RequestHandler extends d {
      constructor(e, r) {
        if (!e || typeof e !== "object") {
          throw new n("invalid opts");
        }
        const { signal: s, method: o, opaque: i, body: l, onInfo: d, responseHeaders: p, throwOnError: w, highWaterMark: k } = e;
        try {
          if (typeof r !== "function") {
            throw new n("invalid callback");
          }
          if (k && (typeof k !== "number" || k < 0)) {
            throw new n("invalid highWaterMark");
          }
          if (s && typeof s.on !== "function" && typeof s.addEventListener !== "function") {
            throw new n("signal must be an EventEmitter or EventTarget");
          }
          if (o === "CONNECT") {
            throw new n("invalid method");
          }
          if (d && typeof d !== "function") {
            throw new n("invalid onInfo callback");
          }
          super("UNDICI_REQUEST");
        } catch (e) {
          if (a.isStream(l)) {
            a.destroy(l.on("error", a.nop), e);
          }
          throw e;
        }
        this.responseHeaders = p || null;
        this.opaque = i || null;
        this.callback = r;
        this.res = null;
        this.abort = null;
        this.body = l;
        this.trailers = {};
        this.context = null;
        this.onInfo = d || null;
        this.throwOnError = w;
        this.highWaterMark = k;
        if (a.isStream(l)) {
          l.on("error", (e) => {
            this.onError(e);
          });
        }
        h(this, s);
      }
      onConnect(e, r) {
        if (!this.callback) {
          throw new i();
        }
        this.abort = e;
        this.context = r;
      }
      onHeaders(e, r, s, n) {
        const { callback: i, opaque: d, abort: h, context: p, responseHeaders: w, highWaterMark: k } = this;
        const _ = w === "raw" ? a.parseRawHeaders(r) : a.parseHeaders(r);
        if (e < 200) {
          if (this.onInfo) {
            this.onInfo({ statusCode: e, headers: _ });
          }
          return;
        }
        const M = w === "raw" ? a.parseHeaders(r) : _;
        const j = M["content-type"];
        const q = new o({ resume: s, abort: h, contentType: j, highWaterMark: k });
        this.callback = null;
        this.res = q;
        if (i !== null) {
          if (this.throwOnError && e >= 400) {
            this.runInAsyncScope(l, null, { callback: i, body: q, contentType: j, statusCode: e, statusMessage: n, headers: _ });
          } else {
            this.runInAsyncScope(i, null, null, { statusCode: e, headers: _, trailers: this.trailers, opaque: d, body: q, context: p });
          }
        }
      }
      onData(e) {
        const { res: r } = this;
        return r.push(e);
      }
      onComplete(e) {
        const { res: r } = this;
        p(this);
        a.parseHeaders(e, this.trailers);
        r.push(null);
      }
      onError(e) {
        const { res: r, callback: s, body: o, opaque: n } = this;
        p(this);
        if (s) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(s, null, e, { opaque: n });
          });
        }
        if (r) {
          this.res = null;
          queueMicrotask(() => {
            a.destroy(r, e);
          });
        }
        if (o) {
          this.body = null;
          a.destroy(o, e);
        }
      }
    }
    function request(e, r) {
      if (r === undefined) {
        return new Promise((r, s) => {
          request.call(this, e, (e, o) => (e ? s(e) : r(o)));
        });
      }
      try {
        this.dispatch(e, new RequestHandler(e, r));
      } catch (s) {
        if (typeof r !== "function") {
          throw s;
        }
        const o = e && e.opaque;
        queueMicrotask(() => r(s, { opaque: o }));
      }
    }
    e.exports = request;
    e.exports.RequestHandler = RequestHandler;
  },
  3560: (e, r, s) => {
    const { finished: o, PassThrough: n } = s(2203);
    const { InvalidArgumentError: i, InvalidReturnValueError: a, RequestAbortedError: l } = s(8707);
    const d = s(3440);
    const { getResolveErrorBodyCallback: h } = s(7655);
    const { AsyncResource: p } = s(290);
    const { addSignal: w, removeSignal: k } = s(158);
    class StreamHandler extends p {
      constructor(e, r, s) {
        if (!e || typeof e !== "object") {
          throw new i("invalid opts");
        }
        const { signal: o, method: n, opaque: a, body: l, onInfo: h, responseHeaders: p, throwOnError: k } = e;
        try {
          if (typeof s !== "function") {
            throw new i("invalid callback");
          }
          if (typeof r !== "function") {
            throw new i("invalid factory");
          }
          if (o && typeof o.on !== "function" && typeof o.addEventListener !== "function") {
            throw new i("signal must be an EventEmitter or EventTarget");
          }
          if (n === "CONNECT") {
            throw new i("invalid method");
          }
          if (h && typeof h !== "function") {
            throw new i("invalid onInfo callback");
          }
          super("UNDICI_STREAM");
        } catch (e) {
          if (d.isStream(l)) {
            d.destroy(l.on("error", d.nop), e);
          }
          throw e;
        }
        this.responseHeaders = p || null;
        this.opaque = a || null;
        this.factory = r;
        this.callback = s;
        this.res = null;
        this.abort = null;
        this.context = null;
        this.trailers = null;
        this.body = l;
        this.onInfo = h || null;
        this.throwOnError = k || false;
        if (d.isStream(l)) {
          l.on("error", (e) => {
            this.onError(e);
          });
        }
        w(this, o);
      }
      onConnect(e, r) {
        if (!this.callback) {
          throw new l();
        }
        this.abort = e;
        this.context = r;
      }
      onHeaders(e, r, s, i) {
        const { factory: l, opaque: p, context: w, callback: k, responseHeaders: _ } = this;
        const M = _ === "raw" ? d.parseRawHeaders(r) : d.parseHeaders(r);
        if (e < 200) {
          if (this.onInfo) {
            this.onInfo({ statusCode: e, headers: M });
          }
          return;
        }
        this.factory = null;
        let j;
        if (this.throwOnError && e >= 400) {
          const s = _ === "raw" ? d.parseHeaders(r) : M;
          const o = s["content-type"];
          j = new n();
          this.callback = null;
          this.runInAsyncScope(h, null, { callback: k, body: j, contentType: o, statusCode: e, statusMessage: i, headers: M });
        } else {
          if (l === null) {
            return;
          }
          j = this.runInAsyncScope(l, null, { statusCode: e, headers: M, opaque: p, context: w });
          if (!j || typeof j.write !== "function" || typeof j.end !== "function" || typeof j.on !== "function") {
            throw new a("expected Writable");
          }
          o(j, { readable: false }, (e) => {
            const { callback: r, res: s, opaque: o, trailers: n, abort: i } = this;
            this.res = null;
            if (e || !s.readable) {
              d.destroy(s, e);
            }
            this.callback = null;
            this.runInAsyncScope(r, null, e || null, { opaque: o, trailers: n });
            if (e) {
              i();
            }
          });
        }
        j.on("drain", s);
        this.res = j;
        const q = j.writableNeedDrain !== undefined ? j.writableNeedDrain : j._writableState && j._writableState.needDrain;
        return q !== true;
      }
      onData(e) {
        const { res: r } = this;
        return r ? r.write(e) : true;
      }
      onComplete(e) {
        const { res: r } = this;
        k(this);
        if (!r) {
          return;
        }
        this.trailers = d.parseHeaders(e);
        r.end();
      }
      onError(e) {
        const { res: r, callback: s, opaque: o, body: n } = this;
        k(this);
        this.factory = null;
        if (r) {
          this.res = null;
          d.destroy(r, e);
        } else if (s) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(s, null, e, { opaque: o });
          });
        }
        if (n) {
          this.body = null;
          d.destroy(n, e);
        }
      }
    }
    function stream(e, r, s) {
      if (s === undefined) {
        return new Promise((s, o) => {
          stream.call(this, e, r, (e, r) => (e ? o(e) : s(r)));
        });
      }
      try {
        this.dispatch(e, new StreamHandler(e, r, s));
      } catch (r) {
        if (typeof s !== "function") {
          throw r;
        }
        const o = e && e.opaque;
        queueMicrotask(() => s(r, { opaque: o }));
      }
    }
    e.exports = stream;
  },
  1882: (e, r, s) => {
    const { InvalidArgumentError: o, RequestAbortedError: n, SocketError: i } = s(8707);
    const { AsyncResource: a } = s(290);
    const l = s(3440);
    const { addSignal: d, removeSignal: h } = s(158);
    const p = s(2613);
    class UpgradeHandler extends a {
      constructor(e, r) {
        if (!e || typeof e !== "object") {
          throw new o("invalid opts");
        }
        if (typeof r !== "function") {
          throw new o("invalid callback");
        }
        const { signal: s, opaque: n, responseHeaders: i } = e;
        if (s && typeof s.on !== "function" && typeof s.addEventListener !== "function") {
          throw new o("signal must be an EventEmitter or EventTarget");
        }
        super("UNDICI_UPGRADE");
        this.responseHeaders = i || null;
        this.opaque = n || null;
        this.callback = r;
        this.abort = null;
        this.context = null;
        d(this, s);
      }
      onConnect(e, r) {
        if (!this.callback) {
          throw new n();
        }
        this.abort = e;
        this.context = null;
      }
      onHeaders() {
        throw new i("bad upgrade", null);
      }
      onUpgrade(e, r, s) {
        const { callback: o, opaque: n, context: i } = this;
        p.strictEqual(e, 101);
        h(this);
        this.callback = null;
        const a = this.responseHeaders === "raw" ? l.parseRawHeaders(r) : l.parseHeaders(r);
        this.runInAsyncScope(o, null, null, { headers: a, socket: s, opaque: n, context: i });
      }
      onError(e) {
        const { callback: r, opaque: s } = this;
        h(this);
        if (r) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(r, null, e, { opaque: s });
          });
        }
      }
    }
    function upgrade(e, r) {
      if (r === undefined) {
        return new Promise((r, s) => {
          upgrade.call(this, e, (e, o) => (e ? s(e) : r(o)));
        });
      }
      try {
        const s = new UpgradeHandler(e, r);
        this.dispatch({ ...e, method: e.method || "GET", upgrade: e.protocol || "Websocket" }, s);
      } catch (s) {
        if (typeof r !== "function") {
          throw s;
        }
        const o = e && e.opaque;
        queueMicrotask(() => r(s, { opaque: o }));
      }
    }
    e.exports = upgrade;
  },
  6615: (e, r, s) => {
    e.exports.request = s(4043);
    e.exports.stream = s(3560);
    e.exports.pipeline = s(6862);
    e.exports.upgrade = s(1882);
    e.exports.connect = s(4660);
  },
  9927: (e, r, s) => {
    const o = s(2613);
    const { Readable: n } = s(2203);
    const { RequestAbortedError: i, NotSupportedError: a, InvalidArgumentError: l } = s(8707);
    const d = s(3440);
    const { ReadableStreamFrom: h, toUSVString: p } = s(3440);
    let w;
    const k = Symbol("kConsume");
    const _ = Symbol("kReading");
    const M = Symbol("kBody");
    const j = Symbol("abort");
    const q = Symbol("kContentType");
    const noop = () => {};
    e.exports = class BodyReadable extends n {
      constructor({ resume: e, abort: r, contentType: s = "", highWaterMark: o = 64 * 1024 }) {
        super({ autoDestroy: true, read: e, highWaterMark: o });
        this._readableState.dataEmitted = false;
        this[j] = r;
        this[k] = null;
        this[M] = null;
        this[q] = s;
        this[_] = false;
      }
      destroy(e) {
        if (this.destroyed) {
          return this;
        }
        if (!e && !this._readableState.endEmitted) {
          e = new i();
        }
        if (e) {
          this[j]();
        }
        return super.destroy(e);
      }
      emit(e, ...r) {
        if (e === "data") {
          this._readableState.dataEmitted = true;
        } else if (e === "error") {
          this._readableState.errorEmitted = true;
        }
        return super.emit(e, ...r);
      }
      on(e, ...r) {
        if (e === "data" || e === "readable") {
          this[_] = true;
        }
        return super.on(e, ...r);
      }
      addListener(e, ...r) {
        return this.on(e, ...r);
      }
      off(e, ...r) {
        const s = super.off(e, ...r);
        if (e === "data" || e === "readable") {
          this[_] = this.listenerCount("data") > 0 || this.listenerCount("readable") > 0;
        }
        return s;
      }
      removeListener(e, ...r) {
        return this.off(e, ...r);
      }
      push(e) {
        if (this[k] && e !== null && this.readableLength === 0) {
          consumePush(this[k], e);
          return this[_] ? super.push(e) : true;
        }
        return super.push(e);
      }
      async text() {
        return consume(this, "text");
      }
      async json() {
        return consume(this, "json");
      }
      async blob() {
        return consume(this, "blob");
      }
      async arrayBuffer() {
        return consume(this, "arrayBuffer");
      }
      async formData() {
        throw new a();
      }
      get bodyUsed() {
        return d.isDisturbed(this);
      }
      get body() {
        if (!this[M]) {
          this[M] = h(this);
          if (this[k]) {
            this[M].getReader();
            o(this[M].locked);
          }
        }
        return this[M];
      }
      dump(e) {
        let r = e && Number.isFinite(e.limit) ? e.limit : 262144;
        const s = e && e.signal;
        if (s) {
          try {
            if (typeof s !== "object" || !("aborted" in s)) {
              throw new l("signal must be an AbortSignal");
            }
            d.throwIfAborted(s);
          } catch (e) {
            return Promise.reject(e);
          }
        }
        if (this.closed) {
          return Promise.resolve(null);
        }
        return new Promise((e, o) => {
          const n = s
            ? d.addAbortListener(s, () => {
                this.destroy();
              })
            : noop;
          this.on("close", function () {
            n();
            if (s && s.aborted) {
              o(s.reason || Object.assign(new Error("The operation was aborted"), { name: "AbortError" }));
            } else {
              e(null);
            }
          })
            .on("error", noop)
            .on("data", function (e) {
              r -= e.length;
              if (r <= 0) {
                this.destroy();
              }
            })
            .resume();
        });
      }
    };
    function isLocked(e) {
      return (e[M] && e[M].locked === true) || e[k];
    }
    function isUnusable(e) {
      return d.isDisturbed(e) || isLocked(e);
    }
    async function consume(e, r) {
      if (isUnusable(e)) {
        throw new TypeError("unusable");
      }
      o(!e[k]);
      return new Promise((s, o) => {
        e[k] = { type: r, stream: e, resolve: s, reject: o, length: 0, body: [] };
        e.on("error", function (e) {
          consumeFinish(this[k], e);
        }).on("close", function () {
          if (this[k].body !== null) {
            consumeFinish(this[k], new i());
          }
        });
        process.nextTick(consumeStart, e[k]);
      });
    }
    function consumeStart(e) {
      if (e.body === null) {
        return;
      }
      const { _readableState: r } = e.stream;
      for (const s of r.buffer) {
        consumePush(e, s);
      }
      if (r.endEmitted) {
        consumeEnd(this[k]);
      } else {
        e.stream.on("end", function () {
          consumeEnd(this[k]);
        });
      }
      e.stream.resume();
      while (e.stream.read() != null) {}
    }
    function consumeEnd(e) {
      const { type: r, body: o, resolve: n, stream: i, length: a } = e;
      try {
        if (r === "text") {
          n(p(Buffer.concat(o)));
        } else if (r === "json") {
          n(JSON.parse(Buffer.concat(o)));
        } else if (r === "arrayBuffer") {
          const e = new Uint8Array(a);
          let r = 0;
          for (const s of o) {
            e.set(s, r);
            r += s.byteLength;
          }
          n(e.buffer);
        } else if (r === "blob") {
          if (!w) {
            w = s(181).Blob;
          }
          n(new w(o, { type: i[q] }));
        }
        consumeFinish(e);
      } catch (e) {
        i.destroy(e);
      }
    }
    function consumePush(e, r) {
      e.length += r.length;
      e.body.push(r);
    }
    function consumeFinish(e, r) {
      if (e.body === null) {
        return;
      }
      if (r) {
        e.reject(r);
      } else {
        e.resolve();
      }
      e.type = null;
      e.stream = null;
      e.resolve = null;
      e.reject = null;
      e.length = 0;
      e.body = null;
    }
  },
  7655: (e, r, s) => {
    const o = s(2613);
    const { ResponseStatusCodeError: n } = s(8707);
    const { toUSVString: i } = s(3440);
    async function getResolveErrorBodyCallback({ callback: e, body: r, contentType: s, statusCode: a, statusMessage: l, headers: d }) {
      o(r);
      let h = [];
      let p = 0;
      for await (const e of r) {
        h.push(e);
        p += e.length;
        if (p > 128 * 1024) {
          h = null;
          break;
        }
      }
      if (a === 204 || !s || !h) {
        process.nextTick(e, new n(`Response status code ${a}${l ? `: ${l}` : ""}`, a, d));
        return;
      }
      try {
        if (s.startsWith("application/json")) {
          const r = JSON.parse(i(Buffer.concat(h)));
          process.nextTick(e, new n(`Response status code ${a}${l ? `: ${l}` : ""}`, a, d, r));
          return;
        }
        if (s.startsWith("text/")) {
          const r = i(Buffer.concat(h));
          process.nextTick(e, new n(`Response status code ${a}${l ? `: ${l}` : ""}`, a, d, r));
          return;
        }
      } catch (e) {}
      process.nextTick(e, new n(`Response status code ${a}${l ? `: ${l}` : ""}`, a, d));
    }
    e.exports = { getResolveErrorBodyCallback: getResolveErrorBodyCallback };
  },
  1093: (e, r, s) => {
    const { BalancedPoolMissingUpstreamError: o, InvalidArgumentError: n } = s(8707);
    const { PoolBase: i, kClients: a, kNeedDrain: l, kAddClient: d, kRemoveClient: h, kGetDispatcher: p } = s(8640);
    const w = s(5076);
    const { kUrl: k, kInterceptors: _ } = s(6443);
    const { parseOrigin: M } = s(3440);
    const j = Symbol("factory");
    const q = Symbol("options");
    const $ = Symbol("kGreatestCommonDivisor");
    const ee = Symbol("kCurrentWeight");
    const te = Symbol("kIndex");
    const re = Symbol("kWeight");
    const se = Symbol("kMaxWeightPerServer");
    const oe = Symbol("kErrorPenalty");
    function getGreatestCommonDivisor(e, r) {
      if (r === 0) return e;
      return getGreatestCommonDivisor(r, e % r);
    }
    function defaultFactory(e, r) {
      return new w(e, r);
    }
    class BalancedPool extends i {
      constructor(e = [], { factory: r = defaultFactory, ...s } = {}) {
        super();
        this[q] = s;
        this[te] = -1;
        this[ee] = 0;
        this[se] = this[q].maxWeightPerServer || 100;
        this[oe] = this[q].errorPenalty || 15;
        if (!Array.isArray(e)) {
          e = [e];
        }
        if (typeof r !== "function") {
          throw new n("factory must be a function.");
        }
        this[_] = s.interceptors && s.interceptors.BalancedPool && Array.isArray(s.interceptors.BalancedPool) ? s.interceptors.BalancedPool : [];
        this[j] = r;
        for (const r of e) {
          this.addUpstream(r);
        }
        this._updateBalancedPoolStats();
      }
      addUpstream(e) {
        const r = M(e).origin;
        if (this[a].find((e) => e[k].origin === r && e.closed !== true && e.destroyed !== true)) {
          return this;
        }
        const s = this[j](r, Object.assign({}, this[q]));
        this[d](s);
        s.on("connect", () => {
          s[re] = Math.min(this[se], s[re] + this[oe]);
        });
        s.on("connectionError", () => {
          s[re] = Math.max(1, s[re] - this[oe]);
          this._updateBalancedPoolStats();
        });
        s.on("disconnect", (...e) => {
          const r = e[2];
          if (r && r.code === "UND_ERR_SOCKET") {
            s[re] = Math.max(1, s[re] - this[oe]);
            this._updateBalancedPoolStats();
          }
        });
        for (const e of this[a]) {
          e[re] = this[se];
        }
        this._updateBalancedPoolStats();
        return this;
      }
      _updateBalancedPoolStats() {
        this[$] = this[a].map((e) => e[re]).reduce(getGreatestCommonDivisor, 0);
      }
      removeUpstream(e) {
        const r = M(e).origin;
        const s = this[a].find((e) => e[k].origin === r && e.closed !== true && e.destroyed !== true);
        if (s) {
          this[h](s);
        }
        return this;
      }
      get upstreams() {
        return this[a].filter((e) => e.closed !== true && e.destroyed !== true).map((e) => e[k].origin);
      }
      [p]() {
        if (this[a].length === 0) {
          throw new o();
        }
        const e = this[a].find((e) => !e[l] && e.closed !== true && e.destroyed !== true);
        if (!e) {
          return;
        }
        const r = this[a].map((e) => e[l]).reduce((e, r) => e && r, true);
        if (r) {
          return;
        }
        let s = 0;
        let n = this[a].findIndex((e) => !e[l]);
        while (s++ < this[a].length) {
          this[te] = (this[te] + 1) % this[a].length;
          const e = this[a][this[te]];
          if (e[re] > this[a][n][re] && !e[l]) {
            n = this[te];
          }
          if (this[te] === 0) {
            this[ee] = this[ee] - this[$];
            if (this[ee] <= 0) {
              this[ee] = this[se];
            }
          }
          if (e[re] >= this[ee] && !e[l]) {
            return e;
          }
        }
        this[ee] = this[a][n][re];
        this[te] = n;
        return this[a][n];
      }
    }
    e.exports = BalancedPool;
  },
  479: (e, r, s) => {
    const { kConstruct: o } = s(296);
    const { urlEquals: n, fieldValues: i } = s(3993);
    const { kEnumerableProperty: a, isDisturbed: l } = s(3440);
    const { kHeadersList: d } = s(6443);
    const { webidl: h } = s(4222);
    const { Response: p, cloneResponse: w } = s(8676);
    const { Request: k } = s(5194);
    const { kState: _, kHeaders: M, kGuard: j, kRealm: q } = s(9710);
    const { fetching: $ } = s(2315);
    const { urlIsHttpHttpsScheme: ee, createDeferredPromise: te, readAllBytes: re } = s(5523);
    const se = s(2613);
    const { getGlobalDispatcher: oe } = s(2581);
    class Cache {
      #e;
      constructor() {
        if (arguments[0] !== o) {
          h.illegalConstructor();
        }
        this.#e = arguments[1];
      }
      async match(e, r = {}) {
        h.brandCheck(this, Cache);
        h.argumentLengthCheck(arguments, 1, { header: "Cache.match" });
        e = h.converters.RequestInfo(e);
        r = h.converters.CacheQueryOptions(r);
        const s = await this.matchAll(e, r);
        if (s.length === 0) {
          return;
        }
        return s[0];
      }
      async matchAll(e = undefined, r = {}) {
        h.brandCheck(this, Cache);
        if (e !== undefined) e = h.converters.RequestInfo(e);
        r = h.converters.CacheQueryOptions(r);
        let s = null;
        if (e !== undefined) {
          if (e instanceof k) {
            s = e[_];
            if (s.method !== "GET" && !r.ignoreMethod) {
              return [];
            }
          } else if (typeof e === "string") {
            s = new k(e)[_];
          }
        }
        const o = [];
        if (e === undefined) {
          for (const e of this.#e) {
            o.push(e[1]);
          }
        } else {
          const e = this.#t(s, r);
          for (const r of e) {
            o.push(r[1]);
          }
        }
        const n = [];
        for (const e of o) {
          const r = new p(e.body?.source ?? null);
          const s = r[_].body;
          r[_] = e;
          r[_].body = s;
          r[M][d] = e.headersList;
          r[M][j] = "immutable";
          n.push(r);
        }
        return Object.freeze(n);
      }
      async add(e) {
        h.brandCheck(this, Cache);
        h.argumentLengthCheck(arguments, 1, { header: "Cache.add" });
        e = h.converters.RequestInfo(e);
        const r = [e];
        const s = this.addAll(r);
        return await s;
      }
      async addAll(e) {
        h.brandCheck(this, Cache);
        h.argumentLengthCheck(arguments, 1, { header: "Cache.addAll" });
        e = h.converters["sequence<RequestInfo>"](e);
        const r = [];
        const s = [];
        for (const r of e) {
          if (typeof r === "string") {
            continue;
          }
          const e = r[_];
          if (!ee(e.url) || e.method !== "GET") {
            throw h.errors.exception({ header: "Cache.addAll", message: "Expected http/s scheme when method is not GET." });
          }
        }
        const o = [];
        for (const n of e) {
          const e = new k(n)[_];
          if (!ee(e.url)) {
            throw h.errors.exception({ header: "Cache.addAll", message: "Expected http/s scheme." });
          }
          e.initiator = "fetch";
          e.destination = "subresource";
          s.push(e);
          const a = te();
          o.push(
            $({
              request: e,
              dispatcher: oe(),
              processResponse(e) {
                if (e.type === "error" || e.status === 206 || e.status < 200 || e.status > 299) {
                  a.reject(h.errors.exception({ header: "Cache.addAll", message: "Received an invalid status code or the request failed." }));
                } else if (e.headersList.contains("vary")) {
                  const r = i(e.headersList.get("vary"));
                  for (const e of r) {
                    if (e === "*") {
                      a.reject(h.errors.exception({ header: "Cache.addAll", message: "invalid vary field value" }));
                      for (const e of o) {
                        e.abort();
                      }
                      return;
                    }
                  }
                }
              },
              processResponseEndOfBody(e) {
                if (e.aborted) {
                  a.reject(new DOMException("aborted", "AbortError"));
                  return;
                }
                a.resolve(e);
              },
            })
          );
          r.push(a.promise);
        }
        const n = Promise.all(r);
        const a = await n;
        const l = [];
        let d = 0;
        for (const e of a) {
          const r = { type: "put", request: s[d], response: e };
          l.push(r);
          d++;
        }
        const p = te();
        let w = null;
        try {
          this.#r(l);
        } catch (e) {
          w = e;
        }
        queueMicrotask(() => {
          if (w === null) {
            p.resolve(undefined);
          } else {
            p.reject(w);
          }
        });
        return p.promise;
      }
      async put(e, r) {
        h.brandCheck(this, Cache);
        h.argumentLengthCheck(arguments, 2, { header: "Cache.put" });
        e = h.converters.RequestInfo(e);
        r = h.converters.Response(r);
        let s = null;
        if (e instanceof k) {
          s = e[_];
        } else {
          s = new k(e)[_];
        }
        if (!ee(s.url) || s.method !== "GET") {
          throw h.errors.exception({ header: "Cache.put", message: "Expected an http/s scheme when method is not GET" });
        }
        const o = r[_];
        if (o.status === 206) {
          throw h.errors.exception({ header: "Cache.put", message: "Got 206 status" });
        }
        if (o.headersList.contains("vary")) {
          const e = i(o.headersList.get("vary"));
          for (const r of e) {
            if (r === "*") {
              throw h.errors.exception({ header: "Cache.put", message: "Got * vary field value" });
            }
          }
        }
        if (o.body && (l(o.body.stream) || o.body.stream.locked)) {
          throw h.errors.exception({ header: "Cache.put", message: "Response body is locked or disturbed" });
        }
        const n = w(o);
        const a = te();
        if (o.body != null) {
          const e = o.body.stream;
          const r = e.getReader();
          re(r).then(a.resolve, a.reject);
        } else {
          a.resolve(undefined);
        }
        const d = [];
        const p = { type: "put", request: s, response: n };
        d.push(p);
        const M = await a.promise;
        if (n.body != null) {
          n.body.source = M;
        }
        const j = te();
        let q = null;
        try {
          this.#r(d);
        } catch (e) {
          q = e;
        }
        queueMicrotask(() => {
          if (q === null) {
            j.resolve();
          } else {
            j.reject(q);
          }
        });
        return j.promise;
      }
      async delete(e, r = {}) {
        h.brandCheck(this, Cache);
        h.argumentLengthCheck(arguments, 1, { header: "Cache.delete" });
        e = h.converters.RequestInfo(e);
        r = h.converters.CacheQueryOptions(r);
        let s = null;
        if (e instanceof k) {
          s = e[_];
          if (s.method !== "GET" && !r.ignoreMethod) {
            return false;
          }
        } else {
          se(typeof e === "string");
          s = new k(e)[_];
        }
        const o = [];
        const n = { type: "delete", request: s, options: r };
        o.push(n);
        const i = te();
        let a = null;
        let l;
        try {
          l = this.#r(o);
        } catch (e) {
          a = e;
        }
        queueMicrotask(() => {
          if (a === null) {
            i.resolve(!!l?.length);
          } else {
            i.reject(a);
          }
        });
        return i.promise;
      }
      async keys(e = undefined, r = {}) {
        h.brandCheck(this, Cache);
        if (e !== undefined) e = h.converters.RequestInfo(e);
        r = h.converters.CacheQueryOptions(r);
        let s = null;
        if (e !== undefined) {
          if (e instanceof k) {
            s = e[_];
            if (s.method !== "GET" && !r.ignoreMethod) {
              return [];
            }
          } else if (typeof e === "string") {
            s = new k(e)[_];
          }
        }
        const o = te();
        const n = [];
        if (e === undefined) {
          for (const e of this.#e) {
            n.push(e[0]);
          }
        } else {
          const e = this.#t(s, r);
          for (const r of e) {
            n.push(r[0]);
          }
        }
        queueMicrotask(() => {
          const e = [];
          for (const r of n) {
            const s = new k("https://a");
            s[_] = r;
            s[M][d] = r.headersList;
            s[M][j] = "immutable";
            s[q] = r.client;
            e.push(s);
          }
          o.resolve(Object.freeze(e));
        });
        return o.promise;
      }
      #r(e) {
        const r = this.#e;
        const s = [...r];
        const o = [];
        const n = [];
        try {
          for (const s of e) {
            if (s.type !== "delete" && s.type !== "put") {
              throw h.errors.exception({ header: "Cache.#batchCacheOperations", message: 'operation type does not match "delete" or "put"' });
            }
            if (s.type === "delete" && s.response != null) {
              throw h.errors.exception({ header: "Cache.#batchCacheOperations", message: "delete operation should not have an associated response" });
            }
            if (this.#t(s.request, s.options, o).length) {
              throw new DOMException("???", "InvalidStateError");
            }
            let e;
            if (s.type === "delete") {
              e = this.#t(s.request, s.options);
              if (e.length === 0) {
                return [];
              }
              for (const s of e) {
                const e = r.indexOf(s);
                se(e !== -1);
                r.splice(e, 1);
              }
            } else if (s.type === "put") {
              if (s.response == null) {
                throw h.errors.exception({ header: "Cache.#batchCacheOperations", message: "put operation should have an associated response" });
              }
              const n = s.request;
              if (!ee(n.url)) {
                throw h.errors.exception({ header: "Cache.#batchCacheOperations", message: "expected http or https scheme" });
              }
              if (n.method !== "GET") {
                throw h.errors.exception({ header: "Cache.#batchCacheOperations", message: "not get method" });
              }
              if (s.options != null) {
                throw h.errors.exception({ header: "Cache.#batchCacheOperations", message: "options must not be defined" });
              }
              e = this.#t(s.request);
              for (const s of e) {
                const e = r.indexOf(s);
                se(e !== -1);
                r.splice(e, 1);
              }
              r.push([s.request, s.response]);
              o.push([s.request, s.response]);
            }
            n.push([s.request, s.response]);
          }
          return n;
        } catch (e) {
          this.#e.length = 0;
          this.#e = s;
          throw e;
        }
      }
      #t(e, r, s) {
        const o = [];
        const n = s ?? this.#e;
        for (const s of n) {
          const [n, i] = s;
          if (this.#s(e, n, i, r)) {
            o.push(s);
          }
        }
        return o;
      }
      #s(e, r, s = null, o) {
        const a = new URL(e.url);
        const l = new URL(r.url);
        if (o?.ignoreSearch) {
          l.search = "";
          a.search = "";
        }
        if (!n(a, l, true)) {
          return false;
        }
        if (s == null || o?.ignoreVary || !s.headersList.contains("vary")) {
          return true;
        }
        const d = i(s.headersList.get("vary"));
        for (const s of d) {
          if (s === "*") {
            return false;
          }
          const o = r.headersList.get(s);
          const n = e.headersList.get(s);
          if (o !== n) {
            return false;
          }
        }
        return true;
      }
    }
    Object.defineProperties(Cache.prototype, {
      [Symbol.toStringTag]: { value: "Cache", configurable: true },
      match: a,
      matchAll: a,
      add: a,
      addAll: a,
      put: a,
      delete: a,
      keys: a,
    });
    const ne = [
      { key: "ignoreSearch", converter: h.converters.boolean, defaultValue: false },
      { key: "ignoreMethod", converter: h.converters.boolean, defaultValue: false },
      { key: "ignoreVary", converter: h.converters.boolean, defaultValue: false },
    ];
    h.converters.CacheQueryOptions = h.dictionaryConverter(ne);
    h.converters.MultiCacheQueryOptions = h.dictionaryConverter([...ne, { key: "cacheName", converter: h.converters.DOMString }]);
    h.converters.Response = h.interfaceConverter(p);
    h.converters["sequence<RequestInfo>"] = h.sequenceConverter(h.converters.RequestInfo);
    e.exports = { Cache: Cache };
  },
  4738: (e, r, s) => {
    const { kConstruct: o } = s(296);
    const { Cache: n } = s(479);
    const { webidl: i } = s(4222);
    const { kEnumerableProperty: a } = s(3440);
    class CacheStorage {
      #o = new Map();
      constructor() {
        if (arguments[0] !== o) {
          i.illegalConstructor();
        }
      }
      async match(e, r = {}) {
        i.brandCheck(this, CacheStorage);
        i.argumentLengthCheck(arguments, 1, { header: "CacheStorage.match" });
        e = i.converters.RequestInfo(e);
        r = i.converters.MultiCacheQueryOptions(r);
        if (r.cacheName != null) {
          if (this.#o.has(r.cacheName)) {
            const s = this.#o.get(r.cacheName);
            const i = new n(o, s);
            return await i.match(e, r);
          }
        } else {
          for (const s of this.#o.values()) {
            const i = new n(o, s);
            const a = await i.match(e, r);
            if (a !== undefined) {
              return a;
            }
          }
        }
      }
      async has(e) {
        i.brandCheck(this, CacheStorage);
        i.argumentLengthCheck(arguments, 1, { header: "CacheStorage.has" });
        e = i.converters.DOMString(e);
        return this.#o.has(e);
      }
      async open(e) {
        i.brandCheck(this, CacheStorage);
        i.argumentLengthCheck(arguments, 1, { header: "CacheStorage.open" });
        e = i.converters.DOMString(e);
        if (this.#o.has(e)) {
          const r = this.#o.get(e);
          return new n(o, r);
        }
        const r = [];
        this.#o.set(e, r);
        return new n(o, r);
      }
      async delete(e) {
        i.brandCheck(this, CacheStorage);
        i.argumentLengthCheck(arguments, 1, { header: "CacheStorage.delete" });
        e = i.converters.DOMString(e);
        return this.#o.delete(e);
      }
      async keys() {
        i.brandCheck(this, CacheStorage);
        const e = this.#o.keys();
        return [...e];
      }
    }
    Object.defineProperties(CacheStorage.prototype, {
      [Symbol.toStringTag]: { value: "CacheStorage", configurable: true },
      match: a,
      has: a,
      open: a,
      delete: a,
      keys: a,
    });
    e.exports = { CacheStorage: CacheStorage };
  },
  296: (e, r, s) => {
    e.exports = { kConstruct: s(6443).kConstruct };
  },
  3993: (e, r, s) => {
    const o = s(2613);
    const { URLSerializer: n } = s(4322);
    const { isValidHeaderName: i } = s(5523);
    function urlEquals(e, r, s = false) {
      const o = n(e, s);
      const i = n(r, s);
      return o === i;
    }
    function fieldValues(e) {
      o(e !== null);
      const r = [];
      for (let s of e.split(",")) {
        s = s.trim();
        if (!s.length) {
          continue;
        } else if (!i(s)) {
          continue;
        }
        r.push(s);
      }
      return r;
    }
    e.exports = { urlEquals: urlEquals, fieldValues: fieldValues };
  },
  6197: (e, r, s) => {
    const o = s(2613);
    const n = s(9278);
    const i = s(8611);
    const { pipeline: a } = s(2203);
    const l = s(3440);
    const d = s(8804);
    const h = s(4655);
    const p = s(1);
    const {
      RequestContentLengthMismatchError: w,
      ResponseContentLengthMismatchError: k,
      InvalidArgumentError: _,
      RequestAbortedError: M,
      HeadersTimeoutError: j,
      HeadersOverflowError: q,
      SocketError: $,
      InformationalError: ee,
      BodyTimeoutError: te,
      HTTPParserError: re,
      ResponseExceededMaxSizeError: se,
      ClientDestroyedError: oe,
    } = s(8707);
    const ne = s(9136);
    const {
      kUrl: ie,
      kReset: Ae,
      kServerName: ae,
      kClient: ce,
      kBusy: le,
      kParser: ue,
      kConnect: ge,
      kBlocking: de,
      kResuming: fe,
      kRunning: he,
      kPending: pe,
      kSize: Ee,
      kWriting: Ie,
      kQueue: Ce,
      kConnected: me,
      kConnecting: Be,
      kNeedDrain: Qe,
      kNoRef: be,
      kKeepAliveDefaultTimeout: we,
      kHostHeader: ye,
      kPendingIdx: ke,
      kRunningIdx: Re,
      kError: Te,
      kPipelining: De,
      kSocket: Fe,
      kKeepAliveTimeoutValue: ve,
      kMaxHeadersSize: Se,
      kKeepAliveMaxTimeout: Ne,
      kKeepAliveTimeoutThreshold: Oe,
      kHeadersTimeout: Ue,
      kBodyTimeout: Ge,
      kStrictContentLength: Pe,
      kConnector: Le,
      kMaxRedirections: _e,
      kMaxRequests: Me,
      kCounter: xe,
      kClose: He,
      kDestroy: Ve,
      kDispatch: Ye,
      kInterceptors: je,
      kLocalAddress: qe,
      kMaxResponseSize: Je,
      kHTTPConnVersion: We,
      kHost: Ke,
      kHTTP2Session: Xe,
      kHTTP2SessionState: ze,
      kHTTP2BuildRequest: Ze,
      kHTTP2CopyHeaders: $e,
      kHTTP1BuildRequest: et,
    } = s(6443);
    let tt;
    try {
      tt = s(5675);
    } catch {
      tt = { constants: {} };
    }
    const {
      constants: {
        HTTP2_HEADER_AUTHORITY: rt,
        HTTP2_HEADER_METHOD: st,
        HTTP2_HEADER_PATH: ot,
        HTTP2_HEADER_SCHEME: nt,
        HTTP2_HEADER_CONTENT_LENGTH: it,
        HTTP2_HEADER_EXPECT: At,
        HTTP2_HEADER_STATUS: at,
      },
    } = tt;
    let ct = false;
    const lt = Buffer[Symbol.species];
    const ut = Symbol("kClosedResolve");
    const gt = {};
    try {
      const e = s(1637);
      gt.sendHeaders = e.channel("undici:client:sendHeaders");
      gt.beforeConnect = e.channel("undici:client:beforeConnect");
      gt.connectError = e.channel("undici:client:connectError");
      gt.connected = e.channel("undici:client:connected");
    } catch {
      gt.sendHeaders = { hasSubscribers: false };
      gt.beforeConnect = { hasSubscribers: false };
      gt.connectError = { hasSubscribers: false };
      gt.connected = { hasSubscribers: false };
    }
    class Client extends p {
      constructor(
        e,
        {
          interceptors: r,
          maxHeaderSize: s,
          headersTimeout: o,
          socketTimeout: a,
          requestTimeout: d,
          connectTimeout: h,
          bodyTimeout: p,
          idleTimeout: w,
          keepAlive: k,
          keepAliveTimeout: M,
          maxKeepAliveTimeout: j,
          keepAliveMaxTimeout: q,
          keepAliveTimeoutThreshold: $,
          socketPath: ee,
          pipelining: te,
          tls: re,
          strictContentLength: se,
          maxCachedSessions: oe,
          maxRedirections: Ae,
          connect: ce,
          maxRequestsPerClient: le,
          localAddress: ue,
          maxResponseSize: ge,
          autoSelectFamily: de,
          autoSelectFamilyAttemptTimeout: he,
          allowH2: pe,
          maxConcurrentStreams: Ee,
        } = {}
      ) {
        super();
        if (k !== undefined) {
          throw new _("unsupported keepAlive, use pipelining=0 instead");
        }
        if (a !== undefined) {
          throw new _("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");
        }
        if (d !== undefined) {
          throw new _("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");
        }
        if (w !== undefined) {
          throw new _("unsupported idleTimeout, use keepAliveTimeout instead");
        }
        if (j !== undefined) {
          throw new _("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");
        }
        if (s != null && !Number.isFinite(s)) {
          throw new _("invalid maxHeaderSize");
        }
        if (ee != null && typeof ee !== "string") {
          throw new _("invalid socketPath");
        }
        if (h != null && (!Number.isFinite(h) || h < 0)) {
          throw new _("invalid connectTimeout");
        }
        if (M != null && (!Number.isFinite(M) || M <= 0)) {
          throw new _("invalid keepAliveTimeout");
        }
        if (q != null && (!Number.isFinite(q) || q <= 0)) {
          throw new _("invalid keepAliveMaxTimeout");
        }
        if ($ != null && !Number.isFinite($)) {
          throw new _("invalid keepAliveTimeoutThreshold");
        }
        if (o != null && (!Number.isInteger(o) || o < 0)) {
          throw new _("headersTimeout must be a positive integer or zero");
        }
        if (p != null && (!Number.isInteger(p) || p < 0)) {
          throw new _("bodyTimeout must be a positive integer or zero");
        }
        if (ce != null && typeof ce !== "function" && typeof ce !== "object") {
          throw new _("connect must be a function or an object");
        }
        if (Ae != null && (!Number.isInteger(Ae) || Ae < 0)) {
          throw new _("maxRedirections must be a positive number");
        }
        if (le != null && (!Number.isInteger(le) || le < 0)) {
          throw new _("maxRequestsPerClient must be a positive number");
        }
        if (ue != null && (typeof ue !== "string" || n.isIP(ue) === 0)) {
          throw new _("localAddress must be valid string IP address");
        }
        if (ge != null && (!Number.isInteger(ge) || ge < -1)) {
          throw new _("maxResponseSize must be a positive number");
        }
        if (he != null && (!Number.isInteger(he) || he < -1)) {
          throw new _("autoSelectFamilyAttemptTimeout must be a positive number");
        }
        if (pe != null && typeof pe !== "boolean") {
          throw new _("allowH2 must be a valid boolean value");
        }
        if (Ee != null && (typeof Ee !== "number" || Ee < 1)) {
          throw new _("maxConcurrentStreams must be a possitive integer, greater than 0");
        }
        if (typeof ce !== "function") {
          ce = ne({
            ...re,
            maxCachedSessions: oe,
            allowH2: pe,
            socketPath: ee,
            timeout: h,
            ...(l.nodeHasAutoSelectFamily && de ? { autoSelectFamily: de, autoSelectFamilyAttemptTimeout: he } : undefined),
            ...ce,
          });
        }
        this[je] = r && r.Client && Array.isArray(r.Client) ? r.Client : [ft({ maxRedirections: Ae })];
        this[ie] = l.parseOrigin(e);
        this[Le] = ce;
        this[Fe] = null;
        this[De] = te != null ? te : 1;
        this[Se] = s || i.maxHeaderSize;
        this[we] = M == null ? 4e3 : M;
        this[Ne] = q == null ? 6e5 : q;
        this[Oe] = $ == null ? 1e3 : $;
        this[ve] = this[we];
        this[ae] = null;
        this[qe] = ue != null ? ue : null;
        this[fe] = 0;
        this[Qe] = 0;
        this[ye] = `host: ${this[ie].hostname}${this[ie].port ? `:${this[ie].port}` : ""}\r\n`;
        this[Ge] = p != null ? p : 3e5;
        this[Ue] = o != null ? o : 3e5;
        this[Pe] = se == null ? true : se;
        this[_e] = Ae;
        this[Me] = le;
        this[ut] = null;
        this[Je] = ge > -1 ? ge : -1;
        this[We] = "h1";
        this[Xe] = null;
        this[ze] = !pe ? null : { openStreams: 0, maxConcurrentStreams: Ee != null ? Ee : 100 };
        this[Ke] = `${this[ie].hostname}${this[ie].port ? `:${this[ie].port}` : ""}`;
        this[Ce] = [];
        this[Re] = 0;
        this[ke] = 0;
      }
      get pipelining() {
        return this[De];
      }
      set pipelining(e) {
        this[De] = e;
        resume(this, true);
      }
      get [pe]() {
        return this[Ce].length - this[ke];
      }
      get [he]() {
        return this[ke] - this[Re];
      }
      get [Ee]() {
        return this[Ce].length - this[Re];
      }
      get [me]() {
        return !!this[Fe] && !this[Be] && !this[Fe].destroyed;
      }
      get [le]() {
        const e = this[Fe];
        return (e && (e[Ae] || e[Ie] || e[de])) || this[Ee] >= (this[De] || 1) || this[pe] > 0;
      }
      [ge](e) {
        connect(this);
        this.once("connect", e);
      }
      [Ye](e, r) {
        const s = e.origin || this[ie].origin;
        const o = this[We] === "h2" ? h[Ze](s, e, r) : h[et](s, e, r);
        this[Ce].push(o);
        if (this[fe]) {
        } else if (l.bodyLength(o.body) == null && l.isIterable(o.body)) {
          this[fe] = 1;
          process.nextTick(resume, this);
        } else {
          resume(this, true);
        }
        if (this[fe] && this[Qe] !== 2 && this[le]) {
          this[Qe] = 2;
        }
        return this[Qe] < 2;
      }
      async [He]() {
        return new Promise((e) => {
          if (!this[Ee]) {
            e(null);
          } else {
            this[ut] = e;
          }
        });
      }
      async [Ve](e) {
        return new Promise((r) => {
          const s = this[Ce].splice(this[ke]);
          for (let r = 0; r < s.length; r++) {
            const o = s[r];
            errorRequest(this, o, e);
          }
          const callback = () => {
            if (this[ut]) {
              this[ut]();
              this[ut] = null;
            }
            r();
          };
          if (this[Xe] != null) {
            l.destroy(this[Xe], e);
            this[Xe] = null;
            this[ze] = null;
          }
          if (!this[Fe]) {
            queueMicrotask(callback);
          } else {
            l.destroy(this[Fe].on("close", callback), e);
          }
          resume(this);
        });
      }
    }
    function onHttp2SessionError(e) {
      o(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
      this[Fe][Te] = e;
      onError(this[ce], e);
    }
    function onHttp2FrameError(e, r, s) {
      const o = new ee(`HTTP/2: "frameError" received - type ${e}, code ${r}`);
      if (s === 0) {
        this[Fe][Te] = o;
        onError(this[ce], o);
      }
    }
    function onHttp2SessionEnd() {
      l.destroy(this, new $("other side closed"));
      l.destroy(this[Fe], new $("other side closed"));
    }
    function onHTTP2GoAway(e) {
      const r = this[ce];
      const s = new ee(`HTTP/2: "GOAWAY" frame received with code ${e}`);
      r[Fe] = null;
      r[Xe] = null;
      if (r.destroyed) {
        o(this[pe] === 0);
        const e = r[Ce].splice(r[Re]);
        for (let r = 0; r < e.length; r++) {
          const o = e[r];
          errorRequest(this, o, s);
        }
      } else if (r[he] > 0) {
        const e = r[Ce][r[Re]];
        r[Ce][r[Re]++] = null;
        errorRequest(r, e, s);
      }
      r[ke] = r[Re];
      o(r[he] === 0);
      r.emit("disconnect", r[ie], [r], s);
      resume(r);
    }
    const dt = s(2824);
    const ft = s(4415);
    const ht = Buffer.alloc(0);
    async function lazyllhttp() {
      const e = process.env.JEST_WORKER_ID ? s(3870) : undefined;
      let r;
      try {
        r = await WebAssembly.compile(Buffer.from(s(3434), "base64"));
      } catch (o) {
        r = await WebAssembly.compile(Buffer.from(e || s(3870), "base64"));
      }
      return await WebAssembly.instantiate(r, {
        env: {
          wasm_on_url: (e, r, s) => 0,
          wasm_on_status: (e, r, s) => {
            o.strictEqual(It.ptr, e);
            const n = r - Bt + Ct.byteOffset;
            return It.onStatus(new lt(Ct.buffer, n, s)) || 0;
          },
          wasm_on_message_begin: (e) => {
            o.strictEqual(It.ptr, e);
            return It.onMessageBegin() || 0;
          },
          wasm_on_header_field: (e, r, s) => {
            o.strictEqual(It.ptr, e);
            const n = r - Bt + Ct.byteOffset;
            return It.onHeaderField(new lt(Ct.buffer, n, s)) || 0;
          },
          wasm_on_header_value: (e, r, s) => {
            o.strictEqual(It.ptr, e);
            const n = r - Bt + Ct.byteOffset;
            return It.onHeaderValue(new lt(Ct.buffer, n, s)) || 0;
          },
          wasm_on_headers_complete: (e, r, s, n) => {
            o.strictEqual(It.ptr, e);
            return It.onHeadersComplete(r, Boolean(s), Boolean(n)) || 0;
          },
          wasm_on_body: (e, r, s) => {
            o.strictEqual(It.ptr, e);
            const n = r - Bt + Ct.byteOffset;
            return It.onBody(new lt(Ct.buffer, n, s)) || 0;
          },
          wasm_on_message_complete: (e) => {
            o.strictEqual(It.ptr, e);
            return It.onMessageComplete() || 0;
          },
        },
      });
    }
    let pt = null;
    let Et = lazyllhttp();
    Et.catch();
    let It = null;
    let Ct = null;
    let mt = 0;
    let Bt = null;
    const Qt = 1;
    const bt = 2;
    const wt = 3;
    class Parser {
      constructor(e, r, { exports: s }) {
        o(Number.isFinite(e[Se]) && e[Se] > 0);
        this.llhttp = s;
        this.ptr = this.llhttp.llhttp_alloc(dt.TYPE.RESPONSE);
        this.client = e;
        this.socket = r;
        this.timeout = null;
        this.timeoutValue = null;
        this.timeoutType = null;
        this.statusCode = null;
        this.statusText = "";
        this.upgrade = false;
        this.headers = [];
        this.headersSize = 0;
        this.headersMaxSize = e[Se];
        this.shouldKeepAlive = false;
        this.paused = false;
        this.resume = this.resume.bind(this);
        this.bytesRead = 0;
        this.keepAlive = "";
        this.contentLength = "";
        this.connection = "";
        this.maxResponseSize = e[Je];
      }
      setTimeout(e, r) {
        this.timeoutType = r;
        if (e !== this.timeoutValue) {
          d.clearTimeout(this.timeout);
          if (e) {
            this.timeout = d.setTimeout(onParserTimeout, e, this);
            if (this.timeout.unref) {
              this.timeout.unref();
            }
          } else {
            this.timeout = null;
          }
          this.timeoutValue = e;
        } else if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
      }
      resume() {
        if (this.socket.destroyed || !this.paused) {
          return;
        }
        o(this.ptr != null);
        o(It == null);
        this.llhttp.llhttp_resume(this.ptr);
        o(this.timeoutType === bt);
        if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
        this.paused = false;
        this.execute(this.socket.read() || ht);
        this.readMore();
      }
      readMore() {
        while (!this.paused && this.ptr) {
          const e = this.socket.read();
          if (e === null) {
            break;
          }
          this.execute(e);
        }
      }
      execute(e) {
        o(this.ptr != null);
        o(It == null);
        o(!this.paused);
        const { socket: r, llhttp: s } = this;
        if (e.length > mt) {
          if (Bt) {
            s.free(Bt);
          }
          mt = Math.ceil(e.length / 4096) * 4096;
          Bt = s.malloc(mt);
        }
        new Uint8Array(s.memory.buffer, Bt, mt).set(e);
        try {
          let o;
          try {
            Ct = e;
            It = this;
            o = s.llhttp_execute(this.ptr, Bt, e.length);
          } catch (e) {
            throw e;
          } finally {
            It = null;
            Ct = null;
          }
          const n = s.llhttp_get_error_pos(this.ptr) - Bt;
          if (o === dt.ERROR.PAUSED_UPGRADE) {
            this.onUpgrade(e.slice(n));
          } else if (o === dt.ERROR.PAUSED) {
            this.paused = true;
            r.unshift(e.slice(n));
          } else if (o !== dt.ERROR.OK) {
            const r = s.llhttp_get_error_reason(this.ptr);
            let i = "";
            if (r) {
              const e = new Uint8Array(s.memory.buffer, r).indexOf(0);
              i = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(s.memory.buffer, r, e).toString() + ")";
            }
            throw new re(i, dt.ERROR[o], e.slice(n));
          }
        } catch (e) {
          l.destroy(r, e);
        }
      }
      destroy() {
        o(this.ptr != null);
        o(It == null);
        this.llhttp.llhttp_free(this.ptr);
        this.ptr = null;
        d.clearTimeout(this.timeout);
        this.timeout = null;
        this.timeoutValue = null;
        this.timeoutType = null;
        this.paused = false;
      }
      onStatus(e) {
        this.statusText = e.toString();
      }
      onMessageBegin() {
        const { socket: e, client: r } = this;
        if (e.destroyed) {
          return -1;
        }
        const s = r[Ce][r[Re]];
        if (!s) {
          return -1;
        }
      }
      onHeaderField(e) {
        const r = this.headers.length;
        if ((r & 1) === 0) {
          this.headers.push(e);
        } else {
          this.headers[r - 1] = Buffer.concat([this.headers[r - 1], e]);
        }
        this.trackHeader(e.length);
      }
      onHeaderValue(e) {
        let r = this.headers.length;
        if ((r & 1) === 1) {
          this.headers.push(e);
          r += 1;
        } else {
          this.headers[r - 1] = Buffer.concat([this.headers[r - 1], e]);
        }
        const s = this.headers[r - 2];
        if (s.length === 10 && s.toString().toLowerCase() === "keep-alive") {
          this.keepAlive += e.toString();
        } else if (s.length === 10 && s.toString().toLowerCase() === "connection") {
          this.connection += e.toString();
        } else if (s.length === 14 && s.toString().toLowerCase() === "content-length") {
          this.contentLength += e.toString();
        }
        this.trackHeader(e.length);
      }
      trackHeader(e) {
        this.headersSize += e;
        if (this.headersSize >= this.headersMaxSize) {
          l.destroy(this.socket, new q());
        }
      }
      onUpgrade(e) {
        const { upgrade: r, client: s, socket: n, headers: i, statusCode: a } = this;
        o(r);
        const d = s[Ce][s[Re]];
        o(d);
        o(!n.destroyed);
        o(n === s[Fe]);
        o(!this.paused);
        o(d.upgrade || d.method === "CONNECT");
        this.statusCode = null;
        this.statusText = "";
        this.shouldKeepAlive = null;
        o(this.headers.length % 2 === 0);
        this.headers = [];
        this.headersSize = 0;
        n.unshift(e);
        n[ue].destroy();
        n[ue] = null;
        n[ce] = null;
        n[Te] = null;
        n.removeListener("error", onSocketError)
          .removeListener("readable", onSocketReadable)
          .removeListener("end", onSocketEnd)
          .removeListener("close", onSocketClose);
        s[Fe] = null;
        s[Ce][s[Re]++] = null;
        s.emit("disconnect", s[ie], [s], new ee("upgrade"));
        try {
          d.onUpgrade(a, i, n);
        } catch (e) {
          l.destroy(n, e);
        }
        resume(s);
      }
      onHeadersComplete(e, r, s) {
        const { client: n, socket: i, headers: a, statusText: d } = this;
        if (i.destroyed) {
          return -1;
        }
        const h = n[Ce][n[Re]];
        if (!h) {
          return -1;
        }
        o(!this.upgrade);
        o(this.statusCode < 200);
        if (e === 100) {
          l.destroy(i, new $("bad response", l.getSocketInfo(i)));
          return -1;
        }
        if (r && !h.upgrade) {
          l.destroy(i, new $("bad upgrade", l.getSocketInfo(i)));
          return -1;
        }
        o.strictEqual(this.timeoutType, Qt);
        this.statusCode = e;
        this.shouldKeepAlive = s || (h.method === "HEAD" && !i[Ae] && this.connection.toLowerCase() === "keep-alive");
        if (this.statusCode >= 200) {
          const e = h.bodyTimeout != null ? h.bodyTimeout : n[Ge];
          this.setTimeout(e, bt);
        } else if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
        if (h.method === "CONNECT") {
          o(n[he] === 1);
          this.upgrade = true;
          return 2;
        }
        if (r) {
          o(n[he] === 1);
          this.upgrade = true;
          return 2;
        }
        o(this.headers.length % 2 === 0);
        this.headers = [];
        this.headersSize = 0;
        if (this.shouldKeepAlive && n[De]) {
          const e = this.keepAlive ? l.parseKeepAliveTimeout(this.keepAlive) : null;
          if (e != null) {
            const r = Math.min(e - n[Oe], n[Ne]);
            if (r <= 0) {
              i[Ae] = true;
            } else {
              n[ve] = r;
            }
          } else {
            n[ve] = n[we];
          }
        } else {
          i[Ae] = true;
        }
        const p = h.onHeaders(e, a, this.resume, d) === false;
        if (h.aborted) {
          return -1;
        }
        if (h.method === "HEAD") {
          return 1;
        }
        if (e < 200) {
          return 1;
        }
        if (i[de]) {
          i[de] = false;
          resume(n);
        }
        return p ? dt.ERROR.PAUSED : 0;
      }
      onBody(e) {
        const { client: r, socket: s, statusCode: n, maxResponseSize: i } = this;
        if (s.destroyed) {
          return -1;
        }
        const a = r[Ce][r[Re]];
        o(a);
        o.strictEqual(this.timeoutType, bt);
        if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
        o(n >= 200);
        if (i > -1 && this.bytesRead + e.length > i) {
          l.destroy(s, new se());
          return -1;
        }
        this.bytesRead += e.length;
        if (a.onData(e) === false) {
          return dt.ERROR.PAUSED;
        }
      }
      onMessageComplete() {
        const { client: e, socket: r, statusCode: s, upgrade: n, headers: i, contentLength: a, bytesRead: d, shouldKeepAlive: h } = this;
        if (r.destroyed && (!s || h)) {
          return -1;
        }
        if (n) {
          return;
        }
        const p = e[Ce][e[Re]];
        o(p);
        o(s >= 100);
        this.statusCode = null;
        this.statusText = "";
        this.bytesRead = 0;
        this.contentLength = "";
        this.keepAlive = "";
        this.connection = "";
        o(this.headers.length % 2 === 0);
        this.headers = [];
        this.headersSize = 0;
        if (s < 200) {
          return;
        }
        if (p.method !== "HEAD" && a && d !== parseInt(a, 10)) {
          l.destroy(r, new k());
          return -1;
        }
        p.onComplete(i);
        e[Ce][e[Re]++] = null;
        if (r[Ie]) {
          o.strictEqual(e[he], 0);
          l.destroy(r, new ee("reset"));
          return dt.ERROR.PAUSED;
        } else if (!h) {
          l.destroy(r, new ee("reset"));
          return dt.ERROR.PAUSED;
        } else if (r[Ae] && e[he] === 0) {
          l.destroy(r, new ee("reset"));
          return dt.ERROR.PAUSED;
        } else if (e[De] === 1) {
          setImmediate(resume, e);
        } else {
          resume(e);
        }
      }
    }
    function onParserTimeout(e) {
      const { socket: r, timeoutType: s, client: n } = e;
      if (s === Qt) {
        if (!r[Ie] || r.writableNeedDrain || n[he] > 1) {
          o(!e.paused, "cannot be paused while waiting for headers");
          l.destroy(r, new j());
        }
      } else if (s === bt) {
        if (!e.paused) {
          l.destroy(r, new te());
        }
      } else if (s === wt) {
        o(n[he] === 0 && n[ve]);
        l.destroy(r, new ee("socket idle timeout"));
      }
    }
    function onSocketReadable() {
      const { [ue]: e } = this;
      if (e) {
        e.readMore();
      }
    }
    function onSocketError(e) {
      const { [ce]: r, [ue]: s } = this;
      o(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
      if (r[We] !== "h2") {
        if (e.code === "ECONNRESET" && s.statusCode && !s.shouldKeepAlive) {
          s.onMessageComplete();
          return;
        }
      }
      this[Te] = e;
      onError(this[ce], e);
    }
    function onError(e, r) {
      if (e[he] === 0 && r.code !== "UND_ERR_INFO" && r.code !== "UND_ERR_SOCKET") {
        o(e[ke] === e[Re]);
        const s = e[Ce].splice(e[Re]);
        for (let o = 0; o < s.length; o++) {
          const n = s[o];
          errorRequest(e, n, r);
        }
        o(e[Ee] === 0);
      }
    }
    function onSocketEnd() {
      const { [ue]: e, [ce]: r } = this;
      if (r[We] !== "h2") {
        if (e.statusCode && !e.shouldKeepAlive) {
          e.onMessageComplete();
          return;
        }
      }
      l.destroy(this, new $("other side closed", l.getSocketInfo(this)));
    }
    function onSocketClose() {
      const { [ce]: e, [ue]: r } = this;
      if (e[We] === "h1" && r) {
        if (!this[Te] && r.statusCode && !r.shouldKeepAlive) {
          r.onMessageComplete();
        }
        this[ue].destroy();
        this[ue] = null;
      }
      const s = this[Te] || new $("closed", l.getSocketInfo(this));
      e[Fe] = null;
      if (e.destroyed) {
        o(e[pe] === 0);
        const r = e[Ce].splice(e[Re]);
        for (let o = 0; o < r.length; o++) {
          const n = r[o];
          errorRequest(e, n, s);
        }
      } else if (e[he] > 0 && s.code !== "UND_ERR_INFO") {
        const r = e[Ce][e[Re]];
        e[Ce][e[Re]++] = null;
        errorRequest(e, r, s);
      }
      e[ke] = e[Re];
      o(e[he] === 0);
      e.emit("disconnect", e[ie], [e], s);
      resume(e);
    }
    async function connect(e) {
      o(!e[Be]);
      o(!e[Fe]);
      let { host: r, hostname: s, protocol: i, port: a } = e[ie];
      if (s[0] === "[") {
        const e = s.indexOf("]");
        o(e !== -1);
        const r = s.substring(1, e);
        o(n.isIP(r));
        s = r;
      }
      e[Be] = true;
      if (gt.beforeConnect.hasSubscribers) {
        gt.beforeConnect.publish({ connectParams: { host: r, hostname: s, protocol: i, port: a, servername: e[ae], localAddress: e[qe] }, connector: e[Le] });
      }
      try {
        const n = await new Promise((o, n) => {
          e[Le]({ host: r, hostname: s, protocol: i, port: a, servername: e[ae], localAddress: e[qe] }, (e, r) => {
            if (e) {
              n(e);
            } else {
              o(r);
            }
          });
        });
        if (e.destroyed) {
          l.destroy(
            n.on("error", () => {}),
            new oe()
          );
          return;
        }
        e[Be] = false;
        o(n);
        const d = n.alpnProtocol === "h2";
        if (d) {
          if (!ct) {
            ct = true;
            process.emitWarning("H2 support is experimental, expect them to change at any time.", { code: "UNDICI-H2" });
          }
          const r = tt.connect(e[ie], { createConnection: () => n, peerMaxConcurrentStreams: e[ze].maxConcurrentStreams });
          e[We] = "h2";
          r[ce] = e;
          r[Fe] = n;
          r.on("error", onHttp2SessionError);
          r.on("frameError", onHttp2FrameError);
          r.on("end", onHttp2SessionEnd);
          r.on("goaway", onHTTP2GoAway);
          r.on("close", onSocketClose);
          r.unref();
          e[Xe] = r;
          n[Xe] = r;
        } else {
          if (!pt) {
            pt = await Et;
            Et = null;
          }
          n[be] = false;
          n[Ie] = false;
          n[Ae] = false;
          n[de] = false;
          n[ue] = new Parser(e, n, pt);
        }
        n[xe] = 0;
        n[Me] = e[Me];
        n[ce] = e;
        n[Te] = null;
        n.on("error", onSocketError).on("readable", onSocketReadable).on("end", onSocketEnd).on("close", onSocketClose);
        e[Fe] = n;
        if (gt.connected.hasSubscribers) {
          gt.connected.publish({
            connectParams: { host: r, hostname: s, protocol: i, port: a, servername: e[ae], localAddress: e[qe] },
            connector: e[Le],
            socket: n,
          });
        }
        e.emit("connect", e[ie], [e]);
      } catch (n) {
        if (e.destroyed) {
          return;
        }
        e[Be] = false;
        if (gt.connectError.hasSubscribers) {
          gt.connectError.publish({
            connectParams: { host: r, hostname: s, protocol: i, port: a, servername: e[ae], localAddress: e[qe] },
            connector: e[Le],
            error: n,
          });
        }
        if (n.code === "ERR_TLS_CERT_ALTNAME_INVALID") {
          o(e[he] === 0);
          while (e[pe] > 0 && e[Ce][e[ke]].servername === e[ae]) {
            const r = e[Ce][e[ke]++];
            errorRequest(e, r, n);
          }
        } else {
          onError(e, n);
        }
        e.emit("connectionError", e[ie], [e], n);
      }
      resume(e);
    }
    function emitDrain(e) {
      e[Qe] = 0;
      e.emit("drain", e[ie], [e]);
    }
    function resume(e, r) {
      if (e[fe] === 2) {
        return;
      }
      e[fe] = 2;
      _resume(e, r);
      e[fe] = 0;
      if (e[Re] > 256) {
        e[Ce].splice(0, e[Re]);
        e[ke] -= e[Re];
        e[Re] = 0;
      }
    }
    function _resume(e, r) {
      while (true) {
        if (e.destroyed) {
          o(e[pe] === 0);
          return;
        }
        if (e[ut] && !e[Ee]) {
          e[ut]();
          e[ut] = null;
          return;
        }
        const s = e[Fe];
        if (s && !s.destroyed && s.alpnProtocol !== "h2") {
          if (e[Ee] === 0) {
            if (!s[be] && s.unref) {
              s.unref();
              s[be] = true;
            }
          } else if (s[be] && s.ref) {
            s.ref();
            s[be] = false;
          }
          if (e[Ee] === 0) {
            if (s[ue].timeoutType !== wt) {
              s[ue].setTimeout(e[ve], wt);
            }
          } else if (e[he] > 0 && s[ue].statusCode < 200) {
            if (s[ue].timeoutType !== Qt) {
              const r = e[Ce][e[Re]];
              const o = r.headersTimeout != null ? r.headersTimeout : e[Ue];
              s[ue].setTimeout(o, Qt);
            }
          }
        }
        if (e[le]) {
          e[Qe] = 2;
        } else if (e[Qe] === 2) {
          if (r) {
            e[Qe] = 1;
            process.nextTick(emitDrain, e);
          } else {
            emitDrain(e);
          }
          continue;
        }
        if (e[pe] === 0) {
          return;
        }
        if (e[he] >= (e[De] || 1)) {
          return;
        }
        const n = e[Ce][e[ke]];
        if (e[ie].protocol === "https:" && e[ae] !== n.servername) {
          if (e[he] > 0) {
            return;
          }
          e[ae] = n.servername;
          if (s && s.servername !== n.servername) {
            l.destroy(s, new ee("servername changed"));
            return;
          }
        }
        if (e[Be]) {
          return;
        }
        if (!s && !e[Xe]) {
          connect(e);
          return;
        }
        if (s.destroyed || s[Ie] || s[Ae] || s[de]) {
          return;
        }
        if (e[he] > 0 && !n.idempotent) {
          return;
        }
        if (e[he] > 0 && (n.upgrade || n.method === "CONNECT")) {
          return;
        }
        if (e[he] > 0 && l.bodyLength(n.body) !== 0 && (l.isStream(n.body) || l.isAsyncIterable(n.body))) {
          return;
        }
        if (!n.aborted && write(e, n)) {
          e[ke]++;
        } else {
          e[Ce].splice(e[ke], 1);
        }
      }
    }
    function shouldSendContentLength(e) {
      return e !== "GET" && e !== "HEAD" && e !== "OPTIONS" && e !== "TRACE" && e !== "CONNECT";
    }
    function write(e, r) {
      if (e[We] === "h2") {
        writeH2(e, e[Xe], r);
        return;
      }
      const { body: s, method: n, path: i, host: a, upgrade: d, headers: h, blocking: p, reset: k } = r;
      const _ = n === "PUT" || n === "POST" || n === "PATCH";
      if (s && typeof s.read === "function") {
        s.read(0);
      }
      const j = l.bodyLength(s);
      let q = j;
      if (q === null) {
        q = r.contentLength;
      }
      if (q === 0 && !_) {
        q = null;
      }
      if (shouldSendContentLength(n) && q > 0 && r.contentLength !== null && r.contentLength !== q) {
        if (e[Pe]) {
          errorRequest(e, r, new w());
          return false;
        }
        process.emitWarning(new w());
      }
      const $ = e[Fe];
      try {
        r.onConnect((s) => {
          if (r.aborted || r.completed) {
            return;
          }
          errorRequest(e, r, s || new M());
          l.destroy($, new ee("aborted"));
        });
      } catch (s) {
        errorRequest(e, r, s);
      }
      if (r.aborted) {
        return false;
      }
      if (n === "HEAD") {
        $[Ae] = true;
      }
      if (d || n === "CONNECT") {
        $[Ae] = true;
      }
      if (k != null) {
        $[Ae] = k;
      }
      if (e[Me] && $[xe]++ >= e[Me]) {
        $[Ae] = true;
      }
      if (p) {
        $[de] = true;
      }
      let te = `${n} ${i} HTTP/1.1\r\n`;
      if (typeof a === "string") {
        te += `host: ${a}\r\n`;
      } else {
        te += e[ye];
      }
      if (d) {
        te += `connection: upgrade\r\nupgrade: ${d}\r\n`;
      } else if (e[De] && !$[Ae]) {
        te += "connection: keep-alive\r\n";
      } else {
        te += "connection: close\r\n";
      }
      if (h) {
        te += h;
      }
      if (gt.sendHeaders.hasSubscribers) {
        gt.sendHeaders.publish({ request: r, headers: te, socket: $ });
      }
      if (!s || j === 0) {
        if (q === 0) {
          $.write(`${te}content-length: 0\r\n\r\n`, "latin1");
        } else {
          o(q === null, "no body must not have content length");
          $.write(`${te}\r\n`, "latin1");
        }
        r.onRequestSent();
      } else if (l.isBuffer(s)) {
        o(q === s.byteLength, "buffer body must have content length");
        $.cork();
        $.write(`${te}content-length: ${q}\r\n\r\n`, "latin1");
        $.write(s);
        $.uncork();
        r.onBodySent(s);
        r.onRequestSent();
        if (!_) {
          $[Ae] = true;
        }
      } else if (l.isBlobLike(s)) {
        if (typeof s.stream === "function") {
          writeIterable({ body: s.stream(), client: e, request: r, socket: $, contentLength: q, header: te, expectsPayload: _ });
        } else {
          writeBlob({ body: s, client: e, request: r, socket: $, contentLength: q, header: te, expectsPayload: _ });
        }
      } else if (l.isStream(s)) {
        writeStream({ body: s, client: e, request: r, socket: $, contentLength: q, header: te, expectsPayload: _ });
      } else if (l.isIterable(s)) {
        writeIterable({ body: s, client: e, request: r, socket: $, contentLength: q, header: te, expectsPayload: _ });
      } else {
        o(false);
      }
      return true;
    }
    function writeH2(e, r, s) {
      const { body: n, method: i, path: a, host: d, upgrade: p, expectContinue: k, signal: _, headers: j } = s;
      let q;
      if (typeof j === "string") q = h[$e](j.trim());
      else q = j;
      if (p) {
        errorRequest(e, s, new Error("Upgrade not supported for H2"));
        return false;
      }
      try {
        s.onConnect((r) => {
          if (s.aborted || s.completed) {
            return;
          }
          errorRequest(e, s, r || new M());
        });
      } catch (r) {
        errorRequest(e, s, r);
      }
      if (s.aborted) {
        return false;
      }
      let $;
      const te = e[ze];
      q[rt] = d || e[Ke];
      q[st] = i;
      if (i === "CONNECT") {
        r.ref();
        $ = r.request(q, { endStream: false, signal: _ });
        if ($.id && !$.pending) {
          s.onUpgrade(null, null, $);
          ++te.openStreams;
        } else {
          $.once("ready", () => {
            s.onUpgrade(null, null, $);
            ++te.openStreams;
          });
        }
        $.once("close", () => {
          te.openStreams -= 1;
          if (te.openStreams === 0) r.unref();
        });
        return true;
      }
      q[ot] = a;
      q[nt] = "https";
      const re = i === "PUT" || i === "POST" || i === "PATCH";
      if (n && typeof n.read === "function") {
        n.read(0);
      }
      let se = l.bodyLength(n);
      if (se == null) {
        se = s.contentLength;
      }
      if (se === 0 || !re) {
        se = null;
      }
      if (shouldSendContentLength(i) && se > 0 && s.contentLength != null && s.contentLength !== se) {
        if (e[Pe]) {
          errorRequest(e, s, new w());
          return false;
        }
        process.emitWarning(new w());
      }
      if (se != null) {
        o(n, "no body must not have content length");
        q[it] = `${se}`;
      }
      r.ref();
      const oe = i === "GET" || i === "HEAD";
      if (k) {
        q[At] = "100-continue";
        $ = r.request(q, { endStream: oe, signal: _ });
        $.once("continue", writeBodyH2);
      } else {
        $ = r.request(q, { endStream: oe, signal: _ });
        writeBodyH2();
      }
      ++te.openStreams;
      $.once("response", (e) => {
        const { [at]: r, ...o } = e;
        if (s.onHeaders(Number(r), o, $.resume.bind($), "") === false) {
          $.pause();
        }
      });
      $.once("end", () => {
        s.onComplete([]);
      });
      $.on("data", (e) => {
        if (s.onData(e) === false) {
          $.pause();
        }
      });
      $.once("close", () => {
        te.openStreams -= 1;
        if (te.openStreams === 0) {
          r.unref();
        }
      });
      $.once("error", function (r) {
        if (e[Xe] && !e[Xe].destroyed && !this.closed && !this.destroyed) {
          te.streams -= 1;
          l.destroy($, r);
        }
      });
      $.once("frameError", (r, o) => {
        const n = new ee(`HTTP/2: "frameError" received - type ${r}, code ${o}`);
        errorRequest(e, s, n);
        if (e[Xe] && !e[Xe].destroyed && !this.closed && !this.destroyed) {
          te.streams -= 1;
          l.destroy($, n);
        }
      });
      return true;
      function writeBodyH2() {
        if (!n) {
          s.onRequestSent();
        } else if (l.isBuffer(n)) {
          o(se === n.byteLength, "buffer body must have content length");
          $.cork();
          $.write(n);
          $.uncork();
          $.end();
          s.onBodySent(n);
          s.onRequestSent();
        } else if (l.isBlobLike(n)) {
          if (typeof n.stream === "function") {
            writeIterable({ client: e, request: s, contentLength: se, h2stream: $, expectsPayload: re, body: n.stream(), socket: e[Fe], header: "" });
          } else {
            writeBlob({ body: n, client: e, request: s, contentLength: se, expectsPayload: re, h2stream: $, header: "", socket: e[Fe] });
          }
        } else if (l.isStream(n)) {
          writeStream({ body: n, client: e, request: s, contentLength: se, expectsPayload: re, socket: e[Fe], h2stream: $, header: "" });
        } else if (l.isIterable(n)) {
          writeIterable({ body: n, client: e, request: s, contentLength: se, expectsPayload: re, header: "", h2stream: $, socket: e[Fe] });
        } else {
          o(false);
        }
      }
    }
    function writeStream({ h2stream: e, body: r, client: s, request: n, socket: i, contentLength: d, header: h, expectsPayload: p }) {
      o(d !== 0 || s[he] === 0, "stream body cannot be pipelined");
      if (s[We] === "h2") {
        const _ = a(r, e, (s) => {
          if (s) {
            l.destroy(r, s);
            l.destroy(e, s);
          } else {
            n.onRequestSent();
          }
        });
        _.on("data", onPipeData);
        _.once("end", () => {
          _.removeListener("data", onPipeData);
          l.destroy(_);
        });
        function onPipeData(e) {
          n.onBodySent(e);
        }
        return;
      }
      let w = false;
      const k = new AsyncWriter({ socket: i, request: n, contentLength: d, client: s, expectsPayload: p, header: h });
      const onData = function (e) {
        if (w) {
          return;
        }
        try {
          if (!k.write(e) && this.pause) {
            this.pause();
          }
        } catch (e) {
          l.destroy(this, e);
        }
      };
      const onDrain = function () {
        if (w) {
          return;
        }
        if (r.resume) {
          r.resume();
        }
      };
      const onAbort = function () {
        if (w) {
          return;
        }
        const e = new M();
        queueMicrotask(() => onFinished(e));
      };
      const onFinished = function (e) {
        if (w) {
          return;
        }
        w = true;
        o(i.destroyed || (i[Ie] && s[he] <= 1));
        i.off("drain", onDrain).off("error", onFinished);
        r.removeListener("data", onData).removeListener("end", onFinished).removeListener("error", onFinished).removeListener("close", onAbort);
        if (!e) {
          try {
            k.end();
          } catch (r) {
            e = r;
          }
        }
        k.destroy(e);
        if (e && (e.code !== "UND_ERR_INFO" || e.message !== "reset")) {
          l.destroy(r, e);
        } else {
          l.destroy(r);
        }
      };
      r.on("data", onData).on("end", onFinished).on("error", onFinished).on("close", onAbort);
      if (r.resume) {
        r.resume();
      }
      i.on("drain", onDrain).on("error", onFinished);
    }
    async function writeBlob({ h2stream: e, body: r, client: s, request: n, socket: i, contentLength: a, header: d, expectsPayload: h }) {
      o(a === r.size, "blob body must have content length");
      const p = s[We] === "h2";
      try {
        if (a != null && a !== r.size) {
          throw new w();
        }
        const o = Buffer.from(await r.arrayBuffer());
        if (p) {
          e.cork();
          e.write(o);
          e.uncork();
        } else {
          i.cork();
          i.write(`${d}content-length: ${a}\r\n\r\n`, "latin1");
          i.write(o);
          i.uncork();
        }
        n.onBodySent(o);
        n.onRequestSent();
        if (!h) {
          i[Ae] = true;
        }
        resume(s);
      } catch (r) {
        l.destroy(p ? e : i, r);
      }
    }
    async function writeIterable({ h2stream: e, body: r, client: s, request: n, socket: i, contentLength: a, header: l, expectsPayload: d }) {
      o(a !== 0 || s[he] === 0, "iterator body cannot be pipelined");
      let h = null;
      function onDrain() {
        if (h) {
          const e = h;
          h = null;
          e();
        }
      }
      const waitForDrain = () =>
        new Promise((e, r) => {
          o(h === null);
          if (i[Te]) {
            r(i[Te]);
          } else {
            h = e;
          }
        });
      if (s[We] === "h2") {
        e.on("close", onDrain).on("drain", onDrain);
        try {
          for await (const s of r) {
            if (i[Te]) {
              throw i[Te];
            }
            const r = e.write(s);
            n.onBodySent(s);
            if (!r) {
              await waitForDrain();
            }
          }
        } catch (r) {
          e.destroy(r);
        } finally {
          n.onRequestSent();
          e.end();
          e.off("close", onDrain).off("drain", onDrain);
        }
        return;
      }
      i.on("close", onDrain).on("drain", onDrain);
      const p = new AsyncWriter({ socket: i, request: n, contentLength: a, client: s, expectsPayload: d, header: l });
      try {
        for await (const e of r) {
          if (i[Te]) {
            throw i[Te];
          }
          if (!p.write(e)) {
            await waitForDrain();
          }
        }
        p.end();
      } catch (e) {
        p.destroy(e);
      } finally {
        i.off("close", onDrain).off("drain", onDrain);
      }
    }
    class AsyncWriter {
      constructor({ socket: e, request: r, contentLength: s, client: o, expectsPayload: n, header: i }) {
        this.socket = e;
        this.request = r;
        this.contentLength = s;
        this.client = o;
        this.bytesWritten = 0;
        this.expectsPayload = n;
        this.header = i;
        e[Ie] = true;
      }
      write(e) {
        const { socket: r, request: s, contentLength: o, client: n, bytesWritten: i, expectsPayload: a, header: l } = this;
        if (r[Te]) {
          throw r[Te];
        }
        if (r.destroyed) {
          return false;
        }
        const d = Buffer.byteLength(e);
        if (!d) {
          return true;
        }
        if (o !== null && i + d > o) {
          if (n[Pe]) {
            throw new w();
          }
          process.emitWarning(new w());
        }
        r.cork();
        if (i === 0) {
          if (!a) {
            r[Ae] = true;
          }
          if (o === null) {
            r.write(`${l}transfer-encoding: chunked\r\n`, "latin1");
          } else {
            r.write(`${l}content-length: ${o}\r\n\r\n`, "latin1");
          }
        }
        if (o === null) {
          r.write(`\r\n${d.toString(16)}\r\n`, "latin1");
        }
        this.bytesWritten += d;
        const h = r.write(e);
        r.uncork();
        s.onBodySent(e);
        if (!h) {
          if (r[ue].timeout && r[ue].timeoutType === Qt) {
            if (r[ue].timeout.refresh) {
              r[ue].timeout.refresh();
            }
          }
        }
        return h;
      }
      end() {
        const { socket: e, contentLength: r, client: s, bytesWritten: o, expectsPayload: n, header: i, request: a } = this;
        a.onRequestSent();
        e[Ie] = false;
        if (e[Te]) {
          throw e[Te];
        }
        if (e.destroyed) {
          return;
        }
        if (o === 0) {
          if (n) {
            e.write(`${i}content-length: 0\r\n\r\n`, "latin1");
          } else {
            e.write(`${i}\r\n`, "latin1");
          }
        } else if (r === null) {
          e.write("\r\n0\r\n\r\n", "latin1");
        }
        if (r !== null && o !== r) {
          if (s[Pe]) {
            throw new w();
          } else {
            process.emitWarning(new w());
          }
        }
        if (e[ue].timeout && e[ue].timeoutType === Qt) {
          if (e[ue].timeout.refresh) {
            e[ue].timeout.refresh();
          }
        }
        resume(s);
      }
      destroy(e) {
        const { socket: r, client: s } = this;
        r[Ie] = false;
        if (e) {
          o(s[he] <= 1, "pipeline should only contain this request");
          l.destroy(r, e);
        }
      }
    }
    function errorRequest(e, r, s) {
      try {
        r.onError(s);
        o(r.aborted);
      } catch (s) {
        e.emit("error", s);
      }
    }
    e.exports = Client;
  },
  3194: (e, r, s) => {
    const { kConnected: o, kSize: n } = s(6443);
    class CompatWeakRef {
      constructor(e) {
        this.value = e;
      }
      deref() {
        return this.value[o] === 0 && this.value[n] === 0 ? undefined : this.value;
      }
    }
    class CompatFinalizer {
      constructor(e) {
        this.finalizer = e;
      }
      register(e, r) {
        if (e.on) {
          e.on("disconnect", () => {
            if (e[o] === 0 && e[n] === 0) {
              this.finalizer(r);
            }
          });
        }
      }
    }
    e.exports = function () {
      if (process.env.NODE_V8_COVERAGE) {
        return { WeakRef: CompatWeakRef, FinalizationRegistry: CompatFinalizer };
      }
      return { WeakRef: global.WeakRef || CompatWeakRef, FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer };
    };
  },
  9237: (e) => {
    const r = 1024;
    const s = 4096;
    e.exports = { maxAttributeValueSize: r, maxNameValuePairSize: s };
  },
  3168: (e, r, s) => {
    const { parseSetCookie: o } = s(8915);
    const { stringify: n, getHeadersList: i } = s(3834);
    const { webidl: a } = s(4222);
    const { Headers: l } = s(6349);
    function getCookies(e) {
      a.argumentLengthCheck(arguments, 1, { header: "getCookies" });
      a.brandCheck(e, l, { strict: false });
      const r = e.get("cookie");
      const s = {};
      if (!r) {
        return s;
      }
      for (const e of r.split(";")) {
        const [r, ...o] = e.split("=");
        s[r.trim()] = o.join("=");
      }
      return s;
    }
    function deleteCookie(e, r, s) {
      a.argumentLengthCheck(arguments, 2, { header: "deleteCookie" });
      a.brandCheck(e, l, { strict: false });
      r = a.converters.DOMString(r);
      s = a.converters.DeleteCookieAttributes(s);
      setCookie(e, { name: r, value: "", expires: new Date(0), ...s });
    }
    function getSetCookies(e) {
      a.argumentLengthCheck(arguments, 1, { header: "getSetCookies" });
      a.brandCheck(e, l, { strict: false });
      const r = i(e).cookies;
      if (!r) {
        return [];
      }
      return r.map((e) => o(Array.isArray(e) ? e[1] : e));
    }
    function setCookie(e, r) {
      a.argumentLengthCheck(arguments, 2, { header: "setCookie" });
      a.brandCheck(e, l, { strict: false });
      r = a.converters.Cookie(r);
      const s = n(r);
      if (s) {
        e.append("Set-Cookie", n(r));
      }
    }
    a.converters.DeleteCookieAttributes = a.dictionaryConverter([
      { converter: a.nullableConverter(a.converters.DOMString), key: "path", defaultValue: null },
      { converter: a.nullableConverter(a.converters.DOMString), key: "domain", defaultValue: null },
    ]);
    a.converters.Cookie = a.dictionaryConverter([
      { converter: a.converters.DOMString, key: "name" },
      { converter: a.converters.DOMString, key: "value" },
      {
        converter: a.nullableConverter((e) => {
          if (typeof e === "number") {
            return a.converters["unsigned long long"](e);
          }
          return new Date(e);
        }),
        key: "expires",
        defaultValue: null,
      },
      { converter: a.nullableConverter(a.converters["long long"]), key: "maxAge", defaultValue: null },
      { converter: a.nullableConverter(a.converters.DOMString), key: "domain", defaultValue: null },
      { converter: a.nullableConverter(a.converters.DOMString), key: "path", defaultValue: null },
      { converter: a.nullableConverter(a.converters.boolean), key: "secure", defaultValue: null },
      { converter: a.nullableConverter(a.converters.boolean), key: "httpOnly", defaultValue: null },
      { converter: a.converters.USVString, key: "sameSite", allowedValues: ["Strict", "Lax", "None"] },
      { converter: a.sequenceConverter(a.converters.DOMString), key: "unparsed", defaultValue: [] },
    ]);
    e.exports = { getCookies: getCookies, deleteCookie: deleteCookie, getSetCookies: getSetCookies, setCookie: setCookie };
  },
  8915: (e, r, s) => {
    const { maxNameValuePairSize: o, maxAttributeValueSize: n } = s(9237);
    const { isCTLExcludingHtab: i } = s(3834);
    const { collectASequenceOfCodePointsFast: a } = s(4322);
    const l = s(2613);
    function parseSetCookie(e) {
      if (i(e)) {
        return null;
      }
      let r = "";
      let s = "";
      let n = "";
      let l = "";
      if (e.includes(";")) {
        const o = { position: 0 };
        r = a(";", e, o);
        s = e.slice(o.position);
      } else {
        r = e;
      }
      if (!r.includes("=")) {
        l = r;
      } else {
        const e = { position: 0 };
        n = a("=", r, e);
        l = r.slice(e.position + 1);
      }
      n = n.trim();
      l = l.trim();
      if (n.length + l.length > o) {
        return null;
      }
      return { name: n, value: l, ...parseUnparsedAttributes(s) };
    }
    function parseUnparsedAttributes(e, r = {}) {
      if (e.length === 0) {
        return r;
      }
      l(e[0] === ";");
      e = e.slice(1);
      let s = "";
      if (e.includes(";")) {
        s = a(";", e, { position: 0 });
        e = e.slice(s.length);
      } else {
        s = e;
        e = "";
      }
      let o = "";
      let i = "";
      if (s.includes("=")) {
        const e = { position: 0 };
        o = a("=", s, e);
        i = s.slice(e.position + 1);
      } else {
        o = s;
      }
      o = o.trim();
      i = i.trim();
      if (i.length > n) {
        return parseUnparsedAttributes(e, r);
      }
      const d = o.toLowerCase();
      if (d === "expires") {
        const e = new Date(i);
        r.expires = e;
      } else if (d === "max-age") {
        const s = i.charCodeAt(0);
        if ((s < 48 || s > 57) && i[0] !== "-") {
          return parseUnparsedAttributes(e, r);
        }
        if (!/^\d+$/.test(i)) {
          return parseUnparsedAttributes(e, r);
        }
        const o = Number(i);
        r.maxAge = o;
      } else if (d === "domain") {
        let e = i;
        if (e[0] === ".") {
          e = e.slice(1);
        }
        e = e.toLowerCase();
        r.domain = e;
      } else if (d === "path") {
        let e = "";
        if (i.length === 0 || i[0] !== "/") {
          e = "/";
        } else {
          e = i;
        }
        r.path = e;
      } else if (d === "secure") {
        r.secure = true;
      } else if (d === "httponly") {
        r.httpOnly = true;
      } else if (d === "samesite") {
        let e = "Default";
        const s = i.toLowerCase();
        if (s.includes("none")) {
          e = "None";
        }
        if (s.includes("strict")) {
          e = "Strict";
        }
        if (s.includes("lax")) {
          e = "Lax";
        }
        r.sameSite = e;
      } else {
        r.unparsed ??= [];
        r.unparsed.push(`${o}=${i}`);
      }
      return parseUnparsedAttributes(e, r);
    }
    e.exports = { parseSetCookie: parseSetCookie, parseUnparsedAttributes: parseUnparsedAttributes };
  },
  3834: (e, r, s) => {
    const o = s(2613);
    const { kHeadersList: n } = s(6443);
    function isCTLExcludingHtab(e) {
      if (e.length === 0) {
        return false;
      }
      for (const r of e) {
        const e = r.charCodeAt(0);
        if (e >= 0 || e <= 8 || e >= 10 || e <= 31 || e === 127) {
          return false;
        }
      }
    }
    function validateCookieName(e) {
      for (const r of e) {
        const e = r.charCodeAt(0);
        if (
          e <= 32 ||
          e > 127 ||
          r === "(" ||
          r === ")" ||
          r === ">" ||
          r === "<" ||
          r === "@" ||
          r === "," ||
          r === ";" ||
          r === ":" ||
          r === "\\" ||
          r === '"' ||
          r === "/" ||
          r === "[" ||
          r === "]" ||
          r === "?" ||
          r === "=" ||
          r === "{" ||
          r === "}"
        ) {
          throw new Error("Invalid cookie name");
        }
      }
    }
    function validateCookieValue(e) {
      for (const r of e) {
        const e = r.charCodeAt(0);
        if (e < 33 || e === 34 || e === 44 || e === 59 || e === 92 || e > 126) {
          throw new Error("Invalid header value");
        }
      }
    }
    function validateCookiePath(e) {
      for (const r of e) {
        const e = r.charCodeAt(0);
        if (e < 33 || r === ";") {
          throw new Error("Invalid cookie path");
        }
      }
    }
    function validateCookieDomain(e) {
      if (e.startsWith("-") || e.endsWith(".") || e.endsWith("-")) {
        throw new Error("Invalid cookie domain");
      }
    }
    function toIMFDate(e) {
      if (typeof e === "number") {
        e = new Date(e);
      }
      const r = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
      const s = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
      const o = r[e.getUTCDay()];
      const n = e.getUTCDate().toString().padStart(2, "0");
      const i = s[e.getUTCMonth()];
      const a = e.getUTCFullYear();
      const l = e.getUTCHours().toString().padStart(2, "0");
      const d = e.getUTCMinutes().toString().padStart(2, "0");
      const h = e.getUTCSeconds().toString().padStart(2, "0");
      return `${o}, ${n} ${i} ${a} ${l}:${d}:${h} GMT`;
    }
    function validateCookieMaxAge(e) {
      if (e < 0) {
        throw new Error("Invalid cookie max-age");
      }
    }
    function stringify(e) {
      if (e.name.length === 0) {
        return null;
      }
      validateCookieName(e.name);
      validateCookieValue(e.value);
      const r = [`${e.name}=${e.value}`];
      if (e.name.startsWith("__Secure-")) {
        e.secure = true;
      }
      if (e.name.startsWith("__Host-")) {
        e.secure = true;
        e.domain = null;
        e.path = "/";
      }
      if (e.secure) {
        r.push("Secure");
      }
      if (e.httpOnly) {
        r.push("HttpOnly");
      }
      if (typeof e.maxAge === "number") {
        validateCookieMaxAge(e.maxAge);
        r.push(`Max-Age=${e.maxAge}`);
      }
      if (e.domain) {
        validateCookieDomain(e.domain);
        r.push(`Domain=${e.domain}`);
      }
      if (e.path) {
        validateCookiePath(e.path);
        r.push(`Path=${e.path}`);
      }
      if (e.expires && e.expires.toString() !== "Invalid Date") {
        r.push(`Expires=${toIMFDate(e.expires)}`);
      }
      if (e.sameSite) {
        r.push(`SameSite=${e.sameSite}`);
      }
      for (const s of e.unparsed) {
        if (!s.includes("=")) {
          throw new Error("Invalid unparsed");
        }
        const [e, ...o] = s.split("=");
        r.push(`${e.trim()}=${o.join("=")}`);
      }
      return r.join("; ");
    }
    let i;
    function getHeadersList(e) {
      if (e[n]) {
        return e[n];
      }
      if (!i) {
        i = Object.getOwnPropertySymbols(e).find((e) => e.description === "headers list");
        o(i, "Headers cannot be parsed");
      }
      const r = e[i];
      o(r);
      return r;
    }
    e.exports = { isCTLExcludingHtab: isCTLExcludingHtab, stringify: stringify, getHeadersList: getHeadersList };
  },
  9136: (e, r, s) => {
    const o = s(9278);
    const n = s(2613);
    const i = s(3440);
    const { InvalidArgumentError: a, ConnectTimeoutError: l } = s(8707);
    let d;
    let h;
    if (global.FinalizationRegistry && !process.env.NODE_V8_COVERAGE) {
      h = class WeakSessionCache {
        constructor(e) {
          this._maxCachedSessions = e;
          this._sessionCache = new Map();
          this._sessionRegistry = new global.FinalizationRegistry((e) => {
            if (this._sessionCache.size < this._maxCachedSessions) {
              return;
            }
            const r = this._sessionCache.get(e);
            if (r !== undefined && r.deref() === undefined) {
              this._sessionCache.delete(e);
            }
          });
        }
        get(e) {
          const r = this._sessionCache.get(e);
          return r ? r.deref() : null;
        }
        set(e, r) {
          if (this._maxCachedSessions === 0) {
            return;
          }
          this._sessionCache.set(e, new WeakRef(r));
          this._sessionRegistry.register(r, e);
        }
      };
    } else {
      h = class SimpleSessionCache {
        constructor(e) {
          this._maxCachedSessions = e;
          this._sessionCache = new Map();
        }
        get(e) {
          return this._sessionCache.get(e);
        }
        set(e, r) {
          if (this._maxCachedSessions === 0) {
            return;
          }
          if (this._sessionCache.size >= this._maxCachedSessions) {
            const { value: e } = this._sessionCache.keys().next();
            this._sessionCache.delete(e);
          }
          this._sessionCache.set(e, r);
        }
      };
    }
    function buildConnector({ allowH2: e, maxCachedSessions: r, socketPath: l, timeout: p, ...w }) {
      if (r != null && (!Number.isInteger(r) || r < 0)) {
        throw new a("maxCachedSessions must be a positive integer or zero");
      }
      const k = { path: l, ...w };
      const _ = new h(r == null ? 100 : r);
      p = p == null ? 1e4 : p;
      e = e != null ? e : false;
      return function connect({ hostname: r, host: a, protocol: l, port: h, servername: w, localAddress: M, httpSocket: j }, q) {
        let $;
        if (l === "https:") {
          if (!d) {
            d = s(4756);
          }
          w = w || k.servername || i.getServerName(a) || null;
          const o = w || r;
          const l = _.get(o) || null;
          n(o);
          $ = d.connect({
            highWaterMark: 16384,
            ...k,
            servername: w,
            session: l,
            localAddress: M,
            ALPNProtocols: e ? ["http/1.1", "h2"] : ["http/1.1"],
            socket: j,
            port: h || 443,
            host: r,
          });
          $.on("session", function (e) {
            _.set(o, e);
          });
        } else {
          n(!j, "httpSocket can only be sent on TLS update");
          $ = o.connect({ highWaterMark: 64 * 1024, ...k, localAddress: M, port: h || 80, host: r });
        }
        if (k.keepAlive == null || k.keepAlive) {
          const e = k.keepAliveInitialDelay === undefined ? 6e4 : k.keepAliveInitialDelay;
          $.setKeepAlive(true, e);
        }
        const ee = setupTimeout(() => onConnectTimeout($), p);
        $.setNoDelay(true)
          .once(l === "https:" ? "secureConnect" : "connect", function () {
            ee();
            if (q) {
              const e = q;
              q = null;
              e(null, this);
            }
          })
          .on("error", function (e) {
            ee();
            if (q) {
              const r = q;
              q = null;
              r(e);
            }
          });
        return $;
      };
    }
    function setupTimeout(e, r) {
      if (!r) {
        return () => {};
      }
      let s = null;
      let o = null;
      const n = setTimeout(() => {
        s = setImmediate(() => {
          if (process.platform === "win32") {
            o = setImmediate(() => e());
          } else {
            e();
          }
        });
      }, r);
      return () => {
        clearTimeout(n);
        clearImmediate(s);
        clearImmediate(o);
      };
    }
    function onConnectTimeout(e) {
      i.destroy(e, new l());
    }
    e.exports = buildConnector;
  },
  735: (e) => {
    const r = {};
    const s = [
      "Accept",
      "Accept-Encoding",
      "Accept-Language",
      "Accept-Ranges",
      "Access-Control-Allow-Credentials",
      "Access-Control-Allow-Headers",
      "Access-Control-Allow-Methods",
      "Access-Control-Allow-Origin",
      "Access-Control-Expose-Headers",
      "Access-Control-Max-Age",
      "Access-Control-Request-Headers",
      "Access-Control-Request-Method",
      "Age",
      "Allow",
      "Alt-Svc",
      "Alt-Used",
      "Authorization",
      "Cache-Control",
      "Clear-Site-Data",
      "Connection",
      "Content-Disposition",
      "Content-Encoding",
      "Content-Language",
      "Content-Length",
      "Content-Location",
      "Content-Range",
      "Content-Security-Policy",
      "Content-Security-Policy-Report-Only",
      "Content-Type",
      "Cookie",
      "Cross-Origin-Embedder-Policy",
      "Cross-Origin-Opener-Policy",
      "Cross-Origin-Resource-Policy",
      "Date",
      "Device-Memory",
      "Downlink",
      "ECT",
      "ETag",
      "Expect",
      "Expect-CT",
      "Expires",
      "Forwarded",
      "From",
      "Host",
      "If-Match",
      "If-Modified-Since",
      "If-None-Match",
      "If-Range",
      "If-Unmodified-Since",
      "Keep-Alive",
      "Last-Modified",
      "Link",
      "Location",
      "Max-Forwards",
      "Origin",
      "Permissions-Policy",
      "Pragma",
      "Proxy-Authenticate",
      "Proxy-Authorization",
      "RTT",
      "Range",
      "Referer",
      "Referrer-Policy",
      "Refresh",
      "Retry-After",
      "Sec-WebSocket-Accept",
      "Sec-WebSocket-Extensions",
      "Sec-WebSocket-Key",
      "Sec-WebSocket-Protocol",
      "Sec-WebSocket-Version",
      "Server",
      "Server-Timing",
      "Service-Worker-Allowed",
      "Service-Worker-Navigation-Preload",
      "Set-Cookie",
      "SourceMap",
      "Strict-Transport-Security",
      "Supports-Loading-Mode",
      "TE",
      "Timing-Allow-Origin",
      "Trailer",
      "Transfer-Encoding",
      "Upgrade",
      "Upgrade-Insecure-Requests",
      "User-Agent",
      "Vary",
      "Via",
      "WWW-Authenticate",
      "X-Content-Type-Options",
      "X-DNS-Prefetch-Control",
      "X-Frame-Options",
      "X-Permitted-Cross-Domain-Policies",
      "X-Powered-By",
      "X-Requested-With",
      "X-XSS-Protection",
    ];
    for (let e = 0; e < s.length; ++e) {
      const o = s[e];
      const n = o.toLowerCase();
      r[o] = r[n] = n;
    }
    Object.setPrototypeOf(r, null);
    e.exports = { wellknownHeaderNames: s, headerNameLowerCasedRecord: r };
  },
  8707: (e) => {
    class UndiciError extends Error {
      constructor(e) {
        super(e);
        this.name = "UndiciError";
        this.code = "UND_ERR";
      }
    }
    class ConnectTimeoutError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, ConnectTimeoutError);
        this.name = "ConnectTimeoutError";
        this.message = e || "Connect Timeout Error";
        this.code = "UND_ERR_CONNECT_TIMEOUT";
      }
    }
    class HeadersTimeoutError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, HeadersTimeoutError);
        this.name = "HeadersTimeoutError";
        this.message = e || "Headers Timeout Error";
        this.code = "UND_ERR_HEADERS_TIMEOUT";
      }
    }
    class HeadersOverflowError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, HeadersOverflowError);
        this.name = "HeadersOverflowError";
        this.message = e || "Headers Overflow Error";
        this.code = "UND_ERR_HEADERS_OVERFLOW";
      }
    }
    class BodyTimeoutError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, BodyTimeoutError);
        this.name = "BodyTimeoutError";
        this.message = e || "Body Timeout Error";
        this.code = "UND_ERR_BODY_TIMEOUT";
      }
    }
    class ResponseStatusCodeError extends UndiciError {
      constructor(e, r, s, o) {
        super(e);
        Error.captureStackTrace(this, ResponseStatusCodeError);
        this.name = "ResponseStatusCodeError";
        this.message = e || "Response Status Code Error";
        this.code = "UND_ERR_RESPONSE_STATUS_CODE";
        this.body = o;
        this.status = r;
        this.statusCode = r;
        this.headers = s;
      }
    }
    class InvalidArgumentError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, InvalidArgumentError);
        this.name = "InvalidArgumentError";
        this.message = e || "Invalid Argument Error";
        this.code = "UND_ERR_INVALID_ARG";
      }
    }
    class InvalidReturnValueError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, InvalidReturnValueError);
        this.name = "InvalidReturnValueError";
        this.message = e || "Invalid Return Value Error";
        this.code = "UND_ERR_INVALID_RETURN_VALUE";
      }
    }
    class RequestAbortedError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, RequestAbortedError);
        this.name = "AbortError";
        this.message = e || "Request aborted";
        this.code = "UND_ERR_ABORTED";
      }
    }
    class InformationalError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, InformationalError);
        this.name = "InformationalError";
        this.message = e || "Request information";
        this.code = "UND_ERR_INFO";
      }
    }
    class RequestContentLengthMismatchError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, RequestContentLengthMismatchError);
        this.name = "RequestContentLengthMismatchError";
        this.message = e || "Request body length does not match content-length header";
        this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";
      }
    }
    class ResponseContentLengthMismatchError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, ResponseContentLengthMismatchError);
        this.name = "ResponseContentLengthMismatchError";
        this.message = e || "Response body length does not match content-length header";
        this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";
      }
    }
    class ClientDestroyedError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, ClientDestroyedError);
        this.name = "ClientDestroyedError";
        this.message = e || "The client is destroyed";
        this.code = "UND_ERR_DESTROYED";
      }
    }
    class ClientClosedError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, ClientClosedError);
        this.name = "ClientClosedError";
        this.message = e || "The client is closed";
        this.code = "UND_ERR_CLOSED";
      }
    }
    class SocketError extends UndiciError {
      constructor(e, r) {
        super(e);
        Error.captureStackTrace(this, SocketError);
        this.name = "SocketError";
        this.message = e || "Socket error";
        this.code = "UND_ERR_SOCKET";
        this.socket = r;
      }
    }
    class NotSupportedError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, NotSupportedError);
        this.name = "NotSupportedError";
        this.message = e || "Not supported error";
        this.code = "UND_ERR_NOT_SUPPORTED";
      }
    }
    class BalancedPoolMissingUpstreamError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, NotSupportedError);
        this.name = "MissingUpstreamError";
        this.message = e || "No upstream has been added to the BalancedPool";
        this.code = "UND_ERR_BPL_MISSING_UPSTREAM";
      }
    }
    class HTTPParserError extends Error {
      constructor(e, r, s) {
        super(e);
        Error.captureStackTrace(this, HTTPParserError);
        this.name = "HTTPParserError";
        this.code = r ? `HPE_${r}` : undefined;
        this.data = s ? s.toString() : undefined;
      }
    }
    class ResponseExceededMaxSizeError extends UndiciError {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, ResponseExceededMaxSizeError);
        this.name = "ResponseExceededMaxSizeError";
        this.message = e || "Response content exceeded max size";
        this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";
      }
    }
    class RequestRetryError extends UndiciError {
      constructor(e, r, { headers: s, data: o }) {
        super(e);
        Error.captureStackTrace(this, RequestRetryError);
        this.name = "RequestRetryError";
        this.message = e || "Request retry error";
        this.code = "UND_ERR_REQ_RETRY";
        this.statusCode = r;
        this.data = o;
        this.headers = s;
      }
    }
    e.exports = {
      HTTPParserError: HTTPParserError,
      UndiciError: UndiciError,
      HeadersTimeoutError: HeadersTimeoutError,
      HeadersOverflowError: HeadersOverflowError,
      BodyTimeoutError: BodyTimeoutError,
      RequestContentLengthMismatchError: RequestContentLengthMismatchError,
      ConnectTimeoutError: ConnectTimeoutError,
      ResponseStatusCodeError: ResponseStatusCodeError,
      InvalidArgumentError: InvalidArgumentError,
      InvalidReturnValueError: InvalidReturnValueError,
      RequestAbortedError: RequestAbortedError,
      ClientDestroyedError: ClientDestroyedError,
      ClientClosedError: ClientClosedError,
      InformationalError: InformationalError,
      SocketError: SocketError,
      NotSupportedError: NotSupportedError,
      ResponseContentLengthMismatchError: ResponseContentLengthMismatchError,
      BalancedPoolMissingUpstreamError: BalancedPoolMissingUpstreamError,
      ResponseExceededMaxSizeError: ResponseExceededMaxSizeError,
      RequestRetryError: RequestRetryError,
    };
  },
  4655: (e, r, s) => {
    const { InvalidArgumentError: o, NotSupportedError: n } = s(8707);
    const i = s(2613);
    const { kHTTP2BuildRequest: a, kHTTP2CopyHeaders: l, kHTTP1BuildRequest: d } = s(6443);
    const h = s(3440);
    const p = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/;
    const w = /[^\t\x20-\x7e\x80-\xff]/;
    const k = /[^\u0021-\u00ff]/;
    const _ = Symbol("handler");
    const M = {};
    let j;
    try {
      const e = s(1637);
      M.create = e.channel("undici:request:create");
      M.bodySent = e.channel("undici:request:bodySent");
      M.headers = e.channel("undici:request:headers");
      M.trailers = e.channel("undici:request:trailers");
      M.error = e.channel("undici:request:error");
    } catch {
      M.create = { hasSubscribers: false };
      M.bodySent = { hasSubscribers: false };
      M.headers = { hasSubscribers: false };
      M.trailers = { hasSubscribers: false };
      M.error = { hasSubscribers: false };
    }
    class Request {
      constructor(
        e,
        {
          path: r,
          method: n,
          body: i,
          headers: a,
          query: l,
          idempotent: d,
          blocking: w,
          upgrade: q,
          headersTimeout: $,
          bodyTimeout: ee,
          reset: te,
          throwOnError: re,
          expectContinue: se,
        },
        oe
      ) {
        if (typeof r !== "string") {
          throw new o("path must be a string");
        } else if (r[0] !== "/" && !(r.startsWith("http://") || r.startsWith("https://")) && n !== "CONNECT") {
          throw new o("path must be an absolute URL or start with a slash");
        } else if (k.exec(r) !== null) {
          throw new o("invalid request path");
        }
        if (typeof n !== "string") {
          throw new o("method must be a string");
        } else if (p.exec(n) === null) {
          throw new o("invalid request method");
        }
        if (q && typeof q !== "string") {
          throw new o("upgrade must be a string");
        }
        if ($ != null && (!Number.isFinite($) || $ < 0)) {
          throw new o("invalid headersTimeout");
        }
        if (ee != null && (!Number.isFinite(ee) || ee < 0)) {
          throw new o("invalid bodyTimeout");
        }
        if (te != null && typeof te !== "boolean") {
          throw new o("invalid reset");
        }
        if (se != null && typeof se !== "boolean") {
          throw new o("invalid expectContinue");
        }
        this.headersTimeout = $;
        this.bodyTimeout = ee;
        this.throwOnError = re === true;
        this.method = n;
        this.abort = null;
        if (i == null) {
          this.body = null;
        } else if (h.isStream(i)) {
          this.body = i;
          const e = this.body._readableState;
          if (!e || !e.autoDestroy) {
            this.endHandler = function autoDestroy() {
              h.destroy(this);
            };
            this.body.on("end", this.endHandler);
          }
          this.errorHandler = (e) => {
            if (this.abort) {
              this.abort(e);
            } else {
              this.error = e;
            }
          };
          this.body.on("error", this.errorHandler);
        } else if (h.isBuffer(i)) {
          this.body = i.byteLength ? i : null;
        } else if (ArrayBuffer.isView(i)) {
          this.body = i.buffer.byteLength ? Buffer.from(i.buffer, i.byteOffset, i.byteLength) : null;
        } else if (i instanceof ArrayBuffer) {
          this.body = i.byteLength ? Buffer.from(i) : null;
        } else if (typeof i === "string") {
          this.body = i.length ? Buffer.from(i) : null;
        } else if (h.isFormDataLike(i) || h.isIterable(i) || h.isBlobLike(i)) {
          this.body = i;
        } else {
          throw new o("body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable");
        }
        this.completed = false;
        this.aborted = false;
        this.upgrade = q || null;
        this.path = l ? h.buildURL(r, l) : r;
        this.origin = e;
        this.idempotent = d == null ? n === "HEAD" || n === "GET" : d;
        this.blocking = w == null ? false : w;
        this.reset = te == null ? null : te;
        this.host = null;
        this.contentLength = null;
        this.contentType = null;
        this.headers = "";
        this.expectContinue = se != null ? se : false;
        if (Array.isArray(a)) {
          if (a.length % 2 !== 0) {
            throw new o("headers array must be even");
          }
          for (let e = 0; e < a.length; e += 2) {
            processHeader(this, a[e], a[e + 1]);
          }
        } else if (a && typeof a === "object") {
          const e = Object.keys(a);
          for (let r = 0; r < e.length; r++) {
            const s = e[r];
            processHeader(this, s, a[s]);
          }
        } else if (a != null) {
          throw new o("headers must be an object or an array");
        }
        if (h.isFormDataLike(this.body)) {
          if (h.nodeMajor < 16 || (h.nodeMajor === 16 && h.nodeMinor < 8)) {
            throw new o("Form-Data bodies are only supported in node v16.8 and newer.");
          }
          if (!j) {
            j = s(8923).extractBody;
          }
          const [e, r] = j(i);
          if (this.contentType == null) {
            this.contentType = r;
            this.headers += `content-type: ${r}\r\n`;
          }
          this.body = e.stream;
          this.contentLength = e.length;
        } else if (h.isBlobLike(i) && this.contentType == null && i.type) {
          this.contentType = i.type;
          this.headers += `content-type: ${i.type}\r\n`;
        }
        h.validateHandler(oe, n, q);
        this.servername = h.getServerName(this.host);
        this[_] = oe;
        if (M.create.hasSubscribers) {
          M.create.publish({ request: this });
        }
      }
      onBodySent(e) {
        if (this[_].onBodySent) {
          try {
            return this[_].onBodySent(e);
          } catch (e) {
            this.abort(e);
          }
        }
      }
      onRequestSent() {
        if (M.bodySent.hasSubscribers) {
          M.bodySent.publish({ request: this });
        }
        if (this[_].onRequestSent) {
          try {
            return this[_].onRequestSent();
          } catch (e) {
            this.abort(e);
          }
        }
      }
      onConnect(e) {
        i(!this.aborted);
        i(!this.completed);
        if (this.error) {
          e(this.error);
        } else {
          this.abort = e;
          return this[_].onConnect(e);
        }
      }
      onHeaders(e, r, s, o) {
        i(!this.aborted);
        i(!this.completed);
        if (M.headers.hasSubscribers) {
          M.headers.publish({ request: this, response: { statusCode: e, headers: r, statusText: o } });
        }
        try {
          return this[_].onHeaders(e, r, s, o);
        } catch (e) {
          this.abort(e);
        }
      }
      onData(e) {
        i(!this.aborted);
        i(!this.completed);
        try {
          return this[_].onData(e);
        } catch (e) {
          this.abort(e);
          return false;
        }
      }
      onUpgrade(e, r, s) {
        i(!this.aborted);
        i(!this.completed);
        return this[_].onUpgrade(e, r, s);
      }
      onComplete(e) {
        this.onFinally();
        i(!this.aborted);
        this.completed = true;
        if (M.trailers.hasSubscribers) {
          M.trailers.publish({ request: this, trailers: e });
        }
        try {
          return this[_].onComplete(e);
        } catch (e) {
          this.onError(e);
        }
      }
      onError(e) {
        this.onFinally();
        if (M.error.hasSubscribers) {
          M.error.publish({ request: this, error: e });
        }
        if (this.aborted) {
          return;
        }
        this.aborted = true;
        return this[_].onError(e);
      }
      onFinally() {
        if (this.errorHandler) {
          this.body.off("error", this.errorHandler);
          this.errorHandler = null;
        }
        if (this.endHandler) {
          this.body.off("end", this.endHandler);
          this.endHandler = null;
        }
      }
      addHeader(e, r) {
        processHeader(this, e, r);
        return this;
      }
      static [d](e, r, s) {
        return new Request(e, r, s);
      }
      static [a](e, r, s) {
        const n = r.headers;
        r = { ...r, headers: null };
        const i = new Request(e, r, s);
        i.headers = {};
        if (Array.isArray(n)) {
          if (n.length % 2 !== 0) {
            throw new o("headers array must be even");
          }
          for (let e = 0; e < n.length; e += 2) {
            processHeader(i, n[e], n[e + 1], true);
          }
        } else if (n && typeof n === "object") {
          const e = Object.keys(n);
          for (let r = 0; r < e.length; r++) {
            const s = e[r];
            processHeader(i, s, n[s], true);
          }
        } else if (n != null) {
          throw new o("headers must be an object or an array");
        }
        return i;
      }
      static [l](e) {
        const r = e.split("\r\n");
        const s = {};
        for (const e of r) {
          const [r, o] = e.split(": ");
          if (o == null || o.length === 0) continue;
          if (s[r]) s[r] += `,${o}`;
          else s[r] = o;
        }
        return s;
      }
    }
    function processHeaderValue(e, r, s) {
      if (r && typeof r === "object") {
        throw new o(`invalid ${e} header`);
      }
      r = r != null ? `${r}` : "";
      if (w.exec(r) !== null) {
        throw new o(`invalid ${e} header`);
      }
      return s ? r : `${e}: ${r}\r\n`;
    }
    function processHeader(e, r, s, i = false) {
      if (s && typeof s === "object" && !Array.isArray(s)) {
        throw new o(`invalid ${r} header`);
      } else if (s === undefined) {
        return;
      }
      if (e.host === null && r.length === 4 && r.toLowerCase() === "host") {
        if (w.exec(s) !== null) {
          throw new o(`invalid ${r} header`);
        }
        e.host = s;
      } else if (e.contentLength === null && r.length === 14 && r.toLowerCase() === "content-length") {
        e.contentLength = parseInt(s, 10);
        if (!Number.isFinite(e.contentLength)) {
          throw new o("invalid content-length header");
        }
      } else if (e.contentType === null && r.length === 12 && r.toLowerCase() === "content-type") {
        e.contentType = s;
        if (i) e.headers[r] = processHeaderValue(r, s, i);
        else e.headers += processHeaderValue(r, s);
      } else if (r.length === 17 && r.toLowerCase() === "transfer-encoding") {
        throw new o("invalid transfer-encoding header");
      } else if (r.length === 10 && r.toLowerCase() === "connection") {
        const r = typeof s === "string" ? s.toLowerCase() : null;
        if (r !== "close" && r !== "keep-alive") {
          throw new o("invalid connection header");
        } else if (r === "close") {
          e.reset = true;
        }
      } else if (r.length === 10 && r.toLowerCase() === "keep-alive") {
        throw new o("invalid keep-alive header");
      } else if (r.length === 7 && r.toLowerCase() === "upgrade") {
        throw new o("invalid upgrade header");
      } else if (r.length === 6 && r.toLowerCase() === "expect") {
        throw new n("expect header not supported");
      } else if (p.exec(r) === null) {
        throw new o("invalid header key");
      } else {
        if (Array.isArray(s)) {
          for (let o = 0; o < s.length; o++) {
            if (i) {
              if (e.headers[r]) e.headers[r] += `,${processHeaderValue(r, s[o], i)}`;
              else e.headers[r] = processHeaderValue(r, s[o], i);
            } else {
              e.headers += processHeaderValue(r, s[o]);
            }
          }
        } else {
          if (i) e.headers[r] = processHeaderValue(r, s, i);
          else e.headers += processHeaderValue(r, s);
        }
      }
    }
    e.exports = Request;
  },
  6443: (e) => {
    e.exports = {
      kClose: Symbol("close"),
      kDestroy: Symbol("destroy"),
      kDispatch: Symbol("dispatch"),
      kUrl: Symbol("url"),
      kWriting: Symbol("writing"),
      kResuming: Symbol("resuming"),
      kQueue: Symbol("queue"),
      kConnect: Symbol("connect"),
      kConnecting: Symbol("connecting"),
      kHeadersList: Symbol("headers list"),
      kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),
      kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),
      kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),
      kKeepAliveTimeoutValue: Symbol("keep alive timeout"),
      kKeepAlive: Symbol("keep alive"),
      kHeadersTimeout: Symbol("headers timeout"),
      kBodyTimeout: Symbol("body timeout"),
      kServerName: Symbol("server name"),
      kLocalAddress: Symbol("local address"),
      kHost: Symbol("host"),
      kNoRef: Symbol("no ref"),
      kBodyUsed: Symbol("used"),
      kRunning: Symbol("running"),
      kBlocking: Symbol("blocking"),
      kPending: Symbol("pending"),
      kSize: Symbol("size"),
      kBusy: Symbol("busy"),
      kQueued: Symbol("queued"),
      kFree: Symbol("free"),
      kConnected: Symbol("connected"),
      kClosed: Symbol("closed"),
      kNeedDrain: Symbol("need drain"),
      kReset: Symbol("reset"),
      kDestroyed: Symbol.for("nodejs.stream.destroyed"),
      kMaxHeadersSize: Symbol("max headers size"),
      kRunningIdx: Symbol("running index"),
      kPendingIdx: Symbol("pending index"),
      kError: Symbol("error"),
      kClients: Symbol("clients"),
      kClient: Symbol("client"),
      kParser: Symbol("parser"),
      kOnDestroyed: Symbol("destroy callbacks"),
      kPipelining: Symbol("pipelining"),
      kSocket: Symbol("socket"),
      kHostHeader: Symbol("host header"),
      kConnector: Symbol("connector"),
      kStrictContentLength: Symbol("strict content length"),
      kMaxRedirections: Symbol("maxRedirections"),
      kMaxRequests: Symbol("maxRequestsPerClient"),
      kProxy: Symbol("proxy agent options"),
      kCounter: Symbol("socket request counter"),
      kInterceptors: Symbol("dispatch interceptors"),
      kMaxResponseSize: Symbol("max response size"),
      kHTTP2Session: Symbol("http2Session"),
      kHTTP2SessionState: Symbol("http2Session state"),
      kHTTP2BuildRequest: Symbol("http2 build request"),
      kHTTP1BuildRequest: Symbol("http1 build request"),
      kHTTP2CopyHeaders: Symbol("http2 copy headers"),
      kHTTPConnVersion: Symbol("http connection version"),
      kRetryHandlerDefaultRetry: Symbol("retry agent default retry"),
      kConstruct: Symbol("constructable"),
    };
  },
  3440: (e, r, s) => {
    const o = s(2613);
    const { kDestroyed: n, kBodyUsed: i } = s(6443);
    const { IncomingMessage: a } = s(8611);
    const l = s(2203);
    const d = s(9278);
    const { InvalidArgumentError: h } = s(8707);
    const { Blob: p } = s(181);
    const w = s(9023);
    const { stringify: k } = s(3480);
    const { headerNameLowerCasedRecord: _ } = s(735);
    const [M, j] = process.versions.node.split(".").map((e) => Number(e));
    function nop() {}
    function isStream(e) {
      return e && typeof e === "object" && typeof e.pipe === "function" && typeof e.on === "function";
    }
    function isBlobLike(e) {
      return (
        (p && e instanceof p) ||
        (e && typeof e === "object" && (typeof e.stream === "function" || typeof e.arrayBuffer === "function") && /^(Blob|File)$/.test(e[Symbol.toStringTag]))
      );
    }
    function buildURL(e, r) {
      if (e.includes("?") || e.includes("#")) {
        throw new Error('Query params cannot be passed when url already contains "?" or "#".');
      }
      const s = k(r);
      if (s) {
        e += "?" + s;
      }
      return e;
    }
    function parseURL(e) {
      if (typeof e === "string") {
        e = new URL(e);
        if (!/^https?:/.test(e.origin || e.protocol)) {
          throw new h("Invalid URL protocol: the URL must start with `http:` or `https:`.");
        }
        return e;
      }
      if (!e || typeof e !== "object") {
        throw new h("Invalid URL: The URL argument must be a non-null object.");
      }
      if (!/^https?:/.test(e.origin || e.protocol)) {
        throw new h("Invalid URL protocol: the URL must start with `http:` or `https:`.");
      }
      if (!(e instanceof URL)) {
        if (e.port != null && e.port !== "" && !Number.isFinite(parseInt(e.port))) {
          throw new h("Invalid URL: port must be a valid integer or a string representation of an integer.");
        }
        if (e.path != null && typeof e.path !== "string") {
          throw new h("Invalid URL path: the path must be a string or null/undefined.");
        }
        if (e.pathname != null && typeof e.pathname !== "string") {
          throw new h("Invalid URL pathname: the pathname must be a string or null/undefined.");
        }
        if (e.hostname != null && typeof e.hostname !== "string") {
          throw new h("Invalid URL hostname: the hostname must be a string or null/undefined.");
        }
        if (e.origin != null && typeof e.origin !== "string") {
          throw new h("Invalid URL origin: the origin must be a string or null/undefined.");
        }
        const r = e.port != null ? e.port : e.protocol === "https:" ? 443 : 80;
        let s = e.origin != null ? e.origin : `${e.protocol}//${e.hostname}:${r}`;
        let o = e.path != null ? e.path : `${e.pathname || ""}${e.search || ""}`;
        if (s.endsWith("/")) {
          s = s.substring(0, s.length - 1);
        }
        if (o && !o.startsWith("/")) {
          o = `/${o}`;
        }
        e = new URL(s + o);
      }
      return e;
    }
    function parseOrigin(e) {
      e = parseURL(e);
      if (e.pathname !== "/" || e.search || e.hash) {
        throw new h("invalid url");
      }
      return e;
    }
    function getHostname(e) {
      if (e[0] === "[") {
        const r = e.indexOf("]");
        o(r !== -1);
        return e.substring(1, r);
      }
      const r = e.indexOf(":");
      if (r === -1) return e;
      return e.substring(0, r);
    }
    function getServerName(e) {
      if (!e) {
        return null;
      }
      o.strictEqual(typeof e, "string");
      const r = getHostname(e);
      if (d.isIP(r)) {
        return "";
      }
      return r;
    }
    function deepClone(e) {
      return JSON.parse(JSON.stringify(e));
    }
    function isAsyncIterable(e) {
      return !!(e != null && typeof e[Symbol.asyncIterator] === "function");
    }
    function isIterable(e) {
      return !!(e != null && (typeof e[Symbol.iterator] === "function" || typeof e[Symbol.asyncIterator] === "function"));
    }
    function bodyLength(e) {
      if (e == null) {
        return 0;
      } else if (isStream(e)) {
        const r = e._readableState;
        return r && r.objectMode === false && r.ended === true && Number.isFinite(r.length) ? r.length : null;
      } else if (isBlobLike(e)) {
        return e.size != null ? e.size : null;
      } else if (isBuffer(e)) {
        return e.byteLength;
      }
      return null;
    }
    function isDestroyed(e) {
      return !e || !!(e.destroyed || e[n]);
    }
    function isReadableAborted(e) {
      const r = e && e._readableState;
      return isDestroyed(e) && r && !r.endEmitted;
    }
    function destroy(e, r) {
      if (e == null || !isStream(e) || isDestroyed(e)) {
        return;
      }
      if (typeof e.destroy === "function") {
        if (Object.getPrototypeOf(e).constructor === a) {
          e.socket = null;
        }
        e.destroy(r);
      } else if (r) {
        process.nextTick(
          (e, r) => {
            e.emit("error", r);
          },
          e,
          r
        );
      }
      if (e.destroyed !== true) {
        e[n] = true;
      }
    }
    const q = /timeout=(\d+)/;
    function parseKeepAliveTimeout(e) {
      const r = e.toString().match(q);
      return r ? parseInt(r[1], 10) * 1e3 : null;
    }
    function headerNameToString(e) {
      return _[e] || e.toLowerCase();
    }
    function parseHeaders(e, r = {}) {
      if (!Array.isArray(e)) return e;
      for (let s = 0; s < e.length; s += 2) {
        const o = e[s].toString().toLowerCase();
        let n = r[o];
        if (!n) {
          if (Array.isArray(e[s + 1])) {
            r[o] = e[s + 1].map((e) => e.toString("utf8"));
          } else {
            r[o] = e[s + 1].toString("utf8");
          }
        } else {
          if (!Array.isArray(n)) {
            n = [n];
            r[o] = n;
          }
          n.push(e[s + 1].toString("utf8"));
        }
      }
      if ("content-length" in r && "content-disposition" in r) {
        r["content-disposition"] = Buffer.from(r["content-disposition"]).toString("latin1");
      }
      return r;
    }
    function parseRawHeaders(e) {
      const r = [];
      let s = false;
      let o = -1;
      for (let n = 0; n < e.length; n += 2) {
        const i = e[n + 0].toString();
        const a = e[n + 1].toString("utf8");
        if (i.length === 14 && (i === "content-length" || i.toLowerCase() === "content-length")) {
          r.push(i, a);
          s = true;
        } else if (i.length === 19 && (i === "content-disposition" || i.toLowerCase() === "content-disposition")) {
          o = r.push(i, a) - 1;
        } else {
          r.push(i, a);
        }
      }
      if (s && o !== -1) {
        r[o] = Buffer.from(r[o]).toString("latin1");
      }
      return r;
    }
    function isBuffer(e) {
      return e instanceof Uint8Array || Buffer.isBuffer(e);
    }
    function validateHandler(e, r, s) {
      if (!e || typeof e !== "object") {
        throw new h("handler must be an object");
      }
      if (typeof e.onConnect !== "function") {
        throw new h("invalid onConnect method");
      }
      if (typeof e.onError !== "function") {
        throw new h("invalid onError method");
      }
      if (typeof e.onBodySent !== "function" && e.onBodySent !== undefined) {
        throw new h("invalid onBodySent method");
      }
      if (s || r === "CONNECT") {
        if (typeof e.onUpgrade !== "function") {
          throw new h("invalid onUpgrade method");
        }
      } else {
        if (typeof e.onHeaders !== "function") {
          throw new h("invalid onHeaders method");
        }
        if (typeof e.onData !== "function") {
          throw new h("invalid onData method");
        }
        if (typeof e.onComplete !== "function") {
          throw new h("invalid onComplete method");
        }
      }
    }
    function isDisturbed(e) {
      return !!(
        e &&
        (l.isDisturbed ? l.isDisturbed(e) || e[i] : e[i] || e.readableDidRead || (e._readableState && e._readableState.dataEmitted) || isReadableAborted(e))
      );
    }
    function isErrored(e) {
      return !!(e && (l.isErrored ? l.isErrored(e) : /state: 'errored'/.test(w.inspect(e))));
    }
    function isReadable(e) {
      return !!(e && (l.isReadable ? l.isReadable(e) : /state: 'readable'/.test(w.inspect(e))));
    }
    function getSocketInfo(e) {
      return {
        localAddress: e.localAddress,
        localPort: e.localPort,
        remoteAddress: e.remoteAddress,
        remotePort: e.remotePort,
        remoteFamily: e.remoteFamily,
        timeout: e.timeout,
        bytesWritten: e.bytesWritten,
        bytesRead: e.bytesRead,
      };
    }
    async function* convertIterableToBuffer(e) {
      for await (const r of e) {
        yield Buffer.isBuffer(r) ? r : Buffer.from(r);
      }
    }
    let $;
    function ReadableStreamFrom(e) {
      if (!$) {
        $ = s(3774).ReadableStream;
      }
      if ($.from) {
        return $.from(convertIterableToBuffer(e));
      }
      let r;
      return new $(
        {
          async start() {
            r = e[Symbol.asyncIterator]();
          },
          async pull(e) {
            const { done: s, value: o } = await r.next();
            if (s) {
              queueMicrotask(() => {
                e.close();
              });
            } else {
              const r = Buffer.isBuffer(o) ? o : Buffer.from(o);
              e.enqueue(new Uint8Array(r));
            }
            return e.desiredSize > 0;
          },
          async cancel(e) {
            await r.return();
          },
        },
        0
      );
    }
    function isFormDataLike(e) {
      return (
        e &&
        typeof e === "object" &&
        typeof e.append === "function" &&
        typeof e.delete === "function" &&
        typeof e.get === "function" &&
        typeof e.getAll === "function" &&
        typeof e.has === "function" &&
        typeof e.set === "function" &&
        e[Symbol.toStringTag] === "FormData"
      );
    }
    function throwIfAborted(e) {
      if (!e) {
        return;
      }
      if (typeof e.throwIfAborted === "function") {
        e.throwIfAborted();
      } else {
        if (e.aborted) {
          const e = new Error("The operation was aborted");
          e.name = "AbortError";
          throw e;
        }
      }
    }
    function addAbortListener(e, r) {
      if ("addEventListener" in e) {
        e.addEventListener("abort", r, { once: true });
        return () => e.removeEventListener("abort", r);
      }
      e.addListener("abort", r);
      return () => e.removeListener("abort", r);
    }
    const ee = !!String.prototype.toWellFormed;
    function toUSVString(e) {
      if (ee) {
        return `${e}`.toWellFormed();
      } else if (w.toUSVString) {
        return w.toUSVString(e);
      }
      return `${e}`;
    }
    function parseRangeHeader(e) {
      if (e == null || e === "") return { start: 0, end: null, size: null };
      const r = e ? e.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
      return r ? { start: parseInt(r[1]), end: r[2] ? parseInt(r[2]) : null, size: r[3] ? parseInt(r[3]) : null } : null;
    }
    const te = Object.create(null);
    te.enumerable = true;
    e.exports = {
      kEnumerableProperty: te,
      nop: nop,
      isDisturbed: isDisturbed,
      isErrored: isErrored,
      isReadable: isReadable,
      toUSVString: toUSVString,
      isReadableAborted: isReadableAborted,
      isBlobLike: isBlobLike,
      parseOrigin: parseOrigin,
      parseURL: parseURL,
      getServerName: getServerName,
      isStream: isStream,
      isIterable: isIterable,
      isAsyncIterable: isAsyncIterable,
      isDestroyed: isDestroyed,
      headerNameToString: headerNameToString,
      parseRawHeaders: parseRawHeaders,
      parseHeaders: parseHeaders,
      parseKeepAliveTimeout: parseKeepAliveTimeout,
      destroy: destroy,
      bodyLength: bodyLength,
      deepClone: deepClone,
      ReadableStreamFrom: ReadableStreamFrom,
      isBuffer: isBuffer,
      validateHandler: validateHandler,
      getSocketInfo: getSocketInfo,
      isFormDataLike: isFormDataLike,
      buildURL: buildURL,
      throwIfAborted: throwIfAborted,
      addAbortListener: addAbortListener,
      parseRangeHeader: parseRangeHeader,
      nodeMajor: M,
      nodeMinor: j,
      nodeHasAutoSelectFamily: M > 18 || (M === 18 && j >= 13),
      safeHTTPMethods: ["GET", "HEAD", "OPTIONS", "TRACE"],
    };
  },
  1: (e, r, s) => {
    const o = s(992);
    const { ClientDestroyedError: n, ClientClosedError: i, InvalidArgumentError: a } = s(8707);
    const { kDestroy: l, kClose: d, kDispatch: h, kInterceptors: p } = s(6443);
    const w = Symbol("destroyed");
    const k = Symbol("closed");
    const _ = Symbol("onDestroyed");
    const M = Symbol("onClosed");
    const j = Symbol("Intercepted Dispatch");
    class DispatcherBase extends o {
      constructor() {
        super();
        this[w] = false;
        this[_] = null;
        this[k] = false;
        this[M] = [];
      }
      get destroyed() {
        return this[w];
      }
      get closed() {
        return this[k];
      }
      get interceptors() {
        return this[p];
      }
      set interceptors(e) {
        if (e) {
          for (let r = e.length - 1; r >= 0; r--) {
            const e = this[p][r];
            if (typeof e !== "function") {
              throw new a("interceptor must be an function");
            }
          }
        }
        this[p] = e;
      }
      close(e) {
        if (e === undefined) {
          return new Promise((e, r) => {
            this.close((s, o) => (s ? r(s) : e(o)));
          });
        }
        if (typeof e !== "function") {
          throw new a("invalid callback");
        }
        if (this[w]) {
          queueMicrotask(() => e(new n(), null));
          return;
        }
        if (this[k]) {
          if (this[M]) {
            this[M].push(e);
          } else {
            queueMicrotask(() => e(null, null));
          }
          return;
        }
        this[k] = true;
        this[M].push(e);
        const onClosed = () => {
          const e = this[M];
          this[M] = null;
          for (let r = 0; r < e.length; r++) {
            e[r](null, null);
          }
        };
        this[d]()
          .then(() => this.destroy())
          .then(() => {
            queueMicrotask(onClosed);
          });
      }
      destroy(e, r) {
        if (typeof e === "function") {
          r = e;
          e = null;
        }
        if (r === undefined) {
          return new Promise((r, s) => {
            this.destroy(e, (e, o) => (e ? s(e) : r(o)));
          });
        }
        if (typeof r !== "function") {
          throw new a("invalid callback");
        }
        if (this[w]) {
          if (this[_]) {
            this[_].push(r);
          } else {
            queueMicrotask(() => r(null, null));
          }
          return;
        }
        if (!e) {
          e = new n();
        }
        this[w] = true;
        this[_] = this[_] || [];
        this[_].push(r);
        const onDestroyed = () => {
          const e = this[_];
          this[_] = null;
          for (let r = 0; r < e.length; r++) {
            e[r](null, null);
          }
        };
        this[l](e).then(() => {
          queueMicrotask(onDestroyed);
        });
      }
      [j](e, r) {
        if (!this[p] || this[p].length === 0) {
          this[j] = this[h];
          return this[h](e, r);
        }
        let s = this[h].bind(this);
        for (let e = this[p].length - 1; e >= 0; e--) {
          s = this[p][e](s);
        }
        this[j] = s;
        return s(e, r);
      }
      dispatch(e, r) {
        if (!r || typeof r !== "object") {
          throw new a("handler must be an object");
        }
        try {
          if (!e || typeof e !== "object") {
            throw new a("opts must be an object.");
          }
          if (this[w] || this[_]) {
            throw new n();
          }
          if (this[k]) {
            throw new i();
          }
          return this[j](e, r);
        } catch (e) {
          if (typeof r.onError !== "function") {
            throw new a("invalid onError method");
          }
          r.onError(e);
          return false;
        }
      }
    }
    e.exports = DispatcherBase;
  },
  992: (e, r, s) => {
    const o = s(4434);
    class Dispatcher extends o {
      dispatch() {
        throw new Error("not implemented");
      }
      close() {
        throw new Error("not implemented");
      }
      destroy() {
        throw new Error("not implemented");
      }
    }
    e.exports = Dispatcher;
  },
  8923: (e, r, s) => {
    const o = s(9581);
    const n = s(3440);
    const { ReadableStreamFrom: i, isBlobLike: a, isReadableStreamLike: l, readableStreamClose: d, createDeferredPromise: h, fullyReadBody: p } = s(5523);
    const { FormData: w } = s(3073);
    const { kState: k } = s(9710);
    const { webidl: _ } = s(4222);
    const { DOMException: M, structuredClone: j } = s(7326);
    const { Blob: q, File: $ } = s(181);
    const { kBodyUsed: ee } = s(6443);
    const te = s(2613);
    const { isErrored: re } = s(3440);
    const { isUint8Array: se, isArrayBuffer: oe } = s(8253);
    const { File: ne } = s(3041);
    const { parseMIMEType: ie, serializeAMimeType: Ae } = s(4322);
    let ae;
    try {
      const e = s(7598);
      ae = (r) => e.randomInt(0, r);
    } catch {
      ae = (e) => Math.floor(Math.random(e));
    }
    let ce = globalThis.ReadableStream;
    const le = $ ?? ne;
    const ue = new TextEncoder();
    const ge = new TextDecoder();
    function extractBody(e, r = false) {
      if (!ce) {
        ce = s(3774).ReadableStream;
      }
      let o = null;
      if (e instanceof ce) {
        o = e;
      } else if (a(e)) {
        o = e.stream();
      } else {
        o = new ce({
          async pull(e) {
            e.enqueue(typeof p === "string" ? ue.encode(p) : p);
            queueMicrotask(() => d(e));
          },
          start() {},
          type: undefined,
        });
      }
      te(l(o));
      let h = null;
      let p = null;
      let w = null;
      let k = null;
      if (typeof e === "string") {
        p = e;
        k = "text/plain;charset=UTF-8";
      } else if (e instanceof URLSearchParams) {
        p = e.toString();
        k = "application/x-www-form-urlencoded;charset=UTF-8";
      } else if (oe(e)) {
        p = new Uint8Array(e.slice());
      } else if (ArrayBuffer.isView(e)) {
        p = new Uint8Array(e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength));
      } else if (n.isFormDataLike(e)) {
        const r = `----formdata-undici-0${`${ae(1e11)}`.padStart(11, "0")}`;
        const s = `--${r}\r\nContent-Disposition: form-data`;
        /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */ const escape = (e) =>
          e.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22");
        const normalizeLinefeeds = (e) => e.replace(/\r?\n|\r/g, "\r\n");
        const o = [];
        const n = new Uint8Array([13, 10]);
        w = 0;
        let i = false;
        for (const [r, a] of e) {
          if (typeof a === "string") {
            const e = ue.encode(s + `; name="${escape(normalizeLinefeeds(r))}"` + `\r\n\r\n${normalizeLinefeeds(a)}\r\n`);
            o.push(e);
            w += e.byteLength;
          } else {
            const e = ue.encode(
              `${s}; name="${escape(normalizeLinefeeds(r))}"` +
                (a.name ? `; filename="${escape(a.name)}"` : "") +
                "\r\n" +
                `Content-Type: ${a.type || "application/octet-stream"}\r\n\r\n`
            );
            o.push(e, a, n);
            if (typeof a.size === "number") {
              w += e.byteLength + a.size + n.byteLength;
            } else {
              i = true;
            }
          }
        }
        const a = ue.encode(`--${r}--`);
        o.push(a);
        w += a.byteLength;
        if (i) {
          w = null;
        }
        p = e;
        h = async function* () {
          for (const e of o) {
            if (e.stream) {
              yield* e.stream();
            } else {
              yield e;
            }
          }
        };
        k = "multipart/form-data; boundary=" + r;
      } else if (a(e)) {
        p = e;
        w = e.size;
        if (e.type) {
          k = e.type;
        }
      } else if (typeof e[Symbol.asyncIterator] === "function") {
        if (r) {
          throw new TypeError("keepalive");
        }
        if (n.isDisturbed(e) || e.locked) {
          throw new TypeError("Response body object should not be disturbed or locked");
        }
        o = e instanceof ce ? e : i(e);
      }
      if (typeof p === "string" || n.isBuffer(p)) {
        w = Buffer.byteLength(p);
      }
      if (h != null) {
        let r;
        o = new ce({
          async start() {
            r = h(e)[Symbol.asyncIterator]();
          },
          async pull(e) {
            const { value: s, done: n } = await r.next();
            if (n) {
              queueMicrotask(() => {
                e.close();
              });
            } else {
              if (!re(o)) {
                e.enqueue(new Uint8Array(s));
              }
            }
            return e.desiredSize > 0;
          },
          async cancel(e) {
            await r.return();
          },
          type: undefined,
        });
      }
      const _ = { stream: o, source: p, length: w };
      return [_, k];
    }
    function safelyExtractBody(e, r = false) {
      if (!ce) {
        ce = s(3774).ReadableStream;
      }
      if (e instanceof ce) {
        te(!n.isDisturbed(e), "The body has already been consumed.");
        te(!e.locked, "The stream is locked.");
      }
      return extractBody(e, r);
    }
    function cloneBody(e) {
      const [r, s] = e.stream.tee();
      const o = j(s, { transfer: [s] });
      const [, n] = o.tee();
      e.stream = r;
      return { stream: n, length: e.length, source: e.source };
    }
    async function* consumeBody(e) {
      if (e) {
        if (se(e)) {
          yield e;
        } else {
          const r = e.stream;
          if (n.isDisturbed(r)) {
            throw new TypeError("The body has already been consumed.");
          }
          if (r.locked) {
            throw new TypeError("The stream is locked.");
          }
          r[ee] = true;
          yield* r;
        }
      }
    }
    function throwIfAborted(e) {
      if (e.aborted) {
        throw new M("The operation was aborted.", "AbortError");
      }
    }
    function bodyMixinMethods(e) {
      const r = {
        blob() {
          return specConsumeBody(
            this,
            (e) => {
              let r = bodyMimeType(this);
              if (r === "failure") {
                r = "";
              } else if (r) {
                r = Ae(r);
              }
              return new q([e], { type: r });
            },
            e
          );
        },
        arrayBuffer() {
          return specConsumeBody(this, (e) => new Uint8Array(e).buffer, e);
        },
        text() {
          return specConsumeBody(this, utf8DecodeBytes, e);
        },
        json() {
          return specConsumeBody(this, parseJSONFromBytes, e);
        },
        async formData() {
          _.brandCheck(this, e);
          throwIfAborted(this[k]);
          const r = this.headers.get("Content-Type");
          if (/multipart\/form-data/.test(r)) {
            const e = {};
            for (const [r, s] of this.headers) e[r.toLowerCase()] = s;
            const r = new w();
            let s;
            try {
              s = new o({ headers: e, preservePath: true });
            } catch (e) {
              throw new M(`${e}`, "AbortError");
            }
            s.on("field", (e, s) => {
              r.append(e, s);
            });
            s.on("file", (e, s, o, n, i) => {
              const a = [];
              if (n === "base64" || n.toLowerCase() === "base64") {
                let n = "";
                s.on("data", (e) => {
                  n += e.toString().replace(/[\r\n]/gm, "");
                  const r = n.length - (n.length % 4);
                  a.push(Buffer.from(n.slice(0, r), "base64"));
                  n = n.slice(r);
                });
                s.on("end", () => {
                  a.push(Buffer.from(n, "base64"));
                  r.append(e, new le(a, o, { type: i }));
                });
              } else {
                s.on("data", (e) => {
                  a.push(e);
                });
                s.on("end", () => {
                  r.append(e, new le(a, o, { type: i }));
                });
              }
            });
            const n = new Promise((e, r) => {
              s.on("finish", e);
              s.on("error", (e) => r(new TypeError(e)));
            });
            if (this.body !== null) for await (const e of consumeBody(this[k].body)) s.write(e);
            s.end();
            await n;
            return r;
          } else if (/application\/x-www-form-urlencoded/.test(r)) {
            let e;
            try {
              let r = "";
              const s = new TextDecoder("utf-8", { ignoreBOM: true });
              for await (const e of consumeBody(this[k].body)) {
                if (!se(e)) {
                  throw new TypeError("Expected Uint8Array chunk");
                }
                r += s.decode(e, { stream: true });
              }
              r += s.decode();
              e = new URLSearchParams(r);
            } catch (e) {
              throw Object.assign(new TypeError(), { cause: e });
            }
            const r = new w();
            for (const [s, o] of e) {
              r.append(s, o);
            }
            return r;
          } else {
            await Promise.resolve();
            throwIfAborted(this[k]);
            throw _.errors.exception({ header: `${e.name}.formData`, message: "Could not parse content as FormData." });
          }
        },
      };
      return r;
    }
    function mixinBody(e) {
      Object.assign(e.prototype, bodyMixinMethods(e));
    }
    async function specConsumeBody(e, r, s) {
      _.brandCheck(e, s);
      throwIfAborted(e[k]);
      if (bodyUnusable(e[k].body)) {
        throw new TypeError("Body is unusable");
      }
      const o = h();
      const errorSteps = (e) => o.reject(e);
      const successSteps = (e) => {
        try {
          o.resolve(r(e));
        } catch (e) {
          errorSteps(e);
        }
      };
      if (e[k].body == null) {
        successSteps(new Uint8Array());
        return o.promise;
      }
      await p(e[k].body, successSteps, errorSteps);
      return o.promise;
    }
    function bodyUnusable(e) {
      return e != null && (e.stream.locked || n.isDisturbed(e.stream));
    }
    function utf8DecodeBytes(e) {
      if (e.length === 0) {
        return "";
      }
      if (e[0] === 239 && e[1] === 187 && e[2] === 191) {
        e = e.subarray(3);
      }
      const r = ge.decode(e);
      return r;
    }
    function parseJSONFromBytes(e) {
      return JSON.parse(utf8DecodeBytes(e));
    }
    function bodyMimeType(e) {
      const { headersList: r } = e[k];
      const s = r.get("content-type");
      if (s === null) {
        return "failure";
      }
      return ie(s);
    }
    e.exports = { extractBody: extractBody, safelyExtractBody: safelyExtractBody, cloneBody: cloneBody, mixinBody: mixinBody };
  },
  7326: (e, r, s) => {
    const { MessageChannel: o, receiveMessageOnPort: n } = s(8167);
    const i = ["GET", "HEAD", "POST"];
    const a = new Set(i);
    const l = [101, 204, 205, 304];
    const d = [301, 302, 303, 307, 308];
    const h = new Set(d);
    const p = [
      "1",
      "7",
      "9",
      "11",
      "13",
      "15",
      "17",
      "19",
      "20",
      "21",
      "22",
      "23",
      "25",
      "37",
      "42",
      "43",
      "53",
      "69",
      "77",
      "79",
      "87",
      "95",
      "101",
      "102",
      "103",
      "104",
      "109",
      "110",
      "111",
      "113",
      "115",
      "117",
      "119",
      "123",
      "135",
      "137",
      "139",
      "143",
      "161",
      "179",
      "389",
      "427",
      "465",
      "512",
      "513",
      "514",
      "515",
      "526",
      "530",
      "531",
      "532",
      "540",
      "548",
      "554",
      "556",
      "563",
      "587",
      "601",
      "636",
      "989",
      "990",
      "993",
      "995",
      "1719",
      "1720",
      "1723",
      "2049",
      "3659",
      "4045",
      "5060",
      "5061",
      "6000",
      "6566",
      "6665",
      "6666",
      "6667",
      "6668",
      "6669",
      "6697",
      "10080",
    ];
    const w = new Set(p);
    const k = [
      "",
      "no-referrer",
      "no-referrer-when-downgrade",
      "same-origin",
      "origin",
      "strict-origin",
      "origin-when-cross-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url",
    ];
    const _ = new Set(k);
    const M = ["follow", "manual", "error"];
    const j = ["GET", "HEAD", "OPTIONS", "TRACE"];
    const q = new Set(j);
    const $ = ["navigate", "same-origin", "no-cors", "cors"];
    const ee = ["omit", "same-origin", "include"];
    const te = ["default", "no-store", "reload", "no-cache", "force-cache", "only-if-cached"];
    const re = ["content-encoding", "content-language", "content-location", "content-type", "content-length"];
    const se = ["half"];
    const oe = ["CONNECT", "TRACE", "TRACK"];
    const ne = new Set(oe);
    const ie = ["audio", "audioworklet", "font", "image", "manifest", "paintworklet", "script", "style", "track", "video", "xslt", ""];
    const Ae = new Set(ie);
    const ae =
      globalThis.DOMException ??
      (() => {
        try {
          atob("~");
        } catch (e) {
          return Object.getPrototypeOf(e).constructor;
        }
      })();
    let ce;
    const le =
      globalThis.structuredClone ??
      function structuredClone(e, r = undefined) {
        if (arguments.length === 0) {
          throw new TypeError("missing argument");
        }
        if (!ce) {
          ce = new o();
        }
        ce.port1.unref();
        ce.port2.unref();
        ce.port1.postMessage(e, r?.transfer);
        return n(ce.port2).message;
      };
    e.exports = {
      DOMException: ae,
      structuredClone: le,
      subresource: ie,
      forbiddenMethods: oe,
      requestBodyHeader: re,
      referrerPolicy: k,
      requestRedirect: M,
      requestMode: $,
      requestCredentials: ee,
      requestCache: te,
      redirectStatus: d,
      corsSafeListedMethods: i,
      nullBodyStatus: l,
      safeMethods: j,
      badPorts: p,
      requestDuplex: se,
      subresourceSet: Ae,
      badPortsSet: w,
      redirectStatusSet: h,
      corsSafeListedMethodsSet: a,
      safeMethodsSet: q,
      forbiddenMethodsSet: ne,
      referrerPolicySet: _,
    };
  },
  4322: (e, r, s) => {
    const o = s(2613);
    const { atob: n } = s(181);
    const { isomorphicDecode: i } = s(5523);
    const a = new TextEncoder();
    const l = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/;
    const d = /(\u000A|\u000D|\u0009|\u0020)/;
    const h = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/;
    function dataURLProcessor(e) {
      o(e.protocol === "data:");
      let r = URLSerializer(e, true);
      r = r.slice(5);
      const s = { position: 0 };
      let n = collectASequenceOfCodePointsFast(",", r, s);
      const a = n.length;
      n = removeASCIIWhitespace(n, true, true);
      if (s.position >= r.length) {
        return "failure";
      }
      s.position++;
      const l = r.slice(a + 1);
      let d = stringPercentDecode(l);
      if (/;(\u0020){0,}base64$/i.test(n)) {
        const e = i(d);
        d = forgivingBase64(e);
        if (d === "failure") {
          return "failure";
        }
        n = n.slice(0, -6);
        n = n.replace(/(\u0020)+$/, "");
        n = n.slice(0, -1);
      }
      if (n.startsWith(";")) {
        n = "text/plain" + n;
      }
      let h = parseMIMEType(n);
      if (h === "failure") {
        h = parseMIMEType("text/plain;charset=US-ASCII");
      }
      return { mimeType: h, body: d };
    }
    function URLSerializer(e, r = false) {
      if (!r) {
        return e.href;
      }
      const s = e.href;
      const o = e.hash.length;
      return o === 0 ? s : s.substring(0, s.length - o);
    }
    function collectASequenceOfCodePoints(e, r, s) {
      let o = "";
      while (s.position < r.length && e(r[s.position])) {
        o += r[s.position];
        s.position++;
      }
      return o;
    }
    function collectASequenceOfCodePointsFast(e, r, s) {
      const o = r.indexOf(e, s.position);
      const n = s.position;
      if (o === -1) {
        s.position = r.length;
        return r.slice(n);
      }
      s.position = o;
      return r.slice(n, s.position);
    }
    function stringPercentDecode(e) {
      const r = a.encode(e);
      return percentDecode(r);
    }
    function percentDecode(e) {
      const r = [];
      for (let s = 0; s < e.length; s++) {
        const o = e[s];
        if (o !== 37) {
          r.push(o);
        } else if (o === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(e[s + 1], e[s + 2]))) {
          r.push(37);
        } else {
          const o = String.fromCharCode(e[s + 1], e[s + 2]);
          const n = Number.parseInt(o, 16);
          r.push(n);
          s += 2;
        }
      }
      return Uint8Array.from(r);
    }
    function parseMIMEType(e) {
      e = removeHTTPWhitespace(e, true, true);
      const r = { position: 0 };
      const s = collectASequenceOfCodePointsFast("/", e, r);
      if (s.length === 0 || !l.test(s)) {
        return "failure";
      }
      if (r.position > e.length) {
        return "failure";
      }
      r.position++;
      let o = collectASequenceOfCodePointsFast(";", e, r);
      o = removeHTTPWhitespace(o, false, true);
      if (o.length === 0 || !l.test(o)) {
        return "failure";
      }
      const n = s.toLowerCase();
      const i = o.toLowerCase();
      const a = { type: n, subtype: i, parameters: new Map(), essence: `${n}/${i}` };
      while (r.position < e.length) {
        r.position++;
        collectASequenceOfCodePoints((e) => d.test(e), e, r);
        let s = collectASequenceOfCodePoints((e) => e !== ";" && e !== "=", e, r);
        s = s.toLowerCase();
        if (r.position < e.length) {
          if (e[r.position] === ";") {
            continue;
          }
          r.position++;
        }
        if (r.position > e.length) {
          break;
        }
        let o = null;
        if (e[r.position] === '"') {
          o = collectAnHTTPQuotedString(e, r, true);
          collectASequenceOfCodePointsFast(";", e, r);
        } else {
          o = collectASequenceOfCodePointsFast(";", e, r);
          o = removeHTTPWhitespace(o, false, true);
          if (o.length === 0) {
            continue;
          }
        }
        if (s.length !== 0 && l.test(s) && (o.length === 0 || h.test(o)) && !a.parameters.has(s)) {
          a.parameters.set(s, o);
        }
      }
      return a;
    }
    function forgivingBase64(e) {
      e = e.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, "");
      if (e.length % 4 === 0) {
        e = e.replace(/=?=$/, "");
      }
      if (e.length % 4 === 1) {
        return "failure";
      }
      if (/[^+/0-9A-Za-z]/.test(e)) {
        return "failure";
      }
      const r = n(e);
      const s = new Uint8Array(r.length);
      for (let e = 0; e < r.length; e++) {
        s[e] = r.charCodeAt(e);
      }
      return s;
    }
    function collectAnHTTPQuotedString(e, r, s) {
      const n = r.position;
      let i = "";
      o(e[r.position] === '"');
      r.position++;
      while (true) {
        i += collectASequenceOfCodePoints((e) => e !== '"' && e !== "\\", e, r);
        if (r.position >= e.length) {
          break;
        }
        const s = e[r.position];
        r.position++;
        if (s === "\\") {
          if (r.position >= e.length) {
            i += "\\";
            break;
          }
          i += e[r.position];
          r.position++;
        } else {
          o(s === '"');
          break;
        }
      }
      if (s) {
        return i;
      }
      return e.slice(n, r.position);
    }
    function serializeAMimeType(e) {
      o(e !== "failure");
      const { parameters: r, essence: s } = e;
      let n = s;
      for (let [e, s] of r.entries()) {
        n += ";";
        n += e;
        n += "=";
        if (!l.test(s)) {
          s = s.replace(/(\\|")/g, "\\$1");
          s = '"' + s;
          s += '"';
        }
        n += s;
      }
      return n;
    }
    function isHTTPWhiteSpace(e) {
      return e === "\r" || e === "\n" || e === "\t" || e === " ";
    }
    function removeHTTPWhitespace(e, r = true, s = true) {
      let o = 0;
      let n = e.length - 1;
      if (r) {
        for (; o < e.length && isHTTPWhiteSpace(e[o]); o++);
      }
      if (s) {
        for (; n > 0 && isHTTPWhiteSpace(e[n]); n--);
      }
      return e.slice(o, n + 1);
    }
    function isASCIIWhitespace(e) {
      return e === "\r" || e === "\n" || e === "\t" || e === "\f" || e === " ";
    }
    function removeASCIIWhitespace(e, r = true, s = true) {
      let o = 0;
      let n = e.length - 1;
      if (r) {
        for (; o < e.length && isASCIIWhitespace(e[o]); o++);
      }
      if (s) {
        for (; n > 0 && isASCIIWhitespace(e[n]); n--);
      }
      return e.slice(o, n + 1);
    }
    e.exports = {
      dataURLProcessor: dataURLProcessor,
      URLSerializer: URLSerializer,
      collectASequenceOfCodePoints: collectASequenceOfCodePoints,
      collectASequenceOfCodePointsFast: collectASequenceOfCodePointsFast,
      stringPercentDecode: stringPercentDecode,
      parseMIMEType: parseMIMEType,
      collectAnHTTPQuotedString: collectAnHTTPQuotedString,
      serializeAMimeType: serializeAMimeType,
    };
  },
  3041: (e, r, s) => {
    const { Blob: o, File: n } = s(181);
    const { types: i } = s(9023);
    const { kState: a } = s(9710);
    const { isBlobLike: l } = s(5523);
    const { webidl: d } = s(4222);
    const { parseMIMEType: h, serializeAMimeType: p } = s(4322);
    const { kEnumerableProperty: w } = s(3440);
    const k = new TextEncoder();
    class File extends o {
      constructor(e, r, s = {}) {
        d.argumentLengthCheck(arguments, 2, { header: "File constructor" });
        e = d.converters["sequence<BlobPart>"](e);
        r = d.converters.USVString(r);
        s = d.converters.FilePropertyBag(s);
        const o = r;
        let n = s.type;
        let i;
        e: {
          if (n) {
            n = h(n);
            if (n === "failure") {
              n = "";
              break e;
            }
            n = p(n).toLowerCase();
          }
          i = s.lastModified;
        }
        super(processBlobParts(e, s), { type: n });
        this[a] = { name: o, lastModified: i, type: n };
      }
      get name() {
        d.brandCheck(this, File);
        return this[a].name;
      }
      get lastModified() {
        d.brandCheck(this, File);
        return this[a].lastModified;
      }
      get type() {
        d.brandCheck(this, File);
        return this[a].type;
      }
    }
    class FileLike {
      constructor(e, r, s = {}) {
        const o = r;
        const n = s.type;
        const i = s.lastModified ?? Date.now();
        this[a] = { blobLike: e, name: o, type: n, lastModified: i };
      }
      stream(...e) {
        d.brandCheck(this, FileLike);
        return this[a].blobLike.stream(...e);
      }
      arrayBuffer(...e) {
        d.brandCheck(this, FileLike);
        return this[a].blobLike.arrayBuffer(...e);
      }
      slice(...e) {
        d.brandCheck(this, FileLike);
        return this[a].blobLike.slice(...e);
      }
      text(...e) {
        d.brandCheck(this, FileLike);
        return this[a].blobLike.text(...e);
      }
      get size() {
        d.brandCheck(this, FileLike);
        return this[a].blobLike.size;
      }
      get type() {
        d.brandCheck(this, FileLike);
        return this[a].blobLike.type;
      }
      get name() {
        d.brandCheck(this, FileLike);
        return this[a].name;
      }
      get lastModified() {
        d.brandCheck(this, FileLike);
        return this[a].lastModified;
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    }
    Object.defineProperties(File.prototype, { [Symbol.toStringTag]: { value: "File", configurable: true }, name: w, lastModified: w });
    d.converters.Blob = d.interfaceConverter(o);
    d.converters.BlobPart = function (e, r) {
      if (d.util.Type(e) === "Object") {
        if (l(e)) {
          return d.converters.Blob(e, { strict: false });
        }
        if (ArrayBuffer.isView(e) || i.isAnyArrayBuffer(e)) {
          return d.converters.BufferSource(e, r);
        }
      }
      return d.converters.USVString(e, r);
    };
    d.converters["sequence<BlobPart>"] = d.sequenceConverter(d.converters.BlobPart);
    d.converters.FilePropertyBag = d.dictionaryConverter([
      {
        key: "lastModified",
        converter: d.converters["long long"],
        get defaultValue() {
          return Date.now();
        },
      },
      { key: "type", converter: d.converters.DOMString, defaultValue: "" },
      {
        key: "endings",
        converter: (e) => {
          e = d.converters.DOMString(e);
          e = e.toLowerCase();
          if (e !== "native") {
            e = "transparent";
          }
          return e;
        },
        defaultValue: "transparent",
      },
    ]);
    function processBlobParts(e, r) {
      const s = [];
      for (const o of e) {
        if (typeof o === "string") {
          let e = o;
          if (r.endings === "native") {
            e = convertLineEndingsNative(e);
          }
          s.push(k.encode(e));
        } else if (i.isAnyArrayBuffer(o) || i.isTypedArray(o)) {
          if (!o.buffer) {
            s.push(new Uint8Array(o));
          } else {
            s.push(new Uint8Array(o.buffer, o.byteOffset, o.byteLength));
          }
        } else if (l(o)) {
          s.push(o);
        }
      }
      return s;
    }
    function convertLineEndingsNative(e) {
      let r = "\n";
      if (process.platform === "win32") {
        r = "\r\n";
      }
      return e.replace(/\r?\n/g, r);
    }
    function isFileLike(e) {
      return (
        (n && e instanceof n) ||
        e instanceof File ||
        (e && (typeof e.stream === "function" || typeof e.arrayBuffer === "function") && e[Symbol.toStringTag] === "File")
      );
    }
    e.exports = { File: File, FileLike: FileLike, isFileLike: isFileLike };
  },
  3073: (e, r, s) => {
    const { isBlobLike: o, toUSVString: n, makeIterator: i } = s(5523);
    const { kState: a } = s(9710);
    const { File: l, FileLike: d, isFileLike: h } = s(3041);
    const { webidl: p } = s(4222);
    const { Blob: w, File: k } = s(181);
    const _ = k ?? l;
    class FormData {
      constructor(e) {
        if (e !== undefined) {
          throw p.errors.conversionFailed({ prefix: "FormData constructor", argument: "Argument 1", types: ["undefined"] });
        }
        this[a] = [];
      }
      append(e, r, s = undefined) {
        p.brandCheck(this, FormData);
        p.argumentLengthCheck(arguments, 2, { header: "FormData.append" });
        if (arguments.length === 3 && !o(r)) {
          throw new TypeError("Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'");
        }
        e = p.converters.USVString(e);
        r = o(r) ? p.converters.Blob(r, { strict: false }) : p.converters.USVString(r);
        s = arguments.length === 3 ? p.converters.USVString(s) : undefined;
        const n = makeEntry(e, r, s);
        this[a].push(n);
      }
      delete(e) {
        p.brandCheck(this, FormData);
        p.argumentLengthCheck(arguments, 1, { header: "FormData.delete" });
        e = p.converters.USVString(e);
        this[a] = this[a].filter((r) => r.name !== e);
      }
      get(e) {
        p.brandCheck(this, FormData);
        p.argumentLengthCheck(arguments, 1, { header: "FormData.get" });
        e = p.converters.USVString(e);
        const r = this[a].findIndex((r) => r.name === e);
        if (r === -1) {
          return null;
        }
        return this[a][r].value;
      }
      getAll(e) {
        p.brandCheck(this, FormData);
        p.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" });
        e = p.converters.USVString(e);
        return this[a].filter((r) => r.name === e).map((e) => e.value);
      }
      has(e) {
        p.brandCheck(this, FormData);
        p.argumentLengthCheck(arguments, 1, { header: "FormData.has" });
        e = p.converters.USVString(e);
        return this[a].findIndex((r) => r.name === e) !== -1;
      }
      set(e, r, s = undefined) {
        p.brandCheck(this, FormData);
        p.argumentLengthCheck(arguments, 2, { header: "FormData.set" });
        if (arguments.length === 3 && !o(r)) {
          throw new TypeError("Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'");
        }
        e = p.converters.USVString(e);
        r = o(r) ? p.converters.Blob(r, { strict: false }) : p.converters.USVString(r);
        s = arguments.length === 3 ? n(s) : undefined;
        const i = makeEntry(e, r, s);
        const l = this[a].findIndex((r) => r.name === e);
        if (l !== -1) {
          this[a] = [...this[a].slice(0, l), i, ...this[a].slice(l + 1).filter((r) => r.name !== e)];
        } else {
          this[a].push(i);
        }
      }
      entries() {
        p.brandCheck(this, FormData);
        return i(() => this[a].map((e) => [e.name, e.value]), "FormData", "key+value");
      }
      keys() {
        p.brandCheck(this, FormData);
        return i(() => this[a].map((e) => [e.name, e.value]), "FormData", "key");
      }
      values() {
        p.brandCheck(this, FormData);
        return i(() => this[a].map((e) => [e.name, e.value]), "FormData", "value");
      }
      forEach(e, r = globalThis) {
        p.brandCheck(this, FormData);
        p.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" });
        if (typeof e !== "function") {
          throw new TypeError("Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'.");
        }
        for (const [s, o] of this) {
          e.apply(r, [o, s, this]);
        }
      }
    }
    FormData.prototype[Symbol.iterator] = FormData.prototype.entries;
    Object.defineProperties(FormData.prototype, { [Symbol.toStringTag]: { value: "FormData", configurable: true } });
    function makeEntry(e, r, s) {
      e = Buffer.from(e).toString("utf8");
      if (typeof r === "string") {
        r = Buffer.from(r).toString("utf8");
      } else {
        if (!h(r)) {
          r = r instanceof w ? new _([r], "blob", { type: r.type }) : new d(r, "blob", { type: r.type });
        }
        if (s !== undefined) {
          const e = { type: r.type, lastModified: r.lastModified };
          r = (k && r instanceof k) || r instanceof l ? new _([r], s, e) : new d(r, s, e);
        }
      }
      return { name: e, value: r };
    }
    e.exports = { FormData: FormData };
  },
  5628: (e) => {
    const r = Symbol.for("undici.globalOrigin.1");
    function getGlobalOrigin() {
      return globalThis[r];
    }
    function setGlobalOrigin(e) {
      if (e === undefined) {
        Object.defineProperty(globalThis, r, { value: undefined, writable: true, enumerable: false, configurable: false });
        return;
      }
      const s = new URL(e);
      if (s.protocol !== "http:" && s.protocol !== "https:") {
        throw new TypeError(`Only http & https urls are allowed, received ${s.protocol}`);
      }
      Object.defineProperty(globalThis, r, { value: s, writable: true, enumerable: false, configurable: false });
    }
    e.exports = { getGlobalOrigin: getGlobalOrigin, setGlobalOrigin: setGlobalOrigin };
  },
  6349: (e, r, s) => {
    const { kHeadersList: o, kConstruct: n } = s(6443);
    const { kGuard: i } = s(9710);
    const { kEnumerableProperty: a } = s(3440);
    const { makeIterator: l, isValidHeaderName: d, isValidHeaderValue: h } = s(5523);
    const { webidl: p } = s(4222);
    const w = s(2613);
    const k = Symbol("headers map");
    const _ = Symbol("headers map sorted");
    function isHTTPWhiteSpaceCharCode(e) {
      return e === 10 || e === 13 || e === 9 || e === 32;
    }
    function headerValueNormalize(e) {
      let r = 0;
      let s = e.length;
      while (s > r && isHTTPWhiteSpaceCharCode(e.charCodeAt(s - 1))) --s;
      while (s > r && isHTTPWhiteSpaceCharCode(e.charCodeAt(r))) ++r;
      return r === 0 && s === e.length ? e : e.substring(r, s);
    }
    function fill(e, r) {
      if (Array.isArray(r)) {
        for (let s = 0; s < r.length; ++s) {
          const o = r[s];
          if (o.length !== 2) {
            throw p.errors.exception({ header: "Headers constructor", message: `expected name/value pair to be length 2, found ${o.length}.` });
          }
          appendHeader(e, o[0], o[1]);
        }
      } else if (typeof r === "object" && r !== null) {
        const s = Object.keys(r);
        for (let o = 0; o < s.length; ++o) {
          appendHeader(e, s[o], r[s[o]]);
        }
      } else {
        throw p.errors.conversionFailed({
          prefix: "Headers constructor",
          argument: "Argument 1",
          types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"],
        });
      }
    }
    function appendHeader(e, r, s) {
      s = headerValueNormalize(s);
      if (!d(r)) {
        throw p.errors.invalidArgument({ prefix: "Headers.append", value: r, type: "header name" });
      } else if (!h(s)) {
        throw p.errors.invalidArgument({ prefix: "Headers.append", value: s, type: "header value" });
      }
      if (e[i] === "immutable") {
        throw new TypeError("immutable");
      } else if (e[i] === "request-no-cors") {
      }
      return e[o].append(r, s);
    }
    class HeadersList {
      cookies = null;
      constructor(e) {
        if (e instanceof HeadersList) {
          this[k] = new Map(e[k]);
          this[_] = e[_];
          this.cookies = e.cookies === null ? null : [...e.cookies];
        } else {
          this[k] = new Map(e);
          this[_] = null;
        }
      }
      contains(e) {
        e = e.toLowerCase();
        return this[k].has(e);
      }
      clear() {
        this[k].clear();
        this[_] = null;
        this.cookies = null;
      }
      append(e, r) {
        this[_] = null;
        const s = e.toLowerCase();
        const o = this[k].get(s);
        if (o) {
          const e = s === "cookie" ? "; " : ", ";
          this[k].set(s, { name: o.name, value: `${o.value}${e}${r}` });
        } else {
          this[k].set(s, { name: e, value: r });
        }
        if (s === "set-cookie") {
          this.cookies ??= [];
          this.cookies.push(r);
        }
      }
      set(e, r) {
        this[_] = null;
        const s = e.toLowerCase();
        if (s === "set-cookie") {
          this.cookies = [r];
        }
        this[k].set(s, { name: e, value: r });
      }
      delete(e) {
        this[_] = null;
        e = e.toLowerCase();
        if (e === "set-cookie") {
          this.cookies = null;
        }
        this[k].delete(e);
      }
      get(e) {
        const r = this[k].get(e.toLowerCase());
        return r === undefined ? null : r.value;
      }
      *[Symbol.iterator]() {
        for (const [e, { value: r }] of this[k]) {
          yield [e, r];
        }
      }
      get entries() {
        const e = {};
        if (this[k].size) {
          for (const { name: r, value: s } of this[k].values()) {
            e[r] = s;
          }
        }
        return e;
      }
    }
    class Headers {
      constructor(e = undefined) {
        if (e === n) {
          return;
        }
        this[o] = new HeadersList();
        this[i] = "none";
        if (e !== undefined) {
          e = p.converters.HeadersInit(e);
          fill(this, e);
        }
      }
      append(e, r) {
        p.brandCheck(this, Headers);
        p.argumentLengthCheck(arguments, 2, { header: "Headers.append" });
        e = p.converters.ByteString(e);
        r = p.converters.ByteString(r);
        return appendHeader(this, e, r);
      }
      delete(e) {
        p.brandCheck(this, Headers);
        p.argumentLengthCheck(arguments, 1, { header: "Headers.delete" });
        e = p.converters.ByteString(e);
        if (!d(e)) {
          throw p.errors.invalidArgument({ prefix: "Headers.delete", value: e, type: "header name" });
        }
        if (this[i] === "immutable") {
          throw new TypeError("immutable");
        } else if (this[i] === "request-no-cors") {
        }
        if (!this[o].contains(e)) {
          return;
        }
        this[o].delete(e);
      }
      get(e) {
        p.brandCheck(this, Headers);
        p.argumentLengthCheck(arguments, 1, { header: "Headers.get" });
        e = p.converters.ByteString(e);
        if (!d(e)) {
          throw p.errors.invalidArgument({ prefix: "Headers.get", value: e, type: "header name" });
        }
        return this[o].get(e);
      }
      has(e) {
        p.brandCheck(this, Headers);
        p.argumentLengthCheck(arguments, 1, { header: "Headers.has" });
        e = p.converters.ByteString(e);
        if (!d(e)) {
          throw p.errors.invalidArgument({ prefix: "Headers.has", value: e, type: "header name" });
        }
        return this[o].contains(e);
      }
      set(e, r) {
        p.brandCheck(this, Headers);
        p.argumentLengthCheck(arguments, 2, { header: "Headers.set" });
        e = p.converters.ByteString(e);
        r = p.converters.ByteString(r);
        r = headerValueNormalize(r);
        if (!d(e)) {
          throw p.errors.invalidArgument({ prefix: "Headers.set", value: e, type: "header name" });
        } else if (!h(r)) {
          throw p.errors.invalidArgument({ prefix: "Headers.set", value: r, type: "header value" });
        }
        if (this[i] === "immutable") {
          throw new TypeError("immutable");
        } else if (this[i] === "request-no-cors") {
        }
        this[o].set(e, r);
      }
      getSetCookie() {
        p.brandCheck(this, Headers);
        const e = this[o].cookies;
        if (e) {
          return [...e];
        }
        return [];
      }
      get [_]() {
        if (this[o][_]) {
          return this[o][_];
        }
        const e = [];
        const r = [...this[o]].sort((e, r) => (e[0] < r[0] ? -1 : 1));
        const s = this[o].cookies;
        for (let o = 0; o < r.length; ++o) {
          const [n, i] = r[o];
          if (n === "set-cookie") {
            for (let r = 0; r < s.length; ++r) {
              e.push([n, s[r]]);
            }
          } else {
            w(i !== null);
            e.push([n, i]);
          }
        }
        this[o][_] = e;
        return e;
      }
      keys() {
        p.brandCheck(this, Headers);
        if (this[i] === "immutable") {
          const e = this[_];
          return l(() => e, "Headers", "key");
        }
        return l(() => [...this[_].values()], "Headers", "key");
      }
      values() {
        p.brandCheck(this, Headers);
        if (this[i] === "immutable") {
          const e = this[_];
          return l(() => e, "Headers", "value");
        }
        return l(() => [...this[_].values()], "Headers", "value");
      }
      entries() {
        p.brandCheck(this, Headers);
        if (this[i] === "immutable") {
          const e = this[_];
          return l(() => e, "Headers", "key+value");
        }
        return l(() => [...this[_].values()], "Headers", "key+value");
      }
      forEach(e, r = globalThis) {
        p.brandCheck(this, Headers);
        p.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" });
        if (typeof e !== "function") {
          throw new TypeError("Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.");
        }
        for (const [s, o] of this) {
          e.apply(r, [o, s, this]);
        }
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        p.brandCheck(this, Headers);
        return this[o];
      }
    }
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
    Object.defineProperties(Headers.prototype, {
      append: a,
      delete: a,
      get: a,
      has: a,
      set: a,
      getSetCookie: a,
      keys: a,
      values: a,
      entries: a,
      forEach: a,
      [Symbol.iterator]: { enumerable: false },
      [Symbol.toStringTag]: { value: "Headers", configurable: true },
    });
    p.converters.HeadersInit = function (e) {
      if (p.util.Type(e) === "Object") {
        if (e[Symbol.iterator]) {
          return p.converters["sequence<sequence<ByteString>>"](e);
        }
        return p.converters["record<ByteString, ByteString>"](e);
      }
      throw p.errors.conversionFailed({
        prefix: "Headers constructor",
        argument: "Argument 1",
        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"],
      });
    };
    e.exports = { fill: fill, Headers: Headers, HeadersList: HeadersList };
  },
  2315: (e, r, s) => {
    const { Response: o, makeNetworkError: n, makeAppropriateNetworkError: i, filterResponse: a, makeResponse: l } = s(8676);
    const { Headers: d } = s(6349);
    const { Request: h, makeRequest: p } = s(5194);
    const w = s(3106);
    const {
      bytesMatch: k,
      makePolicyContainer: _,
      clonePolicyContainer: M,
      requestBadPort: j,
      TAOCheck: q,
      appendRequestOriginHeader: $,
      responseLocationURL: ee,
      requestCurrentURL: te,
      setRequestReferrerPolicyOnRedirect: re,
      tryUpgradeRequestToAPotentiallyTrustworthyURL: se,
      createOpaqueTimingInfo: oe,
      appendFetchMetadata: ne,
      corsCheck: ie,
      crossOriginResourcePolicyCheck: Ae,
      determineRequestsReferrer: ae,
      coarsenedSharedCurrentTime: ce,
      createDeferredPromise: le,
      isBlobLike: ue,
      sameOrigin: ge,
      isCancelled: de,
      isAborted: fe,
      isErrorLike: he,
      fullyReadBody: pe,
      readableStreamClose: Ee,
      isomorphicEncode: Ie,
      urlIsLocal: Ce,
      urlIsHttpHttpsScheme: me,
      urlHasHttpsScheme: Be,
    } = s(5523);
    const { kState: Qe, kHeaders: be, kGuard: we, kRealm: ye } = s(9710);
    const ke = s(2613);
    const { safelyExtractBody: Re } = s(8923);
    const { redirectStatusSet: Te, nullBodyStatus: De, safeMethodsSet: Fe, requestBodyHeader: ve, subresourceSet: Se, DOMException: Ne } = s(7326);
    const { kHeadersList: Oe } = s(6443);
    const Ue = s(4434);
    const { Readable: Ge, pipeline: Pe } = s(2203);
    const { addAbortListener: Le, isErrored: _e, isReadable: Me, nodeMajor: xe, nodeMinor: He } = s(3440);
    const { dataURLProcessor: Ve, serializeAMimeType: Ye } = s(4322);
    const { TransformStream: je } = s(3774);
    const { getGlobalDispatcher: qe } = s(2581);
    const { webidl: Je } = s(4222);
    const { STATUS_CODES: We } = s(8611);
    const Ke = ["GET", "HEAD"];
    let Xe;
    let ze = globalThis.ReadableStream;
    class Fetch extends Ue {
      constructor(e) {
        super();
        this.dispatcher = e;
        this.connection = null;
        this.dump = false;
        this.state = "ongoing";
        this.setMaxListeners(21);
      }
      terminate(e) {
        if (this.state !== "ongoing") {
          return;
        }
        this.state = "terminated";
        this.connection?.destroy(e);
        this.emit("terminated", e);
      }
      abort(e) {
        if (this.state !== "ongoing") {
          return;
        }
        this.state = "aborted";
        if (!e) {
          e = new Ne("The operation was aborted.", "AbortError");
        }
        this.serializedAbortReason = e;
        this.connection?.destroy(e);
        this.emit("terminated", e);
      }
    }
    function fetch(e, r = {}) {
      Je.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });
      const s = le();
      let n;
      try {
        n = new h(e, r);
      } catch (e) {
        s.reject(e);
        return s.promise;
      }
      const i = n[Qe];
      if (n.signal.aborted) {
        abortFetch(s, i, null, n.signal.reason);
        return s.promise;
      }
      const a = i.client.globalObject;
      if (a?.constructor?.name === "ServiceWorkerGlobalScope") {
        i.serviceWorkers = "none";
      }
      let l = null;
      const d = null;
      let p = false;
      let w = null;
      Le(n.signal, () => {
        p = true;
        ke(w != null);
        w.abort(n.signal.reason);
        abortFetch(s, i, l, n.signal.reason);
      });
      const handleFetchDone = (e) => finalizeAndReportTiming(e, "fetch");
      const processResponse = (e) => {
        if (p) {
          return Promise.resolve();
        }
        if (e.aborted) {
          abortFetch(s, i, l, w.serializedAbortReason);
          return Promise.resolve();
        }
        if (e.type === "error") {
          s.reject(Object.assign(new TypeError("fetch failed"), { cause: e.error }));
          return Promise.resolve();
        }
        l = new o();
        l[Qe] = e;
        l[ye] = d;
        l[be][Oe] = e.headersList;
        l[be][we] = "immutable";
        l[be][ye] = d;
        s.resolve(l);
      };
      w = fetching({ request: i, processResponseEndOfBody: handleFetchDone, processResponse: processResponse, dispatcher: r.dispatcher ?? qe() });
      return s.promise;
    }
    function finalizeAndReportTiming(e, r = "other") {
      if (e.type === "error" && e.aborted) {
        return;
      }
      if (!e.urlList?.length) {
        return;
      }
      const s = e.urlList[0];
      let o = e.timingInfo;
      let n = e.cacheState;
      if (!me(s)) {
        return;
      }
      if (o === null) {
        return;
      }
      if (!e.timingAllowPassed) {
        o = oe({ startTime: o.startTime });
        n = "";
      }
      o.endTime = ce();
      e.timingInfo = o;
      markResourceTiming(o, s, r, globalThis, n);
    }
    function markResourceTiming(e, r, s, o, n) {
      if (xe > 18 || (xe === 18 && He >= 2)) {
        performance.markResourceTiming(e, r.href, s, o, n);
      }
    }
    function abortFetch(e, r, s, o) {
      if (!o) {
        o = new Ne("The operation was aborted.", "AbortError");
      }
      e.reject(o);
      if (r.body != null && Me(r.body?.stream)) {
        r.body.stream.cancel(o).catch((e) => {
          if (e.code === "ERR_INVALID_STATE") {
            return;
          }
          throw e;
        });
      }
      if (s == null) {
        return;
      }
      const n = s[Qe];
      if (n.body != null && Me(n.body?.stream)) {
        n.body.stream.cancel(o).catch((e) => {
          if (e.code === "ERR_INVALID_STATE") {
            return;
          }
          throw e;
        });
      }
    }
    function fetching({
      request: e,
      processRequestBodyChunkLength: r,
      processRequestEndOfBody: s,
      processResponse: o,
      processResponseEndOfBody: n,
      processResponseConsumeBody: i,
      useParallelQueue: a = false,
      dispatcher: l,
    }) {
      let d = null;
      let h = false;
      if (e.client != null) {
        d = e.client.globalObject;
        h = e.client.crossOriginIsolatedCapability;
      }
      const p = ce(h);
      const w = oe({ startTime: p });
      const k = {
        controller: new Fetch(l),
        request: e,
        timingInfo: w,
        processRequestBodyChunkLength: r,
        processRequestEndOfBody: s,
        processResponse: o,
        processResponseConsumeBody: i,
        processResponseEndOfBody: n,
        taskDestination: d,
        crossOriginIsolatedCapability: h,
      };
      ke(!e.body || e.body.stream);
      if (e.window === "client") {
        e.window = e.client?.globalObject?.constructor?.name === "Window" ? e.client : "no-window";
      }
      if (e.origin === "client") {
        e.origin = e.client?.origin;
      }
      if (e.policyContainer === "client") {
        if (e.client != null) {
          e.policyContainer = M(e.client.policyContainer);
        } else {
          e.policyContainer = _();
        }
      }
      if (!e.headersList.contains("accept")) {
        const r = "*/*";
        e.headersList.append("accept", r);
      }
      if (!e.headersList.contains("accept-language")) {
        e.headersList.append("accept-language", "*");
      }
      if (e.priority === null) {
      }
      if (Se.has(e.destination)) {
      }
      mainFetch(k).catch((e) => {
        k.controller.terminate(e);
      });
      return k.controller;
    }
    async function mainFetch(e, r = false) {
      const s = e.request;
      let o = null;
      if (s.localURLsOnly && !Ce(te(s))) {
        o = n("local URLs only");
      }
      se(s);
      if (j(s) === "blocked") {
        o = n("bad port");
      }
      if (s.referrerPolicy === "") {
        s.referrerPolicy = s.policyContainer.referrerPolicy;
      }
      if (s.referrer !== "no-referrer") {
        s.referrer = ae(s);
      }
      if (o === null) {
        o = await (async () => {
          const r = te(s);
          if ((ge(r, s.url) && s.responseTainting === "basic") || r.protocol === "data:" || s.mode === "navigate" || s.mode === "websocket") {
            s.responseTainting = "basic";
            return await schemeFetch(e);
          }
          if (s.mode === "same-origin") {
            return n('request mode cannot be "same-origin"');
          }
          if (s.mode === "no-cors") {
            if (s.redirect !== "follow") {
              return n('redirect mode cannot be "follow" for "no-cors" request');
            }
            s.responseTainting = "opaque";
            return await schemeFetch(e);
          }
          if (!me(te(s))) {
            return n("URL scheme must be a HTTP(S) scheme");
          }
          s.responseTainting = "cors";
          return await httpFetch(e);
        })();
      }
      if (r) {
        return o;
      }
      if (o.status !== 0 && !o.internalResponse) {
        if (s.responseTainting === "cors") {
        }
        if (s.responseTainting === "basic") {
          o = a(o, "basic");
        } else if (s.responseTainting === "cors") {
          o = a(o, "cors");
        } else if (s.responseTainting === "opaque") {
          o = a(o, "opaque");
        } else {
          ke(false);
        }
      }
      let i = o.status === 0 ? o : o.internalResponse;
      if (i.urlList.length === 0) {
        i.urlList.push(...s.urlList);
      }
      if (!s.timingAllowFailed) {
        o.timingAllowPassed = true;
      }
      if (o.type === "opaque" && i.status === 206 && i.rangeRequested && !s.headers.contains("range")) {
        o = i = n();
      }
      if (o.status !== 0 && (s.method === "HEAD" || s.method === "CONNECT" || De.includes(i.status))) {
        i.body = null;
        e.controller.dump = true;
      }
      if (s.integrity) {
        const processBodyError = (r) => fetchFinale(e, n(r));
        if (s.responseTainting === "opaque" || o.body == null) {
          processBodyError(o.error);
          return;
        }
        const processBody = (r) => {
          if (!k(r, s.integrity)) {
            processBodyError("integrity mismatch");
            return;
          }
          o.body = Re(r)[0];
          fetchFinale(e, o);
        };
        await pe(o.body, processBody, processBodyError);
      } else {
        fetchFinale(e, o);
      }
    }
    function schemeFetch(e) {
      if (de(e) && e.request.redirectCount === 0) {
        return Promise.resolve(i(e));
      }
      const { request: r } = e;
      const { protocol: o } = te(r);
      switch (o) {
        case "about:": {
          return Promise.resolve(n("about scheme is not supported"));
        }
        case "blob:": {
          if (!Xe) {
            Xe = s(181).resolveObjectURL;
          }
          const e = te(r);
          if (e.search.length !== 0) {
            return Promise.resolve(n("NetworkError when attempting to fetch resource."));
          }
          const o = Xe(e.toString());
          if (r.method !== "GET" || !ue(o)) {
            return Promise.resolve(n("invalid method"));
          }
          const i = Re(o);
          const a = i[0];
          const d = Ie(`${a.length}`);
          const h = i[1] ?? "";
          const p = l({
            statusText: "OK",
            headersList: [
              ["content-length", { name: "Content-Length", value: d }],
              ["content-type", { name: "Content-Type", value: h }],
            ],
          });
          p.body = a;
          return Promise.resolve(p);
        }
        case "data:": {
          const e = te(r);
          const s = Ve(e);
          if (s === "failure") {
            return Promise.resolve(n("failed to fetch the data URL"));
          }
          const o = Ye(s.mimeType);
          return Promise.resolve(l({ statusText: "OK", headersList: [["content-type", { name: "Content-Type", value: o }]], body: Re(s.body)[0] }));
        }
        case "file:": {
          return Promise.resolve(n("not implemented... yet..."));
        }
        case "http:":
        case "https:": {
          return httpFetch(e).catch((e) => n(e));
        }
        default: {
          return Promise.resolve(n("unknown scheme"));
        }
      }
    }
    function finalizeResponse(e, r) {
      e.request.done = true;
      if (e.processResponseDone != null) {
        queueMicrotask(() => e.processResponseDone(r));
      }
    }
    function fetchFinale(e, r) {
      if (r.type === "error") {
        r.urlList = [e.request.urlList[0]];
        r.timingInfo = oe({ startTime: e.timingInfo.startTime });
      }
      const processResponseEndOfBody = () => {
        e.request.done = true;
        if (e.processResponseEndOfBody != null) {
          queueMicrotask(() => e.processResponseEndOfBody(r));
        }
      };
      if (e.processResponse != null) {
        queueMicrotask(() => e.processResponse(r));
      }
      if (r.body == null) {
        processResponseEndOfBody();
      } else {
        const identityTransformAlgorithm = (e, r) => {
          r.enqueue(e);
        };
        const e = new je(
          { start() {}, transform: identityTransformAlgorithm, flush: processResponseEndOfBody },
          {
            size() {
              return 1;
            },
          },
          {
            size() {
              return 1;
            },
          }
        );
        r.body = { stream: r.body.stream.pipeThrough(e) };
      }
      if (e.processResponseConsumeBody != null) {
        const processBody = (s) => e.processResponseConsumeBody(r, s);
        const processBodyError = (s) => e.processResponseConsumeBody(r, s);
        if (r.body == null) {
          queueMicrotask(() => processBody(null));
        } else {
          return pe(r.body, processBody, processBodyError);
        }
        return Promise.resolve();
      }
    }
    async function httpFetch(e) {
      const r = e.request;
      let s = null;
      let o = null;
      const i = e.timingInfo;
      if (r.serviceWorkers === "all") {
      }
      if (s === null) {
        if (r.redirect === "follow") {
          r.serviceWorkers = "none";
        }
        o = s = await httpNetworkOrCacheFetch(e);
        if (r.responseTainting === "cors" && ie(r, s) === "failure") {
          return n("cors failure");
        }
        if (q(r, s) === "failure") {
          r.timingAllowFailed = true;
        }
      }
      if ((r.responseTainting === "opaque" || s.type === "opaque") && Ae(r.origin, r.client, r.destination, o) === "blocked") {
        return n("blocked");
      }
      if (Te.has(o.status)) {
        if (r.redirect !== "manual") {
          e.controller.connection.destroy();
        }
        if (r.redirect === "error") {
          s = n("unexpected redirect");
        } else if (r.redirect === "manual") {
          s = o;
        } else if (r.redirect === "follow") {
          s = await httpRedirectFetch(e, s);
        } else {
          ke(false);
        }
      }
      s.timingInfo = i;
      return s;
    }
    function httpRedirectFetch(e, r) {
      const s = e.request;
      const o = r.internalResponse ? r.internalResponse : r;
      let i;
      try {
        i = ee(o, te(s).hash);
        if (i == null) {
          return r;
        }
      } catch (e) {
        return Promise.resolve(n(e));
      }
      if (!me(i)) {
        return Promise.resolve(n("URL scheme must be a HTTP(S) scheme"));
      }
      if (s.redirectCount === 20) {
        return Promise.resolve(n("redirect count exceeded"));
      }
      s.redirectCount += 1;
      if (s.mode === "cors" && (i.username || i.password) && !ge(s, i)) {
        return Promise.resolve(n('cross origin not allowed for request mode "cors"'));
      }
      if (s.responseTainting === "cors" && (i.username || i.password)) {
        return Promise.resolve(n('URL cannot contain credentials for request mode "cors"'));
      }
      if (o.status !== 303 && s.body != null && s.body.source == null) {
        return Promise.resolve(n());
      }
      if (([301, 302].includes(o.status) && s.method === "POST") || (o.status === 303 && !Ke.includes(s.method))) {
        s.method = "GET";
        s.body = null;
        for (const e of ve) {
          s.headersList.delete(e);
        }
      }
      if (!ge(te(s), i)) {
        s.headersList.delete("authorization");
        s.headersList.delete("proxy-authorization", true);
        s.headersList.delete("cookie");
        s.headersList.delete("host");
      }
      if (s.body != null) {
        ke(s.body.source != null);
        s.body = Re(s.body.source)[0];
      }
      const a = e.timingInfo;
      a.redirectEndTime = a.postRedirectStartTime = ce(e.crossOriginIsolatedCapability);
      if (a.redirectStartTime === 0) {
        a.redirectStartTime = a.startTime;
      }
      s.urlList.push(i);
      re(s, o);
      return mainFetch(e, true);
    }
    async function httpNetworkOrCacheFetch(e, r = false, s = false) {
      const o = e.request;
      let a = null;
      let l = null;
      let d = null;
      const h = null;
      const w = false;
      if (o.window === "no-window" && o.redirect === "error") {
        a = e;
        l = o;
      } else {
        l = p(o);
        a = { ...e };
        a.request = l;
      }
      const k = o.credentials === "include" || (o.credentials === "same-origin" && o.responseTainting === "basic");
      const _ = l.body ? l.body.length : null;
      let M = null;
      if (l.body == null && ["POST", "PUT"].includes(l.method)) {
        M = "0";
      }
      if (_ != null) {
        M = Ie(`${_}`);
      }
      if (M != null) {
        l.headersList.append("content-length", M);
      }
      if (_ != null && l.keepalive) {
      }
      if (l.referrer instanceof URL) {
        l.headersList.append("referer", Ie(l.referrer.href));
      }
      $(l);
      ne(l);
      if (!l.headersList.contains("user-agent")) {
        l.headersList.append("user-agent", typeof esbuildDetection === "undefined" ? "undici" : "node");
      }
      if (
        l.cache === "default" &&
        (l.headersList.contains("if-modified-since") ||
          l.headersList.contains("if-none-match") ||
          l.headersList.contains("if-unmodified-since") ||
          l.headersList.contains("if-match") ||
          l.headersList.contains("if-range"))
      ) {
        l.cache = "no-store";
      }
      if (l.cache === "no-cache" && !l.preventNoCacheCacheControlHeaderModification && !l.headersList.contains("cache-control")) {
        l.headersList.append("cache-control", "max-age=0");
      }
      if (l.cache === "no-store" || l.cache === "reload") {
        if (!l.headersList.contains("pragma")) {
          l.headersList.append("pragma", "no-cache");
        }
        if (!l.headersList.contains("cache-control")) {
          l.headersList.append("cache-control", "no-cache");
        }
      }
      if (l.headersList.contains("range")) {
        l.headersList.append("accept-encoding", "identity");
      }
      if (!l.headersList.contains("accept-encoding")) {
        if (Be(te(l))) {
          l.headersList.append("accept-encoding", "br, gzip, deflate");
        } else {
          l.headersList.append("accept-encoding", "gzip, deflate");
        }
      }
      l.headersList.delete("host");
      if (k) {
      }
      if (h == null) {
        l.cache = "no-store";
      }
      if (l.mode !== "no-store" && l.mode !== "reload") {
      }
      if (d == null) {
        if (l.mode === "only-if-cached") {
          return n("only if cached");
        }
        const e = await httpNetworkFetch(a, k, s);
        if (!Fe.has(l.method) && e.status >= 200 && e.status <= 399) {
        }
        if (w && e.status === 304) {
        }
        if (d == null) {
          d = e;
        }
      }
      d.urlList = [...l.urlList];
      if (l.headersList.contains("range")) {
        d.rangeRequested = true;
      }
      d.requestIncludesCredentials = k;
      if (d.status === 407) {
        if (o.window === "no-window") {
          return n();
        }
        if (de(e)) {
          return i(e);
        }
        return n("proxy authentication required");
      }
      if (d.status === 421 && !s && (o.body == null || o.body.source != null)) {
        if (de(e)) {
          return i(e);
        }
        e.controller.connection.destroy();
        d = await httpNetworkOrCacheFetch(e, r, true);
      }
      if (r) {
      }
      return d;
    }
    async function httpNetworkFetch(e, r = false, o = false) {
      ke(!e.controller.connection || e.controller.connection.destroyed);
      e.controller.connection = {
        abort: null,
        destroyed: false,
        destroy(e) {
          if (!this.destroyed) {
            this.destroyed = true;
            this.abort?.(e ?? new Ne("The operation was aborted.", "AbortError"));
          }
        },
      };
      const a = e.request;
      let h = null;
      const p = e.timingInfo;
      const k = null;
      if (k == null) {
        a.cache = "no-store";
      }
      const _ = o ? "yes" : "no";
      if (a.mode === "websocket") {
      } else {
      }
      let M = null;
      if (a.body == null && e.processRequestEndOfBody) {
        queueMicrotask(() => e.processRequestEndOfBody());
      } else if (a.body != null) {
        const processBodyChunk = async function* (r) {
          if (de(e)) {
            return;
          }
          yield r;
          e.processRequestBodyChunkLength?.(r.byteLength);
        };
        const processEndOfBody = () => {
          if (de(e)) {
            return;
          }
          if (e.processRequestEndOfBody) {
            e.processRequestEndOfBody();
          }
        };
        const processBodyError = (r) => {
          if (de(e)) {
            return;
          }
          if (r.name === "AbortError") {
            e.controller.abort();
          } else {
            e.controller.terminate(r);
          }
        };
        M = (async function* () {
          try {
            for await (const e of a.body.stream) {
              yield* processBodyChunk(e);
            }
            processEndOfBody();
          } catch (e) {
            processBodyError(e);
          }
        })();
      }
      try {
        const { body: r, status: s, statusText: o, headersList: n, socket: i } = await dispatch({ body: M });
        if (i) {
          h = l({ status: s, statusText: o, headersList: n, socket: i });
        } else {
          const i = r[Symbol.asyncIterator]();
          e.controller.next = () => i.next();
          h = l({ status: s, statusText: o, headersList: n });
        }
      } catch (r) {
        if (r.name === "AbortError") {
          e.controller.connection.destroy();
          return i(e, r);
        }
        return n(r);
      }
      const pullAlgorithm = () => {
        e.controller.resume();
      };
      const cancelAlgorithm = (r) => {
        e.controller.abort(r);
      };
      if (!ze) {
        ze = s(3774).ReadableStream;
      }
      const j = new ze(
        {
          async start(r) {
            e.controller.controller = r;
          },
          async pull(e) {
            await pullAlgorithm(e);
          },
          async cancel(e) {
            await cancelAlgorithm(e);
          },
        },
        {
          highWaterMark: 0,
          size() {
            return 1;
          },
        }
      );
      h.body = { stream: j };
      e.controller.on("terminated", onAborted);
      e.controller.resume = async () => {
        while (true) {
          let r;
          let s;
          try {
            const { done: s, value: o } = await e.controller.next();
            if (fe(e)) {
              break;
            }
            r = s ? undefined : o;
          } catch (o) {
            if (e.controller.ended && !p.encodedBodySize) {
              r = undefined;
            } else {
              r = o;
              s = true;
            }
          }
          if (r === undefined) {
            Ee(e.controller.controller);
            finalizeResponse(e, h);
            return;
          }
          p.decodedBodySize += r?.byteLength ?? 0;
          if (s) {
            e.controller.terminate(r);
            return;
          }
          e.controller.controller.enqueue(new Uint8Array(r));
          if (_e(j)) {
            e.controller.terminate();
            return;
          }
          if (!e.controller.controller.desiredSize) {
            return;
          }
        }
      };
      function onAborted(r) {
        if (fe(e)) {
          h.aborted = true;
          if (Me(j)) {
            e.controller.controller.error(e.controller.serializedAbortReason);
          }
        } else {
          if (Me(j)) {
            e.controller.controller.error(new TypeError("terminated", { cause: he(r) ? r : undefined }));
          }
        }
        e.controller.connection.destroy();
      }
      return h;
      async function dispatch({ body: r }) {
        const s = te(a);
        const o = e.controller.dispatcher;
        return new Promise((n, i) =>
          o.dispatch(
            {
              path: s.pathname + s.search,
              origin: s.origin,
              method: a.method,
              body: e.controller.dispatcher.isMockActive ? a.body && (a.body.source || a.body.stream) : r,
              headers: a.headersList.entries,
              maxRedirections: 0,
              upgrade: a.mode === "websocket" ? "websocket" : undefined,
            },
            {
              body: null,
              abort: null,
              onConnect(r) {
                const { connection: s } = e.controller;
                if (s.destroyed) {
                  r(new Ne("The operation was aborted.", "AbortError"));
                } else {
                  e.controller.on("terminated", r);
                  this.abort = s.abort = r;
                }
              },
              onHeaders(e, r, s, o) {
                if (e < 200) {
                  return;
                }
                let i = [];
                let l = "";
                const h = new d();
                if (Array.isArray(r)) {
                  for (let e = 0; e < r.length; e += 2) {
                    const s = r[e + 0].toString("latin1");
                    const o = r[e + 1].toString("latin1");
                    if (s.toLowerCase() === "content-encoding") {
                      i = o
                        .toLowerCase()
                        .split(",")
                        .map((e) => e.trim());
                    } else if (s.toLowerCase() === "location") {
                      l = o;
                    }
                    h[Oe].append(s, o);
                  }
                } else {
                  const e = Object.keys(r);
                  for (const s of e) {
                    const e = r[s];
                    if (s.toLowerCase() === "content-encoding") {
                      i = e
                        .toLowerCase()
                        .split(",")
                        .map((e) => e.trim())
                        .reverse();
                    } else if (s.toLowerCase() === "location") {
                      l = e;
                    }
                    h[Oe].append(s, e);
                  }
                }
                this.body = new Ge({ read: s });
                const p = [];
                const k = a.redirect === "follow" && l && Te.has(e);
                if (a.method !== "HEAD" && a.method !== "CONNECT" && !De.includes(e) && !k) {
                  for (const e of i) {
                    if (e === "x-gzip" || e === "gzip") {
                      p.push(w.createGunzip({ flush: w.constants.Z_SYNC_FLUSH, finishFlush: w.constants.Z_SYNC_FLUSH }));
                    } else if (e === "deflate") {
                      p.push(w.createInflate());
                    } else if (e === "br") {
                      p.push(w.createBrotliDecompress());
                    } else {
                      p.length = 0;
                      break;
                    }
                  }
                }
                n({ status: e, statusText: o, headersList: h[Oe], body: p.length ? Pe(this.body, ...p, () => {}) : this.body.on("error", () => {}) });
                return true;
              },
              onData(r) {
                if (e.controller.dump) {
                  return;
                }
                const s = r;
                p.encodedBodySize += s.byteLength;
                return this.body.push(s);
              },
              onComplete() {
                if (this.abort) {
                  e.controller.off("terminated", this.abort);
                }
                e.controller.ended = true;
                this.body.push(null);
              },
              onError(r) {
                if (this.abort) {
                  e.controller.off("terminated", this.abort);
                }
                this.body?.destroy(r);
                e.controller.terminate(r);
                i(r);
              },
              onUpgrade(e, r, s) {
                if (e !== 101) {
                  return;
                }
                const o = new d();
                for (let e = 0; e < r.length; e += 2) {
                  const s = r[e + 0].toString("latin1");
                  const n = r[e + 1].toString("latin1");
                  o[Oe].append(s, n);
                }
                n({ status: e, statusText: We[e], headersList: o[Oe], socket: s });
                return true;
              },
            }
          )
        );
      }
    }
    e.exports = { fetch: fetch, Fetch: Fetch, fetching: fetching, finalizeAndReportTiming: finalizeAndReportTiming };
  },
  5194: (e, r, s) => {
    const { extractBody: o, mixinBody: n, cloneBody: i } = s(8923);
    const { Headers: a, fill: l, HeadersList: d } = s(6349);
    const { FinalizationRegistry: h } = s(3194)();
    const p = s(3440);
    const { isValidHTTPToken: w, sameOrigin: k, normalizeMethod: _, makePolicyContainer: M, normalizeMethodRecord: j } = s(5523);
    const {
      forbiddenMethodsSet: q,
      corsSafeListedMethodsSet: $,
      referrerPolicy: ee,
      requestRedirect: te,
      requestMode: re,
      requestCredentials: se,
      requestCache: oe,
      requestDuplex: ne,
    } = s(7326);
    const { kEnumerableProperty: ie } = p;
    const { kHeaders: Ae, kSignal: ae, kState: ce, kGuard: le, kRealm: ue } = s(9710);
    const { webidl: ge } = s(4222);
    const { getGlobalOrigin: de } = s(5628);
    const { URLSerializer: fe } = s(4322);
    const { kHeadersList: he, kConstruct: pe } = s(6443);
    const Ee = s(2613);
    const { getMaxListeners: Ie, setMaxListeners: Ce, getEventListeners: me, defaultMaxListeners: Be } = s(4434);
    let Qe = globalThis.TransformStream;
    const be = Symbol("abortController");
    const we = new h(({ signal: e, abort: r }) => {
      e.removeEventListener("abort", r);
    });
    class Request {
      constructor(e, r = {}) {
        if (e === pe) {
          return;
        }
        ge.argumentLengthCheck(arguments, 1, { header: "Request constructor" });
        e = ge.converters.RequestInfo(e);
        r = ge.converters.RequestInit(r);
        this[ue] = {
          settingsObject: {
            baseUrl: de(),
            get origin() {
              return this.baseUrl?.origin;
            },
            policyContainer: M(),
          },
        };
        let n = null;
        let i = null;
        const h = this[ue].settingsObject.baseUrl;
        let ee = null;
        if (typeof e === "string") {
          let r;
          try {
            r = new URL(e, h);
          } catch (r) {
            throw new TypeError("Failed to parse URL from " + e, { cause: r });
          }
          if (r.username || r.password) {
            throw new TypeError("Request cannot be constructed from a URL that includes credentials: " + e);
          }
          n = makeRequest({ urlList: [r] });
          i = "cors";
        } else {
          Ee(e instanceof Request);
          n = e[ce];
          ee = e[ae];
        }
        const te = this[ue].settingsObject.origin;
        let re = "client";
        if (n.window?.constructor?.name === "EnvironmentSettingsObject" && k(n.window, te)) {
          re = n.window;
        }
        if (r.window != null) {
          throw new TypeError(`'window' option '${re}' must be null`);
        }
        if ("window" in r) {
          re = "no-window";
        }
        n = makeRequest({
          method: n.method,
          headersList: n.headersList,
          unsafeRequest: n.unsafeRequest,
          client: this[ue].settingsObject,
          window: re,
          priority: n.priority,
          origin: n.origin,
          referrer: n.referrer,
          referrerPolicy: n.referrerPolicy,
          mode: n.mode,
          credentials: n.credentials,
          cache: n.cache,
          redirect: n.redirect,
          integrity: n.integrity,
          keepalive: n.keepalive,
          reloadNavigation: n.reloadNavigation,
          historyNavigation: n.historyNavigation,
          urlList: [...n.urlList],
        });
        const se = Object.keys(r).length !== 0;
        if (se) {
          if (n.mode === "navigate") {
            n.mode = "same-origin";
          }
          n.reloadNavigation = false;
          n.historyNavigation = false;
          n.origin = "client";
          n.referrer = "client";
          n.referrerPolicy = "";
          n.url = n.urlList[n.urlList.length - 1];
          n.urlList = [n.url];
        }
        if (r.referrer !== undefined) {
          const e = r.referrer;
          if (e === "") {
            n.referrer = "no-referrer";
          } else {
            let r;
            try {
              r = new URL(e, h);
            } catch (r) {
              throw new TypeError(`Referrer "${e}" is not a valid URL.`, { cause: r });
            }
            if ((r.protocol === "about:" && r.hostname === "client") || (te && !k(r, this[ue].settingsObject.baseUrl))) {
              n.referrer = "client";
            } else {
              n.referrer = r;
            }
          }
        }
        if (r.referrerPolicy !== undefined) {
          n.referrerPolicy = r.referrerPolicy;
        }
        let oe;
        if (r.mode !== undefined) {
          oe = r.mode;
        } else {
          oe = i;
        }
        if (oe === "navigate") {
          throw ge.errors.exception({ header: "Request constructor", message: "invalid request mode navigate." });
        }
        if (oe != null) {
          n.mode = oe;
        }
        if (r.credentials !== undefined) {
          n.credentials = r.credentials;
        }
        if (r.cache !== undefined) {
          n.cache = r.cache;
        }
        if (n.cache === "only-if-cached" && n.mode !== "same-origin") {
          throw new TypeError("'only-if-cached' can be set only with 'same-origin' mode");
        }
        if (r.redirect !== undefined) {
          n.redirect = r.redirect;
        }
        if (r.integrity != null) {
          n.integrity = String(r.integrity);
        }
        if (r.keepalive !== undefined) {
          n.keepalive = Boolean(r.keepalive);
        }
        if (r.method !== undefined) {
          let e = r.method;
          if (!w(e)) {
            throw new TypeError(`'${e}' is not a valid HTTP method.`);
          }
          if (q.has(e.toUpperCase())) {
            throw new TypeError(`'${e}' HTTP method is unsupported.`);
          }
          e = j[e] ?? _(e);
          n.method = e;
        }
        if (r.signal !== undefined) {
          ee = r.signal;
        }
        this[ce] = n;
        const ne = new AbortController();
        this[ae] = ne.signal;
        this[ae][ue] = this[ue];
        if (ee != null) {
          if (!ee || typeof ee.aborted !== "boolean" || typeof ee.addEventListener !== "function") {
            throw new TypeError("Failed to construct 'Request': member signal is not of type AbortSignal.");
          }
          if (ee.aborted) {
            ne.abort(ee.reason);
          } else {
            this[be] = ne;
            const e = new WeakRef(ne);
            const abort = function () {
              const r = e.deref();
              if (r !== undefined) {
                r.abort(this.reason);
              }
            };
            try {
              if (typeof Ie === "function" && Ie(ee) === Be) {
                Ce(100, ee);
              } else if (me(ee, "abort").length >= Be) {
                Ce(100, ee);
              }
            } catch {}
            p.addAbortListener(ee, abort);
            we.register(ne, { signal: ee, abort: abort });
          }
        }
        this[Ae] = new a(pe);
        this[Ae][he] = n.headersList;
        this[Ae][le] = "request";
        this[Ae][ue] = this[ue];
        if (oe === "no-cors") {
          if (!$.has(n.method)) {
            throw new TypeError(`'${n.method} is unsupported in no-cors mode.`);
          }
          this[Ae][le] = "request-no-cors";
        }
        if (se) {
          const e = this[Ae][he];
          const s = r.headers !== undefined ? r.headers : new d(e);
          e.clear();
          if (s instanceof d) {
            for (const [r, o] of s) {
              e.append(r, o);
            }
            e.cookies = s.cookies;
          } else {
            l(this[Ae], s);
          }
        }
        const ie = e instanceof Request ? e[ce].body : null;
        if ((r.body != null || ie != null) && (n.method === "GET" || n.method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body.");
        }
        let fe = null;
        if (r.body != null) {
          const [e, s] = o(r.body, n.keepalive);
          fe = e;
          if (s && !this[Ae][he].contains("content-type")) {
            this[Ae].append("content-type", s);
          }
        }
        const ye = fe ?? ie;
        if (ye != null && ye.source == null) {
          if (fe != null && r.duplex == null) {
            throw new TypeError("RequestInit: duplex option is required when sending a body.");
          }
          if (n.mode !== "same-origin" && n.mode !== "cors") {
            throw new TypeError('If request is made from ReadableStream, mode should be "same-origin" or "cors"');
          }
          n.useCORSPreflightFlag = true;
        }
        let ke = ye;
        if (fe == null && ie != null) {
          if (p.isDisturbed(ie.stream) || ie.stream.locked) {
            throw new TypeError("Cannot construct a Request with a Request object that has already been used.");
          }
          if (!Qe) {
            Qe = s(3774).TransformStream;
          }
          const e = new Qe();
          ie.stream.pipeThrough(e);
          ke = { source: ie.source, length: ie.length, stream: e.readable };
        }
        this[ce].body = ke;
      }
      get method() {
        ge.brandCheck(this, Request);
        return this[ce].method;
      }
      get url() {
        ge.brandCheck(this, Request);
        return fe(this[ce].url);
      }
      get headers() {
        ge.brandCheck(this, Request);
        return this[Ae];
      }
      get destination() {
        ge.brandCheck(this, Request);
        return this[ce].destination;
      }
      get referrer() {
        ge.brandCheck(this, Request);
        if (this[ce].referrer === "no-referrer") {
          return "";
        }
        if (this[ce].referrer === "client") {
          return "about:client";
        }
        return this[ce].referrer.toString();
      }
      get referrerPolicy() {
        ge.brandCheck(this, Request);
        return this[ce].referrerPolicy;
      }
      get mode() {
        ge.brandCheck(this, Request);
        return this[ce].mode;
      }
      get credentials() {
        return this[ce].credentials;
      }
      get cache() {
        ge.brandCheck(this, Request);
        return this[ce].cache;
      }
      get redirect() {
        ge.brandCheck(this, Request);
        return this[ce].redirect;
      }
      get integrity() {
        ge.brandCheck(this, Request);
        return this[ce].integrity;
      }
      get keepalive() {
        ge.brandCheck(this, Request);
        return this[ce].keepalive;
      }
      get isReloadNavigation() {
        ge.brandCheck(this, Request);
        return this[ce].reloadNavigation;
      }
      get isHistoryNavigation() {
        ge.brandCheck(this, Request);
        return this[ce].historyNavigation;
      }
      get signal() {
        ge.brandCheck(this, Request);
        return this[ae];
      }
      get body() {
        ge.brandCheck(this, Request);
        return this[ce].body ? this[ce].body.stream : null;
      }
      get bodyUsed() {
        ge.brandCheck(this, Request);
        return !!this[ce].body && p.isDisturbed(this[ce].body.stream);
      }
      get duplex() {
        ge.brandCheck(this, Request);
        return "half";
      }
      clone() {
        ge.brandCheck(this, Request);
        if (this.bodyUsed || this.body?.locked) {
          throw new TypeError("unusable");
        }
        const e = cloneRequest(this[ce]);
        const r = new Request(pe);
        r[ce] = e;
        r[ue] = this[ue];
        r[Ae] = new a(pe);
        r[Ae][he] = e.headersList;
        r[Ae][le] = this[Ae][le];
        r[Ae][ue] = this[Ae][ue];
        const s = new AbortController();
        if (this.signal.aborted) {
          s.abort(this.signal.reason);
        } else {
          p.addAbortListener(this.signal, () => {
            s.abort(this.signal.reason);
          });
        }
        r[ae] = s.signal;
        return r;
      }
    }
    n(Request);
    function makeRequest(e) {
      const r = {
        method: "GET",
        localURLsOnly: false,
        unsafeRequest: false,
        body: null,
        client: null,
        reservedClient: null,
        replacesClientId: "",
        window: "client",
        keepalive: false,
        serviceWorkers: "all",
        initiator: "",
        destination: "",
        priority: null,
        origin: "client",
        policyContainer: "client",
        referrer: "client",
        referrerPolicy: "",
        mode: "no-cors",
        useCORSPreflightFlag: false,
        credentials: "same-origin",
        useCredentials: false,
        cache: "default",
        redirect: "follow",
        integrity: "",
        cryptoGraphicsNonceMetadata: "",
        parserMetadata: "",
        reloadNavigation: false,
        historyNavigation: false,
        userActivation: false,
        taintedOrigin: false,
        redirectCount: 0,
        responseTainting: "basic",
        preventNoCacheCacheControlHeaderModification: false,
        done: false,
        timingAllowFailed: false,
        ...e,
        headersList: e.headersList ? new d(e.headersList) : new d(),
      };
      r.url = r.urlList[0];
      return r;
    }
    function cloneRequest(e) {
      const r = makeRequest({ ...e, body: null });
      if (e.body != null) {
        r.body = i(e.body);
      }
      return r;
    }
    Object.defineProperties(Request.prototype, {
      method: ie,
      url: ie,
      headers: ie,
      redirect: ie,
      clone: ie,
      signal: ie,
      duplex: ie,
      destination: ie,
      body: ie,
      bodyUsed: ie,
      isHistoryNavigation: ie,
      isReloadNavigation: ie,
      keepalive: ie,
      integrity: ie,
      cache: ie,
      credentials: ie,
      attribute: ie,
      referrerPolicy: ie,
      referrer: ie,
      mode: ie,
      [Symbol.toStringTag]: { value: "Request", configurable: true },
    });
    ge.converters.Request = ge.interfaceConverter(Request);
    ge.converters.RequestInfo = function (e) {
      if (typeof e === "string") {
        return ge.converters.USVString(e);
      }
      if (e instanceof Request) {
        return ge.converters.Request(e);
      }
      return ge.converters.USVString(e);
    };
    ge.converters.AbortSignal = ge.interfaceConverter(AbortSignal);
    ge.converters.RequestInit = ge.dictionaryConverter([
      { key: "method", converter: ge.converters.ByteString },
      { key: "headers", converter: ge.converters.HeadersInit },
      { key: "body", converter: ge.nullableConverter(ge.converters.BodyInit) },
      { key: "referrer", converter: ge.converters.USVString },
      { key: "referrerPolicy", converter: ge.converters.DOMString, allowedValues: ee },
      { key: "mode", converter: ge.converters.DOMString, allowedValues: re },
      { key: "credentials", converter: ge.converters.DOMString, allowedValues: se },
      { key: "cache", converter: ge.converters.DOMString, allowedValues: oe },
      { key: "redirect", converter: ge.converters.DOMString, allowedValues: te },
      { key: "integrity", converter: ge.converters.DOMString },
      { key: "keepalive", converter: ge.converters.boolean },
      { key: "signal", converter: ge.nullableConverter((e) => ge.converters.AbortSignal(e, { strict: false })) },
      { key: "window", converter: ge.converters.any },
      { key: "duplex", converter: ge.converters.DOMString, allowedValues: ne },
    ]);
    e.exports = { Request: Request, makeRequest: makeRequest };
  },
  8676: (e, r, s) => {
    const { Headers: o, HeadersList: n, fill: i } = s(6349);
    const { extractBody: a, cloneBody: l, mixinBody: d } = s(8923);
    const h = s(3440);
    const { kEnumerableProperty: p } = h;
    const {
      isValidReasonPhrase: w,
      isCancelled: k,
      isAborted: _,
      isBlobLike: M,
      serializeJavascriptValueToJSONString: j,
      isErrorLike: q,
      isomorphicEncode: $,
    } = s(5523);
    const { redirectStatusSet: ee, nullBodyStatus: te, DOMException: re } = s(7326);
    const { kState: se, kHeaders: oe, kGuard: ne, kRealm: ie } = s(9710);
    const { webidl: Ae } = s(4222);
    const { FormData: ae } = s(3073);
    const { getGlobalOrigin: ce } = s(5628);
    const { URLSerializer: le } = s(4322);
    const { kHeadersList: ue, kConstruct: ge } = s(6443);
    const de = s(2613);
    const { types: fe } = s(9023);
    const he = globalThis.ReadableStream || s(3774).ReadableStream;
    const pe = new TextEncoder("utf-8");
    class Response {
      static error() {
        const e = { settingsObject: {} };
        const r = new Response();
        r[se] = makeNetworkError();
        r[ie] = e;
        r[oe][ue] = r[se].headersList;
        r[oe][ne] = "immutable";
        r[oe][ie] = e;
        return r;
      }
      static json(e, r = {}) {
        Ae.argumentLengthCheck(arguments, 1, { header: "Response.json" });
        if (r !== null) {
          r = Ae.converters.ResponseInit(r);
        }
        const s = pe.encode(j(e));
        const o = a(s);
        const n = { settingsObject: {} };
        const i = new Response();
        i[ie] = n;
        i[oe][ne] = "response";
        i[oe][ie] = n;
        initializeResponse(i, r, { body: o[0], type: "application/json" });
        return i;
      }
      static redirect(e, r = 302) {
        const s = { settingsObject: {} };
        Ae.argumentLengthCheck(arguments, 1, { header: "Response.redirect" });
        e = Ae.converters.USVString(e);
        r = Ae.converters["unsigned short"](r);
        let o;
        try {
          o = new URL(e, ce());
        } catch (r) {
          throw Object.assign(new TypeError("Failed to parse URL from " + e), { cause: r });
        }
        if (!ee.has(r)) {
          throw new RangeError("Invalid status code " + r);
        }
        const n = new Response();
        n[ie] = s;
        n[oe][ne] = "immutable";
        n[oe][ie] = s;
        n[se].status = r;
        const i = $(le(o));
        n[se].headersList.append("location", i);
        return n;
      }
      constructor(e = null, r = {}) {
        if (e !== null) {
          e = Ae.converters.BodyInit(e);
        }
        r = Ae.converters.ResponseInit(r);
        this[ie] = { settingsObject: {} };
        this[se] = makeResponse({});
        this[oe] = new o(ge);
        this[oe][ne] = "response";
        this[oe][ue] = this[se].headersList;
        this[oe][ie] = this[ie];
        let s = null;
        if (e != null) {
          const [r, o] = a(e);
          s = { body: r, type: o };
        }
        initializeResponse(this, r, s);
      }
      get type() {
        Ae.brandCheck(this, Response);
        return this[se].type;
      }
      get url() {
        Ae.brandCheck(this, Response);
        const e = this[se].urlList;
        const r = e[e.length - 1] ?? null;
        if (r === null) {
          return "";
        }
        return le(r, true);
      }
      get redirected() {
        Ae.brandCheck(this, Response);
        return this[se].urlList.length > 1;
      }
      get status() {
        Ae.brandCheck(this, Response);
        return this[se].status;
      }
      get ok() {
        Ae.brandCheck(this, Response);
        return this[se].status >= 200 && this[se].status <= 299;
      }
      get statusText() {
        Ae.brandCheck(this, Response);
        return this[se].statusText;
      }
      get headers() {
        Ae.brandCheck(this, Response);
        return this[oe];
      }
      get body() {
        Ae.brandCheck(this, Response);
        return this[se].body ? this[se].body.stream : null;
      }
      get bodyUsed() {
        Ae.brandCheck(this, Response);
        return !!this[se].body && h.isDisturbed(this[se].body.stream);
      }
      clone() {
        Ae.brandCheck(this, Response);
        if (this.bodyUsed || (this.body && this.body.locked)) {
          throw Ae.errors.exception({ header: "Response.clone", message: "Body has already been consumed." });
        }
        const e = cloneResponse(this[se]);
        const r = new Response();
        r[se] = e;
        r[ie] = this[ie];
        r[oe][ue] = e.headersList;
        r[oe][ne] = this[oe][ne];
        r[oe][ie] = this[oe][ie];
        return r;
      }
    }
    d(Response);
    Object.defineProperties(Response.prototype, {
      type: p,
      url: p,
      status: p,
      ok: p,
      redirected: p,
      statusText: p,
      headers: p,
      clone: p,
      body: p,
      bodyUsed: p,
      [Symbol.toStringTag]: { value: "Response", configurable: true },
    });
    Object.defineProperties(Response, { json: p, redirect: p, error: p });
    function cloneResponse(e) {
      if (e.internalResponse) {
        return filterResponse(cloneResponse(e.internalResponse), e.type);
      }
      const r = makeResponse({ ...e, body: null });
      if (e.body != null) {
        r.body = l(e.body);
      }
      return r;
    }
    function makeResponse(e) {
      return {
        aborted: false,
        rangeRequested: false,
        timingAllowPassed: false,
        requestIncludesCredentials: false,
        type: "default",
        status: 200,
        timingInfo: null,
        cacheState: "",
        statusText: "",
        ...e,
        headersList: e.headersList ? new n(e.headersList) : new n(),
        urlList: e.urlList ? [...e.urlList] : [],
      };
    }
    function makeNetworkError(e) {
      const r = q(e);
      return makeResponse({ type: "error", status: 0, error: r ? e : new Error(e ? String(e) : e), aborted: e && e.name === "AbortError" });
    }
    function makeFilteredResponse(e, r) {
      r = { internalResponse: e, ...r };
      return new Proxy(e, {
        get(e, s) {
          return s in r ? r[s] : e[s];
        },
        set(e, s, o) {
          de(!(s in r));
          e[s] = o;
          return true;
        },
      });
    }
    function filterResponse(e, r) {
      if (r === "basic") {
        return makeFilteredResponse(e, { type: "basic", headersList: e.headersList });
      } else if (r === "cors") {
        return makeFilteredResponse(e, { type: "cors", headersList: e.headersList });
      } else if (r === "opaque") {
        return makeFilteredResponse(e, { type: "opaque", urlList: Object.freeze([]), status: 0, statusText: "", body: null });
      } else if (r === "opaqueredirect") {
        return makeFilteredResponse(e, { type: "opaqueredirect", status: 0, statusText: "", headersList: [], body: null });
      } else {
        de(false);
      }
    }
    function makeAppropriateNetworkError(e, r = null) {
      de(k(e));
      return _(e)
        ? makeNetworkError(Object.assign(new re("The operation was aborted.", "AbortError"), { cause: r }))
        : makeNetworkError(Object.assign(new re("Request was cancelled."), { cause: r }));
    }
    function initializeResponse(e, r, s) {
      if (r.status !== null && (r.status < 200 || r.status > 599)) {
        throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.');
      }
      if ("statusText" in r && r.statusText != null) {
        if (!w(String(r.statusText))) {
          throw new TypeError("Invalid statusText");
        }
      }
      if ("status" in r && r.status != null) {
        e[se].status = r.status;
      }
      if ("statusText" in r && r.statusText != null) {
        e[se].statusText = r.statusText;
      }
      if ("headers" in r && r.headers != null) {
        i(e[oe], r.headers);
      }
      if (s) {
        if (te.includes(e.status)) {
          throw Ae.errors.exception({ header: "Response constructor", message: "Invalid response status code " + e.status });
        }
        e[se].body = s.body;
        if (s.type != null && !e[se].headersList.contains("Content-Type")) {
          e[se].headersList.append("content-type", s.type);
        }
      }
    }
    Ae.converters.ReadableStream = Ae.interfaceConverter(he);
    Ae.converters.FormData = Ae.interfaceConverter(ae);
    Ae.converters.URLSearchParams = Ae.interfaceConverter(URLSearchParams);
    Ae.converters.XMLHttpRequestBodyInit = function (e) {
      if (typeof e === "string") {
        return Ae.converters.USVString(e);
      }
      if (M(e)) {
        return Ae.converters.Blob(e, { strict: false });
      }
      if (fe.isArrayBuffer(e) || fe.isTypedArray(e) || fe.isDataView(e)) {
        return Ae.converters.BufferSource(e);
      }
      if (h.isFormDataLike(e)) {
        return Ae.converters.FormData(e, { strict: false });
      }
      if (e instanceof URLSearchParams) {
        return Ae.converters.URLSearchParams(e);
      }
      return Ae.converters.DOMString(e);
    };
    Ae.converters.BodyInit = function (e) {
      if (e instanceof he) {
        return Ae.converters.ReadableStream(e);
      }
      if (e?.[Symbol.asyncIterator]) {
        return e;
      }
      return Ae.converters.XMLHttpRequestBodyInit(e);
    };
    Ae.converters.ResponseInit = Ae.dictionaryConverter([
      { key: "status", converter: Ae.converters["unsigned short"], defaultValue: 200 },
      { key: "statusText", converter: Ae.converters.ByteString, defaultValue: "" },
      { key: "headers", converter: Ae.converters.HeadersInit },
    ]);
    e.exports = {
      makeNetworkError: makeNetworkError,
      makeResponse: makeResponse,
      makeAppropriateNetworkError: makeAppropriateNetworkError,
      filterResponse: filterResponse,
      Response: Response,
      cloneResponse: cloneResponse,
    };
  },
  9710: (e) => {
    e.exports = {
      kUrl: Symbol("url"),
      kHeaders: Symbol("headers"),
      kSignal: Symbol("signal"),
      kState: Symbol("state"),
      kGuard: Symbol("guard"),
      kRealm: Symbol("realm"),
    };
  },
  5523: (e, r, s) => {
    const { redirectStatusSet: o, referrerPolicySet: n, badPortsSet: i } = s(7326);
    const { getGlobalOrigin: a } = s(5628);
    const { performance: l } = s(2987);
    const { isBlobLike: d, toUSVString: h, ReadableStreamFrom: p } = s(3440);
    const w = s(2613);
    const { isUint8Array: k } = s(8253);
    let _ = [];
    let M;
    try {
      M = s(6982);
      const e = ["sha256", "sha384", "sha512"];
      _ = M.getHashes().filter((r) => e.includes(r));
    } catch {}
    function responseURL(e) {
      const r = e.urlList;
      const s = r.length;
      return s === 0 ? null : r[s - 1].toString();
    }
    function responseLocationURL(e, r) {
      if (!o.has(e.status)) {
        return null;
      }
      let s = e.headersList.get("location");
      if (s !== null && isValidHeaderValue(s)) {
        s = new URL(s, responseURL(e));
      }
      if (s && !s.hash) {
        s.hash = r;
      }
      return s;
    }
    function requestCurrentURL(e) {
      return e.urlList[e.urlList.length - 1];
    }
    function requestBadPort(e) {
      const r = requestCurrentURL(e);
      if (urlIsHttpHttpsScheme(r) && i.has(r.port)) {
        return "blocked";
      }
      return "allowed";
    }
    function isErrorLike(e) {
      return e instanceof Error || e?.constructor?.name === "Error" || e?.constructor?.name === "DOMException";
    }
    function isValidReasonPhrase(e) {
      for (let r = 0; r < e.length; ++r) {
        const s = e.charCodeAt(r);
        if (!(s === 9 || (s >= 32 && s <= 126) || (s >= 128 && s <= 255))) {
          return false;
        }
      }
      return true;
    }
    function isTokenCharCode(e) {
      switch (e) {
        case 34:
        case 40:
        case 41:
        case 44:
        case 47:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 91:
        case 92:
        case 93:
        case 123:
        case 125:
          return false;
        default:
          return e >= 33 && e <= 126;
      }
    }
    function isValidHTTPToken(e) {
      if (e.length === 0) {
        return false;
      }
      for (let r = 0; r < e.length; ++r) {
        if (!isTokenCharCode(e.charCodeAt(r))) {
          return false;
        }
      }
      return true;
    }
    function isValidHeaderName(e) {
      return isValidHTTPToken(e);
    }
    function isValidHeaderValue(e) {
      if (e.startsWith("\t") || e.startsWith(" ") || e.endsWith("\t") || e.endsWith(" ")) {
        return false;
      }
      if (e.includes("\0") || e.includes("\r") || e.includes("\n")) {
        return false;
      }
      return true;
    }
    function setRequestReferrerPolicyOnRedirect(e, r) {
      const { headersList: s } = r;
      const o = (s.get("referrer-policy") ?? "").split(",");
      let i = "";
      if (o.length > 0) {
        for (let e = o.length; e !== 0; e--) {
          const r = o[e - 1].trim();
          if (n.has(r)) {
            i = r;
            break;
          }
        }
      }
      if (i !== "") {
        e.referrerPolicy = i;
      }
    }
    function crossOriginResourcePolicyCheck() {
      return "allowed";
    }
    function corsCheck() {
      return "success";
    }
    function TAOCheck() {
      return "success";
    }
    function appendFetchMetadata(e) {
      let r = null;
      r = e.mode;
      e.headersList.set("sec-fetch-mode", r);
    }
    function appendRequestOriginHeader(e) {
      let r = e.origin;
      if (e.responseTainting === "cors" || e.mode === "websocket") {
        if (r) {
          e.headersList.append("origin", r);
        }
      } else if (e.method !== "GET" && e.method !== "HEAD") {
        switch (e.referrerPolicy) {
          case "no-referrer":
            r = null;
            break;
          case "no-referrer-when-downgrade":
          case "strict-origin":
          case "strict-origin-when-cross-origin":
            if (e.origin && urlHasHttpsScheme(e.origin) && !urlHasHttpsScheme(requestCurrentURL(e))) {
              r = null;
            }
            break;
          case "same-origin":
            if (!sameOrigin(e, requestCurrentURL(e))) {
              r = null;
            }
            break;
          default:
        }
        if (r) {
          e.headersList.append("origin", r);
        }
      }
    }
    function coarsenedSharedCurrentTime(e) {
      return l.now();
    }
    function createOpaqueTimingInfo(e) {
      return {
        startTime: e.startTime ?? 0,
        redirectStartTime: 0,
        redirectEndTime: 0,
        postRedirectStartTime: e.startTime ?? 0,
        finalServiceWorkerStartTime: 0,
        finalNetworkResponseStartTime: 0,
        finalNetworkRequestStartTime: 0,
        endTime: 0,
        encodedBodySize: 0,
        decodedBodySize: 0,
        finalConnectionTimingInfo: null,
      };
    }
    function makePolicyContainer() {
      return { referrerPolicy: "strict-origin-when-cross-origin" };
    }
    function clonePolicyContainer(e) {
      return { referrerPolicy: e.referrerPolicy };
    }
    function determineRequestsReferrer(e) {
      const r = e.referrerPolicy;
      w(r);
      let s = null;
      if (e.referrer === "client") {
        const e = a();
        if (!e || e.origin === "null") {
          return "no-referrer";
        }
        s = new URL(e);
      } else if (e.referrer instanceof URL) {
        s = e.referrer;
      }
      let o = stripURLForReferrer(s);
      const n = stripURLForReferrer(s, true);
      if (o.toString().length > 4096) {
        o = n;
      }
      const i = sameOrigin(e, o);
      const l = isURLPotentiallyTrustworthy(o) && !isURLPotentiallyTrustworthy(e.url);
      switch (r) {
        case "origin":
          return n != null ? n : stripURLForReferrer(s, true);
        case "unsafe-url":
          return o;
        case "same-origin":
          return i ? n : "no-referrer";
        case "origin-when-cross-origin":
          return i ? o : n;
        case "strict-origin-when-cross-origin": {
          const r = requestCurrentURL(e);
          if (sameOrigin(o, r)) {
            return o;
          }
          if (isURLPotentiallyTrustworthy(o) && !isURLPotentiallyTrustworthy(r)) {
            return "no-referrer";
          }
          return n;
        }
        case "strict-origin":
        case "no-referrer-when-downgrade":
        default:
          return l ? "no-referrer" : n;
      }
    }
    function stripURLForReferrer(e, r) {
      w(e instanceof URL);
      if (e.protocol === "file:" || e.protocol === "about:" || e.protocol === "blank:") {
        return "no-referrer";
      }
      e.username = "";
      e.password = "";
      e.hash = "";
      if (r) {
        e.pathname = "";
        e.search = "";
      }
      return e;
    }
    function isURLPotentiallyTrustworthy(e) {
      if (!(e instanceof URL)) {
        return false;
      }
      if (e.href === "about:blank" || e.href === "about:srcdoc") {
        return true;
      }
      if (e.protocol === "data:") return true;
      if (e.protocol === "file:") return true;
      return isOriginPotentiallyTrustworthy(e.origin);
      function isOriginPotentiallyTrustworthy(e) {
        if (e == null || e === "null") return false;
        const r = new URL(e);
        if (r.protocol === "https:" || r.protocol === "wss:") {
          return true;
        }
        if (
          /^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(r.hostname) ||
          r.hostname === "localhost" ||
          r.hostname.includes("localhost.") ||
          r.hostname.endsWith(".localhost")
        ) {
          return true;
        }
        return false;
      }
    }
    function bytesMatch(e, r) {
      if (M === undefined) {
        return true;
      }
      const s = parseMetadata(r);
      if (s === "no metadata") {
        return true;
      }
      if (s.length === 0) {
        return true;
      }
      const o = getStrongestMetadata(s);
      const n = filterMetadataListByAlgorithm(s, o);
      for (const r of n) {
        const s = r.algo;
        const o = r.hash;
        let n = M.createHash(s).update(e).digest("base64");
        if (n[n.length - 1] === "=") {
          if (n[n.length - 2] === "=") {
            n = n.slice(0, -2);
          } else {
            n = n.slice(0, -1);
          }
        }
        if (compareBase64Mixed(n, o)) {
          return true;
        }
      }
      return false;
    }
    const j = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i;
    function parseMetadata(e) {
      const r = [];
      let s = true;
      for (const o of e.split(" ")) {
        s = false;
        const e = j.exec(o);
        if (e === null || e.groups === undefined || e.groups.algo === undefined) {
          continue;
        }
        const n = e.groups.algo.toLowerCase();
        if (_.includes(n)) {
          r.push(e.groups);
        }
      }
      if (s === true) {
        return "no metadata";
      }
      return r;
    }
    function getStrongestMetadata(e) {
      let r = e[0].algo;
      if (r[3] === "5") {
        return r;
      }
      for (let s = 1; s < e.length; ++s) {
        const o = e[s];
        if (o.algo[3] === "5") {
          r = "sha512";
          break;
        } else if (r[3] === "3") {
          continue;
        } else if (o.algo[3] === "3") {
          r = "sha384";
        }
      }
      return r;
    }
    function filterMetadataListByAlgorithm(e, r) {
      if (e.length === 1) {
        return e;
      }
      let s = 0;
      for (let o = 0; o < e.length; ++o) {
        if (e[o].algo === r) {
          e[s++] = e[o];
        }
      }
      e.length = s;
      return e;
    }
    function compareBase64Mixed(e, r) {
      if (e.length !== r.length) {
        return false;
      }
      for (let s = 0; s < e.length; ++s) {
        if (e[s] !== r[s]) {
          if ((e[s] === "+" && r[s] === "-") || (e[s] === "/" && r[s] === "_")) {
            continue;
          }
          return false;
        }
      }
      return true;
    }
    function tryUpgradeRequestToAPotentiallyTrustworthyURL(e) {}
    function sameOrigin(e, r) {
      if (e.origin === r.origin && e.origin === "null") {
        return true;
      }
      if (e.protocol === r.protocol && e.hostname === r.hostname && e.port === r.port) {
        return true;
      }
      return false;
    }
    function createDeferredPromise() {
      let e;
      let r;
      const s = new Promise((s, o) => {
        e = s;
        r = o;
      });
      return { promise: s, resolve: e, reject: r };
    }
    function isAborted(e) {
      return e.controller.state === "aborted";
    }
    function isCancelled(e) {
      return e.controller.state === "aborted" || e.controller.state === "terminated";
    }
    const q = {
      delete: "DELETE",
      DELETE: "DELETE",
      get: "GET",
      GET: "GET",
      head: "HEAD",
      HEAD: "HEAD",
      options: "OPTIONS",
      OPTIONS: "OPTIONS",
      post: "POST",
      POST: "POST",
      put: "PUT",
      PUT: "PUT",
    };
    Object.setPrototypeOf(q, null);
    function normalizeMethod(e) {
      return q[e.toLowerCase()] ?? e;
    }
    function serializeJavascriptValueToJSONString(e) {
      const r = JSON.stringify(e);
      if (r === undefined) {
        throw new TypeError("Value is not JSON serializable");
      }
      w(typeof r === "string");
      return r;
    }
    const $ = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
    function makeIterator(e, r, s) {
      const o = { index: 0, kind: s, target: e };
      const n = {
        next() {
          if (Object.getPrototypeOf(this) !== n) {
            throw new TypeError(`'next' called on an object that does not implement interface ${r} Iterator.`);
          }
          const { index: e, kind: s, target: i } = o;
          const a = i();
          const l = a.length;
          if (e >= l) {
            return { value: undefined, done: true };
          }
          const d = a[e];
          o.index = e + 1;
          return iteratorResult(d, s);
        },
        [Symbol.toStringTag]: `${r} Iterator`,
      };
      Object.setPrototypeOf(n, $);
      return Object.setPrototypeOf({}, n);
    }
    function iteratorResult(e, r) {
      let s;
      switch (r) {
        case "key": {
          s = e[0];
          break;
        }
        case "value": {
          s = e[1];
          break;
        }
        case "key+value": {
          s = e;
          break;
        }
      }
      return { value: s, done: false };
    }
    async function fullyReadBody(e, r, s) {
      const o = r;
      const n = s;
      let i;
      try {
        i = e.stream.getReader();
      } catch (e) {
        n(e);
        return;
      }
      try {
        const e = await readAllBytes(i);
        o(e);
      } catch (e) {
        n(e);
      }
    }
    let ee = globalThis.ReadableStream;
    function isReadableStreamLike(e) {
      if (!ee) {
        ee = s(3774).ReadableStream;
      }
      return e instanceof ee || (e[Symbol.toStringTag] === "ReadableStream" && typeof e.tee === "function");
    }
    const te = 65535;
    function isomorphicDecode(e) {
      if (e.length < te) {
        return String.fromCharCode(...e);
      }
      return e.reduce((e, r) => e + String.fromCharCode(r), "");
    }
    function readableStreamClose(e) {
      try {
        e.close();
      } catch (e) {
        if (!e.message.includes("Controller is already closed")) {
          throw e;
        }
      }
    }
    function isomorphicEncode(e) {
      for (let r = 0; r < e.length; r++) {
        w(e.charCodeAt(r) <= 255);
      }
      return e;
    }
    async function readAllBytes(e) {
      const r = [];
      let s = 0;
      while (true) {
        const { done: o, value: n } = await e.read();
        if (o) {
          return Buffer.concat(r, s);
        }
        if (!k(n)) {
          throw new TypeError("Received non-Uint8Array chunk");
        }
        r.push(n);
        s += n.length;
      }
    }
    function urlIsLocal(e) {
      w("protocol" in e);
      const r = e.protocol;
      return r === "about:" || r === "blob:" || r === "data:";
    }
    function urlHasHttpsScheme(e) {
      if (typeof e === "string") {
        return e.startsWith("https:");
      }
      return e.protocol === "https:";
    }
    function urlIsHttpHttpsScheme(e) {
      w("protocol" in e);
      const r = e.protocol;
      return r === "http:" || r === "https:";
    }
    const re = Object.hasOwn || ((e, r) => Object.prototype.hasOwnProperty.call(e, r));
    e.exports = {
      isAborted: isAborted,
      isCancelled: isCancelled,
      createDeferredPromise: createDeferredPromise,
      ReadableStreamFrom: p,
      toUSVString: h,
      tryUpgradeRequestToAPotentiallyTrustworthyURL: tryUpgradeRequestToAPotentiallyTrustworthyURL,
      coarsenedSharedCurrentTime: coarsenedSharedCurrentTime,
      determineRequestsReferrer: determineRequestsReferrer,
      makePolicyContainer: makePolicyContainer,
      clonePolicyContainer: clonePolicyContainer,
      appendFetchMetadata: appendFetchMetadata,
      appendRequestOriginHeader: appendRequestOriginHeader,
      TAOCheck: TAOCheck,
      corsCheck: corsCheck,
      crossOriginResourcePolicyCheck: crossOriginResourcePolicyCheck,
      createOpaqueTimingInfo: createOpaqueTimingInfo,
      setRequestReferrerPolicyOnRedirect: setRequestReferrerPolicyOnRedirect,
      isValidHTTPToken: isValidHTTPToken,
      requestBadPort: requestBadPort,
      requestCurrentURL: requestCurrentURL,
      responseURL: responseURL,
      responseLocationURL: responseLocationURL,
      isBlobLike: d,
      isURLPotentiallyTrustworthy: isURLPotentiallyTrustworthy,
      isValidReasonPhrase: isValidReasonPhrase,
      sameOrigin: sameOrigin,
      normalizeMethod: normalizeMethod,
      serializeJavascriptValueToJSONString: serializeJavascriptValueToJSONString,
      makeIterator: makeIterator,
      isValidHeaderName: isValidHeaderName,
      isValidHeaderValue: isValidHeaderValue,
      hasOwn: re,
      isErrorLike: isErrorLike,
      fullyReadBody: fullyReadBody,
      bytesMatch: bytesMatch,
      isReadableStreamLike: isReadableStreamLike,
      readableStreamClose: readableStreamClose,
      isomorphicEncode: isomorphicEncode,
      isomorphicDecode: isomorphicDecode,
      urlIsLocal: urlIsLocal,
      urlHasHttpsScheme: urlHasHttpsScheme,
      urlIsHttpHttpsScheme: urlIsHttpHttpsScheme,
      readAllBytes: readAllBytes,
      normalizeMethodRecord: q,
      parseMetadata: parseMetadata,
    };
  },
  4222: (e, r, s) => {
    const { types: o } = s(9023);
    const { hasOwn: n, toUSVString: i } = s(5523);
    const a = {};
    a.converters = {};
    a.util = {};
    a.errors = {};
    a.errors.exception = function (e) {
      return new TypeError(`${e.header}: ${e.message}`);
    };
    a.errors.conversionFailed = function (e) {
      const r = e.types.length === 1 ? "" : " one of";
      const s = `${e.argument} could not be converted to` + `${r}: ${e.types.join(", ")}.`;
      return a.errors.exception({ header: e.prefix, message: s });
    };
    a.errors.invalidArgument = function (e) {
      return a.errors.exception({ header: e.prefix, message: `"${e.value}" is an invalid ${e.type}.` });
    };
    a.brandCheck = function (e, r, s = undefined) {
      if (s?.strict !== false && !(e instanceof r)) {
        throw new TypeError("Illegal invocation");
      } else {
        return e?.[Symbol.toStringTag] === r.prototype[Symbol.toStringTag];
      }
    };
    a.argumentLengthCheck = function ({ length: e }, r, s) {
      if (e < r) {
        throw a.errors.exception({ message: `${r} argument${r !== 1 ? "s" : ""} required, ` + `but${e ? " only" : ""} ${e} found.`, ...s });
      }
    };
    a.illegalConstructor = function () {
      throw a.errors.exception({ header: "TypeError", message: "Illegal constructor" });
    };
    a.util.Type = function (e) {
      switch (typeof e) {
        case "undefined":
          return "Undefined";
        case "boolean":
          return "Boolean";
        case "string":
          return "String";
        case "symbol":
          return "Symbol";
        case "number":
          return "Number";
        case "bigint":
          return "BigInt";
        case "function":
        case "object": {
          if (e === null) {
            return "Null";
          }
          return "Object";
        }
      }
    };
    a.util.ConvertToInt = function (e, r, s, o = {}) {
      let n;
      let i;
      if (r === 64) {
        n = Math.pow(2, 53) - 1;
        if (s === "unsigned") {
          i = 0;
        } else {
          i = Math.pow(-2, 53) + 1;
        }
      } else if (s === "unsigned") {
        i = 0;
        n = Math.pow(2, r) - 1;
      } else {
        i = Math.pow(-2, r) - 1;
        n = Math.pow(2, r - 1) - 1;
      }
      let l = Number(e);
      if (l === 0) {
        l = 0;
      }
      if (o.enforceRange === true) {
        if (Number.isNaN(l) || l === Number.POSITIVE_INFINITY || l === Number.NEGATIVE_INFINITY) {
          throw a.errors.exception({ header: "Integer conversion", message: `Could not convert ${e} to an integer.` });
        }
        l = a.util.IntegerPart(l);
        if (l < i || l > n) {
          throw a.errors.exception({ header: "Integer conversion", message: `Value must be between ${i}-${n}, got ${l}.` });
        }
        return l;
      }
      if (!Number.isNaN(l) && o.clamp === true) {
        l = Math.min(Math.max(l, i), n);
        if (Math.floor(l) % 2 === 0) {
          l = Math.floor(l);
        } else {
          l = Math.ceil(l);
        }
        return l;
      }
      if (Number.isNaN(l) || (l === 0 && Object.is(0, l)) || l === Number.POSITIVE_INFINITY || l === Number.NEGATIVE_INFINITY) {
        return 0;
      }
      l = a.util.IntegerPart(l);
      l = l % Math.pow(2, r);
      if (s === "signed" && l >= Math.pow(2, r) - 1) {
        return l - Math.pow(2, r);
      }
      return l;
    };
    a.util.IntegerPart = function (e) {
      const r = Math.floor(Math.abs(e));
      if (e < 0) {
        return -1 * r;
      }
      return r;
    };
    a.sequenceConverter = function (e) {
      return (r) => {
        if (a.util.Type(r) !== "Object") {
          throw a.errors.exception({ header: "Sequence", message: `Value of type ${a.util.Type(r)} is not an Object.` });
        }
        const s = r?.[Symbol.iterator]?.();
        const o = [];
        if (s === undefined || typeof s.next !== "function") {
          throw a.errors.exception({ header: "Sequence", message: "Object is not an iterator." });
        }
        while (true) {
          const { done: r, value: n } = s.next();
          if (r) {
            break;
          }
          o.push(e(n));
        }
        return o;
      };
    };
    a.recordConverter = function (e, r) {
      return (s) => {
        if (a.util.Type(s) !== "Object") {
          throw a.errors.exception({ header: "Record", message: `Value of type ${a.util.Type(s)} is not an Object.` });
        }
        const n = {};
        if (!o.isProxy(s)) {
          const o = Object.keys(s);
          for (const i of o) {
            const o = e(i);
            const a = r(s[i]);
            n[o] = a;
          }
          return n;
        }
        const i = Reflect.ownKeys(s);
        for (const o of i) {
          const i = Reflect.getOwnPropertyDescriptor(s, o);
          if (i?.enumerable) {
            const i = e(o);
            const a = r(s[o]);
            n[i] = a;
          }
        }
        return n;
      };
    };
    a.interfaceConverter = function (e) {
      return (r, s = {}) => {
        if (s.strict !== false && !(r instanceof e)) {
          throw a.errors.exception({ header: e.name, message: `Expected ${r} to be an instance of ${e.name}.` });
        }
        return r;
      };
    };
    a.dictionaryConverter = function (e) {
      return (r) => {
        const s = a.util.Type(r);
        const o = {};
        if (s === "Null" || s === "Undefined") {
          return o;
        } else if (s !== "Object") {
          throw a.errors.exception({ header: "Dictionary", message: `Expected ${r} to be one of: Null, Undefined, Object.` });
        }
        for (const s of e) {
          const { key: e, defaultValue: i, required: l, converter: d } = s;
          if (l === true) {
            if (!n(r, e)) {
              throw a.errors.exception({ header: "Dictionary", message: `Missing required key "${e}".` });
            }
          }
          let h = r[e];
          const p = n(s, "defaultValue");
          if (p && h !== null) {
            h = h ?? i;
          }
          if (l || p || h !== undefined) {
            h = d(h);
            if (s.allowedValues && !s.allowedValues.includes(h)) {
              throw a.errors.exception({ header: "Dictionary", message: `${h} is not an accepted type. Expected one of ${s.allowedValues.join(", ")}.` });
            }
            o[e] = h;
          }
        }
        return o;
      };
    };
    a.nullableConverter = function (e) {
      return (r) => {
        if (r === null) {
          return r;
        }
        return e(r);
      };
    };
    a.converters.DOMString = function (e, r = {}) {
      if (e === null && r.legacyNullToEmptyString) {
        return "";
      }
      if (typeof e === "symbol") {
        throw new TypeError("Could not convert argument of type symbol to string.");
      }
      return String(e);
    };
    a.converters.ByteString = function (e) {
      const r = a.converters.DOMString(e);
      for (let e = 0; e < r.length; e++) {
        if (r.charCodeAt(e) > 255) {
          throw new TypeError(
            "Cannot convert argument to a ByteString because the character at " + `index ${e} has a value of ${r.charCodeAt(e)} which is greater than 255.`
          );
        }
      }
      return r;
    };
    a.converters.USVString = i;
    a.converters.boolean = function (e) {
      const r = Boolean(e);
      return r;
    };
    a.converters.any = function (e) {
      return e;
    };
    a.converters["long long"] = function (e) {
      const r = a.util.ConvertToInt(e, 64, "signed");
      return r;
    };
    a.converters["unsigned long long"] = function (e) {
      const r = a.util.ConvertToInt(e, 64, "unsigned");
      return r;
    };
    a.converters["unsigned long"] = function (e) {
      const r = a.util.ConvertToInt(e, 32, "unsigned");
      return r;
    };
    a.converters["unsigned short"] = function (e, r) {
      const s = a.util.ConvertToInt(e, 16, "unsigned", r);
      return s;
    };
    a.converters.ArrayBuffer = function (e, r = {}) {
      if (a.util.Type(e) !== "Object" || !o.isAnyArrayBuffer(e)) {
        throw a.errors.conversionFailed({ prefix: `${e}`, argument: `${e}`, types: ["ArrayBuffer"] });
      }
      if (r.allowShared === false && o.isSharedArrayBuffer(e)) {
        throw a.errors.exception({ header: "ArrayBuffer", message: "SharedArrayBuffer is not allowed." });
      }
      return e;
    };
    a.converters.TypedArray = function (e, r, s = {}) {
      if (a.util.Type(e) !== "Object" || !o.isTypedArray(e) || e.constructor.name !== r.name) {
        throw a.errors.conversionFailed({ prefix: `${r.name}`, argument: `${e}`, types: [r.name] });
      }
      if (s.allowShared === false && o.isSharedArrayBuffer(e.buffer)) {
        throw a.errors.exception({ header: "ArrayBuffer", message: "SharedArrayBuffer is not allowed." });
      }
      return e;
    };
    a.converters.DataView = function (e, r = {}) {
      if (a.util.Type(e) !== "Object" || !o.isDataView(e)) {
        throw a.errors.exception({ header: "DataView", message: "Object is not a DataView." });
      }
      if (r.allowShared === false && o.isSharedArrayBuffer(e.buffer)) {
        throw a.errors.exception({ header: "ArrayBuffer", message: "SharedArrayBuffer is not allowed." });
      }
      return e;
    };
    a.converters.BufferSource = function (e, r = {}) {
      if (o.isAnyArrayBuffer(e)) {
        return a.converters.ArrayBuffer(e, r);
      }
      if (o.isTypedArray(e)) {
        return a.converters.TypedArray(e, e.constructor);
      }
      if (o.isDataView(e)) {
        return a.converters.DataView(e, r);
      }
      throw new TypeError(`Could not convert ${e} to a BufferSource.`);
    };
    a.converters["sequence<ByteString>"] = a.sequenceConverter(a.converters.ByteString);
    a.converters["sequence<sequence<ByteString>>"] = a.sequenceConverter(a.converters["sequence<ByteString>"]);
    a.converters["record<ByteString, ByteString>"] = a.recordConverter(a.converters.ByteString, a.converters.ByteString);
    e.exports = { webidl: a };
  },
  396: (e) => {
    function getEncoding(e) {
      if (!e) {
        return "failure";
      }
      switch (e.trim().toLowerCase()) {
        case "unicode-1-1-utf-8":
        case "unicode11utf8":
        case "unicode20utf8":
        case "utf-8":
        case "utf8":
        case "x-unicode20utf8":
          return "UTF-8";
        case "866":
        case "cp866":
        case "csibm866":
        case "ibm866":
          return "IBM866";
        case "csisolatin2":
        case "iso-8859-2":
        case "iso-ir-101":
        case "iso8859-2":
        case "iso88592":
        case "iso_8859-2":
        case "iso_8859-2:1987":
        case "l2":
        case "latin2":
          return "ISO-8859-2";
        case "csisolatin3":
        case "iso-8859-3":
        case "iso-ir-109":
        case "iso8859-3":
        case "iso88593":
        case "iso_8859-3":
        case "iso_8859-3:1988":
        case "l3":
        case "latin3":
          return "ISO-8859-3";
        case "csisolatin4":
        case "iso-8859-4":
        case "iso-ir-110":
        case "iso8859-4":
        case "iso88594":
        case "iso_8859-4":
        case "iso_8859-4:1988":
        case "l4":
        case "latin4":
          return "ISO-8859-4";
        case "csisolatincyrillic":
        case "cyrillic":
        case "iso-8859-5":
        case "iso-ir-144":
        case "iso8859-5":
        case "iso88595":
        case "iso_8859-5":
        case "iso_8859-5:1988":
          return "ISO-8859-5";
        case "arabic":
        case "asmo-708":
        case "csiso88596e":
        case "csiso88596i":
        case "csisolatinarabic":
        case "ecma-114":
        case "iso-8859-6":
        case "iso-8859-6-e":
        case "iso-8859-6-i":
        case "iso-ir-127":
        case "iso8859-6":
        case "iso88596":
        case "iso_8859-6":
        case "iso_8859-6:1987":
          return "ISO-8859-6";
        case "csisolatingreek":
        case "ecma-118":
        case "elot_928":
        case "greek":
        case "greek8":
        case "iso-8859-7":
        case "iso-ir-126":
        case "iso8859-7":
        case "iso88597":
        case "iso_8859-7":
        case "iso_8859-7:1987":
        case "sun_eu_greek":
          return "ISO-8859-7";
        case "csiso88598e":
        case "csisolatinhebrew":
        case "hebrew":
        case "iso-8859-8":
        case "iso-8859-8-e":
        case "iso-ir-138":
        case "iso8859-8":
        case "iso88598":
        case "iso_8859-8":
        case "iso_8859-8:1988":
        case "visual":
          return "ISO-8859-8";
        case "csiso88598i":
        case "iso-8859-8-i":
        case "logical":
          return "ISO-8859-8-I";
        case "csisolatin6":
        case "iso-8859-10":
        case "iso-ir-157":
        case "iso8859-10":
        case "iso885910":
        case "l6":
        case "latin6":
          return "ISO-8859-10";
        case "iso-8859-13":
        case "iso8859-13":
        case "iso885913":
          return "ISO-8859-13";
        case "iso-8859-14":
        case "iso8859-14":
        case "iso885914":
          return "ISO-8859-14";
        case "csisolatin9":
        case "iso-8859-15":
        case "iso8859-15":
        case "iso885915":
        case "iso_8859-15":
        case "l9":
          return "ISO-8859-15";
        case "iso-8859-16":
          return "ISO-8859-16";
        case "cskoi8r":
        case "koi":
        case "koi8":
        case "koi8-r":
        case "koi8_r":
          return "KOI8-R";
        case "koi8-ru":
        case "koi8-u":
          return "KOI8-U";
        case "csmacintosh":
        case "mac":
        case "macintosh":
        case "x-mac-roman":
          return "macintosh";
        case "iso-8859-11":
        case "iso8859-11":
        case "iso885911":
        case "tis-620":
        case "windows-874":
          return "windows-874";
        case "cp1250":
        case "windows-1250":
        case "x-cp1250":
          return "windows-1250";
        case "cp1251":
        case "windows-1251":
        case "x-cp1251":
          return "windows-1251";
        case "ansi_x3.4-1968":
        case "ascii":
        case "cp1252":
        case "cp819":
        case "csisolatin1":
        case "ibm819":
        case "iso-8859-1":
        case "iso-ir-100":
        case "iso8859-1":
        case "iso88591":
        case "iso_8859-1":
        case "iso_8859-1:1987":
        case "l1":
        case "latin1":
        case "us-ascii":
        case "windows-1252":
        case "x-cp1252":
          return "windows-1252";
        case "cp1253":
        case "windows-1253":
        case "x-cp1253":
          return "windows-1253";
        case "cp1254":
        case "csisolatin5":
        case "iso-8859-9":
        case "iso-ir-148":
        case "iso8859-9":
        case "iso88599":
        case "iso_8859-9":
        case "iso_8859-9:1989":
        case "l5":
        case "latin5":
        case "windows-1254":
        case "x-cp1254":
          return "windows-1254";
        case "cp1255":
        case "windows-1255":
        case "x-cp1255":
          return "windows-1255";
        case "cp1256":
        case "windows-1256":
        case "x-cp1256":
          return "windows-1256";
        case "cp1257":
        case "windows-1257":
        case "x-cp1257":
          return "windows-1257";
        case "cp1258":
        case "windows-1258":
        case "x-cp1258":
          return "windows-1258";
        case "x-mac-cyrillic":
        case "x-mac-ukrainian":
          return "x-mac-cyrillic";
        case "chinese":
        case "csgb2312":
        case "csiso58gb231280":
        case "gb2312":
        case "gb_2312":
        case "gb_2312-80":
        case "gbk":
        case "iso-ir-58":
        case "x-gbk":
          return "GBK";
        case "gb18030":
          return "gb18030";
        case "big5":
        case "big5-hkscs":
        case "cn-big5":
        case "csbig5":
        case "x-x-big5":
          return "Big5";
        case "cseucpkdfmtjapanese":
        case "euc-jp":
        case "x-euc-jp":
          return "EUC-JP";
        case "csiso2022jp":
        case "iso-2022-jp":
          return "ISO-2022-JP";
        case "csshiftjis":
        case "ms932":
        case "ms_kanji":
        case "shift-jis":
        case "shift_jis":
        case "sjis":
        case "windows-31j":
        case "x-sjis":
          return "Shift_JIS";
        case "cseuckr":
        case "csksc56011987":
        case "euc-kr":
        case "iso-ir-149":
        case "korean":
        case "ks_c_5601-1987":
        case "ks_c_5601-1989":
        case "ksc5601":
        case "ksc_5601":
        case "windows-949":
          return "EUC-KR";
        case "csiso2022kr":
        case "hz-gb-2312":
        case "iso-2022-cn":
        case "iso-2022-cn-ext":
        case "iso-2022-kr":
        case "replacement":
          return "replacement";
        case "unicodefffe":
        case "utf-16be":
          return "UTF-16BE";
        case "csunicode":
        case "iso-10646-ucs-2":
        case "ucs-2":
        case "unicode":
        case "unicodefeff":
        case "utf-16":
        case "utf-16le":
          return "UTF-16LE";
        case "x-user-defined":
          return "x-user-defined";
        default:
          return "failure";
      }
    }
    e.exports = { getEncoding: getEncoding };
  },
  2160: (e, r, s) => {
    const { staticPropertyDescriptors: o, readOperation: n, fireAProgressEvent: i } = s(165);
    const { kState: a, kError: l, kResult: d, kEvents: h, kAborted: p } = s(6812);
    const { webidl: w } = s(4222);
    const { kEnumerableProperty: k } = s(3440);
    class FileReader extends EventTarget {
      constructor() {
        super();
        this[a] = "empty";
        this[d] = null;
        this[l] = null;
        this[h] = { loadend: null, error: null, abort: null, load: null, progress: null, loadstart: null };
      }
      readAsArrayBuffer(e) {
        w.brandCheck(this, FileReader);
        w.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsArrayBuffer" });
        e = w.converters.Blob(e, { strict: false });
        n(this, e, "ArrayBuffer");
      }
      readAsBinaryString(e) {
        w.brandCheck(this, FileReader);
        w.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsBinaryString" });
        e = w.converters.Blob(e, { strict: false });
        n(this, e, "BinaryString");
      }
      readAsText(e, r = undefined) {
        w.brandCheck(this, FileReader);
        w.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsText" });
        e = w.converters.Blob(e, { strict: false });
        if (r !== undefined) {
          r = w.converters.DOMString(r);
        }
        n(this, e, "Text", r);
      }
      readAsDataURL(e) {
        w.brandCheck(this, FileReader);
        w.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsDataURL" });
        e = w.converters.Blob(e, { strict: false });
        n(this, e, "DataURL");
      }
      abort() {
        if (this[a] === "empty" || this[a] === "done") {
          this[d] = null;
          return;
        }
        if (this[a] === "loading") {
          this[a] = "done";
          this[d] = null;
        }
        this[p] = true;
        i("abort", this);
        if (this[a] !== "loading") {
          i("loadend", this);
        }
      }
      get readyState() {
        w.brandCheck(this, FileReader);
        switch (this[a]) {
          case "empty":
            return this.EMPTY;
          case "loading":
            return this.LOADING;
          case "done":
            return this.DONE;
        }
      }
      get result() {
        w.brandCheck(this, FileReader);
        return this[d];
      }
      get error() {
        w.brandCheck(this, FileReader);
        return this[l];
      }
      get onloadend() {
        w.brandCheck(this, FileReader);
        return this[h].loadend;
      }
      set onloadend(e) {
        w.brandCheck(this, FileReader);
        if (this[h].loadend) {
          this.removeEventListener("loadend", this[h].loadend);
        }
        if (typeof e === "function") {
          this[h].loadend = e;
          this.addEventListener("loadend", e);
        } else {
          this[h].loadend = null;
        }
      }
      get onerror() {
        w.brandCheck(this, FileReader);
        return this[h].error;
      }
      set onerror(e) {
        w.brandCheck(this, FileReader);
        if (this[h].error) {
          this.removeEventListener("error", this[h].error);
        }
        if (typeof e === "function") {
          this[h].error = e;
          this.addEventListener("error", e);
        } else {
          this[h].error = null;
        }
      }
      get onloadstart() {
        w.brandCheck(this, FileReader);
        return this[h].loadstart;
      }
      set onloadstart(e) {
        w.brandCheck(this, FileReader);
        if (this[h].loadstart) {
          this.removeEventListener("loadstart", this[h].loadstart);
        }
        if (typeof e === "function") {
          this[h].loadstart = e;
          this.addEventListener("loadstart", e);
        } else {
          this[h].loadstart = null;
        }
      }
      get onprogress() {
        w.brandCheck(this, FileReader);
        return this[h].progress;
      }
      set onprogress(e) {
        w.brandCheck(this, FileReader);
        if (this[h].progress) {
          this.removeEventListener("progress", this[h].progress);
        }
        if (typeof e === "function") {
          this[h].progress = e;
          this.addEventListener("progress", e);
        } else {
          this[h].progress = null;
        }
      }
      get onload() {
        w.brandCheck(this, FileReader);
        return this[h].load;
      }
      set onload(e) {
        w.brandCheck(this, FileReader);
        if (this[h].load) {
          this.removeEventListener("load", this[h].load);
        }
        if (typeof e === "function") {
          this[h].load = e;
          this.addEventListener("load", e);
        } else {
          this[h].load = null;
        }
      }
      get onabort() {
        w.brandCheck(this, FileReader);
        return this[h].abort;
      }
      set onabort(e) {
        w.brandCheck(this, FileReader);
        if (this[h].abort) {
          this.removeEventListener("abort", this[h].abort);
        }
        if (typeof e === "function") {
          this[h].abort = e;
          this.addEventListener("abort", e);
        } else {
          this[h].abort = null;
        }
      }
    }
    FileReader.EMPTY = FileReader.prototype.EMPTY = 0;
    FileReader.LOADING = FileReader.prototype.LOADING = 1;
    FileReader.DONE = FileReader.prototype.DONE = 2;
    Object.defineProperties(FileReader.prototype, {
      EMPTY: o,
      LOADING: o,
      DONE: o,
      readAsArrayBuffer: k,
      readAsBinaryString: k,
      readAsText: k,
      readAsDataURL: k,
      abort: k,
      readyState: k,
      result: k,
      error: k,
      onloadstart: k,
      onprogress: k,
      onload: k,
      onabort: k,
      onerror: k,
      onloadend: k,
      [Symbol.toStringTag]: { value: "FileReader", writable: false, enumerable: false, configurable: true },
    });
    Object.defineProperties(FileReader, { EMPTY: o, LOADING: o, DONE: o });
    e.exports = { FileReader: FileReader };
  },
  5976: (e, r, s) => {
    const { webidl: o } = s(4222);
    const n = Symbol("ProgressEvent state");
    class ProgressEvent extends Event {
      constructor(e, r = {}) {
        e = o.converters.DOMString(e);
        r = o.converters.ProgressEventInit(r ?? {});
        super(e, r);
        this[n] = { lengthComputable: r.lengthComputable, loaded: r.loaded, total: r.total };
      }
      get lengthComputable() {
        o.brandCheck(this, ProgressEvent);
        return this[n].lengthComputable;
      }
      get loaded() {
        o.brandCheck(this, ProgressEvent);
        return this[n].loaded;
      }
      get total() {
        o.brandCheck(this, ProgressEvent);
        return this[n].total;
      }
    }
    o.converters.ProgressEventInit = o.dictionaryConverter([
      { key: "lengthComputable", converter: o.converters.boolean, defaultValue: false },
      { key: "loaded", converter: o.converters["unsigned long long"], defaultValue: 0 },
      { key: "total", converter: o.converters["unsigned long long"], defaultValue: 0 },
      { key: "bubbles", converter: o.converters.boolean, defaultValue: false },
      { key: "cancelable", converter: o.converters.boolean, defaultValue: false },
      { key: "composed", converter: o.converters.boolean, defaultValue: false },
    ]);
    e.exports = { ProgressEvent: ProgressEvent };
  },
  6812: (e) => {
    e.exports = {
      kState: Symbol("FileReader state"),
      kResult: Symbol("FileReader result"),
      kError: Symbol("FileReader error"),
      kLastProgressEventFired: Symbol("FileReader last progress event fired timestamp"),
      kEvents: Symbol("FileReader events"),
      kAborted: Symbol("FileReader aborted"),
    };
  },
  165: (e, r, s) => {
    const { kState: o, kError: n, kResult: i, kAborted: a, kLastProgressEventFired: l } = s(6812);
    const { ProgressEvent: d } = s(5976);
    const { getEncoding: h } = s(396);
    const { DOMException: p } = s(7326);
    const { serializeAMimeType: w, parseMIMEType: k } = s(4322);
    const { types: _ } = s(9023);
    const { StringDecoder: M } = s(3193);
    const { btoa: j } = s(181);
    const q = { enumerable: true, writable: false, configurable: false };
    function readOperation(e, r, s, d) {
      if (e[o] === "loading") {
        throw new p("Invalid state", "InvalidStateError");
      }
      e[o] = "loading";
      e[i] = null;
      e[n] = null;
      const h = r.stream();
      const w = h.getReader();
      const k = [];
      let M = w.read();
      let j = true;
      (async () => {
        while (!e[a]) {
          try {
            const { done: h, value: p } = await M;
            if (j && !e[a]) {
              queueMicrotask(() => {
                fireAProgressEvent("loadstart", e);
              });
            }
            j = false;
            if (!h && _.isUint8Array(p)) {
              k.push(p);
              if ((e[l] === undefined || Date.now() - e[l] >= 50) && !e[a]) {
                e[l] = Date.now();
                queueMicrotask(() => {
                  fireAProgressEvent("progress", e);
                });
              }
              M = w.read();
            } else if (h) {
              queueMicrotask(() => {
                e[o] = "done";
                try {
                  const o = packageData(k, s, r.type, d);
                  if (e[a]) {
                    return;
                  }
                  e[i] = o;
                  fireAProgressEvent("load", e);
                } catch (r) {
                  e[n] = r;
                  fireAProgressEvent("error", e);
                }
                if (e[o] !== "loading") {
                  fireAProgressEvent("loadend", e);
                }
              });
              break;
            }
          } catch (r) {
            if (e[a]) {
              return;
            }
            queueMicrotask(() => {
              e[o] = "done";
              e[n] = r;
              fireAProgressEvent("error", e);
              if (e[o] !== "loading") {
                fireAProgressEvent("loadend", e);
              }
            });
            break;
          }
        }
      })();
    }
    function fireAProgressEvent(e, r) {
      const s = new d(e, { bubbles: false, cancelable: false });
      r.dispatchEvent(s);
    }
    function packageData(e, r, s, o) {
      switch (r) {
        case "DataURL": {
          let r = "data:";
          const o = k(s || "application/octet-stream");
          if (o !== "failure") {
            r += w(o);
          }
          r += ";base64,";
          const n = new M("latin1");
          for (const s of e) {
            r += j(n.write(s));
          }
          r += j(n.end());
          return r;
        }
        case "Text": {
          let r = "failure";
          if (o) {
            r = h(o);
          }
          if (r === "failure" && s) {
            const e = k(s);
            if (e !== "failure") {
              r = h(e.parameters.get("charset"));
            }
          }
          if (r === "failure") {
            r = "UTF-8";
          }
          return decode(e, r);
        }
        case "ArrayBuffer": {
          const r = combineByteSequences(e);
          return r.buffer;
        }
        case "BinaryString": {
          let r = "";
          const s = new M("latin1");
          for (const o of e) {
            r += s.write(o);
          }
          r += s.end();
          return r;
        }
      }
    }
    function decode(e, r) {
      const s = combineByteSequences(e);
      const o = BOMSniffing(s);
      let n = 0;
      if (o !== null) {
        r = o;
        n = o === "UTF-8" ? 3 : 2;
      }
      const i = s.slice(n);
      return new TextDecoder(r).decode(i);
    }
    function BOMSniffing(e) {
      const [r, s, o] = e;
      if (r === 239 && s === 187 && o === 191) {
        return "UTF-8";
      } else if (r === 254 && s === 255) {
        return "UTF-16BE";
      } else if (r === 255 && s === 254) {
        return "UTF-16LE";
      }
      return null;
    }
    function combineByteSequences(e) {
      const r = e.reduce((e, r) => e + r.byteLength, 0);
      let s = 0;
      return e.reduce((e, r) => {
        e.set(r, s);
        s += r.byteLength;
        return e;
      }, new Uint8Array(r));
    }
    e.exports = { staticPropertyDescriptors: q, readOperation: readOperation, fireAProgressEvent: fireAProgressEvent };
  },
  2581: (e, r, s) => {
    const o = Symbol.for("undici.globalDispatcher.1");
    const { InvalidArgumentError: n } = s(8707);
    const i = s(9965);
    if (getGlobalDispatcher() === undefined) {
      setGlobalDispatcher(new i());
    }
    function setGlobalDispatcher(e) {
      if (!e || typeof e.dispatch !== "function") {
        throw new n("Argument agent must implement Agent");
      }
      Object.defineProperty(globalThis, o, { value: e, writable: true, enumerable: false, configurable: false });
    }
    function getGlobalDispatcher() {
      return globalThis[o];
    }
    e.exports = { setGlobalDispatcher: setGlobalDispatcher, getGlobalDispatcher: getGlobalDispatcher };
  },
  8840: (e) => {
    e.exports = class DecoratorHandler {
      constructor(e) {
        this.handler = e;
      }
      onConnect(...e) {
        return this.handler.onConnect(...e);
      }
      onError(...e) {
        return this.handler.onError(...e);
      }
      onUpgrade(...e) {
        return this.handler.onUpgrade(...e);
      }
      onHeaders(...e) {
        return this.handler.onHeaders(...e);
      }
      onData(...e) {
        return this.handler.onData(...e);
      }
      onComplete(...e) {
        return this.handler.onComplete(...e);
      }
      onBodySent(...e) {
        return this.handler.onBodySent(...e);
      }
    };
  },
  8299: (e, r, s) => {
    const o = s(3440);
    const { kBodyUsed: n } = s(6443);
    const i = s(2613);
    const { InvalidArgumentError: a } = s(8707);
    const l = s(4434);
    const d = [300, 301, 302, 303, 307, 308];
    const h = Symbol("body");
    class BodyAsyncIterable {
      constructor(e) {
        this[h] = e;
        this[n] = false;
      }
      async *[Symbol.asyncIterator]() {
        i(!this[n], "disturbed");
        this[n] = true;
        yield* this[h];
      }
    }
    class RedirectHandler {
      constructor(e, r, s, d) {
        if (r != null && (!Number.isInteger(r) || r < 0)) {
          throw new a("maxRedirections must be a positive number");
        }
        o.validateHandler(d, s.method, s.upgrade);
        this.dispatch = e;
        this.location = null;
        this.abort = null;
        this.opts = { ...s, maxRedirections: 0 };
        this.maxRedirections = r;
        this.handler = d;
        this.history = [];
        if (o.isStream(this.opts.body)) {
          if (o.bodyLength(this.opts.body) === 0) {
            this.opts.body.on("data", function () {
              i(false);
            });
          }
          if (typeof this.opts.body.readableDidRead !== "boolean") {
            this.opts.body[n] = false;
            l.prototype.on.call(this.opts.body, "data", function () {
              this[n] = true;
            });
          }
        } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") {
          this.opts.body = new BodyAsyncIterable(this.opts.body);
        } else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && o.isIterable(this.opts.body)) {
          this.opts.body = new BodyAsyncIterable(this.opts.body);
        }
      }
      onConnect(e) {
        this.abort = e;
        this.handler.onConnect(e, { history: this.history });
      }
      onUpgrade(e, r, s) {
        this.handler.onUpgrade(e, r, s);
      }
      onError(e) {
        this.handler.onError(e);
      }
      onHeaders(e, r, s, n) {
        this.location = this.history.length >= this.maxRedirections || o.isDisturbed(this.opts.body) ? null : parseLocation(e, r);
        if (this.opts.origin) {
          this.history.push(new URL(this.opts.path, this.opts.origin));
        }
        if (!this.location) {
          return this.handler.onHeaders(e, r, s, n);
        }
        const { origin: i, pathname: a, search: l } = o.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)));
        const d = l ? `${a}${l}` : a;
        this.opts.headers = cleanRequestHeaders(this.opts.headers, e === 303, this.opts.origin !== i);
        this.opts.path = d;
        this.opts.origin = i;
        this.opts.maxRedirections = 0;
        this.opts.query = null;
        if (e === 303 && this.opts.method !== "HEAD") {
          this.opts.method = "GET";
          this.opts.body = null;
        }
      }
      onData(e) {
        if (this.location) {
        } else {
          return this.handler.onData(e);
        }
      }
      onComplete(e) {
        if (this.location) {
          this.location = null;
          this.abort = null;
          this.dispatch(this.opts, this);
        } else {
          this.handler.onComplete(e);
        }
      }
      onBodySent(e) {
        if (this.handler.onBodySent) {
          this.handler.onBodySent(e);
        }
      }
    }
    function parseLocation(e, r) {
      if (d.indexOf(e) === -1) {
        return null;
      }
      for (let e = 0; e < r.length; e += 2) {
        if (r[e].toString().toLowerCase() === "location") {
          return r[e + 1];
        }
      }
    }
    function shouldRemoveHeader(e, r, s) {
      if (e.length === 4) {
        return o.headerNameToString(e) === "host";
      }
      if (r && o.headerNameToString(e).startsWith("content-")) {
        return true;
      }
      if (s && (e.length === 13 || e.length === 6 || e.length === 19)) {
        const r = o.headerNameToString(e);
        return r === "authorization" || r === "cookie" || r === "proxy-authorization";
      }
      return false;
    }
    function cleanRequestHeaders(e, r, s) {
      const o = [];
      if (Array.isArray(e)) {
        for (let n = 0; n < e.length; n += 2) {
          if (!shouldRemoveHeader(e[n], r, s)) {
            o.push(e[n], e[n + 1]);
          }
        }
      } else if (e && typeof e === "object") {
        for (const n of Object.keys(e)) {
          if (!shouldRemoveHeader(n, r, s)) {
            o.push(n, e[n]);
          }
        }
      } else {
        i(e == null, "headers must be an object or an array");
      }
      return o;
    }
    e.exports = RedirectHandler;
  },
  3573: (e, r, s) => {
    const o = s(2613);
    const { kRetryHandlerDefaultRetry: n } = s(6443);
    const { RequestRetryError: i } = s(8707);
    const { isDisturbed: a, parseHeaders: l, parseRangeHeader: d } = s(3440);
    function calculateRetryAfterHeader(e) {
      const r = Date.now();
      const s = new Date(e).getTime() - r;
      return s;
    }
    class RetryHandler {
      constructor(e, r) {
        const { retryOptions: s, ...o } = e;
        const { retry: i, maxRetries: a, maxTimeout: l, minTimeout: d, timeoutFactor: h, methods: p, errorCodes: w, retryAfter: k, statusCodes: _ } = s ?? {};
        this.dispatch = r.dispatch;
        this.handler = r.handler;
        this.opts = o;
        this.abort = null;
        this.aborted = false;
        this.retryOpts = {
          retry: i ?? RetryHandler[n],
          retryAfter: k ?? true,
          maxTimeout: l ?? 30 * 1e3,
          timeout: d ?? 500,
          timeoutFactor: h ?? 2,
          maxRetries: a ?? 5,
          methods: p ?? ["GET", "HEAD", "OPTIONS", "PUT", "DELETE", "TRACE"],
          statusCodes: _ ?? [500, 502, 503, 504, 429],
          errorCodes: w ?? ["ECONNRESET", "ECONNREFUSED", "ENOTFOUND", "ENETDOWN", "ENETUNREACH", "EHOSTDOWN", "EHOSTUNREACH", "EPIPE"],
        };
        this.retryCount = 0;
        this.start = 0;
        this.end = null;
        this.etag = null;
        this.resume = null;
        this.handler.onConnect((e) => {
          this.aborted = true;
          if (this.abort) {
            this.abort(e);
          } else {
            this.reason = e;
          }
        });
      }
      onRequestSent() {
        if (this.handler.onRequestSent) {
          this.handler.onRequestSent();
        }
      }
      onUpgrade(e, r, s) {
        if (this.handler.onUpgrade) {
          this.handler.onUpgrade(e, r, s);
        }
      }
      onConnect(e) {
        if (this.aborted) {
          e(this.reason);
        } else {
          this.abort = e;
        }
      }
      onBodySent(e) {
        if (this.handler.onBodySent) return this.handler.onBodySent(e);
      }
      static [n](e, { state: r, opts: s }, o) {
        const { statusCode: n, code: i, headers: a } = e;
        const { method: l, retryOptions: d } = s;
        const { maxRetries: h, timeout: p, maxTimeout: w, timeoutFactor: k, statusCodes: _, errorCodes: M, methods: j } = d;
        let { counter: q, currentTimeout: $ } = r;
        $ = $ != null && $ > 0 ? $ : p;
        if (i && i !== "UND_ERR_REQ_RETRY" && i !== "UND_ERR_SOCKET" && !M.includes(i)) {
          o(e);
          return;
        }
        if (Array.isArray(j) && !j.includes(l)) {
          o(e);
          return;
        }
        if (n != null && Array.isArray(_) && !_.includes(n)) {
          o(e);
          return;
        }
        if (q > h) {
          o(e);
          return;
        }
        let ee = a != null && a["retry-after"];
        if (ee) {
          ee = Number(ee);
          ee = isNaN(ee) ? calculateRetryAfterHeader(ee) : ee * 1e3;
        }
        const te = ee > 0 ? Math.min(ee, w) : Math.min($ * k ** q, w);
        r.currentTimeout = te;
        setTimeout(() => o(null), te);
      }
      onHeaders(e, r, s, n) {
        const a = l(r);
        this.retryCount += 1;
        if (e >= 300) {
          this.abort(new i("Request failed", e, { headers: a, count: this.retryCount }));
          return false;
        }
        if (this.resume != null) {
          this.resume = null;
          if (e !== 206) {
            return true;
          }
          const r = d(a["content-range"]);
          if (!r) {
            this.abort(new i("Content-Range mismatch", e, { headers: a, count: this.retryCount }));
            return false;
          }
          if (this.etag != null && this.etag !== a.etag) {
            this.abort(new i("ETag mismatch", e, { headers: a, count: this.retryCount }));
            return false;
          }
          const { start: n, size: l, end: h = l } = r;
          o(this.start === n, "content-range mismatch");
          o(this.end == null || this.end === h, "content-range mismatch");
          this.resume = s;
          return true;
        }
        if (this.end == null) {
          if (e === 206) {
            const i = d(a["content-range"]);
            if (i == null) {
              return this.handler.onHeaders(e, r, s, n);
            }
            const { start: l, size: h, end: p = h } = i;
            o(l != null && Number.isFinite(l) && this.start !== l, "content-range mismatch");
            o(Number.isFinite(l));
            o(p != null && Number.isFinite(p) && this.end !== p, "invalid content-length");
            this.start = l;
            this.end = p;
          }
          if (this.end == null) {
            const e = a["content-length"];
            this.end = e != null ? Number(e) : null;
          }
          o(Number.isFinite(this.start));
          o(this.end == null || Number.isFinite(this.end), "invalid content-length");
          this.resume = s;
          this.etag = a.etag != null ? a.etag : null;
          return this.handler.onHeaders(e, r, s, n);
        }
        const h = new i("Request failed", e, { headers: a, count: this.retryCount });
        this.abort(h);
        return false;
      }
      onData(e) {
        this.start += e.length;
        return this.handler.onData(e);
      }
      onComplete(e) {
        this.retryCount = 0;
        return this.handler.onComplete(e);
      }
      onError(e) {
        if (this.aborted || a(this.opts.body)) {
          return this.handler.onError(e);
        }
        this.retryOpts.retry(
          e,
          { state: { counter: this.retryCount++, currentTimeout: this.retryAfter }, opts: { retryOptions: this.retryOpts, ...this.opts } },
          onRetry.bind(this)
        );
        function onRetry(e) {
          if (e != null || this.aborted || a(this.opts.body)) {
            return this.handler.onError(e);
          }
          if (this.start !== 0) {
            this.opts = { ...this.opts, headers: { ...this.opts.headers, range: `bytes=${this.start}-${this.end ?? ""}` } };
          }
          try {
            this.dispatch(this.opts, this);
          } catch (e) {
            this.handler.onError(e);
          }
        }
      }
    }
    e.exports = RetryHandler;
  },
  4415: (e, r, s) => {
    const o = s(8299);
    function createRedirectInterceptor({ maxRedirections: e }) {
      return (r) =>
        function Intercept(s, n) {
          const { maxRedirections: i = e } = s;
          if (!i) {
            return r(s, n);
          }
          const a = new o(r, i, s, n);
          s = { ...s, maxRedirections: 0 };
          return r(s, a);
        };
    }
    e.exports = createRedirectInterceptor;
  },
  2824: (e, r, s) => {
    Object.defineProperty(r, "__esModule", { value: true });
    r.SPECIAL_HEADERS =
      r.HEADER_STATE =
      r.MINOR =
      r.MAJOR =
      r.CONNECTION_TOKEN_CHARS =
      r.HEADER_CHARS =
      r.TOKEN =
      r.STRICT_TOKEN =
      r.HEX =
      r.URL_CHAR =
      r.STRICT_URL_CHAR =
      r.USERINFO_CHARS =
      r.MARK =
      r.ALPHANUM =
      r.NUM =
      r.HEX_MAP =
      r.NUM_MAP =
      r.ALPHA =
      r.FINISH =
      r.H_METHOD_MAP =
      r.METHOD_MAP =
      r.METHODS_RTSP =
      r.METHODS_ICE =
      r.METHODS_HTTP =
      r.METHODS =
      r.LENIENT_FLAGS =
      r.FLAGS =
      r.TYPE =
      r.ERROR =
        void 0;
    const o = s(172);
    var n;
    (function (e) {
      e[(e["OK"] = 0)] = "OK";
      e[(e["INTERNAL"] = 1)] = "INTERNAL";
      e[(e["STRICT"] = 2)] = "STRICT";
      e[(e["LF_EXPECTED"] = 3)] = "LF_EXPECTED";
      e[(e["UNEXPECTED_CONTENT_LENGTH"] = 4)] = "UNEXPECTED_CONTENT_LENGTH";
      e[(e["CLOSED_CONNECTION"] = 5)] = "CLOSED_CONNECTION";
      e[(e["INVALID_METHOD"] = 6)] = "INVALID_METHOD";
      e[(e["INVALID_URL"] = 7)] = "INVALID_URL";
      e[(e["INVALID_CONSTANT"] = 8)] = "INVALID_CONSTANT";
      e[(e["INVALID_VERSION"] = 9)] = "INVALID_VERSION";
      e[(e["INVALID_HEADER_TOKEN"] = 10)] = "INVALID_HEADER_TOKEN";
      e[(e["INVALID_CONTENT_LENGTH"] = 11)] = "INVALID_CONTENT_LENGTH";
      e[(e["INVALID_CHUNK_SIZE"] = 12)] = "INVALID_CHUNK_SIZE";
      e[(e["INVALID_STATUS"] = 13)] = "INVALID_STATUS";
      e[(e["INVALID_EOF_STATE"] = 14)] = "INVALID_EOF_STATE";
      e[(e["INVALID_TRANSFER_ENCODING"] = 15)] = "INVALID_TRANSFER_ENCODING";
      e[(e["CB_MESSAGE_BEGIN"] = 16)] = "CB_MESSAGE_BEGIN";
      e[(e["CB_HEADERS_COMPLETE"] = 17)] = "CB_HEADERS_COMPLETE";
      e[(e["CB_MESSAGE_COMPLETE"] = 18)] = "CB_MESSAGE_COMPLETE";
      e[(e["CB_CHUNK_HEADER"] = 19)] = "CB_CHUNK_HEADER";
      e[(e["CB_CHUNK_COMPLETE"] = 20)] = "CB_CHUNK_COMPLETE";
      e[(e["PAUSED"] = 21)] = "PAUSED";
      e[(e["PAUSED_UPGRADE"] = 22)] = "PAUSED_UPGRADE";
      e[(e["PAUSED_H2_UPGRADE"] = 23)] = "PAUSED_H2_UPGRADE";
      e[(e["USER"] = 24)] = "USER";
    })((n = r.ERROR || (r.ERROR = {})));
    var i;
    (function (e) {
      e[(e["BOTH"] = 0)] = "BOTH";
      e[(e["REQUEST"] = 1)] = "REQUEST";
      e[(e["RESPONSE"] = 2)] = "RESPONSE";
    })((i = r.TYPE || (r.TYPE = {})));
    var a;
    (function (e) {
      e[(e["CONNECTION_KEEP_ALIVE"] = 1)] = "CONNECTION_KEEP_ALIVE";
      e[(e["CONNECTION_CLOSE"] = 2)] = "CONNECTION_CLOSE";
      e[(e["CONNECTION_UPGRADE"] = 4)] = "CONNECTION_UPGRADE";
      e[(e["CHUNKED"] = 8)] = "CHUNKED";
      e[(e["UPGRADE"] = 16)] = "UPGRADE";
      e[(e["CONTENT_LENGTH"] = 32)] = "CONTENT_LENGTH";
      e[(e["SKIPBODY"] = 64)] = "SKIPBODY";
      e[(e["TRAILING"] = 128)] = "TRAILING";
      e[(e["TRANSFER_ENCODING"] = 512)] = "TRANSFER_ENCODING";
    })((a = r.FLAGS || (r.FLAGS = {})));
    var l;
    (function (e) {
      e[(e["HEADERS"] = 1)] = "HEADERS";
      e[(e["CHUNKED_LENGTH"] = 2)] = "CHUNKED_LENGTH";
      e[(e["KEEP_ALIVE"] = 4)] = "KEEP_ALIVE";
    })((l = r.LENIENT_FLAGS || (r.LENIENT_FLAGS = {})));
    var d;
    (function (e) {
      e[(e["DELETE"] = 0)] = "DELETE";
      e[(e["GET"] = 1)] = "GET";
      e[(e["HEAD"] = 2)] = "HEAD";
      e[(e["POST"] = 3)] = "POST";
      e[(e["PUT"] = 4)] = "PUT";
      e[(e["CONNECT"] = 5)] = "CONNECT";
      e[(e["OPTIONS"] = 6)] = "OPTIONS";
      e[(e["TRACE"] = 7)] = "TRACE";
      e[(e["COPY"] = 8)] = "COPY";
      e[(e["LOCK"] = 9)] = "LOCK";
      e[(e["MKCOL"] = 10)] = "MKCOL";
      e[(e["MOVE"] = 11)] = "MOVE";
      e[(e["PROPFIND"] = 12)] = "PROPFIND";
      e[(e["PROPPATCH"] = 13)] = "PROPPATCH";
      e[(e["SEARCH"] = 14)] = "SEARCH";
      e[(e["UNLOCK"] = 15)] = "UNLOCK";
      e[(e["BIND"] = 16)] = "BIND";
      e[(e["REBIND"] = 17)] = "REBIND";
      e[(e["UNBIND"] = 18)] = "UNBIND";
      e[(e["ACL"] = 19)] = "ACL";
      e[(e["REPORT"] = 20)] = "REPORT";
      e[(e["MKACTIVITY"] = 21)] = "MKACTIVITY";
      e[(e["CHECKOUT"] = 22)] = "CHECKOUT";
      e[(e["MERGE"] = 23)] = "MERGE";
      e[(e["M-SEARCH"] = 24)] = "M-SEARCH";
      e[(e["NOTIFY"] = 25)] = "NOTIFY";
      e[(e["SUBSCRIBE"] = 26)] = "SUBSCRIBE";
      e[(e["UNSUBSCRIBE"] = 27)] = "UNSUBSCRIBE";
      e[(e["PATCH"] = 28)] = "PATCH";
      e[(e["PURGE"] = 29)] = "PURGE";
      e[(e["MKCALENDAR"] = 30)] = "MKCALENDAR";
      e[(e["LINK"] = 31)] = "LINK";
      e[(e["UNLINK"] = 32)] = "UNLINK";
      e[(e["SOURCE"] = 33)] = "SOURCE";
      e[(e["PRI"] = 34)] = "PRI";
      e[(e["DESCRIBE"] = 35)] = "DESCRIBE";
      e[(e["ANNOUNCE"] = 36)] = "ANNOUNCE";
      e[(e["SETUP"] = 37)] = "SETUP";
      e[(e["PLAY"] = 38)] = "PLAY";
      e[(e["PAUSE"] = 39)] = "PAUSE";
      e[(e["TEARDOWN"] = 40)] = "TEARDOWN";
      e[(e["GET_PARAMETER"] = 41)] = "GET_PARAMETER";
      e[(e["SET_PARAMETER"] = 42)] = "SET_PARAMETER";
      e[(e["REDIRECT"] = 43)] = "REDIRECT";
      e[(e["RECORD"] = 44)] = "RECORD";
      e[(e["FLUSH"] = 45)] = "FLUSH";
    })((d = r.METHODS || (r.METHODS = {})));
    r.METHODS_HTTP = [
      d.DELETE,
      d.GET,
      d.HEAD,
      d.POST,
      d.PUT,
      d.CONNECT,
      d.OPTIONS,
      d.TRACE,
      d.COPY,
      d.LOCK,
      d.MKCOL,
      d.MOVE,
      d.PROPFIND,
      d.PROPPATCH,
      d.SEARCH,
      d.UNLOCK,
      d.BIND,
      d.REBIND,
      d.UNBIND,
      d.ACL,
      d.REPORT,
      d.MKACTIVITY,
      d.CHECKOUT,
      d.MERGE,
      d["M-SEARCH"],
      d.NOTIFY,
      d.SUBSCRIBE,
      d.UNSUBSCRIBE,
      d.PATCH,
      d.PURGE,
      d.MKCALENDAR,
      d.LINK,
      d.UNLINK,
      d.PRI,
      d.SOURCE,
    ];
    r.METHODS_ICE = [d.SOURCE];
    r.METHODS_RTSP = [
      d.OPTIONS,
      d.DESCRIBE,
      d.ANNOUNCE,
      d.SETUP,
      d.PLAY,
      d.PAUSE,
      d.TEARDOWN,
      d.GET_PARAMETER,
      d.SET_PARAMETER,
      d.REDIRECT,
      d.RECORD,
      d.FLUSH,
      d.GET,
      d.POST,
    ];
    r.METHOD_MAP = o.enumToMap(d);
    r.H_METHOD_MAP = {};
    Object.keys(r.METHOD_MAP).forEach((e) => {
      if (/^H/.test(e)) {
        r.H_METHOD_MAP[e] = r.METHOD_MAP[e];
      }
    });
    var h;
    (function (e) {
      e[(e["SAFE"] = 0)] = "SAFE";
      e[(e["SAFE_WITH_CB"] = 1)] = "SAFE_WITH_CB";
      e[(e["UNSAFE"] = 2)] = "UNSAFE";
    })((h = r.FINISH || (r.FINISH = {})));
    r.ALPHA = [];
    for (let e = "A".charCodeAt(0); e <= "Z".charCodeAt(0); e++) {
      r.ALPHA.push(String.fromCharCode(e));
      r.ALPHA.push(String.fromCharCode(e + 32));
    }
    r.NUM_MAP = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9 };
    r.HEX_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      A: 10,
      B: 11,
      C: 12,
      D: 13,
      E: 14,
      F: 15,
      a: 10,
      b: 11,
      c: 12,
      d: 13,
      e: 14,
      f: 15,
    };
    r.NUM = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
    r.ALPHANUM = r.ALPHA.concat(r.NUM);
    r.MARK = ["-", "_", ".", "!", "~", "*", "'", "(", ")"];
    r.USERINFO_CHARS = r.ALPHANUM.concat(r.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]);
    r.STRICT_URL_CHAR = [
      "!",
      '"',
      "$",
      "%",
      "&",
      "'",
      "(",
      ")",
      "*",
      "+",
      ",",
      "-",
      ".",
      "/",
      ":",
      ";",
      "<",
      "=",
      ">",
      "@",
      "[",
      "\\",
      "]",
      "^",
      "_",
      "`",
      "{",
      "|",
      "}",
      "~",
    ].concat(r.ALPHANUM);
    r.URL_CHAR = r.STRICT_URL_CHAR.concat(["\t", "\f"]);
    for (let e = 128; e <= 255; e++) {
      r.URL_CHAR.push(e);
    }
    r.HEX = r.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]);
    r.STRICT_TOKEN = ["!", "#", "$", "%", "&", "'", "*", "+", "-", ".", "^", "_", "`", "|", "~"].concat(r.ALPHANUM);
    r.TOKEN = r.STRICT_TOKEN.concat([" "]);
    r.HEADER_CHARS = ["\t"];
    for (let e = 32; e <= 255; e++) {
      if (e !== 127) {
        r.HEADER_CHARS.push(e);
      }
    }
    r.CONNECTION_TOKEN_CHARS = r.HEADER_CHARS.filter((e) => e !== 44);
    r.MAJOR = r.NUM_MAP;
    r.MINOR = r.MAJOR;
    var p;
    (function (e) {
      e[(e["GENERAL"] = 0)] = "GENERAL";
      e[(e["CONNECTION"] = 1)] = "CONNECTION";
      e[(e["CONTENT_LENGTH"] = 2)] = "CONTENT_LENGTH";
      e[(e["TRANSFER_ENCODING"] = 3)] = "TRANSFER_ENCODING";
      e[(e["UPGRADE"] = 4)] = "UPGRADE";
      e[(e["CONNECTION_KEEP_ALIVE"] = 5)] = "CONNECTION_KEEP_ALIVE";
      e[(e["CONNECTION_CLOSE"] = 6)] = "CONNECTION_CLOSE";
      e[(e["CONNECTION_UPGRADE"] = 7)] = "CONNECTION_UPGRADE";
      e[(e["TRANSFER_ENCODING_CHUNKED"] = 8)] = "TRANSFER_ENCODING_CHUNKED";
    })((p = r.HEADER_STATE || (r.HEADER_STATE = {})));
    r.SPECIAL_HEADERS = {
      connection: p.CONNECTION,
      "content-length": p.CONTENT_LENGTH,
      "proxy-connection": p.CONNECTION,
      "transfer-encoding": p.TRANSFER_ENCODING,
      upgrade: p.UPGRADE,
    };
  },
  3870: (e) => {
    e.exports =
      "";
  },
  3434: (e) => {
    e.exports =
      "";
  },
  172: (e, r) => {
    Object.defineProperty(r, "__esModule", { value: true });
    r.enumToMap = void 0;
    function enumToMap(e) {
      const r = {};
      Object.keys(e).forEach((s) => {
        const o = e[s];
        if (typeof o === "number") {
          r[s] = o;
        }
      });
      return r;
    }
    r.enumToMap = enumToMap;
  },
  7501: (e, r, s) => {
    const { kClients: o } = s(6443);
    const n = s(9965);
    const {
      kAgent: i,
      kMockAgentSet: a,
      kMockAgentGet: l,
      kDispatches: d,
      kIsMockActive: h,
      kNetConnect: p,
      kGetNetConnect: w,
      kOptions: k,
      kFactory: _,
    } = s(1117);
    const M = s(7365);
    const j = s(4004);
    const { matchValue: q, buildMockOptions: $ } = s(3397);
    const { InvalidArgumentError: ee, UndiciError: te } = s(8707);
    const re = s(992);
    const se = s(1529);
    const oe = s(6142);
    class FakeWeakRef {
      constructor(e) {
        this.value = e;
      }
      deref() {
        return this.value;
      }
    }
    class MockAgent extends re {
      constructor(e) {
        super(e);
        this[p] = true;
        this[h] = true;
        if (e && e.agent && typeof e.agent.dispatch !== "function") {
          throw new ee("Argument opts.agent must implement Agent");
        }
        const r = e && e.agent ? e.agent : new n(e);
        this[i] = r;
        this[o] = r[o];
        this[k] = $(e);
      }
      get(e) {
        let r = this[l](e);
        if (!r) {
          r = this[_](e);
          this[a](e, r);
        }
        return r;
      }
      dispatch(e, r) {
        this.get(e.origin);
        return this[i].dispatch(e, r);
      }
      async close() {
        await this[i].close();
        this[o].clear();
      }
      deactivate() {
        this[h] = false;
      }
      activate() {
        this[h] = true;
      }
      enableNetConnect(e) {
        if (typeof e === "string" || typeof e === "function" || e instanceof RegExp) {
          if (Array.isArray(this[p])) {
            this[p].push(e);
          } else {
            this[p] = [e];
          }
        } else if (typeof e === "undefined") {
          this[p] = true;
        } else {
          throw new ee("Unsupported matcher. Must be one of String|Function|RegExp.");
        }
      }
      disableNetConnect() {
        this[p] = false;
      }
      get isMockActive() {
        return this[h];
      }
      [a](e, r) {
        this[o].set(e, new FakeWeakRef(r));
      }
      [_](e) {
        const r = Object.assign({ agent: this }, this[k]);
        return this[k] && this[k].connections === 1 ? new M(e, r) : new j(e, r);
      }
      [l](e) {
        const r = this[o].get(e);
        if (r) {
          return r.deref();
        }
        if (typeof e !== "string") {
          const r = this[_]("http://localhost:9999");
          this[a](e, r);
          return r;
        }
        for (const [r, s] of Array.from(this[o])) {
          const o = s.deref();
          if (o && typeof r !== "string" && q(r, e)) {
            const r = this[_](e);
            this[a](e, r);
            r[d] = o[d];
            return r;
          }
        }
      }
      [w]() {
        return this[p];
      }
      pendingInterceptors() {
        const e = this[o];
        return Array.from(e.entries())
          .flatMap(([e, r]) => r.deref()[d].map((r) => ({ ...r, origin: e })))
          .filter(({ pending: e }) => e);
      }
      assertNoPendingInterceptors({ pendingInterceptorsFormatter: e = new oe() } = {}) {
        const r = this.pendingInterceptors();
        if (r.length === 0) {
          return;
        }
        const s = new se("interceptor", "interceptors").pluralize(r.length);
        throw new te(`\n${s.count} ${s.noun} ${s.is} pending:\n\n${e.format(r)}\n`.trim());
      }
    }
    e.exports = MockAgent;
  },
  7365: (e, r, s) => {
    const { promisify: o } = s(9023);
    const n = s(6197);
    const { buildMockDispatch: i } = s(3397);
    const { kDispatches: a, kMockAgent: l, kClose: d, kOriginalClose: h, kOrigin: p, kOriginalDispatch: w, kConnected: k } = s(1117);
    const { MockInterceptor: _ } = s(1511);
    const M = s(6443);
    const { InvalidArgumentError: j } = s(8707);
    class MockClient extends n {
      constructor(e, r) {
        super(e, r);
        if (!r || !r.agent || typeof r.agent.dispatch !== "function") {
          throw new j("Argument opts.agent must implement Agent");
        }
        this[l] = r.agent;
        this[p] = e;
        this[a] = [];
        this[k] = 1;
        this[w] = this.dispatch;
        this[h] = this.close.bind(this);
        this.dispatch = i.call(this);
        this.close = this[d];
      }
      get [M.kConnected]() {
        return this[k];
      }
      intercept(e) {
        return new _(e, this[a]);
      }
      async [d]() {
        await o(this[h])();
        this[k] = 0;
        this[l][M.kClients].delete(this[p]);
      }
    }
    e.exports = MockClient;
  },
  2429: (e, r, s) => {
    const { UndiciError: o } = s(8707);
    class MockNotMatchedError extends o {
      constructor(e) {
        super(e);
        Error.captureStackTrace(this, MockNotMatchedError);
        this.name = "MockNotMatchedError";
        this.message = e || "The request does not match any registered mock dispatches";
        this.code = "UND_MOCK_ERR_MOCK_NOT_MATCHED";
      }
    }
    e.exports = { MockNotMatchedError: MockNotMatchedError };
  },
  1511: (e, r, s) => {
    const { getResponseData: o, buildKey: n, addMockDispatch: i } = s(3397);
    const { kDispatches: a, kDispatchKey: l, kDefaultHeaders: d, kDefaultTrailers: h, kContentLength: p, kMockDispatch: w } = s(1117);
    const { InvalidArgumentError: k } = s(8707);
    const { buildURL: _ } = s(3440);
    class MockScope {
      constructor(e) {
        this[w] = e;
      }
      delay(e) {
        if (typeof e !== "number" || !Number.isInteger(e) || e <= 0) {
          throw new k("waitInMs must be a valid integer > 0");
        }
        this[w].delay = e;
        return this;
      }
      persist() {
        this[w].persist = true;
        return this;
      }
      times(e) {
        if (typeof e !== "number" || !Number.isInteger(e) || e <= 0) {
          throw new k("repeatTimes must be a valid integer > 0");
        }
        this[w].times = e;
        return this;
      }
    }
    class MockInterceptor {
      constructor(e, r) {
        if (typeof e !== "object") {
          throw new k("opts must be an object");
        }
        if (typeof e.path === "undefined") {
          throw new k("opts.path must be defined");
        }
        if (typeof e.method === "undefined") {
          e.method = "GET";
        }
        if (typeof e.path === "string") {
          if (e.query) {
            e.path = _(e.path, e.query);
          } else {
            const r = new URL(e.path, "data://");
            e.path = r.pathname + r.search;
          }
        }
        if (typeof e.method === "string") {
          e.method = e.method.toUpperCase();
        }
        this[l] = n(e);
        this[a] = r;
        this[d] = {};
        this[h] = {};
        this[p] = false;
      }
      createMockScopeDispatchData(e, r, s = {}) {
        const n = o(r);
        const i = this[p] ? { "content-length": n.length } : {};
        const a = { ...this[d], ...i, ...s.headers };
        const l = { ...this[h], ...s.trailers };
        return { statusCode: e, data: r, headers: a, trailers: l };
      }
      validateReplyParameters(e, r, s) {
        if (typeof e === "undefined") {
          throw new k("statusCode must be defined");
        }
        if (typeof r === "undefined") {
          throw new k("data must be defined");
        }
        if (typeof s !== "object") {
          throw new k("responseOptions must be an object");
        }
      }
      reply(e) {
        if (typeof e === "function") {
          const wrappedDefaultsCallback = (r) => {
            const s = e(r);
            if (typeof s !== "object") {
              throw new k("reply options callback must return an object");
            }
            const { statusCode: o, data: n = "", responseOptions: i = {} } = s;
            this.validateReplyParameters(o, n, i);
            return { ...this.createMockScopeDispatchData(o, n, i) };
          };
          const r = i(this[a], this[l], wrappedDefaultsCallback);
          return new MockScope(r);
        }
        const [r, s = "", o = {}] = [...arguments];
        this.validateReplyParameters(r, s, o);
        const n = this.createMockScopeDispatchData(r, s, o);
        const d = i(this[a], this[l], n);
        return new MockScope(d);
      }
      replyWithError(e) {
        if (typeof e === "undefined") {
          throw new k("error must be defined");
        }
        const r = i(this[a], this[l], { error: e });
        return new MockScope(r);
      }
      defaultReplyHeaders(e) {
        if (typeof e === "undefined") {
          throw new k("headers must be defined");
        }
        this[d] = e;
        return this;
      }
      defaultReplyTrailers(e) {
        if (typeof e === "undefined") {
          throw new k("trailers must be defined");
        }
        this[h] = e;
        return this;
      }
      replyContentLength() {
        this[p] = true;
        return this;
      }
    }
    e.exports.MockInterceptor = MockInterceptor;
    e.exports.MockScope = MockScope;
  },
  4004: (e, r, s) => {
    const { promisify: o } = s(9023);
    const n = s(5076);
    const { buildMockDispatch: i } = s(3397);
    const { kDispatches: a, kMockAgent: l, kClose: d, kOriginalClose: h, kOrigin: p, kOriginalDispatch: w, kConnected: k } = s(1117);
    const { MockInterceptor: _ } = s(1511);
    const M = s(6443);
    const { InvalidArgumentError: j } = s(8707);
    class MockPool extends n {
      constructor(e, r) {
        super(e, r);
        if (!r || !r.agent || typeof r.agent.dispatch !== "function") {
          throw new j("Argument opts.agent must implement Agent");
        }
        this[l] = r.agent;
        this[p] = e;
        this[a] = [];
        this[k] = 1;
        this[w] = this.dispatch;
        this[h] = this.close.bind(this);
        this.dispatch = i.call(this);
        this.close = this[d];
      }
      get [M.kConnected]() {
        return this[k];
      }
      intercept(e) {
        return new _(e, this[a]);
      }
      async [d]() {
        await o(this[h])();
        this[k] = 0;
        this[l][M.kClients].delete(this[p]);
      }
    }
    e.exports = MockPool;
  },
  1117: (e) => {
    e.exports = {
      kAgent: Symbol("agent"),
      kOptions: Symbol("options"),
      kFactory: Symbol("factory"),
      kDispatches: Symbol("dispatches"),
      kDispatchKey: Symbol("dispatch key"),
      kDefaultHeaders: Symbol("default headers"),
      kDefaultTrailers: Symbol("default trailers"),
      kContentLength: Symbol("content length"),
      kMockAgent: Symbol("mock agent"),
      kMockAgentSet: Symbol("mock agent set"),
      kMockAgentGet: Symbol("mock agent get"),
      kMockDispatch: Symbol("mock dispatch"),
      kClose: Symbol("close"),
      kOriginalClose: Symbol("original agent close"),
      kOrigin: Symbol("origin"),
      kIsMockActive: Symbol("is mock active"),
      kNetConnect: Symbol("net connect"),
      kGetNetConnect: Symbol("get net connect"),
      kConnected: Symbol("connected"),
    };
  },
  3397: (e, r, s) => {
    const { MockNotMatchedError: o } = s(2429);
    const { kDispatches: n, kMockAgent: i, kOriginalDispatch: a, kOrigin: l, kGetNetConnect: d } = s(1117);
    const { buildURL: h, nop: p } = s(3440);
    const { STATUS_CODES: w } = s(8611);
    const {
      types: { isPromise: k },
    } = s(9023);
    function matchValue(e, r) {
      if (typeof e === "string") {
        return e === r;
      }
      if (e instanceof RegExp) {
        return e.test(r);
      }
      if (typeof e === "function") {
        return e(r) === true;
      }
      return false;
    }
    function lowerCaseEntries(e) {
      return Object.fromEntries(Object.entries(e).map(([e, r]) => [e.toLocaleLowerCase(), r]));
    }
    function getHeaderByName(e, r) {
      if (Array.isArray(e)) {
        for (let s = 0; s < e.length; s += 2) {
          if (e[s].toLocaleLowerCase() === r.toLocaleLowerCase()) {
            return e[s + 1];
          }
        }
        return undefined;
      } else if (typeof e.get === "function") {
        return e.get(r);
      } else {
        return lowerCaseEntries(e)[r.toLocaleLowerCase()];
      }
    }
    function buildHeadersFromArray(e) {
      const r = e.slice();
      const s = [];
      for (let e = 0; e < r.length; e += 2) {
        s.push([r[e], r[e + 1]]);
      }
      return Object.fromEntries(s);
    }
    function matchHeaders(e, r) {
      if (typeof e.headers === "function") {
        if (Array.isArray(r)) {
          r = buildHeadersFromArray(r);
        }
        return e.headers(r ? lowerCaseEntries(r) : {});
      }
      if (typeof e.headers === "undefined") {
        return true;
      }
      if (typeof r !== "object" || typeof e.headers !== "object") {
        return false;
      }
      for (const [s, o] of Object.entries(e.headers)) {
        const e = getHeaderByName(r, s);
        if (!matchValue(o, e)) {
          return false;
        }
      }
      return true;
    }
    function safeUrl(e) {
      if (typeof e !== "string") {
        return e;
      }
      const r = e.split("?");
      if (r.length !== 2) {
        return e;
      }
      const s = new URLSearchParams(r.pop());
      s.sort();
      return [...r, s.toString()].join("?");
    }
    function matchKey(e, { path: r, method: s, body: o, headers: n }) {
      const i = matchValue(e.path, r);
      const a = matchValue(e.method, s);
      const l = typeof e.body !== "undefined" ? matchValue(e.body, o) : true;
      const d = matchHeaders(e, n);
      return i && a && l && d;
    }
    function getResponseData(e) {
      if (Buffer.isBuffer(e)) {
        return e;
      } else if (typeof e === "object") {
        return JSON.stringify(e);
      } else {
        return e.toString();
      }
    }
    function getMockDispatch(e, r) {
      const s = r.query ? h(r.path, r.query) : r.path;
      const n = typeof s === "string" ? safeUrl(s) : s;
      let i = e.filter(({ consumed: e }) => !e).filter(({ path: e }) => matchValue(safeUrl(e), n));
      if (i.length === 0) {
        throw new o(`Mock dispatch not matched for path '${n}'`);
      }
      i = i.filter(({ method: e }) => matchValue(e, r.method));
      if (i.length === 0) {
        throw new o(`Mock dispatch not matched for method '${r.method}'`);
      }
      i = i.filter(({ body: e }) => (typeof e !== "undefined" ? matchValue(e, r.body) : true));
      if (i.length === 0) {
        throw new o(`Mock dispatch not matched for body '${r.body}'`);
      }
      i = i.filter((e) => matchHeaders(e, r.headers));
      if (i.length === 0) {
        throw new o(`Mock dispatch not matched for headers '${typeof r.headers === "object" ? JSON.stringify(r.headers) : r.headers}'`);
      }
      return i[0];
    }
    function addMockDispatch(e, r, s) {
      const o = { timesInvoked: 0, times: 1, persist: false, consumed: false };
      const n = typeof s === "function" ? { callback: s } : { ...s };
      const i = { ...o, ...r, pending: true, data: { error: null, ...n } };
      e.push(i);
      return i;
    }
    function deleteMockDispatch(e, r) {
      const s = e.findIndex((e) => {
        if (!e.consumed) {
          return false;
        }
        return matchKey(e, r);
      });
      if (s !== -1) {
        e.splice(s, 1);
      }
    }
    function buildKey(e) {
      const { path: r, method: s, body: o, headers: n, query: i } = e;
      return { path: r, method: s, body: o, headers: n, query: i };
    }
    function generateKeyValues(e) {
      return Object.entries(e).reduce(
        (e, [r, s]) => [...e, Buffer.from(`${r}`), Array.isArray(s) ? s.map((e) => Buffer.from(`${e}`)) : Buffer.from(`${s}`)],
        []
      );
    }
    function getStatusText(e) {
      return w[e] || "unknown";
    }
    async function getResponse(e) {
      const r = [];
      for await (const s of e) {
        r.push(s);
      }
      return Buffer.concat(r).toString("utf8");
    }
    function mockDispatch(e, r) {
      const s = buildKey(e);
      const o = getMockDispatch(this[n], s);
      o.timesInvoked++;
      if (o.data.callback) {
        o.data = { ...o.data, ...o.data.callback(e) };
      }
      const {
        data: { statusCode: i, data: a, headers: l, trailers: d, error: h },
        delay: w,
        persist: _,
      } = o;
      const { timesInvoked: M, times: j } = o;
      o.consumed = !_ && M >= j;
      o.pending = M < j;
      if (h !== null) {
        deleteMockDispatch(this[n], s);
        r.onError(h);
        return true;
      }
      if (typeof w === "number" && w > 0) {
        setTimeout(() => {
          handleReply(this[n]);
        }, w);
      } else {
        handleReply(this[n]);
      }
      function handleReply(o, n = a) {
        const h = Array.isArray(e.headers) ? buildHeadersFromArray(e.headers) : e.headers;
        const w = typeof n === "function" ? n({ ...e, headers: h }) : n;
        if (k(w)) {
          w.then((e) => handleReply(o, e));
          return;
        }
        const _ = getResponseData(w);
        const M = generateKeyValues(l);
        const j = generateKeyValues(d);
        r.abort = p;
        r.onHeaders(i, M, resume, getStatusText(i));
        r.onData(Buffer.from(_));
        r.onComplete(j);
        deleteMockDispatch(o, s);
      }
      function resume() {}
      return true;
    }
    function buildMockDispatch() {
      const e = this[i];
      const r = this[l];
      const s = this[a];
      return function dispatch(n, i) {
        if (e.isMockActive) {
          try {
            mockDispatch.call(this, n, i);
          } catch (a) {
            if (a instanceof o) {
              const l = e[d]();
              if (l === false) {
                throw new o(`${a.message}: subsequent request to origin ${r} was not allowed (net.connect disabled)`);
              }
              if (checkNetConnect(l, r)) {
                s.call(this, n, i);
              } else {
                throw new o(`${a.message}: subsequent request to origin ${r} was not allowed (net.connect is not enabled for this origin)`);
              }
            } else {
              throw a;
            }
          }
        } else {
          s.call(this, n, i);
        }
      };
    }
    function checkNetConnect(e, r) {
      const s = new URL(r);
      if (e === true) {
        return true;
      } else if (Array.isArray(e) && e.some((e) => matchValue(e, s.host))) {
        return true;
      }
      return false;
    }
    function buildMockOptions(e) {
      if (e) {
        const { agent: r, ...s } = e;
        return s;
      }
    }
    e.exports = {
      getResponseData: getResponseData,
      getMockDispatch: getMockDispatch,
      addMockDispatch: addMockDispatch,
      deleteMockDispatch: deleteMockDispatch,
      buildKey: buildKey,
      generateKeyValues: generateKeyValues,
      matchValue: matchValue,
      getResponse: getResponse,
      getStatusText: getStatusText,
      mockDispatch: mockDispatch,
      buildMockDispatch: buildMockDispatch,
      checkNetConnect: checkNetConnect,
      buildMockOptions: buildMockOptions,
      getHeaderByName: getHeaderByName,
    };
  },
  6142: (e, r, s) => {
    const { Transform: o } = s(2203);
    const { Console: n } = s(4236);
    e.exports = class PendingInterceptorsFormatter {
      constructor({ disableColors: e } = {}) {
        this.transform = new o({
          transform(e, r, s) {
            s(null, e);
          },
        });
        this.logger = new n({ stdout: this.transform, inspectOptions: { colors: !e && !process.env.CI } });
      }
      format(e) {
        const r = e.map(({ method: e, path: r, data: { statusCode: s }, persist: o, times: n, timesInvoked: i, origin: a }) => ({
          Method: e,
          Origin: a,
          Path: r,
          "Status code": s,
          Persistent: o ? "✅" : "❌",
          Invocations: i,
          Remaining: o ? Infinity : n - i,
        }));
        this.logger.table(r);
        return this.transform.read().toString();
      }
    };
  },
  1529: (e) => {
    const r = { pronoun: "it", is: "is", was: "was", this: "this" };
    const s = { pronoun: "they", is: "are", was: "were", this: "these" };
    e.exports = class Pluralizer {
      constructor(e, r) {
        this.singular = e;
        this.plural = r;
      }
      pluralize(e) {
        const o = e === 1;
        const n = o ? r : s;
        const i = o ? this.singular : this.plural;
        return { ...n, count: e, noun: i };
      }
    };
  },
  4869: (e) => {
    const r = 2048;
    const s = r - 1;
    class FixedCircularBuffer {
      constructor() {
        this.bottom = 0;
        this.top = 0;
        this.list = new Array(r);
        this.next = null;
      }
      isEmpty() {
        return this.top === this.bottom;
      }
      isFull() {
        return ((this.top + 1) & s) === this.bottom;
      }
      push(e) {
        this.list[this.top] = e;
        this.top = (this.top + 1) & s;
      }
      shift() {
        const e = this.list[this.bottom];
        if (e === undefined) return null;
        this.list[this.bottom] = undefined;
        this.bottom = (this.bottom + 1) & s;
        return e;
      }
    }
    e.exports = class FixedQueue {
      constructor() {
        this.head = this.tail = new FixedCircularBuffer();
      }
      isEmpty() {
        return this.head.isEmpty();
      }
      push(e) {
        if (this.head.isFull()) {
          this.head = this.head.next = new FixedCircularBuffer();
        }
        this.head.push(e);
      }
      shift() {
        const e = this.tail;
        const r = e.shift();
        if (e.isEmpty() && e.next !== null) {
          this.tail = e.next;
        }
        return r;
      }
    };
  },
  8640: (e, r, s) => {
    const o = s(1);
    const n = s(4869);
    const { kConnected: i, kSize: a, kRunning: l, kPending: d, kQueued: h, kBusy: p, kFree: w, kUrl: k, kClose: _, kDestroy: M, kDispatch: j } = s(6443);
    const q = s(4622);
    const $ = Symbol("clients");
    const ee = Symbol("needDrain");
    const te = Symbol("queue");
    const re = Symbol("closed resolve");
    const se = Symbol("onDrain");
    const oe = Symbol("onConnect");
    const ne = Symbol("onDisconnect");
    const ie = Symbol("onConnectionError");
    const Ae = Symbol("get dispatcher");
    const ae = Symbol("add client");
    const ce = Symbol("remove client");
    const le = Symbol("stats");
    class PoolBase extends o {
      constructor() {
        super();
        this[te] = new n();
        this[$] = [];
        this[h] = 0;
        const e = this;
        this[se] = function onDrain(r, s) {
          const o = e[te];
          let n = false;
          while (!n) {
            const r = o.shift();
            if (!r) {
              break;
            }
            e[h]--;
            n = !this.dispatch(r.opts, r.handler);
          }
          this[ee] = n;
          if (!this[ee] && e[ee]) {
            e[ee] = false;
            e.emit("drain", r, [e, ...s]);
          }
          if (e[re] && o.isEmpty()) {
            Promise.all(e[$].map((e) => e.close())).then(e[re]);
          }
        };
        this[oe] = (r, s) => {
          e.emit("connect", r, [e, ...s]);
        };
        this[ne] = (r, s, o) => {
          e.emit("disconnect", r, [e, ...s], o);
        };
        this[ie] = (r, s, o) => {
          e.emit("connectionError", r, [e, ...s], o);
        };
        this[le] = new q(this);
      }
      get [p]() {
        return this[ee];
      }
      get [i]() {
        return this[$].filter((e) => e[i]).length;
      }
      get [w]() {
        return this[$].filter((e) => e[i] && !e[ee]).length;
      }
      get [d]() {
        let e = this[h];
        for (const { [d]: r } of this[$]) {
          e += r;
        }
        return e;
      }
      get [l]() {
        let e = 0;
        for (const { [l]: r } of this[$]) {
          e += r;
        }
        return e;
      }
      get [a]() {
        let e = this[h];
        for (const { [a]: r } of this[$]) {
          e += r;
        }
        return e;
      }
      get stats() {
        return this[le];
      }
      async [_]() {
        if (this[te].isEmpty()) {
          return Promise.all(this[$].map((e) => e.close()));
        } else {
          return new Promise((e) => {
            this[re] = e;
          });
        }
      }
      async [M](e) {
        while (true) {
          const r = this[te].shift();
          if (!r) {
            break;
          }
          r.handler.onError(e);
        }
        return Promise.all(this[$].map((r) => r.destroy(e)));
      }
      [j](e, r) {
        const s = this[Ae]();
        if (!s) {
          this[ee] = true;
          this[te].push({ opts: e, handler: r });
          this[h]++;
        } else if (!s.dispatch(e, r)) {
          s[ee] = true;
          this[ee] = !this[Ae]();
        }
        return !this[ee];
      }
      [ae](e) {
        e.on("drain", this[se]).on("connect", this[oe]).on("disconnect", this[ne]).on("connectionError", this[ie]);
        this[$].push(e);
        if (this[ee]) {
          process.nextTick(() => {
            if (this[ee]) {
              this[se](e[k], [this, e]);
            }
          });
        }
        return this;
      }
      [ce](e) {
        e.close(() => {
          const r = this[$].indexOf(e);
          if (r !== -1) {
            this[$].splice(r, 1);
          }
        });
        this[ee] = this[$].some((e) => !e[ee] && e.closed !== true && e.destroyed !== true);
      }
    }
    e.exports = { PoolBase: PoolBase, kClients: $, kNeedDrain: ee, kAddClient: ae, kRemoveClient: ce, kGetDispatcher: Ae };
  },
  4622: (e, r, s) => {
    const { kFree: o, kConnected: n, kPending: i, kQueued: a, kRunning: l, kSize: d } = s(6443);
    const h = Symbol("pool");
    class PoolStats {
      constructor(e) {
        this[h] = e;
      }
      get connected() {
        return this[h][n];
      }
      get free() {
        return this[h][o];
      }
      get pending() {
        return this[h][i];
      }
      get queued() {
        return this[h][a];
      }
      get running() {
        return this[h][l];
      }
      get size() {
        return this[h][d];
      }
    }
    e.exports = PoolStats;
  },
  5076: (e, r, s) => {
    const { PoolBase: o, kClients: n, kNeedDrain: i, kAddClient: a, kGetDispatcher: l } = s(8640);
    const d = s(6197);
    const { InvalidArgumentError: h } = s(8707);
    const p = s(3440);
    const { kUrl: w, kInterceptors: k } = s(6443);
    const _ = s(9136);
    const M = Symbol("options");
    const j = Symbol("connections");
    const q = Symbol("factory");
    function defaultFactory(e, r) {
      return new d(e, r);
    }
    class Pool extends o {
      constructor(
        e,
        {
          connections: r,
          factory: s = defaultFactory,
          connect: o,
          connectTimeout: n,
          tls: i,
          maxCachedSessions: a,
          socketPath: l,
          autoSelectFamily: d,
          autoSelectFamilyAttemptTimeout: $,
          allowH2: ee,
          ...te
        } = {}
      ) {
        super();
        if (r != null && (!Number.isFinite(r) || r < 0)) {
          throw new h("invalid connections");
        }
        if (typeof s !== "function") {
          throw new h("factory must be a function.");
        }
        if (o != null && typeof o !== "function" && typeof o !== "object") {
          throw new h("connect must be a function or an object");
        }
        if (typeof o !== "function") {
          o = _({
            ...i,
            maxCachedSessions: a,
            allowH2: ee,
            socketPath: l,
            timeout: n,
            ...(p.nodeHasAutoSelectFamily && d ? { autoSelectFamily: d, autoSelectFamilyAttemptTimeout: $ } : undefined),
            ...o,
          });
        }
        this[k] = te.interceptors && te.interceptors.Pool && Array.isArray(te.interceptors.Pool) ? te.interceptors.Pool : [];
        this[j] = r || null;
        this[w] = p.parseOrigin(e);
        this[M] = { ...p.deepClone(te), connect: o, allowH2: ee };
        this[M].interceptors = te.interceptors ? { ...te.interceptors } : undefined;
        this[q] = s;
      }
      [l]() {
        let e = this[n].find((e) => !e[i]);
        if (e) {
          return e;
        }
        if (!this[j] || this[n].length < this[j]) {
          e = this[q](this[w], this[M]);
          this[a](e);
        }
        return e;
      }
    }
    e.exports = Pool;
  },
  2720: (e, r, s) => {
    const { kProxy: o, kClose: n, kDestroy: i, kInterceptors: a } = s(6443);
    const { URL: l } = s(7016);
    const d = s(9965);
    const h = s(5076);
    const p = s(1);
    const { InvalidArgumentError: w, RequestAbortedError: k } = s(8707);
    const _ = s(9136);
    const M = Symbol("proxy agent");
    const j = Symbol("proxy client");
    const q = Symbol("proxy headers");
    const $ = Symbol("request tls settings");
    const ee = Symbol("proxy tls settings");
    const te = Symbol("connect endpoint function");
    function defaultProtocolPort(e) {
      return e === "https:" ? 443 : 80;
    }
    function buildProxyOptions(e) {
      if (typeof e === "string") {
        e = { uri: e };
      }
      if (!e || !e.uri) {
        throw new w("Proxy opts.uri is mandatory");
      }
      return { uri: e.uri, protocol: e.protocol || "https" };
    }
    function defaultFactory(e, r) {
      return new h(e, r);
    }
    class ProxyAgent extends p {
      constructor(e) {
        super(e);
        this[o] = buildProxyOptions(e);
        this[M] = new d(e);
        this[a] = e.interceptors && e.interceptors.ProxyAgent && Array.isArray(e.interceptors.ProxyAgent) ? e.interceptors.ProxyAgent : [];
        if (typeof e === "string") {
          e = { uri: e };
        }
        if (!e || !e.uri) {
          throw new w("Proxy opts.uri is mandatory");
        }
        const { clientFactory: r = defaultFactory } = e;
        if (typeof r !== "function") {
          throw new w("Proxy opts.clientFactory must be a function.");
        }
        this[$] = e.requestTls;
        this[ee] = e.proxyTls;
        this[q] = e.headers || {};
        const s = new l(e.uri);
        const { origin: n, port: i, host: h, username: p, password: re } = s;
        if (e.auth && e.token) {
          throw new w("opts.auth cannot be used in combination with opts.token");
        } else if (e.auth) {
          this[q]["proxy-authorization"] = `Basic ${e.auth}`;
        } else if (e.token) {
          this[q]["proxy-authorization"] = e.token;
        } else if (p && re) {
          this[q]["proxy-authorization"] = `Basic ${Buffer.from(`${decodeURIComponent(p)}:${decodeURIComponent(re)}`).toString("base64")}`;
        }
        const se = _({ ...e.proxyTls });
        this[te] = _({ ...e.requestTls });
        this[j] = r(s, { connect: se });
        this[M] = new d({
          ...e,
          connect: async (e, r) => {
            let s = e.host;
            if (!e.port) {
              s += `:${defaultProtocolPort(e.protocol)}`;
            }
            try {
              const { socket: o, statusCode: a } = await this[j].connect({ origin: n, port: i, path: s, signal: e.signal, headers: { ...this[q], host: h } });
              if (a !== 200) {
                o.on("error", () => {}).destroy();
                r(new k(`Proxy response (${a}) !== 200 when HTTP Tunneling`));
              }
              if (e.protocol !== "https:") {
                r(null, o);
                return;
              }
              let l;
              if (this[$]) {
                l = this[$].servername;
              } else {
                l = e.servername;
              }
              this[te]({ ...e, servername: l, httpSocket: o }, r);
            } catch (e) {
              r(e);
            }
          },
        });
      }
      dispatch(e, r) {
        const { host: s } = new l(e.origin);
        const o = buildHeaders(e.headers);
        throwIfProxyAuthIsSent(o);
        return this[M].dispatch({ ...e, headers: { ...o, host: s } }, r);
      }
      async [n]() {
        await this[M].close();
        await this[j].close();
      }
      async [i]() {
        await this[M].destroy();
        await this[j].destroy();
      }
    }
    function buildHeaders(e) {
      if (Array.isArray(e)) {
        const r = {};
        for (let s = 0; s < e.length; s += 2) {
          r[e[s]] = e[s + 1];
        }
        return r;
      }
      return e;
    }
    function throwIfProxyAuthIsSent(e) {
      const r = e && Object.keys(e).find((e) => e.toLowerCase() === "proxy-authorization");
      if (r) {
        throw new w("Proxy-Authorization should be sent in ProxyAgent constructor");
      }
    }
    e.exports = ProxyAgent;
  },
  8804: (e) => {
    let r = Date.now();
    let s;
    const o = [];
    function onTimeout() {
      r = Date.now();
      let e = o.length;
      let s = 0;
      while (s < e) {
        const n = o[s];
        if (n.state === 0) {
          n.state = r + n.delay;
        } else if (n.state > 0 && r >= n.state) {
          n.state = -1;
          n.callback(n.opaque);
        }
        if (n.state === -1) {
          n.state = -2;
          if (s !== e - 1) {
            o[s] = o.pop();
          } else {
            o.pop();
          }
          e -= 1;
        } else {
          s += 1;
        }
      }
      if (o.length > 0) {
        refreshTimeout();
      }
    }
    function refreshTimeout() {
      if (s && s.refresh) {
        s.refresh();
      } else {
        clearTimeout(s);
        s = setTimeout(onTimeout, 1e3);
        if (s.unref) {
          s.unref();
        }
      }
    }
    class Timeout {
      constructor(e, r, s) {
        this.callback = e;
        this.delay = r;
        this.opaque = s;
        this.state = -2;
        this.refresh();
      }
      refresh() {
        if (this.state === -2) {
          o.push(this);
          if (!s || o.length === 1) {
            refreshTimeout();
          }
        }
        this.state = 0;
      }
      clear() {
        this.state = -1;
      }
    }
    e.exports = {
      setTimeout(e, r, s) {
        return r < 1e3 ? setTimeout(e, r, s) : new Timeout(e, r, s);
      },
      clearTimeout(e) {
        if (e instanceof Timeout) {
          e.clear();
        } else {
          clearTimeout(e);
        }
      },
    };
  },
  8550: (e, r, s) => {
    const o = s(1637);
    const { uid: n, states: i } = s(5913);
    const { kReadyState: a, kSentClose: l, kByteParser: d, kReceivedClose: h } = s(2933);
    const { fireEvent: p, failWebsocketConnection: w } = s(3574);
    const { CloseEvent: k } = s(6255);
    const { makeRequest: _ } = s(5194);
    const { fetching: M } = s(2315);
    const { Headers: j } = s(6349);
    const { getGlobalDispatcher: q } = s(2581);
    const { kHeadersList: $ } = s(6443);
    const ee = {};
    ee.open = o.channel("undici:websocket:open");
    ee.close = o.channel("undici:websocket:close");
    ee.socketError = o.channel("undici:websocket:socket_error");
    let te;
    try {
      te = s(6982);
    } catch {}
    function establishWebSocketConnection(e, r, s, o, i) {
      const a = e;
      a.protocol = e.protocol === "ws:" ? "http:" : "https:";
      const l = _({
        urlList: [a],
        serviceWorkers: "none",
        referrer: "no-referrer",
        mode: "websocket",
        credentials: "include",
        cache: "no-store",
        redirect: "error",
      });
      if (i.headers) {
        const e = new j(i.headers)[$];
        l.headersList = e;
      }
      const d = te.randomBytes(16).toString("base64");
      l.headersList.append("sec-websocket-key", d);
      l.headersList.append("sec-websocket-version", "13");
      for (const e of r) {
        l.headersList.append("sec-websocket-protocol", e);
      }
      const h = "";
      const p = M({
        request: l,
        useParallelQueue: true,
        dispatcher: i.dispatcher ?? q(),
        processResponse(e) {
          if (e.type === "error" || e.status !== 101) {
            w(s, "Received network error or non-101 status code.");
            return;
          }
          if (r.length !== 0 && !e.headersList.get("Sec-WebSocket-Protocol")) {
            w(s, "Server did not respond with sent protocols.");
            return;
          }
          if (e.headersList.get("Upgrade")?.toLowerCase() !== "websocket") {
            w(s, 'Server did not set Upgrade header to "websocket".');
            return;
          }
          if (e.headersList.get("Connection")?.toLowerCase() !== "upgrade") {
            w(s, 'Server did not set Connection header to "upgrade".');
            return;
          }
          const i = e.headersList.get("Sec-WebSocket-Accept");
          const a = te
            .createHash("sha1")
            .update(d + n)
            .digest("base64");
          if (i !== a) {
            w(s, "Incorrect hash received in Sec-WebSocket-Accept header.");
            return;
          }
          const p = e.headersList.get("Sec-WebSocket-Extensions");
          if (p !== null && p !== h) {
            w(s, "Received different permessage-deflate than the one set.");
            return;
          }
          const k = e.headersList.get("Sec-WebSocket-Protocol");
          if (k !== null && k !== l.headersList.get("Sec-WebSocket-Protocol")) {
            w(s, "Protocol was not set in the opening handshake.");
            return;
          }
          e.socket.on("data", onSocketData);
          e.socket.on("close", onSocketClose);
          e.socket.on("error", onSocketError);
          if (ee.open.hasSubscribers) {
            ee.open.publish({ address: e.socket.address(), protocol: k, extensions: p });
          }
          o(e);
        },
      });
      return p;
    }
    function onSocketData(e) {
      if (!this.ws[d].write(e)) {
        this.pause();
      }
    }
    function onSocketClose() {
      const { ws: e } = this;
      const r = e[l] && e[h];
      let s = 1005;
      let o = "";
      const n = e[d].closingInfo;
      if (n) {
        s = n.code ?? 1005;
        o = n.reason;
      } else if (!e[l]) {
        s = 1006;
      }
      e[a] = i.CLOSED;
      p("close", e, k, { wasClean: r, code: s, reason: o });
      if (ee.close.hasSubscribers) {
        ee.close.publish({ websocket: e, code: s, reason: o });
      }
    }
    function onSocketError(e) {
      const { ws: r } = this;
      r[a] = i.CLOSING;
      if (ee.socketError.hasSubscribers) {
        ee.socketError.publish(e);
      }
      this.destroy();
    }
    e.exports = { establishWebSocketConnection: establishWebSocketConnection };
  },
  5913: (e) => {
    const r = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
    const s = { enumerable: true, writable: false, configurable: false };
    const o = { CONNECTING: 0, OPEN: 1, CLOSING: 2, CLOSED: 3 };
    const n = { CONTINUATION: 0, TEXT: 1, BINARY: 2, CLOSE: 8, PING: 9, PONG: 10 };
    const i = 2 ** 16 - 1;
    const a = { INFO: 0, PAYLOADLENGTH_16: 2, PAYLOADLENGTH_64: 3, READ_DATA: 4 };
    const l = Buffer.allocUnsafe(0);
    e.exports = { uid: r, staticPropertyDescriptors: s, states: o, opcodes: n, maxUnsigned16Bit: i, parserStates: a, emptyBuffer: l };
  },
  6255: (e, r, s) => {
    const { webidl: o } = s(4222);
    const { kEnumerableProperty: n } = s(3440);
    const { MessagePort: i } = s(8167);
    class MessageEvent extends Event {
      #n;
      constructor(e, r = {}) {
        o.argumentLengthCheck(arguments, 1, { header: "MessageEvent constructor" });
        e = o.converters.DOMString(e);
        r = o.converters.MessageEventInit(r);
        super(e, r);
        this.#n = r;
      }
      get data() {
        o.brandCheck(this, MessageEvent);
        return this.#n.data;
      }
      get origin() {
        o.brandCheck(this, MessageEvent);
        return this.#n.origin;
      }
      get lastEventId() {
        o.brandCheck(this, MessageEvent);
        return this.#n.lastEventId;
      }
      get source() {
        o.brandCheck(this, MessageEvent);
        return this.#n.source;
      }
      get ports() {
        o.brandCheck(this, MessageEvent);
        if (!Object.isFrozen(this.#n.ports)) {
          Object.freeze(this.#n.ports);
        }
        return this.#n.ports;
      }
      initMessageEvent(e, r = false, s = false, n = null, i = "", a = "", l = null, d = []) {
        o.brandCheck(this, MessageEvent);
        o.argumentLengthCheck(arguments, 1, { header: "MessageEvent.initMessageEvent" });
        return new MessageEvent(e, { bubbles: r, cancelable: s, data: n, origin: i, lastEventId: a, source: l, ports: d });
      }
    }
    class CloseEvent extends Event {
      #n;
      constructor(e, r = {}) {
        o.argumentLengthCheck(arguments, 1, { header: "CloseEvent constructor" });
        e = o.converters.DOMString(e);
        r = o.converters.CloseEventInit(r);
        super(e, r);
        this.#n = r;
      }
      get wasClean() {
        o.brandCheck(this, CloseEvent);
        return this.#n.wasClean;
      }
      get code() {
        o.brandCheck(this, CloseEvent);
        return this.#n.code;
      }
      get reason() {
        o.brandCheck(this, CloseEvent);
        return this.#n.reason;
      }
    }
    class ErrorEvent extends Event {
      #n;
      constructor(e, r) {
        o.argumentLengthCheck(arguments, 1, { header: "ErrorEvent constructor" });
        super(e, r);
        e = o.converters.DOMString(e);
        r = o.converters.ErrorEventInit(r ?? {});
        this.#n = r;
      }
      get message() {
        o.brandCheck(this, ErrorEvent);
        return this.#n.message;
      }
      get filename() {
        o.brandCheck(this, ErrorEvent);
        return this.#n.filename;
      }
      get lineno() {
        o.brandCheck(this, ErrorEvent);
        return this.#n.lineno;
      }
      get colno() {
        o.brandCheck(this, ErrorEvent);
        return this.#n.colno;
      }
      get error() {
        o.brandCheck(this, ErrorEvent);
        return this.#n.error;
      }
    }
    Object.defineProperties(MessageEvent.prototype, {
      [Symbol.toStringTag]: { value: "MessageEvent", configurable: true },
      data: n,
      origin: n,
      lastEventId: n,
      source: n,
      ports: n,
      initMessageEvent: n,
    });
    Object.defineProperties(CloseEvent.prototype, { [Symbol.toStringTag]: { value: "CloseEvent", configurable: true }, reason: n, code: n, wasClean: n });
    Object.defineProperties(ErrorEvent.prototype, {
      [Symbol.toStringTag]: { value: "ErrorEvent", configurable: true },
      message: n,
      filename: n,
      lineno: n,
      colno: n,
      error: n,
    });
    o.converters.MessagePort = o.interfaceConverter(i);
    o.converters["sequence<MessagePort>"] = o.sequenceConverter(o.converters.MessagePort);
    const a = [
      { key: "bubbles", converter: o.converters.boolean, defaultValue: false },
      { key: "cancelable", converter: o.converters.boolean, defaultValue: false },
      { key: "composed", converter: o.converters.boolean, defaultValue: false },
    ];
    o.converters.MessageEventInit = o.dictionaryConverter([
      ...a,
      { key: "data", converter: o.converters.any, defaultValue: null },
      { key: "origin", converter: o.converters.USVString, defaultValue: "" },
      { key: "lastEventId", converter: o.converters.DOMString, defaultValue: "" },
      { key: "source", converter: o.nullableConverter(o.converters.MessagePort), defaultValue: null },
      {
        key: "ports",
        converter: o.converters["sequence<MessagePort>"],
        get defaultValue() {
          return [];
        },
      },
    ]);
    o.converters.CloseEventInit = o.dictionaryConverter([
      ...a,
      { key: "wasClean", converter: o.converters.boolean, defaultValue: false },
      { key: "code", converter: o.converters["unsigned short"], defaultValue: 0 },
      { key: "reason", converter: o.converters.USVString, defaultValue: "" },
    ]);
    o.converters.ErrorEventInit = o.dictionaryConverter([
      ...a,
      { key: "message", converter: o.converters.DOMString, defaultValue: "" },
      { key: "filename", converter: o.converters.USVString, defaultValue: "" },
      { key: "lineno", converter: o.converters["unsigned long"], defaultValue: 0 },
      { key: "colno", converter: o.converters["unsigned long"], defaultValue: 0 },
      { key: "error", converter: o.converters.any },
    ]);
    e.exports = { MessageEvent: MessageEvent, CloseEvent: CloseEvent, ErrorEvent: ErrorEvent };
  },
  1237: (e, r, s) => {
    const { maxUnsigned16Bit: o } = s(5913);
    let n;
    try {
      n = s(6982);
    } catch {}
    class WebsocketFrameSend {
      constructor(e) {
        this.frameData = e;
        this.maskKey = n.randomBytes(4);
      }
      createFrame(e) {
        const r = this.frameData?.byteLength ?? 0;
        let s = r;
        let n = 6;
        if (r > o) {
          n += 8;
          s = 127;
        } else if (r > 125) {
          n += 2;
          s = 126;
        }
        const i = Buffer.allocUnsafe(r + n);
        i[0] = i[1] = 0;
        i[0] |= 128;
        i[0] = (i[0] & 240) + e;
        /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */ i[n - 4] = this.maskKey[0];
        i[n - 3] = this.maskKey[1];
        i[n - 2] = this.maskKey[2];
        i[n - 1] = this.maskKey[3];
        i[1] = s;
        if (s === 126) {
          i.writeUInt16BE(r, 2);
        } else if (s === 127) {
          i[2] = i[3] = 0;
          i.writeUIntBE(r, 4, 6);
        }
        i[1] |= 128;
        for (let e = 0; e < r; e++) {
          i[n + e] = this.frameData[e] ^ this.maskKey[e % 4];
        }
        return i;
      }
    }
    e.exports = { WebsocketFrameSend: WebsocketFrameSend };
  },
  3171: (e, r, s) => {
    const { Writable: o } = s(2203);
    const n = s(1637);
    const { parserStates: i, opcodes: a, states: l, emptyBuffer: d } = s(5913);
    const { kReadyState: h, kSentClose: p, kResponse: w, kReceivedClose: k } = s(2933);
    const { isValidStatusCode: _, failWebsocketConnection: M, websocketMessageReceived: j } = s(3574);
    const { WebsocketFrameSend: q } = s(1237);
    const $ = {};
    $.ping = n.channel("undici:websocket:ping");
    $.pong = n.channel("undici:websocket:pong");
    class ByteParser extends o {
      #i = [];
      #A = 0;
      #a = i.INFO;
      #c = {};
      #l = [];
      constructor(e) {
        super();
        this.ws = e;
      }
      _write(e, r, s) {
        this.#i.push(e);
        this.#A += e.length;
        this.run(s);
      }
      run(e) {
        while (true) {
          if (this.#a === i.INFO) {
            if (this.#A < 2) {
              return e();
            }
            const r = this.consume(2);
            this.#c.fin = (r[0] & 128) !== 0;
            this.#c.opcode = r[0] & 15;
            this.#c.originalOpcode ??= this.#c.opcode;
            this.#c.fragmented = !this.#c.fin && this.#c.opcode !== a.CONTINUATION;
            if (this.#c.fragmented && this.#c.opcode !== a.BINARY && this.#c.opcode !== a.TEXT) {
              M(this.ws, "Invalid frame type was fragmented.");
              return;
            }
            const s = r[1] & 127;
            if (s <= 125) {
              this.#c.payloadLength = s;
              this.#a = i.READ_DATA;
            } else if (s === 126) {
              this.#a = i.PAYLOADLENGTH_16;
            } else if (s === 127) {
              this.#a = i.PAYLOADLENGTH_64;
            }
            if (this.#c.fragmented && s > 125) {
              M(this.ws, "Fragmented frame exceeded 125 bytes.");
              return;
            } else if ((this.#c.opcode === a.PING || this.#c.opcode === a.PONG || this.#c.opcode === a.CLOSE) && s > 125) {
              M(this.ws, "Payload length for control frame exceeded 125 bytes.");
              return;
            } else if (this.#c.opcode === a.CLOSE) {
              if (s === 1) {
                M(this.ws, "Received close frame with a 1-byte body.");
                return;
              }
              const e = this.consume(s);
              this.#c.closeInfo = this.parseCloseBody(false, e);
              if (!this.ws[p]) {
                const e = Buffer.allocUnsafe(2);
                e.writeUInt16BE(this.#c.closeInfo.code, 0);
                const r = new q(e);
                this.ws[w].socket.write(r.createFrame(a.CLOSE), (e) => {
                  if (!e) {
                    this.ws[p] = true;
                  }
                });
              }
              this.ws[h] = l.CLOSING;
              this.ws[k] = true;
              this.end();
              return;
            } else if (this.#c.opcode === a.PING) {
              const r = this.consume(s);
              if (!this.ws[k]) {
                const e = new q(r);
                this.ws[w].socket.write(e.createFrame(a.PONG));
                if ($.ping.hasSubscribers) {
                  $.ping.publish({ payload: r });
                }
              }
              this.#a = i.INFO;
              if (this.#A > 0) {
                continue;
              } else {
                e();
                return;
              }
            } else if (this.#c.opcode === a.PONG) {
              const r = this.consume(s);
              if ($.pong.hasSubscribers) {
                $.pong.publish({ payload: r });
              }
              if (this.#A > 0) {
                continue;
              } else {
                e();
                return;
              }
            }
          } else if (this.#a === i.PAYLOADLENGTH_16) {
            if (this.#A < 2) {
              return e();
            }
            const r = this.consume(2);
            this.#c.payloadLength = r.readUInt16BE(0);
            this.#a = i.READ_DATA;
          } else if (this.#a === i.PAYLOADLENGTH_64) {
            if (this.#A < 8) {
              return e();
            }
            const r = this.consume(8);
            const s = r.readUInt32BE(0);
            if (s > 2 ** 31 - 1) {
              M(this.ws, "Received payload length > 2^31 bytes.");
              return;
            }
            const o = r.readUInt32BE(4);
            this.#c.payloadLength = (s << 8) + o;
            this.#a = i.READ_DATA;
          } else if (this.#a === i.READ_DATA) {
            if (this.#A < this.#c.payloadLength) {
              return e();
            } else if (this.#A >= this.#c.payloadLength) {
              const e = this.consume(this.#c.payloadLength);
              this.#l.push(e);
              if (!this.#c.fragmented || (this.#c.fin && this.#c.opcode === a.CONTINUATION)) {
                const e = Buffer.concat(this.#l);
                j(this.ws, this.#c.originalOpcode, e);
                this.#c = {};
                this.#l.length = 0;
              }
              this.#a = i.INFO;
            }
          }
          if (this.#A > 0) {
            continue;
          } else {
            e();
            break;
          }
        }
      }
      consume(e) {
        if (e > this.#A) {
          return null;
        } else if (e === 0) {
          return d;
        }
        if (this.#i[0].length === e) {
          this.#A -= this.#i[0].length;
          return this.#i.shift();
        }
        const r = Buffer.allocUnsafe(e);
        let s = 0;
        while (s !== e) {
          const o = this.#i[0];
          const { length: n } = o;
          if (n + s === e) {
            r.set(this.#i.shift(), s);
            break;
          } else if (n + s > e) {
            r.set(o.subarray(0, e - s), s);
            this.#i[0] = o.subarray(e - s);
            break;
          } else {
            r.set(this.#i.shift(), s);
            s += o.length;
          }
        }
        this.#A -= e;
        return r;
      }
      parseCloseBody(e, r) {
        let s;
        if (r.length >= 2) {
          s = r.readUInt16BE(0);
        }
        if (e) {
          if (!_(s)) {
            return null;
          }
          return { code: s };
        }
        let o = r.subarray(2);
        if (o[0] === 239 && o[1] === 187 && o[2] === 191) {
          o = o.subarray(3);
        }
        if (s !== undefined && !_(s)) {
          return null;
        }
        try {
          o = new TextDecoder("utf-8", { fatal: true }).decode(o);
        } catch {
          return null;
        }
        return { code: s, reason: o };
      }
      get closingInfo() {
        return this.#c.closeInfo;
      }
    }
    e.exports = { ByteParser: ByteParser };
  },
  2933: (e) => {
    e.exports = {
      kWebSocketURL: Symbol("url"),
      kReadyState: Symbol("ready state"),
      kController: Symbol("controller"),
      kResponse: Symbol("response"),
      kBinaryType: Symbol("binary type"),
      kSentClose: Symbol("sent close"),
      kReceivedClose: Symbol("received close"),
      kByteParser: Symbol("byte parser"),
    };
  },
  3574: (e, r, s) => {
    const { kReadyState: o, kController: n, kResponse: i, kBinaryType: a, kWebSocketURL: l } = s(2933);
    const { states: d, opcodes: h } = s(5913);
    const { MessageEvent: p, ErrorEvent: w } = s(6255);
    function isEstablished(e) {
      return e[o] === d.OPEN;
    }
    function isClosing(e) {
      return e[o] === d.CLOSING;
    }
    function isClosed(e) {
      return e[o] === d.CLOSED;
    }
    function fireEvent(e, r, s = Event, o) {
      const n = new s(e, o);
      r.dispatchEvent(n);
    }
    function websocketMessageReceived(e, r, s) {
      if (e[o] !== d.OPEN) {
        return;
      }
      let n;
      if (r === h.TEXT) {
        try {
          n = new TextDecoder("utf-8", { fatal: true }).decode(s);
        } catch {
          failWebsocketConnection(e, "Received invalid UTF-8 in text frame.");
          return;
        }
      } else if (r === h.BINARY) {
        if (e[a] === "blob") {
          n = new Blob([s]);
        } else {
          n = new Uint8Array(s).buffer;
        }
      }
      fireEvent("message", e, p, { origin: e[l].origin, data: n });
    }
    function isValidSubprotocol(e) {
      if (e.length === 0) {
        return false;
      }
      for (const r of e) {
        const e = r.charCodeAt(0);
        if (
          e < 33 ||
          e > 126 ||
          r === "(" ||
          r === ")" ||
          r === "<" ||
          r === ">" ||
          r === "@" ||
          r === "," ||
          r === ";" ||
          r === ":" ||
          r === "\\" ||
          r === '"' ||
          r === "/" ||
          r === "[" ||
          r === "]" ||
          r === "?" ||
          r === "=" ||
          r === "{" ||
          r === "}" ||
          e === 32 ||
          e === 9
        ) {
          return false;
        }
      }
      return true;
    }
    function isValidStatusCode(e) {
      if (e >= 1e3 && e < 1015) {
        return e !== 1004 && e !== 1005 && e !== 1006;
      }
      return e >= 3e3 && e <= 4999;
    }
    function failWebsocketConnection(e, r) {
      const { [n]: s, [i]: o } = e;
      s.abort();
      if (o?.socket && !o.socket.destroyed) {
        o.socket.destroy();
      }
      if (r) {
        fireEvent("error", e, w, { error: new Error(r) });
      }
    }
    e.exports = {
      isEstablished: isEstablished,
      isClosing: isClosing,
      isClosed: isClosed,
      fireEvent: fireEvent,
      isValidSubprotocol: isValidSubprotocol,
      isValidStatusCode: isValidStatusCode,
      failWebsocketConnection: failWebsocketConnection,
      websocketMessageReceived: websocketMessageReceived,
    };
  },
  5171: (e, r, s) => {
    const { webidl: o } = s(4222);
    const { DOMException: n } = s(7326);
    const { URLSerializer: i } = s(4322);
    const { getGlobalOrigin: a } = s(5628);
    const { staticPropertyDescriptors: l, states: d, opcodes: h, emptyBuffer: p } = s(5913);
    const { kWebSocketURL: w, kReadyState: k, kController: _, kBinaryType: M, kResponse: j, kSentClose: q, kByteParser: $ } = s(2933);
    const { isEstablished: ee, isClosing: te, isValidSubprotocol: re, failWebsocketConnection: se, fireEvent: oe } = s(3574);
    const { establishWebSocketConnection: ne } = s(8550);
    const { WebsocketFrameSend: ie } = s(1237);
    const { ByteParser: Ae } = s(3171);
    const { kEnumerableProperty: ae, isBlobLike: ce } = s(3440);
    const { getGlobalDispatcher: le } = s(2581);
    const { types: ue } = s(9023);
    let ge = false;
    class WebSocket extends EventTarget {
      #u = { open: null, error: null, close: null, message: null };
      #g = 0;
      #d = "";
      #f = "";
      constructor(e, r = []) {
        super();
        o.argumentLengthCheck(arguments, 1, { header: "WebSocket constructor" });
        if (!ge) {
          ge = true;
          process.emitWarning("WebSockets are experimental, expect them to change at any time.", { code: "UNDICI-WS" });
        }
        const s = o.converters["DOMString or sequence<DOMString> or WebSocketInit"](r);
        e = o.converters.USVString(e);
        r = s.protocols;
        const i = a();
        let l;
        try {
          l = new URL(e, i);
        } catch (e) {
          throw new n(e, "SyntaxError");
        }
        if (l.protocol === "http:") {
          l.protocol = "ws:";
        } else if (l.protocol === "https:") {
          l.protocol = "wss:";
        }
        if (l.protocol !== "ws:" && l.protocol !== "wss:") {
          throw new n(`Expected a ws: or wss: protocol, got ${l.protocol}`, "SyntaxError");
        }
        if (l.hash || l.href.endsWith("#")) {
          throw new n("Got fragment", "SyntaxError");
        }
        if (typeof r === "string") {
          r = [r];
        }
        if (r.length !== new Set(r.map((e) => e.toLowerCase())).size) {
          throw new n("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
        }
        if (r.length > 0 && !r.every((e) => re(e))) {
          throw new n("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
        }
        this[w] = new URL(l.href);
        this[_] = ne(l, r, this, (e) => this.#h(e), s);
        this[k] = WebSocket.CONNECTING;
        this[M] = "blob";
      }
      close(e = undefined, r = undefined) {
        o.brandCheck(this, WebSocket);
        if (e !== undefined) {
          e = o.converters["unsigned short"](e, { clamp: true });
        }
        if (r !== undefined) {
          r = o.converters.USVString(r);
        }
        if (e !== undefined) {
          if (e !== 1e3 && (e < 3e3 || e > 4999)) {
            throw new n("invalid code", "InvalidAccessError");
          }
        }
        let s = 0;
        if (r !== undefined) {
          s = Buffer.byteLength(r);
          if (s > 123) {
            throw new n(`Reason must be less than 123 bytes; received ${s}`, "SyntaxError");
          }
        }
        if (this[k] === WebSocket.CLOSING || this[k] === WebSocket.CLOSED) {
        } else if (!ee(this)) {
          se(this, "Connection was closed before it was established.");
          this[k] = WebSocket.CLOSING;
        } else if (!te(this)) {
          const o = new ie();
          if (e !== undefined && r === undefined) {
            o.frameData = Buffer.allocUnsafe(2);
            o.frameData.writeUInt16BE(e, 0);
          } else if (e !== undefined && r !== undefined) {
            o.frameData = Buffer.allocUnsafe(2 + s);
            o.frameData.writeUInt16BE(e, 0);
            o.frameData.write(r, 2, "utf-8");
          } else {
            o.frameData = p;
          }
          const n = this[j].socket;
          n.write(o.createFrame(h.CLOSE), (e) => {
            if (!e) {
              this[q] = true;
            }
          });
          this[k] = d.CLOSING;
        } else {
          this[k] = WebSocket.CLOSING;
        }
      }
      send(e) {
        o.brandCheck(this, WebSocket);
        o.argumentLengthCheck(arguments, 1, { header: "WebSocket.send" });
        e = o.converters.WebSocketSendData(e);
        if (this[k] === WebSocket.CONNECTING) {
          throw new n("Sent before connected.", "InvalidStateError");
        }
        if (!ee(this) || te(this)) {
          return;
        }
        const r = this[j].socket;
        if (typeof e === "string") {
          const s = Buffer.from(e);
          const o = new ie(s);
          const n = o.createFrame(h.TEXT);
          this.#g += s.byteLength;
          r.write(n, () => {
            this.#g -= s.byteLength;
          });
        } else if (ue.isArrayBuffer(e)) {
          const s = Buffer.from(e);
          const o = new ie(s);
          const n = o.createFrame(h.BINARY);
          this.#g += s.byteLength;
          r.write(n, () => {
            this.#g -= s.byteLength;
          });
        } else if (ArrayBuffer.isView(e)) {
          const s = Buffer.from(e, e.byteOffset, e.byteLength);
          const o = new ie(s);
          const n = o.createFrame(h.BINARY);
          this.#g += s.byteLength;
          r.write(n, () => {
            this.#g -= s.byteLength;
          });
        } else if (ce(e)) {
          const s = new ie();
          e.arrayBuffer().then((e) => {
            const o = Buffer.from(e);
            s.frameData = o;
            const n = s.createFrame(h.BINARY);
            this.#g += o.byteLength;
            r.write(n, () => {
              this.#g -= o.byteLength;
            });
          });
        }
      }
      get readyState() {
        o.brandCheck(this, WebSocket);
        return this[k];
      }
      get bufferedAmount() {
        o.brandCheck(this, WebSocket);
        return this.#g;
      }
      get url() {
        o.brandCheck(this, WebSocket);
        return i(this[w]);
      }
      get extensions() {
        o.brandCheck(this, WebSocket);
        return this.#f;
      }
      get protocol() {
        o.brandCheck(this, WebSocket);
        return this.#d;
      }
      get onopen() {
        o.brandCheck(this, WebSocket);
        return this.#u.open;
      }
      set onopen(e) {
        o.brandCheck(this, WebSocket);
        if (this.#u.open) {
          this.removeEventListener("open", this.#u.open);
        }
        if (typeof e === "function") {
          this.#u.open = e;
          this.addEventListener("open", e);
        } else {
          this.#u.open = null;
        }
      }
      get onerror() {
        o.brandCheck(this, WebSocket);
        return this.#u.error;
      }
      set onerror(e) {
        o.brandCheck(this, WebSocket);
        if (this.#u.error) {
          this.removeEventListener("error", this.#u.error);
        }
        if (typeof e === "function") {
          this.#u.error = e;
          this.addEventListener("error", e);
        } else {
          this.#u.error = null;
        }
      }
      get onclose() {
        o.brandCheck(this, WebSocket);
        return this.#u.close;
      }
      set onclose(e) {
        o.brandCheck(this, WebSocket);
        if (this.#u.close) {
          this.removeEventListener("close", this.#u.close);
        }
        if (typeof e === "function") {
          this.#u.close = e;
          this.addEventListener("close", e);
        } else {
          this.#u.close = null;
        }
      }
      get onmessage() {
        o.brandCheck(this, WebSocket);
        return this.#u.message;
      }
      set onmessage(e) {
        o.brandCheck(this, WebSocket);
        if (this.#u.message) {
          this.removeEventListener("message", this.#u.message);
        }
        if (typeof e === "function") {
          this.#u.message = e;
          this.addEventListener("message", e);
        } else {
          this.#u.message = null;
        }
      }
      get binaryType() {
        o.brandCheck(this, WebSocket);
        return this[M];
      }
      set binaryType(e) {
        o.brandCheck(this, WebSocket);
        if (e !== "blob" && e !== "arraybuffer") {
          this[M] = "blob";
        } else {
          this[M] = e;
        }
      }
      #h(e) {
        this[j] = e;
        const r = new Ae(this);
        r.on("drain", function onParserDrain() {
          this.ws[j].socket.resume();
        });
        e.socket.ws = this;
        this[$] = r;
        this[k] = d.OPEN;
        const s = e.headersList.get("sec-websocket-extensions");
        if (s !== null) {
          this.#f = s;
        }
        const o = e.headersList.get("sec-websocket-protocol");
        if (o !== null) {
          this.#d = o;
        }
        oe("open", this);
      }
    }
    WebSocket.CONNECTING = WebSocket.prototype.CONNECTING = d.CONNECTING;
    WebSocket.OPEN = WebSocket.prototype.OPEN = d.OPEN;
    WebSocket.CLOSING = WebSocket.prototype.CLOSING = d.CLOSING;
    WebSocket.CLOSED = WebSocket.prototype.CLOSED = d.CLOSED;
    Object.defineProperties(WebSocket.prototype, {
      CONNECTING: l,
      OPEN: l,
      CLOSING: l,
      CLOSED: l,
      url: ae,
      readyState: ae,
      bufferedAmount: ae,
      onopen: ae,
      onerror: ae,
      onclose: ae,
      close: ae,
      onmessage: ae,
      binaryType: ae,
      send: ae,
      extensions: ae,
      protocol: ae,
      [Symbol.toStringTag]: { value: "WebSocket", writable: false, enumerable: false, configurable: true },
    });
    Object.defineProperties(WebSocket, { CONNECTING: l, OPEN: l, CLOSING: l, CLOSED: l });
    o.converters["sequence<DOMString>"] = o.sequenceConverter(o.converters.DOMString);
    o.converters["DOMString or sequence<DOMString>"] = function (e) {
      if (o.util.Type(e) === "Object" && Symbol.iterator in e) {
        return o.converters["sequence<DOMString>"](e);
      }
      return o.converters.DOMString(e);
    };
    o.converters.WebSocketInit = o.dictionaryConverter([
      {
        key: "protocols",
        converter: o.converters["DOMString or sequence<DOMString>"],
        get defaultValue() {
          return [];
        },
      },
      {
        key: "dispatcher",
        converter: (e) => e,
        get defaultValue() {
          return le();
        },
      },
      { key: "headers", converter: o.nullableConverter(o.converters.HeadersInit) },
    ]);
    o.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function (e) {
      if (o.util.Type(e) === "Object" && !(Symbol.iterator in e)) {
        return o.converters.WebSocketInit(e);
      }
      return { protocols: o.converters["DOMString or sequence<DOMString>"](e) };
    };
    o.converters.WebSocketSendData = function (e) {
      if (o.util.Type(e) === "Object") {
        if (ce(e)) {
          return o.converters.Blob(e, { strict: false });
        }
        if (ArrayBuffer.isView(e) || ue.isAnyArrayBuffer(e)) {
          return o.converters.BufferSource(e);
        }
      }
      return o.converters.USVString(e);
    };
    e.exports = { WebSocket: WebSocket };
  },
  8264: (e) => {
    e.exports = wrappy;
    function wrappy(e, r) {
      if (e && r) return wrappy(e)(r);
      if (typeof e !== "function") throw new TypeError("need wrapper function");
      Object.keys(e).forEach(function (r) {
        wrapper[r] = e[r];
      });
      return wrapper;
      function wrapper() {
        var r = new Array(arguments.length);
        for (var s = 0; s < r.length; s++) {
          r[s] = arguments[s];
        }
        var o = e.apply(this, r);
        var n = r[r.length - 1];
        if (typeof o === "function" && o !== n) {
          Object.keys(n).forEach(function (e) {
            o[e] = n[e];
          });
        }
        return o;
      }
    }
  },
  2613: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("assert");
  },
  290: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("async_hooks");
  },
  181: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("buffer");
  },
  5317: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("child_process");
  },
  4236: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("console");
  },
  6982: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("crypto");
  },
  1637: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("diagnostics_channel");
  },
  4434: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("events");
  },
  9896: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("fs");
  },
  8611: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("http");
  },
  5675: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("http2");
  },
  5692: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("https");
  },
  9278: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("net");
  },
  7598: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:crypto");
  },
  8474: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:events");
  },
  7075: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:stream");
  },
  7975: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("node:util");
  },
  857: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("os");
  },
  6928: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("path");
  },
  2987: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("perf_hooks");
  },
  3480: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("querystring");
  },
  2203: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("stream");
  },
  3774: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("stream/web");
  },
  3193: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("string_decoder");
  },
  3557: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("timers");
  },
  4756: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("tls");
  },
  7016: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("url");
  },
  9023: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("util");
  },
  8253: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("util/types");
  },
  8167: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("worker_threads");
  },
  3106: (e) => {
    e.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("zlib");
  },
  7182: (e, r, s) => {
    const o = s(7075).Writable;
    const n = s(7975).inherits;
    const i = s(4136);
    const a = s(612);
    const l = s(2271);
    const d = 45;
    const h = Buffer.from("-");
    const p = Buffer.from("\r\n");
    const EMPTY_FN = function () {};
    function Dicer(e) {
      if (!(this instanceof Dicer)) {
        return new Dicer(e);
      }
      o.call(this, e);
      if (!e || (!e.headerFirst && typeof e.boundary !== "string")) {
        throw new TypeError("Boundary required");
      }
      if (typeof e.boundary === "string") {
        this.setBoundary(e.boundary);
      } else {
        this._bparser = undefined;
      }
      this._headerFirst = e.headerFirst;
      this._dashes = 0;
      this._parts = 0;
      this._finished = false;
      this._realFinish = false;
      this._isPreamble = true;
      this._justMatched = false;
      this._firstWrite = true;
      this._inHeader = true;
      this._part = undefined;
      this._cb = undefined;
      this._ignoreData = false;
      this._partOpts = { highWaterMark: e.partHwm };
      this._pause = false;
      const r = this;
      this._hparser = new l(e);
      this._hparser.on("header", function (e) {
        r._inHeader = false;
        r._part.emit("header", e);
      });
    }
    n(Dicer, o);
    Dicer.prototype.emit = function (e) {
      if (e === "finish" && !this._realFinish) {
        if (!this._finished) {
          const e = this;
          process.nextTick(function () {
            e.emit("error", new Error("Unexpected end of multipart data"));
            if (e._part && !e._ignoreData) {
              const r = e._isPreamble ? "Preamble" : "Part";
              e._part.emit("error", new Error(r + " terminated early due to unexpected end of multipart data"));
              e._part.push(null);
              process.nextTick(function () {
                e._realFinish = true;
                e.emit("finish");
                e._realFinish = false;
              });
              return;
            }
            e._realFinish = true;
            e.emit("finish");
            e._realFinish = false;
          });
        }
      } else {
        o.prototype.emit.apply(this, arguments);
      }
    };
    Dicer.prototype._write = function (e, r, s) {
      if (!this._hparser && !this._bparser) {
        return s();
      }
      if (this._headerFirst && this._isPreamble) {
        if (!this._part) {
          this._part = new a(this._partOpts);
          if (this.listenerCount("preamble") !== 0) {
            this.emit("preamble", this._part);
          } else {
            this._ignore();
          }
        }
        const r = this._hparser.push(e);
        if (!this._inHeader && r !== undefined && r < e.length) {
          e = e.slice(r);
        } else {
          return s();
        }
      }
      if (this._firstWrite) {
        this._bparser.push(p);
        this._firstWrite = false;
      }
      this._bparser.push(e);
      if (this._pause) {
        this._cb = s;
      } else {
        s();
      }
    };
    Dicer.prototype.reset = function () {
      this._part = undefined;
      this._bparser = undefined;
      this._hparser = undefined;
    };
    Dicer.prototype.setBoundary = function (e) {
      const r = this;
      this._bparser = new i("\r\n--" + e);
      this._bparser.on("info", function (e, s, o, n) {
        r._oninfo(e, s, o, n);
      });
    };
    Dicer.prototype._ignore = function () {
      if (this._part && !this._ignoreData) {
        this._ignoreData = true;
        this._part.on("error", EMPTY_FN);
        this._part.resume();
      }
    };
    Dicer.prototype._oninfo = function (e, r, s, o) {
      let n;
      const i = this;
      let l = 0;
      let p;
      let w = true;
      if (!this._part && this._justMatched && r) {
        while (this._dashes < 2 && s + l < o) {
          if (r[s + l] === d) {
            ++l;
            ++this._dashes;
          } else {
            if (this._dashes) {
              n = h;
            }
            this._dashes = 0;
            break;
          }
        }
        if (this._dashes === 2) {
          if (s + l < o && this.listenerCount("trailer") !== 0) {
            this.emit("trailer", r.slice(s + l, o));
          }
          this.reset();
          this._finished = true;
          if (i._parts === 0) {
            i._realFinish = true;
            i.emit("finish");
            i._realFinish = false;
          }
        }
        if (this._dashes) {
          return;
        }
      }
      if (this._justMatched) {
        this._justMatched = false;
      }
      if (!this._part) {
        this._part = new a(this._partOpts);
        this._part._read = function (e) {
          i._unpause();
        };
        if (this._isPreamble && this.listenerCount("preamble") !== 0) {
          this.emit("preamble", this._part);
        } else if (this._isPreamble !== true && this.listenerCount("part") !== 0) {
          this.emit("part", this._part);
        } else {
          this._ignore();
        }
        if (!this._isPreamble) {
          this._inHeader = true;
        }
      }
      if (r && s < o && !this._ignoreData) {
        if (this._isPreamble || !this._inHeader) {
          if (n) {
            w = this._part.push(n);
          }
          w = this._part.push(r.slice(s, o));
          if (!w) {
            this._pause = true;
          }
        } else if (!this._isPreamble && this._inHeader) {
          if (n) {
            this._hparser.push(n);
          }
          p = this._hparser.push(r.slice(s, o));
          if (!this._inHeader && p !== undefined && p < o) {
            this._oninfo(false, r, s + p, o);
          }
        }
      }
      if (e) {
        this._hparser.reset();
        if (this._isPreamble) {
          this._isPreamble = false;
        } else {
          if (s !== o) {
            ++this._parts;
            this._part.on("end", function () {
              if (--i._parts === 0) {
                if (i._finished) {
                  i._realFinish = true;
                  i.emit("finish");
                  i._realFinish = false;
                } else {
                  i._unpause();
                }
              }
            });
          }
        }
        this._part.push(null);
        this._part = undefined;
        this._ignoreData = false;
        this._justMatched = true;
        this._dashes = 0;
      }
    };
    Dicer.prototype._unpause = function () {
      if (!this._pause) {
        return;
      }
      this._pause = false;
      if (this._cb) {
        const e = this._cb;
        this._cb = undefined;
        e();
      }
    };
    e.exports = Dicer;
  },
  2271: (e, r, s) => {
    const o = s(8474).EventEmitter;
    const n = s(7975).inherits;
    const i = s(2393);
    const a = s(4136);
    const l = Buffer.from("\r\n\r\n");
    const d = /\r\n/g;
    const h = /^([^:]+):[ \t]?([\x00-\xFF]+)?$/;
    function HeaderParser(e) {
      o.call(this);
      e = e || {};
      const r = this;
      this.nread = 0;
      this.maxed = false;
      this.npairs = 0;
      this.maxHeaderPairs = i(e, "maxHeaderPairs", 2e3);
      this.maxHeaderSize = i(e, "maxHeaderSize", 80 * 1024);
      this.buffer = "";
      this.header = {};
      this.finished = false;
      this.ss = new a(l);
      this.ss.on("info", function (e, s, o, n) {
        if (s && !r.maxed) {
          if (r.nread + n - o >= r.maxHeaderSize) {
            n = r.maxHeaderSize - r.nread + o;
            r.nread = r.maxHeaderSize;
            r.maxed = true;
          } else {
            r.nread += n - o;
          }
          r.buffer += s.toString("binary", o, n);
        }
        if (e) {
          r._finish();
        }
      });
    }
    n(HeaderParser, o);
    HeaderParser.prototype.push = function (e) {
      const r = this.ss.push(e);
      if (this.finished) {
        return r;
      }
    };
    HeaderParser.prototype.reset = function () {
      this.finished = false;
      this.buffer = "";
      this.header = {};
      this.ss.reset();
    };
    HeaderParser.prototype._finish = function () {
      if (this.buffer) {
        this._parseHeader();
      }
      this.ss.matches = this.ss.maxMatches;
      const e = this.header;
      this.header = {};
      this.buffer = "";
      this.finished = true;
      this.nread = this.npairs = 0;
      this.maxed = false;
      this.emit("header", e);
    };
    HeaderParser.prototype._parseHeader = function () {
      if (this.npairs === this.maxHeaderPairs) {
        return;
      }
      const e = this.buffer.split(d);
      const r = e.length;
      let s, o;
      for (var n = 0; n < r; ++n) {
        if (e[n].length === 0) {
          continue;
        }
        if (e[n][0] === "\t" || e[n][0] === " ") {
          if (o) {
            this.header[o][this.header[o].length - 1] += e[n];
            continue;
          }
        }
        const r = e[n].indexOf(":");
        if (r === -1 || r === 0) {
          return;
        }
        s = h.exec(e[n]);
        o = s[1].toLowerCase();
        this.header[o] = this.header[o] || [];
        this.header[o].push(s[2] || "");
        if (++this.npairs === this.maxHeaderPairs) {
          break;
        }
      }
    };
    e.exports = HeaderParser;
  },
  612: (e, r, s) => {
    const o = s(7975).inherits;
    const n = s(7075).Readable;
    function PartStream(e) {
      n.call(this, e);
    }
    o(PartStream, n);
    PartStream.prototype._read = function (e) {};
    e.exports = PartStream;
  },
  4136: (e, r, s) => {
    const o = s(8474).EventEmitter;
    const n = s(7975).inherits;
    function SBMH(e) {
      if (typeof e === "string") {
        e = Buffer.from(e);
      }
      if (!Buffer.isBuffer(e)) {
        throw new TypeError("The needle has to be a String or a Buffer.");
      }
      const r = e.length;
      if (r === 0) {
        throw new Error("The needle cannot be an empty String/Buffer.");
      }
      if (r > 256) {
        throw new Error("The needle cannot have a length bigger than 256.");
      }
      this.maxMatches = Infinity;
      this.matches = 0;
      this._occ = new Array(256).fill(r);
      this._lookbehind_size = 0;
      this._needle = e;
      this._bufpos = 0;
      this._lookbehind = Buffer.alloc(r);
      for (var s = 0; s < r - 1; ++s) {
        this._occ[e[s]] = r - 1 - s;
      }
    }
    n(SBMH, o);
    SBMH.prototype.reset = function () {
      this._lookbehind_size = 0;
      this.matches = 0;
      this._bufpos = 0;
    };
    SBMH.prototype.push = function (e, r) {
      if (!Buffer.isBuffer(e)) {
        e = Buffer.from(e, "binary");
      }
      const s = e.length;
      this._bufpos = r || 0;
      let o;
      while (o !== s && this.matches < this.maxMatches) {
        o = this._sbmh_feed(e);
      }
      return o;
    };
    SBMH.prototype._sbmh_feed = function (e) {
      const r = e.length;
      const s = this._needle;
      const o = s.length;
      const n = s[o - 1];
      let i = -this._lookbehind_size;
      let a;
      if (i < 0) {
        while (i < 0 && i <= r - o) {
          a = this._sbmh_lookup_char(e, i + o - 1);
          if (a === n && this._sbmh_memcmp(e, i, o - 1)) {
            this._lookbehind_size = 0;
            ++this.matches;
            this.emit("info", true);
            return (this._bufpos = i + o);
          }
          i += this._occ[a];
        }
        if (i < 0) {
          while (i < 0 && !this._sbmh_memcmp(e, i, r - i)) {
            ++i;
          }
        }
        if (i >= 0) {
          this.emit("info", false, this._lookbehind, 0, this._lookbehind_size);
          this._lookbehind_size = 0;
        } else {
          const s = this._lookbehind_size + i;
          if (s > 0) {
            this.emit("info", false, this._lookbehind, 0, s);
          }
          this._lookbehind.copy(this._lookbehind, 0, s, this._lookbehind_size - s);
          this._lookbehind_size -= s;
          e.copy(this._lookbehind, this._lookbehind_size);
          this._lookbehind_size += r;
          this._bufpos = r;
          return r;
        }
      }
      i += (i >= 0) * this._bufpos;
      if (e.indexOf(s, i) !== -1) {
        i = e.indexOf(s, i);
        ++this.matches;
        if (i > 0) {
          this.emit("info", true, e, this._bufpos, i);
        } else {
          this.emit("info", true);
        }
        return (this._bufpos = i + o);
      } else {
        i = r - o;
      }
      while (i < r && (e[i] !== s[0] || Buffer.compare(e.subarray(i, i + r - i), s.subarray(0, r - i)) !== 0)) {
        ++i;
      }
      if (i < r) {
        e.copy(this._lookbehind, 0, i, i + (r - i));
        this._lookbehind_size = r - i;
      }
      if (i > 0) {
        this.emit("info", false, e, this._bufpos, i < r ? i : r);
      }
      this._bufpos = r;
      return r;
    };
    SBMH.prototype._sbmh_lookup_char = function (e, r) {
      return r < 0 ? this._lookbehind[this._lookbehind_size + r] : e[r];
    };
    SBMH.prototype._sbmh_memcmp = function (e, r, s) {
      for (var o = 0; o < s; ++o) {
        if (this._sbmh_lookup_char(e, r + o) !== this._needle[o]) {
          return false;
        }
      }
      return true;
    };
    e.exports = SBMH;
  },
  9581: (e, r, s) => {
    const o = s(7075).Writable;
    const { inherits: n } = s(7975);
    const i = s(7182);
    const a = s(1192);
    const l = s(855);
    const d = s(8929);
    function Busboy(e) {
      if (!(this instanceof Busboy)) {
        return new Busboy(e);
      }
      if (typeof e !== "object") {
        throw new TypeError("Busboy expected an options-Object.");
      }
      if (typeof e.headers !== "object") {
        throw new TypeError("Busboy expected an options-Object with headers-attribute.");
      }
      if (typeof e.headers["content-type"] !== "string") {
        throw new TypeError("Missing Content-Type-header.");
      }
      const { headers: r, ...s } = e;
      this.opts = { autoDestroy: false, ...s };
      o.call(this, this.opts);
      this._done = false;
      this._parser = this.getParserByHeaders(r);
      this._finished = false;
    }
    n(Busboy, o);
    Busboy.prototype.emit = function (e) {
      if (e === "finish") {
        if (!this._done) {
          this._parser?.end();
          return;
        } else if (this._finished) {
          return;
        }
        this._finished = true;
      }
      o.prototype.emit.apply(this, arguments);
    };
    Busboy.prototype.getParserByHeaders = function (e) {
      const r = d(e["content-type"]);
      const s = {
        defCharset: this.opts.defCharset,
        fileHwm: this.opts.fileHwm,
        headers: e,
        highWaterMark: this.opts.highWaterMark,
        isPartAFile: this.opts.isPartAFile,
        limits: this.opts.limits,
        parsedConType: r,
        preservePath: this.opts.preservePath,
      };
      if (a.detect.test(r[0])) {
        return new a(this, s);
      }
      if (l.detect.test(r[0])) {
        return new l(this, s);
      }
      throw new Error("Unsupported Content-Type.");
    };
    Busboy.prototype._write = function (e, r, s) {
      this._parser.write(e, s);
    };
    e.exports = Busboy;
    e.exports["default"] = Busboy;
    e.exports.Busboy = Busboy;
    e.exports.Dicer = i;
  },
  1192: (e, r, s) => {
    const { Readable: o } = s(7075);
    const { inherits: n } = s(7975);
    const i = s(7182);
    const a = s(8929);
    const l = s(2747);
    const d = s(692);
    const h = s(2393);
    const p = /^boundary$/i;
    const w = /^form-data$/i;
    const k = /^charset$/i;
    const _ = /^filename$/i;
    const M = /^name$/i;
    Multipart.detect = /^multipart\/form-data/i;
    function Multipart(e, r) {
      let s;
      let o;
      const n = this;
      let j;
      const q = r.limits;
      const $ = r.isPartAFile || ((e, r, s) => r === "application/octet-stream" || s !== undefined);
      const ee = r.parsedConType || [];
      const te = r.defCharset || "utf8";
      const re = r.preservePath;
      const se = { highWaterMark: r.fileHwm };
      for (s = 0, o = ee.length; s < o; ++s) {
        if (Array.isArray(ee[s]) && p.test(ee[s][0])) {
          j = ee[s][1];
          break;
        }
      }
      function checkFinished() {
        if (de === 0 && pe && !e._done) {
          pe = false;
          n.end();
        }
      }
      if (typeof j !== "string") {
        throw new Error("Multipart: Boundary not found");
      }
      const oe = h(q, "fieldSize", 1 * 1024 * 1024);
      const ne = h(q, "fileSize", Infinity);
      const ie = h(q, "files", Infinity);
      const Ae = h(q, "fields", Infinity);
      const ae = h(q, "parts", Infinity);
      const ce = h(q, "headerPairs", 2e3);
      const le = h(q, "headerSize", 80 * 1024);
      let ue = 0;
      let ge = 0;
      let de = 0;
      let fe;
      let he;
      let pe = false;
      this._needDrain = false;
      this._pause = false;
      this._cb = undefined;
      this._nparts = 0;
      this._boy = e;
      const Ee = { boundary: j, maxHeaderPairs: ce, maxHeaderSize: le, partHwm: se.highWaterMark, highWaterMark: r.highWaterMark };
      this.parser = new i(Ee);
      this.parser
        .on("drain", function () {
          n._needDrain = false;
          if (n._cb && !n._pause) {
            const e = n._cb;
            n._cb = undefined;
            e();
          }
        })
        .on("part", function onPart(r) {
          if (++n._nparts > ae) {
            n.parser.removeListener("part", onPart);
            n.parser.on("part", skipPart);
            e.hitPartsLimit = true;
            e.emit("partsLimit");
            return skipPart(r);
          }
          if (he) {
            const e = he;
            e.emit("end");
            e.removeAllListeners("end");
          }
          r.on("header", function (i) {
            let h;
            let p;
            let j;
            let q;
            let ee;
            let ae;
            let ce = 0;
            if (i["content-type"]) {
              j = a(i["content-type"][0]);
              if (j[0]) {
                h = j[0].toLowerCase();
                for (s = 0, o = j.length; s < o; ++s) {
                  if (k.test(j[s][0])) {
                    q = j[s][1].toLowerCase();
                    break;
                  }
                }
              }
            }
            if (h === undefined) {
              h = "text/plain";
            }
            if (q === undefined) {
              q = te;
            }
            if (i["content-disposition"]) {
              j = a(i["content-disposition"][0]);
              if (!w.test(j[0])) {
                return skipPart(r);
              }
              for (s = 0, o = j.length; s < o; ++s) {
                if (M.test(j[s][0])) {
                  p = j[s][1];
                } else if (_.test(j[s][0])) {
                  ae = j[s][1];
                  if (!re) {
                    ae = d(ae);
                  }
                }
              }
            } else {
              return skipPart(r);
            }
            if (i["content-transfer-encoding"]) {
              ee = i["content-transfer-encoding"][0].toLowerCase();
            } else {
              ee = "7bit";
            }
            let le, pe;
            if ($(p, h, ae)) {
              if (ue === ie) {
                if (!e.hitFilesLimit) {
                  e.hitFilesLimit = true;
                  e.emit("filesLimit");
                }
                return skipPart(r);
              }
              ++ue;
              if (e.listenerCount("file") === 0) {
                n.parser._ignore();
                return;
              }
              ++de;
              const s = new FileStream(se);
              fe = s;
              s.on("end", function () {
                --de;
                n._pause = false;
                checkFinished();
                if (n._cb && !n._needDrain) {
                  const e = n._cb;
                  n._cb = undefined;
                  e();
                }
              });
              s._read = function (e) {
                if (!n._pause) {
                  return;
                }
                n._pause = false;
                if (n._cb && !n._needDrain) {
                  const e = n._cb;
                  n._cb = undefined;
                  e();
                }
              };
              e.emit("file", p, s, ae, ee, h);
              le = function (e) {
                if ((ce += e.length) > ne) {
                  const o = ne - ce + e.length;
                  if (o > 0) {
                    s.push(e.slice(0, o));
                  }
                  s.truncated = true;
                  s.bytesRead = ne;
                  r.removeAllListeners("data");
                  s.emit("limit");
                  return;
                } else if (!s.push(e)) {
                  n._pause = true;
                }
                s.bytesRead = ce;
              };
              pe = function () {
                fe = undefined;
                s.push(null);
              };
            } else {
              if (ge === Ae) {
                if (!e.hitFieldsLimit) {
                  e.hitFieldsLimit = true;
                  e.emit("fieldsLimit");
                }
                return skipPart(r);
              }
              ++ge;
              ++de;
              let s = "";
              let o = false;
              he = r;
              le = function (e) {
                if ((ce += e.length) > oe) {
                  const n = oe - (ce - e.length);
                  s += e.toString("binary", 0, n);
                  o = true;
                  r.removeAllListeners("data");
                } else {
                  s += e.toString("binary");
                }
              };
              pe = function () {
                he = undefined;
                if (s.length) {
                  s = l(s, "binary", q);
                }
                e.emit("field", p, s, false, o, ee, h);
                --de;
                checkFinished();
              };
            }
            r._readableState.sync = false;
            r.on("data", le);
            r.on("end", pe);
          }).on("error", function (e) {
            if (fe) {
              fe.emit("error", e);
            }
          });
        })
        .on("error", function (r) {
          e.emit("error", r);
        })
        .on("finish", function () {
          pe = true;
          checkFinished();
        });
    }
    Multipart.prototype.write = function (e, r) {
      const s = this.parser.write(e);
      if (s && !this._pause) {
        r();
      } else {
        this._needDrain = !s;
        this._cb = r;
      }
    };
    Multipart.prototype.end = function () {
      const e = this;
      if (e.parser.writable) {
        e.parser.end();
      } else if (!e._boy._done) {
        process.nextTick(function () {
          e._boy._done = true;
          e._boy.emit("finish");
        });
      }
    };
    function skipPart(e) {
      e.resume();
    }
    function FileStream(e) {
      o.call(this, e);
      this.bytesRead = 0;
      this.truncated = false;
    }
    n(FileStream, o);
    FileStream.prototype._read = function (e) {};
    e.exports = Multipart;
  },
  855: (e, r, s) => {
    const o = s(1496);
    const n = s(2747);
    const i = s(2393);
    const a = /^charset$/i;
    UrlEncoded.detect = /^application\/x-www-form-urlencoded/i;
    function UrlEncoded(e, r) {
      const s = r.limits;
      const n = r.parsedConType;
      this.boy = e;
      this.fieldSizeLimit = i(s, "fieldSize", 1 * 1024 * 1024);
      this.fieldNameSizeLimit = i(s, "fieldNameSize", 100);
      this.fieldsLimit = i(s, "fields", Infinity);
      let l;
      for (var d = 0, h = n.length; d < h; ++d) {
        if (Array.isArray(n[d]) && a.test(n[d][0])) {
          l = n[d][1].toLowerCase();
          break;
        }
      }
      if (l === undefined) {
        l = r.defCharset || "utf8";
      }
      this.decoder = new o();
      this.charset = l;
      this._fields = 0;
      this._state = "key";
      this._checkingBytes = true;
      this._bytesKey = 0;
      this._bytesVal = 0;
      this._key = "";
      this._val = "";
      this._keyTrunc = false;
      this._valTrunc = false;
      this._hitLimit = false;
    }
    UrlEncoded.prototype.write = function (e, r) {
      if (this._fields === this.fieldsLimit) {
        if (!this.boy.hitFieldsLimit) {
          this.boy.hitFieldsLimit = true;
          this.boy.emit("fieldsLimit");
        }
        return r();
      }
      let s;
      let o;
      let i;
      let a = 0;
      const l = e.length;
      while (a < l) {
        if (this._state === "key") {
          s = o = undefined;
          for (i = a; i < l; ++i) {
            if (!this._checkingBytes) {
              ++a;
            }
            if (e[i] === 61) {
              s = i;
              break;
            } else if (e[i] === 38) {
              o = i;
              break;
            }
            if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {
              this._hitLimit = true;
              break;
            } else if (this._checkingBytes) {
              ++this._bytesKey;
            }
          }
          if (s !== undefined) {
            if (s > a) {
              this._key += this.decoder.write(e.toString("binary", a, s));
            }
            this._state = "val";
            this._hitLimit = false;
            this._checkingBytes = true;
            this._val = "";
            this._bytesVal = 0;
            this._valTrunc = false;
            this.decoder.reset();
            a = s + 1;
          } else if (o !== undefined) {
            ++this._fields;
            let s;
            const i = this._keyTrunc;
            if (o > a) {
              s = this._key += this.decoder.write(e.toString("binary", a, o));
            } else {
              s = this._key;
            }
            this._hitLimit = false;
            this._checkingBytes = true;
            this._key = "";
            this._bytesKey = 0;
            this._keyTrunc = false;
            this.decoder.reset();
            if (s.length) {
              this.boy.emit("field", n(s, "binary", this.charset), "", i, false);
            }
            a = o + 1;
            if (this._fields === this.fieldsLimit) {
              return r();
            }
          } else if (this._hitLimit) {
            if (i > a) {
              this._key += this.decoder.write(e.toString("binary", a, i));
            }
            a = i;
            if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {
              this._checkingBytes = false;
              this._keyTrunc = true;
            }
          } else {
            if (a < l) {
              this._key += this.decoder.write(e.toString("binary", a));
            }
            a = l;
          }
        } else {
          o = undefined;
          for (i = a; i < l; ++i) {
            if (!this._checkingBytes) {
              ++a;
            }
            if (e[i] === 38) {
              o = i;
              break;
            }
            if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {
              this._hitLimit = true;
              break;
            } else if (this._checkingBytes) {
              ++this._bytesVal;
            }
          }
          if (o !== undefined) {
            ++this._fields;
            if (o > a) {
              this._val += this.decoder.write(e.toString("binary", a, o));
            }
            this.boy.emit("field", n(this._key, "binary", this.charset), n(this._val, "binary", this.charset), this._keyTrunc, this._valTrunc);
            this._state = "key";
            this._hitLimit = false;
            this._checkingBytes = true;
            this._key = "";
            this._bytesKey = 0;
            this._keyTrunc = false;
            this.decoder.reset();
            a = o + 1;
            if (this._fields === this.fieldsLimit) {
              return r();
            }
          } else if (this._hitLimit) {
            if (i > a) {
              this._val += this.decoder.write(e.toString("binary", a, i));
            }
            a = i;
            if ((this._val === "" && this.fieldSizeLimit === 0) || (this._bytesVal = this._val.length) === this.fieldSizeLimit) {
              this._checkingBytes = false;
              this._valTrunc = true;
            }
          } else {
            if (a < l) {
              this._val += this.decoder.write(e.toString("binary", a));
            }
            a = l;
          }
        }
      }
      r();
    };
    UrlEncoded.prototype.end = function () {
      if (this.boy._done) {
        return;
      }
      if (this._state === "key" && this._key.length > 0) {
        this.boy.emit("field", n(this._key, "binary", this.charset), "", this._keyTrunc, false);
      } else if (this._state === "val") {
        this.boy.emit("field", n(this._key, "binary", this.charset), n(this._val, "binary", this.charset), this._keyTrunc, this._valTrunc);
      }
      this.boy._done = true;
      this.boy.emit("finish");
    };
    e.exports = UrlEncoded;
  },
  1496: (e) => {
    const r = /\+/g;
    const s = [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
    function Decoder() {
      this.buffer = undefined;
    }
    Decoder.prototype.write = function (e) {
      e = e.replace(r, " ");
      let o = "";
      let n = 0;
      let i = 0;
      const a = e.length;
      for (; n < a; ++n) {
        if (this.buffer !== undefined) {
          if (!s[e.charCodeAt(n)]) {
            o += "%" + this.buffer;
            this.buffer = undefined;
            --n;
          } else {
            this.buffer += e[n];
            ++i;
            if (this.buffer.length === 2) {
              o += String.fromCharCode(parseInt(this.buffer, 16));
              this.buffer = undefined;
            }
          }
        } else if (e[n] === "%") {
          if (n > i) {
            o += e.substring(i, n);
            i = n;
          }
          this.buffer = "";
          ++i;
        }
      }
      if (i < a && this.buffer === undefined) {
        o += e.substring(i);
      }
      return o;
    };
    Decoder.prototype.reset = function () {
      this.buffer = undefined;
    };
    e.exports = Decoder;
  },
  692: (e) => {
    e.exports = function basename(e) {
      if (typeof e !== "string") {
        return "";
      }
      for (var r = e.length - 1; r >= 0; --r) {
        switch (e.charCodeAt(r)) {
          case 47:
          case 92:
            e = e.slice(r + 1);
            return e === ".." || e === "." ? "" : e;
        }
      }
      return e === ".." || e === "." ? "" : e;
    };
  },
  2747: function (e) {
    const r = new TextDecoder("utf-8");
    const s = new Map([
      ["utf-8", r],
      ["utf8", r],
    ]);
    function getDecoder(e) {
      let r;
      while (true) {
        switch (e) {
          case "utf-8":
          case "utf8":
            return o.utf8;
          case "latin1":
          case "ascii":
          case "us-ascii":
          case "iso-8859-1":
          case "iso8859-1":
          case "iso88591":
          case "iso_8859-1":
          case "windows-1252":
          case "iso_8859-1:1987":
          case "cp1252":
          case "x-cp1252":
            return o.latin1;
          case "utf16le":
          case "utf-16le":
          case "ucs2":
          case "ucs-2":
            return o.utf16le;
          case "base64":
            return o.base64;
          default:
            if (r === undefined) {
              r = true;
              e = e.toLowerCase();
              continue;
            }
            return o.other.bind(e);
        }
      }
    }
    const o = {
      utf8: (e, r) => {
        if (e.length === 0) {
          return "";
        }
        if (typeof e === "string") {
          e = Buffer.from(e, r);
        }
        return e.utf8Slice(0, e.length);
      },
      latin1: (e, r) => {
        if (e.length === 0) {
          return "";
        }
        if (typeof e === "string") {
          return e;
        }
        return e.latin1Slice(0, e.length);
      },
      utf16le: (e, r) => {
        if (e.length === 0) {
          return "";
        }
        if (typeof e === "string") {
          e = Buffer.from(e, r);
        }
        return e.ucs2Slice(0, e.length);
      },
      base64: (e, r) => {
        if (e.length === 0) {
          return "";
        }
        if (typeof e === "string") {
          e = Buffer.from(e, r);
        }
        return e.base64Slice(0, e.length);
      },
      other: (e, r) => {
        if (e.length === 0) {
          return "";
        }
        if (typeof e === "string") {
          e = Buffer.from(e, r);
        }
        if (s.has(this.toString())) {
          try {
            return s.get(this).decode(e);
          } catch {}
        }
        return typeof e === "string" ? e : e.toString();
      },
    };
    function decodeText(e, r, s) {
      if (e) {
        return getDecoder(s)(e, r);
      }
      return e;
    }
    e.exports = decodeText;
  },
  2393: (e) => {
    e.exports = function getLimit(e, r, s) {
      if (!e || e[r] === undefined || e[r] === null) {
        return s;
      }
      if (typeof e[r] !== "number" || isNaN(e[r])) {
        throw new TypeError("Limit " + r + " is not a valid number");
      }
      return e[r];
    };
  },
  8929: (e, r, s) => {
    const o = s(2747);
    const n = /%[a-fA-F0-9][a-fA-F0-9]/g;
    const i = {
      "%00": "\0",
      "%01": "",
      "%02": "",
      "%03": "",
      "%04": "",
      "%05": "",
      "%06": "",
      "%07": "",
      "%08": "\b",
      "%09": "\t",
      "%0a": "\n",
      "%0A": "\n",
      "%0b": "\v",
      "%0B": "\v",
      "%0c": "\f",
      "%0C": "\f",
      "%0d": "\r",
      "%0D": "\r",
      "%0e": "",
      "%0E": "",
      "%0f": "",
      "%0F": "",
      "%10": "",
      "%11": "",
      "%12": "",
      "%13": "",
      "%14": "",
      "%15": "",
      "%16": "",
      "%17": "",
      "%18": "",
      "%19": "",
      "%1a": "",
      "%1A": "",
      "%1b": "",
      "%1B": "",
      "%1c": "",
      "%1C": "",
      "%1d": "",
      "%1D": "",
      "%1e": "",
      "%1E": "",
      "%1f": "",
      "%1F": "",
      "%20": " ",
      "%21": "!",
      "%22": '"',
      "%23": "#",
      "%24": "$",
      "%25": "%",
      "%26": "&",
      "%27": "'",
      "%28": "(",
      "%29": ")",
      "%2a": "*",
      "%2A": "*",
      "%2b": "+",
      "%2B": "+",
      "%2c": ",",
      "%2C": ",",
      "%2d": "-",
      "%2D": "-",
      "%2e": ".",
      "%2E": ".",
      "%2f": "/",
      "%2F": "/",
      "%30": "0",
      "%31": "1",
      "%32": "2",
      "%33": "3",
      "%34": "4",
      "%35": "5",
      "%36": "6",
      "%37": "7",
      "%38": "8",
      "%39": "9",
      "%3a": ":",
      "%3A": ":",
      "%3b": ";",
      "%3B": ";",
      "%3c": "<",
      "%3C": "<",
      "%3d": "=",
      "%3D": "=",
      "%3e": ">",
      "%3E": ">",
      "%3f": "?",
      "%3F": "?",
      "%40": "@",
      "%41": "A",
      "%42": "B",
      "%43": "C",
      "%44": "D",
      "%45": "E",
      "%46": "F",
      "%47": "G",
      "%48": "H",
      "%49": "I",
      "%4a": "J",
      "%4A": "J",
      "%4b": "K",
      "%4B": "K",
      "%4c": "L",
      "%4C": "L",
      "%4d": "M",
      "%4D": "M",
      "%4e": "N",
      "%4E": "N",
      "%4f": "O",
      "%4F": "O",
      "%50": "P",
      "%51": "Q",
      "%52": "R",
      "%53": "S",
      "%54": "T",
      "%55": "U",
      "%56": "V",
      "%57": "W",
      "%58": "X",
      "%59": "Y",
      "%5a": "Z",
      "%5A": "Z",
      "%5b": "[",
      "%5B": "[",
      "%5c": "\\",
      "%5C": "\\",
      "%5d": "]",
      "%5D": "]",
      "%5e": "^",
      "%5E": "^",
      "%5f": "_",
      "%5F": "_",
      "%60": "`",
      "%61": "a",
      "%62": "b",
      "%63": "c",
      "%64": "d",
      "%65": "e",
      "%66": "f",
      "%67": "g",
      "%68": "h",
      "%69": "i",
      "%6a": "j",
      "%6A": "j",
      "%6b": "k",
      "%6B": "k",
      "%6c": "l",
      "%6C": "l",
      "%6d": "m",
      "%6D": "m",
      "%6e": "n",
      "%6E": "n",
      "%6f": "o",
      "%6F": "o",
      "%70": "p",
      "%71": "q",
      "%72": "r",
      "%73": "s",
      "%74": "t",
      "%75": "u",
      "%76": "v",
      "%77": "w",
      "%78": "x",
      "%79": "y",
      "%7a": "z",
      "%7A": "z",
      "%7b": "{",
      "%7B": "{",
      "%7c": "|",
      "%7C": "|",
      "%7d": "}",
      "%7D": "}",
      "%7e": "~",
      "%7E": "~",
      "%7f": "",
      "%7F": "",
      "%80": "",
      "%81": "",
      "%82": "",
      "%83": "",
      "%84": "",
      "%85": "",
      "%86": "",
      "%87": "",
      "%88": "",
      "%89": "",
      "%8a": "",
      "%8A": "",
      "%8b": "",
      "%8B": "",
      "%8c": "",
      "%8C": "",
      "%8d": "",
      "%8D": "",
      "%8e": "",
      "%8E": "",
      "%8f": "",
      "%8F": "",
      "%90": "",
      "%91": "",
      "%92": "",
      "%93": "",
      "%94": "",
      "%95": "",
      "%96": "",
      "%97": "",
      "%98": "",
      "%99": "",
      "%9a": "",
      "%9A": "",
      "%9b": "",
      "%9B": "",
      "%9c": "",
      "%9C": "",
      "%9d": "",
      "%9D": "",
      "%9e": "",
      "%9E": "",
      "%9f": "",
      "%9F": "",
      "%a0": " ",
      "%A0": " ",
      "%a1": "¡",
      "%A1": "¡",
      "%a2": "¢",
      "%A2": "¢",
      "%a3": "£",
      "%A3": "£",
      "%a4": "¤",
      "%A4": "¤",
      "%a5": "¥",
      "%A5": "¥",
      "%a6": "¦",
      "%A6": "¦",
      "%a7": "§",
      "%A7": "§",
      "%a8": "¨",
      "%A8": "¨",
      "%a9": "©",
      "%A9": "©",
      "%aa": "ª",
      "%Aa": "ª",
      "%aA": "ª",
      "%AA": "ª",
      "%ab": "«",
      "%Ab": "«",
      "%aB": "«",
      "%AB": "«",
      "%ac": "¬",
      "%Ac": "¬",
      "%aC": "¬",
      "%AC": "¬",
      "%ad": "­",
      "%Ad": "­",
      "%aD": "­",
      "%AD": "­",
      "%ae": "®",
      "%Ae": "®",
      "%aE": "®",
      "%AE": "®",
      "%af": "¯",
      "%Af": "¯",
      "%aF": "¯",
      "%AF": "¯",
      "%b0": "°",
      "%B0": "°",
      "%b1": "±",
      "%B1": "±",
      "%b2": "²",
      "%B2": "²",
      "%b3": "³",
      "%B3": "³",
      "%b4": "´",
      "%B4": "´",
      "%b5": "µ",
      "%B5": "µ",
      "%b6": "¶",
      "%B6": "¶",
      "%b7": "·",
      "%B7": "·",
      "%b8": "¸",
      "%B8": "¸",
      "%b9": "¹",
      "%B9": "¹",
      "%ba": "º",
      "%Ba": "º",
      "%bA": "º",
      "%BA": "º",
      "%bb": "»",
      "%Bb": "»",
      "%bB": "»",
      "%BB": "»",
      "%bc": "¼",
      "%Bc": "¼",
      "%bC": "¼",
      "%BC": "¼",
      "%bd": "½",
      "%Bd": "½",
      "%bD": "½",
      "%BD": "½",
      "%be": "¾",
      "%Be": "¾",
      "%bE": "¾",
      "%BE": "¾",
      "%bf": "¿",
      "%Bf": "¿",
      "%bF": "¿",
      "%BF": "¿",
      "%c0": "À",
      "%C0": "À",
      "%c1": "Á",
      "%C1": "Á",
      "%c2": "Â",
      "%C2": "Â",
      "%c3": "Ã",
      "%C3": "Ã",
      "%c4": "Ä",
      "%C4": "Ä",
      "%c5": "Å",
      "%C5": "Å",
      "%c6": "Æ",
      "%C6": "Æ",
      "%c7": "Ç",
      "%C7": "Ç",
      "%c8": "È",
      "%C8": "È",
      "%c9": "É",
      "%C9": "É",
      "%ca": "Ê",
      "%Ca": "Ê",
      "%cA": "Ê",
      "%CA": "Ê",
      "%cb": "Ë",
      "%Cb": "Ë",
      "%cB": "Ë",
      "%CB": "Ë",
      "%cc": "Ì",
      "%Cc": "Ì",
      "%cC": "Ì",
      "%CC": "Ì",
      "%cd": "Í",
      "%Cd": "Í",
      "%cD": "Í",
      "%CD": "Í",
      "%ce": "Î",
      "%Ce": "Î",
      "%cE": "Î",
      "%CE": "Î",
      "%cf": "Ï",
      "%Cf": "Ï",
      "%cF": "Ï",
      "%CF": "Ï",
      "%d0": "Ð",
      "%D0": "Ð",
      "%d1": "Ñ",
      "%D1": "Ñ",
      "%d2": "Ò",
      "%D2": "Ò",
      "%d3": "Ó",
      "%D3": "Ó",
      "%d4": "Ô",
      "%D4": "Ô",
      "%d5": "Õ",
      "%D5": "Õ",
      "%d6": "Ö",
      "%D6": "Ö",
      "%d7": "×",
      "%D7": "×",
      "%d8": "Ø",
      "%D8": "Ø",
      "%d9": "Ù",
      "%D9": "Ù",
      "%da": "Ú",
      "%Da": "Ú",
      "%dA": "Ú",
      "%DA": "Ú",
      "%db": "Û",
      "%Db": "Û",
      "%dB": "Û",
      "%DB": "Û",
      "%dc": "Ü",
      "%Dc": "Ü",
      "%dC": "Ü",
      "%DC": "Ü",
      "%dd": "Ý",
      "%Dd": "Ý",
      "%dD": "Ý",
      "%DD": "Ý",
      "%de": "Þ",
      "%De": "Þ",
      "%dE": "Þ",
      "%DE": "Þ",
      "%df": "ß",
      "%Df": "ß",
      "%dF": "ß",
      "%DF": "ß",
      "%e0": "à",
      "%E0": "à",
      "%e1": "á",
      "%E1": "á",
      "%e2": "â",
      "%E2": "â",
      "%e3": "ã",
      "%E3": "ã",
      "%e4": "ä",
      "%E4": "ä",
      "%e5": "å",
      "%E5": "å",
      "%e6": "æ",
      "%E6": "æ",
      "%e7": "ç",
      "%E7": "ç",
      "%e8": "è",
      "%E8": "è",
      "%e9": "é",
      "%E9": "é",
      "%ea": "ê",
      "%Ea": "ê",
      "%eA": "ê",
      "%EA": "ê",
      "%eb": "ë",
      "%Eb": "ë",
      "%eB": "ë",
      "%EB": "ë",
      "%ec": "ì",
      "%Ec": "ì",
      "%eC": "ì",
      "%EC": "ì",
      "%ed": "í",
      "%Ed": "í",
      "%eD": "í",
      "%ED": "í",
      "%ee": "î",
      "%Ee": "î",
      "%eE": "î",
      "%EE": "î",
      "%ef": "ï",
      "%Ef": "ï",
      "%eF": "ï",
      "%EF": "ï",
      "%f0": "ð",
      "%F0": "ð",
      "%f1": "ñ",
      "%F1": "ñ",
      "%f2": "ò",
      "%F2": "ò",
      "%f3": "ó",
      "%F3": "ó",
      "%f4": "ô",
      "%F4": "ô",
      "%f5": "õ",
      "%F5": "õ",
      "%f6": "ö",
      "%F6": "ö",
      "%f7": "÷",
      "%F7": "÷",
      "%f8": "ø",
      "%F8": "ø",
      "%f9": "ù",
      "%F9": "ù",
      "%fa": "ú",
      "%Fa": "ú",
      "%fA": "ú",
      "%FA": "ú",
      "%fb": "û",
      "%Fb": "û",
      "%fB": "û",
      "%FB": "û",
      "%fc": "ü",
      "%Fc": "ü",
      "%fC": "ü",
      "%FC": "ü",
      "%fd": "ý",
      "%Fd": "ý",
      "%fD": "ý",
      "%FD": "ý",
      "%fe": "þ",
      "%Fe": "þ",
      "%fE": "þ",
      "%FE": "þ",
      "%ff": "ÿ",
      "%Ff": "ÿ",
      "%fF": "ÿ",
      "%FF": "ÿ",
    };
    function encodedReplacer(e) {
      return i[e];
    }
    const a = 0;
    const l = 1;
    const d = 2;
    const h = 3;
    function parseParams(e) {
      const r = [];
      let s = a;
      let i = "";
      let p = false;
      let w = false;
      let k = 0;
      let _ = "";
      const M = e.length;
      for (var j = 0; j < M; ++j) {
        const M = e[j];
        if (M === "\\" && p) {
          if (w) {
            w = false;
          } else {
            w = true;
            continue;
          }
        } else if (M === '"') {
          if (!w) {
            if (p) {
              p = false;
              s = a;
            } else {
              p = true;
            }
            continue;
          } else {
            w = false;
          }
        } else {
          if (w && p) {
            _ += "\\";
          }
          w = false;
          if ((s === d || s === h) && M === "'") {
            if (s === d) {
              s = h;
              i = _.substring(1);
            } else {
              s = l;
            }
            _ = "";
            continue;
          } else if (s === a && (M === "*" || M === "=") && r.length) {
            s = M === "*" ? d : l;
            r[k] = [_, undefined];
            _ = "";
            continue;
          } else if (!p && M === ";") {
            s = a;
            if (i) {
              if (_.length) {
                _ = o(_.replace(n, encodedReplacer), "binary", i);
              }
              i = "";
            } else if (_.length) {
              _ = o(_, "binary", "utf8");
            }
            if (r[k] === undefined) {
              r[k] = _;
            } else {
              r[k][1] = _;
            }
            _ = "";
            ++k;
            continue;
          } else if (!p && (M === " " || M === "\t")) {
            continue;
          }
        }
        _ += M;
      }
      if (i && _.length) {
        _ = o(_.replace(n, encodedReplacer), "binary", i);
      } else if (_) {
        _ = o(_, "binary", "utf8");
      }
      if (r[k] === undefined) {
        if (_) {
          r[k] = _;
        }
      } else {
        r[k][1] = _;
      }
      return r;
    }
    e.exports = parseParams;
  },
  1120: (e) => {
    var r;
    const s = function NullObject() {};
    s.prototype = Object.create(null);
    const o = /; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu;
    const n = /\\([\v\u0020-\u00ff])/gu;
    const i = /^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u;
    const a = { type: "", parameters: new s() };
    Object.freeze(a.parameters);
    Object.freeze(a);
    function parse(e) {
      if (typeof e !== "string") {
        throw new TypeError("argument header is required and must be a string");
      }
      let r = e.indexOf(";");
      const a = r !== -1 ? e.slice(0, r).trim() : e.trim();
      if (i.test(a) === false) {
        throw new TypeError("invalid media type");
      }
      const l = { type: a.toLowerCase(), parameters: new s() };
      if (r === -1) {
        return l;
      }
      let d;
      let h;
      let p;
      o.lastIndex = r;
      while ((h = o.exec(e))) {
        if (h.index !== r) {
          throw new TypeError("invalid parameter format");
        }
        r += h[0].length;
        d = h[1].toLowerCase();
        p = h[2];
        if (p[0] === '"') {
          p = p.slice(1, p.length - 1);
          n.test(p) && (p = p.replace(n, "$1"));
        }
        l.parameters[d] = p;
      }
      if (r !== e.length) {
        throw new TypeError("invalid parameter format");
      }
      return l;
    }
    function safeParse(e) {
      if (typeof e !== "string") {
        return a;
      }
      let r = e.indexOf(";");
      const l = r !== -1 ? e.slice(0, r).trim() : e.trim();
      if (i.test(l) === false) {
        return a;
      }
      const d = { type: l.toLowerCase(), parameters: new s() };
      if (r === -1) {
        return d;
      }
      let h;
      let p;
      let w;
      o.lastIndex = r;
      while ((p = o.exec(e))) {
        if (p.index !== r) {
          return a;
        }
        r += p[0].length;
        h = p[1].toLowerCase();
        w = p[2];
        if (w[0] === '"') {
          w = w.slice(1, w.length - 1);
          n.test(w) && (w = w.replace(n, "$1"));
        }
        d.parameters[h] = w;
      }
      if (r !== e.length) {
        return a;
      }
      return d;
    }
    r = { parse: parse, safeParse: safeParse };
    r = parse;
    e.exports.xL = safeParse;
    r = a;
  },
  56: (e) => {
    e.exports = JSON.parse(
      '{"name":"dotenv","version":"16.4.7","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}'
    );
  },
};
var __webpack_module_cache__ = {};
function __nccwpck_require__(e) {
  var r = __webpack_module_cache__[e];
  if (r !== undefined) {
    return r.exports;
  }
  var s = (__webpack_module_cache__[e] = { exports: {} });
  var o = true;
  try {
    __webpack_modules__[e].call(s.exports, s, s.exports, __nccwpck_require__);
    o = false;
  } finally {
    if (o) delete __webpack_module_cache__[e];
  }
  return s.exports;
}
(() => {
  __nccwpck_require__.d = (e, r) => {
    for (var s in r) {
      if (__nccwpck_require__.o(r, s) && !__nccwpck_require__.o(e, s)) {
        Object.defineProperty(e, s, { enumerable: true, get: r[s] });
      }
    }
  };
})();
(() => {
  __nccwpck_require__.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r);
})();
(() => {
  __nccwpck_require__.r = (e) => {
    if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
      Object.defineProperty(e, Symbol.toStringTag, { value: "Module" });
    }
    Object.defineProperty(e, "__esModule", { value: true });
  };
})();
if (typeof __nccwpck_require__ !== "undefined")
  __nccwpck_require__.ab = new URL(".", import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/) ? 1 : 0, -1) + "/";
var __webpack_exports__ = {};
__nccwpck_require__.d(__webpack_exports__, { A: () => action });
var type_type_namespaceObject = {};
__nccwpck_require__.r(type_type_namespaceObject);
__nccwpck_require__.d(type_type_namespaceObject, {
  Any: () => Any,
  Array: () => array_Array,
  AsyncIterator: () => AsyncIterator,
  Awaited: () => Awaited,
  BigInt: () => bigint_BigInt,
  Boolean: () => boolean_Boolean,
  Capitalize: () => Capitalize,
  Composite: () => Composite,
  Const: () => Const,
  Constructor: () => Constructor,
  ConstructorParameters: () => ConstructorParameters,
  Date: () => date_Date,
  Enum: () => Enum,
  Exclude: () => Exclude,
  Extends: () => Extends,
  Extract: () => Extract,
  Function: () => function_Function,
  Index: () => Index,
  InstanceType: () => InstanceType,
  Integer: () => Integer,
  Intersect: () => intersect_Intersect,
  Iterator: () => Iterator,
  KeyOf: () => KeyOf,
  Literal: () => Literal,
  Lowercase: () => Lowercase,
  Mapped: () => Mapped,
  Module: () => Module,
  Never: () => Never,
  Not: () => not_Not,
  Null: () => Null,
  Number: () => number_Number,
  Object: () => object_Object,
  Omit: () => Omit,
  Optional: () => Optional,
  Parameters: () => Parameters,
  Partial: () => Partial,
  Pick: () => Pick,
  Promise: () => promise_Promise,
  Readonly: () => Readonly,
  ReadonlyOptional: () => ReadonlyOptional,
  Record: () => Record,
  Recursive: () => Recursive,
  Ref: () => Ref,
  RegExp: () => regexp_RegExp,
  Required: () => Required,
  Rest: () => Rest,
  ReturnType: () => ReturnType,
  String: () => string_String,
  Symbol: () => symbol_Symbol,
  TemplateLiteral: () => TemplateLiteral,
  Transform: () => Transform,
  Tuple: () => Tuple,
  Uint8Array: () => uint8array_Uint8Array,
  Uncapitalize: () => Uncapitalize,
  Undefined: () => Undefined,
  Union: () => union_Union,
  Unknown: () => Unknown,
  Unsafe: () => Unsafe,
  Uppercase: () => Uppercase,
  Void: () => Void,
});
var core = __nccwpck_require__(7484);
var github = __nccwpck_require__(3228);
function IsAsyncIterator(e) {
  return IsObject(e) && globalThis.Symbol.asyncIterator in e;
}
function IsIterator(e) {
  return IsObject(e) && globalThis.Symbol.iterator in e;
}
function IsStandardObject(e) {
  return IsObject(e) && (globalThis.Object.getPrototypeOf(e) === Object.prototype || globalThis.Object.getPrototypeOf(e) === null);
}
function IsInstanceObject(e) {
  return IsObject(e) && !IsArray(e) && IsFunction(e.constructor) && e.constructor.name !== "Object";
}
function IsPromise(e) {
  return e instanceof globalThis.Promise;
}
function IsDate(e) {
  return e instanceof Date && globalThis.Number.isFinite(e.getTime());
}
function IsMap(e) {
  return e instanceof globalThis.Map;
}
function IsSet(e) {
  return e instanceof globalThis.Set;
}
function IsRegExp(e) {
  return e instanceof globalThis.RegExp;
}
function IsTypedArray(e) {
  return globalThis.ArrayBuffer.isView(e);
}
function IsInt8Array(e) {
  return e instanceof globalThis.Int8Array;
}
function IsUint8Array(e) {
  return e instanceof globalThis.Uint8Array;
}
function IsUint8ClampedArray(e) {
  return e instanceof globalThis.Uint8ClampedArray;
}
function IsInt16Array(e) {
  return e instanceof globalThis.Int16Array;
}
function IsUint16Array(e) {
  return e instanceof globalThis.Uint16Array;
}
function IsInt32Array(e) {
  return e instanceof globalThis.Int32Array;
}
function IsUint32Array(e) {
  return e instanceof globalThis.Uint32Array;
}
function IsFloat32Array(e) {
  return e instanceof globalThis.Float32Array;
}
function IsFloat64Array(e) {
  return e instanceof globalThis.Float64Array;
}
function IsBigInt64Array(e) {
  return e instanceof globalThis.BigInt64Array;
}
function IsBigUint64Array(e) {
  return e instanceof globalThis.BigUint64Array;
}
function HasPropertyKey(e, r) {
  return r in e;
}
function IsObject(e) {
  return e !== null && typeof e === "object";
}
function IsArray(e) {
  return globalThis.Array.isArray(e) && !globalThis.ArrayBuffer.isView(e);
}
function IsUndefined(e) {
  return e === undefined;
}
function IsNull(e) {
  return e === null;
}
function IsBoolean(e) {
  return typeof e === "boolean";
}
function IsNumber(e) {
  return typeof e === "number";
}
function IsInteger(e) {
  return globalThis.Number.isInteger(e);
}
function IsBigInt(e) {
  return typeof e === "bigint";
}
function IsString(e) {
  return typeof e === "string";
}
function IsFunction(e) {
  return typeof e === "function";
}
function IsSymbol(e) {
  return typeof e === "symbol";
}
function IsValueType(e) {
  return IsBigInt(e) || IsBoolean(e) || IsNull(e) || IsNumber(e) || IsString(e) || IsSymbol(e) || IsUndefined(e);
}
var TypeSystemPolicy;
(function (e) {
  e.InstanceMode = "default";
  e.ExactOptionalPropertyTypes = false;
  e.AllowArrayObject = false;
  e.AllowNaN = false;
  e.AllowNullVoid = false;
  function IsExactOptionalProperty(r, s) {
    return e.ExactOptionalPropertyTypes ? s in r : r[s] !== undefined;
  }
  e.IsExactOptionalProperty = IsExactOptionalProperty;
  function IsObjectLike(r) {
    const s = IsObject(r);
    return e.AllowArrayObject ? s : s && !IsArray(r);
  }
  e.IsObjectLike = IsObjectLike;
  function IsRecordLike(e) {
    return IsObjectLike(e) && !(e instanceof Date) && !(e instanceof Uint8Array);
  }
  e.IsRecordLike = IsRecordLike;
  function IsNumberLike(r) {
    return e.AllowNaN ? IsNumber(r) : Number.isFinite(r);
  }
  e.IsNumberLike = IsNumberLike;
  function IsVoidLike(r) {
    const s = IsUndefined(r);
    return e.AllowNullVoid ? s || r === null : s;
  }
  e.IsVoidLike = IsVoidLike;
})(TypeSystemPolicy || (TypeSystemPolicy = {}));
function SetIncludes(e, r) {
  return e.includes(r);
}
function SetIsSubset(e, r) {
  return e.every((e) => SetIncludes(r, e));
}
function SetDistinct(e) {
  return [...new Set(e)];
}
function SetIntersect(e, r) {
  return e.filter((e) => r.includes(e));
}
function SetUnion(e, r) {
  return [...e, ...r];
}
function SetComplement(e, r) {
  return e.filter((e) => !r.includes(e));
}
function SetIntersectManyResolve(e, r) {
  return e.reduce((e, r) => SetIntersect(e, r), r);
}
function SetIntersectMany(e) {
  return e.length === 1 ? e[0] : e.length > 1 ? SetIntersectManyResolve(e.slice(1), e[0]) : [];
}
function SetUnionMany(e) {
  const r = [];
  for (const s of e) r.push(...s);
  return r;
}
function value_HasPropertyKey(e, r) {
  return r in e;
}
function value_IsAsyncIterator(e) {
  return value_IsObject(e) && !value_IsArray(e) && !value_IsUint8Array(e) && Symbol.asyncIterator in e;
}
function value_IsArray(e) {
  return Array.isArray(e);
}
function value_IsBigInt(e) {
  return typeof e === "bigint";
}
function value_IsBoolean(e) {
  return typeof e === "boolean";
}
function value_IsDate(e) {
  return e instanceof globalThis.Date;
}
function value_IsFunction(e) {
  return typeof e === "function";
}
function value_IsIterator(e) {
  return value_IsObject(e) && !value_IsArray(e) && !value_IsUint8Array(e) && Symbol.iterator in e;
}
function value_IsNull(e) {
  return e === null;
}
function value_IsNumber(e) {
  return typeof e === "number";
}
function value_IsObject(e) {
  return typeof e === "object" && e !== null;
}
function value_IsRegExp(e) {
  return e instanceof globalThis.RegExp;
}
function value_IsString(e) {
  return typeof e === "string";
}
function value_IsSymbol(e) {
  return typeof e === "symbol";
}
function value_IsUint8Array(e) {
  return e instanceof globalThis.Uint8Array;
}
function value_IsUndefined(e) {
  return e === undefined;
}
const TransformKind = Symbol.for("TypeBox.Transform");
const symbols_ReadonlyKind = Symbol.for("TypeBox.Readonly");
const OptionalKind = Symbol.for("TypeBox.Optional");
const symbols_Hint = Symbol.for("TypeBox.Hint");
const Kind = Symbol.for("TypeBox.Kind");
function IsReadonly(e) {
  return value_IsObject(e) && e[symbols_ReadonlyKind] === "Readonly";
}
function IsOptional(e) {
  return value_IsObject(e) && e[OptionalKind] === "Optional";
}
function IsAny(e) {
  return IsKindOf(e, "Any");
}
function kind_IsArray(e) {
  return IsKindOf(e, "Array");
}
function kind_IsAsyncIterator(e) {
  return IsKindOf(e, "AsyncIterator");
}
function kind_IsBigInt(e) {
  return IsKindOf(e, "BigInt");
}
function kind_IsBoolean(e) {
  return IsKindOf(e, "Boolean");
}
function IsComputed(e) {
  return IsKindOf(e, "Computed");
}
function IsConstructor(e) {
  return IsKindOf(e, "Constructor");
}
function kind_IsDate(e) {
  return IsKindOf(e, "Date");
}
function kind_IsFunction(e) {
  return IsKindOf(e, "Function");
}
function IsImport(e) {
  return IsKindOf(e, "Import");
}
function kind_IsInteger(e) {
  return IsKindOf(e, "Integer");
}
function IsProperties(e) {
  return ValueGuard.IsObject(e);
}
function IsIntersect(e) {
  return IsKindOf(e, "Intersect");
}
function kind_IsIterator(e) {
  return IsKindOf(e, "Iterator");
}
function IsKindOf(e, r) {
  return value_IsObject(e) && Kind in e && e[Kind] === r;
}
function IsLiteralString(e) {
  return IsLiteral(e) && ValueGuard.IsString(e.const);
}
function IsLiteralNumber(e) {
  return IsLiteral(e) && ValueGuard.IsNumber(e.const);
}
function IsLiteralBoolean(e) {
  return IsLiteral(e) && ValueGuard.IsBoolean(e.const);
}
function IsLiteralValue(e) {
  return value_IsBoolean(e) || value_IsNumber(e) || value_IsString(e);
}
function IsLiteral(e) {
  return IsKindOf(e, "Literal");
}
function IsMappedKey(e) {
  return IsKindOf(e, "MappedKey");
}
function IsMappedResult(e) {
  return IsKindOf(e, "MappedResult");
}
function IsNever(e) {
  return IsKindOf(e, "Never");
}
function IsNot(e) {
  return IsKindOf(e, "Not");
}
function kind_IsNull(e) {
  return IsKindOf(e, "Null");
}
function kind_IsNumber(e) {
  return IsKindOf(e, "Number");
}
function kind_IsObject(e) {
  return IsKindOf(e, "Object");
}
function kind_IsPromise(e) {
  return IsKindOf(e, "Promise");
}
function IsRecord(e) {
  return IsKindOf(e, "Record");
}
function IsRecursive(e) {
  return ValueGuard.IsObject(e) && Hint in e && e[Hint] === "Recursive";
}
function IsRef(e) {
  return IsKindOf(e, "Ref");
}
function kind_IsRegExp(e) {
  return IsKindOf(e, "RegExp");
}
function kind_IsString(e) {
  return IsKindOf(e, "String");
}
function kind_IsSymbol(e) {
  return IsKindOf(e, "Symbol");
}
function IsTemplateLiteral(e) {
  return IsKindOf(e, "TemplateLiteral");
}
function IsThis(e) {
  return IsKindOf(e, "This");
}
function IsTransform(e) {
  return value_IsObject(e) && TransformKind in e;
}
function IsTuple(e) {
  return IsKindOf(e, "Tuple");
}
function kind_IsUndefined(e) {
  return IsKindOf(e, "Undefined");
}
function IsUnion(e) {
  return IsKindOf(e, "Union");
}
function kind_IsUint8Array(e) {
  return IsKindOf(e, "Uint8Array");
}
function IsUnknown(e) {
  return IsKindOf(e, "Unknown");
}
function IsUnsafe(e) {
  return IsKindOf(e, "Unsafe");
}
function IsVoid(e) {
  return IsKindOf(e, "Void");
}
function IsKind(e) {
  return value_IsObject(e) && Kind in e && value_IsString(e[Kind]);
}
function IsSchema(e) {
  return (
    IsAny(e) ||
    kind_IsArray(e) ||
    kind_IsBoolean(e) ||
    kind_IsBigInt(e) ||
    kind_IsAsyncIterator(e) ||
    IsComputed(e) ||
    IsConstructor(e) ||
    kind_IsDate(e) ||
    kind_IsFunction(e) ||
    kind_IsInteger(e) ||
    IsIntersect(e) ||
    kind_IsIterator(e) ||
    IsLiteral(e) ||
    IsMappedKey(e) ||
    IsMappedResult(e) ||
    IsNever(e) ||
    IsNot(e) ||
    kind_IsNull(e) ||
    kind_IsNumber(e) ||
    kind_IsObject(e) ||
    kind_IsPromise(e) ||
    IsRecord(e) ||
    IsRef(e) ||
    kind_IsRegExp(e) ||
    kind_IsString(e) ||
    kind_IsSymbol(e) ||
    IsTemplateLiteral(e) ||
    IsThis(e) ||
    IsTuple(e) ||
    kind_IsUndefined(e) ||
    IsUnion(e) ||
    kind_IsUint8Array(e) ||
    IsUnknown(e) ||
    IsUnsafe(e) ||
    IsVoid(e) ||
    IsKind(e)
  );
}
function FromRest(e) {
  const r = [];
  for (const s of e) r.push(KeyOfPropertyKeys(s));
  return r;
}
function FromIntersect(e) {
  const r = FromRest(e);
  const s = SetUnionMany(r);
  return s;
}
function FromUnion(e) {
  const r = FromRest(e);
  const s = SetIntersectMany(r);
  return s;
}
function FromTuple(e) {
  return e.map((e, r) => r.toString());
}
function FromArray(e) {
  return ["[number]"];
}
function FromProperties(e) {
  return globalThis.Object.getOwnPropertyNames(e);
}
function FromPatternProperties(e) {
  if (!includePatternProperties) return [];
  const r = globalThis.Object.getOwnPropertyNames(e);
  return r.map((e) => (e[0] === "^" && e[e.length - 1] === "$" ? e.slice(1, e.length - 1) : e));
}
function KeyOfPropertyKeys(e) {
  return IsIntersect(e)
    ? FromIntersect(e.allOf)
    : IsUnion(e)
      ? FromUnion(e.anyOf)
      : IsTuple(e)
        ? FromTuple(e.items ?? [])
        : kind_IsArray(e)
          ? FromArray(e.items)
          : kind_IsObject(e)
            ? FromProperties(e.properties)
            : IsRecord(e)
              ? FromPatternProperties(e.patternProperties)
              : [];
}
let includePatternProperties = false;
function KeyOfPattern(e) {
  includePatternProperties = true;
  const r = KeyOfPropertyKeys(e);
  includePatternProperties = false;
  const s = r.map((e) => `(${e})`);
  return `^(${s.join("|")})$`;
}
const map = new Map();
function Entries() {
  return new Map(map);
}
function Clear() {
  return map.clear();
}
function Delete(e) {
  return map.delete(e);
}
function Has(e) {
  return map.has(e);
}
function format_Set(e, r) {
  map.set(e, r);
}
function Get(e) {
  return map.get(e);
}
const type_map = new Map();
function type_Entries() {
  return new Map(type_map);
}
function type_Clear() {
  return type_map.clear();
}
function type_Delete(e) {
  return type_map.delete(e);
}
function type_Has(e) {
  return type_map.has(e);
}
function type_Set(e, r) {
  type_map.set(e, r);
}
function type_Get(e) {
  return type_map.get(e);
}
function Intersect(e) {
  return e.allOf.every((e) => ExtendsUndefinedCheck(e));
}
function Union(e) {
  return e.anyOf.some((e) => ExtendsUndefinedCheck(e));
}
function Not(e) {
  return !ExtendsUndefinedCheck(e.not);
}
function ExtendsUndefinedCheck(e) {
  return e[Kind] === "Intersect" ? Intersect(e) : e[Kind] === "Union" ? Union(e) : e[Kind] === "Not" ? Not(e) : e[Kind] === "Undefined" ? true : false;
}
function DefaultErrorFunction(e) {
  switch (e.errorType) {
    case ValueErrorType.ArrayContains:
      return "Expected array to contain at least one matching value";
    case ValueErrorType.ArrayMaxContains:
      return `Expected array to contain no more than ${e.schema.maxContains} matching values`;
    case ValueErrorType.ArrayMinContains:
      return `Expected array to contain at least ${e.schema.minContains} matching values`;
    case ValueErrorType.ArrayMaxItems:
      return `Expected array length to be less or equal to ${e.schema.maxItems}`;
    case ValueErrorType.ArrayMinItems:
      return `Expected array length to be greater or equal to ${e.schema.minItems}`;
    case ValueErrorType.ArrayUniqueItems:
      return "Expected array elements to be unique";
    case ValueErrorType.Array:
      return "Expected array";
    case ValueErrorType.AsyncIterator:
      return "Expected AsyncIterator";
    case ValueErrorType.BigIntExclusiveMaximum:
      return `Expected bigint to be less than ${e.schema.exclusiveMaximum}`;
    case ValueErrorType.BigIntExclusiveMinimum:
      return `Expected bigint to be greater than ${e.schema.exclusiveMinimum}`;
    case ValueErrorType.BigIntMaximum:
      return `Expected bigint to be less or equal to ${e.schema.maximum}`;
    case ValueErrorType.BigIntMinimum:
      return `Expected bigint to be greater or equal to ${e.schema.minimum}`;
    case ValueErrorType.BigIntMultipleOf:
      return `Expected bigint to be a multiple of ${e.schema.multipleOf}`;
    case ValueErrorType.BigInt:
      return "Expected bigint";
    case ValueErrorType.Boolean:
      return "Expected boolean";
    case ValueErrorType.DateExclusiveMinimumTimestamp:
      return `Expected Date timestamp to be greater than ${e.schema.exclusiveMinimumTimestamp}`;
    case ValueErrorType.DateExclusiveMaximumTimestamp:
      return `Expected Date timestamp to be less than ${e.schema.exclusiveMaximumTimestamp}`;
    case ValueErrorType.DateMinimumTimestamp:
      return `Expected Date timestamp to be greater or equal to ${e.schema.minimumTimestamp}`;
    case ValueErrorType.DateMaximumTimestamp:
      return `Expected Date timestamp to be less or equal to ${e.schema.maximumTimestamp}`;
    case ValueErrorType.DateMultipleOfTimestamp:
      return `Expected Date timestamp to be a multiple of ${e.schema.multipleOfTimestamp}`;
    case ValueErrorType.Date:
      return "Expected Date";
    case ValueErrorType.Function:
      return "Expected function";
    case ValueErrorType.IntegerExclusiveMaximum:
      return `Expected integer to be less than ${e.schema.exclusiveMaximum}`;
    case ValueErrorType.IntegerExclusiveMinimum:
      return `Expected integer to be greater than ${e.schema.exclusiveMinimum}`;
    case ValueErrorType.IntegerMaximum:
      return `Expected integer to be less or equal to ${e.schema.maximum}`;
    case ValueErrorType.IntegerMinimum:
      return `Expected integer to be greater or equal to ${e.schema.minimum}`;
    case ValueErrorType.IntegerMultipleOf:
      return `Expected integer to be a multiple of ${e.schema.multipleOf}`;
    case ValueErrorType.Integer:
      return "Expected integer";
    case ValueErrorType.IntersectUnevaluatedProperties:
      return "Unexpected property";
    case ValueErrorType.Intersect:
      return "Expected all values to match";
    case ValueErrorType.Iterator:
      return "Expected Iterator";
    case ValueErrorType.Literal:
      return `Expected ${typeof e.schema.const === "string" ? `'${e.schema.const}'` : e.schema.const}`;
    case ValueErrorType.Never:
      return "Never";
    case ValueErrorType.Not:
      return "Value should not match";
    case ValueErrorType.Null:
      return "Expected null";
    case ValueErrorType.NumberExclusiveMaximum:
      return `Expected number to be less than ${e.schema.exclusiveMaximum}`;
    case ValueErrorType.NumberExclusiveMinimum:
      return `Expected number to be greater than ${e.schema.exclusiveMinimum}`;
    case ValueErrorType.NumberMaximum:
      return `Expected number to be less or equal to ${e.schema.maximum}`;
    case ValueErrorType.NumberMinimum:
      return `Expected number to be greater or equal to ${e.schema.minimum}`;
    case ValueErrorType.NumberMultipleOf:
      return `Expected number to be a multiple of ${e.schema.multipleOf}`;
    case ValueErrorType.Number:
      return "Expected number";
    case ValueErrorType.Object:
      return "Expected object";
    case ValueErrorType.ObjectAdditionalProperties:
      return "Unexpected property";
    case ValueErrorType.ObjectMaxProperties:
      return `Expected object to have no more than ${e.schema.maxProperties} properties`;
    case ValueErrorType.ObjectMinProperties:
      return `Expected object to have at least ${e.schema.minProperties} properties`;
    case ValueErrorType.ObjectRequiredProperty:
      return "Expected required property";
    case ValueErrorType.Promise:
      return "Expected Promise";
    case ValueErrorType.RegExp:
      return "Expected string to match regular expression";
    case ValueErrorType.StringFormatUnknown:
      return `Unknown format '${e.schema.format}'`;
    case ValueErrorType.StringFormat:
      return `Expected string to match '${e.schema.format}' format`;
    case ValueErrorType.StringMaxLength:
      return `Expected string length less or equal to ${e.schema.maxLength}`;
    case ValueErrorType.StringMinLength:
      return `Expected string length greater or equal to ${e.schema.minLength}`;
    case ValueErrorType.StringPattern:
      return `Expected string to match '${e.schema.pattern}'`;
    case ValueErrorType.String:
      return "Expected string";
    case ValueErrorType.Symbol:
      return "Expected symbol";
    case ValueErrorType.TupleLength:
      return `Expected tuple to have ${e.schema.maxItems || 0} elements`;
    case ValueErrorType.Tuple:
      return "Expected tuple";
    case ValueErrorType.Uint8ArrayMaxByteLength:
      return `Expected byte length less or equal to ${e.schema.maxByteLength}`;
    case ValueErrorType.Uint8ArrayMinByteLength:
      return `Expected byte length greater or equal to ${e.schema.minByteLength}`;
    case ValueErrorType.Uint8Array:
      return "Expected Uint8Array";
    case ValueErrorType.Undefined:
      return "Expected undefined";
    case ValueErrorType.Union:
      return "Expected union value";
    case ValueErrorType.Void:
      return "Expected void";
    case ValueErrorType.Kind:
      return `Expected kind '${e.schema[Kind]}'`;
    default:
      return "Unknown error type";
  }
}
let errorFunction = DefaultErrorFunction;
function SetErrorFunction(e) {
  errorFunction = e;
}
function GetErrorFunction() {
  return errorFunction;
}
class error_TypeBoxError extends Error {
  constructor(e) {
    super(e);
  }
}
class TypeDereferenceError extends error_TypeBoxError {
  constructor(e) {
    super(`Unable to dereference schema with $id '${e.$ref}'`);
    this.schema = e;
  }
}
function Resolve(e, r) {
  const s = r.find((r) => r.$id === e.$ref);
  if (s === undefined) throw new TypeDereferenceError(e);
  return Deref(s, r);
}
function Pushref(e, r) {
  if (!IsString(e.$id) || r.some((r) => r.$id === e.$id)) return r;
  r.push(e);
  return r;
}
function Deref(e, r) {
  return e[Kind] === "This" || e[Kind] === "Ref" ? Resolve(e, r) : e;
}
class ValueHashError extends error_TypeBoxError {
  constructor(e) {
    super(`Unable to hash value`);
    this.value = e;
  }
}
var ByteMarker;
(function (e) {
  e[(e["Undefined"] = 0)] = "Undefined";
  e[(e["Null"] = 1)] = "Null";
  e[(e["Boolean"] = 2)] = "Boolean";
  e[(e["Number"] = 3)] = "Number";
  e[(e["String"] = 4)] = "String";
  e[(e["Object"] = 5)] = "Object";
  e[(e["Array"] = 6)] = "Array";
  e[(e["Date"] = 7)] = "Date";
  e[(e["Uint8Array"] = 8)] = "Uint8Array";
  e[(e["Symbol"] = 9)] = "Symbol";
  e[(e["BigInt"] = 10)] = "BigInt";
})(ByteMarker || (ByteMarker = {}));
let Accumulator = BigInt("14695981039346656037");
const [Prime, Size] = [BigInt("1099511628211"), BigInt("18446744073709551616")];
const Bytes = Array.from({ length: 256 }).map((e, r) => BigInt(r));
const F64 = new Float64Array(1);
const F64In = new DataView(F64.buffer);
const F64Out = new Uint8Array(F64.buffer);
function* NumberToBytes(e) {
  const r = e === 0 ? 1 : Math.ceil(Math.floor(Math.log2(e) + 1) / 8);
  for (let s = 0; s < r; s++) {
    yield (e >> (8 * (r - 1 - s))) & 255;
  }
}
function ArrayType(e) {
  FNV1A64(ByteMarker.Array);
  for (const r of e) {
    Visit(r);
  }
}
function BooleanType(e) {
  FNV1A64(ByteMarker.Boolean);
  FNV1A64(e ? 1 : 0);
}
function BigIntType(e) {
  FNV1A64(ByteMarker.BigInt);
  F64In.setBigInt64(0, e);
  for (const e of F64Out) {
    FNV1A64(e);
  }
}
function DateType(e) {
  FNV1A64(ByteMarker.Date);
  Visit(e.getTime());
}
function NullType(e) {
  FNV1A64(ByteMarker.Null);
}
function NumberType(e) {
  FNV1A64(ByteMarker.Number);
  F64In.setFloat64(0, e);
  for (const e of F64Out) {
    FNV1A64(e);
  }
}
function ObjectType(e) {
  FNV1A64(ByteMarker.Object);
  for (const r of globalThis.Object.getOwnPropertyNames(e).sort()) {
    Visit(r);
    Visit(e[r]);
  }
}
function StringType(e) {
  FNV1A64(ByteMarker.String);
  for (let r = 0; r < e.length; r++) {
    for (const s of NumberToBytes(e.charCodeAt(r))) {
      FNV1A64(s);
    }
  }
}
function SymbolType(e) {
  FNV1A64(ByteMarker.Symbol);
  Visit(e.description);
}
function Uint8ArrayType(e) {
  FNV1A64(ByteMarker.Uint8Array);
  for (let r = 0; r < e.length; r++) {
    FNV1A64(e[r]);
  }
}
function UndefinedType(e) {
  return FNV1A64(ByteMarker.Undefined);
}
function Visit(e) {
  if (IsArray(e)) return ArrayType(e);
  if (IsBoolean(e)) return BooleanType(e);
  if (IsBigInt(e)) return BigIntType(e);
  if (IsDate(e)) return DateType(e);
  if (IsNull(e)) return NullType(e);
  if (IsNumber(e)) return NumberType(e);
  if (IsObject(e)) return ObjectType(e);
  if (IsString(e)) return StringType(e);
  if (IsSymbol(e)) return SymbolType(e);
  if (IsUint8Array(e)) return Uint8ArrayType(e);
  if (IsUndefined(e)) return UndefinedType(e);
  throw new ValueHashError(e);
}
function FNV1A64(e) {
  Accumulator = Accumulator ^ Bytes[e];
  Accumulator = (Accumulator * Prime) % Size;
}
function Hash(e) {
  Accumulator = BigInt("14695981039346656037");
  Visit(e);
  return Accumulator;
}
function ImmutableArray(e) {
  return globalThis.Object.freeze(e).map((e) => Immutable(e));
}
function ImmutableDate(e) {
  return e;
}
function ImmutableUint8Array(e) {
  return e;
}
function ImmutableRegExp(e) {
  return e;
}
function ImmutableObject(e) {
  const r = {};
  for (const s of Object.getOwnPropertyNames(e)) {
    r[s] = Immutable(e[s]);
  }
  for (const s of Object.getOwnPropertySymbols(e)) {
    r[s] = Immutable(e[s]);
  }
  return globalThis.Object.freeze(r);
}
function Immutable(e) {
  return value_IsArray(e)
    ? ImmutableArray(e)
    : value_IsDate(e)
      ? ImmutableDate(e)
      : value_IsUint8Array(e)
        ? ImmutableUint8Array(e)
        : value_IsRegExp(e)
          ? ImmutableRegExp(e)
          : value_IsObject(e)
            ? ImmutableObject(e)
            : e;
}
function value_ArrayType(e) {
  return e.map((e) => value_Visit(e));
}
function value_DateType(e) {
  return new Date(e.getTime());
}
function value_Uint8ArrayType(e) {
  return new Uint8Array(e);
}
function RegExpType(e) {
  return new RegExp(e.source, e.flags);
}
function value_ObjectType(e) {
  const r = {};
  for (const s of Object.getOwnPropertyNames(e)) {
    r[s] = value_Visit(e[s]);
  }
  for (const s of Object.getOwnPropertySymbols(e)) {
    r[s] = value_Visit(e[s]);
  }
  return r;
}
function value_Visit(e) {
  return value_IsArray(e)
    ? value_ArrayType(e)
    : value_IsDate(e)
      ? value_DateType(e)
      : value_IsUint8Array(e)
        ? value_Uint8ArrayType(e)
        : value_IsRegExp(e)
          ? RegExpType(e)
          : value_IsObject(e)
            ? value_ObjectType(e)
            : e;
}
function Clone(e) {
  return value_Visit(e);
}
function CreateType(e, r) {
  const s = r !== undefined ? { ...r, ...e } : e;
  switch (TypeSystemPolicy.InstanceMode) {
    case "freeze":
      return Immutable(s);
    case "clone":
      return Clone(s);
    default:
      return s;
  }
}
function Never(e) {
  return CreateType({ [Kind]: "Never", not: {} }, e);
}
class ValueCheckUnknownTypeError extends error_TypeBoxError {
  constructor(e) {
    super(`Unknown type`);
    this.schema = e;
  }
}
function IsAnyOrUnknown(e) {
  return e[Kind] === "Any" || e[Kind] === "Unknown";
}
function IsDefined(e) {
  return e !== undefined;
}
function FromAny(e, r, s) {
  return true;
}
function check_FromArray(e, r, s) {
  if (!IsArray(s)) return false;
  if (IsDefined(e.minItems) && !(s.length >= e.minItems)) {
    return false;
  }
  if (IsDefined(e.maxItems) && !(s.length <= e.maxItems)) {
    return false;
  }
  if (!s.every((s) => check_Visit(e.items, r, s))) {
    return false;
  }
  if (
    e.uniqueItems === true &&
    !(function () {
      const e = new Set();
      for (const r of s) {
        const s = Hash(r);
        if (e.has(s)) {
          return false;
        } else {
          e.add(s);
        }
      }
      return true;
    })()
  ) {
    return false;
  }
  if (!(IsDefined(e.contains) || IsNumber(e.minContains) || IsNumber(e.maxContains))) {
    return true;
  }
  const o = IsDefined(e.contains) ? e.contains : Never();
  const n = s.reduce((e, s) => (check_Visit(o, r, s) ? e + 1 : e), 0);
  if (n === 0) {
    return false;
  }
  if (IsNumber(e.minContains) && n < e.minContains) {
    return false;
  }
  if (IsNumber(e.maxContains) && n > e.maxContains) {
    return false;
  }
  return true;
}
function FromAsyncIterator(e, r, s) {
  return IsAsyncIterator(s);
}
function FromBigInt(e, r, s) {
  if (!IsBigInt(s)) return false;
  if (IsDefined(e.exclusiveMaximum) && !(s < e.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined(e.exclusiveMinimum) && !(s > e.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined(e.maximum) && !(s <= e.maximum)) {
    return false;
  }
  if (IsDefined(e.minimum) && !(s >= e.minimum)) {
    return false;
  }
  if (IsDefined(e.multipleOf) && !(s % e.multipleOf === BigInt(0))) {
    return false;
  }
  return true;
}
function FromBoolean(e, r, s) {
  return IsBoolean(s);
}
function FromConstructor(e, r, s) {
  return check_Visit(e.returns, r, s.prototype);
}
function FromDate(e, r, s) {
  if (!IsDate(s)) return false;
  if (IsDefined(e.exclusiveMaximumTimestamp) && !(s.getTime() < e.exclusiveMaximumTimestamp)) {
    return false;
  }
  if (IsDefined(e.exclusiveMinimumTimestamp) && !(s.getTime() > e.exclusiveMinimumTimestamp)) {
    return false;
  }
  if (IsDefined(e.maximumTimestamp) && !(s.getTime() <= e.maximumTimestamp)) {
    return false;
  }
  if (IsDefined(e.minimumTimestamp) && !(s.getTime() >= e.minimumTimestamp)) {
    return false;
  }
  if (IsDefined(e.multipleOfTimestamp) && !(s.getTime() % e.multipleOfTimestamp === 0)) {
    return false;
  }
  return true;
}
function FromFunction(e, r, s) {
  return IsFunction(s);
}
function FromImport(e, r, s) {
  const o = globalThis.Object.values(e.$defs);
  const n = e.$defs[e.$ref];
  return check_Visit(n, [...r, ...o], s);
}
function FromInteger(e, r, s) {
  if (!IsInteger(s)) {
    return false;
  }
  if (IsDefined(e.exclusiveMaximum) && !(s < e.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined(e.exclusiveMinimum) && !(s > e.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined(e.maximum) && !(s <= e.maximum)) {
    return false;
  }
  if (IsDefined(e.minimum) && !(s >= e.minimum)) {
    return false;
  }
  if (IsDefined(e.multipleOf) && !(s % e.multipleOf === 0)) {
    return false;
  }
  return true;
}
function check_FromIntersect(e, r, s) {
  const o = e.allOf.every((e) => check_Visit(e, r, s));
  if (e.unevaluatedProperties === false) {
    const r = new RegExp(KeyOfPattern(e));
    const n = Object.getOwnPropertyNames(s).every((e) => r.test(e));
    return o && n;
  } else if (IsSchema(e.unevaluatedProperties)) {
    const n = new RegExp(KeyOfPattern(e));
    const i = Object.getOwnPropertyNames(s).every((o) => n.test(o) || check_Visit(e.unevaluatedProperties, r, s[o]));
    return o && i;
  } else {
    return o;
  }
}
function FromIterator(e, r, s) {
  return IsIterator(s);
}
function FromLiteral(e, r, s) {
  return s === e.const;
}
function FromNever(e, r, s) {
  return false;
}
function FromNot(e, r, s) {
  return !check_Visit(e.not, r, s);
}
function FromNull(e, r, s) {
  return IsNull(s);
}
function FromNumber(e, r, s) {
  if (!TypeSystemPolicy.IsNumberLike(s)) return false;
  if (IsDefined(e.exclusiveMaximum) && !(s < e.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined(e.exclusiveMinimum) && !(s > e.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined(e.minimum) && !(s >= e.minimum)) {
    return false;
  }
  if (IsDefined(e.maximum) && !(s <= e.maximum)) {
    return false;
  }
  if (IsDefined(e.multipleOf) && !(s % e.multipleOf === 0)) {
    return false;
  }
  return true;
}
function FromObject(e, r, s) {
  if (!TypeSystemPolicy.IsObjectLike(s)) return false;
  if (IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(s).length >= e.minProperties)) {
    return false;
  }
  if (IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(s).length <= e.maxProperties)) {
    return false;
  }
  const o = Object.getOwnPropertyNames(e.properties);
  for (const n of o) {
    const o = e.properties[n];
    if (e.required && e.required.includes(n)) {
      if (!check_Visit(o, r, s[n])) {
        return false;
      }
      if ((ExtendsUndefinedCheck(o) || IsAnyOrUnknown(o)) && !(n in s)) {
        return false;
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(s, n) && !check_Visit(o, r, s[n])) {
        return false;
      }
    }
  }
  if (e.additionalProperties === false) {
    const r = Object.getOwnPropertyNames(s);
    if (e.required && e.required.length === o.length && r.length === o.length) {
      return true;
    } else {
      return r.every((e) => o.includes(e));
    }
  } else if (typeof e.additionalProperties === "object") {
    const n = Object.getOwnPropertyNames(s);
    return n.every((n) => o.includes(n) || check_Visit(e.additionalProperties, r, s[n]));
  } else {
    return true;
  }
}
function FromPromise(e, r, s) {
  return IsPromise(s);
}
function FromRecord(e, r, s) {
  if (!TypeSystemPolicy.IsRecordLike(s)) {
    return false;
  }
  if (IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(s).length >= e.minProperties)) {
    return false;
  }
  if (IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(s).length <= e.maxProperties)) {
    return false;
  }
  const [o, n] = Object.entries(e.patternProperties)[0];
  const i = new RegExp(o);
  const a = Object.entries(s).every(([e, s]) => (i.test(e) ? check_Visit(n, r, s) : true));
  const l =
    typeof e.additionalProperties === "object" ? Object.entries(s).every(([s, o]) => (!i.test(s) ? check_Visit(e.additionalProperties, r, o) : true)) : true;
  const d = e.additionalProperties === false ? Object.getOwnPropertyNames(s).every((e) => i.test(e)) : true;
  return a && l && d;
}
function FromRef(e, r, s) {
  return check_Visit(Deref(e, r), r, s);
}
function FromRegExp(e, r, s) {
  const o = new RegExp(e.source, e.flags);
  if (IsDefined(e.minLength)) {
    if (!(s.length >= e.minLength)) return false;
  }
  if (IsDefined(e.maxLength)) {
    if (!(s.length <= e.maxLength)) return false;
  }
  return o.test(s);
}
function FromString(e, r, s) {
  if (!IsString(s)) {
    return false;
  }
  if (IsDefined(e.minLength)) {
    if (!(s.length >= e.minLength)) return false;
  }
  if (IsDefined(e.maxLength)) {
    if (!(s.length <= e.maxLength)) return false;
  }
  if (IsDefined(e.pattern)) {
    const r = new RegExp(e.pattern);
    if (!r.test(s)) return false;
  }
  if (IsDefined(e.format)) {
    if (!Has(e.format)) return false;
    const r = Get(e.format);
    return r(s);
  }
  return true;
}
function FromSymbol(e, r, s) {
  return IsSymbol(s);
}
function FromTemplateLiteral(e, r, s) {
  return IsString(s) && new RegExp(e.pattern).test(s);
}
function FromThis(e, r, s) {
  return check_Visit(Deref(e, r), r, s);
}
function check_FromTuple(e, r, s) {
  if (!IsArray(s)) {
    return false;
  }
  if (e.items === undefined && !(s.length === 0)) {
    return false;
  }
  if (!(s.length === e.maxItems)) {
    return false;
  }
  if (!e.items) {
    return true;
  }
  for (let o = 0; o < e.items.length; o++) {
    if (!check_Visit(e.items[o], r, s[o])) return false;
  }
  return true;
}
function FromUndefined(e, r, s) {
  return IsUndefined(s);
}
function check_FromUnion(e, r, s) {
  return e.anyOf.some((e) => check_Visit(e, r, s));
}
function FromUint8Array(e, r, s) {
  if (!IsUint8Array(s)) {
    return false;
  }
  if (IsDefined(e.maxByteLength) && !(s.length <= e.maxByteLength)) {
    return false;
  }
  if (IsDefined(e.minByteLength) && !(s.length >= e.minByteLength)) {
    return false;
  }
  return true;
}
function FromUnknown(e, r, s) {
  return true;
}
function FromVoid(e, r, s) {
  return TypeSystemPolicy.IsVoidLike(s);
}
function FromKind(e, r, s) {
  if (!type_Has(e[Kind])) return false;
  const o = type_Get(e[Kind]);
  return o(e, s);
}
function check_Visit(e, r, s) {
  const o = IsDefined(e.$id) ? Pushref(e, r) : r;
  const n = e;
  switch (n[Kind]) {
    case "Any":
      return FromAny(n, o, s);
    case "Array":
      return check_FromArray(n, o, s);
    case "AsyncIterator":
      return FromAsyncIterator(n, o, s);
    case "BigInt":
      return FromBigInt(n, o, s);
    case "Boolean":
      return FromBoolean(n, o, s);
    case "Constructor":
      return FromConstructor(n, o, s);
    case "Date":
      return FromDate(n, o, s);
    case "Function":
      return FromFunction(n, o, s);
    case "Import":
      return FromImport(n, o, s);
    case "Integer":
      return FromInteger(n, o, s);
    case "Intersect":
      return check_FromIntersect(n, o, s);
    case "Iterator":
      return FromIterator(n, o, s);
    case "Literal":
      return FromLiteral(n, o, s);
    case "Never":
      return FromNever(n, o, s);
    case "Not":
      return FromNot(n, o, s);
    case "Null":
      return FromNull(n, o, s);
    case "Number":
      return FromNumber(n, o, s);
    case "Object":
      return FromObject(n, o, s);
    case "Promise":
      return FromPromise(n, o, s);
    case "Record":
      return FromRecord(n, o, s);
    case "Ref":
      return FromRef(n, o, s);
    case "RegExp":
      return FromRegExp(n, o, s);
    case "String":
      return FromString(n, o, s);
    case "Symbol":
      return FromSymbol(n, o, s);
    case "TemplateLiteral":
      return FromTemplateLiteral(n, o, s);
    case "This":
      return FromThis(n, o, s);
    case "Tuple":
      return check_FromTuple(n, o, s);
    case "Undefined":
      return FromUndefined(n, o, s);
    case "Union":
      return check_FromUnion(n, o, s);
    case "Uint8Array":
      return FromUint8Array(n, o, s);
    case "Unknown":
      return FromUnknown(n, o, s);
    case "Void":
      return FromVoid(n, o, s);
    default:
      if (!type_Has(n[Kind])) throw new ValueCheckUnknownTypeError(n);
      return FromKind(n, o, s);
  }
}
function Check(...e) {
  return e.length === 3 ? check_Visit(e[0], e[1], e[2]) : check_Visit(e[0], [], e[1]);
}
var ValueErrorType;
(function (e) {
  e[(e["ArrayContains"] = 0)] = "ArrayContains";
  e[(e["ArrayMaxContains"] = 1)] = "ArrayMaxContains";
  e[(e["ArrayMaxItems"] = 2)] = "ArrayMaxItems";
  e[(e["ArrayMinContains"] = 3)] = "ArrayMinContains";
  e[(e["ArrayMinItems"] = 4)] = "ArrayMinItems";
  e[(e["ArrayUniqueItems"] = 5)] = "ArrayUniqueItems";
  e[(e["Array"] = 6)] = "Array";
  e[(e["AsyncIterator"] = 7)] = "AsyncIterator";
  e[(e["BigIntExclusiveMaximum"] = 8)] = "BigIntExclusiveMaximum";
  e[(e["BigIntExclusiveMinimum"] = 9)] = "BigIntExclusiveMinimum";
  e[(e["BigIntMaximum"] = 10)] = "BigIntMaximum";
  e[(e["BigIntMinimum"] = 11)] = "BigIntMinimum";
  e[(e["BigIntMultipleOf"] = 12)] = "BigIntMultipleOf";
  e[(e["BigInt"] = 13)] = "BigInt";
  e[(e["Boolean"] = 14)] = "Boolean";
  e[(e["DateExclusiveMaximumTimestamp"] = 15)] = "DateExclusiveMaximumTimestamp";
  e[(e["DateExclusiveMinimumTimestamp"] = 16)] = "DateExclusiveMinimumTimestamp";
  e[(e["DateMaximumTimestamp"] = 17)] = "DateMaximumTimestamp";
  e[(e["DateMinimumTimestamp"] = 18)] = "DateMinimumTimestamp";
  e[(e["DateMultipleOfTimestamp"] = 19)] = "DateMultipleOfTimestamp";
  e[(e["Date"] = 20)] = "Date";
  e[(e["Function"] = 21)] = "Function";
  e[(e["IntegerExclusiveMaximum"] = 22)] = "IntegerExclusiveMaximum";
  e[(e["IntegerExclusiveMinimum"] = 23)] = "IntegerExclusiveMinimum";
  e[(e["IntegerMaximum"] = 24)] = "IntegerMaximum";
  e[(e["IntegerMinimum"] = 25)] = "IntegerMinimum";
  e[(e["IntegerMultipleOf"] = 26)] = "IntegerMultipleOf";
  e[(e["Integer"] = 27)] = "Integer";
  e[(e["IntersectUnevaluatedProperties"] = 28)] = "IntersectUnevaluatedProperties";
  e[(e["Intersect"] = 29)] = "Intersect";
  e[(e["Iterator"] = 30)] = "Iterator";
  e[(e["Kind"] = 31)] = "Kind";
  e[(e["Literal"] = 32)] = "Literal";
  e[(e["Never"] = 33)] = "Never";
  e[(e["Not"] = 34)] = "Not";
  e[(e["Null"] = 35)] = "Null";
  e[(e["NumberExclusiveMaximum"] = 36)] = "NumberExclusiveMaximum";
  e[(e["NumberExclusiveMinimum"] = 37)] = "NumberExclusiveMinimum";
  e[(e["NumberMaximum"] = 38)] = "NumberMaximum";
  e[(e["NumberMinimum"] = 39)] = "NumberMinimum";
  e[(e["NumberMultipleOf"] = 40)] = "NumberMultipleOf";
  e[(e["Number"] = 41)] = "Number";
  e[(e["ObjectAdditionalProperties"] = 42)] = "ObjectAdditionalProperties";
  e[(e["ObjectMaxProperties"] = 43)] = "ObjectMaxProperties";
  e[(e["ObjectMinProperties"] = 44)] = "ObjectMinProperties";
  e[(e["ObjectRequiredProperty"] = 45)] = "ObjectRequiredProperty";
  e[(e["Object"] = 46)] = "Object";
  e[(e["Promise"] = 47)] = "Promise";
  e[(e["RegExp"] = 48)] = "RegExp";
  e[(e["StringFormatUnknown"] = 49)] = "StringFormatUnknown";
  e[(e["StringFormat"] = 50)] = "StringFormat";
  e[(e["StringMaxLength"] = 51)] = "StringMaxLength";
  e[(e["StringMinLength"] = 52)] = "StringMinLength";
  e[(e["StringPattern"] = 53)] = "StringPattern";
  e[(e["String"] = 54)] = "String";
  e[(e["Symbol"] = 55)] = "Symbol";
  e[(e["TupleLength"] = 56)] = "TupleLength";
  e[(e["Tuple"] = 57)] = "Tuple";
  e[(e["Uint8ArrayMaxByteLength"] = 58)] = "Uint8ArrayMaxByteLength";
  e[(e["Uint8ArrayMinByteLength"] = 59)] = "Uint8ArrayMinByteLength";
  e[(e["Uint8Array"] = 60)] = "Uint8Array";
  e[(e["Undefined"] = 61)] = "Undefined";
  e[(e["Union"] = 62)] = "Union";
  e[(e["Void"] = 63)] = "Void";
})(ValueErrorType || (ValueErrorType = {}));
class ValueErrorsUnknownTypeError extends error_TypeBoxError {
  constructor(e) {
    super("Unknown type");
    this.schema = e;
  }
}
function EscapeKey(e) {
  return e.replace(/~/g, "~0").replace(/\//g, "~1");
}
function errors_IsDefined(e) {
  return e !== undefined;
}
class ValueErrorIterator {
  constructor(e) {
    this.iterator = e;
  }
  [Symbol.iterator]() {
    return this.iterator;
  }
  First() {
    const e = this.iterator.next();
    return e.done ? undefined : e.value;
  }
}
function Create(e, r, s, o, n = []) {
  return { type: e, schema: r, path: s, value: o, message: GetErrorFunction()({ errorType: e, path: s, schema: r, value: o, errors: n }), errors: n };
}
function* errors_FromAny(e, r, s, o) {}
function* errors_FromArray(e, r, s, o) {
  if (!IsArray(o)) {
    return yield Create(ValueErrorType.Array, e, s, o);
  }
  if (errors_IsDefined(e.minItems) && !(o.length >= e.minItems)) {
    yield Create(ValueErrorType.ArrayMinItems, e, s, o);
  }
  if (errors_IsDefined(e.maxItems) && !(o.length <= e.maxItems)) {
    yield Create(ValueErrorType.ArrayMaxItems, e, s, o);
  }
  for (let n = 0; n < o.length; n++) {
    yield* errors_Visit(e.items, r, `${s}/${n}`, o[n]);
  }
  if (
    e.uniqueItems === true &&
    !(function () {
      const e = new Set();
      for (const r of o) {
        const s = Hash(r);
        if (e.has(s)) {
          return false;
        } else {
          e.add(s);
        }
      }
      return true;
    })()
  ) {
    yield Create(ValueErrorType.ArrayUniqueItems, e, s, o);
  }
  if (!(errors_IsDefined(e.contains) || errors_IsDefined(e.minContains) || errors_IsDefined(e.maxContains))) {
    return;
  }
  const n = errors_IsDefined(e.contains) ? e.contains : Never();
  const i = o.reduce((e, o, i) => (errors_Visit(n, r, `${s}${i}`, o).next().done === true ? e + 1 : e), 0);
  if (i === 0) {
    yield Create(ValueErrorType.ArrayContains, e, s, o);
  }
  if (IsNumber(e.minContains) && i < e.minContains) {
    yield Create(ValueErrorType.ArrayMinContains, e, s, o);
  }
  if (IsNumber(e.maxContains) && i > e.maxContains) {
    yield Create(ValueErrorType.ArrayMaxContains, e, s, o);
  }
}
function* errors_FromAsyncIterator(e, r, s, o) {
  if (!IsAsyncIterator(o)) yield Create(ValueErrorType.AsyncIterator, e, s, o);
}
function* errors_FromBigInt(e, r, s, o) {
  if (!IsBigInt(o)) return yield Create(ValueErrorType.BigInt, e, s, o);
  if (errors_IsDefined(e.exclusiveMaximum) && !(o < e.exclusiveMaximum)) {
    yield Create(ValueErrorType.BigIntExclusiveMaximum, e, s, o);
  }
  if (errors_IsDefined(e.exclusiveMinimum) && !(o > e.exclusiveMinimum)) {
    yield Create(ValueErrorType.BigIntExclusiveMinimum, e, s, o);
  }
  if (errors_IsDefined(e.maximum) && !(o <= e.maximum)) {
    yield Create(ValueErrorType.BigIntMaximum, e, s, o);
  }
  if (errors_IsDefined(e.minimum) && !(o >= e.minimum)) {
    yield Create(ValueErrorType.BigIntMinimum, e, s, o);
  }
  if (errors_IsDefined(e.multipleOf) && !(o % e.multipleOf === BigInt(0))) {
    yield Create(ValueErrorType.BigIntMultipleOf, e, s, o);
  }
}
function* errors_FromBoolean(e, r, s, o) {
  if (!IsBoolean(o)) yield Create(ValueErrorType.Boolean, e, s, o);
}
function* errors_FromConstructor(e, r, s, o) {
  yield* errors_Visit(e.returns, r, s, o.prototype);
}
function* errors_FromDate(e, r, s, o) {
  if (!IsDate(o)) return yield Create(ValueErrorType.Date, e, s, o);
  if (errors_IsDefined(e.exclusiveMaximumTimestamp) && !(o.getTime() < e.exclusiveMaximumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, e, s, o);
  }
  if (errors_IsDefined(e.exclusiveMinimumTimestamp) && !(o.getTime() > e.exclusiveMinimumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, e, s, o);
  }
  if (errors_IsDefined(e.maximumTimestamp) && !(o.getTime() <= e.maximumTimestamp)) {
    yield Create(ValueErrorType.DateMaximumTimestamp, e, s, o);
  }
  if (errors_IsDefined(e.minimumTimestamp) && !(o.getTime() >= e.minimumTimestamp)) {
    yield Create(ValueErrorType.DateMinimumTimestamp, e, s, o);
  }
  if (errors_IsDefined(e.multipleOfTimestamp) && !(o.getTime() % e.multipleOfTimestamp === 0)) {
    yield Create(ValueErrorType.DateMultipleOfTimestamp, e, s, o);
  }
}
function* errors_FromFunction(e, r, s, o) {
  if (!IsFunction(o)) yield Create(ValueErrorType.Function, e, s, o);
}
function* errors_FromImport(e, r, s, o) {
  const n = globalThis.Object.values(e.$defs);
  const i = e.$defs[e.$ref];
  yield* errors_Visit(i, [...r, ...n], s, o);
}
function* errors_FromInteger(e, r, s, o) {
  if (!IsInteger(o)) return yield Create(ValueErrorType.Integer, e, s, o);
  if (errors_IsDefined(e.exclusiveMaximum) && !(o < e.exclusiveMaximum)) {
    yield Create(ValueErrorType.IntegerExclusiveMaximum, e, s, o);
  }
  if (errors_IsDefined(e.exclusiveMinimum) && !(o > e.exclusiveMinimum)) {
    yield Create(ValueErrorType.IntegerExclusiveMinimum, e, s, o);
  }
  if (errors_IsDefined(e.maximum) && !(o <= e.maximum)) {
    yield Create(ValueErrorType.IntegerMaximum, e, s, o);
  }
  if (errors_IsDefined(e.minimum) && !(o >= e.minimum)) {
    yield Create(ValueErrorType.IntegerMinimum, e, s, o);
  }
  if (errors_IsDefined(e.multipleOf) && !(o % e.multipleOf === 0)) {
    yield Create(ValueErrorType.IntegerMultipleOf, e, s, o);
  }
}
function* errors_FromIntersect(e, r, s, o) {
  let n = false;
  for (const i of e.allOf) {
    for (const e of errors_Visit(i, r, s, o)) {
      n = true;
      yield e;
    }
  }
  if (n) {
    return yield Create(ValueErrorType.Intersect, e, s, o);
  }
  if (e.unevaluatedProperties === false) {
    const r = new RegExp(KeyOfPattern(e));
    for (const n of Object.getOwnPropertyNames(o)) {
      if (!r.test(n)) {
        yield Create(ValueErrorType.IntersectUnevaluatedProperties, e, `${s}/${n}`, o);
      }
    }
  }
  if (typeof e.unevaluatedProperties === "object") {
    const n = new RegExp(KeyOfPattern(e));
    for (const i of Object.getOwnPropertyNames(o)) {
      if (!n.test(i)) {
        const n = errors_Visit(e.unevaluatedProperties, r, `${s}/${i}`, o[i]).next();
        if (!n.done) yield n.value;
      }
    }
  }
}
function* errors_FromIterator(e, r, s, o) {
  if (!IsIterator(o)) yield Create(ValueErrorType.Iterator, e, s, o);
}
function* errors_FromLiteral(e, r, s, o) {
  if (!(o === e.const)) yield Create(ValueErrorType.Literal, e, s, o);
}
function* errors_FromNever(e, r, s, o) {
  yield Create(ValueErrorType.Never, e, s, o);
}
function* errors_FromNot(e, r, s, o) {
  if (errors_Visit(e.not, r, s, o).next().done === true) yield Create(ValueErrorType.Not, e, s, o);
}
function* errors_FromNull(e, r, s, o) {
  if (!IsNull(o)) yield Create(ValueErrorType.Null, e, s, o);
}
function* errors_FromNumber(e, r, s, o) {
  if (!TypeSystemPolicy.IsNumberLike(o)) return yield Create(ValueErrorType.Number, e, s, o);
  if (errors_IsDefined(e.exclusiveMaximum) && !(o < e.exclusiveMaximum)) {
    yield Create(ValueErrorType.NumberExclusiveMaximum, e, s, o);
  }
  if (errors_IsDefined(e.exclusiveMinimum) && !(o > e.exclusiveMinimum)) {
    yield Create(ValueErrorType.NumberExclusiveMinimum, e, s, o);
  }
  if (errors_IsDefined(e.maximum) && !(o <= e.maximum)) {
    yield Create(ValueErrorType.NumberMaximum, e, s, o);
  }
  if (errors_IsDefined(e.minimum) && !(o >= e.minimum)) {
    yield Create(ValueErrorType.NumberMinimum, e, s, o);
  }
  if (errors_IsDefined(e.multipleOf) && !(o % e.multipleOf === 0)) {
    yield Create(ValueErrorType.NumberMultipleOf, e, s, o);
  }
}
function* errors_FromObject(e, r, s, o) {
  if (!TypeSystemPolicy.IsObjectLike(o)) return yield Create(ValueErrorType.Object, e, s, o);
  if (errors_IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(o).length >= e.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, e, s, o);
  }
  if (errors_IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(o).length <= e.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, e, s, o);
  }
  const n = Array.isArray(e.required) ? e.required : [];
  const i = Object.getOwnPropertyNames(e.properties);
  const a = Object.getOwnPropertyNames(o);
  for (const r of n) {
    if (a.includes(r)) continue;
    yield Create(ValueErrorType.ObjectRequiredProperty, e.properties[r], `${s}/${EscapeKey(r)}`, undefined);
  }
  if (e.additionalProperties === false) {
    for (const r of a) {
      if (!i.includes(r)) {
        yield Create(ValueErrorType.ObjectAdditionalProperties, e, `${s}/${EscapeKey(r)}`, o[r]);
      }
    }
  }
  if (typeof e.additionalProperties === "object") {
    for (const n of a) {
      if (i.includes(n)) continue;
      yield* errors_Visit(e.additionalProperties, r, `${s}/${EscapeKey(n)}`, o[n]);
    }
  }
  for (const n of i) {
    const i = e.properties[n];
    if (e.required && e.required.includes(n)) {
      yield* errors_Visit(i, r, `${s}/${EscapeKey(n)}`, o[n]);
      if (ExtendsUndefinedCheck(e) && !(n in o)) {
        yield Create(ValueErrorType.ObjectRequiredProperty, i, `${s}/${EscapeKey(n)}`, undefined);
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(o, n)) {
        yield* errors_Visit(i, r, `${s}/${EscapeKey(n)}`, o[n]);
      }
    }
  }
}
function* errors_FromPromise(e, r, s, o) {
  if (!IsPromise(o)) yield Create(ValueErrorType.Promise, e, s, o);
}
function* errors_FromRecord(e, r, s, o) {
  if (!TypeSystemPolicy.IsRecordLike(o)) return yield Create(ValueErrorType.Object, e, s, o);
  if (errors_IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(o).length >= e.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, e, s, o);
  }
  if (errors_IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(o).length <= e.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, e, s, o);
  }
  const [n, i] = Object.entries(e.patternProperties)[0];
  const a = new RegExp(n);
  for (const [e, n] of Object.entries(o)) {
    if (a.test(e)) yield* errors_Visit(i, r, `${s}/${EscapeKey(e)}`, n);
  }
  if (typeof e.additionalProperties === "object") {
    for (const [n, i] of Object.entries(o)) {
      if (!a.test(n)) yield* errors_Visit(e.additionalProperties, r, `${s}/${EscapeKey(n)}`, i);
    }
  }
  if (e.additionalProperties === false) {
    for (const [r, n] of Object.entries(o)) {
      if (a.test(r)) continue;
      return yield Create(ValueErrorType.ObjectAdditionalProperties, e, `${s}/${EscapeKey(r)}`, n);
    }
  }
}
function* errors_FromRef(e, r, s, o) {
  yield* errors_Visit(Deref(e, r), r, s, o);
}
function* errors_FromRegExp(e, r, s, o) {
  if (!IsString(o)) return yield Create(ValueErrorType.String, e, s, o);
  if (errors_IsDefined(e.minLength) && !(o.length >= e.minLength)) {
    yield Create(ValueErrorType.StringMinLength, e, s, o);
  }
  if (errors_IsDefined(e.maxLength) && !(o.length <= e.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, e, s, o);
  }
  const n = new RegExp(e.source, e.flags);
  if (!n.test(o)) {
    return yield Create(ValueErrorType.RegExp, e, s, o);
  }
}
function* errors_FromString(e, r, s, o) {
  if (!IsString(o)) return yield Create(ValueErrorType.String, e, s, o);
  if (errors_IsDefined(e.minLength) && !(o.length >= e.minLength)) {
    yield Create(ValueErrorType.StringMinLength, e, s, o);
  }
  if (errors_IsDefined(e.maxLength) && !(o.length <= e.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, e, s, o);
  }
  if (IsString(e.pattern)) {
    const r = new RegExp(e.pattern);
    if (!r.test(o)) {
      yield Create(ValueErrorType.StringPattern, e, s, o);
    }
  }
  if (IsString(e.format)) {
    if (!Has(e.format)) {
      yield Create(ValueErrorType.StringFormatUnknown, e, s, o);
    } else {
      const r = Get(e.format);
      if (!r(o)) {
        yield Create(ValueErrorType.StringFormat, e, s, o);
      }
    }
  }
}
function* errors_FromSymbol(e, r, s, o) {
  if (!IsSymbol(o)) yield Create(ValueErrorType.Symbol, e, s, o);
}
function* errors_FromTemplateLiteral(e, r, s, o) {
  if (!IsString(o)) return yield Create(ValueErrorType.String, e, s, o);
  const n = new RegExp(e.pattern);
  if (!n.test(o)) {
    yield Create(ValueErrorType.StringPattern, e, s, o);
  }
}
function* errors_FromThis(e, r, s, o) {
  yield* errors_Visit(Deref(e, r), r, s, o);
}
function* errors_FromTuple(e, r, s, o) {
  if (!IsArray(o)) return yield Create(ValueErrorType.Tuple, e, s, o);
  if (e.items === undefined && !(o.length === 0)) {
    return yield Create(ValueErrorType.TupleLength, e, s, o);
  }
  if (!(o.length === e.maxItems)) {
    return yield Create(ValueErrorType.TupleLength, e, s, o);
  }
  if (!e.items) {
    return;
  }
  for (let n = 0; n < e.items.length; n++) {
    yield* errors_Visit(e.items[n], r, `${s}/${n}`, o[n]);
  }
}
function* errors_FromUndefined(e, r, s, o) {
  if (!IsUndefined(o)) yield Create(ValueErrorType.Undefined, e, s, o);
}
function* errors_FromUnion(e, r, s, o) {
  if (Check(e, r, o)) return;
  const n = e.anyOf.map((e) => new ValueErrorIterator(errors_Visit(e, r, s, o)));
  yield Create(ValueErrorType.Union, e, s, o, n);
}
function* errors_FromUint8Array(e, r, s, o) {
  if (!IsUint8Array(o)) return yield Create(ValueErrorType.Uint8Array, e, s, o);
  if (errors_IsDefined(e.maxByteLength) && !(o.length <= e.maxByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMaxByteLength, e, s, o);
  }
  if (errors_IsDefined(e.minByteLength) && !(o.length >= e.minByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMinByteLength, e, s, o);
  }
}
function* errors_FromUnknown(e, r, s, o) {}
function* errors_FromVoid(e, r, s, o) {
  if (!TypeSystemPolicy.IsVoidLike(o)) yield Create(ValueErrorType.Void, e, s, o);
}
function* errors_FromKind(e, r, s, o) {
  const n = type_Get(e[Kind]);
  if (!n(e, o)) yield Create(ValueErrorType.Kind, e, s, o);
}
function* errors_Visit(e, r, s, o) {
  const n = errors_IsDefined(e.$id) ? [...r, e] : r;
  const i = e;
  switch (i[Kind]) {
    case "Any":
      return yield* errors_FromAny(i, n, s, o);
    case "Array":
      return yield* errors_FromArray(i, n, s, o);
    case "AsyncIterator":
      return yield* errors_FromAsyncIterator(i, n, s, o);
    case "BigInt":
      return yield* errors_FromBigInt(i, n, s, o);
    case "Boolean":
      return yield* errors_FromBoolean(i, n, s, o);
    case "Constructor":
      return yield* errors_FromConstructor(i, n, s, o);
    case "Date":
      return yield* errors_FromDate(i, n, s, o);
    case "Function":
      return yield* errors_FromFunction(i, n, s, o);
    case "Import":
      return yield* errors_FromImport(i, n, s, o);
    case "Integer":
      return yield* errors_FromInteger(i, n, s, o);
    case "Intersect":
      return yield* errors_FromIntersect(i, n, s, o);
    case "Iterator":
      return yield* errors_FromIterator(i, n, s, o);
    case "Literal":
      return yield* errors_FromLiteral(i, n, s, o);
    case "Never":
      return yield* errors_FromNever(i, n, s, o);
    case "Not":
      return yield* errors_FromNot(i, n, s, o);
    case "Null":
      return yield* errors_FromNull(i, n, s, o);
    case "Number":
      return yield* errors_FromNumber(i, n, s, o);
    case "Object":
      return yield* errors_FromObject(i, n, s, o);
    case "Promise":
      return yield* errors_FromPromise(i, n, s, o);
    case "Record":
      return yield* errors_FromRecord(i, n, s, o);
    case "Ref":
      return yield* errors_FromRef(i, n, s, o);
    case "RegExp":
      return yield* errors_FromRegExp(i, n, s, o);
    case "String":
      return yield* errors_FromString(i, n, s, o);
    case "Symbol":
      return yield* errors_FromSymbol(i, n, s, o);
    case "TemplateLiteral":
      return yield* errors_FromTemplateLiteral(i, n, s, o);
    case "This":
      return yield* errors_FromThis(i, n, s, o);
    case "Tuple":
      return yield* errors_FromTuple(i, n, s, o);
    case "Undefined":
      return yield* errors_FromUndefined(i, n, s, o);
    case "Union":
      return yield* errors_FromUnion(i, n, s, o);
    case "Uint8Array":
      return yield* errors_FromUint8Array(i, n, s, o);
    case "Unknown":
      return yield* errors_FromUnknown(i, n, s, o);
    case "Void":
      return yield* errors_FromVoid(i, n, s, o);
    default:
      if (!type_Has(i[Kind])) throw new ValueErrorsUnknownTypeError(e);
      return yield* errors_FromKind(i, n, s, o);
  }
}
function Errors(...e) {
  const r = e.length === 3 ? errors_Visit(e[0], e[1], "", e[2]) : errors_Visit(e[0], [], "", e[1]);
  return new ValueErrorIterator(r);
}
function computed_Computed(e, r, s) {
  return CreateType({ [Kind]: "Computed", target: e, parameters: r }, s);
}
function DiscardKey(e, r) {
  const { [r]: s, ...o } = e;
  return o;
}
function Discard(e, r) {
  return r.reduce((e, r) => DiscardKey(e, r), e);
}
function MappedResult(e) {
  return CreateType({ [Kind]: "MappedResult", properties: e });
}
function optional_from_mapped_result_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = Optional(e[o], r);
  return s;
}
function FromMappedResult(e, r) {
  return optional_from_mapped_result_FromProperties(e.properties, r);
}
function OptionalFromMappedResult(e, r) {
  const s = FromMappedResult(e, r);
  return MappedResult(s);
}
function RemoveOptional(e) {
  return CreateType(Discard(e, [OptionalKind]));
}
function AddOptional(e) {
  return CreateType({ ...e, [OptionalKind]: "Optional" });
}
function OptionalWithFlag(e, r) {
  return r === false ? RemoveOptional(e) : AddOptional(e);
}
function Optional(e, r) {
  const s = r ?? true;
  return IsMappedResult(e) ? OptionalFromMappedResult(e, s) : OptionalWithFlag(e, s);
}
function IntersectCreate(e, r = {}) {
  const s = e.every((e) => kind_IsObject(e));
  const o = IsSchema(r.unevaluatedProperties) ? { unevaluatedProperties: r.unevaluatedProperties } : {};
  return CreateType(
    r.unevaluatedProperties === false || IsSchema(r.unevaluatedProperties) || s
      ? { ...o, [Kind]: "Intersect", type: "object", allOf: e }
      : { ...o, [Kind]: "Intersect", allOf: e },
    r
  );
}
function IsIntersectOptional(e) {
  return e.every((e) => IsOptional(e));
}
function RemoveOptionalFromType(e) {
  return Discard(e, [OptionalKind]);
}
function RemoveOptionalFromRest(e) {
  return e.map((e) => (IsOptional(e) ? RemoveOptionalFromType(e) : e));
}
function ResolveIntersect(e, r) {
  return IsIntersectOptional(e) ? Optional(IntersectCreate(RemoveOptionalFromRest(e), r)) : IntersectCreate(RemoveOptionalFromRest(e), r);
}
function IntersectEvaluated(e, r = {}) {
  if (e.length === 1) return CreateType(e[0], r);
  if (e.length === 0) return Never(r);
  if (e.some((e) => IsTransform(e))) throw new Error("Cannot intersect transform types");
  return ResolveIntersect(e, r);
}
function UnionCreate(e, r) {
  return CreateType({ [Kind]: "Union", anyOf: e }, r);
}
function IsUnionOptional(e) {
  return e.some((e) => IsOptional(e));
}
function union_evaluated_RemoveOptionalFromRest(e) {
  return e.map((e) => (IsOptional(e) ? union_evaluated_RemoveOptionalFromType(e) : e));
}
function union_evaluated_RemoveOptionalFromType(e) {
  return Discard(e, [OptionalKind]);
}
function ResolveUnion(e, r) {
  const s = IsUnionOptional(e);
  return s ? Optional(UnionCreate(union_evaluated_RemoveOptionalFromRest(e), r)) : UnionCreate(union_evaluated_RemoveOptionalFromRest(e), r);
}
function UnionEvaluated(e, r) {
  return e.length === 1 ? CreateType(e[0], r) : e.length === 0 ? Never(r) : ResolveUnion(e, r);
}
class TemplateLiteralParserError extends error_TypeBoxError {}
function Unescape(e) {
  return e.replace(/\\\$/g, "$").replace(/\\\*/g, "*").replace(/\\\^/g, "^").replace(/\\\|/g, "|").replace(/\\\(/g, "(").replace(/\\\)/g, ")");
}
function IsNonEscaped(e, r, s) {
  return e[r] === s && e.charCodeAt(r - 1) !== 92;
}
function IsOpenParen(e, r) {
  return IsNonEscaped(e, r, "(");
}
function IsCloseParen(e, r) {
  return IsNonEscaped(e, r, ")");
}
function IsSeparator(e, r) {
  return IsNonEscaped(e, r, "|");
}
function IsGroup(e) {
  if (!(IsOpenParen(e, 0) && IsCloseParen(e, e.length - 1))) return false;
  let r = 0;
  for (let s = 0; s < e.length; s++) {
    if (IsOpenParen(e, s)) r += 1;
    if (IsCloseParen(e, s)) r -= 1;
    if (r === 0 && s !== e.length - 1) return false;
  }
  return true;
}
function InGroup(e) {
  return e.slice(1, e.length - 1);
}
function IsPrecedenceOr(e) {
  let r = 0;
  for (let s = 0; s < e.length; s++) {
    if (IsOpenParen(e, s)) r += 1;
    if (IsCloseParen(e, s)) r -= 1;
    if (IsSeparator(e, s) && r === 0) return true;
  }
  return false;
}
function IsPrecedenceAnd(e) {
  for (let r = 0; r < e.length; r++) {
    if (IsOpenParen(e, r)) return true;
  }
  return false;
}
function Or(e) {
  let [r, s] = [0, 0];
  const o = [];
  for (let n = 0; n < e.length; n++) {
    if (IsOpenParen(e, n)) r += 1;
    if (IsCloseParen(e, n)) r -= 1;
    if (IsSeparator(e, n) && r === 0) {
      const r = e.slice(s, n);
      if (r.length > 0) o.push(TemplateLiteralParse(r));
      s = n + 1;
    }
  }
  const n = e.slice(s);
  if (n.length > 0) o.push(TemplateLiteralParse(n));
  if (o.length === 0) return { type: "const", const: "" };
  if (o.length === 1) return o[0];
  return { type: "or", expr: o };
}
function And(e) {
  function Group(e, r) {
    if (!IsOpenParen(e, r)) throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);
    let s = 0;
    for (let o = r; o < e.length; o++) {
      if (IsOpenParen(e, o)) s += 1;
      if (IsCloseParen(e, o)) s -= 1;
      if (s === 0) return [r, o];
    }
    throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);
  }
  function Range(e, r) {
    for (let s = r; s < e.length; s++) {
      if (IsOpenParen(e, s)) return [r, s];
    }
    return [r, e.length];
  }
  const r = [];
  for (let s = 0; s < e.length; s++) {
    if (IsOpenParen(e, s)) {
      const [o, n] = Group(e, s);
      const i = e.slice(o, n + 1);
      r.push(TemplateLiteralParse(i));
      s = n;
    } else {
      const [o, n] = Range(e, s);
      const i = e.slice(o, n);
      if (i.length > 0) r.push(TemplateLiteralParse(i));
      s = n - 1;
    }
  }
  return r.length === 0 ? { type: "const", const: "" } : r.length === 1 ? r[0] : { type: "and", expr: r };
}
function TemplateLiteralParse(e) {
  return IsGroup(e) ? TemplateLiteralParse(InGroup(e)) : IsPrecedenceOr(e) ? Or(e) : IsPrecedenceAnd(e) ? And(e) : { type: "const", const: Unescape(e) };
}
function TemplateLiteralParseExact(e) {
  return TemplateLiteralParse(e.slice(1, e.length - 1));
}
class TemplateLiteralFiniteError extends error_TypeBoxError {}
function IsNumberExpression(e) {
  return (
    e.type === "or" &&
    e.expr.length === 2 &&
    e.expr[0].type === "const" &&
    e.expr[0].const === "0" &&
    e.expr[1].type === "const" &&
    e.expr[1].const === "[1-9][0-9]*"
  );
}
function IsBooleanExpression(e) {
  return (
    e.type === "or" &&
    e.expr.length === 2 &&
    e.expr[0].type === "const" &&
    e.expr[0].const === "true" &&
    e.expr[1].type === "const" &&
    e.expr[1].const === "false"
  );
}
function IsStringExpression(e) {
  return e.type === "const" && e.const === ".*";
}
function IsTemplateLiteralExpressionFinite(e) {
  return IsNumberExpression(e) || IsStringExpression(e)
    ? false
    : IsBooleanExpression(e)
      ? true
      : e.type === "and"
        ? e.expr.every((e) => IsTemplateLiteralExpressionFinite(e))
        : e.type === "or"
          ? e.expr.every((e) => IsTemplateLiteralExpressionFinite(e))
          : e.type === "const"
            ? true
            : (() => {
                throw new TemplateLiteralFiniteError(`Unknown expression type`);
              })();
}
function IsTemplateLiteralFinite(e) {
  const r = TemplateLiteralParseExact(e.pattern);
  return IsTemplateLiteralExpressionFinite(r);
}
class TemplateLiteralGenerateError extends error_TypeBoxError {}
function* GenerateReduce(e) {
  if (e.length === 1) return yield* e[0];
  for (const r of e[0]) {
    for (const s of GenerateReduce(e.slice(1))) {
      yield `${r}${s}`;
    }
  }
}
function* GenerateAnd(e) {
  return yield* GenerateReduce(e.expr.map((e) => [...TemplateLiteralExpressionGenerate(e)]));
}
function* GenerateOr(e) {
  for (const r of e.expr) yield* TemplateLiteralExpressionGenerate(r);
}
function* GenerateConst(e) {
  return yield e.const;
}
function* TemplateLiteralExpressionGenerate(e) {
  return e.type === "and"
    ? yield* GenerateAnd(e)
    : e.type === "or"
      ? yield* GenerateOr(e)
      : e.type === "const"
        ? yield* GenerateConst(e)
        : (() => {
            throw new TemplateLiteralGenerateError("Unknown expression");
          })();
}
function TemplateLiteralGenerate(e) {
  const r = TemplateLiteralParseExact(e.pattern);
  return IsTemplateLiteralExpressionFinite(r) ? [...TemplateLiteralExpressionGenerate(r)] : [];
}
function indexed_property_keys_FromTemplateLiteral(e) {
  const r = TemplateLiteralGenerate(e);
  return r.map((e) => e.toString());
}
function indexed_property_keys_FromUnion(e) {
  const r = [];
  for (const s of e) r.push(...IndexPropertyKeys(s));
  return r;
}
function indexed_property_keys_FromLiteral(e) {
  return [e.toString()];
}
function IndexPropertyKeys(e) {
  return [
    ...new Set(
      IsTemplateLiteral(e)
        ? indexed_property_keys_FromTemplateLiteral(e)
        : IsUnion(e)
          ? indexed_property_keys_FromUnion(e.anyOf)
          : IsLiteral(e)
            ? indexed_property_keys_FromLiteral(e.const)
            : kind_IsNumber(e)
              ? ["[number]"]
              : kind_IsInteger(e)
                ? ["[number]"]
                : []
    ),
  ];
}
function MappedIndexPropertyKey(e, r, s) {
  return { [r]: Index(e, [r], Clone(s)) };
}
function MappedIndexPropertyKeys(e, r, s) {
  return r.reduce((r, o) => ({ ...r, ...MappedIndexPropertyKey(e, o, s) }), {});
}
function MappedIndexProperties(e, r, s) {
  return MappedIndexPropertyKeys(e, r.keys, s);
}
function IndexFromMappedKey(e, r, s) {
  const o = MappedIndexProperties(e, r, s);
  return MappedResult(o);
}
function indexed_from_mapped_result_FromProperties(e, r, s) {
  const o = {};
  for (const n of Object.getOwnPropertyNames(r)) {
    o[n] = Index(e, IndexPropertyKeys(r[n]), s);
  }
  return o;
}
function indexed_from_mapped_result_FromMappedResult(e, r, s) {
  return indexed_from_mapped_result_FromProperties(e, r.properties, s);
}
function IndexFromMappedResult(e, r, s) {
  const o = indexed_from_mapped_result_FromMappedResult(e, r, s);
  return MappedResult(o);
}
function indexed_FromRest(e, r) {
  return e.map((e) => IndexFromPropertyKey(e, r));
}
function FromIntersectRest(e) {
  return e.filter((e) => !IsNever(e));
}
function indexed_FromIntersect(e, r) {
  return IntersectEvaluated(FromIntersectRest(indexed_FromRest(e, r)));
}
function FromUnionRest(e) {
  return e.some((e) => IsNever(e)) ? [] : e;
}
function indexed_FromUnion(e, r) {
  return UnionEvaluated(FromUnionRest(indexed_FromRest(e, r)));
}
function indexed_FromTuple(e, r) {
  return r in e ? e[r] : r === "[number]" ? UnionEvaluated(e) : Never();
}
function indexed_FromArray(e, r) {
  return r === "[number]" ? e : Never();
}
function FromProperty(e, r) {
  return r in e ? e[r] : Never();
}
function IndexFromPropertyKey(e, r) {
  return IsIntersect(e)
    ? indexed_FromIntersect(e.allOf, r)
    : IsUnion(e)
      ? indexed_FromUnion(e.anyOf, r)
      : IsTuple(e)
        ? indexed_FromTuple(e.items ?? [], r)
        : kind_IsArray(e)
          ? indexed_FromArray(e.items, r)
          : kind_IsObject(e)
            ? FromProperty(e.properties, r)
            : Never();
}
function IndexFromPropertyKeys(e, r) {
  return r.map((r) => IndexFromPropertyKey(e, r));
}
function FromSchema(e, r) {
  return UnionEvaluated(IndexFromPropertyKeys(e, r));
}
function IndexFromComputed(e, r) {
  return Computed("Index", [e, r]);
}
function Index(e, r, s) {
  if (IsRef(e) || IsRef(r)) {
    const s = `Index types using Ref parameters require both Type and Key to be of TSchema`;
    if (!IsSchema(e) || !IsSchema(r)) throw new error_TypeBoxError(s);
    return computed_Computed("Index", [e, r]);
  }
  if (IsMappedResult(r)) return IndexFromMappedResult(e, r, s);
  if (IsMappedKey(r)) return IndexFromMappedKey(e, r, s);
  return CreateType(IsSchema(r) ? FromSchema(e, IndexPropertyKeys(r)) : FromSchema(e, r), s);
}
function KeyOfPropertyEntries(e) {
  const r = KeyOfPropertyKeys(e);
  const s = IndexFromPropertyKeys(e, r);
  return r.map((e, o) => [r[o], s[o]]);
}
class TransformDecodeCheckError extends error_TypeBoxError {
  constructor(e, r, s) {
    super(`Unable to decode value as it does not match the expected schema`);
    this.schema = e;
    this.value = r;
    this.error = s;
  }
}
class TransformDecodeError extends error_TypeBoxError {
  constructor(e, r, s, o) {
    super(o instanceof Error ? o.message : "Unknown error");
    this.schema = e;
    this.path = r;
    this.value = s;
    this.error = o;
  }
}
function Default(e, r, s) {
  try {
    return IsTransform(e) ? e[TransformKind].Decode(s) : s;
  } catch (o) {
    throw new TransformDecodeError(e, r, s, o);
  }
}
function decode_FromArray(e, r, s, o) {
  return IsArray(o)
    ? Default(
        e,
        s,
        o.map((o, n) => decode_Visit(e.items, r, `${s}/${n}`, o))
      )
    : Default(e, s, o);
}
function decode_FromIntersect(e, r, s, o) {
  if (!IsObject(o) || IsValueType(o)) return Default(e, s, o);
  const n = KeyOfPropertyEntries(e);
  const i = n.map((e) => e[0]);
  const a = { ...o };
  for (const [e, o] of n)
    if (e in a) {
      a[e] = decode_Visit(o, r, `${s}/${e}`, a[e]);
    }
  if (!IsTransform(e.unevaluatedProperties)) {
    return Default(e, s, a);
  }
  const l = Object.getOwnPropertyNames(a);
  const d = e.unevaluatedProperties;
  const h = { ...a };
  for (const e of l)
    if (!i.includes(e)) {
      h[e] = Default(d, `${s}/${e}`, h[e]);
    }
  return Default(e, s, h);
}
function decode_FromImport(e, r, s, o) {
  const n = globalThis.Object.values(e.$defs);
  const i = e.$defs[e.$ref];
  const a = e[TransformKind];
  const l = { [TransformKind]: a, ...i };
  return decode_Visit(l, [...r, ...n], s, o);
}
function decode_FromNot(e, r, s, o) {
  return Default(e, s, decode_Visit(e.not, r, s, o));
}
function decode_FromObject(e, r, s, o) {
  if (!IsObject(o)) return Default(e, s, o);
  const n = KeyOfPropertyKeys(e);
  const i = { ...o };
  for (const o of n) {
    if (!HasPropertyKey(i, o)) continue;
    if (IsUndefined(i[o]) && (!kind_IsUndefined(e.properties[o]) || TypeSystemPolicy.IsExactOptionalProperty(i, o))) continue;
    i[o] = decode_Visit(e.properties[o], r, `${s}/${o}`, i[o]);
  }
  if (!IsSchema(e.additionalProperties)) {
    return Default(e, s, i);
  }
  const a = Object.getOwnPropertyNames(i);
  const l = e.additionalProperties;
  const d = { ...i };
  for (const e of a)
    if (!n.includes(e)) {
      d[e] = Default(l, `${s}/${e}`, d[e]);
    }
  return Default(e, s, d);
}
function decode_FromRecord(e, r, s, o) {
  if (!IsObject(o)) return Default(e, s, o);
  const n = Object.getOwnPropertyNames(e.patternProperties)[0];
  const i = new RegExp(n);
  const a = { ...o };
  for (const l of Object.getOwnPropertyNames(o))
    if (i.test(l)) {
      a[l] = decode_Visit(e.patternProperties[n], r, `${s}/${l}`, a[l]);
    }
  if (!IsSchema(e.additionalProperties)) {
    return Default(e, s, a);
  }
  const l = Object.getOwnPropertyNames(a);
  const d = e.additionalProperties;
  const h = { ...a };
  for (const e of l)
    if (!i.test(e)) {
      h[e] = Default(d, `${s}/${e}`, h[e]);
    }
  return Default(e, s, h);
}
function decode_FromRef(e, r, s, o) {
  const n = Deref(e, r);
  return Default(e, s, decode_Visit(n, r, s, o));
}
function decode_FromThis(e, r, s, o) {
  const n = Deref(e, r);
  return Default(e, s, decode_Visit(n, r, s, o));
}
function decode_FromTuple(e, r, s, o) {
  return IsArray(o) && IsArray(e.items)
    ? Default(
        e,
        s,
        e.items.map((e, n) => decode_Visit(e, r, `${s}/${n}`, o[n]))
      )
    : Default(e, s, o);
}
function decode_FromUnion(e, r, s, o) {
  for (const n of e.anyOf) {
    if (!Check(n, r, o)) continue;
    const i = decode_Visit(n, r, s, o);
    return Default(e, s, i);
  }
  return Default(e, s, o);
}
function decode_Visit(e, r, s, o) {
  const n = Pushref(e, r);
  const i = e;
  switch (e[Kind]) {
    case "Array":
      return decode_FromArray(i, n, s, o);
    case "Import":
      return decode_FromImport(i, n, s, o);
    case "Intersect":
      return decode_FromIntersect(i, n, s, o);
    case "Not":
      return decode_FromNot(i, n, s, o);
    case "Object":
      return decode_FromObject(i, n, s, o);
    case "Record":
      return decode_FromRecord(i, n, s, o);
    case "Ref":
      return decode_FromRef(i, n, s, o);
    case "Symbol":
      return Default(i, s, o);
    case "This":
      return decode_FromThis(i, n, s, o);
    case "Tuple":
      return decode_FromTuple(i, n, s, o);
    case "Union":
      return decode_FromUnion(i, n, s, o);
    default:
      return Default(i, s, o);
  }
}
function TransformDecode(e, r, s) {
  return decode_Visit(e, r, "", s);
}
function has_FromArray(e, r) {
  return IsTransform(e) || has_Visit(e.items, r);
}
function has_FromAsyncIterator(e, r) {
  return IsTransform(e) || has_Visit(e.items, r);
}
function has_FromConstructor(e, r) {
  return IsTransform(e) || has_Visit(e.returns, r) || e.parameters.some((e) => has_Visit(e, r));
}
function has_FromFunction(e, r) {
  return IsTransform(e) || has_Visit(e.returns, r) || e.parameters.some((e) => has_Visit(e, r));
}
function has_FromIntersect(e, r) {
  return IsTransform(e) || IsTransform(e.unevaluatedProperties) || e.allOf.some((e) => has_Visit(e, r));
}
function has_FromIterator(e, r) {
  return IsTransform(e) || has_Visit(e.items, r);
}
function has_FromNot(e, r) {
  return IsTransform(e) || has_Visit(e.not, r);
}
function has_FromObject(e, r) {
  return (
    IsTransform(e) || Object.values(e.properties).some((e) => has_Visit(e, r)) || (IsSchema(e.additionalProperties) && has_Visit(e.additionalProperties, r))
  );
}
function has_FromPromise(e, r) {
  return IsTransform(e) || has_Visit(e.item, r);
}
function has_FromRecord(e, r) {
  const s = Object.getOwnPropertyNames(e.patternProperties)[0];
  const o = e.patternProperties[s];
  return IsTransform(e) || has_Visit(o, r) || (IsSchema(e.additionalProperties) && IsTransform(e.additionalProperties));
}
function has_FromRef(e, r) {
  if (IsTransform(e)) return true;
  return has_Visit(Deref(e, r), r);
}
function has_FromThis(e, r) {
  if (IsTransform(e)) return true;
  return has_Visit(Deref(e, r), r);
}
function has_FromTuple(e, r) {
  return IsTransform(e) || (!IsUndefined(e.items) && e.items.some((e) => has_Visit(e, r)));
}
function has_FromUnion(e, r) {
  return IsTransform(e) || e.anyOf.some((e) => has_Visit(e, r));
}
function has_Visit(e, r) {
  const s = Pushref(e, r);
  const o = e;
  if (e.$id && visited.has(e.$id)) return false;
  if (e.$id) visited.add(e.$id);
  switch (e[Kind]) {
    case "Array":
      return has_FromArray(o, s);
    case "AsyncIterator":
      return has_FromAsyncIterator(o, s);
    case "Constructor":
      return has_FromConstructor(o, s);
    case "Function":
      return has_FromFunction(o, s);
    case "Intersect":
      return has_FromIntersect(o, s);
    case "Iterator":
      return has_FromIterator(o, s);
    case "Not":
      return has_FromNot(o, s);
    case "Object":
      return has_FromObject(o, s);
    case "Promise":
      return has_FromPromise(o, s);
    case "Record":
      return has_FromRecord(o, s);
    case "Ref":
      return has_FromRef(o, s);
    case "This":
      return has_FromThis(o, s);
    case "Tuple":
      return has_FromTuple(o, s);
    case "Union":
      return has_FromUnion(o, s);
    default:
      return IsTransform(e);
  }
}
const visited = new Set();
function HasTransform(e, r) {
  visited.clear();
  return has_Visit(e, r);
}
function Decode(...e) {
  const [r, s, o] = e.length === 3 ? [e[0], e[1], e[2]] : [e[0], [], e[1]];
  if (!Check(r, s, o)) throw new TransformDecodeCheckError(r, o, Errors(r, s, o).First());
  return HasTransform(r, s) ? TransformDecode(r, s, o) : o;
}
function clone_FromObject(e) {
  const r = {};
  for (const s of Object.getOwnPropertyNames(e)) {
    r[s] = clone_Clone(e[s]);
  }
  for (const s of Object.getOwnPropertySymbols(e)) {
    r[s] = clone_Clone(e[s]);
  }
  return r;
}
function clone_FromArray(e) {
  return e.map((e) => clone_Clone(e));
}
function FromTypedArray(e) {
  return e.slice();
}
function FromMap(e) {
  return new Map(clone_Clone([...e.entries()]));
}
function FromSet(e) {
  return new Set(clone_Clone([...e.entries()]));
}
function clone_FromDate(e) {
  return new Date(e.toISOString());
}
function FromValue(e) {
  return e;
}
function clone_Clone(e) {
  if (IsArray(e)) return clone_FromArray(e);
  if (IsDate(e)) return clone_FromDate(e);
  if (IsTypedArray(e)) return FromTypedArray(e);
  if (IsMap(e)) return FromMap(e);
  if (IsSet(e)) return FromSet(e);
  if (IsObject(e)) return clone_FromObject(e);
  if (IsValueType(e)) return FromValue(e);
  throw new Error("ValueClone: Unable to clone value");
}
function ValueOrDefault(e, r) {
  const s = HasPropertyKey(e, "default") ? e.default : undefined;
  const o = IsFunction(s) ? s() : clone_Clone(s);
  return IsUndefined(r) ? o : IsObject(r) && IsObject(o) ? Object.assign(o, r) : r;
}
function HasDefaultProperty(e) {
  return IsKind(e) && "default" in e;
}
function default_FromArray(e, r, s) {
  if (IsArray(s)) {
    for (let o = 0; o < s.length; o++) {
      s[o] = default_Visit(e.items, r, s[o]);
    }
    return s;
  }
  const o = ValueOrDefault(e, s);
  if (!IsArray(o)) return o;
  for (let s = 0; s < o.length; s++) {
    o[s] = default_Visit(e.items, r, o[s]);
  }
  return o;
}
function default_FromDate(e, r, s) {
  return IsDate(s) ? s : ValueOrDefault(e, s);
}
function default_FromImport(e, r, s) {
  const o = globalThis.Object.values(e.$defs);
  const n = e.$defs[e.$ref];
  return default_Visit(n, [...r, ...o], s);
}
function default_FromIntersect(e, r, s) {
  const o = ValueOrDefault(e, s);
  return e.allOf.reduce((e, s) => {
    const n = default_Visit(s, r, o);
    return IsObject(n) ? { ...e, ...n } : n;
  }, {});
}
function default_FromObject(e, r, s) {
  const o = ValueOrDefault(e, s);
  if (!IsObject(o)) return o;
  const n = Object.getOwnPropertyNames(e.properties);
  for (const s of n) {
    const n = default_Visit(e.properties[s], r, o[s]);
    if (IsUndefined(n)) continue;
    o[s] = default_Visit(e.properties[s], r, o[s]);
  }
  if (!HasDefaultProperty(e.additionalProperties)) return o;
  for (const s of Object.getOwnPropertyNames(o)) {
    if (n.includes(s)) continue;
    o[s] = default_Visit(e.additionalProperties, r, o[s]);
  }
  return o;
}
function default_FromRecord(e, r, s) {
  const o = ValueOrDefault(e, s);
  if (!IsObject(o)) return o;
  const n = e.additionalProperties;
  const [i, a] = Object.entries(e.patternProperties)[0];
  const l = new RegExp(i);
  for (const e of Object.getOwnPropertyNames(o)) {
    if (!(l.test(e) && HasDefaultProperty(a))) continue;
    o[e] = default_Visit(a, r, o[e]);
  }
  if (!HasDefaultProperty(n)) return o;
  for (const e of Object.getOwnPropertyNames(o)) {
    if (l.test(e)) continue;
    o[e] = default_Visit(n, r, o[e]);
  }
  return o;
}
function default_FromRef(e, r, s) {
  return default_Visit(Deref(e, r), r, ValueOrDefault(e, s));
}
function default_FromThis(e, r, s) {
  return default_Visit(Deref(e, r), r, s);
}
function default_FromTuple(e, r, s) {
  const o = ValueOrDefault(e, s);
  if (!IsArray(o) || IsUndefined(e.items)) return o;
  const [n, i] = [e.items, Math.max(e.items.length, o.length)];
  for (let e = 0; e < i; e++) {
    if (e < n.length) o[e] = default_Visit(n[e], r, o[e]);
  }
  return o;
}
function default_FromUnion(e, r, s) {
  const o = ValueOrDefault(e, s);
  for (const s of e.anyOf) {
    const e = default_Visit(s, r, clone_Clone(o));
    if (Check(s, r, e)) {
      return e;
    }
  }
  return o;
}
function default_Visit(e, r, s) {
  const o = Pushref(e, r);
  const n = e;
  switch (n[Kind]) {
    case "Array":
      return default_FromArray(n, o, s);
    case "Date":
      return default_FromDate(n, o, s);
    case "Import":
      return default_FromImport(n, o, s);
    case "Intersect":
      return default_FromIntersect(n, o, s);
    case "Object":
      return default_FromObject(n, o, s);
    case "Record":
      return default_FromRecord(n, o, s);
    case "Ref":
      return default_FromRef(n, o, s);
    case "This":
      return default_FromThis(n, o, s);
    case "Tuple":
      return default_FromTuple(n, o, s);
    case "Union":
      return default_FromUnion(n, o, s);
    default:
      return ValueOrDefault(n, s);
  }
}
function default_Default(...e) {
  return e.length === 3 ? default_Visit(e[0], e[1], e[2]) : default_Visit(e[0], [], e[1]);
}
var COLORS = {
  reset: "[0m",
  bright: "[1m",
  dim: "[2m",
  underscore: "[4m",
  blink: "[5m",
  reverse: "[7m",
  hidden: "[8m",
  fgBlack: "[30m",
  fgRed: "[31m",
  fgGreen: "[32m",
  fgYellow: "[33m",
  fgBlue: "[34m",
  fgMagenta: "[35m",
  fgCyan: "[36m",
  fgWhite: "[37m",
  bgBlack: "[40m",
  bgRed: "[41m",
  bgGreen: "[42m",
  bgYellow: "[43m",
  bgBlue: "[44m",
  bgMagenta: "[45m",
  bgCyan: "[46m",
  bgWhite: "[47m",
};
var LOG_LEVEL = { FATAL: "fatal", ERROR: "error", WARN: "warn", INFO: "info", VERBOSE: "verbose", DEBUG: "debug" };
var PrettyLogs = class {
  constructor() {
    this.ok = this.ok.bind(this);
    this.info = this.info.bind(this);
    this.error = this.error.bind(this);
    this.fatal = this.fatal.bind(this);
    this.warn = this.warn.bind(this);
    this.debug = this.debug.bind(this);
    this.verbose = this.verbose.bind(this);
  }
  fatal(e, r) {
    this._logWithStack(LOG_LEVEL.FATAL, e, r);
  }
  error(e, r) {
    this._logWithStack(LOG_LEVEL.ERROR, e, r);
  }
  warn(e, r) {
    this._logWithStack(LOG_LEVEL.WARN, e, r);
  }
  ok(e, r) {
    this._logWithStack("ok", e, r);
  }
  info(e, r) {
    this._logWithStack(LOG_LEVEL.INFO, e, r);
  }
  debug(e, r) {
    this._logWithStack(LOG_LEVEL.DEBUG, e, r);
  }
  verbose(e, r) {
    this._logWithStack(LOG_LEVEL.VERBOSE, e, r);
  }
  _logWithStack(e, r, s) {
    this._log(e, r);
    if (typeof s === "string") {
      this._log(e, s);
      return;
    }
    if (s) {
      const r = s;
      let o = r?.error?.stack || r?.stack;
      if (!o) {
        const e = new Error().stack?.split("\n");
        if (e) {
          e.splice(0, 4);
          o = e.filter((e) => e.includes(".ts:")).join("\n");
        }
      }
      const n = { ...r };
      delete n.message;
      delete n.name;
      delete n.stack;
      if (!this._isEmpty(n)) {
        this._log(e, n);
      }
      if (typeof o == "string") {
        const r = this._formatStackTrace(o, 1);
        const s = this._colorizeText(r, COLORS.dim);
        this._log(e, s);
      } else if (o) {
        const r = this._formatStackTrace(o.join("\n"), 1);
        const s = this._colorizeText(r, COLORS.dim);
        this._log(e, s);
      } else {
        throw new Error("Stack is null");
      }
    }
  }
  _colorizeText(e, r) {
    if (!r) {
      throw new Error(`Invalid color: ${r}`);
    }
    return r.concat(e).concat(COLORS.reset);
  }
  _formatStackTrace(e, r = 0, s = "") {
    const o = e.split("\n");
    for (let e = 0; e < r; e++) {
      o.shift();
    }
    return o.map((e) => `${s}${e.replace(/\s*at\s*/, "  ↳  ")}`).join("\n");
  }
  _isEmpty(e) {
    return !Reflect.ownKeys(e).some((r) => typeof e[String(r)] !== "function");
  }
  _log(e, r) {
    const s = { fatal: "×", ok: "✓", warn: "⚠", error: "⚠", info: "›", debug: "››", verbose: "💬" };
    const o = s[e];
    const n = typeof r === "string" ? r : JSON.stringify(r, null, 2);
    const i = n.split("\n");
    const a = i
      .map((e, r) => {
        const s = r === 0 ? `\t${o}` : `\t${" ".repeat(o.length)}`;
        return `${s} ${e}`;
      })
      .join("\n");
    const l = a;
    const d = {
      fatal: ["error", COLORS.fgRed],
      ok: ["log", COLORS.fgGreen],
      warn: ["warn", COLORS.fgYellow],
      error: ["warn", COLORS.fgYellow],
      info: ["info", COLORS.dim],
      debug: ["debug", COLORS.fgMagenta],
      verbose: ["debug", COLORS.dim],
    };
    const h = console[d[e][0]];
    if (typeof h === "function" && l.length > 12) {
      h(this._colorizeText(l, d[e][1]));
    } else if (l.length <= 12) {
      return;
    } else {
      throw new Error(l);
    }
  }
};
var LogReturn = class {
  logMessage;
  metadata;
  constructor(e, r) {
    this.logMessage = e;
    this.metadata = r;
  }
};
var Logs = class _Logs {
  _maxLevel = -1;
  static console;
  _log({ level: e, consoleLog: r, logMessage: s, metadata: o, type: n }) {
    if (this._getNumericLevel(e) <= this._maxLevel) {
      r(s, o);
    }
    return new LogReturn({ raw: s, diff: this._diffColorCommentMessage(n, s), type: n, level: e }, o);
  }
  _addDiagnosticInformation(e) {
    if (!e) {
      e = {};
    } else if (typeof e !== "object") {
      e = { message: e };
    }
    const r = new Error().stack?.split("\n") || [];
    if (r.length > 3) {
      const s = r[3];
      const o = s.match(/at (\S+)/);
      if (o) {
        e.caller = o[1];
      }
    }
    return e;
  }
  ok(e, r) {
    r = this._addDiagnosticInformation(r);
    return this._log({ level: LOG_LEVEL.INFO, consoleLog: _Logs.console.ok, logMessage: e, metadata: r, type: "ok" });
  }
  info(e, r) {
    r = this._addDiagnosticInformation(r);
    return this._log({ level: LOG_LEVEL.INFO, consoleLog: _Logs.console.info, logMessage: e, metadata: r, type: "info" });
  }
  warn(e, r) {
    r = this._addDiagnosticInformation(r);
    return this._log({ level: LOG_LEVEL.WARN, consoleLog: _Logs.console.warn, logMessage: e, metadata: r, type: "warn" });
  }
  error(e, r) {
    r = this._addDiagnosticInformation(r);
    return this._log({ level: LOG_LEVEL.ERROR, consoleLog: _Logs.console.error, logMessage: e, metadata: r, type: "error" });
  }
  debug(e, r) {
    r = this._addDiagnosticInformation(r);
    return this._log({ level: LOG_LEVEL.DEBUG, consoleLog: _Logs.console.debug, logMessage: e, metadata: r, type: "debug" });
  }
  fatal(e, r) {
    if (!r) {
      r = _Logs.convertErrorsIntoObjects(new Error(e));
      const s = r.stack;
      s.splice(1, 1);
      r.stack = s;
    }
    if (r instanceof Error) {
      r = _Logs.convertErrorsIntoObjects(r);
      const e = r.stack;
      e.splice(1, 1);
      r.stack = e;
    }
    r = this._addDiagnosticInformation(r);
    return this._log({ level: LOG_LEVEL.FATAL, consoleLog: _Logs.console.fatal, logMessage: e, metadata: r, type: "fatal" });
  }
  verbose(e, r) {
    r = this._addDiagnosticInformation(r);
    return this._log({ level: LOG_LEVEL.VERBOSE, consoleLog: _Logs.console.verbose, logMessage: e, metadata: r, type: "verbose" });
  }
  constructor(e) {
    this._maxLevel = this._getNumericLevel(e);
    _Logs.console = new PrettyLogs();
  }
  _diffColorCommentMessage(e, r) {
    const s = {
      fatal: "> [!CAUTION]",
      error: "> [!CAUTION]",
      warn: "> [!WARNING]",
      ok: "> [!TIP]",
      info: "> [!NOTE]",
      debug: "> [!IMPORTANT]",
      verbose: "> [!NOTE]",
    };
    const o = s[e];
    if (o) {
      r = r
        .trim()
        .split("\n")
        .map((e) => `> ${e}`)
        .join("\n");
    }
    return [o, r].join("\n");
  }
  _getNumericLevel(e) {
    switch (e) {
      case LOG_LEVEL.FATAL:
        return 0;
      case LOG_LEVEL.ERROR:
        return 1;
      case LOG_LEVEL.WARN:
        return 2;
      case LOG_LEVEL.INFO:
        return 3;
      case LOG_LEVEL.VERBOSE:
        return 4;
      case LOG_LEVEL.DEBUG:
        return 5;
      default:
        return -1;
    }
  }
  static convertErrorsIntoObjects(e) {
    if (e instanceof Error) {
      return { message: e.message, name: e.name, stack: e.stack ? e.stack.split("\n") : null };
    } else if (typeof e === "object" && e !== null) {
      const r = Object.keys(e);
      r.forEach((r) => {
        e[r] = this.convertErrorsIntoObjects(e[r]);
      });
    }
    return e;
  }
};
var ansiEscapeCodes = /\x1b\[\d+m|\s/g;
function cleanLogs(e) {
  const r = e.mock.calls.map((e) => e.map((e) => e?.toString()).join(" "));
  return r.flat().map((e) => cleanLogString(e));
}
function cleanLogString(e) {
  return e.replaceAll(ansiEscapeCodes, "").replaceAll(/\n/g, "").replaceAll(/\r/g, "").replaceAll(/\t/g, "").trim();
}
function cleanSpyLogs(e) {
  return cleanLogs(e);
}
var main = __nccwpck_require__(8889);
var env = (e, r) => {
  const s = globalThis;
  const o = s?.process?.env;
  r ??= getRuntimeKey();
  const n = {
    bun: () => o,
    node: () => o,
    "edge-light": () => o,
    deno: () => Deno.env.toObject(),
    workerd: () => e.env,
    fastly: () => ({}),
    other: () => ({}),
  };
  return n[r]();
};
var knownUserAgents = { deno: "Deno", bun: "Bun", workerd: "Cloudflare-Workers", node: "Node.js" };
var getRuntimeKey = () => {
  const e = globalThis;
  const r = typeof navigator !== "undefined" && typeof navigator.userAgent === "string";
  if (r) {
    for (const [e, r] of Object.entries(knownUserAgents)) {
      if (checkUserAgentEquals(r)) {
        return e;
      }
    }
  }
  if (typeof e?.EdgeRuntime === "string") {
    return "edge-light";
  }
  if (e?.fastly !== void 0) {
    return "fastly";
  }
  if (e?.process?.release?.name === "node") {
    return "node";
  }
  return "other";
};
var checkUserAgentEquals = (e) => {
  const r = navigator.userAgent;
  return r.startsWith(e);
};
var brotli = __nccwpck_require__(7868);
function getUserAgent() {
  if (typeof navigator === "object" && "userAgent" in navigator) {
    return navigator.userAgent;
  }
  if (typeof process === "object" && process.version !== undefined) {
    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
  }
  return "<environment undetectable>";
}
function register(e, r, s, o) {
  if (typeof s !== "function") {
    throw new Error("method for before hook must be a function");
  }
  if (!o) {
    o = {};
  }
  if (Array.isArray(r)) {
    return r.reverse().reduce((r, s) => register.bind(null, e, s, r, o), s)();
  }
  return Promise.resolve().then(() => {
    if (!e.registry[r]) {
      return s(o);
    }
    return e.registry[r].reduce((e, r) => r.hook.bind(null, e, o), s)();
  });
}
function addHook(e, r, s, o) {
  const n = o;
  if (!e.registry[s]) {
    e.registry[s] = [];
  }
  if (r === "before") {
    o = (e, r) => Promise.resolve().then(n.bind(null, r)).then(e.bind(null, r));
  }
  if (r === "after") {
    o = (e, r) => {
      let s;
      return Promise.resolve()
        .then(e.bind(null, r))
        .then((e) => {
          s = e;
          return n(s, r);
        })
        .then(() => s);
    };
  }
  if (r === "error") {
    o = (e, r) =>
      Promise.resolve()
        .then(e.bind(null, r))
        .catch((e) => n(e, r));
  }
  e.registry[s].push({ hook: o, orig: n });
}
function removeHook(e, r, s) {
  if (!e.registry[r]) {
    return;
  }
  const o = e.registry[r].map((e) => e.orig).indexOf(s);
  if (o === -1) {
    return;
  }
  e.registry[r].splice(o, 1);
}
const bind = Function.bind;
const bindable = bind.bind(bind);
function bindApi(e, r, s) {
  const o = bindable(removeHook, null).apply(null, s ? [r, s] : [r]);
  e.api = { remove: o };
  e.remove = o;
  ["before", "error", "after", "wrap"].forEach((o) => {
    const n = s ? [r, o, s] : [r, o];
    e[o] = e.api[o] = bindable(addHook, null).apply(null, n);
  });
}
function Singular() {
  const e = Symbol("Singular");
  const r = { registry: {} };
  const s = register.bind(null, r, e);
  bindApi(s, r, e);
  return s;
}
function Collection() {
  const e = { registry: {} };
  const r = register.bind(null, e);
  bindApi(r, e);
  return r;
}
const before_after_hook = { Singular: Singular, Collection: Collection };
var VERSION = "0.0.0-development";
var userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;
var DEFAULTS = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: { accept: "application/vnd.github.v3+json", "user-agent": userAgent },
  mediaType: { format: "" },
};
function lowercaseKeys(e) {
  if (!e) {
    return {};
  }
  return Object.keys(e).reduce((r, s) => {
    r[s.toLowerCase()] = e[s];
    return r;
  }, {});
}
function isPlainObject(e) {
  if (typeof e !== "object" || e === null) return false;
  if (Object.prototype.toString.call(e) !== "[object Object]") return false;
  const r = Object.getPrototypeOf(e);
  if (r === null) return true;
  const s = Object.prototype.hasOwnProperty.call(r, "constructor") && r.constructor;
  return typeof s === "function" && s instanceof s && Function.prototype.call(s) === Function.prototype.call(e);
}
function mergeDeep(e, r) {
  const s = Object.assign({}, e);
  Object.keys(r).forEach((o) => {
    if (isPlainObject(r[o])) {
      if (!(o in e)) Object.assign(s, { [o]: r[o] });
      else s[o] = mergeDeep(e[o], r[o]);
    } else {
      Object.assign(s, { [o]: r[o] });
    }
  });
  return s;
}
function removeUndefinedProperties(e) {
  for (const r in e) {
    if (e[r] === void 0) {
      delete e[r];
    }
  }
  return e;
}
function merge(e, r, s) {
  if (typeof r === "string") {
    let [e, o] = r.split(" ");
    s = Object.assign(o ? { method: e, url: o } : { url: e }, s);
  } else {
    s = Object.assign({}, r);
  }
  s.headers = lowercaseKeys(s.headers);
  removeUndefinedProperties(s);
  removeUndefinedProperties(s.headers);
  const o = mergeDeep(e || {}, s);
  if (s.url === "/graphql") {
    if (e && e.mediaType.previews?.length) {
      o.mediaType.previews = e.mediaType.previews.filter((e) => !o.mediaType.previews.includes(e)).concat(o.mediaType.previews);
    }
    o.mediaType.previews = (o.mediaType.previews || []).map((e) => e.replace(/-preview/, ""));
  }
  return o;
}
function addQueryParameters(e, r) {
  const s = /\?/.test(e) ? "&" : "?";
  const o = Object.keys(r);
  if (o.length === 0) {
    return e;
  }
  return (
    e +
    s +
    o
      .map((e) => {
        if (e === "q") {
          return "q=" + r.q.split("+").map(encodeURIComponent).join("+");
        }
        return `${e}=${encodeURIComponent(r[e])}`;
      })
      .join("&")
  );
}
var urlVariableRegex = /\{[^{}}]+\}/g;
function removeNonChars(e) {
  return e.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g, "").split(/,/);
}
function extractUrlVariableNames(e) {
  const r = e.match(urlVariableRegex);
  if (!r) {
    return [];
  }
  return r.map(removeNonChars).reduce((e, r) => e.concat(r), []);
}
function omit(e, r) {
  const s = { __proto__: null };
  for (const o of Object.keys(e)) {
    if (r.indexOf(o) === -1) {
      s[o] = e[o];
    }
  }
  return s;
}
function encodeReserved(e) {
  return e
    .split(/(%[0-9A-Fa-f]{2})/g)
    .map(function (e) {
      if (!/%[0-9A-Fa-f]/.test(e)) {
        e = encodeURI(e).replace(/%5B/g, "[").replace(/%5D/g, "]");
      }
      return e;
    })
    .join("");
}
function encodeUnreserved(e) {
  return encodeURIComponent(e).replace(/[!'()*]/g, function (e) {
    return "%" + e.charCodeAt(0).toString(16).toUpperCase();
  });
}
function encodeValue(e, r, s) {
  r = e === "+" || e === "#" ? encodeReserved(r) : encodeUnreserved(r);
  if (s) {
    return encodeUnreserved(s) + "=" + r;
  } else {
    return r;
  }
}
function isDefined(e) {
  return e !== void 0 && e !== null;
}
function isKeyOperator(e) {
  return e === ";" || e === "&" || e === "?";
}
function getValues(e, r, s, o) {
  var n = e[s],
    i = [];
  if (isDefined(n) && n !== "") {
    if (typeof n === "string" || typeof n === "number" || typeof n === "boolean") {
      n = n.toString();
      if (o && o !== "*") {
        n = n.substring(0, parseInt(o, 10));
      }
      i.push(encodeValue(r, n, isKeyOperator(r) ? s : ""));
    } else {
      if (o === "*") {
        if (Array.isArray(n)) {
          n.filter(isDefined).forEach(function (e) {
            i.push(encodeValue(r, e, isKeyOperator(r) ? s : ""));
          });
        } else {
          Object.keys(n).forEach(function (e) {
            if (isDefined(n[e])) {
              i.push(encodeValue(r, n[e], e));
            }
          });
        }
      } else {
        const e = [];
        if (Array.isArray(n)) {
          n.filter(isDefined).forEach(function (s) {
            e.push(encodeValue(r, s));
          });
        } else {
          Object.keys(n).forEach(function (s) {
            if (isDefined(n[s])) {
              e.push(encodeUnreserved(s));
              e.push(encodeValue(r, n[s].toString()));
            }
          });
        }
        if (isKeyOperator(r)) {
          i.push(encodeUnreserved(s) + "=" + e.join(","));
        } else if (e.length !== 0) {
          i.push(e.join(","));
        }
      }
    }
  } else {
    if (r === ";") {
      if (isDefined(n)) {
        i.push(encodeUnreserved(s));
      }
    } else if (n === "" && (r === "&" || r === "?")) {
      i.push(encodeUnreserved(s) + "=");
    } else if (n === "") {
      i.push("");
    }
  }
  return i;
}
function parseUrl(e) {
  return { expand: expand.bind(null, e) };
}
function expand(e, r) {
  var s = ["+", "#", ".", "/", ";", "?", "&"];
  e = e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (e, o, n) {
    if (o) {
      let e = "";
      const n = [];
      if (s.indexOf(o.charAt(0)) !== -1) {
        e = o.charAt(0);
        o = o.substr(1);
      }
      o.split(/,/g).forEach(function (s) {
        var o = /([^:\*]*)(?::(\d+)|(\*))?/.exec(s);
        n.push(getValues(r, e, o[1], o[2] || o[3]));
      });
      if (e && e !== "+") {
        var i = ",";
        if (e === "?") {
          i = "&";
        } else if (e !== "#") {
          i = e;
        }
        return (n.length !== 0 ? e : "") + n.join(i);
      } else {
        return n.join(",");
      }
    } else {
      return encodeReserved(n);
    }
  });
  if (e === "/") {
    return e;
  } else {
    return e.replace(/\/$/, "");
  }
}
function parse(e) {
  let r = e.method.toUpperCase();
  let s = (e.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let o = Object.assign({}, e.headers);
  let n;
  let i = omit(e, ["method", "baseUrl", "url", "headers", "request", "mediaType"]);
  const a = extractUrlVariableNames(s);
  s = parseUrl(s).expand(i);
  if (!/^http/.test(s)) {
    s = e.baseUrl + s;
  }
  const l = Object.keys(e)
    .filter((e) => a.includes(e))
    .concat("baseUrl");
  const d = omit(i, l);
  const h = /application\/octet-stream/i.test(o.accept);
  if (!h) {
    if (e.mediaType.format) {
      o.accept = o.accept
        .split(/,/)
        .map((r) => r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${e.mediaType.format}`))
        .join(",");
    }
    if (s.endsWith("/graphql")) {
      if (e.mediaType.previews?.length) {
        const r = o.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g) || [];
        o.accept = r
          .concat(e.mediaType.previews)
          .map((r) => {
            const s = e.mediaType.format ? `.${e.mediaType.format}` : "+json";
            return `application/vnd.github.${r}-preview${s}`;
          })
          .join(",");
      }
    }
  }
  if (["GET", "HEAD"].includes(r)) {
    s = addQueryParameters(s, d);
  } else {
    if ("data" in d) {
      n = d.data;
    } else {
      if (Object.keys(d).length) {
        n = d;
      }
    }
  }
  if (!o["content-type"] && typeof n !== "undefined") {
    o["content-type"] = "application/json; charset=utf-8";
  }
  if (["PATCH", "PUT"].includes(r) && typeof n === "undefined") {
    n = "";
  }
  return Object.assign({ method: r, url: s, headers: o }, typeof n !== "undefined" ? { body: n } : null, e.request ? { request: e.request } : null);
}
function endpointWithDefaults(e, r, s) {
  return parse(merge(e, r, s));
}
function withDefaults(e, r) {
  const s = merge(e, r);
  const o = endpointWithDefaults.bind(null, s);
  return Object.assign(o, { DEFAULTS: s, defaults: withDefaults.bind(null, s), merge: merge.bind(null, s), parse: parse });
}
var endpoint = withDefaults(null, DEFAULTS);
var fast_content_type_parse = __nccwpck_require__(1120);
class RequestError extends Error {
  name;
  status;
  request;
  response;
  constructor(e, r, s) {
    super(e);
    this.name = "HttpError";
    this.status = Number.parseInt(r);
    if (Number.isNaN(this.status)) {
      this.status = 0;
    }
    if ("response" in s) {
      this.response = s.response;
    }
    const o = Object.assign({}, s.request);
    if (s.request.headers.authorization) {
      o.headers = Object.assign({}, s.request.headers, { authorization: s.request.headers.authorization.replace(/(?<! ) .*$/, " [REDACTED]") });
    }
    o.url = o.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = o;
  }
}
var dist_bundle_VERSION = "0.0.0-development";
var defaults_default = { headers: { "user-agent": `octokit-request.js/${dist_bundle_VERSION} ${getUserAgent()}` } };
function dist_bundle_isPlainObject(e) {
  if (typeof e !== "object" || e === null) return false;
  if (Object.prototype.toString.call(e) !== "[object Object]") return false;
  const r = Object.getPrototypeOf(e);
  if (r === null) return true;
  const s = Object.prototype.hasOwnProperty.call(r, "constructor") && r.constructor;
  return typeof s === "function" && s instanceof s && Function.prototype.call(s) === Function.prototype.call(e);
}
async function fetchWrapper(e) {
  const r = e.request?.fetch || globalThis.fetch;
  if (!r) {
    throw new Error(
      "fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing"
    );
  }
  const s = e.request?.log || console;
  const o = e.request?.parseSuccessResponseBody !== false;
  const n = dist_bundle_isPlainObject(e.body) || Array.isArray(e.body) ? JSON.stringify(e.body) : e.body;
  const i = Object.fromEntries(Object.entries(e.headers).map(([e, r]) => [e, String(r)]));
  let a;
  try {
    a = await r(e.url, { method: e.method, body: n, redirect: e.request?.redirect, headers: i, signal: e.request?.signal, ...(e.body && { duplex: "half" }) });
  } catch (r) {
    let s = "Unknown Error";
    if (r instanceof Error) {
      if (r.name === "AbortError") {
        r.status = 500;
        throw r;
      }
      s = r.message;
      if (r.name === "TypeError" && "cause" in r) {
        if (r.cause instanceof Error) {
          s = r.cause.message;
        } else if (typeof r.cause === "string") {
          s = r.cause;
        }
      }
    }
    const o = new RequestError(s, 500, { request: e });
    o.cause = r;
    throw o;
  }
  const l = a.status;
  const d = a.url;
  const h = {};
  for (const [e, r] of a.headers) {
    h[e] = r;
  }
  const p = { url: d, status: l, headers: h, data: "" };
  if ("deprecation" in h) {
    const r = h.link && h.link.match(/<([^<>]+)>; rel="deprecation"/);
    const o = r && r.pop();
    s.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${h.sunset}${o ? `. See ${o}` : ""}`);
  }
  if (l === 204 || l === 205) {
    return p;
  }
  if (e.method === "HEAD") {
    if (l < 400) {
      return p;
    }
    throw new RequestError(a.statusText, l, { response: p, request: e });
  }
  if (l === 304) {
    p.data = await getResponseData(a);
    throw new RequestError("Not modified", l, { response: p, request: e });
  }
  if (l >= 400) {
    p.data = await getResponseData(a);
    throw new RequestError(toErrorMessage(p.data), l, { response: p, request: e });
  }
  p.data = o ? await getResponseData(a) : a.body;
  return p;
}
async function getResponseData(e) {
  const r = e.headers.get("content-type");
  if (!r) {
    return e.text().catch(() => "");
  }
  const s = (0, fast_content_type_parse.xL)(r);
  if (isJSONResponse(s)) {
    let r = "";
    try {
      r = await e.text();
      return JSON.parse(r);
    } catch (e) {
      return r;
    }
  } else if (s.type.startsWith("text/") || s.parameters.charset?.toLowerCase() === "utf-8") {
    return e.text().catch(() => "");
  } else {
    return e.arrayBuffer().catch(() => new ArrayBuffer(0));
  }
}
function isJSONResponse(e) {
  return e.type === "application/json" || e.type === "application/scim+json";
}
function toErrorMessage(e) {
  if (typeof e === "string") {
    return e;
  }
  if (e instanceof ArrayBuffer) {
    return "Unknown error";
  }
  if ("message" in e) {
    const r = "documentation_url" in e ? ` - ${e.documentation_url}` : "";
    return Array.isArray(e.errors) ? `${e.message}: ${e.errors.map((e) => JSON.stringify(e)).join(", ")}${r}` : `${e.message}${r}`;
  }
  return `Unknown error: ${JSON.stringify(e)}`;
}
function dist_bundle_withDefaults(e, r) {
  const s = e.defaults(r);
  const newApi = function (e, r) {
    const o = s.merge(e, r);
    if (!o.request || !o.request.hook) {
      return fetchWrapper(s.parse(o));
    }
    const request2 = (e, r) => fetchWrapper(s.parse(s.merge(e, r)));
    Object.assign(request2, { endpoint: s, defaults: dist_bundle_withDefaults.bind(null, s) });
    return o.request.hook(request2, o);
  };
  return Object.assign(newApi, { endpoint: s, defaults: dist_bundle_withDefaults.bind(null, s) });
}
var request = dist_bundle_withDefaults(endpoint, defaults_default);
var endpoint_dist_bundle_VERSION = "0.0.0-development";
var dist_bundle_userAgent = `octokit-endpoint.js/${endpoint_dist_bundle_VERSION} ${getUserAgent()}`;
var dist_bundle_DEFAULTS = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: { accept: "application/vnd.github.v3+json", "user-agent": dist_bundle_userAgent },
  mediaType: { format: "" },
};
function dist_bundle_lowercaseKeys(e) {
  if (!e) {
    return {};
  }
  return Object.keys(e).reduce((r, s) => {
    r[s.toLowerCase()] = e[s];
    return r;
  }, {});
}
function endpoint_dist_bundle_isPlainObject(e) {
  if (typeof e !== "object" || e === null) return false;
  if (Object.prototype.toString.call(e) !== "[object Object]") return false;
  const r = Object.getPrototypeOf(e);
  if (r === null) return true;
  const s = Object.prototype.hasOwnProperty.call(r, "constructor") && r.constructor;
  return typeof s === "function" && s instanceof s && Function.prototype.call(s) === Function.prototype.call(e);
}
function dist_bundle_mergeDeep(e, r) {
  const s = Object.assign({}, e);
  Object.keys(r).forEach((o) => {
    if (endpoint_dist_bundle_isPlainObject(r[o])) {
      if (!(o in e)) Object.assign(s, { [o]: r[o] });
      else s[o] = dist_bundle_mergeDeep(e[o], r[o]);
    } else {
      Object.assign(s, { [o]: r[o] });
    }
  });
  return s;
}
function dist_bundle_removeUndefinedProperties(e) {
  for (const r in e) {
    if (e[r] === void 0) {
      delete e[r];
    }
  }
  return e;
}
function dist_bundle_merge(e, r, s) {
  if (typeof r === "string") {
    let [e, o] = r.split(" ");
    s = Object.assign(o ? { method: e, url: o } : { url: e }, s);
  } else {
    s = Object.assign({}, r);
  }
  s.headers = dist_bundle_lowercaseKeys(s.headers);
  dist_bundle_removeUndefinedProperties(s);
  dist_bundle_removeUndefinedProperties(s.headers);
  const o = dist_bundle_mergeDeep(e || {}, s);
  if (s.url === "/graphql") {
    if (e && e.mediaType.previews?.length) {
      o.mediaType.previews = e.mediaType.previews.filter((e) => !o.mediaType.previews.includes(e)).concat(o.mediaType.previews);
    }
    o.mediaType.previews = (o.mediaType.previews || []).map((e) => e.replace(/-preview/, ""));
  }
  return o;
}
function dist_bundle_addQueryParameters(e, r) {
  const s = /\?/.test(e) ? "&" : "?";
  const o = Object.keys(r);
  if (o.length === 0) {
    return e;
  }
  return (
    e +
    s +
    o
      .map((e) => {
        if (e === "q") {
          return "q=" + r.q.split("+").map(encodeURIComponent).join("+");
        }
        return `${e}=${encodeURIComponent(r[e])}`;
      })
      .join("&")
  );
}
var dist_bundle_urlVariableRegex = /\{[^}]+\}/g;
function dist_bundle_removeNonChars(e) {
  return e.replace(/^\W+|\W+$/g, "").split(/,/);
}
function dist_bundle_extractUrlVariableNames(e) {
  const r = e.match(dist_bundle_urlVariableRegex);
  if (!r) {
    return [];
  }
  return r.map(dist_bundle_removeNonChars).reduce((e, r) => e.concat(r), []);
}
function dist_bundle_omit(e, r) {
  const s = { __proto__: null };
  for (const o of Object.keys(e)) {
    if (r.indexOf(o) === -1) {
      s[o] = e[o];
    }
  }
  return s;
}
function dist_bundle_encodeReserved(e) {
  return e
    .split(/(%[0-9A-Fa-f]{2})/g)
    .map(function (e) {
      if (!/%[0-9A-Fa-f]/.test(e)) {
        e = encodeURI(e).replace(/%5B/g, "[").replace(/%5D/g, "]");
      }
      return e;
    })
    .join("");
}
function dist_bundle_encodeUnreserved(e) {
  return encodeURIComponent(e).replace(/[!'()*]/g, function (e) {
    return "%" + e.charCodeAt(0).toString(16).toUpperCase();
  });
}
function dist_bundle_encodeValue(e, r, s) {
  r = e === "+" || e === "#" ? dist_bundle_encodeReserved(r) : dist_bundle_encodeUnreserved(r);
  if (s) {
    return dist_bundle_encodeUnreserved(s) + "=" + r;
  } else {
    return r;
  }
}
function dist_bundle_isDefined(e) {
  return e !== void 0 && e !== null;
}
function dist_bundle_isKeyOperator(e) {
  return e === ";" || e === "&" || e === "?";
}
function dist_bundle_getValues(e, r, s, o) {
  var n = e[s],
    i = [];
  if (dist_bundle_isDefined(n) && n !== "") {
    if (typeof n === "string" || typeof n === "number" || typeof n === "boolean") {
      n = n.toString();
      if (o && o !== "*") {
        n = n.substring(0, parseInt(o, 10));
      }
      i.push(dist_bundle_encodeValue(r, n, dist_bundle_isKeyOperator(r) ? s : ""));
    } else {
      if (o === "*") {
        if (Array.isArray(n)) {
          n.filter(dist_bundle_isDefined).forEach(function (e) {
            i.push(dist_bundle_encodeValue(r, e, dist_bundle_isKeyOperator(r) ? s : ""));
          });
        } else {
          Object.keys(n).forEach(function (e) {
            if (dist_bundle_isDefined(n[e])) {
              i.push(dist_bundle_encodeValue(r, n[e], e));
            }
          });
        }
      } else {
        const e = [];
        if (Array.isArray(n)) {
          n.filter(dist_bundle_isDefined).forEach(function (s) {
            e.push(dist_bundle_encodeValue(r, s));
          });
        } else {
          Object.keys(n).forEach(function (s) {
            if (dist_bundle_isDefined(n[s])) {
              e.push(dist_bundle_encodeUnreserved(s));
              e.push(dist_bundle_encodeValue(r, n[s].toString()));
            }
          });
        }
        if (dist_bundle_isKeyOperator(r)) {
          i.push(dist_bundle_encodeUnreserved(s) + "=" + e.join(","));
        } else if (e.length !== 0) {
          i.push(e.join(","));
        }
      }
    }
  } else {
    if (r === ";") {
      if (dist_bundle_isDefined(n)) {
        i.push(dist_bundle_encodeUnreserved(s));
      }
    } else if (n === "" && (r === "&" || r === "?")) {
      i.push(dist_bundle_encodeUnreserved(s) + "=");
    } else if (n === "") {
      i.push("");
    }
  }
  return i;
}
function dist_bundle_parseUrl(e) {
  return { expand: dist_bundle_expand.bind(null, e) };
}
function dist_bundle_expand(e, r) {
  var s = ["+", "#", ".", "/", ";", "?", "&"];
  e = e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (e, o, n) {
    if (o) {
      let e = "";
      const n = [];
      if (s.indexOf(o.charAt(0)) !== -1) {
        e = o.charAt(0);
        o = o.substr(1);
      }
      o.split(/,/g).forEach(function (s) {
        var o = /([^:\*]*)(?::(\d+)|(\*))?/.exec(s);
        n.push(dist_bundle_getValues(r, e, o[1], o[2] || o[3]));
      });
      if (e && e !== "+") {
        var i = ",";
        if (e === "?") {
          i = "&";
        } else if (e !== "#") {
          i = e;
        }
        return (n.length !== 0 ? e : "") + n.join(i);
      } else {
        return n.join(",");
      }
    } else {
      return dist_bundle_encodeReserved(n);
    }
  });
  if (e === "/") {
    return e;
  } else {
    return e.replace(/\/$/, "");
  }
}
function dist_bundle_parse(e) {
  let r = e.method.toUpperCase();
  let s = (e.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let o = Object.assign({}, e.headers);
  let n;
  let i = dist_bundle_omit(e, ["method", "baseUrl", "url", "headers", "request", "mediaType"]);
  const a = dist_bundle_extractUrlVariableNames(s);
  s = dist_bundle_parseUrl(s).expand(i);
  if (!/^http/.test(s)) {
    s = e.baseUrl + s;
  }
  const l = Object.keys(e)
    .filter((e) => a.includes(e))
    .concat("baseUrl");
  const d = dist_bundle_omit(i, l);
  const h = /application\/octet-stream/i.test(o.accept);
  if (!h) {
    if (e.mediaType.format) {
      o.accept = o.accept
        .split(/,/)
        .map((r) => r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${e.mediaType.format}`))
        .join(",");
    }
    if (s.endsWith("/graphql")) {
      if (e.mediaType.previews?.length) {
        const r = o.accept.match(/[\w-]+(?=-preview)/g) || [];
        o.accept = r
          .concat(e.mediaType.previews)
          .map((r) => {
            const s = e.mediaType.format ? `.${e.mediaType.format}` : "+json";
            return `application/vnd.github.${r}-preview${s}`;
          })
          .join(",");
      }
    }
  }
  if (["GET", "HEAD"].includes(r)) {
    s = dist_bundle_addQueryParameters(s, d);
  } else {
    if ("data" in d) {
      n = d.data;
    } else {
      if (Object.keys(d).length) {
        n = d;
      }
    }
  }
  if (!o["content-type"] && typeof n !== "undefined") {
    o["content-type"] = "application/json; charset=utf-8";
  }
  if (["PATCH", "PUT"].includes(r) && typeof n === "undefined") {
    n = "";
  }
  return Object.assign({ method: r, url: s, headers: o }, typeof n !== "undefined" ? { body: n } : null, e.request ? { request: e.request } : null);
}
function dist_bundle_endpointWithDefaults(e, r, s) {
  return dist_bundle_parse(dist_bundle_merge(e, r, s));
}
function endpoint_dist_bundle_withDefaults(e, r) {
  const s = dist_bundle_merge(e, r);
  const o = dist_bundle_endpointWithDefaults.bind(null, s);
  return Object.assign(o, {
    DEFAULTS: s,
    defaults: endpoint_dist_bundle_withDefaults.bind(null, s),
    merge: dist_bundle_merge.bind(null, s),
    parse: dist_bundle_parse,
  });
}
var dist_bundle_endpoint = endpoint_dist_bundle_withDefaults(null, dist_bundle_DEFAULTS);
class dist_src_RequestError extends Error {
  name;
  status;
  request;
  response;
  constructor(e, r, s) {
    super(e);
    this.name = "HttpError";
    this.status = Number.parseInt(r);
    if (Number.isNaN(this.status)) {
      this.status = 0;
    }
    if ("response" in s) {
      this.response = s.response;
    }
    const o = Object.assign({}, s.request);
    if (s.request.headers.authorization) {
      o.headers = Object.assign({}, s.request.headers, { authorization: s.request.headers.authorization.replace(/ .*$/, " [REDACTED]") });
    }
    o.url = o.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = o;
  }
}
var request_dist_bundle_VERSION = "0.0.0-development";
var dist_bundle_defaults_default = { headers: { "user-agent": `octokit-request.js/${request_dist_bundle_VERSION} ${getUserAgent()}` } };
function request_dist_bundle_isPlainObject(e) {
  if (typeof e !== "object" || e === null) return false;
  if (Object.prototype.toString.call(e) !== "[object Object]") return false;
  const r = Object.getPrototypeOf(e);
  if (r === null) return true;
  const s = Object.prototype.hasOwnProperty.call(r, "constructor") && r.constructor;
  return typeof s === "function" && s instanceof s && Function.prototype.call(s) === Function.prototype.call(e);
}
async function dist_bundle_fetchWrapper(e) {
  const r = e.request?.fetch || globalThis.fetch;
  if (!r) {
    throw new Error(
      "fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing"
    );
  }
  const s = e.request?.log || console;
  const o = e.request?.parseSuccessResponseBody !== false;
  const n = request_dist_bundle_isPlainObject(e.body) || Array.isArray(e.body) ? JSON.stringify(e.body) : e.body;
  const i = Object.fromEntries(Object.entries(e.headers).map(([e, r]) => [e, String(r)]));
  let a;
  try {
    a = await r(e.url, { method: e.method, body: n, redirect: e.request?.redirect, headers: i, signal: e.request?.signal, ...(e.body && { duplex: "half" }) });
  } catch (r) {
    let s = "Unknown Error";
    if (r instanceof Error) {
      if (r.name === "AbortError") {
        r.status = 500;
        throw r;
      }
      s = r.message;
      if (r.name === "TypeError" && "cause" in r) {
        if (r.cause instanceof Error) {
          s = r.cause.message;
        } else if (typeof r.cause === "string") {
          s = r.cause;
        }
      }
    }
    const o = new dist_src_RequestError(s, 500, { request: e });
    o.cause = r;
    throw o;
  }
  const l = a.status;
  const d = a.url;
  const h = {};
  for (const [e, r] of a.headers) {
    h[e] = r;
  }
  const p = { url: d, status: l, headers: h, data: "" };
  if ("deprecation" in h) {
    const r = h.link && h.link.match(/<([^>]+)>; rel="deprecation"/);
    const o = r && r.pop();
    s.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${h.sunset}${o ? `. See ${o}` : ""}`);
  }
  if (l === 204 || l === 205) {
    return p;
  }
  if (e.method === "HEAD") {
    if (l < 400) {
      return p;
    }
    throw new dist_src_RequestError(a.statusText, l, { response: p, request: e });
  }
  if (l === 304) {
    p.data = await dist_bundle_getResponseData(a);
    throw new dist_src_RequestError("Not modified", l, { response: p, request: e });
  }
  if (l >= 400) {
    p.data = await dist_bundle_getResponseData(a);
    throw new dist_src_RequestError(dist_bundle_toErrorMessage(p.data), l, { response: p, request: e });
  }
  p.data = o ? await dist_bundle_getResponseData(a) : a.body;
  return p;
}
async function dist_bundle_getResponseData(e) {
  const r = e.headers.get("content-type");
  if (!r) {
    return e.text().catch(() => "");
  }
  const s = (0, fast_content_type_parse.xL)(r);
  if (dist_bundle_isJSONResponse(s)) {
    let r = "";
    try {
      r = await e.text();
      return JSON.parse(r);
    } catch (e) {
      return r;
    }
  } else if (s.type.startsWith("text/") || s.parameters.charset?.toLowerCase() === "utf-8") {
    return e.text().catch(() => "");
  } else {
    return e.arrayBuffer().catch(() => new ArrayBuffer(0));
  }
}
function dist_bundle_isJSONResponse(e) {
  return e.type === "application/json" || e.type === "application/scim+json";
}
function dist_bundle_toErrorMessage(e) {
  if (typeof e === "string") {
    return e;
  }
  if (e instanceof ArrayBuffer) {
    return "Unknown error";
  }
  if ("message" in e) {
    const r = "documentation_url" in e ? ` - ${e.documentation_url}` : "";
    return Array.isArray(e.errors) ? `${e.message}: ${e.errors.map((e) => JSON.stringify(e)).join(", ")}${r}` : `${e.message}${r}`;
  }
  return `Unknown error: ${JSON.stringify(e)}`;
}
function request_dist_bundle_withDefaults(e, r) {
  const s = e.defaults(r);
  const newApi = function (e, r) {
    const o = s.merge(e, r);
    if (!o.request || !o.request.hook) {
      return dist_bundle_fetchWrapper(s.parse(o));
    }
    const request2 = (e, r) => dist_bundle_fetchWrapper(s.parse(s.merge(e, r)));
    Object.assign(request2, { endpoint: s, defaults: request_dist_bundle_withDefaults.bind(null, s) });
    return o.request.hook(request2, o);
  };
  return Object.assign(newApi, { endpoint: s, defaults: request_dist_bundle_withDefaults.bind(null, s) });
}
var dist_bundle_request = request_dist_bundle_withDefaults(dist_bundle_endpoint, dist_bundle_defaults_default);
var graphql_dist_bundle_VERSION = "0.0.0-development";
function _buildMessageForResponseErrors(e) {
  return `Request failed due to following response errors:\n` + e.errors.map((e) => ` - ${e.message}`).join("\n");
}
var GraphqlResponseError = class extends Error {
  constructor(e, r, s) {
    super(_buildMessageForResponseErrors(s));
    this.request = e;
    this.headers = r;
    this.response = s;
    this.errors = s.errors;
    this.data = s.data;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
  name = "GraphqlResponseError";
  errors;
  data;
};
var NON_VARIABLE_OPTIONS = ["method", "baseUrl", "url", "headers", "request", "query", "mediaType"];
var FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
var GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
function graphql(e, r, s) {
  if (s) {
    if (typeof r === "string" && "query" in s) {
      return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
    }
    for (const e in s) {
      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(e)) continue;
      return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`));
    }
  }
  const o = typeof r === "string" ? Object.assign({ query: r }, s) : r;
  const n = Object.keys(o).reduce((e, r) => {
    if (NON_VARIABLE_OPTIONS.includes(r)) {
      e[r] = o[r];
      return e;
    }
    if (!e.variables) {
      e.variables = {};
    }
    e.variables[r] = o[r];
    return e;
  }, {});
  const i = o.baseUrl || e.endpoint.DEFAULTS.baseUrl;
  if (GHES_V3_SUFFIX_REGEX.test(i)) {
    n.url = i.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
  }
  return e(n).then((e) => {
    if (e.data.errors) {
      const r = {};
      for (const s of Object.keys(e.headers)) {
        r[s] = e.headers[s];
      }
      throw new GraphqlResponseError(n, r, e.data);
    }
    return e.data.data;
  });
}
function graphql_dist_bundle_withDefaults(e, r) {
  const s = e.defaults(r);
  const newApi = (e, r) => graphql(s, e, r);
  return Object.assign(newApi, { defaults: graphql_dist_bundle_withDefaults.bind(null, s), endpoint: s.endpoint });
}
var graphql2 = graphql_dist_bundle_withDefaults(dist_bundle_request, {
  headers: { "user-agent": `octokit-graphql.js/${graphql_dist_bundle_VERSION} ${getUserAgent()}` },
  method: "POST",
  url: "/graphql",
});
function withCustomRequest(e) {
  return graphql_dist_bundle_withDefaults(e, { method: "POST", url: "/graphql" });
}
var REGEX_IS_INSTALLATION_LEGACY = /^v1\./;
var REGEX_IS_INSTALLATION = /^ghs_/;
var REGEX_IS_USER_TO_SERVER = /^ghu_/;
async function auth(e) {
  const r = e.split(/\./).length === 3;
  const s = REGEX_IS_INSTALLATION_LEGACY.test(e) || REGEX_IS_INSTALLATION.test(e);
  const o = REGEX_IS_USER_TO_SERVER.test(e);
  const n = r ? "app" : s ? "installation" : o ? "user-to-server" : "oauth";
  return { type: "token", token: e, tokenType: n };
}
function withAuthorizationPrefix(e) {
  if (e.split(/\./).length === 3) {
    return `bearer ${e}`;
  }
  return `token ${e}`;
}
async function hook(e, r, s, o) {
  const n = r.endpoint.merge(s, o);
  n.headers.authorization = withAuthorizationPrefix(e);
  return r(n);
}
var createTokenAuth = function createTokenAuth2(e) {
  if (!e) {
    throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
  }
  if (typeof e !== "string") {
    throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");
  }
  e = e.replace(/^(token|bearer) +/i, "");
  return Object.assign(auth.bind(null, e), { hook: hook.bind(null, e) });
};
const version_VERSION = "6.1.4";
const noop = () => {};
const consoleWarn = console.warn.bind(console);
const consoleError = console.error.bind(console);
const userAgentTrail = `octokit-core.js/${version_VERSION} ${getUserAgent()}`;
class Octokit {
  static VERSION = version_VERSION;
  static defaults(e) {
    const r = class extends this {
      constructor(...r) {
        const s = r[0] || {};
        if (typeof e === "function") {
          super(e(s));
          return;
        }
        super(Object.assign({}, e, s, s.userAgent && e.userAgent ? { userAgent: `${s.userAgent} ${e.userAgent}` } : null));
      }
    };
    return r;
  }
  static plugins = [];
  static plugin(...e) {
    const r = this.plugins;
    const s = class extends this {
      static plugins = r.concat(e.filter((e) => !r.includes(e)));
    };
    return s;
  }
  constructor(e = {}) {
    const r = new before_after_hook.Collection();
    const s = {
      baseUrl: request.endpoint.DEFAULTS.baseUrl,
      headers: {},
      request: Object.assign({}, e.request, { hook: r.bind(null, "request") }),
      mediaType: { previews: [], format: "" },
    };
    s.headers["user-agent"] = e.userAgent ? `${e.userAgent} ${userAgentTrail}` : userAgentTrail;
    if (e.baseUrl) {
      s.baseUrl = e.baseUrl;
    }
    if (e.previews) {
      s.mediaType.previews = e.previews;
    }
    if (e.timeZone) {
      s.headers["time-zone"] = e.timeZone;
    }
    this.request = request.defaults(s);
    this.graphql = withCustomRequest(this.request).defaults(s);
    this.log = Object.assign({ debug: noop, info: noop, warn: consoleWarn, error: consoleError }, e.log);
    this.hook = r;
    if (!e.authStrategy) {
      if (!e.auth) {
        this.auth = async () => ({ type: "unauthenticated" });
      } else {
        const s = createTokenAuth(e.auth);
        r.wrap("request", s.hook);
        this.auth = s;
      }
    } else {
      const { authStrategy: s, ...o } = e;
      const n = s(Object.assign({ request: this.request, log: this.log, octokit: this, octokitOptions: o }, e.auth));
      r.wrap("request", n.hook);
      this.auth = n;
    }
    const o = this.constructor;
    for (let r = 0; r < o.plugins.length; ++r) {
      Object.assign(this, o.plugins[r](this, e));
    }
  }
  request;
  graphql;
  log;
  hook;
  auth;
}
var generateMessage = (e, r) =>
  `The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`;
var MissingCursorChange = class extends Error {
  constructor(e, r) {
    super(generateMessage(e.pathInQuery, r));
    this.pageInfo = e;
    this.cursorValue = r;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
  name = "MissingCursorChangeError";
};
var MissingPageInfo = class extends Error {
  constructor(e) {
    super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(e, null, 2)}`);
    this.response = e;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
  name = "MissingPageInfo";
};
var isObject = (e) => Object.prototype.toString.call(e) === "[object Object]";
function findPaginatedResourcePath(e) {
  const r = deepFindPathToProperty(e, "pageInfo");
  if (r.length === 0) {
    throw new MissingPageInfo(e);
  }
  return r;
}
var deepFindPathToProperty = (e, r, s = []) => {
  for (const o of Object.keys(e)) {
    const n = [...s, o];
    const i = e[o];
    if (isObject(i)) {
      if (i.hasOwnProperty(r)) {
        return n;
      }
      const e = deepFindPathToProperty(i, r, n);
      if (e.length > 0) {
        return e;
      }
    }
  }
  return [];
};
var get = (e, r) => r.reduce((e, r) => e[r], e);
var set = (e, r, s) => {
  const o = r[r.length - 1];
  const n = [...r].slice(0, -1);
  const i = get(e, n);
  if (typeof s === "function") {
    i[o] = s(i[o]);
  } else {
    i[o] = s;
  }
};
var extractPageInfos = (e) => {
  const r = findPaginatedResourcePath(e);
  return { pathInQuery: r, pageInfo: get(e, [...r, "pageInfo"]) };
};
var isForwardSearch = (e) => e.hasOwnProperty("hasNextPage");
var getCursorFrom = (e) => (isForwardSearch(e) ? e.endCursor : e.startCursor);
var hasAnotherPage = (e) => (isForwardSearch(e) ? e.hasNextPage : e.hasPreviousPage);
var createIterator =
  (e) =>
  (r, s = {}) => {
    let o = true;
    let n = { ...s };
    return {
      [Symbol.asyncIterator]: () => ({
        async next() {
          if (!o) return { done: true, value: {} };
          const s = await e.graphql(r, n);
          const i = extractPageInfos(s);
          const a = getCursorFrom(i.pageInfo);
          o = hasAnotherPage(i.pageInfo);
          if (o && a === n.cursor) {
            throw new MissingCursorChange(i, a);
          }
          n = { ...n, cursor: a };
          return { done: false, value: s };
        },
      }),
    };
  };
var mergeResponses = (e, r) => {
  if (Object.keys(e).length === 0) {
    return Object.assign(e, r);
  }
  const s = findPaginatedResourcePath(e);
  const o = [...s, "nodes"];
  const n = get(r, o);
  if (n) {
    set(e, o, (e) => [...e, ...n]);
  }
  const i = [...s, "edges"];
  const a = get(r, i);
  if (a) {
    set(e, i, (e) => [...e, ...a]);
  }
  const l = [...s, "pageInfo"];
  set(e, l, get(r, l));
  return e;
};
var createPaginate = (e) => {
  const r = createIterator(e);
  return async (e, s = {}) => {
    let o = {};
    for await (const n of r(e, s)) {
      o = mergeResponses(o, n);
    }
    return o;
  };
};
var plugin_paginate_graphql_dist_bundle_VERSION = "0.0.0-development";
function paginateGraphQL(e) {
  return { graphql: Object.assign(e.graphql, { paginate: Object.assign(createPaginate(e), { iterator: createIterator(e) }) }) };
}
var plugin_paginate_rest_dist_bundle_VERSION = "0.0.0-development";
function normalizePaginatedListResponse(e) {
  if (!e.data) {
    return { ...e, data: [] };
  }
  const r = "total_count" in e.data && !("url" in e.data);
  if (!r) return e;
  const s = e.data.incomplete_results;
  const o = e.data.repository_selection;
  const n = e.data.total_count;
  delete e.data.incomplete_results;
  delete e.data.repository_selection;
  delete e.data.total_count;
  const i = Object.keys(e.data)[0];
  const a = e.data[i];
  e.data = a;
  if (typeof s !== "undefined") {
    e.data.incomplete_results = s;
  }
  if (typeof o !== "undefined") {
    e.data.repository_selection = o;
  }
  e.data.total_count = n;
  return e;
}
function iterator(e, r, s) {
  const o = typeof r === "function" ? r.endpoint(s) : e.request.endpoint(r, s);
  const n = typeof r === "function" ? r : e.request;
  const i = o.method;
  const a = o.headers;
  let l = o.url;
  return {
    [Symbol.asyncIterator]: () => ({
      async next() {
        if (!l) return { done: true };
        try {
          const e = await n({ method: i, url: l, headers: a });
          const r = normalizePaginatedListResponse(e);
          l = ((r.headers.link || "").match(/<([^<>]+)>;\s*rel="next"/) || [])[1];
          return { value: r };
        } catch (e) {
          if (e.status !== 409) throw e;
          l = "";
          return { value: { status: 200, headers: {}, data: [] } };
        }
      },
    }),
  };
}
function paginate(e, r, s, o) {
  if (typeof s === "function") {
    o = s;
    s = void 0;
  }
  return gather(e, [], iterator(e, r, s)[Symbol.asyncIterator](), o);
}
function gather(e, r, s, o) {
  return s.next().then((n) => {
    if (n.done) {
      return r;
    }
    let i = false;
    function done() {
      i = true;
    }
    r = r.concat(o ? o(n.value, done) : n.value.data);
    if (i) {
      return r;
    }
    return gather(e, r, s, o);
  });
}
var composePaginateRest = Object.assign(paginate, { iterator: iterator });
var paginatingEndpoints = null && [
  "GET /advisories",
  "GET /app/hook/deliveries",
  "GET /app/installation-requests",
  "GET /app/installations",
  "GET /assignments/{assignment_id}/accepted_assignments",
  "GET /classrooms",
  "GET /classrooms/{classroom_id}/assignments",
  "GET /enterprises/{enterprise}/code-security/configurations",
  "GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories",
  "GET /enterprises/{enterprise}/dependabot/alerts",
  "GET /enterprises/{enterprise}/secret-scanning/alerts",
  "GET /events",
  "GET /gists",
  "GET /gists/public",
  "GET /gists/starred",
  "GET /gists/{gist_id}/comments",
  "GET /gists/{gist_id}/commits",
  "GET /gists/{gist_id}/forks",
  "GET /installation/repositories",
  "GET /issues",
  "GET /licenses",
  "GET /marketplace_listing/plans",
  "GET /marketplace_listing/plans/{plan_id}/accounts",
  "GET /marketplace_listing/stubbed/plans",
  "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
  "GET /networks/{owner}/{repo}/events",
  "GET /notifications",
  "GET /organizations",
  "GET /orgs/{org}/actions/cache/usage-by-repository",
  "GET /orgs/{org}/actions/hosted-runners",
  "GET /orgs/{org}/actions/permissions/repositories",
  "GET /orgs/{org}/actions/runner-groups",
  "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners",
  "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories",
  "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners",
  "GET /orgs/{org}/actions/runners",
  "GET /orgs/{org}/actions/secrets",
  "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/actions/variables",
  "GET /orgs/{org}/actions/variables/{name}/repositories",
  "GET /orgs/{org}/attestations/{subject_digest}",
  "GET /orgs/{org}/blocks",
  "GET /orgs/{org}/code-scanning/alerts",
  "GET /orgs/{org}/code-security/configurations",
  "GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories",
  "GET /orgs/{org}/codespaces",
  "GET /orgs/{org}/codespaces/secrets",
  "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/copilot/billing/seats",
  "GET /orgs/{org}/copilot/metrics",
  "GET /orgs/{org}/copilot/usage",
  "GET /orgs/{org}/dependabot/alerts",
  "GET /orgs/{org}/dependabot/secrets",
  "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/events",
  "GET /orgs/{org}/failed_invitations",
  "GET /orgs/{org}/hooks",
  "GET /orgs/{org}/hooks/{hook_id}/deliveries",
  "GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}",
  "GET /orgs/{org}/insights/api/subject-stats",
  "GET /orgs/{org}/insights/api/user-stats/{user_id}",
  "GET /orgs/{org}/installations",
  "GET /orgs/{org}/invitations",
  "GET /orgs/{org}/invitations/{invitation_id}/teams",
  "GET /orgs/{org}/issues",
  "GET /orgs/{org}/members",
  "GET /orgs/{org}/members/{username}/codespaces",
  "GET /orgs/{org}/migrations",
  "GET /orgs/{org}/migrations/{migration_id}/repositories",
  "GET /orgs/{org}/organization-roles/{role_id}/teams",
  "GET /orgs/{org}/organization-roles/{role_id}/users",
  "GET /orgs/{org}/outside_collaborators",
  "GET /orgs/{org}/packages",
  "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
  "GET /orgs/{org}/personal-access-token-requests",
  "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories",
  "GET /orgs/{org}/personal-access-tokens",
  "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories",
  "GET /orgs/{org}/private-registries",
  "GET /orgs/{org}/projects",
  "GET /orgs/{org}/properties/values",
  "GET /orgs/{org}/public_members",
  "GET /orgs/{org}/repos",
  "GET /orgs/{org}/rulesets",
  "GET /orgs/{org}/rulesets/rule-suites",
  "GET /orgs/{org}/rulesets/{ruleset_id}/history",
  "GET /orgs/{org}/secret-scanning/alerts",
  "GET /orgs/{org}/security-advisories",
  "GET /orgs/{org}/settings/network-configurations",
  "GET /orgs/{org}/team/{team_slug}/copilot/metrics",
  "GET /orgs/{org}/team/{team_slug}/copilot/usage",
  "GET /orgs/{org}/teams",
  "GET /orgs/{org}/teams/{team_slug}/discussions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/invitations",
  "GET /orgs/{org}/teams/{team_slug}/members",
  "GET /orgs/{org}/teams/{team_slug}/projects",
  "GET /orgs/{org}/teams/{team_slug}/repos",
  "GET /orgs/{org}/teams/{team_slug}/teams",
  "GET /projects/columns/{column_id}/cards",
  "GET /projects/{project_id}/collaborators",
  "GET /projects/{project_id}/columns",
  "GET /repos/{owner}/{repo}/actions/artifacts",
  "GET /repos/{owner}/{repo}/actions/caches",
  "GET /repos/{owner}/{repo}/actions/organization-secrets",
  "GET /repos/{owner}/{repo}/actions/organization-variables",
  "GET /repos/{owner}/{repo}/actions/runners",
  "GET /repos/{owner}/{repo}/actions/runs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
  "GET /repos/{owner}/{repo}/actions/secrets",
  "GET /repos/{owner}/{repo}/actions/variables",
  "GET /repos/{owner}/{repo}/actions/workflows",
  "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
  "GET /repos/{owner}/{repo}/activity",
  "GET /repos/{owner}/{repo}/assignees",
  "GET /repos/{owner}/{repo}/attestations/{subject_digest}",
  "GET /repos/{owner}/{repo}/branches",
  "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
  "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
  "GET /repos/{owner}/{repo}/code-scanning/alerts",
  "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
  "GET /repos/{owner}/{repo}/code-scanning/analyses",
  "GET /repos/{owner}/{repo}/codespaces",
  "GET /repos/{owner}/{repo}/codespaces/devcontainers",
  "GET /repos/{owner}/{repo}/codespaces/secrets",
  "GET /repos/{owner}/{repo}/collaborators",
  "GET /repos/{owner}/{repo}/comments",
  "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/commits",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
  "GET /repos/{owner}/{repo}/commits/{ref}/status",
  "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
  "GET /repos/{owner}/{repo}/contributors",
  "GET /repos/{owner}/{repo}/dependabot/alerts",
  "GET /repos/{owner}/{repo}/dependabot/secrets",
  "GET /repos/{owner}/{repo}/deployments",
  "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
  "GET /repos/{owner}/{repo}/environments",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/secrets",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/variables",
  "GET /repos/{owner}/{repo}/events",
  "GET /repos/{owner}/{repo}/forks",
  "GET /repos/{owner}/{repo}/hooks",
  "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
  "GET /repos/{owner}/{repo}/invitations",
  "GET /repos/{owner}/{repo}/issues",
  "GET /repos/{owner}/{repo}/issues/comments",
  "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/issues/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
  "GET /repos/{owner}/{repo}/keys",
  "GET /repos/{owner}/{repo}/labels",
  "GET /repos/{owner}/{repo}/milestones",
  "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
  "GET /repos/{owner}/{repo}/notifications",
  "GET /repos/{owner}/{repo}/pages/builds",
  "GET /repos/{owner}/{repo}/projects",
  "GET /repos/{owner}/{repo}/pulls",
  "GET /repos/{owner}/{repo}/pulls/comments",
  "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
  "GET /repos/{owner}/{repo}/releases",
  "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
  "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
  "GET /repos/{owner}/{repo}/rules/branches/{branch}",
  "GET /repos/{owner}/{repo}/rulesets",
  "GET /repos/{owner}/{repo}/rulesets/rule-suites",
  "GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
  "GET /repos/{owner}/{repo}/security-advisories",
  "GET /repos/{owner}/{repo}/stargazers",
  "GET /repos/{owner}/{repo}/subscribers",
  "GET /repos/{owner}/{repo}/tags",
  "GET /repos/{owner}/{repo}/teams",
  "GET /repos/{owner}/{repo}/topics",
  "GET /repositories",
  "GET /search/code",
  "GET /search/commits",
  "GET /search/issues",
  "GET /search/labels",
  "GET /search/repositories",
  "GET /search/topics",
  "GET /search/users",
  "GET /teams/{team_id}/discussions",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
  "GET /teams/{team_id}/invitations",
  "GET /teams/{team_id}/members",
  "GET /teams/{team_id}/projects",
  "GET /teams/{team_id}/repos",
  "GET /teams/{team_id}/teams",
  "GET /user/blocks",
  "GET /user/codespaces",
  "GET /user/codespaces/secrets",
  "GET /user/emails",
  "GET /user/followers",
  "GET /user/following",
  "GET /user/gpg_keys",
  "GET /user/installations",
  "GET /user/installations/{installation_id}/repositories",
  "GET /user/issues",
  "GET /user/keys",
  "GET /user/marketplace_purchases",
  "GET /user/marketplace_purchases/stubbed",
  "GET /user/memberships/orgs",
  "GET /user/migrations",
  "GET /user/migrations/{migration_id}/repositories",
  "GET /user/orgs",
  "GET /user/packages",
  "GET /user/packages/{package_type}/{package_name}/versions",
  "GET /user/public_emails",
  "GET /user/repos",
  "GET /user/repository_invitations",
  "GET /user/social_accounts",
  "GET /user/ssh_signing_keys",
  "GET /user/starred",
  "GET /user/subscriptions",
  "GET /user/teams",
  "GET /users",
  "GET /users/{username}/attestations/{subject_digest}",
  "GET /users/{username}/events",
  "GET /users/{username}/events/orgs/{org}",
  "GET /users/{username}/events/public",
  "GET /users/{username}/followers",
  "GET /users/{username}/following",
  "GET /users/{username}/gists",
  "GET /users/{username}/gpg_keys",
  "GET /users/{username}/keys",
  "GET /users/{username}/orgs",
  "GET /users/{username}/packages",
  "GET /users/{username}/projects",
  "GET /users/{username}/received_events",
  "GET /users/{username}/received_events/public",
  "GET /users/{username}/repos",
  "GET /users/{username}/social_accounts",
  "GET /users/{username}/ssh_signing_keys",
  "GET /users/{username}/starred",
  "GET /users/{username}/subscriptions",
];
function isPaginatingEndpoint(e) {
  if (typeof e === "string") {
    return paginatingEndpoints.includes(e);
  } else {
    return false;
  }
}
function paginateRest(e) {
  return { paginate: Object.assign(paginate.bind(null, e), { iterator: iterator.bind(null, e) }) };
}
paginateRest.VERSION = plugin_paginate_rest_dist_bundle_VERSION;
const dist_src_version_VERSION = "13.5.0";
const Endpoints = {
  actions: {
    addCustomLabelsToSelfHostedRunnerForOrg: ["POST /orgs/{org}/actions/runners/{runner_id}/labels"],
    addCustomLabelsToSelfHostedRunnerForRepo: ["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
    addRepoAccessToSelfHostedRunnerGroupInOrg: ["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],
    addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
    addSelectedRepoToOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
    approveWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],
    cancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],
    createEnvironmentVariable: ["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],
    createHostedRunnerForOrg: ["POST /orgs/{org}/actions/hosted-runners"],
    createOrUpdateEnvironmentSecret: ["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
    createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    createOrgVariable: ["POST /orgs/{org}/actions/variables"],
    createRegistrationTokenForOrg: ["POST /orgs/{org}/actions/runners/registration-token"],
    createRegistrationTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/registration-token"],
    createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
    createRemoveTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/remove-token"],
    createRepoVariable: ["POST /repos/{owner}/{repo}/actions/variables"],
    createWorkflowDispatch: ["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],
    deleteActionsCacheById: ["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],
    deleteActionsCacheByKey: ["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],
    deleteArtifact: ["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
    deleteEnvironmentSecret: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],
    deleteEnvironmentVariable: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],
    deleteHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],
    deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
    deleteOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}"],
    deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    deleteRepoVariable: ["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],
    deleteSelfHostedRunnerFromOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}"],
    deleteSelfHostedRunnerFromRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],
    deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
    deleteWorkflowRunLogs: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
    disableSelectedRepositoryGithubActionsOrganization: ["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],
    disableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],
    downloadArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],
    downloadJobLogsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],
    downloadWorkflowRunAttemptLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],
    downloadWorkflowRunLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
    enableSelectedRepositoryGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],
    enableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],
    forceCancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],
    generateRunnerJitconfigForOrg: ["POST /orgs/{org}/actions/runners/generate-jitconfig"],
    generateRunnerJitconfigForRepo: ["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],
    getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
    getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
    getActionsCacheUsageByRepoForOrg: ["GET /orgs/{org}/actions/cache/usage-by-repository"],
    getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
    getAllowedActionsOrganization: ["GET /orgs/{org}/actions/permissions/selected-actions"],
    getAllowedActionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],
    getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
    getCustomOidcSubClaimForRepo: ["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],
    getEnvironmentPublicKey: ["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],
    getEnvironmentSecret: ["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],
    getEnvironmentVariable: ["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],
    getGithubActionsDefaultWorkflowPermissionsOrganization: ["GET /orgs/{org}/actions/permissions/workflow"],
    getGithubActionsDefaultWorkflowPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/workflow"],
    getGithubActionsPermissionsOrganization: ["GET /orgs/{org}/actions/permissions"],
    getGithubActionsPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions"],
    getHostedRunnerForOrg: ["GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],
    getHostedRunnersGithubOwnedImagesForOrg: ["GET /orgs/{org}/actions/hosted-runners/images/github-owned"],
    getHostedRunnersLimitsForOrg: ["GET /orgs/{org}/actions/hosted-runners/limits"],
    getHostedRunnersMachineSpecsForOrg: ["GET /orgs/{org}/actions/hosted-runners/machine-sizes"],
    getHostedRunnersPartnerImagesForOrg: ["GET /orgs/{org}/actions/hosted-runners/images/partner"],
    getHostedRunnersPlatformsForOrg: ["GET /orgs/{org}/actions/hosted-runners/platforms"],
    getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
    getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
    getOrgVariable: ["GET /orgs/{org}/actions/variables/{name}"],
    getPendingDeploymentsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
    getRepoPermissions: ["GET /repos/{owner}/{repo}/actions/permissions", {}, { renamed: ["actions", "getGithubActionsPermissionsRepository"] }],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    getRepoVariable: ["GET /repos/{owner}/{repo}/actions/variables/{name}"],
    getReviewsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],
    getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
    getSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],
    getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
    getWorkflowAccessToRepository: ["GET /repos/{owner}/{repo}/actions/permissions/access"],
    getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
    getWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],
    getWorkflowRunUsage: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],
    getWorkflowUsage: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],
    listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
    listEnvironmentSecrets: ["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],
    listEnvironmentVariables: ["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],
    listGithubHostedRunnersInGroupForOrg: ["GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"],
    listHostedRunnersForOrg: ["GET /orgs/{org}/actions/hosted-runners"],
    listJobsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],
    listJobsForWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],
    listLabelsForSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}/labels"],
    listLabelsForSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
    listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
    listOrgVariables: ["GET /orgs/{org}/actions/variables"],
    listRepoOrganizationSecrets: ["GET /repos/{owner}/{repo}/actions/organization-secrets"],
    listRepoOrganizationVariables: ["GET /repos/{owner}/{repo}/actions/organization-variables"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
    listRepoVariables: ["GET /repos/{owner}/{repo}/actions/variables"],
    listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
    listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
    listRunnerApplicationsForRepo: ["GET /repos/{owner}/{repo}/actions/runners/downloads"],
    listSelectedReposForOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],
    listSelectedReposForOrgVariable: ["GET /orgs/{org}/actions/variables/{name}/repositories"],
    listSelectedRepositoriesEnabledGithubActionsOrganization: ["GET /orgs/{org}/actions/permissions/repositories"],
    listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
    listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
    listWorkflowRunArtifacts: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],
    listWorkflowRuns: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],
    listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
    reRunJobForWorkflowRun: ["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],
    reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
    reRunWorkflowFailedJobs: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],
    removeAllCustomLabelsFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],
    removeAllCustomLabelsFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
    removeCustomLabelFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],
    removeCustomLabelFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],
    removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
    removeSelectedRepoFromOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
    reviewCustomGatesForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],
    reviewPendingDeploymentsForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
    setAllowedActionsOrganization: ["PUT /orgs/{org}/actions/permissions/selected-actions"],
    setAllowedActionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],
    setCustomLabelsForSelfHostedRunnerForOrg: ["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],
    setCustomLabelsForSelfHostedRunnerForRepo: ["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
    setCustomOidcSubClaimForRepo: ["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],
    setGithubActionsDefaultWorkflowPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions/workflow"],
    setGithubActionsDefaultWorkflowPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],
    setGithubActionsPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions"],
    setGithubActionsPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions"],
    setSelectedReposForOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],
    setSelectedReposForOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories"],
    setSelectedRepositoriesEnabledGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories"],
    setWorkflowAccessToRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/access"],
    updateEnvironmentVariable: ["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],
    updateHostedRunnerForOrg: ["PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],
    updateOrgVariable: ["PATCH /orgs/{org}/actions/variables/{name}"],
    updateRepoVariable: ["PATCH /repos/{owner}/{repo}/actions/variables/{name}"],
  },
  activity: {
    checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
    deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
    deleteThreadSubscription: ["DELETE /notifications/threads/{thread_id}/subscription"],
    getFeeds: ["GET /feeds"],
    getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
    getThread: ["GET /notifications/threads/{thread_id}"],
    getThreadSubscriptionForAuthenticatedUser: ["GET /notifications/threads/{thread_id}/subscription"],
    listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
    listNotificationsForAuthenticatedUser: ["GET /notifications"],
    listOrgEventsForAuthenticatedUser: ["GET /users/{username}/events/orgs/{org}"],
    listPublicEvents: ["GET /events"],
    listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
    listPublicEventsForUser: ["GET /users/{username}/events/public"],
    listPublicOrgEvents: ["GET /orgs/{org}/events"],
    listReceivedEventsForUser: ["GET /users/{username}/received_events"],
    listReceivedPublicEventsForUser: ["GET /users/{username}/received_events/public"],
    listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
    listRepoNotificationsForAuthenticatedUser: ["GET /repos/{owner}/{repo}/notifications"],
    listReposStarredByAuthenticatedUser: ["GET /user/starred"],
    listReposStarredByUser: ["GET /users/{username}/starred"],
    listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
    listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
    listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
    listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
    markNotificationsAsRead: ["PUT /notifications"],
    markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
    markThreadAsDone: ["DELETE /notifications/threads/{thread_id}"],
    markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
    setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
    setThreadSubscription: ["PUT /notifications/threads/{thread_id}/subscription"],
    starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
    unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"],
  },
  apps: {
    addRepoToInstallation: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] },
    ],
    addRepoToInstallationForAuthenticatedUser: ["PUT /user/installations/{installation_id}/repositories/{repository_id}"],
    checkToken: ["POST /applications/{client_id}/token"],
    createFromManifest: ["POST /app-manifests/{code}/conversions"],
    createInstallationAccessToken: ["POST /app/installations/{installation_id}/access_tokens"],
    deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
    deleteInstallation: ["DELETE /app/installations/{installation_id}"],
    deleteToken: ["DELETE /applications/{client_id}/token"],
    getAuthenticated: ["GET /app"],
    getBySlug: ["GET /apps/{app_slug}"],
    getInstallation: ["GET /app/installations/{installation_id}"],
    getOrgInstallation: ["GET /orgs/{org}/installation"],
    getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
    getSubscriptionPlanForAccount: ["GET /marketplace_listing/accounts/{account_id}"],
    getSubscriptionPlanForAccountStubbed: ["GET /marketplace_listing/stubbed/accounts/{account_id}"],
    getUserInstallation: ["GET /users/{username}/installation"],
    getWebhookConfigForApp: ["GET /app/hook/config"],
    getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
    listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
    listAccountsForPlanStubbed: ["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],
    listInstallationReposForAuthenticatedUser: ["GET /user/installations/{installation_id}/repositories"],
    listInstallationRequestsForAuthenticatedApp: ["GET /app/installation-requests"],
    listInstallations: ["GET /app/installations"],
    listInstallationsForAuthenticatedUser: ["GET /user/installations"],
    listPlans: ["GET /marketplace_listing/plans"],
    listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
    listReposAccessibleToInstallation: ["GET /installation/repositories"],
    listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
    listSubscriptionsForAuthenticatedUserStubbed: ["GET /user/marketplace_purchases/stubbed"],
    listWebhookDeliveries: ["GET /app/hook/deliveries"],
    redeliverWebhookDelivery: ["POST /app/hook/deliveries/{delivery_id}/attempts"],
    removeRepoFromInstallation: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] },
    ],
    removeRepoFromInstallationForAuthenticatedUser: ["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],
    resetToken: ["PATCH /applications/{client_id}/token"],
    revokeInstallationAccessToken: ["DELETE /installation/token"],
    scopeToken: ["POST /applications/{client_id}/token/scoped"],
    suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
    unsuspendInstallation: ["DELETE /app/installations/{installation_id}/suspended"],
    updateWebhookConfigForApp: ["PATCH /app/hook/config"],
  },
  billing: {
    getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
    getGithubActionsBillingUser: ["GET /users/{username}/settings/billing/actions"],
    getGithubBillingUsageReportOrg: ["GET /organizations/{org}/settings/billing/usage"],
    getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
    getGithubPackagesBillingUser: ["GET /users/{username}/settings/billing/packages"],
    getSharedStorageBillingOrg: ["GET /orgs/{org}/settings/billing/shared-storage"],
    getSharedStorageBillingUser: ["GET /users/{username}/settings/billing/shared-storage"],
  },
  checks: {
    create: ["POST /repos/{owner}/{repo}/check-runs"],
    createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
    get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
    getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
    listAnnotations: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],
    listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
    listForSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],
    listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
    rerequestRun: ["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],
    rerequestSuite: ["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],
    setSuitesPreferences: ["PATCH /repos/{owner}/{repo}/check-suites/preferences"],
    update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"],
  },
  codeScanning: {
    commitAutofix: ["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],
    createAutofix: ["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],
    createVariantAnalysis: ["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],
    deleteAnalysis: ["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],
    deleteCodeqlDatabase: ["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],
    getAlert: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}", {}, { renamedParameters: { alert_id: "alert_number" } }],
    getAnalysis: ["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],
    getAutofix: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],
    getCodeqlDatabase: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],
    getDefaultSetup: ["GET /repos/{owner}/{repo}/code-scanning/default-setup"],
    getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
    getVariantAnalysis: ["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],
    getVariantAnalysisRepoTask: ["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],
    listAlertInstances: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],
    listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
    listAlertsInstances: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances", {}, { renamed: ["codeScanning", "listAlertInstances"] }],
    listCodeqlDatabases: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],
    listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
    updateAlert: ["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],
    updateDefaultSetup: ["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],
    uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"],
  },
  codeSecurity: {
    attachConfiguration: ["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],
    attachEnterpriseConfiguration: ["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],
    createConfiguration: ["POST /orgs/{org}/code-security/configurations"],
    createConfigurationForEnterprise: ["POST /enterprises/{enterprise}/code-security/configurations"],
    deleteConfiguration: ["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],
    deleteConfigurationForEnterprise: ["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],
    detachConfiguration: ["DELETE /orgs/{org}/code-security/configurations/detach"],
    getConfiguration: ["GET /orgs/{org}/code-security/configurations/{configuration_id}"],
    getConfigurationForRepository: ["GET /repos/{owner}/{repo}/code-security-configuration"],
    getConfigurationsForEnterprise: ["GET /enterprises/{enterprise}/code-security/configurations"],
    getConfigurationsForOrg: ["GET /orgs/{org}/code-security/configurations"],
    getDefaultConfigurations: ["GET /orgs/{org}/code-security/configurations/defaults"],
    getDefaultConfigurationsForEnterprise: ["GET /enterprises/{enterprise}/code-security/configurations/defaults"],
    getRepositoriesForConfiguration: ["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],
    getRepositoriesForEnterpriseConfiguration: ["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],
    getSingleConfigurationForEnterprise: ["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],
    setConfigurationAsDefault: ["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],
    setConfigurationAsDefaultForEnterprise: ["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],
    updateConfiguration: ["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],
    updateEnterpriseConfiguration: ["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],
  },
  codesOfConduct: { getAllCodesOfConduct: ["GET /codes_of_conduct"], getConductCode: ["GET /codes_of_conduct/{key}"] },
  codespaces: {
    addRepositoryForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
    addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
    checkPermissionsForDevcontainer: ["GET /repos/{owner}/{repo}/codespaces/permissions_check"],
    codespaceMachinesForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/machines"],
    createForAuthenticatedUser: ["POST /user/codespaces"],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],
    createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
    createOrUpdateSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}"],
    createWithPrForAuthenticatedUser: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],
    createWithRepoForAuthenticatedUser: ["POST /repos/{owner}/{repo}/codespaces"],
    deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
    deleteFromOrganization: ["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],
    deleteOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],
    deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
    deleteSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}"],
    exportForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/exports"],
    getCodespacesForUserInOrg: ["GET /orgs/{org}/members/{username}/codespaces"],
    getExportDetailsForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/exports/{export_id}"],
    getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
    getOrgPublicKey: ["GET /orgs/{org}/codespaces/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}"],
    getPublicKeyForAuthenticatedUser: ["GET /user/codespaces/secrets/public-key"],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
    getSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}"],
    listDevcontainersInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/devcontainers"],
    listForAuthenticatedUser: ["GET /user/codespaces"],
    listInOrganization: ["GET /orgs/{org}/codespaces", {}, { renamedParameters: { org_id: "org" } }],
    listInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces"],
    listOrgSecrets: ["GET /orgs/{org}/codespaces/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
    listRepositoriesForSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}/repositories"],
    listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
    listSelectedReposForOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
    preFlightWithRepoForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/new"],
    publishForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/publish"],
    removeRepositoryForSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
    removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
    repoMachinesForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/machines"],
    setRepositoriesForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories"],
    setSelectedReposForOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
    startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
    stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
    stopInOrganization: ["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],
    updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"],
  },
  copilot: {
    addCopilotSeatsForTeams: ["POST /orgs/{org}/copilot/billing/selected_teams"],
    addCopilotSeatsForUsers: ["POST /orgs/{org}/copilot/billing/selected_users"],
    cancelCopilotSeatAssignmentForTeams: ["DELETE /orgs/{org}/copilot/billing/selected_teams"],
    cancelCopilotSeatAssignmentForUsers: ["DELETE /orgs/{org}/copilot/billing/selected_users"],
    copilotMetricsForOrganization: ["GET /orgs/{org}/copilot/metrics"],
    copilotMetricsForTeam: ["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],
    getCopilotOrganizationDetails: ["GET /orgs/{org}/copilot/billing"],
    getCopilotSeatDetailsForUser: ["GET /orgs/{org}/members/{username}/copilot"],
    listCopilotSeats: ["GET /orgs/{org}/copilot/billing/seats"],
    usageMetricsForOrg: ["GET /orgs/{org}/copilot/usage"],
    usageMetricsForTeam: ["GET /orgs/{org}/team/{team_slug}/copilot/usage"],
  },
  dependabot: {
    addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],
    createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
    deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
    deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
    getAlert: ["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
    getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
    listAlertsForEnterprise: ["GET /enterprises/{enterprise}/dependabot/alerts"],
    listAlertsForOrg: ["GET /orgs/{org}/dependabot/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/dependabot/alerts"],
    listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
    listSelectedReposForOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
    removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
    setSelectedReposForOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
    updateAlert: ["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
  },
  dependencyGraph: {
    createRepositorySnapshot: ["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],
    diffRange: ["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],
    exportSbom: ["GET /repos/{owner}/{repo}/dependency-graph/sbom"],
  },
  emojis: { get: ["GET /emojis"] },
  gists: {
    checkIsStarred: ["GET /gists/{gist_id}/star"],
    create: ["POST /gists"],
    createComment: ["POST /gists/{gist_id}/comments"],
    delete: ["DELETE /gists/{gist_id}"],
    deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
    fork: ["POST /gists/{gist_id}/forks"],
    get: ["GET /gists/{gist_id}"],
    getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
    getRevision: ["GET /gists/{gist_id}/{sha}"],
    list: ["GET /gists"],
    listComments: ["GET /gists/{gist_id}/comments"],
    listCommits: ["GET /gists/{gist_id}/commits"],
    listForUser: ["GET /users/{username}/gists"],
    listForks: ["GET /gists/{gist_id}/forks"],
    listPublic: ["GET /gists/public"],
    listStarred: ["GET /gists/starred"],
    star: ["PUT /gists/{gist_id}/star"],
    unstar: ["DELETE /gists/{gist_id}/star"],
    update: ["PATCH /gists/{gist_id}"],
    updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"],
  },
  git: {
    createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
    createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
    createRef: ["POST /repos/{owner}/{repo}/git/refs"],
    createTag: ["POST /repos/{owner}/{repo}/git/tags"],
    createTree: ["POST /repos/{owner}/{repo}/git/trees"],
    deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
    getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
    getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
    getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
    getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
    getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
    listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
    updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"],
  },
  gitignore: { getAllTemplates: ["GET /gitignore/templates"], getTemplate: ["GET /gitignore/templates/{name}"] },
  hostedCompute: {
    createNetworkConfigurationForOrg: ["POST /orgs/{org}/settings/network-configurations"],
    deleteNetworkConfigurationFromOrg: ["DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"],
    getNetworkConfigurationForOrg: ["GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"],
    getNetworkSettingsForOrg: ["GET /orgs/{org}/settings/network-settings/{network_settings_id}"],
    listNetworkConfigurationsForOrg: ["GET /orgs/{org}/settings/network-configurations"],
    updateNetworkConfigurationForOrg: ["PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"],
  },
  interactions: {
    getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
    getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
    getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
    getRestrictionsForYourPublicRepos: ["GET /user/interaction-limits", {}, { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }],
    removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
    removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
    removeRestrictionsForRepo: ["DELETE /repos/{owner}/{repo}/interaction-limits"],
    removeRestrictionsForYourPublicRepos: ["DELETE /user/interaction-limits", {}, { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] }],
    setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
    setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
    setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
    setRestrictionsForYourPublicRepos: ["PUT /user/interaction-limits", {}, { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }],
  },
  issues: {
    addAssignees: ["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
    addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    addSubIssue: ["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],
    checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
    checkUserCanBeAssignedToIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],
    create: ["POST /repos/{owner}/{repo}/issues"],
    createComment: ["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],
    createLabel: ["POST /repos/{owner}/{repo}/labels"],
    createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
    deleteComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
    deleteMilestone: ["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],
    get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
    getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
    getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
    getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
    list: ["GET /issues"],
    listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
    listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
    listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
    listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
    listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
    listEventsForTimeline: ["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],
    listForAuthenticatedUser: ["GET /user/issues"],
    listForOrg: ["GET /orgs/{org}/issues"],
    listForRepo: ["GET /repos/{owner}/{repo}/issues"],
    listLabelsForMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],
    listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
    listLabelsOnIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
    listSubIssues: ["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],
    lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    removeAllLabels: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    removeAssignees: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
    removeLabel: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],
    removeSubIssue: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],
    reprioritizeSubIssue: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],
    setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
    updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
    updateMilestone: ["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"],
  },
  licenses: { get: ["GET /licenses/{license}"], getAllCommonlyUsed: ["GET /licenses"], getForRepo: ["GET /repos/{owner}/{repo}/license"] },
  markdown: { render: ["POST /markdown"], renderRaw: ["POST /markdown/raw", { headers: { "content-type": "text/plain; charset=utf-8" } }] },
  meta: { get: ["GET /meta"], getAllVersions: ["GET /versions"], getOctocat: ["GET /octocat"], getZen: ["GET /zen"], root: ["GET /"] },
  migrations: {
    deleteArchiveForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/archive"],
    deleteArchiveForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/archive"],
    downloadArchiveForOrg: ["GET /orgs/{org}/migrations/{migration_id}/archive"],
    getArchiveForAuthenticatedUser: ["GET /user/migrations/{migration_id}/archive"],
    getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
    getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
    listForAuthenticatedUser: ["GET /user/migrations"],
    listForOrg: ["GET /orgs/{org}/migrations"],
    listReposForAuthenticatedUser: ["GET /user/migrations/{migration_id}/repositories"],
    listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
    listReposForUser: ["GET /user/migrations/{migration_id}/repositories", {}, { renamed: ["migrations", "listReposForAuthenticatedUser"] }],
    startForAuthenticatedUser: ["POST /user/migrations"],
    startForOrg: ["POST /orgs/{org}/migrations"],
    unlockRepoForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],
    unlockRepoForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],
  },
  oidc: {
    getOidcCustomSubTemplateForOrg: ["GET /orgs/{org}/actions/oidc/customization/sub"],
    updateOidcCustomSubTemplateForOrg: ["PUT /orgs/{org}/actions/oidc/customization/sub"],
  },
  orgs: {
    addSecurityManagerTeam: [
      "PUT /orgs/{org}/security-managers/teams/{team_slug}",
      {},
      {
        deprecated:
          "octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team",
      },
    ],
    assignTeamToOrgRole: ["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
    assignUserToOrgRole: ["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],
    blockUser: ["PUT /orgs/{org}/blocks/{username}"],
    cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
    checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
    checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
    checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
    convertMemberToOutsideCollaborator: ["PUT /orgs/{org}/outside_collaborators/{username}"],
    createInvitation: ["POST /orgs/{org}/invitations"],
    createIssueType: ["POST /orgs/{org}/issue-types"],
    createOrUpdateCustomProperties: ["PATCH /orgs/{org}/properties/schema"],
    createOrUpdateCustomPropertiesValuesForRepos: ["PATCH /orgs/{org}/properties/values"],
    createOrUpdateCustomProperty: ["PUT /orgs/{org}/properties/schema/{custom_property_name}"],
    createWebhook: ["POST /orgs/{org}/hooks"],
    delete: ["DELETE /orgs/{org}"],
    deleteIssueType: ["DELETE /orgs/{org}/issue-types/{issue_type_id}"],
    deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
    enableOrDisableSecurityProductOnAllOrgRepos: [
      "POST /orgs/{org}/{security_product}/{enablement}",
      {},
      {
        deprecated:
          "octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization",
      },
    ],
    get: ["GET /orgs/{org}"],
    getAllCustomProperties: ["GET /orgs/{org}/properties/schema"],
    getCustomProperty: ["GET /orgs/{org}/properties/schema/{custom_property_name}"],
    getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
    getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
    getOrgRole: ["GET /orgs/{org}/organization-roles/{role_id}"],
    getOrgRulesetHistory: ["GET /orgs/{org}/rulesets/{ruleset_id}/history"],
    getOrgRulesetVersion: ["GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"],
    getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
    getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
    getWebhookDelivery: ["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],
    list: ["GET /organizations"],
    listAppInstallations: ["GET /orgs/{org}/installations"],
    listAttestations: ["GET /orgs/{org}/attestations/{subject_digest}"],
    listBlockedUsers: ["GET /orgs/{org}/blocks"],
    listCustomPropertiesValuesForRepos: ["GET /orgs/{org}/properties/values"],
    listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
    listForAuthenticatedUser: ["GET /user/orgs"],
    listForUser: ["GET /users/{username}/orgs"],
    listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
    listIssueTypes: ["GET /orgs/{org}/issue-types"],
    listMembers: ["GET /orgs/{org}/members"],
    listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
    listOrgRoleTeams: ["GET /orgs/{org}/organization-roles/{role_id}/teams"],
    listOrgRoleUsers: ["GET /orgs/{org}/organization-roles/{role_id}/users"],
    listOrgRoles: ["GET /orgs/{org}/organization-roles"],
    listOrganizationFineGrainedPermissions: ["GET /orgs/{org}/organization-fine-grained-permissions"],
    listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
    listPatGrantRepositories: ["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],
    listPatGrantRequestRepositories: ["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],
    listPatGrantRequests: ["GET /orgs/{org}/personal-access-token-requests"],
    listPatGrants: ["GET /orgs/{org}/personal-access-tokens"],
    listPendingInvitations: ["GET /orgs/{org}/invitations"],
    listPublicMembers: ["GET /orgs/{org}/public_members"],
    listSecurityManagerTeams: [
      "GET /orgs/{org}/security-managers",
      {},
      {
        deprecated:
          "octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams",
      },
    ],
    listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
    listWebhooks: ["GET /orgs/{org}/hooks"],
    pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: ["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
    removeCustomProperty: ["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],
    removeMember: ["DELETE /orgs/{org}/members/{username}"],
    removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
    removeOutsideCollaborator: ["DELETE /orgs/{org}/outside_collaborators/{username}"],
    removePublicMembershipForAuthenticatedUser: ["DELETE /orgs/{org}/public_members/{username}"],
    removeSecurityManagerTeam: [
      "DELETE /orgs/{org}/security-managers/teams/{team_slug}",
      {},
      {
        deprecated:
          "octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team",
      },
    ],
    reviewPatGrantRequest: ["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],
    reviewPatGrantRequestsInBulk: ["POST /orgs/{org}/personal-access-token-requests"],
    revokeAllOrgRolesTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],
    revokeAllOrgRolesUser: ["DELETE /orgs/{org}/organization-roles/users/{username}"],
    revokeOrgRoleTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
    revokeOrgRoleUser: ["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],
    setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
    setPublicMembershipForAuthenticatedUser: ["PUT /orgs/{org}/public_members/{username}"],
    unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
    update: ["PATCH /orgs/{org}"],
    updateIssueType: ["PUT /orgs/{org}/issue-types/{issue_type_id}"],
    updateMembershipForAuthenticatedUser: ["PATCH /user/memberships/orgs/{org}"],
    updatePatAccess: ["POST /orgs/{org}/personal-access-tokens/{pat_id}"],
    updatePatAccesses: ["POST /orgs/{org}/personal-access-tokens"],
    updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
    updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"],
  },
  packages: {
    deletePackageForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}"],
    deletePackageForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],
    deletePackageForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}"],
    deletePackageVersionForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
    deletePackageVersionForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
    deletePackageVersionForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
    getAllPackageVersionsForAPackageOwnedByAnOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
      {},
      { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] },
    ],
    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions",
      {},
      { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"] },
    ],
    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions"],
    getAllPackageVersionsForPackageOwnedByOrg: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],
    getAllPackageVersionsForPackageOwnedByUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions"],
    getPackageForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}"],
    getPackageForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}"],
    getPackageForUser: ["GET /users/{username}/packages/{package_type}/{package_name}"],
    getPackageVersionForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
    getPackageVersionForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
    getPackageVersionForUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
    listDockerMigrationConflictingPackagesForAuthenticatedUser: ["GET /user/docker/conflicts"],
    listDockerMigrationConflictingPackagesForOrganization: ["GET /orgs/{org}/docker/conflicts"],
    listDockerMigrationConflictingPackagesForUser: ["GET /users/{username}/docker/conflicts"],
    listPackagesForAuthenticatedUser: ["GET /user/packages"],
    listPackagesForOrganization: ["GET /orgs/{org}/packages"],
    listPackagesForUser: ["GET /users/{username}/packages"],
    restorePackageForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/restore{?token}"],
    restorePackageForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],
    restorePackageForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],
    restorePackageVersionForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
    restorePackageVersionForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
    restorePackageVersionForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
  },
  privateRegistries: {
    createOrgPrivateRegistry: ["POST /orgs/{org}/private-registries"],
    deleteOrgPrivateRegistry: ["DELETE /orgs/{org}/private-registries/{secret_name}"],
    getOrgPrivateRegistry: ["GET /orgs/{org}/private-registries/{secret_name}"],
    getOrgPublicKey: ["GET /orgs/{org}/private-registries/public-key"],
    listOrgPrivateRegistries: ["GET /orgs/{org}/private-registries"],
    updateOrgPrivateRegistry: ["PATCH /orgs/{org}/private-registries/{secret_name}"],
  },
  projects: {
    addCollaborator: [
      "PUT /projects/{project_id}/collaborators/{username}",
      {},
      { deprecated: "octokit.rest.projects.addCollaborator() is deprecated, see https://docs.github.com/rest/projects/collaborators#add-project-collaborator" },
    ],
    createCard: [
      "POST /projects/columns/{column_id}/cards",
      {},
      { deprecated: "octokit.rest.projects.createCard() is deprecated, see https://docs.github.com/rest/projects/cards#create-a-project-card" },
    ],
    createColumn: [
      "POST /projects/{project_id}/columns",
      {},
      { deprecated: "octokit.rest.projects.createColumn() is deprecated, see https://docs.github.com/rest/projects/columns#create-a-project-column" },
    ],
    createForAuthenticatedUser: [
      "POST /user/projects",
      {},
      {
        deprecated:
          "octokit.rest.projects.createForAuthenticatedUser() is deprecated, see https://docs.github.com/rest/projects/projects#create-a-user-project",
      },
    ],
    createForOrg: [
      "POST /orgs/{org}/projects",
      {},
      { deprecated: "octokit.rest.projects.createForOrg() is deprecated, see https://docs.github.com/rest/projects/projects#create-an-organization-project" },
    ],
    createForRepo: [
      "POST /repos/{owner}/{repo}/projects",
      {},
      { deprecated: "octokit.rest.projects.createForRepo() is deprecated, see https://docs.github.com/rest/projects/projects#create-a-repository-project" },
    ],
    delete: [
      "DELETE /projects/{project_id}",
      {},
      { deprecated: "octokit.rest.projects.delete() is deprecated, see https://docs.github.com/rest/projects/projects#delete-a-project" },
    ],
    deleteCard: [
      "DELETE /projects/columns/cards/{card_id}",
      {},
      { deprecated: "octokit.rest.projects.deleteCard() is deprecated, see https://docs.github.com/rest/projects/cards#delete-a-project-card" },
    ],
    deleteColumn: [
      "DELETE /projects/columns/{column_id}",
      {},
      { deprecated: "octokit.rest.projects.deleteColumn() is deprecated, see https://docs.github.com/rest/projects/columns#delete-a-project-column" },
    ],
    get: [
      "GET /projects/{project_id}",
      {},
      { deprecated: "octokit.rest.projects.get() is deprecated, see https://docs.github.com/rest/projects/projects#get-a-project" },
    ],
    getCard: [
      "GET /projects/columns/cards/{card_id}",
      {},
      { deprecated: "octokit.rest.projects.getCard() is deprecated, see https://docs.github.com/rest/projects/cards#get-a-project-card" },
    ],
    getColumn: [
      "GET /projects/columns/{column_id}",
      {},
      { deprecated: "octokit.rest.projects.getColumn() is deprecated, see https://docs.github.com/rest/projects/columns#get-a-project-column" },
    ],
    getPermissionForUser: [
      "GET /projects/{project_id}/collaborators/{username}/permission",
      {},
      {
        deprecated:
          "octokit.rest.projects.getPermissionForUser() is deprecated, see https://docs.github.com/rest/projects/collaborators#get-project-permission-for-a-user",
      },
    ],
    listCards: [
      "GET /projects/columns/{column_id}/cards",
      {},
      { deprecated: "octokit.rest.projects.listCards() is deprecated, see https://docs.github.com/rest/projects/cards#list-project-cards" },
    ],
    listCollaborators: [
      "GET /projects/{project_id}/collaborators",
      {},
      {
        deprecated:
          "octokit.rest.projects.listCollaborators() is deprecated, see https://docs.github.com/rest/projects/collaborators#list-project-collaborators",
      },
    ],
    listColumns: [
      "GET /projects/{project_id}/columns",
      {},
      { deprecated: "octokit.rest.projects.listColumns() is deprecated, see https://docs.github.com/rest/projects/columns#list-project-columns" },
    ],
    listForOrg: [
      "GET /orgs/{org}/projects",
      {},
      { deprecated: "octokit.rest.projects.listForOrg() is deprecated, see https://docs.github.com/rest/projects/projects#list-organization-projects" },
    ],
    listForRepo: [
      "GET /repos/{owner}/{repo}/projects",
      {},
      { deprecated: "octokit.rest.projects.listForRepo() is deprecated, see https://docs.github.com/rest/projects/projects#list-repository-projects" },
    ],
    listForUser: [
      "GET /users/{username}/projects",
      {},
      { deprecated: "octokit.rest.projects.listForUser() is deprecated, see https://docs.github.com/rest/projects/projects#list-user-projects" },
    ],
    moveCard: [
      "POST /projects/columns/cards/{card_id}/moves",
      {},
      { deprecated: "octokit.rest.projects.moveCard() is deprecated, see https://docs.github.com/rest/projects/cards#move-a-project-card" },
    ],
    moveColumn: [
      "POST /projects/columns/{column_id}/moves",
      {},
      { deprecated: "octokit.rest.projects.moveColumn() is deprecated, see https://docs.github.com/rest/projects/columns#move-a-project-column" },
    ],
    removeCollaborator: [
      "DELETE /projects/{project_id}/collaborators/{username}",
      {},
      {
        deprecated:
          "octokit.rest.projects.removeCollaborator() is deprecated, see https://docs.github.com/rest/projects/collaborators#remove-user-as-a-collaborator",
      },
    ],
    update: [
      "PATCH /projects/{project_id}",
      {},
      { deprecated: "octokit.rest.projects.update() is deprecated, see https://docs.github.com/rest/projects/projects#update-a-project" },
    ],
    updateCard: [
      "PATCH /projects/columns/cards/{card_id}",
      {},
      { deprecated: "octokit.rest.projects.updateCard() is deprecated, see https://docs.github.com/rest/projects/cards#update-an-existing-project-card" },
    ],
    updateColumn: [
      "PATCH /projects/columns/{column_id}",
      {},
      { deprecated: "octokit.rest.projects.updateColumn() is deprecated, see https://docs.github.com/rest/projects/columns#update-an-existing-project-column" },
    ],
  },
  pulls: {
    checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    create: ["POST /repos/{owner}/{repo}/pulls"],
    createReplyForReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],
    createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    createReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
    deletePendingReview: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
    deleteReviewComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
    dismissReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],
    get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
    getReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
    getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
    list: ["GET /repos/{owner}/{repo}/pulls"],
    listCommentsForReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],
    listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
    listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
    listRequestedReviewers: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
    listReviewComments: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
    listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
    listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    removeRequestedReviewers: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
    requestReviewers: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
    submitReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],
    update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
    updateBranch: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],
    updateReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
    updateReviewComment: ["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
  },
  rateLimit: { get: ["GET /rate_limit"] },
  reactions: {
    createForCommitComment: ["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
    createForIssue: ["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
    createForIssueComment: ["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
    createForPullRequestReviewComment: ["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
    createForRelease: ["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],
    createForTeamDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
    createForTeamDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
    deleteForCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],
    deleteForIssue: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],
    deleteForIssueComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],
    deleteForPullRequestComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],
    deleteForRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],
    deleteForTeamDiscussion: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],
    deleteForTeamDiscussionComment: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],
    listForCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
    listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
    listForIssueComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
    listForPullRequestReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
    listForRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],
    listForTeamDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
    listForTeamDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
  },
  repos: {
    acceptInvitation: ["PATCH /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }],
    acceptInvitationForAuthenticatedUser: ["PATCH /user/repository_invitations/{invitation_id}"],
    addAppAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
    addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
    addStatusCheckContexts: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
    addTeamAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
    addUserAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
    cancelPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],
    checkAutomatedSecurityFixes: ["GET /repos/{owner}/{repo}/automated-security-fixes"],
    checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
    checkPrivateVulnerabilityReporting: ["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],
    checkVulnerabilityAlerts: ["GET /repos/{owner}/{repo}/vulnerability-alerts"],
    codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
    compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
    compareCommitsWithBasehead: ["GET /repos/{owner}/{repo}/compare/{basehead}"],
    createAttestation: ["POST /repos/{owner}/{repo}/attestations"],
    createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
    createCommitComment: ["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
    createCommitSignatureProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
    createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
    createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
    createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
    createDeploymentBranchPolicy: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
    createDeploymentProtectionRule: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
    createDeploymentStatus: ["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
    createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
    createForAuthenticatedUser: ["POST /user/repos"],
    createFork: ["POST /repos/{owner}/{repo}/forks"],
    createInOrg: ["POST /orgs/{org}/repos"],
    createOrUpdateCustomPropertiesValues: ["PATCH /repos/{owner}/{repo}/properties/values"],
    createOrUpdateEnvironment: ["PUT /repos/{owner}/{repo}/environments/{environment_name}"],
    createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
    createOrgRuleset: ["POST /orgs/{org}/rulesets"],
    createPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments"],
    createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
    createRelease: ["POST /repos/{owner}/{repo}/releases"],
    createRepoRuleset: ["POST /repos/{owner}/{repo}/rulesets"],
    createUsingTemplate: ["POST /repos/{template_owner}/{template_repo}/generate"],
    createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
    declineInvitation: ["DELETE /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }],
    declineInvitationForAuthenticatedUser: ["DELETE /user/repository_invitations/{invitation_id}"],
    delete: ["DELETE /repos/{owner}/{repo}"],
    deleteAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
    deleteAdminBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
    deleteAnEnvironment: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],
    deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    deleteBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],
    deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
    deleteCommitSignatureProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
    deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
    deleteDeployment: ["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],
    deleteDeploymentBranchPolicy: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
    deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
    deleteInvitation: ["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],
    deleteOrgRuleset: ["DELETE /orgs/{org}/rulesets/{ruleset_id}"],
    deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
    deletePullRequestReviewProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
    deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
    deleteReleaseAsset: ["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    deleteRepoRuleset: ["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
    disableAutomatedSecurityFixes: ["DELETE /repos/{owner}/{repo}/automated-security-fixes"],
    disableDeploymentProtectionRule: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
    disablePrivateVulnerabilityReporting: ["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],
    disableVulnerabilityAlerts: ["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],
    downloadArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}", {}, { renamed: ["repos", "downloadZipballArchive"] }],
    downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
    downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
    enableAutomatedSecurityFixes: ["PUT /repos/{owner}/{repo}/automated-security-fixes"],
    enablePrivateVulnerabilityReporting: ["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],
    enableVulnerabilityAlerts: ["PUT /repos/{owner}/{repo}/vulnerability-alerts"],
    generateReleaseNotes: ["POST /repos/{owner}/{repo}/releases/generate-notes"],
    get: ["GET /repos/{owner}/{repo}"],
    getAccessRestrictions: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
    getAdminBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
    getAllDeploymentProtectionRules: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
    getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
    getAllStatusCheckContexts: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],
    getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
    getAppsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],
    getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
    getBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection"],
    getBranchRules: ["GET /repos/{owner}/{repo}/rules/branches/{branch}"],
    getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
    getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
    getCollaboratorPermissionLevel: ["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],
    getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
    getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
    getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
    getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
    getCommitSignatureProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
    getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
    getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
    getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
    getCustomDeploymentProtectionRule: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
    getCustomPropertiesValues: ["GET /repos/{owner}/{repo}/properties/values"],
    getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
    getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
    getDeploymentBranchPolicy: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
    getDeploymentStatus: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],
    getEnvironment: ["GET /repos/{owner}/{repo}/environments/{environment_name}"],
    getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
    getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
    getOrgRuleSuite: ["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],
    getOrgRuleSuites: ["GET /orgs/{org}/rulesets/rule-suites"],
    getOrgRuleset: ["GET /orgs/{org}/rulesets/{ruleset_id}"],
    getOrgRulesets: ["GET /orgs/{org}/rulesets"],
    getPages: ["GET /repos/{owner}/{repo}/pages"],
    getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
    getPagesDeployment: ["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],
    getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
    getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
    getPullRequestReviewProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
    getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
    getReadme: ["GET /repos/{owner}/{repo}/readme"],
    getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
    getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
    getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
    getRepoRuleSuite: ["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],
    getRepoRuleSuites: ["GET /repos/{owner}/{repo}/rulesets/rule-suites"],
    getRepoRuleset: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    getRepoRulesetHistory: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"],
    getRepoRulesetVersion: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"],
    getRepoRulesets: ["GET /repos/{owner}/{repo}/rulesets"],
    getStatusChecksProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
    getTeamsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],
    getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
    getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
    getUsersWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],
    getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
    getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
    getWebhookConfigForRepo: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],
    getWebhookDelivery: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],
    listActivities: ["GET /repos/{owner}/{repo}/activity"],
    listAttestations: ["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],
    listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
    listBranches: ["GET /repos/{owner}/{repo}/branches"],
    listBranchesForHeadCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],
    listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
    listCommentsForCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
    listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
    listCommitStatusesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],
    listCommits: ["GET /repos/{owner}/{repo}/commits"],
    listContributors: ["GET /repos/{owner}/{repo}/contributors"],
    listCustomDeploymentRuleIntegrations: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],
    listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
    listDeploymentBranchPolicies: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
    listDeploymentStatuses: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
    listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
    listForAuthenticatedUser: ["GET /user/repos"],
    listForOrg: ["GET /orgs/{org}/repos"],
    listForUser: ["GET /users/{username}/repos"],
    listForks: ["GET /repos/{owner}/{repo}/forks"],
    listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
    listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
    listLanguages: ["GET /repos/{owner}/{repo}/languages"],
    listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
    listPublic: ["GET /repositories"],
    listPullRequestsAssociatedWithCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],
    listReleaseAssets: ["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],
    listReleases: ["GET /repos/{owner}/{repo}/releases"],
    listTags: ["GET /repos/{owner}/{repo}/tags"],
    listTeams: ["GET /repos/{owner}/{repo}/teams"],
    listWebhookDeliveries: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],
    listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
    merge: ["POST /repos/{owner}/{repo}/merges"],
    mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
    pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
    removeAppAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
    removeCollaborator: ["DELETE /repos/{owner}/{repo}/collaborators/{username}"],
    removeStatusCheckContexts: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
    removeStatusCheckProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
    removeTeamAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
    removeUserAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
    renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
    replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
    requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
    setAdminBranchProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
    setAppAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
    setStatusCheckContexts: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
    setTeamAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
    setUserAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
    testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
    transfer: ["POST /repos/{owner}/{repo}/transfer"],
    update: ["PATCH /repos/{owner}/{repo}"],
    updateBranchProtection: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],
    updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
    updateDeploymentBranchPolicy: ["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
    updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
    updateInvitation: ["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],
    updateOrgRuleset: ["PUT /orgs/{org}/rulesets/{ruleset_id}"],
    updatePullRequestReviewProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
    updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
    updateReleaseAsset: ["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    updateRepoRuleset: ["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    updateStatusCheckPotection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      {},
      { renamed: ["repos", "updateStatusCheckProtection"] },
    ],
    updateStatusCheckProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
    updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
    updateWebhookConfigForRepo: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],
    uploadReleaseAsset: ["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}", { baseUrl: "https://uploads.github.com" }],
  },
  search: {
    code: ["GET /search/code"],
    commits: ["GET /search/commits"],
    issuesAndPullRequests: [
      "GET /search/issues",
      {},
      {
        deprecated: "octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests",
      },
    ],
    labels: ["GET /search/labels"],
    repos: ["GET /search/repositories"],
    topics: ["GET /search/topics"],
    users: ["GET /search/users"],
  },
  secretScanning: {
    createPushProtectionBypass: ["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],
    getAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
    getScanHistory: ["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],
    listAlertsForEnterprise: ["GET /enterprises/{enterprise}/secret-scanning/alerts"],
    listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
    listLocationsForAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],
    updateAlert: ["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
  },
  securityAdvisories: {
    createFork: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],
    createPrivateVulnerabilityReport: ["POST /repos/{owner}/{repo}/security-advisories/reports"],
    createRepositoryAdvisory: ["POST /repos/{owner}/{repo}/security-advisories"],
    createRepositoryAdvisoryCveRequest: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],
    getGlobalAdvisory: ["GET /advisories/{ghsa_id}"],
    getRepositoryAdvisory: ["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
    listGlobalAdvisories: ["GET /advisories"],
    listOrgRepositoryAdvisories: ["GET /orgs/{org}/security-advisories"],
    listRepositoryAdvisories: ["GET /repos/{owner}/{repo}/security-advisories"],
    updateRepositoryAdvisory: ["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
  },
  teams: {
    addOrUpdateMembershipForUserInOrg: ["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],
    addOrUpdateProjectPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",
      {},
      {
        deprecated:
          "octokit.rest.teams.addOrUpdateProjectPermissionsInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions",
      },
    ],
    addOrUpdateProjectPermissionsLegacy: [
      "PUT /teams/{team_id}/projects/{project_id}",
      {},
      {
        deprecated:
          "octokit.rest.teams.addOrUpdateProjectPermissionsLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions-legacy",
      },
    ],
    addOrUpdateRepoPermissionsInOrg: ["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
    checkPermissionsForProjectInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",
      {},
      {
        deprecated:
          "octokit.rest.teams.checkPermissionsForProjectInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project",
      },
    ],
    checkPermissionsForProjectLegacy: [
      "GET /teams/{team_id}/projects/{project_id}",
      {},
      {
        deprecated:
          "octokit.rest.teams.checkPermissionsForProjectLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project-legacy",
      },
    ],
    checkPermissionsForRepoInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
    create: ["POST /orgs/{org}/teams"],
    createDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
    createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
    deleteDiscussionCommentInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
    deleteDiscussionInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
    deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
    getByName: ["GET /orgs/{org}/teams/{team_slug}"],
    getDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
    getDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
    getMembershipForUserInOrg: ["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],
    list: ["GET /orgs/{org}/teams"],
    listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
    listDiscussionCommentsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
    listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
    listForAuthenticatedUser: ["GET /user/teams"],
    listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
    listPendingInvitationsInOrg: ["GET /orgs/{org}/teams/{team_slug}/invitations"],
    listProjectsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/projects",
      {},
      { deprecated: "octokit.rest.teams.listProjectsInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#list-team-projects" },
    ],
    listProjectsLegacy: [
      "GET /teams/{team_id}/projects",
      {},
      { deprecated: "octokit.rest.teams.listProjectsLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#list-team-projects-legacy" },
    ],
    listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
    removeMembershipForUserInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],
    removeProjectInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}",
      {},
      { deprecated: "octokit.rest.teams.removeProjectInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team" },
    ],
    removeProjectLegacy: [
      "DELETE /teams/{team_id}/projects/{project_id}",
      {},
      {
        deprecated: "octokit.rest.teams.removeProjectLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team-legacy",
      },
    ],
    removeRepoInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
    updateDiscussionCommentInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
    updateDiscussionInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
    updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"],
  },
  users: {
    addEmailForAuthenticated: ["POST /user/emails", {}, { renamed: ["users", "addEmailForAuthenticatedUser"] }],
    addEmailForAuthenticatedUser: ["POST /user/emails"],
    addSocialAccountForAuthenticatedUser: ["POST /user/social_accounts"],
    block: ["PUT /user/blocks/{username}"],
    checkBlocked: ["GET /user/blocks/{username}"],
    checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
    checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
    createGpgKeyForAuthenticated: ["POST /user/gpg_keys", {}, { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }],
    createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
    createPublicSshKeyForAuthenticated: ["POST /user/keys", {}, { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }],
    createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
    createSshSigningKeyForAuthenticatedUser: ["POST /user/ssh_signing_keys"],
    deleteEmailForAuthenticated: ["DELETE /user/emails", {}, { renamed: ["users", "deleteEmailForAuthenticatedUser"] }],
    deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
    deleteGpgKeyForAuthenticated: ["DELETE /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }],
    deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
    deletePublicSshKeyForAuthenticated: ["DELETE /user/keys/{key_id}", {}, { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }],
    deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
    deleteSocialAccountForAuthenticatedUser: ["DELETE /user/social_accounts"],
    deleteSshSigningKeyForAuthenticatedUser: ["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],
    follow: ["PUT /user/following/{username}"],
    getAuthenticated: ["GET /user"],
    getById: ["GET /user/{account_id}"],
    getByUsername: ["GET /users/{username}"],
    getContextForUser: ["GET /users/{username}/hovercard"],
    getGpgKeyForAuthenticated: ["GET /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }],
    getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
    getPublicSshKeyForAuthenticated: ["GET /user/keys/{key_id}", {}, { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }],
    getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
    getSshSigningKeyForAuthenticatedUser: ["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],
    list: ["GET /users"],
    listAttestations: ["GET /users/{username}/attestations/{subject_digest}"],
    listBlockedByAuthenticated: ["GET /user/blocks", {}, { renamed: ["users", "listBlockedByAuthenticatedUser"] }],
    listBlockedByAuthenticatedUser: ["GET /user/blocks"],
    listEmailsForAuthenticated: ["GET /user/emails", {}, { renamed: ["users", "listEmailsForAuthenticatedUser"] }],
    listEmailsForAuthenticatedUser: ["GET /user/emails"],
    listFollowedByAuthenticated: ["GET /user/following", {}, { renamed: ["users", "listFollowedByAuthenticatedUser"] }],
    listFollowedByAuthenticatedUser: ["GET /user/following"],
    listFollowersForAuthenticatedUser: ["GET /user/followers"],
    listFollowersForUser: ["GET /users/{username}/followers"],
    listFollowingForUser: ["GET /users/{username}/following"],
    listGpgKeysForAuthenticated: ["GET /user/gpg_keys", {}, { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }],
    listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
    listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
    listPublicEmailsForAuthenticated: ["GET /user/public_emails", {}, { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }],
    listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
    listPublicKeysForUser: ["GET /users/{username}/keys"],
    listPublicSshKeysForAuthenticated: ["GET /user/keys", {}, { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }],
    listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
    listSocialAccountsForAuthenticatedUser: ["GET /user/social_accounts"],
    listSocialAccountsForUser: ["GET /users/{username}/social_accounts"],
    listSshSigningKeysForAuthenticatedUser: ["GET /user/ssh_signing_keys"],
    listSshSigningKeysForUser: ["GET /users/{username}/ssh_signing_keys"],
    setPrimaryEmailVisibilityForAuthenticated: ["PATCH /user/email/visibility", {}, { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] }],
    setPrimaryEmailVisibilityForAuthenticatedUser: ["PATCH /user/email/visibility"],
    unblock: ["DELETE /user/blocks/{username}"],
    unfollow: ["DELETE /user/following/{username}"],
    updateAuthenticated: ["PATCH /user"],
  },
};
var endpoints_default = Endpoints;
const endpointMethodsMap = new Map();
for (const [e, r] of Object.entries(endpoints_default)) {
  for (const [s, o] of Object.entries(r)) {
    const [r, n, i] = o;
    const [a, l] = r.split(/ /);
    const d = Object.assign({ method: a, url: l }, n);
    if (!endpointMethodsMap.has(e)) {
      endpointMethodsMap.set(e, new Map());
    }
    endpointMethodsMap.get(e).set(s, { scope: e, methodName: s, endpointDefaults: d, decorations: i });
  }
}
const handler = {
  has({ scope: e }, r) {
    return endpointMethodsMap.get(e).has(r);
  },
  getOwnPropertyDescriptor(e, r) {
    return { value: this.get(e, r), configurable: true, writable: true, enumerable: true };
  },
  defineProperty(e, r, s) {
    Object.defineProperty(e.cache, r, s);
    return true;
  },
  deleteProperty(e, r) {
    delete e.cache[r];
    return true;
  },
  ownKeys({ scope: e }) {
    return [...endpointMethodsMap.get(e).keys()];
  },
  set(e, r, s) {
    return (e.cache[r] = s);
  },
  get({ octokit: e, scope: r, cache: s }, o) {
    if (s[o]) {
      return s[o];
    }
    const n = endpointMethodsMap.get(r).get(o);
    if (!n) {
      return void 0;
    }
    const { endpointDefaults: i, decorations: a } = n;
    if (a) {
      s[o] = decorate(e, r, o, i, a);
    } else {
      s[o] = e.request.defaults(i);
    }
    return s[o];
  },
};
function endpointsToMethods(e) {
  const r = {};
  for (const s of endpointMethodsMap.keys()) {
    r[s] = new Proxy({ octokit: e, scope: s, cache: {} }, handler);
  }
  return r;
}
function decorate(e, r, s, o, n) {
  const i = e.request.defaults(o);
  function withDecorations(...o) {
    let a = i.endpoint.merge(...o);
    if (n.mapToData) {
      a = Object.assign({}, a, { data: a[n.mapToData], [n.mapToData]: void 0 });
      return i(a);
    }
    if (n.renamed) {
      const [o, i] = n.renamed;
      e.log.warn(`octokit.${r}.${s}() has been renamed to octokit.${o}.${i}()`);
    }
    if (n.deprecated) {
      e.log.warn(n.deprecated);
    }
    if (n.renamedParameters) {
      const a = i.endpoint.merge(...o);
      for (const [o, i] of Object.entries(n.renamedParameters)) {
        if (o in a) {
          e.log.warn(`"${o}" parameter is deprecated for "octokit.${r}.${s}()". Use "${i}" instead`);
          if (!(i in a)) {
            a[i] = a[o];
          }
          delete a[o];
        }
      }
      return i(a);
    }
    return i(...o);
  }
  return Object.assign(withDecorations, i);
}
function restEndpointMethods(e) {
  const r = endpointsToMethods(e);
  return { rest: r };
}
restEndpointMethods.VERSION = dist_src_version_VERSION;
function legacyRestEndpointMethods(e) {
  const r = endpointsToMethods(e);
  return { ...r, rest: r };
}
legacyRestEndpointMethods.VERSION = dist_src_version_VERSION;
var light = __nccwpck_require__(3251);
var plugin_retry_dist_bundle_VERSION = "0.0.0-development";
async function errorRequest(e, r, s, o) {
  if (!s.request || !s.request.request) {
    throw s;
  }
  if (s.status >= 400 && !e.doNotRetry.includes(s.status)) {
    const n = o.request.retries != null ? o.request.retries : e.retries;
    const i = Math.pow((o.request.retryCount || 0) + 1, 2);
    throw r.retry.retryRequest(s, n, i);
  }
  throw s;
}
async function wrapRequest(e, r, s, o) {
  const n = new light();
  n.on("failed", function (r, s) {
    const n = ~~r.request.request.retries;
    const i = ~~r.request.request.retryAfter;
    o.request.retryCount = s.retryCount + 1;
    if (n > s.retryCount) {
      return i * e.retryAfterBaseValue;
    }
  });
  return n.schedule(requestWithGraphqlErrorHandling.bind(null, e, r, s), o);
}
async function requestWithGraphqlErrorHandling(e, r, s, o) {
  const n = await s(s, o);
  if (n.data && n.data.errors && n.data.errors.length > 0 && /Something went wrong while executing your query/.test(n.data.errors[0].message)) {
    const s = new RequestError(n.data.errors[0].message, 500, { request: o, response: n });
    return errorRequest(e, r, s, o);
  }
  return n;
}
function retry(e, r) {
  const s = Object.assign({ enabled: true, retryAfterBaseValue: 1e3, doNotRetry: [400, 401, 403, 404, 410, 422, 451], retries: 3 }, r.retry);
  if (s.enabled) {
    e.hook.error("request", errorRequest.bind(null, s, e));
    e.hook.wrap("request", wrapRequest.bind(null, s, e));
  }
  return {
    retry: {
      retryRequest: (e, r, s) => {
        e.request.request = Object.assign({}, e.request.request, { retries: r, retryAfter: s });
        return e;
      },
    },
  };
}
retry.VERSION = plugin_retry_dist_bundle_VERSION;
var plugin_throttling_dist_bundle_VERSION = "0.0.0-development";
var dist_bundle_noop = () => Promise.resolve();
function dist_bundle_wrapRequest(e, r, s) {
  return e.retryLimiter.schedule(doRequest, e, r, s);
}
async function doRequest(e, r, s) {
  const o = s.method !== "GET" && s.method !== "HEAD";
  const { pathname: n } = new URL(s.url, "http://github.test");
  const i = s.method === "GET" && n.startsWith("/search/");
  const a = n.startsWith("/graphql");
  const l = ~~r.retryCount;
  const d = l > 0 ? { priority: 0, weight: 0 } : {};
  if (e.clustering) {
    d.expiration = 1e3 * 60;
  }
  if (o || a) {
    await e.write.key(e.id).schedule(d, dist_bundle_noop);
  }
  if (o && e.triggersNotification(n)) {
    await e.notifications.key(e.id).schedule(d, dist_bundle_noop);
  }
  if (i) {
    await e.search.key(e.id).schedule(d, dist_bundle_noop);
  }
  const h = e.global.key(e.id).schedule(d, r, s);
  if (a) {
    const e = await h;
    if (e.data.errors != null && e.data.errors.some((e) => e.type === "RATE_LIMITED")) {
      const r = Object.assign(new Error("GraphQL Rate Limit Exceeded"), { response: e, data: e.data });
      throw r;
    }
  }
  return h;
}
var triggers_notification_paths_default = [
  "/orgs/{org}/invitations",
  "/orgs/{org}/invitations/{invitation_id}",
  "/orgs/{org}/teams/{team_slug}/discussions",
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  "/repos/{owner}/{repo}/collaborators/{username}",
  "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
  "/repos/{owner}/{repo}/issues",
  "/repos/{owner}/{repo}/issues/{issue_number}/comments",
  "/repos/{owner}/{repo}/issues/{issue_number}/sub_issue",
  "/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority",
  "/repos/{owner}/{repo}/pulls",
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",
  "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  "/repos/{owner}/{repo}/releases",
  "/teams/{team_id}/discussions",
  "/teams/{team_id}/discussions/{discussion_number}/comments",
];
function routeMatcher(e) {
  const r = e.map((e) =>
    e
      .split("/")
      .map((e) => (e.startsWith("{") ? "(?:.+?)" : e))
      .join("/")
  );
  const s = `^(?:${r.map((e) => `(?:${e})`).join("|")})[^/]*$`;
  return new RegExp(s, "i");
}
var regex = routeMatcher(triggers_notification_paths_default);
var triggersNotification = regex.test.bind(regex);
var groups = {};
var createGroups = function (e, r) {
  groups.global = new e.Group({ id: "octokit-global", maxConcurrent: 10, ...r });
  groups.search = new e.Group({ id: "octokit-search", maxConcurrent: 1, minTime: 2e3, ...r });
  groups.write = new e.Group({ id: "octokit-write", maxConcurrent: 1, minTime: 1e3, ...r });
  groups.notifications = new e.Group({ id: "octokit-notifications", maxConcurrent: 1, minTime: 3e3, ...r });
};
function throttling(e, r) {
  const { enabled: s = true, Bottleneck: o = light, id: n = "no-id", timeout: i = 1e3 * 60 * 2, connection: a } = r.throttle || {};
  if (!s) {
    return {};
  }
  const l = { timeout: i };
  if (typeof a !== "undefined") {
    l.connection = a;
  }
  if (groups.global == null) {
    createGroups(o, l);
  }
  const d = Object.assign(
    {
      clustering: a != null,
      triggersNotification: triggersNotification,
      fallbackSecondaryRateRetryAfter: 60,
      retryAfterBaseValue: 1e3,
      retryLimiter: new o(),
      id: n,
      ...groups,
    },
    r.throttle
  );
  if (typeof d.onSecondaryRateLimit !== "function" || typeof d.onRateLimit !== "function") {
    throw new Error(
      `octokit/plugin-throttling error:\n        You must pass the onSecondaryRateLimit and onRateLimit error handlers.\n        See https://octokit.github.io/rest.js/#throttling\n\n        const octokit = new Octokit({\n          throttle: {\n            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},\n            onRateLimit: (retryAfter, options) => {/* ... */}\n          }\n        })\n    `
    );
  }
  const h = {};
  const p = new o.Events(h);
  h.on("secondary-limit", d.onSecondaryRateLimit);
  h.on("rate-limit", d.onRateLimit);
  h.on("error", (r) => e.log.warn("Error in throttling-plugin limit handler", r));
  d.retryLimiter.on("failed", async function (r, s) {
    const [o, n, i] = s.args;
    const { pathname: a } = new URL(i.url, "http://github.test");
    const l = a.startsWith("/graphql") && r.status !== 401;
    if (!(l || r.status === 403 || r.status === 429)) {
      return;
    }
    const d = ~~n.retryCount;
    n.retryCount = d;
    i.request.retryCount = d;
    const { wantRetry: h, retryAfter: w = 0 } = await (async function () {
      if (/\bsecondary rate\b/i.test(r.message)) {
        const s = Number(r.response.headers["retry-after"]) || o.fallbackSecondaryRateRetryAfter;
        const n = await p.trigger("secondary-limit", s, i, e, d);
        return { wantRetry: n, retryAfter: s };
      }
      if (
        (r.response.headers != null && r.response.headers["x-ratelimit-remaining"] === "0") ||
        (r.response.data?.errors ?? []).some((e) => e.type === "RATE_LIMITED")
      ) {
        const s = new Date(~~r.response.headers["x-ratelimit-reset"] * 1e3).getTime();
        const o = Math.max(Math.ceil((s - Date.now()) / 1e3) + 1, 0);
        const n = await p.trigger("rate-limit", o, i, e, d);
        return { wantRetry: n, retryAfter: o };
      }
      return {};
    })();
    if (h) {
      n.retryCount++;
      return w * o.retryAfterBaseValue;
    }
  });
  e.hook.wrap("request", dist_bundle_wrapRequest.bind(null, d));
  return {};
}
throttling.VERSION = plugin_throttling_dist_bundle_VERSION;
throttling.triggersNotification = triggersNotification;
function Any(e) {
  return CreateType({ [Kind]: "Any" }, e);
}
function array_Array(e, r) {
  return CreateType({ [Kind]: "Array", type: "array", items: e }, r);
}
function AsyncIterator(e, r) {
  return CreateType({ [Kind]: "AsyncIterator", type: "AsyncIterator", items: e }, r);
}
function intersect_Intersect(e, r) {
  if (e.length === 1) return CreateType(e[0], r);
  if (e.length === 0) return Never(r);
  if (e.some((e) => IsTransform(e))) throw new Error("Cannot intersect transform types");
  return IntersectCreate(e, r);
}
function union_Union(e, r) {
  return e.length === 0 ? Never(r) : e.length === 1 ? CreateType(e[0], r) : UnionCreate(e, r);
}
function Ref(...e) {
  const [r, s] = typeof e[0] === "string" ? [e[0], e[1]] : [e[0].$id, e[1]];
  if (typeof r !== "string") throw new error_TypeBoxError("Ref: $ref must be a string");
  return CreateType({ [Kind]: "Ref", $ref: r }, s);
}
function FromComputed(e, r) {
  return computed_Computed("Awaited", [computed_Computed(e, r)]);
}
function awaited_FromRef(e) {
  return computed_Computed("Awaited", [Ref(e)]);
}
function awaited_FromIntersect(e) {
  return intersect_Intersect(awaited_FromRest(e));
}
function awaited_FromUnion(e) {
  return union_Union(awaited_FromRest(e));
}
function awaited_FromPromise(e) {
  return Awaited(e);
}
function awaited_FromRest(e) {
  return e.map((e) => Awaited(e));
}
function Awaited(e, r) {
  return CreateType(
    IsComputed(e)
      ? FromComputed(e.target, e.parameters)
      : IsIntersect(e)
        ? awaited_FromIntersect(e.allOf)
        : IsUnion(e)
          ? awaited_FromUnion(e.anyOf)
          : kind_IsPromise(e)
            ? awaited_FromPromise(e.item)
            : IsRef(e)
              ? awaited_FromRef(e.$ref)
              : e,
    r
  );
}
function bigint_BigInt(e) {
  return CreateType({ [Kind]: "BigInt", type: "bigint" }, e);
}
function boolean_Boolean(e) {
  return CreateType({ [Kind]: "Boolean", type: "boolean" }, e);
}
function RequiredKeys(e) {
  const r = [];
  for (let s in e) {
    if (!IsOptional(e[s])) r.push(s);
  }
  return r;
}
function _Object(e, r) {
  const s = RequiredKeys(e);
  const o = s.length > 0 ? { [Kind]: "Object", type: "object", properties: e, required: s } : { [Kind]: "Object", type: "object", properties: e };
  return CreateType(o, r);
}
var object_Object = _Object;
function CompositeKeys(e) {
  const r = [];
  for (const s of e) r.push(...KeyOfPropertyKeys(s));
  return SetDistinct(r);
}
function FilterNever(e) {
  return e.filter((e) => !IsNever(e));
}
function CompositeProperty(e, r) {
  const s = [];
  for (const o of e) s.push(...IndexFromPropertyKeys(o, [r]));
  return FilterNever(s);
}
function CompositeProperties(e, r) {
  const s = {};
  for (const o of r) {
    s[o] = IntersectEvaluated(CompositeProperty(e, o));
  }
  return s;
}
function Composite(e, r) {
  const s = CompositeKeys(e);
  const o = CompositeProperties(e, s);
  const n = object_Object(o, r);
  return n;
}
function date_Date(e) {
  return CreateType({ [Kind]: "Date", type: "Date" }, e);
}
function function_Function(e, r, s) {
  return CreateType({ [Kind]: "Function", type: "Function", parameters: e, returns: r }, s);
}
function Literal(e, r) {
  return CreateType({ [Kind]: "Literal", const: e, type: typeof e }, r);
}
function Null(e) {
  return CreateType({ [Kind]: "Null", type: "null" }, e);
}
function symbol_Symbol(e) {
  return CreateType({ [Kind]: "Symbol", type: "symbol" }, e);
}
function Tuple(e, r) {
  return CreateType(
    e.length > 0
      ? { [Kind]: "Tuple", type: "array", items: e, additionalItems: false, minItems: e.length, maxItems: e.length }
      : { [Kind]: "Tuple", type: "array", minItems: e.length, maxItems: e.length },
    r
  );
}
function readonly_from_mapped_result_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = Readonly(e[o], r);
  return s;
}
function readonly_from_mapped_result_FromMappedResult(e, r) {
  return readonly_from_mapped_result_FromProperties(e.properties, r);
}
function ReadonlyFromMappedResult(e, r) {
  const s = readonly_from_mapped_result_FromMappedResult(e, r);
  return MappedResult(s);
}
function RemoveReadonly(e) {
  return CreateType(Discard(e, [symbols_ReadonlyKind]));
}
function AddReadonly(e) {
  return CreateType({ ...e, [symbols_ReadonlyKind]: "Readonly" });
}
function ReadonlyWithFlag(e, r) {
  return r === false ? RemoveReadonly(e) : AddReadonly(e);
}
function Readonly(e, r) {
  const s = r ?? true;
  return IsMappedResult(e) ? ReadonlyFromMappedResult(e, s) : ReadonlyWithFlag(e, s);
}
function Undefined(e) {
  return CreateType({ [Kind]: "Undefined", type: "undefined" }, e);
}
function uint8array_Uint8Array(e) {
  return CreateType({ [Kind]: "Uint8Array", type: "Uint8Array" }, e);
}
function Unknown(e) {
  return CreateType({ [Kind]: "Unknown" }, e);
}
function const_FromArray(e) {
  return e.map((e) => const_FromValue(e, false));
}
function const_FromProperties(e) {
  const r = {};
  for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = Readonly(const_FromValue(e[s], false));
  return r;
}
function ConditionalReadonly(e, r) {
  return r === true ? e : Readonly(e);
}
function const_FromValue(e, r) {
  return value_IsAsyncIterator(e)
    ? ConditionalReadonly(Any(), r)
    : value_IsIterator(e)
      ? ConditionalReadonly(Any(), r)
      : value_IsArray(e)
        ? Readonly(Tuple(const_FromArray(e)))
        : value_IsUint8Array(e)
          ? uint8array_Uint8Array()
          : value_IsDate(e)
            ? date_Date()
            : value_IsObject(e)
              ? ConditionalReadonly(object_Object(const_FromProperties(e)), r)
              : value_IsFunction(e)
                ? ConditionalReadonly(function_Function([], Unknown()), r)
                : value_IsUndefined(e)
                  ? Undefined()
                  : value_IsNull(e)
                    ? Null()
                    : value_IsSymbol(e)
                      ? symbol_Symbol()
                      : value_IsBigInt(e)
                        ? bigint_BigInt()
                        : value_IsNumber(e)
                          ? Literal(e)
                          : value_IsBoolean(e)
                            ? Literal(e)
                            : value_IsString(e)
                              ? Literal(e)
                              : object_Object({});
}
function Const(e, r) {
  return CreateType(const_FromValue(e, true), r);
}
function Constructor(e, r, s) {
  return CreateType({ [Kind]: "Constructor", type: "Constructor", parameters: e, returns: r }, s);
}
function ConstructorParameters(e, r) {
  return Tuple(e.parameters, r);
}
function Enum(e, r) {
  if (value_IsUndefined(e)) throw new Error("Enum undefined or empty");
  const s = globalThis.Object.getOwnPropertyNames(e)
    .filter((e) => isNaN(e))
    .map((r) => e[r]);
  const o = [...new Set(s)];
  const n = o.map((e) => Literal(e));
  return union_Union(n, { ...r, [symbols_Hint]: "Enum" });
}
function number_Number(e) {
  return CreateType({ [Kind]: "Number", type: "number" }, e);
}
function string_String(e) {
  return CreateType({ [Kind]: "String", type: "string" }, e);
}
function TemplateLiteralToUnion(e) {
  const r = TemplateLiteralGenerate(e);
  const s = r.map((e) => Literal(e));
  return UnionEvaluated(s);
}
const PatternBoolean = "(true|false)";
const PatternNumber = "(0|[1-9][0-9]*)";
const PatternString = "(.*)";
const PatternNever = "(?!.*)";
const PatternBooleanExact = null && `^${PatternBoolean}$`;
const PatternNumberExact = `^${PatternNumber}$`;
const PatternStringExact = `^${PatternString}$`;
const PatternNeverExact = `^${PatternNever}$`;
class TypeGuardUnknownTypeError extends (null && TypeBoxError) {}
const KnownTypes = [
  "Any",
  "Array",
  "AsyncIterator",
  "BigInt",
  "Boolean",
  "Computed",
  "Constructor",
  "Date",
  "Enum",
  "Function",
  "Integer",
  "Intersect",
  "Iterator",
  "Literal",
  "MappedKey",
  "MappedResult",
  "Not",
  "Null",
  "Number",
  "Object",
  "Promise",
  "Record",
  "Ref",
  "RegExp",
  "String",
  "Symbol",
  "TemplateLiteral",
  "This",
  "Tuple",
  "Undefined",
  "Union",
  "Uint8Array",
  "Unknown",
  "Void",
];
function IsPattern(e) {
  try {
    new RegExp(e);
    return true;
  } catch {
    return false;
  }
}
function IsControlCharacterFree(e) {
  if (!value_IsString(e)) return false;
  for (let r = 0; r < e.length; r++) {
    const s = e.charCodeAt(r);
    if ((s >= 7 && s <= 13) || s === 27 || s === 127) {
      return false;
    }
  }
  return true;
}
function IsAdditionalProperties(e) {
  return IsOptionalBoolean(e) || type_IsSchema(e);
}
function IsOptionalBigInt(e) {
  return value_IsUndefined(e) || value_IsBigInt(e);
}
function IsOptionalNumber(e) {
  return value_IsUndefined(e) || value_IsNumber(e);
}
function IsOptionalBoolean(e) {
  return value_IsUndefined(e) || value_IsBoolean(e);
}
function IsOptionalString(e) {
  return value_IsUndefined(e) || value_IsString(e);
}
function IsOptionalPattern(e) {
  return value_IsUndefined(e) || (value_IsString(e) && IsControlCharacterFree(e) && IsPattern(e));
}
function IsOptionalFormat(e) {
  return value_IsUndefined(e) || (value_IsString(e) && IsControlCharacterFree(e));
}
function IsOptionalSchema(e) {
  return value_IsUndefined(e) || type_IsSchema(e);
}
function type_IsReadonly(e) {
  return ValueGuard.IsObject(e) && e[ReadonlyKind] === "Readonly";
}
function type_IsOptional(e) {
  return value_IsObject(e) && e[OptionalKind] === "Optional";
}
function type_IsAny(e) {
  return type_IsKindOf(e, "Any") && IsOptionalString(e.$id);
}
function type_IsArray(e) {
  return (
    type_IsKindOf(e, "Array") &&
    e.type === "array" &&
    IsOptionalString(e.$id) &&
    type_IsSchema(e.items) &&
    IsOptionalNumber(e.minItems) &&
    IsOptionalNumber(e.maxItems) &&
    IsOptionalBoolean(e.uniqueItems) &&
    IsOptionalSchema(e.contains) &&
    IsOptionalNumber(e.minContains) &&
    IsOptionalNumber(e.maxContains)
  );
}
function type_IsAsyncIterator(e) {
  return type_IsKindOf(e, "AsyncIterator") && e.type === "AsyncIterator" && IsOptionalString(e.$id) && type_IsSchema(e.items);
}
function type_IsBigInt(e) {
  return (
    type_IsKindOf(e, "BigInt") &&
    e.type === "bigint" &&
    IsOptionalString(e.$id) &&
    IsOptionalBigInt(e.exclusiveMaximum) &&
    IsOptionalBigInt(e.exclusiveMinimum) &&
    IsOptionalBigInt(e.maximum) &&
    IsOptionalBigInt(e.minimum) &&
    IsOptionalBigInt(e.multipleOf)
  );
}
function type_IsBoolean(e) {
  return type_IsKindOf(e, "Boolean") && e.type === "boolean" && IsOptionalString(e.$id);
}
function type_IsComputed(e) {
  return type_IsKindOf(e, "Computed") && value_IsString(e.target) && value_IsArray(e.parameters) && e.parameters.every((e) => type_IsSchema(e));
}
function type_IsConstructor(e) {
  return (
    type_IsKindOf(e, "Constructor") &&
    e.type === "Constructor" &&
    IsOptionalString(e.$id) &&
    value_IsArray(e.parameters) &&
    e.parameters.every((e) => type_IsSchema(e)) &&
    type_IsSchema(e.returns)
  );
}
function type_IsDate(e) {
  return (
    type_IsKindOf(e, "Date") &&
    e.type === "Date" &&
    IsOptionalString(e.$id) &&
    IsOptionalNumber(e.exclusiveMaximumTimestamp) &&
    IsOptionalNumber(e.exclusiveMinimumTimestamp) &&
    IsOptionalNumber(e.maximumTimestamp) &&
    IsOptionalNumber(e.minimumTimestamp) &&
    IsOptionalNumber(e.multipleOfTimestamp)
  );
}
function type_IsFunction(e) {
  return (
    type_IsKindOf(e, "Function") &&
    e.type === "Function" &&
    IsOptionalString(e.$id) &&
    value_IsArray(e.parameters) &&
    e.parameters.every((e) => type_IsSchema(e)) &&
    type_IsSchema(e.returns)
  );
}
function type_IsImport(e) {
  return (
    type_IsKindOf(e, "Import") &&
    ValueGuard.HasPropertyKey(e, "$defs") &&
    ValueGuard.IsObject(e.$defs) &&
    type_IsProperties(e.$defs) &&
    ValueGuard.HasPropertyKey(e, "$ref") &&
    ValueGuard.IsString(e.$ref) &&
    e.$ref in e.$defs
  );
}
function type_IsInteger(e) {
  return (
    type_IsKindOf(e, "Integer") &&
    e.type === "integer" &&
    IsOptionalString(e.$id) &&
    IsOptionalNumber(e.exclusiveMaximum) &&
    IsOptionalNumber(e.exclusiveMinimum) &&
    IsOptionalNumber(e.maximum) &&
    IsOptionalNumber(e.minimum) &&
    IsOptionalNumber(e.multipleOf)
  );
}
function type_IsProperties(e) {
  return value_IsObject(e) && Object.entries(e).every(([e, r]) => IsControlCharacterFree(e) && type_IsSchema(r));
}
function type_IsIntersect(e) {
  return (
    type_IsKindOf(e, "Intersect") &&
    (value_IsString(e.type) && e.type !== "object" ? false : true) &&
    value_IsArray(e.allOf) &&
    e.allOf.every((e) => type_IsSchema(e) && !type_IsTransform(e)) &&
    IsOptionalString(e.type) &&
    (IsOptionalBoolean(e.unevaluatedProperties) || IsOptionalSchema(e.unevaluatedProperties)) &&
    IsOptionalString(e.$id)
  );
}
function type_IsIterator(e) {
  return type_IsKindOf(e, "Iterator") && e.type === "Iterator" && IsOptionalString(e.$id) && type_IsSchema(e.items);
}
function type_IsKindOf(e, r) {
  return value_IsObject(e) && Kind in e && e[Kind] === r;
}
function type_IsLiteralString(e) {
  return type_IsLiteral(e) && value_IsString(e.const);
}
function type_IsLiteralNumber(e) {
  return type_IsLiteral(e) && value_IsNumber(e.const);
}
function type_IsLiteralBoolean(e) {
  return type_IsLiteral(e) && value_IsBoolean(e.const);
}
function type_IsLiteral(e) {
  return type_IsKindOf(e, "Literal") && IsOptionalString(e.$id) && type_IsLiteralValue(e.const);
}
function type_IsLiteralValue(e) {
  return value_IsBoolean(e) || value_IsNumber(e) || value_IsString(e);
}
function type_IsMappedKey(e) {
  return type_IsKindOf(e, "MappedKey") && value_IsArray(e.keys) && e.keys.every((e) => value_IsNumber(e) || value_IsString(e));
}
function type_IsMappedResult(e) {
  return type_IsKindOf(e, "MappedResult") && type_IsProperties(e.properties);
}
function type_IsNever(e) {
  return type_IsKindOf(e, "Never") && value_IsObject(e.not) && Object.getOwnPropertyNames(e.not).length === 0;
}
function type_IsNot(e) {
  return type_IsKindOf(e, "Not") && type_IsSchema(e.not);
}
function type_IsNull(e) {
  return type_IsKindOf(e, "Null") && e.type === "null" && IsOptionalString(e.$id);
}
function type_IsNumber(e) {
  return (
    type_IsKindOf(e, "Number") &&
    e.type === "number" &&
    IsOptionalString(e.$id) &&
    IsOptionalNumber(e.exclusiveMaximum) &&
    IsOptionalNumber(e.exclusiveMinimum) &&
    IsOptionalNumber(e.maximum) &&
    IsOptionalNumber(e.minimum) &&
    IsOptionalNumber(e.multipleOf)
  );
}
function type_IsObject(e) {
  return (
    type_IsKindOf(e, "Object") &&
    e.type === "object" &&
    IsOptionalString(e.$id) &&
    type_IsProperties(e.properties) &&
    IsAdditionalProperties(e.additionalProperties) &&
    IsOptionalNumber(e.minProperties) &&
    IsOptionalNumber(e.maxProperties)
  );
}
function type_IsPromise(e) {
  return type_IsKindOf(e, "Promise") && e.type === "Promise" && IsOptionalString(e.$id) && type_IsSchema(e.item);
}
function type_IsRecord(e) {
  return (
    type_IsKindOf(e, "Record") &&
    e.type === "object" &&
    IsOptionalString(e.$id) &&
    IsAdditionalProperties(e.additionalProperties) &&
    value_IsObject(e.patternProperties) &&
    ((e) => {
      const r = Object.getOwnPropertyNames(e.patternProperties);
      return r.length === 1 && IsPattern(r[0]) && value_IsObject(e.patternProperties) && type_IsSchema(e.patternProperties[r[0]]);
    })(e)
  );
}
function type_IsRecursive(e) {
  return ValueGuard.IsObject(e) && Hint in e && e[Hint] === "Recursive";
}
function type_IsRef(e) {
  return type_IsKindOf(e, "Ref") && IsOptionalString(e.$id) && value_IsString(e.$ref);
}
function type_IsRegExp(e) {
  return (
    type_IsKindOf(e, "RegExp") &&
    IsOptionalString(e.$id) &&
    value_IsString(e.source) &&
    value_IsString(e.flags) &&
    IsOptionalNumber(e.maxLength) &&
    IsOptionalNumber(e.minLength)
  );
}
function type_IsString(e) {
  return (
    type_IsKindOf(e, "String") &&
    e.type === "string" &&
    IsOptionalString(e.$id) &&
    IsOptionalNumber(e.minLength) &&
    IsOptionalNumber(e.maxLength) &&
    IsOptionalPattern(e.pattern) &&
    IsOptionalFormat(e.format)
  );
}
function type_IsSymbol(e) {
  return type_IsKindOf(e, "Symbol") && e.type === "symbol" && IsOptionalString(e.$id);
}
function type_IsTemplateLiteral(e) {
  return (
    type_IsKindOf(e, "TemplateLiteral") && e.type === "string" && value_IsString(e.pattern) && e.pattern[0] === "^" && e.pattern[e.pattern.length - 1] === "$"
  );
}
function type_IsThis(e) {
  return type_IsKindOf(e, "This") && IsOptionalString(e.$id) && value_IsString(e.$ref);
}
function type_IsTransform(e) {
  return value_IsObject(e) && TransformKind in e;
}
function type_IsTuple(e) {
  return (
    type_IsKindOf(e, "Tuple") &&
    e.type === "array" &&
    IsOptionalString(e.$id) &&
    value_IsNumber(e.minItems) &&
    value_IsNumber(e.maxItems) &&
    e.minItems === e.maxItems &&
    ((value_IsUndefined(e.items) && value_IsUndefined(e.additionalItems) && e.minItems === 0) ||
      (value_IsArray(e.items) && e.items.every((e) => type_IsSchema(e))))
  );
}
function type_IsUndefined(e) {
  return type_IsKindOf(e, "Undefined") && e.type === "undefined" && IsOptionalString(e.$id);
}
function IsUnionLiteral(e) {
  return type_IsUnion(e) && e.anyOf.every((e) => type_IsLiteralString(e) || type_IsLiteralNumber(e));
}
function type_IsUnion(e) {
  return type_IsKindOf(e, "Union") && IsOptionalString(e.$id) && value_IsObject(e) && value_IsArray(e.anyOf) && e.anyOf.every((e) => type_IsSchema(e));
}
function type_IsUint8Array(e) {
  return (
    type_IsKindOf(e, "Uint8Array") &&
    e.type === "Uint8Array" &&
    IsOptionalString(e.$id) &&
    IsOptionalNumber(e.minByteLength) &&
    IsOptionalNumber(e.maxByteLength)
  );
}
function type_IsUnknown(e) {
  return type_IsKindOf(e, "Unknown") && IsOptionalString(e.$id);
}
function type_IsUnsafe(e) {
  return type_IsKindOf(e, "Unsafe");
}
function type_IsVoid(e) {
  return type_IsKindOf(e, "Void") && e.type === "void" && IsOptionalString(e.$id);
}
function type_IsKind(e) {
  return value_IsObject(e) && Kind in e && value_IsString(e[Kind]) && !KnownTypes.includes(e[Kind]);
}
function type_IsSchema(e) {
  return (
    value_IsObject(e) &&
    (type_IsAny(e) ||
      type_IsArray(e) ||
      type_IsBoolean(e) ||
      type_IsBigInt(e) ||
      type_IsAsyncIterator(e) ||
      type_IsComputed(e) ||
      type_IsConstructor(e) ||
      type_IsDate(e) ||
      type_IsFunction(e) ||
      type_IsInteger(e) ||
      type_IsIntersect(e) ||
      type_IsIterator(e) ||
      type_IsLiteral(e) ||
      type_IsMappedKey(e) ||
      type_IsMappedResult(e) ||
      type_IsNever(e) ||
      type_IsNot(e) ||
      type_IsNull(e) ||
      type_IsNumber(e) ||
      type_IsObject(e) ||
      type_IsPromise(e) ||
      type_IsRecord(e) ||
      type_IsRef(e) ||
      type_IsRegExp(e) ||
      type_IsString(e) ||
      type_IsSymbol(e) ||
      type_IsTemplateLiteral(e) ||
      type_IsThis(e) ||
      type_IsTuple(e) ||
      type_IsUndefined(e) ||
      type_IsUnion(e) ||
      type_IsUint8Array(e) ||
      type_IsUnknown(e) ||
      type_IsUnsafe(e) ||
      type_IsVoid(e) ||
      type_IsKind(e))
  );
}
class ExtendsResolverError extends error_TypeBoxError {}
var ExtendsResult;
(function (e) {
  e[(e["Union"] = 0)] = "Union";
  e[(e["True"] = 1)] = "True";
  e[(e["False"] = 2)] = "False";
})(ExtendsResult || (ExtendsResult = {}));
function IntoBooleanResult(e) {
  return e === ExtendsResult.False ? e : ExtendsResult.True;
}
function Throw(e) {
  throw new ExtendsResolverError(e);
}
function IsStructuralRight(e) {
  return type_IsNever(e) || type_IsIntersect(e) || type_IsUnion(e) || type_IsUnknown(e) || type_IsAny(e);
}
function StructuralRight(e, r) {
  return type_IsNever(r)
    ? FromNeverRight(e, r)
    : type_IsIntersect(r)
      ? FromIntersectRight(e, r)
      : type_IsUnion(r)
        ? FromUnionRight(e, r)
        : type_IsUnknown(r)
          ? FromUnknownRight(e, r)
          : type_IsAny(r)
            ? FromAnyRight(e, r)
            : Throw("StructuralRight");
}
function FromAnyRight(e, r) {
  return ExtendsResult.True;
}
function extends_check_FromAny(e, r) {
  return type_IsIntersect(r)
    ? FromIntersectRight(e, r)
    : type_IsUnion(r) && r.anyOf.some((e) => type_IsAny(e) || type_IsUnknown(e))
      ? ExtendsResult.True
      : type_IsUnion(r)
        ? ExtendsResult.Union
        : type_IsUnknown(r)
          ? ExtendsResult.True
          : type_IsAny(r)
            ? ExtendsResult.True
            : ExtendsResult.Union;
}
function FromArrayRight(e, r) {
  return type_IsUnknown(e) ? ExtendsResult.False : type_IsAny(e) ? ExtendsResult.Union : type_IsNever(e) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromArray(e, r) {
  return type_IsObject(r) && IsObjectArrayLike(r)
    ? ExtendsResult.True
    : IsStructuralRight(r)
      ? StructuralRight(e, r)
      : !type_IsArray(r)
        ? ExtendsResult.False
        : IntoBooleanResult(extends_check_Visit(e.items, r.items));
}
function extends_check_FromAsyncIterator(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : !type_IsAsyncIterator(r)
      ? ExtendsResult.False
      : IntoBooleanResult(extends_check_Visit(e.items, r.items));
}
function extends_check_FromBigInt(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsBigInt(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function FromBooleanRight(e, r) {
  return type_IsLiteralBoolean(e) ? ExtendsResult.True : type_IsBoolean(e) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromBoolean(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsBoolean(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function extends_check_FromConstructor(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : !type_IsConstructor(r)
        ? ExtendsResult.False
        : e.parameters.length > r.parameters.length
          ? ExtendsResult.False
          : !e.parameters.every((e, s) => IntoBooleanResult(extends_check_Visit(r.parameters[s], e)) === ExtendsResult.True)
            ? ExtendsResult.False
            : IntoBooleanResult(extends_check_Visit(e.returns, r.returns));
}
function extends_check_FromDate(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsDate(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function extends_check_FromFunction(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : !type_IsFunction(r)
        ? ExtendsResult.False
        : e.parameters.length > r.parameters.length
          ? ExtendsResult.False
          : !e.parameters.every((e, s) => IntoBooleanResult(extends_check_Visit(r.parameters[s], e)) === ExtendsResult.True)
            ? ExtendsResult.False
            : IntoBooleanResult(extends_check_Visit(e.returns, r.returns));
}
function FromIntegerRight(e, r) {
  return type_IsLiteral(e) && value_IsNumber(e.const) ? ExtendsResult.True : type_IsNumber(e) || type_IsInteger(e) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromInteger(e, r) {
  return type_IsInteger(r) || type_IsNumber(r)
    ? ExtendsResult.True
    : IsStructuralRight(r)
      ? StructuralRight(e, r)
      : type_IsObject(r)
        ? FromObjectRight(e, r)
        : type_IsRecord(r)
          ? FromRecordRight(e, r)
          : ExtendsResult.False;
}
function FromIntersectRight(e, r) {
  return r.allOf.every((r) => extends_check_Visit(e, r) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromIntersect(e, r) {
  return e.allOf.some((e) => extends_check_Visit(e, r) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromIterator(e, r) {
  return IsStructuralRight(r) ? StructuralRight(e, r) : !type_IsIterator(r) ? ExtendsResult.False : IntoBooleanResult(extends_check_Visit(e.items, r.items));
}
function extends_check_FromLiteral(e, r) {
  return type_IsLiteral(r) && r.const === e.const
    ? ExtendsResult.True
    : IsStructuralRight(r)
      ? StructuralRight(e, r)
      : type_IsObject(r)
        ? FromObjectRight(e, r)
        : type_IsRecord(r)
          ? FromRecordRight(e, r)
          : type_IsString(r)
            ? FromStringRight(e, r)
            : type_IsNumber(r)
              ? FromNumberRight(e, r)
              : type_IsInteger(r)
                ? FromIntegerRight(e, r)
                : type_IsBoolean(r)
                  ? FromBooleanRight(e, r)
                  : ExtendsResult.False;
}
function FromNeverRight(e, r) {
  return ExtendsResult.False;
}
function extends_check_FromNever(e, r) {
  return ExtendsResult.True;
}
function UnwrapTNot(e) {
  let [r, s] = [e, 0];
  while (true) {
    if (!type_IsNot(r)) break;
    r = r.not;
    s += 1;
  }
  return s % 2 === 0 ? r : Unknown();
}
function extends_check_FromNot(e, r) {
  return type_IsNot(e) ? extends_check_Visit(UnwrapTNot(e), r) : type_IsNot(r) ? extends_check_Visit(e, UnwrapTNot(r)) : Throw("Invalid fallthrough for Not");
}
function extends_check_FromNull(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsNull(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function FromNumberRight(e, r) {
  return type_IsLiteralNumber(e) ? ExtendsResult.True : type_IsNumber(e) || type_IsInteger(e) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromNumber(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsInteger(r) || type_IsNumber(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function IsObjectPropertyCount(e, r) {
  return Object.getOwnPropertyNames(e.properties).length === r;
}
function IsObjectStringLike(e) {
  return IsObjectArrayLike(e);
}
function IsObjectSymbolLike(e) {
  return (
    IsObjectPropertyCount(e, 0) ||
    (IsObjectPropertyCount(e, 1) &&
      "description" in e.properties &&
      type_IsUnion(e.properties.description) &&
      e.properties.description.anyOf.length === 2 &&
      ((type_IsString(e.properties.description.anyOf[0]) && type_IsUndefined(e.properties.description.anyOf[1])) ||
        (type_IsString(e.properties.description.anyOf[1]) && type_IsUndefined(e.properties.description.anyOf[0]))))
  );
}
function IsObjectNumberLike(e) {
  return IsObjectPropertyCount(e, 0);
}
function IsObjectBooleanLike(e) {
  return IsObjectPropertyCount(e, 0);
}
function IsObjectBigIntLike(e) {
  return IsObjectPropertyCount(e, 0);
}
function IsObjectDateLike(e) {
  return IsObjectPropertyCount(e, 0);
}
function IsObjectUint8ArrayLike(e) {
  return IsObjectArrayLike(e);
}
function IsObjectFunctionLike(e) {
  const r = number_Number();
  return (
    IsObjectPropertyCount(e, 0) ||
    (IsObjectPropertyCount(e, 1) && "length" in e.properties && IntoBooleanResult(extends_check_Visit(e.properties["length"], r)) === ExtendsResult.True)
  );
}
function IsObjectConstructorLike(e) {
  return IsObjectPropertyCount(e, 0);
}
function IsObjectArrayLike(e) {
  const r = number_Number();
  return (
    IsObjectPropertyCount(e, 0) ||
    (IsObjectPropertyCount(e, 1) && "length" in e.properties && IntoBooleanResult(extends_check_Visit(e.properties["length"], r)) === ExtendsResult.True)
  );
}
function IsObjectPromiseLike(e) {
  const r = function_Function([Any()], Any());
  return (
    IsObjectPropertyCount(e, 0) ||
    (IsObjectPropertyCount(e, 1) && "then" in e.properties && IntoBooleanResult(extends_check_Visit(e.properties["then"], r)) === ExtendsResult.True)
  );
}
function Property(e, r) {
  return extends_check_Visit(e, r) === ExtendsResult.False
    ? ExtendsResult.False
    : type_IsOptional(e) && !type_IsOptional(r)
      ? ExtendsResult.False
      : ExtendsResult.True;
}
function FromObjectRight(e, r) {
  return type_IsUnknown(e)
    ? ExtendsResult.False
    : type_IsAny(e)
      ? ExtendsResult.Union
      : type_IsNever(e) ||
          (type_IsLiteralString(e) && IsObjectStringLike(r)) ||
          (type_IsLiteralNumber(e) && IsObjectNumberLike(r)) ||
          (type_IsLiteralBoolean(e) && IsObjectBooleanLike(r)) ||
          (type_IsSymbol(e) && IsObjectSymbolLike(r)) ||
          (type_IsBigInt(e) && IsObjectBigIntLike(r)) ||
          (type_IsString(e) && IsObjectStringLike(r)) ||
          (type_IsSymbol(e) && IsObjectSymbolLike(r)) ||
          (type_IsNumber(e) && IsObjectNumberLike(r)) ||
          (type_IsInteger(e) && IsObjectNumberLike(r)) ||
          (type_IsBoolean(e) && IsObjectBooleanLike(r)) ||
          (type_IsUint8Array(e) && IsObjectUint8ArrayLike(r)) ||
          (type_IsDate(e) && IsObjectDateLike(r)) ||
          (type_IsConstructor(e) && IsObjectConstructorLike(r)) ||
          (type_IsFunction(e) && IsObjectFunctionLike(r))
        ? ExtendsResult.True
        : type_IsRecord(e) && type_IsString(RecordKey(e))
          ? (() => (r[symbols_Hint] === "Record" ? ExtendsResult.True : ExtendsResult.False))()
          : type_IsRecord(e) && type_IsNumber(RecordKey(e))
            ? (() => (IsObjectPropertyCount(r, 0) ? ExtendsResult.True : ExtendsResult.False))()
            : ExtendsResult.False;
}
function extends_check_FromObject(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsRecord(r)
      ? FromRecordRight(e, r)
      : !type_IsObject(r)
        ? ExtendsResult.False
        : (() => {
            for (const s of Object.getOwnPropertyNames(r.properties)) {
              if (!(s in e.properties) && !type_IsOptional(r.properties[s])) {
                return ExtendsResult.False;
              }
              if (type_IsOptional(r.properties[s])) {
                return ExtendsResult.True;
              }
              if (Property(e.properties[s], r.properties[s]) === ExtendsResult.False) {
                return ExtendsResult.False;
              }
            }
            return ExtendsResult.True;
          })();
}
function extends_check_FromPromise(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r) && IsObjectPromiseLike(r)
      ? ExtendsResult.True
      : !type_IsPromise(r)
        ? ExtendsResult.False
        : IntoBooleanResult(extends_check_Visit(e.item, r.item));
}
function RecordKey(e) {
  return PatternNumberExact in e.patternProperties
    ? number_Number()
    : PatternStringExact in e.patternProperties
      ? string_String()
      : Throw("Unknown record key pattern");
}
function RecordValue(e) {
  return PatternNumberExact in e.patternProperties
    ? e.patternProperties[PatternNumberExact]
    : PatternStringExact in e.patternProperties
      ? e.patternProperties[PatternStringExact]
      : Throw("Unable to get record value schema");
}
function FromRecordRight(e, r) {
  const [s, o] = [RecordKey(r), RecordValue(r)];
  return type_IsLiteralString(e) && type_IsNumber(s) && IntoBooleanResult(extends_check_Visit(e, o)) === ExtendsResult.True
    ? ExtendsResult.True
    : type_IsUint8Array(e) && type_IsNumber(s)
      ? extends_check_Visit(e, o)
      : type_IsString(e) && type_IsNumber(s)
        ? extends_check_Visit(e, o)
        : type_IsArray(e) && type_IsNumber(s)
          ? extends_check_Visit(e, o)
          : type_IsObject(e)
            ? (() => {
                for (const r of Object.getOwnPropertyNames(e.properties)) {
                  if (Property(o, e.properties[r]) === ExtendsResult.False) {
                    return ExtendsResult.False;
                  }
                }
                return ExtendsResult.True;
              })()
            : ExtendsResult.False;
}
function extends_check_FromRecord(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : !type_IsRecord(r)
        ? ExtendsResult.False
        : extends_check_Visit(RecordValue(e), RecordValue(r));
}
function extends_check_FromRegExp(e, r) {
  const s = type_IsRegExp(e) ? string_String() : e;
  const o = type_IsRegExp(r) ? string_String() : r;
  return extends_check_Visit(s, o);
}
function FromStringRight(e, r) {
  return type_IsLiteral(e) && value_IsString(e.const) ? ExtendsResult.True : type_IsString(e) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromString(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsString(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function extends_check_FromSymbol(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsSymbol(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function extends_check_FromTemplateLiteral(e, r) {
  return type_IsTemplateLiteral(e)
    ? extends_check_Visit(TemplateLiteralToUnion(e), r)
    : type_IsTemplateLiteral(r)
      ? extends_check_Visit(e, TemplateLiteralToUnion(r))
      : Throw("Invalid fallthrough for TemplateLiteral");
}
function IsArrayOfTuple(e, r) {
  return type_IsArray(r) && e.items !== undefined && e.items.every((e) => extends_check_Visit(e, r.items) === ExtendsResult.True);
}
function FromTupleRight(e, r) {
  return type_IsNever(e) ? ExtendsResult.True : type_IsUnknown(e) ? ExtendsResult.False : type_IsAny(e) ? ExtendsResult.Union : ExtendsResult.False;
}
function extends_check_FromTuple(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r) && IsObjectArrayLike(r)
      ? ExtendsResult.True
      : type_IsArray(r) && IsArrayOfTuple(e, r)
        ? ExtendsResult.True
        : !type_IsTuple(r)
          ? ExtendsResult.False
          : (value_IsUndefined(e.items) && !value_IsUndefined(r.items)) || (!value_IsUndefined(e.items) && value_IsUndefined(r.items))
            ? ExtendsResult.False
            : value_IsUndefined(e.items) && !value_IsUndefined(r.items)
              ? ExtendsResult.True
              : e.items.every((e, s) => extends_check_Visit(e, r.items[s]) === ExtendsResult.True)
                ? ExtendsResult.True
                : ExtendsResult.False;
}
function extends_check_FromUint8Array(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsUint8Array(r)
          ? ExtendsResult.True
          : ExtendsResult.False;
}
function extends_check_FromUndefined(e, r) {
  return IsStructuralRight(r)
    ? StructuralRight(e, r)
    : type_IsObject(r)
      ? FromObjectRight(e, r)
      : type_IsRecord(r)
        ? FromRecordRight(e, r)
        : type_IsVoid(r)
          ? FromVoidRight(e, r)
          : type_IsUndefined(r)
            ? ExtendsResult.True
            : ExtendsResult.False;
}
function FromUnionRight(e, r) {
  return r.anyOf.some((r) => extends_check_Visit(e, r) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromUnion(e, r) {
  return e.anyOf.every((e) => extends_check_Visit(e, r) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnknownRight(e, r) {
  return ExtendsResult.True;
}
function extends_check_FromUnknown(e, r) {
  return type_IsNever(r)
    ? FromNeverRight(e, r)
    : type_IsIntersect(r)
      ? FromIntersectRight(e, r)
      : type_IsUnion(r)
        ? FromUnionRight(e, r)
        : type_IsAny(r)
          ? FromAnyRight(e, r)
          : type_IsString(r)
            ? FromStringRight(e, r)
            : type_IsNumber(r)
              ? FromNumberRight(e, r)
              : type_IsInteger(r)
                ? FromIntegerRight(e, r)
                : type_IsBoolean(r)
                  ? FromBooleanRight(e, r)
                  : type_IsArray(r)
                    ? FromArrayRight(e, r)
                    : type_IsTuple(r)
                      ? FromTupleRight(e, r)
                      : type_IsObject(r)
                        ? FromObjectRight(e, r)
                        : type_IsUnknown(r)
                          ? ExtendsResult.True
                          : ExtendsResult.False;
}
function FromVoidRight(e, r) {
  return type_IsUndefined(e) ? ExtendsResult.True : type_IsUndefined(e) ? ExtendsResult.True : ExtendsResult.False;
}
function extends_check_FromVoid(e, r) {
  return type_IsIntersect(r)
    ? FromIntersectRight(e, r)
    : type_IsUnion(r)
      ? FromUnionRight(e, r)
      : type_IsUnknown(r)
        ? FromUnknownRight(e, r)
        : type_IsAny(r)
          ? FromAnyRight(e, r)
          : type_IsObject(r)
            ? FromObjectRight(e, r)
            : type_IsVoid(r)
              ? ExtendsResult.True
              : ExtendsResult.False;
}
function extends_check_Visit(e, r) {
  return type_IsTemplateLiteral(e) || type_IsTemplateLiteral(r)
    ? extends_check_FromTemplateLiteral(e, r)
    : type_IsRegExp(e) || type_IsRegExp(r)
      ? extends_check_FromRegExp(e, r)
      : type_IsNot(e) || type_IsNot(r)
        ? extends_check_FromNot(e, r)
        : type_IsAny(e)
          ? extends_check_FromAny(e, r)
          : type_IsArray(e)
            ? extends_check_FromArray(e, r)
            : type_IsBigInt(e)
              ? extends_check_FromBigInt(e, r)
              : type_IsBoolean(e)
                ? extends_check_FromBoolean(e, r)
                : type_IsAsyncIterator(e)
                  ? extends_check_FromAsyncIterator(e, r)
                  : type_IsConstructor(e)
                    ? extends_check_FromConstructor(e, r)
                    : type_IsDate(e)
                      ? extends_check_FromDate(e, r)
                      : type_IsFunction(e)
                        ? extends_check_FromFunction(e, r)
                        : type_IsInteger(e)
                          ? extends_check_FromInteger(e, r)
                          : type_IsIntersect(e)
                            ? extends_check_FromIntersect(e, r)
                            : type_IsIterator(e)
                              ? extends_check_FromIterator(e, r)
                              : type_IsLiteral(e)
                                ? extends_check_FromLiteral(e, r)
                                : type_IsNever(e)
                                  ? extends_check_FromNever(e, r)
                                  : type_IsNull(e)
                                    ? extends_check_FromNull(e, r)
                                    : type_IsNumber(e)
                                      ? extends_check_FromNumber(e, r)
                                      : type_IsObject(e)
                                        ? extends_check_FromObject(e, r)
                                        : type_IsRecord(e)
                                          ? extends_check_FromRecord(e, r)
                                          : type_IsString(e)
                                            ? extends_check_FromString(e, r)
                                            : type_IsSymbol(e)
                                              ? extends_check_FromSymbol(e, r)
                                              : type_IsTuple(e)
                                                ? extends_check_FromTuple(e, r)
                                                : type_IsPromise(e)
                                                  ? extends_check_FromPromise(e, r)
                                                  : type_IsUint8Array(e)
                                                    ? extends_check_FromUint8Array(e, r)
                                                    : type_IsUndefined(e)
                                                      ? extends_check_FromUndefined(e, r)
                                                      : type_IsUnion(e)
                                                        ? extends_check_FromUnion(e, r)
                                                        : type_IsUnknown(e)
                                                          ? extends_check_FromUnknown(e, r)
                                                          : type_IsVoid(e)
                                                            ? extends_check_FromVoid(e, r)
                                                            : Throw(`Unknown left type operand '${e[Kind]}'`);
}
function ExtendsCheck(e, r) {
  return extends_check_Visit(e, r);
}
function exclude_from_mapped_result_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = Exclude(e[o], r);
  return s;
}
function exclude_from_mapped_result_FromMappedResult(e, r) {
  return exclude_from_mapped_result_FromProperties(e.properties, r);
}
function ExcludeFromMappedResult(e, r) {
  const s = exclude_from_mapped_result_FromMappedResult(e, r);
  return MappedResult(s);
}
function ExcludeFromTemplateLiteral(e, r) {
  return Exclude(TemplateLiteralToUnion(e), r);
}
function ExcludeRest(e, r) {
  const s = e.filter((e) => ExtendsCheck(e, r) === ExtendsResult.False);
  return s.length === 1 ? s[0] : union_Union(s);
}
function Exclude(e, r, s = {}) {
  if (IsTemplateLiteral(e)) return CreateType(ExcludeFromTemplateLiteral(e, r), s);
  if (IsMappedResult(e)) return CreateType(ExcludeFromMappedResult(e, r), s);
  return CreateType(IsUnion(e) ? ExcludeRest(e.anyOf, r) : ExtendsCheck(e, r) !== ExtendsResult.False ? Never() : e, s);
}
function FromPropertyKey(e, r, s, o, n) {
  return { [e]: Extends(Literal(e), r, s, o, Clone(n)) };
}
function FromPropertyKeys(e, r, s, o, n) {
  return e.reduce((e, i) => ({ ...e, ...FromPropertyKey(i, r, s, o, n) }), {});
}
function FromMappedKey(e, r, s, o, n) {
  return FromPropertyKeys(e.keys, r, s, o, n);
}
function ExtendsFromMappedKey(e, r, s, o, n) {
  const i = FromMappedKey(e, r, s, o, n);
  return MappedResult(i);
}
function extends_from_mapped_result_FromProperties(e, r, s, o, n) {
  const i = {};
  for (const a of globalThis.Object.getOwnPropertyNames(e)) i[a] = Extends(e[a], r, s, o, Clone(n));
  return i;
}
function extends_from_mapped_result_FromMappedResult(e, r, s, o, n) {
  return extends_from_mapped_result_FromProperties(e.properties, r, s, o, n);
}
function ExtendsFromMappedResult(e, r, s, o, n) {
  const i = extends_from_mapped_result_FromMappedResult(e, r, s, o, n);
  return MappedResult(i);
}
function ExtendsResolve(e, r, s, o) {
  const n = ExtendsCheck(e, r);
  return n === ExtendsResult.Union ? union_Union([s, o]) : n === ExtendsResult.True ? s : o;
}
function Extends(e, r, s, o, n) {
  return IsMappedResult(e)
    ? ExtendsFromMappedResult(e, r, s, o, n)
    : IsMappedKey(e)
      ? CreateType(ExtendsFromMappedKey(e, r, s, o, n))
      : CreateType(ExtendsResolve(e, r, s, o), n);
}
function extract_from_mapped_result_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = Extract(e[o], r);
  return s;
}
function extract_from_mapped_result_FromMappedResult(e, r) {
  return extract_from_mapped_result_FromProperties(e.properties, r);
}
function ExtractFromMappedResult(e, r) {
  const s = extract_from_mapped_result_FromMappedResult(e, r);
  return MappedResult(s);
}
function ExtractFromTemplateLiteral(e, r) {
  return Extract(TemplateLiteralToUnion(e), r);
}
function ExtractRest(e, r) {
  const s = e.filter((e) => ExtendsCheck(e, r) !== ExtendsResult.False);
  return s.length === 1 ? s[0] : union_Union(s);
}
function Extract(e, r, s) {
  if (IsTemplateLiteral(e)) return CreateType(ExtractFromTemplateLiteral(e, r), s);
  if (IsMappedResult(e)) return CreateType(ExtractFromMappedResult(e, r), s);
  return CreateType(IsUnion(e) ? ExtractRest(e.anyOf, r) : ExtendsCheck(e, r) !== ExtendsResult.False ? e : Never(), s);
}
function InstanceType(e, r) {
  return CreateType(e.returns, r);
}
function Integer(e) {
  return CreateType({ [Kind]: "Integer", type: "integer" }, e);
}
function* syntax_FromUnion(e) {
  const r = e.trim().replace(/"|'/g, "");
  return r === "boolean"
    ? yield boolean_Boolean()
    : r === "number"
      ? yield number_Number()
      : r === "bigint"
        ? yield bigint_BigInt()
        : r === "string"
          ? yield string_String()
          : yield (() => {
              const e = r.split("|").map((e) => Literal(e.trim()));
              return e.length === 0 ? Never() : e.length === 1 ? e[0] : UnionEvaluated(e);
            })();
}
function* FromTerminal(e) {
  if (e[1] !== "{") {
    const r = Literal("$");
    const s = FromSyntax(e.slice(1));
    return yield* [r, ...s];
  }
  for (let r = 2; r < e.length; r++) {
    if (e[r] === "}") {
      const s = syntax_FromUnion(e.slice(2, r));
      const o = FromSyntax(e.slice(r + 1));
      return yield* [...s, ...o];
    }
  }
  yield Literal(e);
}
function* FromSyntax(e) {
  for (let r = 0; r < e.length; r++) {
    if (e[r] === "$") {
      const s = Literal(e.slice(0, r));
      const o = FromTerminal(e.slice(r));
      return yield* [s, ...o];
    }
  }
  yield Literal(e);
}
function TemplateLiteralSyntax(e) {
  return [...FromSyntax(e)];
}
class TemplateLiteralPatternError extends error_TypeBoxError {}
function Escape(e) {
  return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
function pattern_Visit(e, r) {
  return IsTemplateLiteral(e)
    ? e.pattern.slice(1, e.pattern.length - 1)
    : IsUnion(e)
      ? `(${e.anyOf.map((e) => pattern_Visit(e, r)).join("|")})`
      : kind_IsNumber(e)
        ? `${r}${PatternNumber}`
        : kind_IsInteger(e)
          ? `${r}${PatternNumber}`
          : kind_IsBigInt(e)
            ? `${r}${PatternNumber}`
            : kind_IsString(e)
              ? `${r}${PatternString}`
              : IsLiteral(e)
                ? `${r}${Escape(e.const.toString())}`
                : kind_IsBoolean(e)
                  ? `${r}${PatternBoolean}`
                  : (() => {
                      throw new TemplateLiteralPatternError(`Unexpected Kind '${e[Kind]}'`);
                    })();
}
function TemplateLiteralPattern(e) {
  return `^${e.map((e) => pattern_Visit(e, "")).join("")}$`;
}
function TemplateLiteral(e, r) {
  const s = value_IsString(e) ? TemplateLiteralPattern(TemplateLiteralSyntax(e)) : TemplateLiteralPattern(e);
  return CreateType({ [Kind]: "TemplateLiteral", type: "string", pattern: s }, r);
}
function MappedIntrinsicPropertyKey(e, r, s) {
  return { [e]: Intrinsic(Literal(e), r, Clone(s)) };
}
function MappedIntrinsicPropertyKeys(e, r, s) {
  const o = e.reduce((e, o) => ({ ...e, ...MappedIntrinsicPropertyKey(o, r, s) }), {});
  return o;
}
function MappedIntrinsicProperties(e, r, s) {
  return MappedIntrinsicPropertyKeys(e["keys"], r, s);
}
function IntrinsicFromMappedKey(e, r, s) {
  const o = MappedIntrinsicProperties(e, r, s);
  return MappedResult(o);
}
function ApplyUncapitalize(e) {
  const [r, s] = [e.slice(0, 1), e.slice(1)];
  return [r.toLowerCase(), s].join("");
}
function ApplyCapitalize(e) {
  const [r, s] = [e.slice(0, 1), e.slice(1)];
  return [r.toUpperCase(), s].join("");
}
function ApplyUppercase(e) {
  return e.toUpperCase();
}
function ApplyLowercase(e) {
  return e.toLowerCase();
}
function intrinsic_FromTemplateLiteral(e, r, s) {
  const o = TemplateLiteralParseExact(e.pattern);
  const n = IsTemplateLiteralExpressionFinite(o);
  if (!n) return { ...e, pattern: FromLiteralValue(e.pattern, r) };
  const i = [...TemplateLiteralExpressionGenerate(o)];
  const a = i.map((e) => Literal(e));
  const l = intrinsic_FromRest(a, r);
  const d = union_Union(l);
  return TemplateLiteral([d], s);
}
function FromLiteralValue(e, r) {
  return typeof e === "string"
    ? r === "Uncapitalize"
      ? ApplyUncapitalize(e)
      : r === "Capitalize"
        ? ApplyCapitalize(e)
        : r === "Uppercase"
          ? ApplyUppercase(e)
          : r === "Lowercase"
            ? ApplyLowercase(e)
            : e
    : e.toString();
}
function intrinsic_FromRest(e, r) {
  return e.map((e) => Intrinsic(e, r));
}
function Intrinsic(e, r, s = {}) {
  return IsMappedKey(e)
    ? IntrinsicFromMappedKey(e, r, s)
    : IsTemplateLiteral(e)
      ? intrinsic_FromTemplateLiteral(e, r, s)
      : IsUnion(e)
        ? union_Union(intrinsic_FromRest(e.anyOf, r), s)
        : IsLiteral(e)
          ? Literal(FromLiteralValue(e.const, r), s)
          : CreateType(e, s);
}
function Capitalize(e, r = {}) {
  return Intrinsic(e, "Capitalize", r);
}
function Uncapitalize(e, r = {}) {
  return Intrinsic(e, "Uncapitalize", r);
}
function Lowercase(e, r = {}) {
  return Intrinsic(e, "Lowercase", r);
}
function Uppercase(e, r = {}) {
  return Intrinsic(e, "Uppercase", r);
}
function Iterator(e, r) {
  return CreateType({ [Kind]: "Iterator", type: "Iterator", items: e }, r);
}
function keyof_from_mapped_result_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = KeyOf(e[o], Clone(r));
  return s;
}
function keyof_from_mapped_result_FromMappedResult(e, r) {
  return keyof_from_mapped_result_FromProperties(e.properties, r);
}
function KeyOfFromMappedResult(e, r) {
  const s = keyof_from_mapped_result_FromMappedResult(e, r);
  return MappedResult(s);
}
function keyof_FromComputed(e, r) {
  return computed_Computed("KeyOf", [computed_Computed(e, r)]);
}
function keyof_FromRef(e) {
  return computed_Computed("KeyOf", [Ref(e)]);
}
function KeyOfFromType(e, r) {
  const s = KeyOfPropertyKeys(e);
  const o = KeyOfPropertyKeysToRest(s);
  const n = UnionEvaluated(o);
  return CreateType(n, r);
}
function KeyOfPropertyKeysToRest(e) {
  return e.map((e) => (e === "[number]" ? number_Number() : Literal(e)));
}
function KeyOf(e, r) {
  return IsComputed(e)
    ? keyof_FromComputed(e.target, e.parameters)
    : IsRef(e)
      ? keyof_FromRef(e.$ref)
      : IsMappedResult(e)
        ? KeyOfFromMappedResult(e, r)
        : KeyOfFromType(e, r);
}
function promise_Promise(e, r) {
  return CreateType({ [Kind]: "Promise", type: "Promise", item: e }, r);
}
function mapped_FromMappedResult(e, r) {
  return e in r ? FromSchemaType(e, r[e]) : MappedResult(r);
}
function MappedKeyToKnownMappedResultProperties(e) {
  return { [e]: Literal(e) };
}
function MappedKeyToUnknownMappedResultProperties(e) {
  const r = {};
  for (const s of e) r[s] = Literal(s);
  return r;
}
function MappedKeyToMappedResultProperties(e, r) {
  return SetIncludes(r, e) ? MappedKeyToKnownMappedResultProperties(e) : MappedKeyToUnknownMappedResultProperties(r);
}
function mapped_FromMappedKey(e, r) {
  const s = MappedKeyToMappedResultProperties(e, r);
  return mapped_FromMappedResult(e, s);
}
function mapped_FromRest(e, r) {
  return r.map((r) => FromSchemaType(e, r));
}
function mapped_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(r)) s[o] = FromSchemaType(e, r[o]);
  return s;
}
function FromSchemaType(e, r) {
  const s = { ...r };
  return IsOptional(r)
    ? Optional(FromSchemaType(e, Discard(r, [OptionalKind])))
    : IsReadonly(r)
      ? Readonly(FromSchemaType(e, Discard(r, [symbols_ReadonlyKind])))
      : IsMappedResult(r)
        ? mapped_FromMappedResult(e, r.properties)
        : IsMappedKey(r)
          ? mapped_FromMappedKey(e, r.keys)
          : IsConstructor(r)
            ? Constructor(mapped_FromRest(e, r.parameters), FromSchemaType(e, r.returns), s)
            : kind_IsFunction(r)
              ? function_Function(mapped_FromRest(e, r.parameters), FromSchemaType(e, r.returns), s)
              : kind_IsAsyncIterator(r)
                ? AsyncIterator(FromSchemaType(e, r.items), s)
                : kind_IsIterator(r)
                  ? Iterator(FromSchemaType(e, r.items), s)
                  : IsIntersect(r)
                    ? intersect_Intersect(mapped_FromRest(e, r.allOf), s)
                    : IsUnion(r)
                      ? union_Union(mapped_FromRest(e, r.anyOf), s)
                      : IsTuple(r)
                        ? Tuple(mapped_FromRest(e, r.items ?? []), s)
                        : kind_IsObject(r)
                          ? object_Object(mapped_FromProperties(e, r.properties), s)
                          : kind_IsArray(r)
                            ? array_Array(FromSchemaType(e, r.items), s)
                            : kind_IsPromise(r)
                              ? promise_Promise(FromSchemaType(e, r.item), s)
                              : r;
}
function MappedFunctionReturnType(e, r) {
  const s = {};
  for (const o of e) s[o] = FromSchemaType(o, r);
  return s;
}
function Mapped(e, r, s) {
  const o = IsSchema(e) ? IndexPropertyKeys(e) : e;
  const n = r({ [Kind]: "MappedKey", keys: o });
  const i = MappedFunctionReturnType(o, n);
  return object_Object(i, s);
}
function omit_from_mapped_key_FromPropertyKey(e, r, s) {
  return { [r]: Omit(e, [r], Clone(s)) };
}
function omit_from_mapped_key_FromPropertyKeys(e, r, s) {
  return r.reduce((r, o) => ({ ...r, ...omit_from_mapped_key_FromPropertyKey(e, o, s) }), {});
}
function omit_from_mapped_key_FromMappedKey(e, r, s) {
  return omit_from_mapped_key_FromPropertyKeys(e, r.keys, s);
}
function OmitFromMappedKey(e, r, s) {
  const o = omit_from_mapped_key_FromMappedKey(e, r, s);
  return MappedResult(o);
}
function omit_from_mapped_result_FromProperties(e, r, s) {
  const o = {};
  for (const n of globalThis.Object.getOwnPropertyNames(e)) o[n] = Omit(e[n], r, Clone(s));
  return o;
}
function omit_from_mapped_result_FromMappedResult(e, r, s) {
  return omit_from_mapped_result_FromProperties(e.properties, r, s);
}
function OmitFromMappedResult(e, r, s) {
  const o = omit_from_mapped_result_FromMappedResult(e, r, s);
  return MappedResult(o);
}
function omit_FromIntersect(e, r) {
  return e.map((e) => OmitResolve(e, r));
}
function omit_FromUnion(e, r) {
  return e.map((e) => OmitResolve(e, r));
}
function omit_FromProperty(e, r) {
  const { [r]: s, ...o } = e;
  return o;
}
function omit_FromProperties(e, r) {
  return r.reduce((e, r) => omit_FromProperty(e, r), e);
}
function omit_FromObject(e, r) {
  const s = Discard(e, [TransformKind, "$id", "required", "properties"]);
  const o = omit_FromProperties(e["properties"], r);
  return object_Object(o, s);
}
function UnionFromPropertyKeys(e) {
  const r = e.reduce((e, r) => (IsLiteralValue(r) ? [...e, Literal(r)] : e), []);
  return union_Union(r);
}
function OmitResolve(e, r) {
  return IsIntersect(e)
    ? intersect_Intersect(omit_FromIntersect(e.allOf, r))
    : IsUnion(e)
      ? union_Union(omit_FromUnion(e.anyOf, r))
      : kind_IsObject(e)
        ? omit_FromObject(e, r)
        : object_Object({});
}
function Omit(e, r, s) {
  const o = value_IsArray(r) ? UnionFromPropertyKeys(r) : r;
  const n = IsSchema(r) ? IndexPropertyKeys(r) : r;
  const i = IsRef(e);
  const a = IsRef(r);
  return IsMappedResult(e)
    ? OmitFromMappedResult(e, n, s)
    : IsMappedKey(r)
      ? OmitFromMappedKey(e, r, s)
      : i && a
        ? computed_Computed("Omit", [e, o], s)
        : !i && a
          ? computed_Computed("Omit", [e, o], s)
          : i && !a
            ? computed_Computed("Omit", [e, o], s)
            : CreateType({ ...OmitResolve(e, n), ...s });
}
function pick_from_mapped_key_FromPropertyKey(e, r, s) {
  return { [r]: Pick(e, [r], Clone(s)) };
}
function pick_from_mapped_key_FromPropertyKeys(e, r, s) {
  return r.reduce((r, o) => ({ ...r, ...pick_from_mapped_key_FromPropertyKey(e, o, s) }), {});
}
function pick_from_mapped_key_FromMappedKey(e, r, s) {
  return pick_from_mapped_key_FromPropertyKeys(e, r.keys, s);
}
function PickFromMappedKey(e, r, s) {
  const o = pick_from_mapped_key_FromMappedKey(e, r, s);
  return MappedResult(o);
}
function pick_from_mapped_result_FromProperties(e, r, s) {
  const o = {};
  for (const n of globalThis.Object.getOwnPropertyNames(e)) o[n] = Pick(e[n], r, Clone(s));
  return o;
}
function pick_from_mapped_result_FromMappedResult(e, r, s) {
  return pick_from_mapped_result_FromProperties(e.properties, r, s);
}
function PickFromMappedResult(e, r, s) {
  const o = pick_from_mapped_result_FromMappedResult(e, r, s);
  return MappedResult(o);
}
function pick_FromIntersect(e, r) {
  return e.map((e) => PickResolve(e, r));
}
function pick_FromUnion(e, r) {
  return e.map((e) => PickResolve(e, r));
}
function pick_FromProperties(e, r) {
  const s = {};
  for (const o of r) if (o in e) s[o] = e[o];
  return s;
}
function pick_FromObject(e, r) {
  const s = Discard(e, [TransformKind, "$id", "required", "properties"]);
  const o = pick_FromProperties(e["properties"], r);
  return object_Object(o, s);
}
function pick_UnionFromPropertyKeys(e) {
  const r = e.reduce((e, r) => (IsLiteralValue(r) ? [...e, Literal(r)] : e), []);
  return union_Union(r);
}
function PickResolve(e, r) {
  return IsIntersect(e)
    ? intersect_Intersect(pick_FromIntersect(e.allOf, r))
    : IsUnion(e)
      ? union_Union(pick_FromUnion(e.anyOf, r))
      : kind_IsObject(e)
        ? pick_FromObject(e, r)
        : object_Object({});
}
function Pick(e, r, s) {
  const o = value_IsArray(r) ? pick_UnionFromPropertyKeys(r) : r;
  const n = IsSchema(r) ? IndexPropertyKeys(r) : r;
  const i = IsRef(e);
  const a = IsRef(r);
  return IsMappedResult(e)
    ? PickFromMappedResult(e, n, s)
    : IsMappedKey(r)
      ? PickFromMappedKey(e, r, s)
      : i && a
        ? computed_Computed("Pick", [e, o], s)
        : !i && a
          ? computed_Computed("Pick", [e, o], s)
          : i && !a
            ? computed_Computed("Pick", [e, o], s)
            : CreateType({ ...PickResolve(e, n), ...s });
}
function partial_from_mapped_result_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = Partial(e[o], Clone(r));
  return s;
}
function partial_from_mapped_result_FromMappedResult(e, r) {
  return partial_from_mapped_result_FromProperties(e.properties, r);
}
function PartialFromMappedResult(e, r) {
  const s = partial_from_mapped_result_FromMappedResult(e, r);
  return MappedResult(s);
}
function partial_FromComputed(e, r) {
  return computed_Computed("Partial", [computed_Computed(e, r)]);
}
function partial_FromRef(e) {
  return computed_Computed("Partial", [Ref(e)]);
}
function partial_FromProperties(e) {
  const r = {};
  for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = Optional(e[s]);
  return r;
}
function partial_FromObject(e) {
  const r = Discard(e, [TransformKind, "$id", "required", "properties"]);
  const s = partial_FromProperties(e["properties"]);
  return object_Object(s, r);
}
function partial_FromRest(e) {
  return e.map((e) => PartialResolve(e));
}
function PartialResolve(e) {
  return IsComputed(e)
    ? partial_FromComputed(e.target, e.parameters)
    : IsRef(e)
      ? partial_FromRef(e.$ref)
      : IsIntersect(e)
        ? intersect_Intersect(partial_FromRest(e.allOf))
        : IsUnion(e)
          ? union_Union(partial_FromRest(e.anyOf))
          : kind_IsObject(e)
            ? partial_FromObject(e)
            : object_Object({});
}
function Partial(e, r) {
  if (IsMappedResult(e)) {
    return PartialFromMappedResult(e, r);
  } else {
    return CreateType({ ...PartialResolve(e), ...r });
  }
}
function RecordCreateFromPattern(e, r, s) {
  return CreateType({ [Kind]: "Record", type: "object", patternProperties: { [e]: r } }, s);
}
function RecordCreateFromKeys(e, r, s) {
  const o = {};
  for (const s of e) o[s] = r;
  return object_Object(o, { ...s, [symbols_Hint]: "Record" });
}
function FromTemplateLiteralKey(e, r, s) {
  return IsTemplateLiteralFinite(e) ? RecordCreateFromKeys(IndexPropertyKeys(e), r, s) : RecordCreateFromPattern(e.pattern, r, s);
}
function FromUnionKey(e, r, s) {
  return RecordCreateFromKeys(IndexPropertyKeys(union_Union(e)), r, s);
}
function FromLiteralKey(e, r, s) {
  return RecordCreateFromKeys([e.toString()], r, s);
}
function FromRegExpKey(e, r, s) {
  return RecordCreateFromPattern(e.source, r, s);
}
function FromStringKey(e, r, s) {
  const o = value_IsUndefined(e.pattern) ? PatternStringExact : e.pattern;
  return RecordCreateFromPattern(o, r, s);
}
function FromAnyKey(e, r, s) {
  return RecordCreateFromPattern(PatternStringExact, r, s);
}
function FromNeverKey(e, r, s) {
  return RecordCreateFromPattern(PatternNeverExact, r, s);
}
function FromIntegerKey(e, r, s) {
  return RecordCreateFromPattern(PatternNumberExact, r, s);
}
function FromNumberKey(e, r, s) {
  return RecordCreateFromPattern(PatternNumberExact, r, s);
}
function Record(e, r, s = {}) {
  return IsComputed(r)
    ? computed_Computed("Record", [e, computed_Computed(r.target, r.parameters)], s)
    : IsComputed(e)
      ? computed_Computed("Record", [computed_Computed(r.target, r.parameters), r], s)
      : IsRef(e)
        ? computed_Computed("Record", [Ref(e.$ref), r])
        : IsUnion(e)
          ? FromUnionKey(e.anyOf, r, s)
          : IsTemplateLiteral(e)
            ? FromTemplateLiteralKey(e, r, s)
            : IsLiteral(e)
              ? FromLiteralKey(e.const, r, s)
              : kind_IsInteger(e)
                ? FromIntegerKey(e, r, s)
                : kind_IsNumber(e)
                  ? FromNumberKey(e, r, s)
                  : kind_IsRegExp(e)
                    ? FromRegExpKey(e, r, s)
                    : kind_IsString(e)
                      ? FromStringKey(e, r, s)
                      : IsAny(e)
                        ? FromAnyKey(e, r, s)
                        : IsNever(e)
                          ? FromNeverKey(e, r, s)
                          : Never(s);
}
function required_from_mapped_result_FromProperties(e, r) {
  const s = {};
  for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = Required(e[o], r);
  return s;
}
function required_from_mapped_result_FromMappedResult(e, r) {
  return required_from_mapped_result_FromProperties(e.properties, r);
}
function RequiredFromMappedResult(e, r) {
  const s = required_from_mapped_result_FromMappedResult(e, r);
  return MappedResult(s);
}
function required_FromComputed(e, r) {
  return computed_Computed("Required", [computed_Computed(e, r)]);
}
function required_FromRef(e) {
  return computed_Computed("Required", [Ref(e)]);
}
function required_FromProperties(e) {
  const r = {};
  for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = Discard(e[s], [OptionalKind]);
  return r;
}
function required_FromObject(e) {
  const r = Discard(e, [TransformKind, "$id", "required", "properties"]);
  const s = required_FromProperties(e["properties"]);
  return object_Object(s, r);
}
function required_FromRest(e) {
  return e.map((e) => RequiredResolve(e));
}
function RequiredResolve(e) {
  return IsComputed(e)
    ? required_FromComputed(e.target, e.parameters)
    : IsRef(e)
      ? required_FromRef(e.$ref)
      : IsIntersect(e)
        ? intersect_Intersect(required_FromRest(e.allOf))
        : IsUnion(e)
          ? union_Union(required_FromRest(e.anyOf))
          : kind_IsObject(e)
            ? required_FromObject(e)
            : object_Object({});
}
function Required(e, r) {
  if (IsMappedResult(e)) {
    return RequiredFromMappedResult(e, r);
  } else {
    return CreateType({ ...RequiredResolve(e), ...r });
  }
}
function DerefParameters(e, r) {
  return r.map((r) => (IsRef(r) ? compute_Deref(e, r.$ref) : FromType(e, r)));
}
function compute_Deref(e, r) {
  return r in e ? (IsRef(e[r]) ? compute_Deref(e, e[r].$ref) : FromType(e, e[r])) : Never();
}
function FromAwaited(e) {
  return Awaited(e[0]);
}
function FromIndex(e) {
  return Index(e[0], e[1]);
}
function FromKeyOf(e) {
  return KeyOf(e[0]);
}
function FromPartial(e) {
  return Partial(e[0]);
}
function FromOmit(e) {
  return Omit(e[0], e[1]);
}
function FromPick(e) {
  return Pick(e[0], e[1]);
}
function compute_FromRecord(e) {
  return Record(e[0], e[1]);
}
function FromRequired(e) {
  return Required(e[0]);
}
function compute_FromComputed(e, r, s) {
  const o = DerefParameters(e, s);
  return r === "Awaited"
    ? FromAwaited(o)
    : r === "Index"
      ? FromIndex(o)
      : r === "KeyOf"
        ? FromKeyOf(o)
        : r === "Partial"
          ? FromPartial(o)
          : r === "Omit"
            ? FromOmit(o)
            : r === "Pick"
              ? FromPick(o)
              : r === "Record"
                ? compute_FromRecord(o)
                : r === "Required"
                  ? FromRequired(o)
                  : Never();
}
function compute_FromObject(e, r) {
  return object_Object(globalThis.Object.keys(r).reduce((s, o) => ({ ...s, [o]: FromType(e, r[o]) }), {}));
}
function compute_FromConstructor(e, r, s) {
  return Constructor(compute_FromRest(e, r), FromType(e, s));
}
function compute_FromFunction(e, r, s) {
  return function_Function(compute_FromRest(e, r), FromType(e, s));
}
function compute_FromTuple(e, r) {
  return Tuple(compute_FromRest(e, r));
}
function compute_FromIntersect(e, r) {
  return intersect_Intersect(compute_FromRest(e, r));
}
function compute_FromUnion(e, r) {
  return union_Union(compute_FromRest(e, r));
}
function compute_FromArray(e, r) {
  return array_Array(FromType(e, r));
}
function compute_FromAsyncIterator(e, r) {
  return AsyncIterator(FromType(e, r));
}
function compute_FromIterator(e, r) {
  return Iterator(FromType(e, r));
}
function compute_FromRest(e, r) {
  return r.map((r) => FromType(e, r));
}
function FromType(e, r) {
  return IsOptional(r)
    ? CreateType(FromType(e, Discard(r, [OptionalKind])), r)
    : IsReadonly(r)
      ? CreateType(FromType(e, Discard(r, [symbols_ReadonlyKind])), r)
      : kind_IsArray(r)
        ? CreateType(compute_FromArray(e, r.items), r)
        : kind_IsAsyncIterator(r)
          ? CreateType(compute_FromAsyncIterator(e, r.items), r)
          : IsComputed(r)
            ? CreateType(compute_FromComputed(e, r.target, r.parameters))
            : IsConstructor(r)
              ? CreateType(compute_FromConstructor(e, r.parameters, r.returns), r)
              : kind_IsFunction(r)
                ? CreateType(compute_FromFunction(e, r.parameters, r.returns), r)
                : IsIntersect(r)
                  ? CreateType(compute_FromIntersect(e, r.allOf), r)
                  : kind_IsIterator(r)
                    ? CreateType(compute_FromIterator(e, r.items), r)
                    : kind_IsObject(r)
                      ? CreateType(compute_FromObject(e, r.properties), r)
                      : IsTuple(r)
                        ? CreateType(compute_FromTuple(e, r.items || []), r)
                        : IsUnion(r)
                          ? CreateType(compute_FromUnion(e, r.anyOf), r)
                          : r;
}
function ComputeType(e, r) {
  return r in e ? FromType(e, e[r]) : Never();
}
function ComputeModuleProperties(e) {
  return globalThis.Object.getOwnPropertyNames(e).reduce((r, s) => ({ ...r, [s]: ComputeType(e, s) }), {});
}
class TModule {
  constructor(e) {
    const r = ComputeModuleProperties(e);
    const s = this.WithIdentifiers(r);
    this.$defs = s;
  }
  Import(e, r) {
    const s = { ...this.$defs, [e]: CreateType(this.$defs[e], r) };
    return CreateType({ [Kind]: "Import", $defs: s, $ref: e });
  }
  WithIdentifiers(e) {
    return globalThis.Object.getOwnPropertyNames(e).reduce((r, s) => ({ ...r, [s]: { ...e[s], $id: s } }), {});
  }
}
function Module(e) {
  return new TModule(e);
}
function not_Not(e, r) {
  return CreateType({ [Kind]: "Not", not: e }, r);
}
function Parameters(e, r) {
  return Tuple(e.parameters, r);
}
function ReadonlyOptional(e) {
  return Readonly(Optional(e));
}
function CloneRest(e) {
  return e.map((e) => CloneType(e));
}
function CloneType(e, r) {
  return r === undefined ? Clone(e) : Clone({ ...r, ...e });
}
let Ordinal = 0;
function Recursive(e, r = {}) {
  if (value_IsUndefined(r.$id)) r.$id = `T${Ordinal++}`;
  const s = CloneType(e({ [Kind]: "This", $ref: `${r.$id}` }));
  s.$id = r.$id;
  return CreateType({ [symbols_Hint]: "Recursive", ...s }, r);
}
function regexp_RegExp(e, r) {
  const s = value_IsString(e) ? new globalThis.RegExp(e) : e;
  return CreateType({ [Kind]: "RegExp", type: "RegExp", source: s.source, flags: s.flags }, r);
}
function RestResolve(e) {
  return IsIntersect(e) ? e.allOf : IsUnion(e) ? e.anyOf : IsTuple(e) ? (e.items ?? []) : [];
}
function Rest(e) {
  return RestResolve(e);
}
function ReturnType(e, r) {
  return CreateType(e.returns, r);
}
class TransformDecodeBuilder {
  constructor(e) {
    this.schema = e;
  }
  Decode(e) {
    return new TransformEncodeBuilder(this.schema, e);
  }
}
class TransformEncodeBuilder {
  constructor(e, r) {
    this.schema = e;
    this.decode = r;
  }
  EncodeTransform(e, r) {
    const Encode = (s) => r[TransformKind].Encode(e(s));
    const Decode = (e) => this.decode(r[TransformKind].Decode(e));
    const s = { Encode: Encode, Decode: Decode };
    return { ...r, [TransformKind]: s };
  }
  EncodeSchema(e, r) {
    const s = { Decode: this.decode, Encode: e };
    return { ...r, [TransformKind]: s };
  }
  Encode(e) {
    return IsTransform(this.schema) ? this.EncodeTransform(e, this.schema) : this.EncodeSchema(e, this.schema);
  }
}
function Transform(e) {
  return new TransformDecodeBuilder(e);
}
function Unsafe(e = {}) {
  return CreateType({ [Kind]: e[Kind] ?? "Unsafe" }, e);
}
function Void(e) {
  return CreateType({ [Kind]: "Void", type: "void" }, e);
}
const Type = type_type_namespaceObject;
var parseBody = async (e, r = Object.create(null)) => {
  const { all: s = false, dot: o = false } = r;
  const n = e instanceof HonoRequest ? e.raw.headers : e.headers;
  const i = n.get("Content-Type");
  if (i?.startsWith("multipart/form-data") || i?.startsWith("application/x-www-form-urlencoded")) {
    return parseFormData(e, { all: s, dot: o });
  }
  return {};
};
async function parseFormData(e, r) {
  const s = await e.formData();
  if (s) {
    return convertFormDataToBodyData(s, r);
  }
  return {};
}
function convertFormDataToBodyData(e, r) {
  const s = Object.create(null);
  e.forEach((e, o) => {
    const n = r.all || o.endsWith("[]");
    if (!n) {
      s[o] = e;
    } else {
      handleParsingAllValues(s, o, e);
    }
  });
  if (r.dot) {
    Object.entries(s).forEach(([e, r]) => {
      const o = e.includes(".");
      if (o) {
        handleParsingNestedValues(s, e, r);
        delete s[e];
      }
    });
  }
  return s;
}
var handleParsingAllValues = (e, r, s) => {
  if (e[r] !== void 0) {
    if (Array.isArray(e[r])) {
      e[r].push(s);
    } else {
      e[r] = [e[r], s];
    }
  } else {
    e[r] = s;
  }
};
var handleParsingNestedValues = (e, r, s) => {
  let o = e;
  const n = r.split(".");
  n.forEach((e, r) => {
    if (r === n.length - 1) {
      o[e] = s;
    } else {
      if (!o[e] || typeof o[e] !== "object" || Array.isArray(o[e]) || o[e] instanceof File) {
        o[e] = Object.create(null);
      }
      o = o[e];
    }
  });
};
var splitPath = (e) => {
  const r = e.split("/");
  if (r[0] === "") {
    r.shift();
  }
  return r;
};
var splitRoutingPath = (e) => {
  const { groups: r, path: s } = extractGroupsFromPath(e);
  const o = splitPath(s);
  return replaceGroupMarks(o, r);
};
var extractGroupsFromPath = (e) => {
  const r = [];
  e = e.replace(/\{[^}]+\}/g, (e, s) => {
    const o = `@${s}`;
    r.push([o, e]);
    return o;
  });
  return { groups: r, path: e };
};
var replaceGroupMarks = (e, r) => {
  for (let s = r.length - 1; s >= 0; s--) {
    const [o] = r[s];
    for (let n = e.length - 1; n >= 0; n--) {
      if (e[n].includes(o)) {
        e[n] = e[n].replace(o, r[s][1]);
        break;
      }
    }
  }
  return e;
};
var patternCache = {};
var getPattern = (e) => {
  if (e === "*") {
    return "*";
  }
  const r = e.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
  if (r) {
    if (!patternCache[e]) {
      if (r[2]) {
        patternCache[e] = [e, r[1], new RegExp("^" + r[2] + "$")];
      } else {
        patternCache[e] = [e, r[1], true];
      }
    }
    return patternCache[e];
  }
  return null;
};
var tryDecode = (e, r) => {
  try {
    return r(e);
  } catch {
    return e.replace(/(?:%[0-9A-Fa-f]{2})+/g, (e) => {
      try {
        return r(e);
      } catch {
        return e;
      }
    });
  }
};
var tryDecodeURI = (e) => tryDecode(e, decodeURI);
var getPath = (e) => {
  const r = e.url;
  const s = r.indexOf("/", 8);
  let o = s;
  for (; o < r.length; o++) {
    const e = r.charCodeAt(o);
    if (e === 37) {
      const e = r.indexOf("?", o);
      const n = r.slice(s, e === -1 ? void 0 : e);
      return tryDecodeURI(n.includes("%25") ? n.replace(/%25/g, "%2525") : n);
    } else if (e === 63) {
      break;
    }
  }
  return r.slice(s, o);
};
var getQueryStrings = (e) => {
  const r = e.indexOf("?", 8);
  return r === -1 ? "" : "?" + e.slice(r + 1);
};
var getPathNoStrict = (e) => {
  const r = getPath(e);
  return r.length > 1 && r.at(-1) === "/" ? r.slice(0, -1) : r;
};
var mergePath = (...e) => {
  let r = "";
  let s = false;
  for (let o of e) {
    if (r.at(-1) === "/") {
      r = r.slice(0, -1);
      s = true;
    }
    if (o[0] !== "/") {
      o = `/${o}`;
    }
    if (o === "/" && s) {
      r = `${r}/`;
    } else if (o !== "/") {
      r = `${r}${o}`;
    }
    if (o === "/" && r === "") {
      r = "/";
    }
  }
  return r;
};
var checkOptionalParameter = (e) => {
  if (!e.match(/\:.+\?$/)) {
    return null;
  }
  const r = e.split("/");
  const s = [];
  let o = "";
  r.forEach((e) => {
    if (e !== "" && !/\:/.test(e)) {
      o += "/" + e;
    } else if (/\:/.test(e)) {
      if (/\?/.test(e)) {
        if (s.length === 0 && o === "") {
          s.push("/");
        } else {
          s.push(o);
        }
        const r = e.replace("?", "");
        o += "/" + r;
        s.push(o);
      } else {
        o += "/" + e;
      }
    }
  });
  return s.filter((e, r, s) => s.indexOf(e) === r);
};
var _decodeURI = (e) => {
  if (!/[%+]/.test(e)) {
    return e;
  }
  if (e.indexOf("+") !== -1) {
    e = e.replace(/\+/g, " ");
  }
  return e.indexOf("%") !== -1 ? decodeURIComponent_(e) : e;
};
var _getQueryParam = (e, r, s) => {
  let o;
  if (!s && r && !/[%+]/.test(r)) {
    let s = e.indexOf(`?${r}`, 8);
    if (s === -1) {
      s = e.indexOf(`&${r}`, 8);
    }
    while (s !== -1) {
      const o = e.charCodeAt(s + r.length + 1);
      if (o === 61) {
        const o = s + r.length + 2;
        const n = e.indexOf("&", o);
        return _decodeURI(e.slice(o, n === -1 ? void 0 : n));
      } else if (o == 38 || isNaN(o)) {
        return "";
      }
      s = e.indexOf(`&${r}`, s + 1);
    }
    o = /[%+]/.test(e);
    if (!o) {
      return void 0;
    }
  }
  const n = {};
  o ??= /[%+]/.test(e);
  let i = e.indexOf("?", 8);
  while (i !== -1) {
    const r = e.indexOf("&", i + 1);
    let a = e.indexOf("=", i);
    if (a > r && r !== -1) {
      a = -1;
    }
    let l = e.slice(i + 1, a === -1 ? (r === -1 ? void 0 : r) : a);
    if (o) {
      l = _decodeURI(l);
    }
    i = r;
    if (l === "") {
      continue;
    }
    let d;
    if (a === -1) {
      d = "";
    } else {
      d = e.slice(a + 1, r === -1 ? void 0 : r);
      if (o) {
        d = _decodeURI(d);
      }
    }
    if (s) {
      if (!(n[l] && Array.isArray(n[l]))) {
        n[l] = [];
      }
      n[l].push(d);
    } else {
      n[l] ??= d;
    }
  }
  return r ? n[r] : n;
};
var getQueryParam = _getQueryParam;
var getQueryParams = (e, r) => _getQueryParam(e, r, true);
var decodeURIComponent_ = decodeURIComponent;
var tryDecodeURIComponent = (e) => tryDecode(e, decodeURIComponent_);
var HonoRequest = class {
  raw;
  #p;
  #E;
  routeIndex = 0;
  path;
  bodyCache = {};
  constructor(e, r = "/", s = [[]]) {
    this.raw = e;
    this.path = r;
    this.#E = s;
    this.#p = {};
  }
  param(e) {
    return e ? this.#I(e) : this.#C();
  }
  #I(e) {
    const r = this.#E[0][this.routeIndex][1][e];
    const s = this.#m(r);
    return s ? (/\%/.test(s) ? tryDecodeURIComponent(s) : s) : void 0;
  }
  #C() {
    const e = {};
    const r = Object.keys(this.#E[0][this.routeIndex][1]);
    for (const s of r) {
      const r = this.#m(this.#E[0][this.routeIndex][1][s]);
      if (r && typeof r === "string") {
        e[s] = /\%/.test(r) ? tryDecodeURIComponent(r) : r;
      }
    }
    return e;
  }
  #m(e) {
    return this.#E[1] ? this.#E[1][e] : e;
  }
  query(e) {
    return getQueryParam(this.url, e);
  }
  queries(e) {
    return getQueryParams(this.url, e);
  }
  header(e) {
    if (e) {
      return this.raw.headers.get(e.toLowerCase()) ?? void 0;
    }
    const r = {};
    this.raw.headers.forEach((e, s) => {
      r[s] = e;
    });
    return r;
  }
  async parseBody(e) {
    return (this.bodyCache.parsedBody ??= await parseBody(this, e));
  }
  #B = (e) => {
    const { bodyCache: r, raw: s } = this;
    const o = r[e];
    if (o) {
      return o;
    }
    const n = Object.keys(r)[0];
    if (n) {
      return r[n].then((r) => {
        if (n === "json") {
          r = JSON.stringify(r);
        }
        return new Response(r)[e]();
      });
    }
    return (r[e] = s[e]());
  };
  json() {
    return this.#B("json");
  }
  text() {
    return this.#B("text");
  }
  arrayBuffer() {
    return this.#B("arrayBuffer");
  }
  blob() {
    return this.#B("blob");
  }
  formData() {
    return this.#B("formData");
  }
  addValidatedData(e, r) {
    this.#p[e] = r;
  }
  valid(e) {
    return this.#p[e];
  }
  get url() {
    return this.raw.url;
  }
  get method() {
    return this.raw.method;
  }
  get matchedRoutes() {
    return this.#E[0].map(([[, e]]) => e);
  }
  get routePath() {
    return this.#E[0].map(([[, e]]) => e)[this.routeIndex].path;
  }
};
var HtmlEscapedCallbackPhase = { Stringify: 1, BeforeStream: 2, Stream: 3 };
var raw = (e, r) => {
  const s = new String(e);
  s.isEscaped = true;
  s.callbacks = r;
  return s;
};
var escapeRe = /[&<>'"]/;
var stringBufferToString = async (e, r) => {
  let s = "";
  r ||= [];
  const o = await Promise.all(e);
  for (let e = o.length - 1; ; e--) {
    s += o[e];
    e--;
    if (e < 0) {
      break;
    }
    let n = o[e];
    if (typeof n === "object") {
      r.push(...(n.callbacks || []));
    }
    const i = n.isEscaped;
    n = await (typeof n === "object" ? n.toString() : n);
    if (typeof n === "object") {
      r.push(...(n.callbacks || []));
    }
    if (n.isEscaped ?? i) {
      s += n;
    } else {
      const e = [s];
      escapeToBuffer(n, e);
      s = e[0];
    }
  }
  return raw(s, r);
};
var escapeToBuffer = (e, r) => {
  const s = e.search(escapeRe);
  if (s === -1) {
    r[0] += e;
    return;
  }
  let o;
  let n;
  let i = 0;
  for (n = s; n < e.length; n++) {
    switch (e.charCodeAt(n)) {
      case 34:
        o = "&quot;";
        break;
      case 39:
        o = "&#39;";
        break;
      case 38:
        o = "&amp;";
        break;
      case 60:
        o = "&lt;";
        break;
      case 62:
        o = "&gt;";
        break;
      default:
        continue;
    }
    r[0] += e.substring(i, n) + o;
    i = n + 1;
  }
  r[0] += e.substring(i, n);
};
var resolveCallbackSync = (e) => {
  const r = e.callbacks;
  if (!r?.length) {
    return e;
  }
  const s = [e];
  const o = {};
  r.forEach((e) => e({ phase: HtmlEscapedCallbackPhase.Stringify, buffer: s, context: o }));
  return s[0];
};
var resolveCallback = async (e, r, s, o, n) => {
  if (typeof e === "object" && !(e instanceof String)) {
    if (!(e instanceof Promise)) {
      e = e.toString();
    }
    if (e instanceof Promise) {
      e = await e;
    }
  }
  const i = e.callbacks;
  if (!i?.length) {
    return Promise.resolve(e);
  }
  if (n) {
    n[0] += e;
  } else {
    n = [e];
  }
  const a = Promise.all(i.map((e) => e({ phase: r, buffer: n, context: o }))).then((e) =>
    Promise.all(e.filter(Boolean).map((e) => resolveCallback(e, r, false, o, n))).then(() => n[0])
  );
  if (s) {
    return raw(await a, i);
  } else {
    return a;
  }
};
var TEXT_PLAIN = "text/plain; charset=UTF-8";
var setHeaders = (e, r = {}) => {
  for (const s of Object.keys(r)) {
    e.set(s, r[s]);
  }
  return e;
};
var Context = class {
  #Q;
  #b;
  env = {};
  #w;
  finalized = false;
  error;
  #y = 200;
  #k;
  #R;
  #T;
  #D;
  #F = true;
  #v;
  #S;
  #N;
  #E;
  #O;
  constructor(e, r) {
    this.#Q = e;
    if (r) {
      this.#k = r.executionCtx;
      this.env = r.env;
      this.#N = r.notFoundHandler;
      this.#O = r.path;
      this.#E = r.matchResult;
    }
  }
  get req() {
    this.#b ??= new HonoRequest(this.#Q, this.#O, this.#E);
    return this.#b;
  }
  get event() {
    if (this.#k && "respondWith" in this.#k) {
      return this.#k;
    } else {
      throw Error("This context has no FetchEvent");
    }
  }
  get executionCtx() {
    if (this.#k) {
      return this.#k;
    } else {
      throw Error("This context has no ExecutionContext");
    }
  }
  get res() {
    this.#F = false;
    return (this.#D ||= new Response("404 Not Found", { status: 404 }));
  }
  set res(e) {
    this.#F = false;
    if (this.#D && e) {
      try {
        for (const [r, s] of this.#D.headers.entries()) {
          if (r === "content-type") {
            continue;
          }
          if (r === "set-cookie") {
            const r = this.#D.headers.getSetCookie();
            e.headers.delete("set-cookie");
            for (const s of r) {
              e.headers.append("set-cookie", s);
            }
          } else {
            e.headers.set(r, s);
          }
        }
      } catch (r) {
        if (r instanceof TypeError && r.message.includes("immutable")) {
          this.res = new Response(e.body, { headers: e.headers, status: e.status });
          return;
        } else {
          throw r;
        }
      }
    }
    this.#D = e;
    this.finalized = true;
  }
  render = (...e) => {
    this.#S ??= (e) => this.html(e);
    return this.#S(...e);
  };
  setLayout = (e) => (this.#v = e);
  getLayout = () => this.#v;
  setRenderer = (e) => {
    this.#S = e;
  };
  header = (e, r, s) => {
    if (r === void 0) {
      if (this.#R) {
        this.#R.delete(e);
      } else if (this.#T) {
        delete this.#T[e.toLocaleLowerCase()];
      }
      if (this.finalized) {
        this.res.headers.delete(e);
      }
      return;
    }
    if (s?.append) {
      if (!this.#R) {
        this.#F = false;
        this.#R = new Headers(this.#T);
        this.#T = {};
      }
      this.#R.append(e, r);
    } else {
      if (this.#R) {
        this.#R.set(e, r);
      } else {
        this.#T ??= {};
        this.#T[e.toLowerCase()] = r;
      }
    }
    if (this.finalized) {
      if (s?.append) {
        this.res.headers.append(e, r);
      } else {
        this.res.headers.set(e, r);
      }
    }
  };
  status = (e) => {
    this.#F = false;
    this.#y = e;
  };
  set = (e, r) => {
    this.#w ??= new Map();
    this.#w.set(e, r);
  };
  get = (e) => (this.#w ? this.#w.get(e) : void 0);
  get var() {
    if (!this.#w) {
      return {};
    }
    return Object.fromEntries(this.#w);
  }
  #U(e, r, s) {
    if (this.#F && !s && !r && this.#y === 200) {
      return new Response(e, { headers: this.#T });
    }
    if (r && typeof r !== "number") {
      const s = new Headers(r.headers);
      if (this.#R) {
        this.#R.forEach((e, r) => {
          if (r === "set-cookie") {
            s.append(r, e);
          } else {
            s.set(r, e);
          }
        });
      }
      const o = setHeaders(s, this.#T);
      return new Response(e, { headers: o, status: r.status ?? this.#y });
    }
    const o = typeof r === "number" ? r : this.#y;
    this.#T ??= {};
    this.#R ??= new Headers();
    setHeaders(this.#R, this.#T);
    if (this.#D) {
      this.#D.headers.forEach((e, r) => {
        if (r === "set-cookie") {
          this.#R?.append(r, e);
        } else {
          this.#R?.set(r, e);
        }
      });
      setHeaders(this.#R, this.#T);
    }
    s ??= {};
    for (const [e, r] of Object.entries(s)) {
      if (typeof r === "string") {
        this.#R.set(e, r);
      } else {
        this.#R.delete(e);
        for (const s of r) {
          this.#R.append(e, s);
        }
      }
    }
    return new Response(e, { status: o, headers: this.#R });
  }
  newResponse = (...e) => this.#U(...e);
  body = (e, r, s) => (typeof r === "number" ? this.#U(e, r, s) : this.#U(e, r));
  text = (e, r, s) => {
    if (!this.#T) {
      if (this.#F && !s && !r) {
        return new Response(e);
      }
      this.#T = {};
    }
    this.#T["content-type"] = TEXT_PLAIN;
    if (typeof r === "number") {
      return this.#U(e, r, s);
    }
    return this.#U(e, r);
  };
  json = (e, r, s) => {
    const o = JSON.stringify(e);
    this.#T ??= {};
    this.#T["content-type"] = "application/json";
    return typeof r === "number" ? this.#U(o, r, s) : this.#U(o, r);
  };
  html = (e, r, s) => {
    this.#T ??= {};
    this.#T["content-type"] = "text/html; charset=UTF-8";
    if (typeof e === "object") {
      return resolveCallback(e, HtmlEscapedCallbackPhase.Stringify, false, {}).then((e) => (typeof r === "number" ? this.#U(e, r, s) : this.#U(e, r)));
    }
    return typeof r === "number" ? this.#U(e, r, s) : this.#U(e, r);
  };
  redirect = (e, r) => {
    this.#R ??= new Headers();
    this.#R.set("Location", String(e));
    return this.newResponse(null, r ?? 302);
  };
  notFound = () => {
    this.#N ??= () => new Response();
    return this.#N(this);
  };
};
var compose = (e, r, s) => (o, n) => {
  let i = -1;
  const a = o instanceof Context;
  return dispatch(0);
  async function dispatch(l) {
    if (l <= i) {
      throw new Error("next() called multiple times");
    }
    i = l;
    let d;
    let h = false;
    let p;
    if (e[l]) {
      p = e[l][0][0];
      if (a) {
        o.req.routeIndex = l;
      }
    } else {
      p = (l === e.length && n) || void 0;
    }
    if (!p) {
      if (a && o.finalized === false && s) {
        d = await s(o);
      }
    } else {
      try {
        d = await p(o, () => dispatch(l + 1));
      } catch (e) {
        if (e instanceof Error && a && r) {
          o.error = e;
          d = await r(e, o);
          h = true;
        } else {
          throw e;
        }
      }
    }
    if (d && (o.finalized === false || h)) {
      o.res = d;
    }
    return o;
  }
};
var METHOD_NAME_ALL = "ALL";
var METHOD_NAME_ALL_LOWERCASE = "all";
var METHODS = ["get", "post", "put", "delete", "options", "patch"];
var MESSAGE_MATCHER_IS_ALREADY_BUILT = "Can not add a route since the matcher is already built.";
var UnsupportedPathError = class extends Error {};
var COMPOSED_HANDLER = "__COMPOSED_HANDLER";
var notFoundHandler = (e) => e.text("404 Not Found", 404);
var errorHandler = (e, r) => {
  if ("getResponse" in e) {
    return e.getResponse();
  }
  console.error(e);
  return r.text("Internal Server Error", 500);
};
var hono_base_Hono = class {
  get;
  post;
  put;
  delete;
  options;
  patch;
  all;
  on;
  use;
  router;
  getPath;
  _basePath = "/";
  #O = "/";
  routes = [];
  constructor(e = {}) {
    const r = [...METHODS, METHOD_NAME_ALL_LOWERCASE];
    r.forEach((e) => {
      this[e] = (r, ...s) => {
        if (typeof r === "string") {
          this.#O = r;
        } else {
          this.#G(e, this.#O, r);
        }
        s.forEach((r) => {
          this.#G(e, this.#O, r);
        });
        return this;
      };
    });
    this.on = (e, r, ...s) => {
      for (const o of [r].flat()) {
        this.#O = o;
        for (const r of [e].flat()) {
          s.map((e) => {
            this.#G(r.toUpperCase(), this.#O, e);
          });
        }
      }
      return this;
    };
    this.use = (e, ...r) => {
      if (typeof e === "string") {
        this.#O = e;
      } else {
        this.#O = "*";
        r.unshift(e);
      }
      r.forEach((e) => {
        this.#G(METHOD_NAME_ALL, this.#O, e);
      });
      return this;
    };
    const s = e.strict ?? true;
    delete e.strict;
    Object.assign(this, e);
    this.getPath = s ? (e.getPath ?? getPath) : getPathNoStrict;
  }
  #P() {
    const e = new hono_base_Hono({ router: this.router, getPath: this.getPath });
    e.routes = this.routes;
    return e;
  }
  #N = notFoundHandler;
  errorHandler = errorHandler;
  route(e, r) {
    const s = this.basePath(e);
    r.routes.map((e) => {
      let o;
      if (r.errorHandler === errorHandler) {
        o = e.handler;
      } else {
        o = async (s, o) => (await compose([], r.errorHandler)(s, () => e.handler(s, o))).res;
        o[COMPOSED_HANDLER] = e.handler;
      }
      s.#G(e.method, e.path, o);
    });
    return this;
  }
  basePath(e) {
    const r = this.#P();
    r._basePath = mergePath(this._basePath, e);
    return r;
  }
  onError = (e) => {
    this.errorHandler = e;
    return this;
  };
  notFound = (e) => {
    this.#N = e;
    return this;
  };
  mount(e, r, s) {
    let o;
    let n;
    if (s) {
      if (typeof s === "function") {
        n = s;
      } else {
        n = s.optionHandler;
        o = s.replaceRequest;
      }
    }
    const i = n
      ? (e) => {
          const r = n(e);
          return Array.isArray(r) ? r : [r];
        }
      : (e) => {
          let r = void 0;
          try {
            r = e.executionCtx;
          } catch {}
          return [e.env, r];
        };
    o ||= (() => {
      const r = mergePath(this._basePath, e);
      const s = r === "/" ? 0 : r.length;
      return (e) => {
        const r = new URL(e.url);
        r.pathname = r.pathname.slice(s) || "/";
        return new Request(r, e);
      };
    })();
    const handler = async (e, s) => {
      const n = await r(o(e.req.raw), ...i(e));
      if (n) {
        return n;
      }
      await s();
    };
    this.#G(METHOD_NAME_ALL, mergePath(e, "*"), handler);
    return this;
  }
  #G(e, r, s) {
    e = e.toUpperCase();
    r = mergePath(this._basePath, r);
    const o = { path: r, method: e, handler: s };
    this.router.add(e, r, [s, o]);
    this.routes.push(o);
  }
  #L(e, r) {
    if (e instanceof Error) {
      return this.errorHandler(e, r);
    }
    throw e;
  }
  #_(e, r, s, o) {
    if (o === "HEAD") {
      return (async () => new Response(null, await this.#_(e, r, s, "GET")))();
    }
    const n = this.getPath(e, { env: s });
    const i = this.router.match(o, n);
    const a = new Context(e, { path: n, matchResult: i, env: s, executionCtx: r, notFoundHandler: this.#N });
    if (i[0].length === 1) {
      let e;
      try {
        e = i[0][0][0][0](a, async () => {
          a.res = await this.#N(a);
        });
      } catch (e) {
        return this.#L(e, a);
      }
      return e instanceof Promise ? e.then((e) => e || (a.finalized ? a.res : this.#N(a))).catch((e) => this.#L(e, a)) : (e ?? this.#N(a));
    }
    const l = compose(i[0], this.errorHandler, this.#N);
    return (async () => {
      try {
        const e = await l(a);
        if (!e.finalized) {
          throw new Error("Context is not finalized. Did you forget to return a Response object or `await next()`?");
        }
        return e.res;
      } catch (e) {
        return this.#L(e, a);
      }
    })();
  }
  fetch = (e, ...r) => this.#_(e, r[1], r[0], e.method);
  request = (e, r, s, o) => {
    if (e instanceof Request) {
      return this.fetch(r ? new Request(e, r) : e, s, o);
    }
    e = e.toString();
    return this.fetch(new Request(/^https?:\/\//.test(e) ? e : `http://localhost${mergePath("/", e)}`, r), s, o);
  };
  fire = () => {
    addEventListener("fetch", (e) => {
      e.respondWith(this.#_(e.request, e, void 0, e.request.method));
    });
  };
};
var LABEL_REG_EXP_STR = "[^/]+";
var ONLY_WILDCARD_REG_EXP_STR = ".*";
var TAIL_WILDCARD_REG_EXP_STR = "(?:|/.*)";
var PATH_ERROR = Symbol();
var regExpMetaChars = new Set(".\\+*[^]$()");
function compareKey(e, r) {
  if (e.length === 1) {
    return r.length === 1 ? (e < r ? -1 : 1) : -1;
  }
  if (r.length === 1) {
    return 1;
  }
  if (e === ONLY_WILDCARD_REG_EXP_STR || e === TAIL_WILDCARD_REG_EXP_STR) {
    return 1;
  } else if (r === ONLY_WILDCARD_REG_EXP_STR || r === TAIL_WILDCARD_REG_EXP_STR) {
    return -1;
  }
  if (e === LABEL_REG_EXP_STR) {
    return 1;
  } else if (r === LABEL_REG_EXP_STR) {
    return -1;
  }
  return e.length === r.length ? (e < r ? -1 : 1) : r.length - e.length;
}
var Node = class {
  #M;
  #x;
  #H = Object.create(null);
  insert(e, r, s, o, n) {
    if (e.length === 0) {
      if (this.#M !== void 0) {
        throw PATH_ERROR;
      }
      if (n) {
        return;
      }
      this.#M = r;
      return;
    }
    const [i, ...a] = e;
    const l =
      i === "*"
        ? a.length === 0
          ? ["", "", ONLY_WILDCARD_REG_EXP_STR]
          : ["", "", LABEL_REG_EXP_STR]
        : i === "/*"
          ? ["", "", TAIL_WILDCARD_REG_EXP_STR]
          : i.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
    let d;
    if (l) {
      const e = l[1];
      let r = l[2] || LABEL_REG_EXP_STR;
      if (e && l[2]) {
        r = r.replace(/^\((?!\?:)(?=[^)]+\)$)/, "(?:");
        if (/\((?!\?:)/.test(r)) {
          throw PATH_ERROR;
        }
      }
      d = this.#H[r];
      if (!d) {
        if (Object.keys(this.#H).some((e) => e !== ONLY_WILDCARD_REG_EXP_STR && e !== TAIL_WILDCARD_REG_EXP_STR)) {
          throw PATH_ERROR;
        }
        if (n) {
          return;
        }
        d = this.#H[r] = new Node();
        if (e !== "") {
          d.#x = o.varIndex++;
        }
      }
      if (!n && e !== "") {
        s.push([e, d.#x]);
      }
    } else {
      d = this.#H[i];
      if (!d) {
        if (Object.keys(this.#H).some((e) => e.length > 1 && e !== ONLY_WILDCARD_REG_EXP_STR && e !== TAIL_WILDCARD_REG_EXP_STR)) {
          throw PATH_ERROR;
        }
        if (n) {
          return;
        }
        d = this.#H[i] = new Node();
      }
    }
    d.insert(a, r, s, o, n);
  }
  buildRegExpStr() {
    const e = Object.keys(this.#H).sort(compareKey);
    const r = e.map((e) => {
      const r = this.#H[e];
      return (typeof r.#x === "number" ? `(${e})@${r.#x}` : regExpMetaChars.has(e) ? `\\${e}` : e) + r.buildRegExpStr();
    });
    if (typeof this.#M === "number") {
      r.unshift(`#${this.#M}`);
    }
    if (r.length === 0) {
      return "";
    }
    if (r.length === 1) {
      return r[0];
    }
    return "(?:" + r.join("|") + ")";
  }
};
var Trie = class {
  #V = { varIndex: 0 };
  #Y = new Node();
  insert(e, r, s) {
    const o = [];
    const n = [];
    for (let r = 0; ; ) {
      let s = false;
      e = e.replace(/\{[^}]+\}/g, (e) => {
        const o = `@\\${r}`;
        n[r] = [o, e];
        r++;
        s = true;
        return o;
      });
      if (!s) {
        break;
      }
    }
    const i = e.match(/(?::[^\/]+)|(?:\/\*$)|./g) || [];
    for (let e = n.length - 1; e >= 0; e--) {
      const [r] = n[e];
      for (let s = i.length - 1; s >= 0; s--) {
        if (i[s].indexOf(r) !== -1) {
          i[s] = i[s].replace(r, n[e][1]);
          break;
        }
      }
    }
    this.#Y.insert(i, r, o, this.#V, s);
    return o;
  }
  buildRegExp() {
    let e = this.#Y.buildRegExpStr();
    if (e === "") {
      return [/^$/, [], []];
    }
    let r = 0;
    const s = [];
    const o = [];
    e = e.replace(/#(\d+)|@(\d+)|\.\*\$/g, (e, n, i) => {
      if (n !== void 0) {
        s[++r] = Number(n);
        return "$()";
      }
      if (i !== void 0) {
        o[Number(i)] = ++r;
        return "";
      }
      return "";
    });
    return [new RegExp(`^${e}`), s, o];
  }
};
var emptyParam = [];
var nullMatcher = [/^$/, [], Object.create(null)];
var wildcardRegExpCache = Object.create(null);
function buildWildcardRegExp(e) {
  return (wildcardRegExpCache[e] ??= new RegExp(e === "*" ? "" : `^${e.replace(/\/\*$|([.\\+*[^\]$()])/g, (e, r) => (r ? `\\${r}` : "(?:|/.*)"))}$`));
}
function clearWildcardRegExpCache() {
  wildcardRegExpCache = Object.create(null);
}
function buildMatcherFromPreprocessedRoutes(e) {
  const r = new Trie();
  const s = [];
  if (e.length === 0) {
    return nullMatcher;
  }
  const o = e.map((e) => [!/\*|\/:/.test(e[0]), ...e]).sort(([e, r], [s, o]) => (e ? 1 : s ? -1 : r.length - o.length));
  const n = Object.create(null);
  for (let e = 0, i = -1, a = o.length; e < a; e++) {
    const [a, l, d] = o[e];
    if (a) {
      n[l] = [d.map(([e]) => [e, Object.create(null)]), emptyParam];
    } else {
      i++;
    }
    let h;
    try {
      h = r.insert(l, i, a);
    } catch (e) {
      throw e === PATH_ERROR ? new UnsupportedPathError(l) : e;
    }
    if (a) {
      continue;
    }
    s[i] = d.map(([e, r]) => {
      const s = Object.create(null);
      r -= 1;
      for (; r >= 0; r--) {
        const [e, o] = h[r];
        s[e] = o;
      }
      return [e, s];
    });
  }
  const [i, a, l] = r.buildRegExp();
  for (let e = 0, r = s.length; e < r; e++) {
    for (let r = 0, o = s[e].length; r < o; r++) {
      const o = s[e][r]?.[1];
      if (!o) {
        continue;
      }
      const n = Object.keys(o);
      for (let e = 0, r = n.length; e < r; e++) {
        o[n[e]] = l[o[n[e]]];
      }
    }
  }
  const d = [];
  for (const e in a) {
    d[e] = s[a[e]];
  }
  return [i, d, n];
}
function findMiddleware(e, r) {
  if (!e) {
    return void 0;
  }
  for (const s of Object.keys(e).sort((e, r) => r.length - e.length)) {
    if (buildWildcardRegExp(s).test(r)) {
      return [...e[s]];
    }
  }
  return void 0;
}
var RegExpRouter = class {
  name = "RegExpRouter";
  #j;
  #q;
  constructor() {
    this.#j = { [METHOD_NAME_ALL]: Object.create(null) };
    this.#q = { [METHOD_NAME_ALL]: Object.create(null) };
  }
  add(e, r, s) {
    const o = this.#j;
    const n = this.#q;
    if (!o || !n) {
      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);
    }
    if (!o[e]) {
      [o, n].forEach((r) => {
        r[e] = Object.create(null);
        Object.keys(r[METHOD_NAME_ALL]).forEach((s) => {
          r[e][s] = [...r[METHOD_NAME_ALL][s]];
        });
      });
    }
    if (r === "/*") {
      r = "*";
    }
    const i = (r.match(/\/:/g) || []).length;
    if (/\*$/.test(r)) {
      const a = buildWildcardRegExp(r);
      if (e === METHOD_NAME_ALL) {
        Object.keys(o).forEach((e) => {
          o[e][r] ||= findMiddleware(o[e], r) || findMiddleware(o[METHOD_NAME_ALL], r) || [];
        });
      } else {
        o[e][r] ||= findMiddleware(o[e], r) || findMiddleware(o[METHOD_NAME_ALL], r) || [];
      }
      Object.keys(o).forEach((r) => {
        if (e === METHOD_NAME_ALL || e === r) {
          Object.keys(o[r]).forEach((e) => {
            a.test(e) && o[r][e].push([s, i]);
          });
        }
      });
      Object.keys(n).forEach((r) => {
        if (e === METHOD_NAME_ALL || e === r) {
          Object.keys(n[r]).forEach((e) => a.test(e) && n[r][e].push([s, i]));
        }
      });
      return;
    }
    const a = checkOptionalParameter(r) || [r];
    for (let r = 0, l = a.length; r < l; r++) {
      const d = a[r];
      Object.keys(n).forEach((a) => {
        if (e === METHOD_NAME_ALL || e === a) {
          n[a][d] ||= [...(findMiddleware(o[a], d) || findMiddleware(o[METHOD_NAME_ALL], d) || [])];
          n[a][d].push([s, i - l + r + 1]);
        }
      });
    }
  }
  match(e, r) {
    clearWildcardRegExpCache();
    const s = this.#J();
    this.match = (e, r) => {
      const o = s[e] || s[METHOD_NAME_ALL];
      const n = o[2][r];
      if (n) {
        return n;
      }
      const i = r.match(o[0]);
      if (!i) {
        return [[], emptyParam];
      }
      const a = i.indexOf("", 1);
      return [o[1][a], i];
    };
    return this.match(e, r);
  }
  #J() {
    const e = Object.create(null);
    Object.keys(this.#q)
      .concat(Object.keys(this.#j))
      .forEach((r) => {
        e[r] ||= this.#W(r);
      });
    this.#j = this.#q = void 0;
    return e;
  }
  #W(e) {
    const r = [];
    let s = e === METHOD_NAME_ALL;
    [this.#j, this.#q].forEach((o) => {
      const n = o[e] ? Object.keys(o[e]).map((r) => [r, o[e][r]]) : [];
      if (n.length !== 0) {
        s ||= true;
        r.push(...n);
      } else if (e !== METHOD_NAME_ALL) {
        r.push(...Object.keys(o[METHOD_NAME_ALL]).map((e) => [e, o[METHOD_NAME_ALL][e]]));
      }
    });
    if (!s) {
      return null;
    } else {
      return buildMatcherFromPreprocessedRoutes(r);
    }
  }
};
var SmartRouter = class {
  name = "SmartRouter";
  #K = [];
  #q = [];
  constructor(e) {
    this.#K = e.routers;
  }
  add(e, r, s) {
    if (!this.#q) {
      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);
    }
    this.#q.push([e, r, s]);
  }
  match(e, r) {
    if (!this.#q) {
      throw new Error("Fatal error");
    }
    const s = this.#K;
    const o = this.#q;
    const n = s.length;
    let i = 0;
    let a;
    for (; i < n; i++) {
      const n = s[i];
      try {
        for (let e = 0, r = o.length; e < r; e++) {
          n.add(...o[e]);
        }
        a = n.match(e, r);
      } catch (e) {
        if (e instanceof UnsupportedPathError) {
          continue;
        }
        throw e;
      }
      this.match = n.match.bind(n);
      this.#K = [n];
      this.#q = void 0;
      break;
    }
    if (i === n) {
      throw new Error("Fatal error");
    }
    this.name = `SmartRouter + ${this.activeRouter.name}`;
    return a;
  }
  get activeRouter() {
    if (this.#q || this.#K.length !== 1) {
      throw new Error("No active router has been determined yet.");
    }
    return this.#K[0];
  }
};
var emptyParams = Object.create(null);
var node_Node = class {
  #X;
  #H;
  #z;
  #Z = 0;
  #$ = emptyParams;
  constructor(e, r, s) {
    this.#H = s || Object.create(null);
    this.#X = [];
    if (e && r) {
      const s = Object.create(null);
      s[e] = { handler: r, possibleKeys: [], score: 0 };
      this.#X = [s];
    }
    this.#z = [];
  }
  insert(e, r, s) {
    this.#Z = ++this.#Z;
    let o = this;
    const n = splitRoutingPath(r);
    const i = [];
    for (let e = 0, r = n.length; e < r; e++) {
      const r = n[e];
      if (Object.keys(o.#H).includes(r)) {
        o = o.#H[r];
        const e = getPattern(r);
        if (e) {
          i.push(e[1]);
        }
        continue;
      }
      o.#H[r] = new node_Node();
      const s = getPattern(r);
      if (s) {
        o.#z.push(s);
        i.push(s[1]);
      }
      o = o.#H[r];
    }
    const a = Object.create(null);
    const l = { handler: s, possibleKeys: i.filter((e, r, s) => s.indexOf(e) === r), score: this.#Z };
    a[e] = l;
    o.#X.push(a);
    return o;
  }
  #ee(e, r, s, o) {
    const n = [];
    for (let i = 0, a = e.#X.length; i < a; i++) {
      const a = e.#X[i];
      const l = a[r] || a[METHOD_NAME_ALL];
      const d = {};
      if (l !== void 0) {
        l.params = Object.create(null);
        n.push(l);
        if (s !== emptyParams || (o && o !== emptyParams)) {
          for (let e = 0, r = l.possibleKeys.length; e < r; e++) {
            const r = l.possibleKeys[e];
            const n = d[l.score];
            l.params[r] = o?.[r] && !n ? o[r] : (s[r] ?? o?.[r]);
            d[l.score] = true;
          }
        }
      }
    }
    return n;
  }
  search(e, r) {
    const s = [];
    this.#$ = emptyParams;
    const o = this;
    let n = [o];
    const i = splitPath(r);
    for (let r = 0, o = i.length; r < o; r++) {
      const a = i[r];
      const l = r === o - 1;
      const d = [];
      for (let o = 0, h = n.length; o < h; o++) {
        const h = n[o];
        const p = h.#H[a];
        if (p) {
          p.#$ = h.#$;
          if (l) {
            if (p.#H["*"]) {
              s.push(...this.#ee(p.#H["*"], e, h.#$));
            }
            s.push(...this.#ee(p, e, h.#$));
          } else {
            d.push(p);
          }
        }
        for (let o = 0, n = h.#z.length; o < n; o++) {
          const n = h.#z[o];
          const p = h.#$ === emptyParams ? {} : { ...h.#$ };
          if (n === "*") {
            const r = h.#H["*"];
            if (r) {
              s.push(...this.#ee(r, e, h.#$));
              d.push(r);
            }
            continue;
          }
          if (a === "") {
            continue;
          }
          const [w, k, _] = n;
          const M = h.#H[w];
          const j = i.slice(r).join("/");
          if (_ instanceof RegExp && _.test(j)) {
            p[k] = j;
            s.push(...this.#ee(M, e, h.#$, p));
            continue;
          }
          if (_ === true || _.test(a)) {
            p[k] = a;
            if (l) {
              s.push(...this.#ee(M, e, p, h.#$));
              if (M.#H["*"]) {
                s.push(...this.#ee(M.#H["*"], e, p, h.#$));
              }
            } else {
              M.#$ = p;
              d.push(M);
            }
          }
        }
      }
      n = d;
    }
    if (s.length > 1) {
      s.sort((e, r) => e.score - r.score);
    }
    return [s.map(({ handler: e, params: r }) => [e, r])];
  }
};
var TrieRouter = class {
  name = "TrieRouter";
  #te;
  constructor() {
    this.#te = new node_Node();
  }
  add(e, r, s) {
    const o = checkOptionalParameter(r);
    if (o) {
      for (let r = 0, n = o.length; r < n; r++) {
        this.#te.insert(e, o[r], s);
      }
      return;
    }
    this.#te.insert(e, r, s);
  }
  match(e, r) {
    return this.#te.search(e, r);
  }
};
var hono_Hono = class extends hono_base_Hono {
  constructor(e = {}) {
    super(e);
    this.router = e.router ?? new SmartRouter({ routers: [new RegExpRouter(), new TrieRouter()] });
  }
};
var http_exception_HTTPException = class extends Error {
  res;
  status;
  constructor(e = 500, r) {
    super(r?.message, { cause: r?.cause });
    this.res = r?.res;
    this.status = e;
  }
  getResponse() {
    if (this.res) {
      const e = new Response(this.res.body, { status: this.status, headers: this.res.headers });
      return e;
    }
    return new Response(this.message, { status: this.status });
  }
};
var PluginRuntimeInfo = class _PluginRuntimeInfo {
  static _instance = null;
  _env = {};
  constructor(e) {
    if (e) {
      this._env = e;
    }
  }
  static getInstance(e) {
    if (!_PluginRuntimeInfo._instance) {
      switch (getRuntimeKey()) {
        case "workerd":
          _PluginRuntimeInfo._instance = new CfRuntimeInfo(e);
          break;
        case "deno":
          _PluginRuntimeInfo._instance = new DenoRuntimeInfo(e);
          break;
        case "node":
          _PluginRuntimeInfo._instance = new NodeRuntimeInfo(e);
          break;
        default:
          _PluginRuntimeInfo._instance = new NodeRuntimeInfo(e);
          break;
      }
    }
    return _PluginRuntimeInfo._instance;
  }
};
var CfRuntimeInfo = class extends PluginRuntimeInfo {
  get version() {
    return this._env.CLOUDFLARE_VERSION_METADATA?.id ?? "CLOUDFLARE_VERSION_METADATA";
  }
  get runUrl() {
    const e = this._env.CLOUDFLARE_ACCOUNT_ID ?? "<missing-cloudflare-account-id>";
    const r = this._env.CLOUDFLARE_WORKER_NAME;
    const s = Date.now() + 6e4;
    const o = Date.now() - 6e4;
    const n = encodeURIComponent(`{"type":"absolute","to":${s},"from":${o}}`);
    return `https://dash.cloudflare.com/${e}/workers/services/view/${r}/production/observability/logs?granularity=0&time=${n}`;
  }
};
var NodeRuntimeInfo = class extends PluginRuntimeInfo {
  get version() {
    return github.context.sha;
  }
  get runUrl() {
    return github.context.payload.repository ? `${github.context.payload.repository?.html_url}/actions/runs/${github.context.runId}` : "http://localhost";
  }
};
var DenoRuntimeInfo = class extends PluginRuntimeInfo {
  get version() {
    return Deno.env.get("DENO_DEPLOYMENT_ID");
  }
  get runUrl() {
    const e = Deno.env.get("DENO_PROJECT_NAME");
    const r = `https://dash.deno.com/projects/${e}/logs`;
    const s = new Date(Date.now() - 6e4).toISOString();
    const o = new Date(Date.now() + 6e4).toISOString();
    const n = {
      query: "",
      timeRangeOption: "custom",
      recentValue: "1hour",
      customValues: { start: s, end: o },
      logLevels: { debug: true, info: true, warning: true, error: true },
      regions: {
        "gcp-asia-southeast1": true,
        "gcp-europe-west2": true,
        "gcp-europe-west3": true,
        "gcp-southamerica-east1": true,
        "gcp-us-east4": true,
        "gcp-us-west2": true,
      },
    };
    const i = encodeURIComponent(JSON.stringify(n));
    return `${r}?filters=${i}`;
  }
};
var KERNEL_PUBLIC_KEY = `-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs96DOU+JqM8SyNXOB6u3\nuBKIFiyrcST/LZTYN6y7LeJlyCuGPqSDrWCfjU9Ph5PLf9TWiNmeM8DGaOpwEFC7\nU3NRxOSglo4plnQ5zRwIHHXvxyK400sQP2oISXymISuBQWjEIqkC9DybQrKwNzf+\nI0JHWPqmwMIw26UvVOtXGOOWBqTkk+N2+/9f8eDIJP5QQVwwszc8s1rXOsLMlVIf\nwShw7GO4E2jyK8TSJKpyjV8eb1JJMDwFhPiRrtZfQJUtDf2mV/67shQww61BH2Y/\nPlnalo58kWIbkqZoq1yJrL5sFb73osM5+vADTXVn79bkvea7W19nSkdMiarYt4Hq\nJQIDAQAB\n-----END PUBLIC KEY-----\n`;
function sanitizeMetadata(e) {
  return JSON.stringify(e, null, 2).replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/--/g, "&#45;&#45;");
}
function getPluginOptions(e) {
  return {
    kernelPublicKey: e?.kernelPublicKey || KERNEL_PUBLIC_KEY,
    logLevel: e?.logLevel || LOG_LEVEL.INFO,
    postCommentOnError: e?.postCommentOnError ?? true,
    settingsSchema: e?.settingsSchema,
    envSchema: e?.envSchema,
    commandSchema: e?.commandSchema,
    bypassSignatureVerification: e?.bypassSignatureVerification || false,
  };
}
var CommentHandler = class _CommentHandler {
  static HEADER_NAME = "UbiquityOS";
  _lastCommentId = { reviewCommentId: null, issueCommentId: null };
  async _updateIssueComment(e, r) {
    if (!this._lastCommentId.issueCommentId) {
      throw e.logger.error("issueCommentId is missing");
    }
    const s = await e.octokit.rest.issues.updateComment({ owner: r.owner, repo: r.repo, comment_id: this._lastCommentId.issueCommentId, body: r.body });
    return { ...s.data, issueNumber: r.issueNumber };
  }
  async _updateReviewComment(e, r) {
    if (!this._lastCommentId.reviewCommentId) {
      throw e.logger.error("reviewCommentId is missing");
    }
    const s = await e.octokit.rest.pulls.updateReviewComment({ owner: r.owner, repo: r.repo, comment_id: this._lastCommentId.reviewCommentId, body: r.body });
    return { ...s.data, issueNumber: r.issueNumber };
  }
  async _createNewComment(e, r) {
    if (r.commentId) {
      const s = await e.octokit.rest.pulls.createReplyForReviewComment({
        owner: r.owner,
        repo: r.repo,
        pull_number: r.issueNumber,
        comment_id: r.commentId,
        body: r.body,
      });
      this._lastCommentId.reviewCommentId = s.data.id;
      return { ...s.data, issueNumber: r.issueNumber };
    }
    const s = await e.octokit.rest.issues.createComment({ owner: r.owner, repo: r.repo, issue_number: r.issueNumber, body: r.body });
    this._lastCommentId.issueCommentId = s.data.id;
    return { ...s.data, issueNumber: r.issueNumber };
  }
  _getIssueNumber(e) {
    if ("issue" in e.payload) return e.payload.issue.number;
    if ("pull_request" in e.payload) return e.payload.pull_request.number;
    if ("discussion" in e.payload) return e.payload.discussion.number;
    return void 0;
  }
  _getCommentId(e) {
    return "pull_request" in e.payload && "comment" in e.payload ? e.payload.comment.id : void 0;
  }
  _extractIssueContext(e) {
    if (!("repository" in e.payload) || !e.payload.repository?.owner?.login) {
      return null;
    }
    const r = this._getIssueNumber(e);
    if (!r) return null;
    return { issueNumber: r, commentId: this._getCommentId(e), owner: e.payload.repository.owner.login, repo: e.payload.repository.name };
  }
  _processMessage(e, r) {
    if (r instanceof Error) {
      const s = { message: r.message, name: r.name, stack: r.stack };
      return { metadata: s, logMessage: e.logger.error(r.message).logMessage };
    }
    const s = r.metadata
      ? {
          ...r.metadata,
          message: r.metadata.message,
          stack: r.metadata.stack || r.metadata.error?.stack,
          caller: r.metadata.caller || r.metadata.error?.stack?.split("\n")[2]?.match(/at (\S+)/)?.[1],
        }
      : { ...r };
    return { metadata: s, logMessage: r.logMessage };
  }
  _getInstigatorName(e) {
    if ("installation" in e.payload && e.payload.installation && "account" in e.payload.installation && e.payload.installation?.account?.name) {
      return e.payload.installation?.account?.name;
    }
    return e.payload.sender?.login || _CommentHandler.HEADER_NAME;
  }
  _createMetadataContent(e, r) {
    const s = sanitizeMetadata(r);
    const o = this._getInstigatorName(e);
    const n = PluginRuntimeInfo.getInstance().runUrl;
    const i = PluginRuntimeInfo.getInstance().version;
    const a = r.caller || "anonymous";
    return { header: `\x3c!-- ${_CommentHandler.HEADER_NAME} - ${a} - ${i} - @${o} - ${n}`, jsonPretty: s };
  }
  _formatMetadataContent(e, r, s) {
    const o = ["```json", s, "```"].join("\n");
    const n = [r, s, "--\x3e"].join("\n");
    return e?.type === "fatal" ? [o, n].join("\n") : n;
  }
  createCommentBody(e, r, s) {
    return this._createCommentBody(e, r, s);
  }
  _createCommentBody(e, r, s) {
    const { metadata: o, logMessage: n } = this._processMessage(e, r);
    const { header: i, jsonPretty: a } = this._createMetadataContent(e, o);
    const l = this._formatMetadataContent(n, i, a);
    return `${s?.raw ? n?.raw : n?.diff}\n\n${l}\n`;
  }
  async postComment(e, r, s = { updateComment: true, raw: false }) {
    const o = this._extractIssueContext(e);
    if (!o) {
      e.logger.info("Cannot post comment: missing issue context in payload");
      return null;
    }
    const n = this._createCommentBody(e, r, s);
    const { issueNumber: i, commentId: a, owner: l, repo: d } = o;
    const h = { owner: l, repo: d, body: n, issueNumber: i };
    if (s.updateComment) {
      if (this._lastCommentId.issueCommentId && !("pull_request" in e.payload && "comment" in e.payload)) {
        return this._updateIssueComment(e, h);
      }
      if (this._lastCommentId.reviewCommentId && "pull_request" in e.payload && "comment" in e.payload) {
        return this._updateReviewComment(e, h);
      }
    }
    return this._createNewComment(e, { ...h, commentId: a });
  }
};
function transformError(e, r) {
  let s;
  if (r instanceof AggregateError) {
    s = e.logger.error(
      r.errors
        .map((e) => {
          if (e instanceof LogReturn) {
            return e.logMessage.raw;
          } else if (e instanceof Error) {
            return e.message;
          } else {
            return e;
          }
        })
        .join("\n\n"),
      { error: r }
    );
  } else if (r instanceof Error || r instanceof LogReturn) {
    s = r;
  } else {
    s = e.logger.error(String(r));
  }
  return s;
}
function getCommand(e, r) {
  let s = null;
  if (e.command && r.commandSchema) {
    try {
      s = Decode(r.commandSchema, default_Default(r.commandSchema, e.command));
    } catch (s) {
      console.dir(...Errors(r.commandSchema, e.command), { depth: null });
      throw s;
    }
  } else if (e.command) {
    s = e.command;
  }
  return s;
}
function compressString(e) {
  const r = Buffer.from(e, "utf8");
  const s = (0, brotli.compress)(r);
  return Buffer.from(s).toString("base64");
}
function decompressString(e) {
  const r = Buffer.from(e, "base64");
  const s = (0, brotli.decompress)(r);
  return Buffer.from(s).toString("utf8");
}
var defaultOptions = {
  throttle: {
    onAbuseLimit: (e, r, s) => {
      s.log.warn(`Abuse limit hit with "${r.method} ${r.url}", retrying in ${e} seconds.`);
      return true;
    },
    onRateLimit: (e, r, s) => {
      s.log.warn(`Rate limit hit with "${r.method} ${r.url}", retrying in ${e} seconds.`);
      return true;
    },
    onSecondaryRateLimit: (e, r, s) => {
      s.log.warn(`Secondary rate limit hit with "${r.method} ${r.url}", retrying in ${e} seconds.`);
      return true;
    },
  },
};
var customOctokit = Octokit.plugin(throttling, retry, paginateRest, restEndpointMethods, paginateGraphQL).defaults((e) => ({ ...defaultOptions, ...e }));
async function verifySignature(e, r, s) {
  try {
    const o = {
      stateId: r.stateId,
      eventName: r.eventName,
      eventPayload: r.eventPayload,
      settings: r.settings,
      authToken: r.authToken,
      ref: r.ref,
      command: r.command,
    };
    const n = e.replace("-----BEGIN PUBLIC KEY-----", "").replace("-----END PUBLIC KEY-----", "").trim();
    const i = Uint8Array.from(atob(n), (e) => e.charCodeAt(0));
    const a = await crypto.subtle.importKey("spki", i, { name: "RSASSA-PKCS1-v1_5", hash: "SHA-256" }, true, ["verify"]);
    const l = Uint8Array.from(atob(s), (e) => e.charCodeAt(0));
    const d = new TextEncoder().encode(JSON.stringify(o));
    return await crypto.subtle.verify("RSASSA-PKCS1-v1_5", a, l, d);
  } catch (e) {
    console.error(e);
    return false;
  }
}
var commandCallSchema = Type.Union([Type.Null(), Type.Object({ name: Type.String(), parameters: Type.Unknown() })]);
function jsonType(e, r = false) {
  return Type.Transform(Type.String())
    .Decode((s) => {
      const o = JSON.parse(r ? decompressString(s) : s);
      return Decode(e, default_Default(e, o));
    })
    .Encode((e) => JSON.stringify(e));
}
var inputSchema = Type.Object({
  stateId: Type.String(),
  eventName: Type.String(),
  eventPayload: jsonType(Type.Record(Type.String(), Type.Any()), true),
  command: jsonType(commandCallSchema),
  authToken: Type.String(),
  settings: jsonType(Type.Record(Type.String(), Type.Any())),
  ref: Type.String(),
  signature: Type.String(),
});
(0, main.config)();
async function handleError(e, r, s) {
  console.error(s);
  const o = transformError(e, s);
  if (o instanceof LogReturn) {
    core.setFailed(o.logMessage.diff);
  } else if (o instanceof Error) {
    core.setFailed(o);
  }
  if (r.postCommentOnError && o) {
    await e.commentHandler.postComment(e, o);
  }
}
async function createActionsPlugin(e, r) {
  const s = getPluginOptions(r);
  const o = process.env.PLUGIN_GITHUB_TOKEN;
  if (!o) {
    core.setFailed("Error: PLUGIN_GITHUB_TOKEN env is not set");
    return;
  }
  const n = github.context.payload.inputs;
  const i = [...Errors(inputSchema, n)];
  if (i.length) {
    console.dir(i, { depth: null });
    core.setFailed(`Error: Invalid inputs payload: ${i.map((e) => e.message).join(", ")}`);
    return;
  }
  const a = n.signature;
  if (!s.bypassSignatureVerification && !(await verifySignature(s.kernelPublicKey, n, a))) {
    core.setFailed(`Error: Invalid signature`);
    return;
  }
  const l = Decode(inputSchema, n);
  let d;
  if (s.settingsSchema) {
    try {
      d = Decode(s.settingsSchema, default_Default(s.settingsSchema, l.settings));
    } catch (e) {
      console.dir(...Errors(s.settingsSchema, l.settings), { depth: null });
      core.setFailed(`Error: Invalid settings provided.`);
      throw e;
    }
  } else {
    d = l.settings;
  }
  let h;
  if (s.envSchema) {
    try {
      h = Decode(s.envSchema, default_Default(s.envSchema, process.env));
    } catch (e) {
      console.dir(...Errors(s.envSchema, process.env), { depth: null });
      core.setFailed(`Error: Invalid environment provided.`);
      throw e;
    }
  } else {
    h = process.env;
  }
  const p = getCommand(l, s);
  const w = {
    eventName: l.eventName,
    payload: l.eventPayload,
    command: p,
    octokit: new customOctokit({ auth: l.authToken }),
    config: d,
    env: h,
    logger: new Logs(s.logLevel),
    commentHandler: new CommentHandler(),
  };
  try {
    const r = await e(w);
    core.setOutput("result", r);
    await returnDataToKernel(o, l.stateId, r);
  } catch (e) {
    await handleError(w, s, e);
  }
}
async function returnDataToKernel(e, r, s) {
  const o = new customOctokit({ auth: e });
  await o.rest.repos.createDispatchEvent({
    owner: github.context.repo.owner,
    repo: github.context.repo.repo,
    event_type: "return-data-to-ubiquity-os-kernel",
    client_payload: { state_id: r, output: s ? compressString(JSON.stringify(s)) : null },
  });
}
async function handleError2(e, r, s) {
  console.error(s);
  const o = transformError(e, s);
  if (r.postCommentOnError && o) {
    await e.commentHandler.postComment(e, o);
  }
  throw new HTTPException(500, { message: "Unexpected error" });
}
function createPlugin(e, r, s) {
  const o = getPluginOptions(s);
  const n = new Hono();
  n.get("/manifest.json", (e) => e.json(r));
  n.post("/", async function appPost(r) {
    if (r.req.header("content-type") !== "application/json") {
      throw new HTTPException(400, { message: "Content-Type must be application/json" });
    }
    const s = await r.req.json();
    const n = [...Value4.Errors(inputSchema, s)];
    if (n.length) {
      console.dir(n, { depth: null });
      throw new HTTPException(400, { message: "Invalid body" });
    }
    const i = s.signature;
    if (!o.bypassSignatureVerification && !(await verifySignature(o.kernelPublicKey, s, i))) {
      throw new HTTPException(400, { message: "Invalid signature" });
    }
    const a = Value4.Decode(inputSchema, s);
    let l;
    if (o.settingsSchema) {
      try {
        l = Value4.Decode(o.settingsSchema, Value4.Default(o.settingsSchema, a.settings));
      } catch (e) {
        console.dir(...Value4.Errors(o.settingsSchema, a.settings), { depth: null });
        throw e;
      }
    } else {
      l = a.settings;
    }
    let d;
    const h = honoEnv(r);
    if (o.envSchema) {
      try {
        d = Value4.Decode(o.envSchema, Value4.Default(o.envSchema, h));
      } catch (e) {
        console.dir(...Value4.Errors(o.envSchema, h), { depth: null });
        throw e;
      }
    } else {
      d = r.env;
    }
    const p = new URL(a.ref).hostname.split(".")[0];
    PluginRuntimeInfo.getInstance({ ...d, CLOUDFLARE_WORKER_NAME: p });
    const w = getCommand(a, o);
    const k = {
      eventName: a.eventName,
      payload: a.eventPayload,
      command: w,
      octokit: new customOctokit({ auth: a.authToken }),
      config: l,
      env: d,
      logger: new Logs2(o.logLevel),
      commentHandler: new CommentHandler(),
    };
    try {
      const s = await e(k);
      return r.json({ stateId: a.stateId, output: s ?? {} });
    } catch (e) {
      await handleError2(k, o, e);
    }
  });
  return n;
}
var octokit_defaultOptions = {
  throttle: {
    onAbuseLimit: (e, r, s) => {
      s.log.warn(`Abuse limit hit with "${r.method} ${r.url}", retrying in ${e} seconds.`);
      return true;
    },
    onRateLimit: (e, r, s) => {
      s.log.warn(`Rate limit hit with "${r.method} ${r.url}", retrying in ${e} seconds.`);
      return true;
    },
    onSecondaryRateLimit: (e, r, s) => {
      s.log.warn(`Secondary rate limit hit with "${r.method} ${r.url}", retrying in ${e} seconds.`);
      return true;
    },
  },
};
var octokit_customOctokit = Octokit.plugin(throttling, retry, paginateRest, restEndpointMethods, paginateGraphQL).defaults((e) => ({
  ...octokit_defaultOptions,
  ...e,
}));
async function helloWorld(e) {
  const { logger: r, payload: s } = e;
  const o = s.comment.user?.login;
  const n = s.repository.name;
  const i = s.issue.number;
  const a = s.repository.owner.login;
  const l = s.comment.body;
  const d = e.env.AGENT_OWNER;
  r.info(`Executing helloWorld:`, { sender: o, repo: n, issueNumber: i, owner: a, agentOwner: d });
  if (!l.trim().startsWith(`@${d}`)) {
    r.info(`Comment does not start with @${d}`, { body: l });
    return;
  }
  await e.commentHandler.postComment(e, r.ok("Hello, world!"));
  r.ok(`Successfully created comment!`);
  r.verbose(`Exiting helloWorld`);
}
function isIssueCommentEvent(e) {
  return e.eventName === "issue_comment.created";
}
async function runPlugin(e) {
  const { logger: r, eventName: s } = e;
  if (isIssueCommentEvent(e)) {
    return await helloWorld(e);
  }
  r.error(`Unsupported event: ${s}`);
}
var config = __nccwpck_require__(2874);
const envSchema = Type.Object({
  LOG_LEVEL: Type.Optional(Type.Enum(LOG_LEVEL, { default: LOG_LEVEL.INFO })),
  KERNEL_PUBLIC_KEY: Type.Optional(Type.String()),
  AGENT_OWNER: Type.String(),
  USER_PAT: Type.String(),
});
const pluginSettingsSchema = Type.Object({}, { default: {} });
const action = createActionsPlugin(
  (e) => {
    e.octokit = new octokit_customOctokit({ auth: e.env.USER_PAT });
    return runPlugin(e);
  },
  {
    logLevel: process.env.LOG_LEVEL || LOG_LEVEL.INFO,
    settingsSchema: pluginSettingsSchema,
    envSchema: envSchema,
    ...(process.env.KERNEL_PUBLIC_KEY && { kernelPublicKey: process.env.KERNEL_PUBLIC_KEY }),
    postCommentOnError: true,
    bypassSignatureVerification: process.env.NODE_ENV === "local",
  }
);
var __webpack_exports__default = __webpack_exports__.A;
export { __webpack_exports__default as default };
//# sourceMappingURL=index.js.map
